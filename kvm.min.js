/*! For license information please see kvm.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["ui-toolkit"]=t():e["ui-toolkit"]=t()}(self,(()=>(()=>{var __webpack_modules__={869:module=>{var e;self,e=()=>(()=>{var __webpack_modules__={487:e=>{var t={utf8:{stringToBytes:function(e){return t.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(t.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t},bytesToString:function(e){for(var t=[],n=0;n<e.length;n++)t.push(String.fromCharCode(e[n]));return t.join("")}}};e.exports=t},12:e=>{var t,n;t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&n.rotl(e,8)|4278255360&n.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=n.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],n=0,r=0;n<e.length;n++,r+=8)t[r>>>5]|=e[n]<<24-r%32;return t},wordsToBytes:function(e){for(var t=[],n=0;n<32*e.length;n+=8)t.push(e[n>>>5]>>>24-n%32&255);return t},bytesToHex:function(e){for(var t=[],n=0;n<e.length;n++)t.push((e[n]>>>4).toString(16)),t.push((15&e[n]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],n=0;n<e.length;n+=2)t.push(parseInt(e.substr(n,2),16));return t},bytesToBase64:function(e){for(var n=[],r=0;r<e.length;r+=3)for(var a=e[r]<<16|e[r+1]<<8|e[r+2],o=0;o<4;o++)8*r+6*o<=8*e.length?n.push(t.charAt(a>>>6*(3-o)&63)):n.push("=");return n.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var n=[],r=0,a=0;r<e.length;a=++r%4)0!=a&&n.push((t.indexOf(e.charAt(r-1))&Math.pow(2,-2*a+8)-1)<<2*a|t.indexOf(e.charAt(r))>>>6-2*a);return n}},e.exports=n},738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},568:(e,t,n)=>{var r,a,o,i,s;r=n(12),a=n(487).utf8,o=n(738),i=n(487).bin,(s=function(e,t){e.constructor==String?e=t&&"binary"===t.encoding?i.stringToBytes(e):a.stringToBytes(e):o(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||e.constructor===Uint8Array||(e=e.toString());for(var n=r.bytesToWords(e),l=8*e.length,u=1732584193,c=-271733879,d=-1732584194,p=271733878,f=0;f<n.length;f++)n[f]=16711935&(n[f]<<8|n[f]>>>24)|4278255360&(n[f]<<24|n[f]>>>8);n[l>>>5]|=128<<l%32,n[14+(l+64>>>9<<4)]=l;var h=s._ff,g=s._gg,m=s._hh,v=s._ii;for(f=0;f<n.length;f+=16){var b=u,y=c,S=d,w=p;u=h(u,c,d,p,n[f+0],7,-680876936),p=h(p,u,c,d,n[f+1],12,-389564586),d=h(d,p,u,c,n[f+2],17,606105819),c=h(c,d,p,u,n[f+3],22,-1044525330),u=h(u,c,d,p,n[f+4],7,-176418897),p=h(p,u,c,d,n[f+5],12,1200080426),d=h(d,p,u,c,n[f+6],17,-1473231341),c=h(c,d,p,u,n[f+7],22,-45705983),u=h(u,c,d,p,n[f+8],7,1770035416),p=h(p,u,c,d,n[f+9],12,-1958414417),d=h(d,p,u,c,n[f+10],17,-42063),c=h(c,d,p,u,n[f+11],22,-1990404162),u=h(u,c,d,p,n[f+12],7,1804603682),p=h(p,u,c,d,n[f+13],12,-40341101),d=h(d,p,u,c,n[f+14],17,-1502002290),u=g(u,c=h(c,d,p,u,n[f+15],22,1236535329),d,p,n[f+1],5,-165796510),p=g(p,u,c,d,n[f+6],9,-1069501632),d=g(d,p,u,c,n[f+11],14,643717713),c=g(c,d,p,u,n[f+0],20,-373897302),u=g(u,c,d,p,n[f+5],5,-701558691),p=g(p,u,c,d,n[f+10],9,38016083),d=g(d,p,u,c,n[f+15],14,-660478335),c=g(c,d,p,u,n[f+4],20,-405537848),u=g(u,c,d,p,n[f+9],5,568446438),p=g(p,u,c,d,n[f+14],9,-1019803690),d=g(d,p,u,c,n[f+3],14,-187363961),c=g(c,d,p,u,n[f+8],20,1163531501),u=g(u,c,d,p,n[f+13],5,-1444681467),p=g(p,u,c,d,n[f+2],9,-51403784),d=g(d,p,u,c,n[f+7],14,1735328473),u=m(u,c=g(c,d,p,u,n[f+12],20,-1926607734),d,p,n[f+5],4,-378558),p=m(p,u,c,d,n[f+8],11,-2022574463),d=m(d,p,u,c,n[f+11],16,1839030562),c=m(c,d,p,u,n[f+14],23,-35309556),u=m(u,c,d,p,n[f+1],4,-1530992060),p=m(p,u,c,d,n[f+4],11,1272893353),d=m(d,p,u,c,n[f+7],16,-155497632),c=m(c,d,p,u,n[f+10],23,-1094730640),u=m(u,c,d,p,n[f+13],4,681279174),p=m(p,u,c,d,n[f+0],11,-358537222),d=m(d,p,u,c,n[f+3],16,-722521979),c=m(c,d,p,u,n[f+6],23,76029189),u=m(u,c,d,p,n[f+9],4,-640364487),p=m(p,u,c,d,n[f+12],11,-421815835),d=m(d,p,u,c,n[f+15],16,530742520),u=v(u,c=m(c,d,p,u,n[f+2],23,-995338651),d,p,n[f+0],6,-198630844),p=v(p,u,c,d,n[f+7],10,1126891415),d=v(d,p,u,c,n[f+14],15,-1416354905),c=v(c,d,p,u,n[f+5],21,-57434055),u=v(u,c,d,p,n[f+12],6,1700485571),p=v(p,u,c,d,n[f+3],10,-1894986606),d=v(d,p,u,c,n[f+10],15,-1051523),c=v(c,d,p,u,n[f+1],21,-2054922799),u=v(u,c,d,p,n[f+8],6,1873313359),p=v(p,u,c,d,n[f+15],10,-30611744),d=v(d,p,u,c,n[f+6],15,-1560198380),c=v(c,d,p,u,n[f+13],21,1309151649),u=v(u,c,d,p,n[f+4],6,-145523070),p=v(p,u,c,d,n[f+11],10,-1120210379),d=v(d,p,u,c,n[f+2],15,718787259),c=v(c,d,p,u,n[f+9],21,-343485551),u=u+b>>>0,c=c+y>>>0,d=d+S>>>0,p=p+w>>>0}return r.endian([u,c,d,p])})._ff=function(e,t,n,r,a,o,i){var s=e+(t&n|~t&r)+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._gg=function(e,t,n,r,a,o,i){var s=e+(t&r|n&~r)+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._hh=function(e,t,n,r,a,o,i){var s=e+(t^n^r)+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._ii=function(e,t,n,r,a,o,i){var s=e+(n^(t|~r))+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._blocksize=16,s._digestsize=16,e.exports=function(e,t){if(null==e)throw new Error("Illegal argument "+e);var n=r.wordsToBytes(s(e,t));return t&&t.asBytes?n:t&&t.asString?i.bytesToString(n):r.bytesToHex(n)}},166:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(46),a=n(565),o=n(611),i=n(305),s=n.n(i);class l extends r.H{constructor(e,t){super(),this.protocol=2,this.inflate=s().inflateInit(15),this.bpp=1,this.state=0,this.focusMode=0,this.useZRLE=!0,this.frameRateDelay=2,this.canvasCtx=t,this.sparecache={},this.buttonmask=0,this.canvasControl=this.canvasCtx.canvas,this.lastMouseMoveTime=(new Date).getTime(),this.logger=e,this.setDeskFocus=(e,t)=>{},this.getDeskFocus=e=>{}}processData(e){this.onProcessData(e)}onStateChange(e){this.logger.verbose(`state change in AMTDesktop: ${e}`),0===e&&(this.canvasCtx.fillStyle="#FFFFFF",this.canvasCtx.fillRect(0,0,this.canvasCtx.canvas.width,this.canvasCtx.canvas.width))}start(){this.logger.verbose("Starting desktop here"),this.state=0,this.inflate.inflateReset(),this.onKvmDataPending=[],this.onKvmDataAck=-1,this.kvmDataSupported=!1;for(const e in this.sparecache)delete this.sparecache[e]}onSendKvmData(e){!0!==this.onKvmDataAck?this.onKvmDataPending.push(e):((0,o.f)(this.urlvars)&&(0,o.f)(this.urlvars.kvmdatatrace)&&console.log(`KVM-Send (${e.length}) data`),e="\0KvmDataChannel\0"+e,this.onSend(String.fromCharCode(6,0,0,0)+a.r.IntToStr(e.length)+e),this.onKvmDataAck=!1)}}},59:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(503);class a extends r.K{constructor(e,t,n,r,a,o,i,s,l,u,c){super(e,t,n,r,a,o,i,s,l,u,c)}}},503:(e,t,n)=>{"use strict";n.d(t,{K:()=>l,b:()=>r});var r,a=n(565),o=n(568),i=n.n(o),s=n(611);!function(e){e[e.SOL=1]="SOL",e[e.KVM=2]="KVM",e[e.IDER=3]="IDER"}(r||(r={}));class l{constructor(e,t,n,r,a,o,i,s,l,u,c){this.fileReader=n,this.fileReaderInUse=!1,this.fileReaderAcc=[],this.randomNonceChars="abcdef0123456789",this.host=r,this.port=a,this.user=o,this.pass=i,this.tls=s,this.tlsv1only=l,this.protocol=t,this.RedirectStartSol=String.fromCharCode(16,0,0,0,83,79,76,32),this.RedirectStartKvm=String.fromCharCode(16,1,0,0,75,86,77,82),this.RedirectStartIder=String.fromCharCode(16,0,0,0,73,68,69,82),this.urlvars={},this.server=c,this.amtAccumulator="",this.authUri="",this.logger=e,this.authToken=u}getWsLocation(){return this.isBrowser()&&!(0,s.f)(this.server)?`${window.location.protocol.replace("http","ws")}//\n      ${window.location.host}\n      ${window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/"))}\n      /webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`:`${String(this.server)}/webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`}isBrowser(){try{const e="undefined"!=typeof window;return e&&this.logger.debug("!!!!!BROWSER!!!!!"),e}catch(e){return!1}}start(e){this.connectState=0,this.socket=new e(this.getWsLocation(),this.authToken),this.socket.onopen=this.onSocketConnected.bind(this),this.socket.onmessage=this.onMessage.bind(this),this.socket.onclose=this.onSocketClosed.bind(this),(0,s.f)(this.fileReader)&&(0,s.f)(this.fileReader.readAsBinaryString)?this.fileReader.onload=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsBinaryString(new Blob([this.fileReaderAcc.shift()]))}).bind(this):(0,s.f)(this.fileReader)&&(0,s.f)(this.fileReader.readAsArrayBuffer)&&(this.fileReader.onloadend=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsArrayBuffer(this.fileReaderAcc.shift())}).bind(this)),this.logger.verbose("Connecting to websocket"),this.onStateChange(1)}onSocketConnected(){(0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.redirtrace)&&console.log("REDIR-CONNECT"),this.onStateChange(2),this.logger.verbose(`Connected to websocket server. With protocol ${this.protocol} (2 = KVM)`),this.logger.info(`Start Redirect Session for protocol. ${this.protocol}`),this.protocol===r.SOL&&this.socketSend(this.RedirectStartSol),this.protocol===r.KVM&&this.socketSend(this.RedirectStartKvm),this.protocol===r.IDER&&this.socketSend(this.RedirectStartIder)}onMessage(e){try{if(this.inDataCount++,"object"==typeof e.data){if(this.fileReaderInUse)return void this.fileReaderAcc.push(e.data);if(null!=this.fileReader.readAsBinaryString)this.fileReaderInUse=!0,this.fileReader.readAsBinaryString(new Blob([e.data]));else if(null!=this.fileReader.readAsArrayBuffer)this.fileReaderInUse=!0,this.fileReader.readAsArrayBuffer(e.data);else{let t="";const n=new Uint8Array(e.data),r=n.byteLength;for(let e=0;e<r;e++)t+=String.fromCharCode(n[e]);this.onSocketData(t)}}else this.onSocketData(e.data)}catch(e){this.logger.error(e),this.stop(),this.onError()}}onSocketData(e){if((0,s.f)(e)&&-1!==this.connectState){if("object"==typeof e){let t="";const n=new Uint8Array(e),r=n.byteLength;for(let e=0;e<r;e++)t+=String.fromCharCode(n[e]);e=t}else if("string"!=typeof e)return;if((this.protocol===r.KVM||this.protocol===r.IDER)&&1===this.connectState)return this.onProcessData(e);for(this.amtAccumulator+=e;this.amtAccumulator.length>=1;){let e=0;switch(this.amtAccumulator.charCodeAt(0)){case 17:if(this.logger.verbose(`Start Redirection Session reply received for  ${this.protocol}`),this.amtAccumulator.length<4)return;switch(this.amtAccumulator.charCodeAt(1)){case 0:{if(this.logger.verbose("Session status success. Start handshake"),this.amtAccumulator.length<13)return;const t=this.amtAccumulator.charCodeAt(12);if(this.amtAccumulator.length<13+t)return;this.logger.verbose("Query for available authentication"),this.socketSend(String.fromCharCode(19,0,0,0,0,0,0,0,0)),e=13+t;break}default:this.stop()}break;case 20:{if(this.logger.verbose("Available Authentications reply received."),this.amtAccumulator.length<9)return;const t=a.r.ReadIntX(this.amtAccumulator,5);if(this.amtAccumulator.length<9+t)return;const n=this.amtAccumulator.charCodeAt(1),r=this.amtAccumulator.charCodeAt(4),o=[];for(let e=0;e<t;e++)o.push(this.amtAccumulator.charCodeAt(9+e));const i=this.amtAccumulator.substring(9,9+t);if(e=9+t,0===r)(0,s.f)(o.includes(4))?(this.logger.verbose("Good Digest Auth (With cnonce and all)"),this.socketSend(String.fromCharCode(19,0,0,0,4)+a.r.IntToStrX(this.user.length+this.authUri.length+8)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0,0))):(0,s.f)(o.includes(3))?(this.logger.warn("Bad Digest Auth"),this.socketSend(String.fromCharCode(19,0,0,0,3)+a.r.IntToStrX(this.user.length+this.authUri.length+7)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0))):(0,s.f)(o.includes(1))?(this.logger.verbose("Basic Auth"),this.socketSend(String.fromCharCode(19,0,0,0,1)+a.r.IntToStrX(this.user.length+this.pass.length+2)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(this.pass.length)+this.pass)):(this.logger.error("Auth Type not recognized. Stopping."),this.stop());else if(3!==r&&4!==r||1!==n)if(0===n){if(1===this.protocol){const e=1e4,t=100,n=0,r=1e4,o=100,i=0;this.socketSend(String.fromCharCode(32,0,0,0)+a.r.IntToStrX(this.amtSequence++)+a.r.ShortToStrX(e)+a.r.ShortToStrX(t)+a.r.ShortToStrX(n)+a.r.ShortToStrX(r)+a.r.ShortToStrX(o)+a.r.ShortToStrX(i)+a.r.IntToStrX(0))}2===this.protocol&&this.socketSend(String.fromCharCode(64,0,0,0,0,0,0,0)),3===this.protocol&&(this.connectState=1,this.onStateChange(3))}else this.stop();else{let e=0;const t=i.charCodeAt(e),n=i.substring(e+1,e+1+t);e+=t+1;const o=i.charCodeAt(e),s=i.substring(e+1,e+1+o);e+=o+1;let l=0,u=null;const c=this.generateRandomNonce(32),d="00000002";let p="";4===r&&(l=i.charCodeAt(e),u=i.substring(e+1,e+1+l),e+=l+1,p=`${d}:${c}:${String(u)} :`);const f=this.hex_md5(this.hex_md5(this.user+":"+n+":"+this.pass)+":"+s+":"+p+this.hex_md5("POST:"+this.authUri));let h=this.user.length+n.length+s.length+this.authUri.length+c.length+d.length+f.length+7;4===r&&(h+=parseInt(u.length)+1);let g=String.fromCharCode(19,0,0,0,r)+a.r.IntToStrX(h)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(n.length)+n+String.fromCharCode(s.length)+s+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(c.length)+c+String.fromCharCode(d.length)+d+String.fromCharCode(f.length)+f;4===r&&(g=String(g)+(String.fromCharCode(u.length)+String(u))),this.socketSend(g)}break}case 33:if(this.amtAccumulator.length<23)break;this.logger.verbose("Response to settings"),e=23,this.socketSend(String.fromCharCode(39,0,0,0)+a.r.IntToStrX(this.amtSequence++)+String.fromCharCode(0,0,27,0,0,0)),1===this.protocol&&(this.amtKeepAliveTimer=setInterval(this.sendAmtKeepAlive.bind(this),2e3)),this.connectState=1,this.onStateChange(3);break;case 41:if(this.amtAccumulator.length<10)break;this.logger.verbose("Serial Settings"),e=10;break;case 42:{if(this.amtAccumulator.length<10)break;this.logger.verbose("Incoming display data");const t=10+((255&this.amtAccumulator.charCodeAt(9))<<8)+(255&this.amtAccumulator.charCodeAt(8));if(this.amtAccumulator.length<t)break;this.onProcessData(this.amtAccumulator.substring(10,t)),e=t;break}case 43:if(this.amtAccumulator.length<8)break;this.logger.verbose("Keep Alve message"),e=8;break;case 65:if(this.amtAccumulator.length<8)break;this.logger.verbose("KVM traffic. Call onStart handler. And forward rest of acc directly."),this.connectState=1,this.onStart(),this.amtAccumulator.length>8&&this.onProcessData(this.amtAccumulator.substring(8)),e=this.amtAccumulator.length;break;default:return this.logger.error(`Unknown Intel AMT command:  ${this.amtAccumulator.charCodeAt(0)}  acclen=${this.amtAccumulator.length}`),void this.stop()}if(0===e)return;this.amtAccumulator=this.amtAccumulator.substring(e)}}}hex_md5(e){return this.logger.verbose("MD5 the string"),i()(e)}socketSend(e){(0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.redirtrace)&&this.logger.verbose(`REDIR-SEND(${e.length}): ${a.r.rstr2hex(e)}`);try{if(null!=this.socket&&1===this.socket.readyState){const t=new Uint8Array(e.length);this.logger.verbose(`Redir Send( ${e.length}): ${a.r.rstr2hex(e)}`);for(let n=0;n<e.length;++n)t[n]=e.charCodeAt(n);this.socket.send(t.buffer)}}catch(e){this.logger.error(`Socket send error: ${String(e)}`)}}send(e){this.logger.verbose("Send called "+e),null!=this.socket&&1===this.connectState&&(this.protocol===r.SOL?this.socketSend(String.fromCharCode(40,0,0,0)+a.r.IntToStrX(this.amtSequence++)+a.r.ShortToStrX(e.length)+e):this.socketSend(e))}sendAmtKeepAlive(){null!=this.socket&&this.socketSend(String.fromCharCode(43,0,0,0)+a.r.IntToStrX(this.amtSequence++))}generateRandomNonce(e){let t="";for(let n=0;n<e;n++)t+=this.randomNonceChars.charAt(Math.floor(Math.random()*this.randomNonceChars.length));return t}onSocketClosed(e){(0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.redirtrace)&&console.log("REDIR-CLOSED"),this.logger.warn("Redir Socket Closed"),this.stop()}onStateChange(e){console.info("onstatechange",e),this.state!==e&&(this.state=e,this.onNewState(this.state),null!=this.onStateChanged&&this.onStateChanged(this,this.state))}stop(){this.logger.warn("Stop called on Redirector. Change state to 0 and close Socket."),this.onStateChange(0),this.connectState=-1,this.amtAccumulator="",null!=this.socket&&(this.socket.close(),this.socket=null),null!=this.amtKeepAliveTimer&&(clearInterval(this.amtKeepAliveTimer),this.amtKeepAliveTimer=null)}}},277:(e,t,n)=>{"use strict";n.d(t,{r:()=>r});class r{constructor(){this.terminalEmulation=1,this.fxEmulation=0,this.fxLineBreak=0,this.AsciiToUnicode=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,171,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.AsciiToUnicodeIntel=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,174,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.StateChange=e=>{},this.TermSendKeys=e=>this.onSend(e)}}},237:(e,t,n)=>{"use strict";n.d(t,{k:()=>a});var r=n(201);class a{constructor(e){this.minLevel=e}log(e,t){switch(e){case r.i.VERBOSE:this.verbose(t);break;case r.i.INFO:this.info(t);break;case r.i.DEBUG:this.debug(t);break;case r.i.WARNING:this.warn(t);break;case r.i.ERROR:this.error(t)}}debug(e){this.minLevel>=r.i.DEBUG&&console.debug(e)}info(e){this.minLevel>=r.i.INFO&&console.info(e)}error(e){this.minLevel>=r.i.ERROR&&console.error(e)}warn(e){this.minLevel>=r.i.WARNING&&console.warn(e)}verbose(e){this.minLevel>=r.i.VERBOSE&&console.log(e)}}},565:(e,t,n)=>{"use strict";n.d(t,{r:()=>a});var r=n(611);const a={ReadShort:(e,t)=>(e.charCodeAt(t)<<8)+e.charCodeAt(t+1),ReadShortX:(e,t)=>(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ReadInt:(e,t)=>16777216*e.charCodeAt(t)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadSInt:(e,t)=>(e.charCodeAt(t)<<24)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadIntX:(e,t)=>16777216*e.charCodeAt(t+3)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ShortToStr:e=>String.fromCharCode(e>>8&255,255&e),ShortToStrX:e=>String.fromCharCode(255&e,e>>8&255),IntToStr:e=>String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e),IntToStrX:e=>String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255),SplitArray:e=>e.split(","),Clone:e=>JSON.parse(JSON.stringify(e)),EscapeHtml:e=>"string"==typeof e?e.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"boolean"==typeof e||"number"==typeof e?e:void 0,ArrayElementMove(e,t,n){e.splice(n,0,e.splice(t,1)[0])},ObjectToStringEx(e,t){let n="";if(0!==e&&(!(0,r.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const r in e)n=n+"<br />"+String(this.gap(t))+"Item #"+String(r)+": "+String(this.ObjectToStringEx(e[r],t+1));else if(e instanceof Object)for(const r in e)n=n+"<br />"+String(this.gap(t))+String(r)+" = "+String(this.ObjectToStringEx(e[r],t+1));else n+=String(this.EscapeHtml(e));return n},ObjectToStringEx2(e,t){let n="";if(0!==e&&(!(0,r.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const r in e)n=n+"\r\n"+String(this.gap2(t))+"Item #"+String(r)+": "+String(this.ObjectToStringEx2(e[r],t+1));else if(e instanceof Object)for(const r in e)n=n+"\r\n"+String(this.gap2(t))+String(r)+" = "+String(this.ObjectToStringEx2(e[r],t+1));else n+=String(this.EscapeHtml(e));return n},gap(e){let t="";for(let n=0;n<4*e;n++)t+="&nbsp;";return t},gap2(e){let t="";for(let n=0;n<4*e;n++)t+=" ";return t},ObjectToString(e){return this.ObjectToStringEx(e,0)},ObjectToString2(e){return this.ObjectToStringEx2(e,0)},char2hex:e=>(e+256).toString(16).substr(-2).toUpperCase(),rstr2hex(e){let t,n="";for(t=0;t<e.length;t++)n+=String(this.char2hex(e.charCodeAt(t)));return n},encode_utf8:e=>unescape(encodeURIComponent(e)),decode_utf8:e=>decodeURIComponent(escape(e)),data2blob(e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return new Blob([new Uint8Array(t)])},random:e=>Math.floor(Math.random()*e),trademarks:e=>e.replace(/\(R\)/g,"&reg;").replace(/\(TM\)/g,"&trade;")}},46:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});class r{processData(e){}onStateChange(e){}start(){}onSendKvmData(e){}}},784:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var r=n(989),a=n(611);class o{constructor(e,t,n){this.acc="",this.stateProcessorFac=new r.v(t,n,this.updateRFBState.bind(this)),this.parent=n,this.logger=e}processData(e){if(!(0,a.f)(e))return;this.acc+=e;let t=0;for(this.logger.verbose(`Process Data ACC length:  ${this.acc.length}`);this.acc.length>0;){const e=this.stateProcessorFac.getProcessor(this.parent.state),n=this.parent.state;if(t=e.processState(this.acc),this.logger.verbose(`State  ${n}  Processed. cmdSize returned ${t}`),0===t)return;this.acc=this.acc.substring(t),this.logger.verbose(`remaining acc  ${this.acc.length} command size: ${t} new parent state: ${this.parent.state}`)}}updateRFBState(e){this.parent.state=e}}},679:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(644);class a{constructor(e){this.parent=e}Decode(e,t,n,a,o,i,s,l){const u=e.charCodeAt(t++);let c,d,p;const f={};let h,g=0,m=0;if(0===u){for(this.parent.logger.verbose("Raw encoding"),h=0;h<s;h++)r.j.setPixel(this.parent,e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),h);r.j.putImage(this.parent,n,a)}else if(1===u){d=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),this.parent.canvasCtx.fillStyle="rgb("+(1===this.parent.bpp?`${224&d}, ${(28&d)<<3}, ${r.j.fixColor((3&d)<<6)}`:`${d>>8&248}, ${d>>3&252},${(31&d)<<3}`)+")",this.parent.logger.verbose("fillstyle: "+this.parent.canvasCtx.fillStyle);const s=r.j.rotX(this.parent,n,a);a=r.j.rotY(this.parent,n,a),n=s,this.parent.canvasCtx.fillRect(n,a,o,i)}else if(u>1&&u<17){this.parent.logger.verbose("Read the packed palette");let o=4,i=15;for(h=0;h<u;h++)f[h]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(2===u?(o=1,i=1):u<=4&&(o=2,i=3);g<s&&t<e.length;)for(d=e.charCodeAt(t++),h=8-o;h>=0;h-=o)r.j.setPixel(this.parent,f[d>>h&i],g++);r.j.putImage(this.parent,n,a)}else if(128===u){for(this.parent.logger.verbose("RLE encoded tile");g<s&&t<e.length;){d=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),m=1;do{m+=p=e.charCodeAt(t++)}while(255===p);for(;--m>=0;)r.j.setPixel(this.parent,d,g++)}r.j.putImage(this.parent,n,a)}else if(u>129){for(this.parent.logger.verbose("Read the RLE palette"),h=0;h<u-128;h++)f[h]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(this.parent.logger.verbose("Decode RLE on palette");g<s&&t<e.length;){if(m=1,c=e.charCodeAt(t++),d=f[c%128],c>127)do{m+=p=e.charCodeAt(t++)}while(255===p);for(;--m>=0;)r.j.setPixel(this.parent,d,g++)}r.j.putImage(this.parent,n,a)}}}},646:(e,t,n)=>{"use strict";n.d(t,{$:()=>r.$,X:()=>a.X});var r=n(784),a=n(679)},663:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>r}),function(e){e[e.VERBOSE=5]="VERBOSE",e[e.INFO=4]="INFO",e[e.DEBUG=3]="DEBUG",e[e.WARNING=2]="WARNING",e[e.ERROR=1]="ERROR"}(r||(r={}))},201:(e,t,n)=>{"use strict";n.d(t,{i:()=>r.i});var r=n(663)},725:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(565),a=n(8);class o{constructor(e,t,n,r){this.wsSocket=e,this.parent=t,this.rleDecoder=n,this.updateRFBState=r}processState(e){let t=0;if(e.length>=12){const n=r.r.ReadShort(e,0),o=r.r.ReadShort(e,2),i=r.r.ReadShort(e,4),s=r.r.ReadShort(e,6),l=i*s,u=r.r.ReadInt(e,8);if(u<17){if(i<1||i>64||s<1||s>64)throw this.parent.logger.error(`Invalid tile size (${i},${s}), disconnecting.`),new Error("Invalid tile size");if(this.parent.sparew!==i||this.parent.spareh!==s){this.parent.sparew=this.parent.sparew2=i,this.parent.spareh=this.parent.spareh2=s,1!==this.parent.rotation&&3!==this.parent.rotation||(this.parent.sparew2=s,this.parent.spareh2=i);const e=`${this.parent.sparew2}x${this.parent.spareh2}`;this.parent.spare=this.parent.sparecache[e],(0,a.fQ)(this.parent.spare)||(this.parent.sparecache[e]=this.parent.spare=this.parent.canvasCtx.createImageData(this.parent.sparew2,this.parent.spareh2))}}if(4294967073===u)this.parent.logger.verbose("Desktop size"),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=i,this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=s,this.wsSocket.send(String.fromCharCode(3,0,0,0,0,0)+r.r.ShortToStr(this.parent.width)+r.r.ShortToStr(this.parent.height)),t=12,null!=this.parent.onScreenSizeChange&&this.parent.onScreenSizeChange(this.parent.ScreenWidth,this.parent.ScreenHeight);else if(0===u){let r=12;const i=12+l*this.parent.bpp;if(e.length<i)return 0;t=i;for(let t=0;t<l;t++)a.jw.setPixel(this.parent,e.charCodeAt(r++)+(2===this.parent.bpp?e.charCodeAt(r++)<<8:0),t);a.jw.putImage(this.parent,n,o)}else{if(16!==u)throw this.parent.logger.error(`Unknown Encoding: ${u} , HEX: ${r.r.rstr2hex(e)}`),new Error(`Unknown Encoding: ${u}`);{if(e.length<16)return 0;const a=r.r.ReadInt(e,12);if(e.length<16+a)return 0;const u=16,c=5,d=0;if(a>5&&0===e.charCodeAt(u)&&r.r.ReadShortX(e,u+1)===a-c)this.rleDecoder.Decode(e,u+5,n,o,i,s,l,a);else{const t=e.substring(u,u+a-d),r=this.parent.inflate.inflate(t);if(!(r.length>0))throw this.parent.logger.error("Invalid deflate data."),new Error("invalid deflate data");this.rleDecoder.Decode(r,0,n,o,i,s,l,r.length)}t=16+a}}if(100==--this.parent.state){this.parent.logger.debug("Frame completed. Update state and request new frame"),this.updateRFBState(4);const e=()=>a.Xn.sendRefresh(this.parent,this.wsSocket);0===this.parent.frameRateDelay?a.Xn.sendRefresh(this.parent,this.wsSocket):setTimeout(e,this.parent.frameRateDelay)}}return t}}},70:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(565);class a{constructor(e,t,n){this.wsSocket=e,this.serverCutTextHandler=t,this.updateRFBState=n}processState(e){let t=0,n=0;switch(e.charCodeAt(0)){case 0:if(e.length<4)return 0;this.updateRFBState(100+r.r.ReadShort(e,2)),t=4;break;case 2:t=1;break;case 3:if(e.length<8)return 0;if(n=r.r.ReadInt(e,4)+8,e.length<n)return 0;t=this.serverCutTextHandler.handleServerCutText(e)}return t}}},212:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});class r{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=12?(t=12,this.updateRFBState(1),this.wsSocket.send("RFB 003.008\n"),t):0}}},26:(e,t,n)=>{"use strict";n.d(t,{l:()=>r});class r{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=1?(t=e.charCodeAt(0)+1,this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(2),t):0}}},724:(e,t,n)=>{"use strict";n.d(t,{m:()=>a});var r=n(565);class a{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;if(e.length>=4){if(t=4,0!==r.r.ReadInt(e,0))throw new Error("Error. Stopping. Security response not None.");return this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(3),t}return 0}}},256:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(565),a=n(611);class o{constructor(e,t){this.wsSocket=e,this.parent=t}handleServerCutText(e){if(e.length<8)return 0;const t=r.r.ReadInt(e,4)+8;if(e.length<t)return 0;if(null!=this.parent.onKvmData){const n=e.substring(8,t);n.length>=16&&"\0KvmDataChannel"===n.substring(0,15)&&(this.parent.kvmDataSupported||(this.parent.kvmDataSupported=!0,console.log("KVM Data Channel Supported.")),(-1===this.parent.onKvmDataAck&&16===n.length||0!==n.charCodeAt(15))&&(this.parent.onKvmDataAck=!0),(0,a.f)(this.parent.urlvars)&&(0,a.f)(this.parent.urlvars.kvmdatatrace)&&console.log(`KVM-Recv((${n.length-16})):  ${n.substring(16)}`),n.length>16&&this.parent.onKvmData(n.substring(16)),!0===this.parent.onKvmDataAck&&this.parent.onKvmDataPending.length>0&&this.wsSocket.onSendKvmData(this.parent.onKvmDataPending.shift()))}return t}}},946:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var r=n(565),a=n(173);class o{constructor(e,t,n){this.wsSocket=e,this.parent=t,this.updateRFBState=n}processState(e){let t=0;if(e.length>=24){this.parent.rotation=0;const n=r.r.ReadInt(e,20);if(e.length<24+n)return 0;t=24+n,null!=this.parent.updateScreenDimensions&&this.parent.updateScreenDimensions(r.r.ReadShort(e,0),r.r.ReadShort(e,2)),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=r.r.ReadShort(e,0),this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=r.r.ReadShort(e,2);let o="";return this.parent.useZRLE&&(o+=r.r.IntToStr(16)),o+=r.r.IntToStr(0),o+=r.r.IntToStr(1092),this.parent.logger.verbose("Send supported encodings"),this.wsSocket.send(String.fromCharCode(2,0)+r.r.ShortToStr(o.length/4+1)+o+r.r.IntToStr(-223)),1===this.parent.bpp&&this.wsSocket.send(String.fromCharCode(0,0,0,0,8,8,0,1)+r.r.ShortToStr(7)+r.r.ShortToStr(7)+r.r.ShortToStr(3)+String.fromCharCode(5,2,0,0,0,0)),this.updateRFBState(4),this.parent.onStateChange(3),this.parent.logger.info("Start new frame."),a.X.sendRefresh(this.parent,this.wsSocket),this.parent.oldMouseX=-1,t}return 0}}},389:(e,t,n)=>{"use strict";n.d(t,{Cu:()=>l.C,Ut:()=>o.U,ez:()=>r.e,ll:()=>i.l,mC:()=>s.m,wW:()=>a.w});var r=n(725),a=n(212),o=n(70),i=n(26),s=n(724),l=n(946)},989:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(389),a=n(256),o=n(679);class i{constructor(e,t,n){this.stateProcessors={},this.stateProcessors[0]=new r.wW(e,n),this.stateProcessors[1]=new r.ll(e,n),this.stateProcessors[2]=new r.mC(e,n),this.stateProcessors[3]=new r.Cu(e,t,n);const i=new a.I(e,t);this.stateProcessors[4]=new r.Ut(e,i,n),this.stateProcessors["100plus"]=new r.ez(e,t,new o.X(t),n)}getProcessor(e){return e<=100?this.stateProcessors[e]:this.stateProcessors["100plus"]}}},155:(e,t,n)=>{"use strict";n.d(t,{Q:()=>r});class r{constructor(e){this.processData=e=>{null!=this.terminal.capture&&(this.terminal.capture=String(this.terminal.capture)+e);let t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);"J"===e[n]?this.clearTerminal():t+=0!=(128&r)?String.fromCharCode(this.terminal.AsciiToUnicode[127&r]):`${e[n]}`}this.processDataToXterm(t)},this.terminal=e}}},38:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(923),a=n(611);const o={convertAMTKeyCode:e=>(0,a.f)(e.code.startsWith("Key"))&&4===e.code.length?e.code.charCodeAt(3)+(!1===e.shiftKey?32:0):(0,a.f)(e.code.startsWith("Digit"))&&6===e.code.length?e.code.charCodeAt(5):(0,a.f)(e.code.startsWith("Numpad"))&&7===e.code.length?e.code.charCodeAt(6):r.Z[e.code]}},923:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r={Pause:19,CapsLock:20,Space:32,Quote:39,Minus:45,NumpadMultiply:42,NumpadAdd:43,PrintScreen:44,Comma:44,NumpadSubtract:45,NumpadDecimal:46,Period:46,Slash:47,NumpadDivide:47,Semicolon:59,Equal:61,OSLeft:91,BracketLeft:91,OSRight:91,Backslash:92,BracketRight:93,ContextMenu:93,Backquote:96,NumLock:144,ScrollLock:145,Backspace:65288,Tab:65289,Enter:65293,NumpadEnter:65293,Escape:65307,Delete:65535,Home:65360,PageUp:65365,PageDown:65366,ArrowLeft:65361,ArrowUp:65362,ArrowRight:65363,ArrowDown:65364,End:65367,Insert:65379,F1:65470,F2:65471,F3:65472,F4:65473,F5:65474,F6:65475,F7:65476,F8:65477,F9:65478,F10:65479,F11:65480,F12:65481,ShiftLeft:65505,ShiftRight:65506,ControlLeft:65507,ControlRight:65508,AltLeft:65513,AltRight:65514,MetaLeft:65511,MetaRight:65512}},173:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(565),a=n(611);const o={sendRefresh(e,t){if(!e.holding)if(e.focusMode>0){const n=2*e.focusMode;t.send(String.fromCharCode(3,1)+r.r.ShortToStr(Math.max(Math.min(e.oldMouseX,e.lastMouseX)-e.focusMode,0))+r.r.ShortToStr(Math.max(Math.min(e.oldMouseY,e.lastMouseY)-e.focusMode,0))+r.r.ShortToStr(n+Math.abs(e.oldMouseX-e.lastMouseX))+r.r.ShortToStr(n+Math.abs(e.oldMouseY-e.lastMouseY))),e.oldMouseX=e.lastMouseX,e.oldMouseY=e.lastMouseY}else t.send(String.fromCharCode(3,1,0,0,0,0)+r.r.ShortToStr(e.rwidth)+r.r.ShortToStr(e.rheight))},sendKey(e,t,n){if("object"==typeof t)for(const n in t)this.sendKey(e,t[n][0],t[n][1]);else e.send(String.fromCharCode(4,n,0,0)+r.r.IntToStr(t))},sendKvmData(e,t,n){!0!==e.onKvmDataAck?e.onKvmDataPending.push(n):((0,a.f)(e.urlvars)&&(0,a.f)(e.urlvars.kvmdatatrace)&&console.log(`KVM-Send(${String(n.length)}): ${String(n)}`),n="\0KvmDataChannel\0"+String(n),t.send(`${String.fromCharCode(6,0,0,0)}${r.r.IntToStr(n.length)}${String(n)}`),e.onKvmDataAck=!1)},sendKeepAlive(e,t){e.lastKeepAlive<Date.now()-5e3&&(e.lastKeepAlive=Date.now(),t.send(String.fromCharCode(6,0,0,0)+r.r.IntToStr(16)+"\0KvmDataChannel\0"))},sendCtrlAltDelMsg(e){this.sendCad(e)},sendCad(e){this.sendKey(e,65507,1),this.sendKey(e,65513,1),this.sendKey(e,65535,1),this.sendKey(e,65535,0),this.sendKey(e,65513,0),this.sendKey(e,65507,0)}}},644:(e,t,n)=>{"use strict";n.d(t,{j:()=>r});const r={putImage(e,t,n){if(e.holding)return;const a=r.arotX(e,t,n);n=r.arotY(e,t,n),t=a,e.canvasCtx.putImageData(e.spare,t,n)},setPixel(e,t,n){let a,o,i=4*n;e.rotation>0&&(1===e.rotation?(a=n%e.sparew,o=Math.floor(n/e.sparew),i=4*(n=a*e.sparew2+(e.sparew2-1-o))):2===e.rotation?i=e.sparew*e.spareh*4-4-i:3===e.rotation&&(a=n%e.sparew,o=Math.floor(n/e.sparew),i=4*(n=(e.sparew2-1-a)*e.sparew2+o))),1===e.bpp?(e.spare.data[i++]=224&t,e.spare.data[i++]=(28&t)<<3,e.spare.data[i++]=r.fixColor((3&t)<<6)):(e.spare.data[i++]=t>>8&248,e.spare.data[i++]=t>>3&252,e.spare.data[i++]=(31&t)<<3),e.spare.data[i]=255},arotX:(e,t,n)=>0===e.rotation?t:1===e.rotation?e.canvasCtx.canvas.width-e.sparew2-n:2===e.rotation?e.canvasCtx.canvas.width-e.sparew2-t:3===e.rotation?n:0,arotY:(e,t,n)=>0===e.rotation?n:1===e.rotation?t:2===e.rotation?e.canvasCtx.canvas.height-e.spareh2-n:3===e.rotation?e.canvasCtx.canvas.height-e.spareh-t:0,crotX:(e,t,n)=>0===e.rotation?t:1===e.rotation?n:2===e.rotation?e.canvasCtx.canvas.width-t:3===e.rotation?e.canvasCtx.canvas.height-n:0,crotY:(e,t,n)=>0===e.rotation?n:1===e.rotation?e.canvasCtx.canvas.width-t:2===e.rotation?e.canvasCtx.canvas.height-n:3===e.rotation?t:0,rotX:(e,t,n)=>0===e.rotation||1===e.rotation?t:2===e.rotation?t-e.canvasCtx.canvas.width:3===e.rotation?t-e.canvasCtx.canvas.height:0,rotY:(e,t,n)=>0===e.rotation?n:1===e.rotation?n-e.canvasCtx.canvas.width:2===e.rotation?n-e.canvasCtx.canvas.height:3===e.rotation?n:0,setRotation(e,t){for(;t<0;)t+=4;const n=t%4;if(e.holding)return e.rotation=n,!1;if(n===e.rotation)return!0;let a=e.canvasCtx.canvas.width,o=e.canvasCtx.canvas.height;1!==e.rotation&&3!==e.rotation||(a=e.canvasCtx.canvas.height,o=e.canvasCtx.canvas.width),null==e.tcanvas&&(e.tcanvas=document.createElement("canvas"));const i=e.tcanvas.getContext("2d");return i.setTransform(1,0,0,1,0,0),i.canvas.width=a,i.canvas.height=o,i.rotate(-90*e.rotation*Math.PI/180),0===e.rotation&&i.drawImage(e.canvasCtx.canvas,0,0),1===e.rotation&&i.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,0),2===e.rotation&&i.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,-e.canvasCtx.canvas.height),3===e.rotation&&i.drawImage(e.canvasCtx.canvas,0,-e.canvasCtx.canvas.height),0!==e.rotation&&2!==e.rotation||(e.canvasCtx.canvas.height=a,e.canvasCtx.canvas.width=o),1!==e.rotation&&3!==e.rotation||(e.canvasCtx.canvas.height=o,e.canvasCtx.canvas.width=a),e.canvasCtx.setTransform(1,0,0,1,0,0),e.canvasCtx.rotate(90*n*Math.PI/180),e.rotation=n,e.canvasCtx.drawImage(e.tcanvas,r.rotX(e,0,0),r.rotY(e,0,0)),e.width=e.canvasCtx.canvas.width,e.height=e.canvasCtx.canvas.height,null!=e.onScreenResize&&e.onScreenResize(e.width,e.height,e.canvasId),!0},fixColor:e=>e>127?e+32:e}},717:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var r,a=n(38),o=n(173),i=n(611);!function(e){e[e.Up=0]="Up",e[e.Down=1]="Down"}(r||(r={}));class s{constructor(e,t){this.Comms=t,this.parent=e}GrabKeyInput(){this.KeyInputGrab||(document.onkeyup=this.handleKeyUp.bind(this),document.onkeydown=this.handleKeyDown.bind(this),document.onkeypress=this.handleKeys.bind(this),this.KeyInputGrab=!0)}UnGrabKeyInput(){this.KeyInputGrab&&(document.onkeyup=null,document.onkeydown=null,document.onkeypress=null,this.KeyInputGrab=!1)}handleKeys(e){return this.haltEvent(e)}haltEvent(e){return(0,i.f)(e.preventDefault)&&e.preventDefault(),(0,i.f)(e.stopPropagation)&&e.stopPropagation(),!1}handleKeyUp(e){return this.handleKeyEvent(r.Up,e)}handleKeyDown(e){return this.handleKeyEvent(r.Down,e)}handleKeyEvent(e,t){let n=t;if((0,i.f)(n)||(n=window.event),(0,i.f)(n.code)){const t=a.q.convertAMTKeyCode(n);this.parent.logger.verbose(`Key ${e} : ${String(t)}`),null!=t&&o.X.sendKey(this.Comms,t,e)}else{let t=n.keyCode;173===t&&(t=189),61===t&&(t=187);let r=t;!1===n.shiftKey&&t>=65&&t<=90&&(r=t+32),t>=112&&t<=124&&(r=t+65358),8===t&&(r=65288),9===t&&(r=65289),13===t&&(r=65293),16===t&&(r=65505),17===t&&(r=65507),18===t&&(r=65513),27===t&&(r=65307),33===t&&(r=65365),34===t&&(r=65366),35===t&&(r=65367),36===t&&(r=65360),37===t&&(r=65361),38===t&&(r=65362),39===t&&(r=65363),40===t&&(r=65364),45===t&&(r=65379),46===t&&(r=65535),t>=96&&t<=105&&(r=t-48),106===t&&(r=42),107===t&&(r=43),109===t&&(r=45),110===t&&(r=46),111===t&&(r=47),186===t&&(r=59),187===t&&(r=61),188===t&&(r=44),189===t&&(r=45),190===t&&(r=46),191===t&&(r=47),192===t&&(r=96),219===t&&(r=91),220===t&&(r=92),221===t&&(r=93),222===t&&(r=39),this.parent.logger.verbose(`Key ${e}: ${t}  = ${r}`),o.X.sendKey(this.Comms,r,e)}return this.haltEvent(n)}}},33:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(565),a=n(644),o=n(611);class i{constructor(e,t,n){this.topposition=0,this.leftposition=0,this.parent=e,this.comm=t,this.debounceTime=n,this.mouseClickCompleted=!0,this.lastEvent=null}GrabMouseInput(){this.MouseInputGrab||(this.MouseInputGrab=!0)}UnGrabMouseInput(){if(!this.MouseInputGrab)return;const e=this.parent.canvasCtx.canvas;e.onmousemove=null,e.onmouseup=null,e.onmousedown=null,this.MouseInputGrab=!1}mousedown(e){return this.parent.buttonmask|=1<<e.button,this.mousemove(e)}mouseup(e){return this.parent.buttonmask&=65535-(1<<e.button),this.mousemove(e)}mousemove(e){if(4!==this.parent.state)return!0;const t=this.getPositionOfControl(this.parent.canvasControl),n=this.parent.canvasControl.getBoundingClientRect();(0===this.topposition||n.top>this.topposition)&&(this.topposition=n.top),(0===this.leftposition||n.left>this.leftposition)&&(this.leftposition=n.left);const i=this.topposition-n.top,s=this.leftposition-n.left;if(this.parent.lastMouseX=(e.pageX-t[0]+s)*(this.parent.canvasControl.height/this.parent.canvasControl.offsetHeight),this.parent.lastMouseY=(e.pageY-t[1]+i)*(this.parent.canvasControl.width/this.parent.canvasControl.offsetWidth),(0,o.f)(this.parent.noMouseRotate)||(this.parent.lastMouseX2=a.j.crotX(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseY=a.j.crotY(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseX=this.parent.lastMouseX2),this.comm.send(String.fromCharCode(5,this.parent.buttonmask)+r.r.ShortToStr(this.parent.lastMouseX)+r.r.ShortToStr(this.parent.lastMouseY)),this.parent.setDeskFocus("DeskFocus",this.parent.focusMode),0!==this.parent.focusMode){const e=Math.min(this.parent.lastMouseX,this.parent.canvasControl.width-this.parent.focusMode),n=Math.min(this.parent.lastMouseY,this.parent.canvasControl.height-this.parent.focusMode),r=2*this.parent.focusMode,a=this.parent.canvasControl,o=a.offsetHeight/this.parent.canvasControl.height,i=a.offsetWidth/this.parent.canvasControl.width,s=this.parent.getDeskFocus("DeskFocus"),l=this.getPositionOfControl(this.parent.canvasControl.parentElement);s.left=`${Math.max((e-this.parent.focusMode)*o,0)+(t[0]-l[0])}px`,s.top=`${Math.max((n-this.parent.focusMode)*i,0)+(t[1]-l[1])}px`,s.width=r*o-6+"px",s.height=r*o-6+"px"}return this.haltEvent(e)}haltEvent(e){return(0,o.f)(e.preventDefault)&&e.preventDefault(),(0,o.f)(e.stopPropagation)&&e.stopPropagation(),!1}getPositionOfControl(e){const t=[0,0];let n=e;for(;null!=n;)t[0]=Number(t[0])+Number(n.offsetLeft),t[1]=Number(t[1])+Number(n.offsetTop),n=n.offsetParent;return t}}},611:(e,t,n)=>{"use strict";n.d(t,{f:()=>r});const r=e=>null!=e&&""!==e&&!1!==e&&0!==e},8:(e,t,n)=>{"use strict";n.d(t,{EB:()=>i.E,Xn:()=>a.X,fQ:()=>l.f,jw:()=>o.j,qD:()=>r.q,xx:()=>s.x});var r=n(38),a=n(173),o=n(644),i=n(717),s=n(33),l=n(611)},305:module=>{var ZLIB=ZLIB||{},BASE,NMAX;void 0===ZLIB.common_initialized&&(ZLIB.Z_NO_FLUSH=0,ZLIB.Z_PARTIAL_FLUSH=1,ZLIB.Z_SYNC_FLUSH=2,ZLIB.Z_FULL_FLUSH=3,ZLIB.Z_FINISH=4,ZLIB.Z_BLOCK=5,ZLIB.Z_TREES=6,ZLIB.Z_OK=0,ZLIB.Z_STREAM_END=1,ZLIB.Z_NEED_DICT=2,ZLIB.Z_ERRNO=-1,ZLIB.Z_STREAM_ERROR=-2,ZLIB.Z_DATA_ERROR=-3,ZLIB.Z_MEM_ERROR=-4,ZLIB.Z_BUF_ERROR=-5,ZLIB.Z_VERSION_ERROR=-6,ZLIB.Z_DEFLATED=8,ZLIB.z_stream=function(){this.next_in=0,this.avail_in=0,this.total_in=0,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=null,this.state=null,this.data_type=0,this.adler=0,this.input_data="",this.output_data="",this.error=0,this.checksum_function=null},ZLIB.gz_header=function(){this.text=0,this.time=0,this.xflags=0,this.os=255,this.extra=null,this.extra_len=0,this.extra_max=0,this.name=null,this.name_max=0,this.comment=null,this.comm_max=0,this.hcrc=0,this.done=0},ZLIB.common_initialized=!0),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-inflate.js"),function(){var DEF_WBITS=15,HEAD=0,FLAGS=1,TIME=2,OS=3,EXLEN=4,EXTRA=5,NAME=6,COMMENT=7,HCRC=8,DICTID=9,DICT=10,TYPE=11,TYPEDO=12,STORED=13,COPY_=14,COPY=15,TABLE=16,LENLENS=17,CODELENS=18,LEN_=19,LEN=20,LENEXT=21,DIST=22,DISTEXT=23,MATCH=24,LIT=25,CHECK=26,LENGTH=27,DONE=28,BAD=29,MEM=30,SYNC=31,ENOUGH_LENS=852,ENOUGH_DISTS=592,ENOUGH=ENOUGH_LENS+ENOUGH_DISTS,CODES=0,LENS=1,DISTS=2,inflate_table_lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],inflate_table_lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,203,69],inflate_table_dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],inflate_table_dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];function inflate_table(e,t){var n,r,a,o,i,s,l,u,c,d,p,f,h,g,m,v,b,y,S,w,k,C,_=e.next,x=t==DISTS?e.distbits:e.lenbits,E=e.work,T=e.lens,A=t==DISTS?e.nlen:0,I=e.codes;n=t==LENS?e.nlen:t==DISTS?e.ndist:19;var N=new Array(16),R=new Array(16);for(r=0;r<=15;r++)N[r]=0;for(a=0;a<n;a++)N[T[A+a]]++;for(s=x,i=15;i>=1&&0==N[i];i--);if(s>i&&(s=i),0==i)return v={op:64,bits:1,val:0},I[_++]=v,I[_++]=v,t==DISTS?e.distbits=1:e.lenbits=1,e.next=_,0;for(o=1;o<i&&0==N[o];o++);for(s<o&&(s=o),c=1,r=1;r<=15;r++)if(c<<=1,(c-=N[r])<0)return-1;if(c>0&&(t==CODES||1!=i))return e.next=_,-1;for(R[1]=0,r=1;r<15;r++)R[r+1]=R[r]+N[r];for(a=0;a<n;a++)0!=T[A+a]&&(E[R[T[A+a]]++]=a);switch(t){case CODES:y=w=E,S=0,k=0,C=19;break;case LENS:y=inflate_table_lbase,S=-257,w=inflate_table_lext,k=-257,C=256;break;default:y=inflate_table_dbase,w=inflate_table_dext,S=0,k=0,C=-1}if(p=0,a=0,r=o,b=_,l=s,u=0,g=-1,m=(d=1<<s)-1,t==LENS&&d>=ENOUGH_LENS||t==DISTS&&d>=ENOUGH_DISTS)return e.next=_,1;for(;;){v={op:0,bits:r-u,val:0},E[a]<C?v.val=E[a]:E[a]>C?(v.op=w[k+E[a]],v.val=y[S+E[a]]):v.op=96,f=1<<r-u,o=h=1<<l;do{I[b+(p>>>u)+(h-=f)]=v}while(0!=h);for(f=1<<r-1;p&f;)f>>>=1;if(0!=f?(p&=f-1,p+=f):p=0,a++,0==--N[r]){if(r==i)break;r=T[A+E[a]]}if(r>s&&(p&m)!=g){for(0==u&&(u=s),b+=o,c=1<<(l=r-u);l+u<i&&!((c-=N[l+u])<=0);)l++,c<<=1;if(d+=1<<l,t==LENS&&d>=ENOUGH_LENS||t==DISTS&&d>=ENOUGH_DISTS)return e.next=_,1;I[_+(g=p&m)]={op:l,bits:s,val:b-_}}}return 0!=p&&(I[b+p]={op:64,bits:r-u,val:0}),e.next=_+d,t==DISTS?e.distbits=s:e.lenbits=s,0}function inflate_fast(e,t){var n,r,a,o,i,s,l,u,c,d,p,f,h,g,m,v,b,y,S,w,k,C,_=-1,x=-1;n=e.state,r=e.input_data,o=(a=e.next_in)+e.avail_in-5,s=(i=e.next_out)-(t-e.avail_out),l=i+(e.avail_out-257),u=n.wsize,c=n.whave,d=n.wnext,p=n.window,f=n.hold,h=n.bits,g=n.codes,m=n.lencode,v=n.distcode,b=(1<<n.lenbits)-1,y=(1<<n.distbits)-1;e:do{h<15&&(f+=(255&r.charCodeAt(a++))<<h,h+=8,f+=(255&r.charCodeAt(a++))<<h,h+=8),S=g[m+(f&b)];t:for(;;){if(f>>>=w=S.bits,h-=w,0==(w=S.op))e.output_data+=String.fromCharCode(S.val),i++;else{if(!(16&w)){if(0==(64&w)){S=g[m+(S.val+(f&(1<<w)-1))];continue t}if(32&w){n.mode=TYPE;break e}e.msg="invalid literal/length code",n.mode=BAD;break e}k=S.val,(w&=15)&&(h<w&&(f+=(255&r.charCodeAt(a++))<<h,h+=8),k+=f&(1<<w)-1,f>>>=w,h-=w),h<15&&(f+=(255&r.charCodeAt(a++))<<h,h+=8,f+=(255&r.charCodeAt(a++))<<h,h+=8),S=g[v+(f&y)];n:for(;;){if(f>>>=w=S.bits,h-=w,!(16&(w=S.op))){if(0==(64&w)){S=g[v+(S.val+(f&(1<<w)-1))];continue n}e.msg="invalid distance code",n.mode=BAD;break e}if(C=S.val,h<(w&=15)&&(f+=(255&r.charCodeAt(a++))<<h,(h+=8)<w&&(f+=(255&r.charCodeAt(a++))<<h,h+=8)),C+=f&(1<<w)-1,f>>>=w,h-=w,C>(w=i-s)){if((w=C-w)>c&&n.sane){e.msg="invalid distance too far back",n.mode=BAD;break e}_=0,x=-1,0==d?(_+=u-w,w<k&&(k-=w,e.output_data+=p.substring(_,_+w),i+=w,w=0,_=-1,x=i-C)):(_+=d-w,w<k&&(k-=w,e.output_data+=p.substring(_,_+w),_=-1,x=(i+=w)-C))}else _=-1,x=i-C;if(_>=0)e.output_data+=p.substring(_,_+k),i+=k,_+=k;else{var E=k;for(E>i-x&&(E=i-x),e.output_data+=e.output_data.substring(x,x+E),i+=E,x+=E,i+=k-=E;k>2;)e.output_data+=e.output_data.charAt(x++),e.output_data+=e.output_data.charAt(x++),e.output_data+=e.output_data.charAt(x++),k-=3;k&&(e.output_data+=e.output_data.charAt(x++),k>1&&(e.output_data+=e.output_data.charAt(x++)))}break n}}break t}}while(a<o&&i<l);a-=k=h>>>3,f&=(1<<(h-=k<<3))-1,e.next_in=a,e.next_out=i,e.avail_in=a<o?o-a+5:5-(a-o),e.avail_out=i<l?l-i+257:257-(i-l),n.hold=f,n.bits=h}function new_array(e){var t,n=new Array(e);for(t=0;t<e;t++)n[t]=0;return n}function getarg(e,t,n){return e&&t in e?e[t]:n}function checksum_none(){return 0}function inflate_state(){var e;this.mode=0,this.last=0,this.wrap=0,this.havedict=0,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=0,this.distcode=0,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=0,this.lens=new_array(320),this.work=new_array(288),this.codes=new Array(ENOUGH);var t={op:0,bits:0,val:0};for(e=0;e<ENOUGH;e++)this.codes[e]=t;this.sane=0,this.back=0,this.was=0}ZLIB.inflate_copyright=" inflate 1.2.6 Copyright 1995-2012 Mark Adler ",ZLIB.inflateResetKeep=function(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=null,t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=0,t.distcode=0,t.next=0,t.sane=1,t.back=-1,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.inflateReset=function(e,t){var n,r;return e&&e.state?(r=e.state,void 0===t&&(t=DEF_WBITS),t<0?(n=0,t=-t):(n=1+(t>>>4),t<48&&(t&=15)),1==n&&"function"==typeof ZLIB.adler32?e.checksum_function=ZLIB.adler32:2==n&&"function"==typeof ZLIB.crc32?e.checksum_function=ZLIB.crc32:e.checksum_function=checksum_none,t&&(t<8||t>15)?ZLIB.Z_STREAM_ERROR:(r.window&&r.wbits!=t&&(r.window=null),r.wrap=n,r.wbits=t,r.wsize=0,r.whave=0,r.wnext=0,ZLIB.inflateResetKeep(e))):ZLIB.Z_STREAM_ERROR},ZLIB.inflateInit=function(e){var t=new ZLIB.z_stream;return t.state=new inflate_state,ZLIB.inflateReset(t,e),t},ZLIB.inflatePrime=function(e,t,n){var r;return e&&e.state?(r=e.state,t<0?(r.hold=0,r.bits=0,ZLIB.Z_OK):t>16||r.bits+t>32?ZLIB.Z_STREAM_ERROR:(n&=(1<<t)-1,r.hold+=n<<r.bits,r.bits+=t,ZLIB.Z_OK)):ZLIB.Z_STREAM_ERROR};var lenfix_ary=null,lenfix_def="([    {op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},{op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},    {op:0,bits:9,val:192},{op:16,bits:7,val:10},{op:0,bits:8,val:96},{op:0,bits:8,val:32},{op:0,bits:9,val:160},{op:0,bits:8,val:0},{op:0,bits:8,val:128},    {op:0,bits:8,val:64},{op:0,bits:9,val:224},{op:16,bits:7,val:6},{op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:144},{op:19,bits:7,val:59},    {op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:208},{op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:176},    {op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},{op:0,bits:9,val:240},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},    {op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},{op:0,bits:8,val:52},{op:0,bits:9,val:200},{op:17,bits:7,val:13},{op:0,bits:8,val:100},    {op:0,bits:8,val:36},{op:0,bits:9,val:168},{op:0,bits:8,val:4},{op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:232},{op:16,bits:7,val:8},    {op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:152},{op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:216},    {op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},{op:0,bits:9,val:184},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},    {op:0,bits:9,val:248},{op:16,bits:7,val:3},{op:0,bits:8,val:82},{op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},    {op:0,bits:8,val:50},{op:0,bits:9,val:196},{op:17,bits:7,val:11},{op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:164},{op:0,bits:8,val:2},    {op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:228},{op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:148},    {op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},{op:0,bits:9,val:212},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},    {op:0,bits:9,val:180},{op:0,bits:8,val:10},{op:0,bits:8,val:138},{op:0,bits:8,val:74},{op:0,bits:9,val:244},{op:16,bits:7,val:5},{op:0,bits:8,val:86},    {op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:204},{op:17,bits:7,val:15},    {op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:172},{op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:236},    {op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},{op:0,bits:9,val:156},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},    {op:0,bits:9,val:220},{op:18,bits:7,val:27},{op:0,bits:8,val:110},{op:0,bits:8,val:46},{op:0,bits:9,val:188},{op:0,bits:8,val:14},{op:0,bits:8,val:142},    {op:0,bits:8,val:78},{op:0,bits:9,val:252},{op:96,bits:7,val:0},{op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},    {op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:194},{op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:162},    {op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},{op:0,bits:9,val:226},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},    {op:0,bits:9,val:146},{op:19,bits:7,val:59},{op:0,bits:8,val:121},{op:0,bits:8,val:57},{op:0,bits:9,val:210},{op:17,bits:7,val:17},{op:0,bits:8,val:105},    {op:0,bits:8,val:41},{op:0,bits:9,val:178},{op:0,bits:8,val:9},{op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:242},{op:16,bits:7,val:4},    {op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},{op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:202},    {op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},{op:0,bits:9,val:170},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},    {op:0,bits:9,val:234},{op:16,bits:7,val:8},{op:0,bits:8,val:93},{op:0,bits:8,val:29},{op:0,bits:9,val:154},{op:20,bits:7,val:83},{op:0,bits:8,val:125},    {op:0,bits:8,val:61},{op:0,bits:9,val:218},{op:18,bits:7,val:23},{op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:186},{op:0,bits:8,val:13},    {op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:250},{op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},    {op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},{op:0,bits:9,val:198},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},    {op:0,bits:9,val:166},{op:0,bits:8,val:3},{op:0,bits:8,val:131},{op:0,bits:8,val:67},{op:0,bits:9,val:230},{op:16,bits:7,val:7},{op:0,bits:8,val:91},    {op:0,bits:8,val:27},{op:0,bits:9,val:150},{op:20,bits:7,val:67},{op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:214},{op:18,bits:7,val:19},    {op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:182},{op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:246},    {op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},    {op:0,bits:9,val:206},{op:17,bits:7,val:15},{op:0,bits:8,val:103},{op:0,bits:8,val:39},{op:0,bits:9,val:174},{op:0,bits:8,val:7},{op:0,bits:8,val:135},    {op:0,bits:8,val:71},{op:0,bits:9,val:238},{op:16,bits:7,val:9},{op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:158},{op:20,bits:7,val:99},    {op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:222},{op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:190},    {op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},{op:0,bits:9,val:254},{op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},    {op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},{op:0,bits:9,val:193},{op:16,bits:7,val:10},{op:0,bits:8,val:96},    {op:0,bits:8,val:32},{op:0,bits:9,val:161},{op:0,bits:8,val:0},{op:0,bits:8,val:128},{op:0,bits:8,val:64},{op:0,bits:9,val:225},{op:16,bits:7,val:6},    {op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:145},{op:19,bits:7,val:59},{op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:209},    {op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:177},{op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},    {op:0,bits:9,val:241},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},{op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},    {op:0,bits:8,val:52},{op:0,bits:9,val:201},{op:17,bits:7,val:13},{op:0,bits:8,val:100},{op:0,bits:8,val:36},{op:0,bits:9,val:169},{op:0,bits:8,val:4},    {op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:233},{op:16,bits:7,val:8},{op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:153},    {op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:217},{op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},    {op:0,bits:9,val:185},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},{op:0,bits:9,val:249},{op:16,bits:7,val:3},{op:0,bits:8,val:82},    {op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},{op:0,bits:8,val:50},{op:0,bits:9,val:197},{op:17,bits:7,val:11},    {op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:165},{op:0,bits:8,val:2},{op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:229},    {op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:149},{op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},    {op:0,bits:9,val:213},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},{op:0,bits:9,val:181},{op:0,bits:8,val:10},{op:0,bits:8,val:138},    {op:0,bits:8,val:74},{op:0,bits:9,val:245},{op:16,bits:7,val:5},{op:0,bits:8,val:86},{op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},    {op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:205},{op:17,bits:7,val:15},{op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:173},    {op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:237},{op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},    {op:0,bits:9,val:157},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},{op:0,bits:9,val:221},{op:18,bits:7,val:27},{op:0,bits:8,val:110},    {op:0,bits:8,val:46},{op:0,bits:9,val:189},{op:0,bits:8,val:14},{op:0,bits:8,val:142},{op:0,bits:8,val:78},{op:0,bits:9,val:253},{op:96,bits:7,val:0},    {op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},{op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:195},    {op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:163},{op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},    {op:0,bits:9,val:227},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},{op:0,bits:9,val:147},{op:19,bits:7,val:59},{op:0,bits:8,val:121},    {op:0,bits:8,val:57},{op:0,bits:9,val:211},{op:17,bits:7,val:17},{op:0,bits:8,val:105},{op:0,bits:8,val:41},{op:0,bits:9,val:179},{op:0,bits:8,val:9},    {op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:243},{op:16,bits:7,val:4},{op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},    {op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:203},{op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},    {op:0,bits:9,val:171},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},{op:0,bits:9,val:235},{op:16,bits:7,val:8},{op:0,bits:8,val:93},    {op:0,bits:8,val:29},{op:0,bits:9,val:155},{op:20,bits:7,val:83},{op:0,bits:8,val:125},{op:0,bits:8,val:61},{op:0,bits:9,val:219},{op:18,bits:7,val:23},    {op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:187},{op:0,bits:8,val:13},{op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:251},    {op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},{op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},    {op:0,bits:9,val:199},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},{op:0,bits:9,val:167},{op:0,bits:8,val:3},{op:0,bits:8,val:131},    {op:0,bits:8,val:67},{op:0,bits:9,val:231},{op:16,bits:7,val:7},{op:0,bits:8,val:91},{op:0,bits:8,val:27},{op:0,bits:9,val:151},{op:20,bits:7,val:67},    {op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:215},{op:18,bits:7,val:19},{op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:183},    {op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:247},{op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},    {op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},{op:0,bits:9,val:207},{op:17,bits:7,val:15},{op:0,bits:8,val:103},    {op:0,bits:8,val:39},{op:0,bits:9,val:175},{op:0,bits:8,val:7},{op:0,bits:8,val:135},{op:0,bits:8,val:71},{op:0,bits:9,val:239},{op:16,bits:7,val:9},    {op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:159},{op:20,bits:7,val:99},{op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:223},    {op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:191},{op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},    {op:0,bits:9,val:255}])",distfix_ary=null,distfix_def="([    {op:16,bits:5,val:1},{op:23,bits:5,val:257},{op:19,bits:5,val:17},{op:27,bits:5,val:4097},{op:17,bits:5,val:5},{op:25,bits:5,val:1025},    {op:21,bits:5,val:65},{op:29,bits:5,val:16385},{op:16,bits:5,val:3},{op:24,bits:5,val:513},{op:20,bits:5,val:33},{op:28,bits:5,val:8193},    {op:18,bits:5,val:9},{op:26,bits:5,val:2049},{op:22,bits:5,val:129},{op:64,bits:5,val:0},{op:16,bits:5,val:2},{op:23,bits:5,val:385},    {op:19,bits:5,val:25},{op:27,bits:5,val:6145},{op:17,bits:5,val:7},{op:25,bits:5,val:1537},{op:21,bits:5,val:97},{op:29,bits:5,val:24577},    {op:16,bits:5,val:4},{op:24,bits:5,val:769},{op:20,bits:5,val:49},{op:28,bits:5,val:12289},{op:18,bits:5,val:13},{op:26,bits:5,val:3073},    {op:22,bits:5,val:193},{op:64,bits:5,val:0}])";function fixedtables(state){var i;for(lenfix_ary||(lenfix_ary=eval(lenfix_def)),distfix_ary||(distfix_ary=eval(distfix_def)),state.lencode=0,state.distcode=512,i=0;i<512;i++)state.codes[i]=lenfix_ary[i];for(i=0;i<32;i++)state.codes[i+512]=distfix_ary[i];state.lenbits=9,state.distbits=5}function updatewindow(e){var t=e.state,n=e.output_data.length;return null===t.window&&(t.window=""),0==t.wsize&&(t.wsize=1<<t.wbits),n>=t.wsize?t.window=e.output_data.substring(n-t.wsize):t.whave+n<t.wsize?t.window+=e.output_data:t.window=t.window.substring(t.whave-(t.wsize-n))+e.output_data,t.whave=t.window.length,t.whave<t.wsize?t.wnext=t.whave:t.wnext=0,0}function CRC2(e,t){var n=[255&t,t>>>8&255];e.state.check=e.checksum_function(e.state.check,n,0,2)}function CRC4(e,t){var n=[255&t,t>>>8&255,t>>>16&255,t>>>24&255];e.state.check=e.checksum_function(e.state.check,n,0,4)}function LOAD(e,t){return t.strm=e,t.left=e.avail_out,t.next=e.next_in,t.have=e.avail_in,t.hold=e.state.hold,t.bits=e.state.bits,t}function RESTORE(e){var t=e.strm;t.next_in=e.next,t.avail_out=e.left,t.avail_in=e.have,t.state.hold=e.hold,t.state.bits=e.bits}function INITBITS(e){e.hold=0,e.bits=0}function PULLBYTE(e){return 0!=e.have&&(e.have--,e.hold+=(255&e.strm.input_data.charCodeAt(e.next++))<<e.bits,e.bits+=8,!0)}function NEEDBITS(e,t){for(;e.bits<t;)if(!PULLBYTE(e))return!1;return!0}function BITS(e,t){return e.hold&(1<<t)-1}function DROPBITS(e,t){e.hold>>>=t,e.bits-=t}function BYTEBITS(e){e.hold>>>=7&e.bits,e.bits-=7&e.bits}function REVERSE(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}var inflate_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];ZLIB.inflate=function(e,t){var n,r,a,o,i,s,l,u,c,d=-1,p=-1;if(!e||!e.state||!e.input_data&&0!=e.avail_in)return ZLIB.Z_STREAM_ERROR;(n=e.state).mode==TYPE&&(n.mode=TYPEDO),LOAD(e,r={}),a=r.have,o=r.left,c=ZLIB.Z_OK;e:for(;;)switch(n.mode){case HEAD:if(0==n.wrap){n.mode=TYPEDO;break}if(!NEEDBITS(r,16))break e;if(2&n.wrap&&35615==r.hold){n.check=e.checksum_function(0,null,0,0),CRC2(e,r.hold),INITBITS(r),n.mode=FLAGS;break}if(n.flags=0,null!==n.head&&(n.head.done=-1),!(1&n.wrap)||((BITS(r,8)<<8)+(r.hold>>>8))%31){e.msg="incorrect header check",n.mode=BAD;break}if(BITS(r,4)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",n.mode=BAD;break}if(DROPBITS(r,4),u=BITS(r,4)+8,0==n.wbits)n.wbits=u;else if(u>n.wbits){e.msg="invalid window size",n.mode=BAD;break}n.dmax=1<<u,e.adler=n.check=e.checksum_function(0,null,0,0),n.mode=512&r.hold?DICTID:TYPE,INITBITS(r);break;case FLAGS:if(!NEEDBITS(r,16))break e;if(n.flags=r.hold,(255&n.flags)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",n.mode=BAD;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=BAD;break}null!==n.head&&(n.head.text=r.hold>>>8&1),512&n.flags&&CRC2(e,r.hold),INITBITS(r),n.mode=TIME;case TIME:if(!NEEDBITS(r,32))break e;null!==n.head&&(n.head.time=r.hold),512&n.flags&&CRC4(e,r.hold),INITBITS(r),n.mode=OS;case OS:if(!NEEDBITS(r,16))break e;null!==n.head&&(n.head.xflags=255&r.hold,n.head.os=r.hold>>>8),512&n.flags&&CRC2(e,r.hold),INITBITS(r),n.mode=EXLEN;case EXLEN:if(1024&n.flags){if(!NEEDBITS(r,16))break e;n.length=r.hold,null!==n.head&&(n.head.extra_len=r.hold),512&n.flags&&CRC2(e,r.hold),INITBITS(r),n.head.extra=""}else null!==n.head&&(n.head.extra=null);n.mode=EXTRA;case EXTRA:if(1024&n.flags&&((i=n.length)>r.have&&(i=r.have),i&&(null!==n.head&&null!==n.head.extra&&(u=n.head.extra_len-n.length,n.head.extra+=e.input_data.substring(r.next,r.next+(u+i>n.head.extra_max?n.head.extra_max-u:i))),512&n.flags&&(n.check=e.checksum_function(n.check,e.input_data,r.next,i)),r.have-=i,r.next+=i,n.length-=i),n.length))break e;n.length=0,n.mode=NAME;case NAME:if(2048&n.flags){if(0==r.have)break e;null!==n.head&&null===n.head.name&&(n.head.name=""),i=0;do{if(u=e.input_data.charAt(r.next+i),i++,"\0"===u)break;null!==n.head&&n.length<n.head.name_max&&(n.head.name+=u,n.length++)}while(i<r.have);if(512&n.flags&&(n.check=e.checksum_function(n.check,e.input_data,r.next,i)),r.have-=i,r.next+=i,"\0"!==u)break e}else null!==n.head&&(n.head.name=null);n.length=0,n.mode=COMMENT;case COMMENT:if(4096&n.flags){if(0==r.have)break e;i=0,null!==n.head&&null===n.head.comment&&(n.head.comment="");do{if(u=e.input_data.charAt(r.next+i),i++,"\0"===u)break;null!==n.head&&n.length<n.head.comm_max&&(n.head.comment+=u,n.length++)}while(i<r.have);if(512&n.flags&&(n.check=e.checksum_function(n.check,e.input_data,r.next,i)),r.have-=i,r.next+=i,"\0"!==u)break e}else null!==n.head&&(n.head.comment=null);n.mode=HCRC;case HCRC:if(512&n.flags){if(!NEEDBITS(r,16))break e;if(r.hold!=(65535&n.check)){e.msg="header crc mismatch",n.mode=BAD;break}INITBITS(r)}null!==n.head&&(n.head.hcrc=n.flags>>>9&1,n.head.done=1),e.adler=n.check=e.checksum_function(0,null,0,0),n.mode=TYPE;break;case DICTID:if(!NEEDBITS(r,32))break e;e.adler=n.check=REVERSE(r.hold),INITBITS(r),n.mode=DICT;case DICT:if(0==n.havedict)return RESTORE(r),ZLIB.Z_NEED_DICT;e.adler=n.check=e.checksum_function(0,null,0,0),n.mode=TYPE;case TYPE:if(t==ZLIB.Z_BLOCK||t==ZLIB.Z_TREES)break e;case TYPEDO:if(n.last){BYTEBITS(r),n.mode=CHECK;break}if(!NEEDBITS(r,3))break e;switch(n.last=BITS(r,1),DROPBITS(r,1),BITS(r,2)){case 0:n.mode=STORED;break;case 1:if(fixedtables(n),n.mode=LEN_,t==ZLIB.Z_TREES){DROPBITS(r,2);break e}break;case 2:n.mode=TABLE;break;case 3:e.msg="invalid block type",n.mode=BAD}DROPBITS(r,2);break;case STORED:if(BYTEBITS(r),!NEEDBITS(r,32))break e;if((65535&r.hold)!=(r.hold>>>16&65535^65535)){e.msg="invalid stored block lengths",n.mode=BAD;break}if(n.length=65535&r.hold,INITBITS(r),n.mode=COPY_,t==ZLIB.Z_TREES)break e;case COPY_:n.mode=COPY;case COPY:if(i=n.length){if(i>r.have&&(i=r.have),i>r.left&&(i=r.left),0==i)break e;e.output_data+=e.input_data.substring(r.next,r.next+i),e.next_out+=i,r.have-=i,r.next+=i,r.left-=i,n.length-=i;break}n.mode=TYPE;break;case TABLE:if(!NEEDBITS(r,14))break e;if(n.nlen=BITS(r,5)+257,DROPBITS(r,5),n.ndist=BITS(r,5)+1,DROPBITS(r,5),n.ncode=BITS(r,4)+4,DROPBITS(r,4),n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=BAD;break}n.have=0,n.mode=LENLENS;case LENLENS:for(;n.have<n.ncode;){if(!NEEDBITS(r,3))break e;var f=BITS(r,3);n.lens[inflate_order[n.have++]]=f,DROPBITS(r,3)}for(;n.have<19;)n.lens[inflate_order[n.have++]]=0;if(n.next=0,n.lencode=0,n.lenbits=7,c=inflate_table(n,CODES)){e.msg="invalid code lengths set",n.mode=BAD;break}n.have=0,n.mode=CODELENS;case CODELENS:for(;n.have<n.nlen+n.ndist;){for(;!((s=n.codes[n.lencode+BITS(r,n.lenbits)]).bits<=r.bits);)if(!PULLBYTE(r))break e;if(s.val<16)DROPBITS(r,s.bits),n.lens[n.have++]=s.val;else{if(16==s.val){if(!NEEDBITS(r,s.bits+2))break e;if(DROPBITS(r,s.bits),0==n.have){e.msg="invalid bit length repeat",n.mode=BAD;break}u=n.lens[n.have-1],i=3+BITS(r,2),DROPBITS(r,2)}else if(17==s.val){if(!NEEDBITS(r,s.bits+3))break e;DROPBITS(r,s.bits),u=0,i=3+BITS(r,3),DROPBITS(r,3)}else{if(!NEEDBITS(r,s.bits+7))break e;DROPBITS(r,s.bits),u=0,i=11+BITS(r,7),DROPBITS(r,7)}if(n.have+i>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=BAD;break}for(;i--;)n.lens[n.have++]=u}}if(n.mode==BAD)break;if(0==n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=BAD;break}if(n.next=0,n.lencode=n.next,n.lenbits=9,c=inflate_table(n,LENS)){e.msg="invalid literal/lengths set",n.mode=BAD;break}if(n.distcode=n.next,n.distbits=6,c=inflate_table(n,DISTS)){e.msg="invalid distances set",n.mode=BAD;break}if(n.mode=LEN_,t==ZLIB.Z_TREES)break e;case LEN_:n.mode=LEN;case LEN:if(r.have>=6&&r.left>=258){RESTORE(r),inflate_fast(e,o),LOAD(e,r),n.mode==TYPE&&(n.back=-1);break}for(n.back=0;!((s=n.codes[n.lencode+BITS(r,n.lenbits)]).bits<=r.bits);)if(!PULLBYTE(r))break e;if(s.op&&0==(240&s.op)){for(l=s;s=n.codes[n.lencode+l.val+(BITS(r,l.bits+l.op)>>>l.bits)],!(l.bits+s.bits<=r.bits);)if(!PULLBYTE(r))break e;DROPBITS(r,l.bits),n.back+=l.bits}if(DROPBITS(r,s.bits),n.back+=s.bits,n.length=s.val,0==s.op){n.mode=LIT;break}if(32&s.op){n.back=-1,n.mode=TYPE;break}if(64&s.op){e.msg="invalid literal/length code",n.mode=BAD;break}n.extra=15&s.op,n.mode=LENEXT;case LENEXT:if(n.extra){if(!NEEDBITS(r,n.extra))break e;n.length+=BITS(r,n.extra),DROPBITS(r,n.extra),n.back+=n.extra}n.was=n.length,n.mode=DIST;case DIST:for(;!((s=n.codes[n.distcode+BITS(r,n.distbits)]).bits<=r.bits);)if(!PULLBYTE(r))break e;if(0==(240&s.op)){for(l=s;s=n.codes[n.distcode+l.val+(BITS(r,l.bits+l.op)>>>l.bits)],!(l.bits+s.bits<=r.bits);)if(!PULLBYTE(r))break e;DROPBITS(r,l.bits),n.back+=l.bits}if(DROPBITS(r,s.bits),n.back+=s.bits,64&s.op){e.msg="invalid distance code",n.mode=BAD;break}n.offset=s.val,n.extra=15&s.op,n.mode=DISTEXT;case DISTEXT:if(n.extra){if(!NEEDBITS(r,n.extra))break e;n.offset+=BITS(r,n.extra),DROPBITS(r,n.extra),n.back+=n.extra}n.mode=MATCH;case MATCH:if(0==r.left)break e;if(i=o-r.left,n.offset>i){if((i=n.offset-i)>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=BAD;break}i>n.wnext?(i-=n.wnext,d=n.wsize-i,p=-1):(d=n.wnext-i,p=-1),i>n.length&&(i=n.length)}else d=-1,p=e.next_out-n.offset,i=n.length;if(i>r.left&&(i=r.left),r.left-=i,n.length-=i,d>=0)e.output_data+=n.window.substring(d,d+i),e.next_out+=i,i=0;else{e.next_out+=i;do{e.output_data+=e.output_data.charAt(p++)}while(--i)}0==n.length&&(n.mode=LEN);break;case LIT:if(0==r.left)break e;e.output_data+=String.fromCharCode(n.length),e.next_out++,r.left--,n.mode=LEN;break;case CHECK:if(n.wrap){if(!NEEDBITS(r,32))break e;if(o-=r.left,e.total_out+=o,n.total+=o,o&&(e.adler=n.check=e.checksum_function(n.check,e.output_data,e.output_data.length-o,o)),o=r.left,(n.flags?r.hold:REVERSE(r.hold))!=n.check){e.msg="incorrect data check",n.mode=BAD;break}INITBITS(r)}n.mode=LENGTH;case LENGTH:if(n.wrap&&n.flags){if(!NEEDBITS(r,32))break e;if(r.hold!=(4294967295&n.total)){e.msg="incorrect length check",n.mode=BAD;break}INITBITS(r)}n.mode=DONE;case DONE:c=ZLIB.Z_STREAM_END;break e;case BAD:c=ZLIB.Z_DATA_ERROR;break e;case MEM:return ZLIB.Z_MEM_ERROR;default:return ZLIB.Z_STREAM_ERROR}return RESTORE(r),(n.wsize||o!=e.avail_out&&n.mode<BAD&&(n.mode<CHECK||t!=ZLIB.Z_FINISH))&&updatewindow(e)?(n.mode=MEM,ZLIB.Z_MEM_ERROR):(a-=e.avail_in,o-=e.avail_out,e.total_in+=a,e.total_out+=o,n.total+=o,n.wrap&&o&&(e.adler=n.check=e.checksum_function(n.check,e.output_data,0,e.output_data.length)),e.data_type=n.bits+(n.last?64:0)+(n.mode==TYPE?128:0)+(n.mode==LEN_||n.mode==COPY_?256:0),(0==a&&0==o||t==ZLIB.Z_FINISH)&&c==ZLIB.Z_OK&&(c=ZLIB.Z_BUF_ERROR),c)},ZLIB.inflateEnd=function(e){return e&&e.state?(e.state.window=null,e.state=null,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.z_stream.prototype.inflate=function(e,t){var n,r;this.input_data=e,this.next_in=getarg(t,"next_in",0),this.avail_in=getarg(t,"avail_in",e.length-this.next_in),n=getarg(t,"flush",ZLIB.Z_SYNC_FLUSH),r=getarg(t,"avail_out",-1);var a="";do{if(this.avail_out=r>=0?r:16384,this.output_data="",this.next_out=0,this.error=ZLIB.inflate(this,n),0!=this.error&&console.log("zlib error",this.error),r>=0)return this.output_data;if(a+=this.output_data,this.avail_out>0)break}while(this.error==ZLIB.Z_OK);return a},ZLIB.z_stream.prototype.inflateReset=function(e){return ZLIB.inflateReset(this,e)}}(),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-adler32.js"),BASE=65521,NMAX=5552,ZLIB.adler32=function(e,t,n,r){return"string"==typeof t?function(e,t,n,r){var a,o;if(a=e>>>16&65535,e&=65535,1==r)return(e+=255&t.charCodeAt(n))>=BASE&&(e-=BASE),(a+=e)>=BASE&&(a-=BASE),e|a<<16;if(null===t)return 1;if(r<16){for(;r--;)a+=e+=255&t.charCodeAt(n++);return e>=BASE&&(e-=BASE),e|(a%=BASE)<<16}for(;r>=NMAX;){r-=NMAX,o=347;do{a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++)}while(--o);e%=BASE,a%=BASE}if(r){for(;r>=16;)r-=16,a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++);for(;r--;)a+=e+=255&t.charCodeAt(n++);e%=BASE,a%=BASE}return e|a<<16}(e,t,n,r):function(e,t,n,r){var a,o;if(a=e>>>16&65535,e&=65535,1==r)return(e+=t[n])>=BASE&&(e-=BASE),(a+=e)>=BASE&&(a-=BASE),e|a<<16;if(null===t)return 1;if(r<16){for(;r--;)a+=e+=t[n++];return e>=BASE&&(e-=BASE),e|(a%=BASE)<<16}for(;r>=NMAX;){r-=NMAX,o=347;do{a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++]}while(--o);e%=BASE,a%=BASE}if(r){for(;r>=16;)r-=16,a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++];for(;r--;)a+=e+=t[n++];e%=BASE,a%=BASE}return e|a<<16}(e,t,n,r)},ZLIB.adler32_combine=function(e,t,n){var r,a,o;return n<0?4294967295:(a=(o=n%=BASE)*(r=65535&e),a%=BASE,(r+=(65535&t)+BASE-1)>=BASE&&(r-=BASE),r>=BASE&&(r-=BASE),(a+=(e>>16&65535)+(t>>16&65535)+BASE-o)>=131042&&(a-=131042),a>=BASE&&(a-=BASE),r|a<<16)},void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-crc32.js"),function(){var e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function t(e,t){var n,r=0;for(n=0;t;)1&t&&(n^=e[r]),t>>=1,r++;return n}function n(e,n){var r;for(r=0;r<32;r++)e[r]=t(n,n[r])}ZLIB.crc32=function(t,n,r,a){return"string"==typeof n?function(t,n,r,a){if(null==n)return 0;for(t^=4294967295;a>=8;)t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,a-=8;if(a)do{t=e[255&(t^n.charCodeAt(r++))]^t>>>8}while(--a);return 4294967295^t}(t,n,r,a):function(t,n,r,a){if(null==n)return 0;for(t^=4294967295;a>=8;)t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,a-=8;if(a)do{t=e[255&(t^n[r++])]^t>>>8}while(--a);return 4294967295^t}(t,n,r,a)},ZLIB.crc32_combine=function(e,r,a){var o,i,s,l;if(a<=0)return e;for(s=new Array(32),(l=new Array(32))[0]=3988292384,i=1,o=1;o<32;o++)l[o]=i,i<<=1;n(s,l),n(l,s);do{if(n(s,l),1&a&&(e=t(s,e)),0==(a>>=1))break;n(l,s),1&a&&(e=t(l,e)),a>>=1}while(0!=a);return e^r}}(),module.exports=ZLIB}},__webpack_module_cache__={};function __nested_webpack_require_78642__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__nested_webpack_require_78642__),n.exports}__nested_webpack_require_78642__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_78642__.d(t,{a:t}),t},__nested_webpack_require_78642__.d=(e,t)=>{for(var n in t)__nested_webpack_require_78642__.o(t,n)&&!__nested_webpack_require_78642__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__nested_webpack_require_78642__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_78642__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __nested_webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_78642__.r(__nested_webpack_exports__),__nested_webpack_require_78642__.d(__nested_webpack_exports__,{AMTDesktop:()=>e.r,AMTKeyCodeConverter:()=>p.qD,AMTKvmDataRedirector:()=>t.N,AMTRedirector:()=>n.K,AmtTerminal:()=>r.r,CommsHelper:()=>p.Xn,ConsoleLogger:()=>a.k,DataProcessor:()=>c.$,Desktop:()=>i.H,Encoding:()=>d.ez,FrameBufferBellServerCutText:()=>d.Ut,HandshakeState:()=>d.wW,ImageHelper:()=>p.jw,KeyBoardHelper:()=>p.EB,LogLevel:()=>u.i,MouseHelper:()=>p.xx,Protocol:()=>n.b,RLEDecoder:()=>c.X,SecurityOptions:()=>d.ll,SecurityResponse:()=>d.mC,ServerInit:()=>d.Cu,StateProcessorFactory:()=>s.v,TerminalDataProcessor:()=>l.Q,TypeConverter:()=>o.r,isTruthy:()=>p.fQ});var e=__nested_webpack_require_78642__(166),t=__nested_webpack_require_78642__(59),n=__nested_webpack_require_78642__(503),r=__nested_webpack_require_78642__(277),a=__nested_webpack_require_78642__(237),o=__nested_webpack_require_78642__(565),i=__nested_webpack_require_78642__(46),s=__nested_webpack_require_78642__(989),l=__nested_webpack_require_78642__(155),u=__nested_webpack_require_78642__(201),c=__nested_webpack_require_78642__(646),d=__nested_webpack_require_78642__(389),p=__nested_webpack_require_78642__(8)})(),__nested_webpack_exports__})(),module.exports=e()},648:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".button{margin-right:3px;padding:2px;min-width:90px}","",{version:3,sources:["webpack://./src/reactjs/KVM/ConnectButton.scss"],names:[],mappings:"AAKA,QACI,gBAAA,CACA,WAAA,CACA,cAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n\n.button{\n    margin-right: 3px;\n    padding: 2px;\n    min-width: 90px\n}"],sourceRoot:""}]);const s=i},625:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".encoding{margin-left:10px}.encoding label{padding:2px;font-size:15px}.encoding select{padding:2px 0}.reldisabled{opacity:.5}","",{version:3,sources:["webpack://./src/reactjs/KVM/EncodingOptions.scss"],names:[],mappings:"AAKA,UACI,gBAAA,CAEF,gBACE,WAAA,CACA,cAAA,CAEF,iBACE,aAAA,CAGF,aACE,UAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n.encoding {\n    margin-left: 10px;\n  }\n  .encoding label {      \n    padding: 2px;\n    font-size: 15px;\n  }\n  .encoding select {\n    padding: 2px 0;\n  }\n  \n  .reldisabled{\n    opacity: 0.5;\n  }"],sourceRoot:""}]);const s=i},734:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".header{background-color:#a9a9a9;padding:5px;font-size:13px}","",{version:3,sources:["webpack://./src/reactjs/KVM/Header.scss"],names:[],mappings:"AAKA,QACE,wBAAA,CACA,WAAA,CACA,cAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n.header {\n  background-color: darkgray;\n  padding: 5px;\n  font-size: 13px;\n}\n"],sourceRoot:""}]);const s=i},250:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".canvas{max-height:90%;max-width:100%}","",{version:3,sources:["webpack://./src/reactjs/KVM/PureCanvas.scss"],names:[],mappings:"AAKA,QACI,cAAA,CACA,cAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n.canvas{\n    max-height: 90%;\n    max-width: 100%;\n}\n"],sourceRoot:""}]);const s=i},917:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,"*{margin:0;padding:0;box-sizing:border-box}.canvas-container{height:100vh;text-align:center;background-color:#fff}","",{version:3,sources:["webpack://./src/reactjs/KVM/UI.scss"],names:[],mappings:"AAKA,EACI,QAAA,CACA,SAAA,CACA,qBAAA,CAGJ,kBACG,YAAA,CACA,iBAAA,CACA,qBAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n*{ // * refers every element and removes default margin  padding that comes with html elements body, h1 etc\n    margin:0;\n    padding:0;\n    box-sizing: border-box; //element padding and border are included in the width and height\n}\n\n.canvas-container{\n   height: 100vh; \n   text-align: center;\n   background-color: #ffffff;\n}\n"],sourceRoot:""}]);const s=i},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(s[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},h={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function y(e,t,n,r){var a=m.hasOwnProperty(t)?m[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(h,e)||!d.call(f,e)&&(p.test(e)?h[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,b);m[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,b);m[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,b);m[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var S=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),C=Symbol.for("react.fragment"),_=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),T=Symbol.for("react.context"),A=Symbol.for("react.forward_ref"),I=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),L=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var P=Symbol.iterator;function O(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=P&&e[P]||e["@@iterator"])?e:null}var M,B=Object.assign;function F(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var z=!1;function U(e,t){if(!e||z)return"";z=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,s=o.length-1;1<=i&&0<=s&&a[i]!==o[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==o[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==o[s]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=s);break}}}finally{z=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function H(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function j(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case k:return"Portal";case x:return"Profiler";case _:return"StrictMode";case I:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case A:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:j(e.type)||"Memo";case L:t=e._payload,e=e._init;try{return j(e(t))}catch(e){}}return null}function V(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return j(t);case 8:return t===_?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function K(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Z(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function W(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return B({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&y(e,"checked",t,!1)}function G(e,t){Q(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&W(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return B({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function oe(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function me(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ge(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(fe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var ve=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function ye(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Se=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ce=null,_e=null;function xe(e){if(e=ya(e)){if("function"!=typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=wa(t),ke(e.stateNode,e.type,t))}}function Ee(e){Ce?_e?_e.push(e):_e=[e]:Ce=e}function Te(){if(Ce){var e=Ce,t=_e;if(_e=Ce=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Ae(e,t){return e(t)}function Ie(){}var Ne=!1;function Re(e,t,n){if(Ne)return e(t,n);Ne=!0;try{return Ae(e,t,n)}finally{Ne=!1,(null!==Ce||null!==_e)&&(Ie(),Te())}}function Le(e,t){var n=e.stateNode;if(null===n)return null;var r=wa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var De=!1;if(c)try{var Pe={};Object.defineProperty(Pe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Pe,Pe),window.removeEventListener("test",Pe,Pe)}catch(ce){De=!1}function Oe(e,t,n,r,a,o,i,s,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Me=!1,Be=null,Fe=!1,ze=null,Ue={onError:function(e){Me=!0,Be=e}};function He(e,t,n,r,a,o,i,s,l){Me=!1,Be=null,Oe.apply(Ue,arguments)}function je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ve(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ke(e){if(je(e)!==e)throw Error(o(188))}function $e(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=je(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Ke(a),e;if(i===r)return Ke(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var s=!1,l=a.child;l;){if(l===n){s=!0,n=a,r=i;break}if(l===r){s=!0,r=a,n=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===n){s=!0,n=i,r=a;break}if(l===r){s=!0,r=i,n=a;break}l=l.sibling}if(!s)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?Ze(e):null}function Ze(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ze(e);if(null!==t)return t;e=e.sibling}return null}var qe=a.unstable_scheduleCallback,We=a.unstable_cancelCallback,Xe=a.unstable_shouldYield,Ye=a.unstable_requestPaint,Qe=a.unstable_now,Ge=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,ot=null,it=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(st(e)/lt|0)|0},st=Math.log,lt=Math.LN2,ut=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&n;if(0!==i){var s=i&~a;0!==s?r=dt(s):0!=(o&=i)&&(r=dt(o))}else 0!=(i=n&~a)?r=dt(i):0!==o&&(r=dt(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-it(t)),r|=e[n],t&=~a;return r}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(){var e=ut;return 0==(4194240&(ut<<=1))&&(ut=64),e}function mt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function vt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var yt=0;function St(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var wt,kt,Ct,_t,xt,Et=!1,Tt=[],At=null,It=null,Nt=null,Rt=new Map,Lt=new Map,Dt=[],Pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":At=null;break;case"dragenter":case"dragleave":It=null;break;case"mouseover":case"mouseout":Nt=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Lt.delete(t.pointerId)}}function Mt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&null!==(t=ya(t))&&kt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Bt(e){var t=ba(e.target);if(null!==t){var n=je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ve(n)))return e.blockedOn=t,void xt(e.priority,(function(){Ct(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ya(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);Se=r,n.target.dispatchEvent(r),Se=null,t.shift()}return!0}function zt(e,t,n){Ft(e)&&n.delete(t)}function Ut(){Et=!1,null!==At&&Ft(At)&&(At=null),null!==It&&Ft(It)&&(It=null),null!==Nt&&Ft(Nt)&&(Nt=null),Rt.forEach(zt),Lt.forEach(zt)}function Ht(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ut)))}function jt(e){function t(t){return Ht(t,e)}if(0<Tt.length){Ht(Tt[0],e);for(var n=1;n<Tt.length;n++){var r=Tt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==At&&Ht(At,e),null!==It&&Ht(It,e),null!==Nt&&Ht(Nt,e),Rt.forEach(t),Lt.forEach(t),n=0;n<Dt.length;n++)(r=Dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Bt(n),null===n.blockedOn&&Dt.shift()}var Vt=S.ReactCurrentBatchConfig,Kt=!0;function $t(e,t,n,r){var a=yt,o=Vt.transition;Vt.transition=null;try{yt=1,qt(e,t,n,r)}finally{yt=a,Vt.transition=o}}function Zt(e,t,n,r){var a=yt,o=Vt.transition;Vt.transition=null;try{yt=4,qt(e,t,n,r)}finally{yt=a,Vt.transition=o}}function qt(e,t,n,r){if(Kt){var a=Xt(e,t,n,r);if(null===a)Kr(e,t,r,Wt,n),Ot(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return At=Mt(At,e,t,n,r,a),!0;case"dragenter":return It=Mt(It,e,t,n,r,a),!0;case"mouseover":return Nt=Mt(Nt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Rt.set(o,Mt(Rt.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Lt.set(o,Mt(Lt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Ot(e,r),4&t&&-1<Pt.indexOf(e)){for(;null!==a;){var o=ya(a);if(null!==o&&wt(o),null===(o=Xt(e,t,n,r))&&Kr(e,t,r,Wt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else Kr(e,t,r,null,n)}}var Wt=null;function Xt(e,t,n,r){if(Wt=null,null!==(e=ba(e=we(r))))if(null===(t=je(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ve(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Wt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ge()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Qt=null,Gt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Gt,r=n.length,a="value"in Qt?Qt.value:Qt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return B(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),dn=B({},un,{view:0,detail:0}),pn=an(dn),fn=B({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:xn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(on=e.screenX-ln.screenX,sn=e.screenY-ln.screenY):sn=on=0,ln=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),hn=an(fn),gn=an(B({},fn,{dataTransfer:0})),mn=an(B({},dn,{relatedTarget:0})),vn=an(B({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=B({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yn=an(bn),Sn=an(B({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function xn(){return _n}var En=B({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:xn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=an(En),An=an(B({},fn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),In=an(B({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:xn})),Nn=an(B({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=B({},fn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Ln=an(Rn),Dn=[9,13,27,32],Pn=c&&"CompositionEvent"in window,On=null;c&&"documentMode"in document&&(On=document.documentMode);var Mn=c&&"TextEvent"in window&&!On,Bn=c&&(!Pn||On&&8<On&&11>=On),Fn=String.fromCharCode(32),zn=!1;function Un(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Hn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jn=!1,Vn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Kn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Vn[e.type]:"textarea"===t}function $n(e,t,n,r){Ee(r),0<(t=Zr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Zn=null,qn=null;function Wn(e){Fr(e,0)}function Xn(e){if(q(Sa(e)))return e}function Yn(e,t){if("change"===e)return t}var Qn=!1;if(c){var Gn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Gn=Jn}else Gn=!1;Qn=Gn&&(!document.documentMode||9<document.documentMode)}function tr(){Zn&&(Zn.detachEvent("onpropertychange",nr),qn=Zn=null)}function nr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];$n(t,qn,e,we(e)),Re(Wn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Zn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function or(e,t){if("click"===e)return Xn(t)}function ir(e,t){if("input"===e||"change"===e)return Xn(t)}var sr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function lr(e,t){if(sr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!sr(e[a],t[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pr(){for(var e=window,t=W();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=W((e=t.contentWindow).document)}return t}function fr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=pr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&fr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=cr(n,o);var i=cr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gr=c&&"documentMode"in document&&11>=document.documentMode,mr=null,vr=null,br=null,yr=!1;function Sr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==mr||mr!==W(r)||(r="selectionStart"in(r=mr)&&fr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=Zr(vr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}function wr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Cr={},_r={};function xr(e){if(Cr[e])return Cr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in _r)return Cr[e]=n[t];return e}c&&(_r=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Er=xr("animationend"),Tr=xr("animationiteration"),Ar=xr("animationstart"),Ir=xr("transitionend"),Nr=new Map,Rr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Lr(e,t){Nr.set(e,t),l(t,[e])}for(var Dr=0;Dr<Rr.length;Dr++){var Pr=Rr[Dr];Lr(Pr.toLowerCase(),"on"+(Pr[0].toUpperCase()+Pr.slice(1)))}Lr(Er,"onAnimationEnd"),Lr(Tr,"onAnimationIteration"),Lr(Ar,"onAnimationStart"),Lr("dblclick","onDoubleClick"),Lr("focusin","onFocus"),Lr("focusout","onBlur"),Lr(Ir,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Or="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Or));function Br(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,s,l,u){if(He.apply(this,arguments),Me){if(!Me)throw Error(o(198));var c=Be;Me=!1,Be=null,Fe||(Fe=!0,ze=c)}}(r,t,void 0,e),e.currentTarget=null}function Fr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var s=r[i],l=s.instance,u=s.currentTarget;if(s=s.listener,l!==o&&a.isPropagationStopped())break e;Br(a,s,u),o=l}else for(i=0;i<r.length;i++){if(l=(s=r[i]).instance,u=s.currentTarget,s=s.listener,l!==o&&a.isPropagationStopped())break e;Br(a,s,u),o=l}}}if(Fe)throw e=ze,Fe=!1,ze=null,e}function zr(e,t){var n=t[ga];void 0===n&&(n=t[ga]=new Set);var r=e+"__bubble";n.has(r)||(Vr(t,e,2,!1),n.add(r))}function Ur(e,t,n){var r=0;t&&(r|=4),Vr(n,e,r,t)}var Hr="_reactListening"+Math.random().toString(36).slice(2);function jr(e){if(!e[Hr]){e[Hr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Ur(t,!1,e),Ur(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Hr]||(t[Hr]=!0,Ur("selectionchange",!1,t))}}function Vr(e,t,n,r){switch(Yt(t)){case 1:var a=$t;break;case 4:a=Zt;break;default:a=qt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Kr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=ba(s)))return;if(5===(l=i.tag)||6===l){r=o=i;continue e}s=s.parentNode}}r=r.return}Re((function(){var r=o,a=we(n),i=[];e:{var s=Nr.get(e);if(void 0!==s){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Tn;break;case"focusin":u="focus",l=mn;break;case"focusout":u="blur",l=mn;break;case"beforeblur":case"afterblur":l=mn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=In;break;case Er:case Tr:case Ar:l=vn;break;case Ir:l=Nn;break;case"scroll":l=pn;break;case"wheel":l=Ln;break;case"copy":case"cut":case"paste":l=yn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=An}var c=0!=(4&t),d=!c&&"scroll"===e,p=c?null!==s?s+"Capture":null:s;c=[];for(var f,h=r;null!==h;){var g=(f=h).stateNode;if(5===f.tag&&null!==g&&(f=g,null!==p&&null!=(g=Le(h,p))&&c.push($r(h,g,f))),d)break;h=h.return}0<c.length&&(s=new l(s,u,null,n,a),i.push({event:s,listeners:c}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===Se||!(u=n.relatedTarget||n.fromElement)||!ba(u)&&!u[ha])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ba(u):null)&&(u!==(d=je(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=hn,g="onMouseLeave",p="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=An,g="onPointerLeave",p="onPointerEnter",h="pointer"),d=null==l?s:Sa(l),f=null==u?s:Sa(u),(s=new c(g,h+"leave",l,n,a)).target=d,s.relatedTarget=f,g=null,ba(a)===r&&((c=new c(p,h+"enter",u,n,a)).target=f,c.relatedTarget=d,g=c),d=g,l&&u)e:{for(p=u,h=0,f=c=l;f;f=qr(f))h++;for(f=0,g=p;g;g=qr(g))f++;for(;0<h-f;)c=qr(c),h--;for(;0<f-h;)p=qr(p),f--;for(;h--;){if(c===p||null!==p&&c===p.alternate)break e;c=qr(c),p=qr(p)}c=null}else c=null;null!==l&&Wr(i,s,l,c,!1),null!==u&&null!==d&&Wr(i,d,u,c,!0)}if("select"===(l=(s=r?Sa(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var m=Yn;else if(Kn(s))if(Qn)m=ir;else{m=ar;var v=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(m=or);switch(m&&(m=m(e,r))?$n(i,m,n,a):(v&&v(e,s,r),"focusout"===e&&(v=s._wrapperState)&&v.controlled&&"number"===s.type&&ee(s,"number",s.value)),v=r?Sa(r):window,e){case"focusin":(Kn(v)||"true"===v.contentEditable)&&(mr=v,vr=r,br=null);break;case"focusout":br=vr=mr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,Sr(i,n,a);break;case"selectionchange":if(gr)break;case"keydown":case"keyup":Sr(i,n,a)}var b;if(Pn)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else jn?Un(e,n)&&(y="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(y="onCompositionStart");y&&(Bn&&"ko"!==n.locale&&(jn||"onCompositionStart"!==y?"onCompositionEnd"===y&&jn&&(b=en()):(Gt="value"in(Qt=a)?Qt.value:Qt.textContent,jn=!0)),0<(v=Zr(r,y)).length&&(y=new Sn(y,e,null,n,a),i.push({event:y,listeners:v}),(b||null!==(b=Hn(n)))&&(y.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Hn(t);case"keypress":return 32!==t.which?null:(zn=!0,Fn);case"textInput":return(e=t.data)===Fn&&zn?null:e;default:return null}}(e,n):function(e,t){if(jn)return"compositionend"===e||!Pn&&Un(e,t)?(e=en(),Jt=Gt=Qt=null,jn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Bn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Zr(r,"onBeforeInput")).length&&(a=new Sn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b)}Fr(i,t)}))}function $r(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Zr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Le(e,n))&&r.unshift($r(e,o,a)),null!=(o=Le(e,t))&&r.push($r(e,o,a))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Wr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var s=n,l=s.alternate,u=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==u&&(s=u,a?null!=(l=Le(n,o))&&i.unshift($r(n,l,s)):a||null!=(l=Le(n,o))&&i.push($r(n,l,s))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Qr(e){return("string"==typeof e?e:""+e).replace(Xr,"\n").replace(Yr,"")}function Gr(e,t,n){if(t=Qr(t),Qr(e)!==t&&n)throw Error(o(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(sa)}:ra;function sa(e){setTimeout((function(){throw e}))}function la(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void jt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);jt(t)}function ua(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),pa="__reactFiber$"+da,fa="__reactProps$"+da,ha="__reactContainer$"+da,ga="__reactEvents$"+da,ma="__reactListeners$"+da,va="__reactHandles$"+da;function ba(e){var t=e[pa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[pa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[pa])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ya(e){return!(e=e[pa]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Sa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function wa(e){return e[fa]||null}var ka=[],Ca=-1;function _a(e){return{current:e}}function xa(e){0>Ca||(e.current=ka[Ca],ka[Ca]=null,Ca--)}function Ea(e,t){Ca++,ka[Ca]=e.current,e.current=t}var Ta={},Aa=_a(Ta),Ia=_a(!1),Na=Ta;function Ra(e,t){var n=e.type.contextTypes;if(!n)return Ta;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function La(e){return null!=e.childContextTypes}function Da(){xa(Ia),xa(Aa)}function Pa(e,t,n){if(Aa.current!==Ta)throw Error(o(168));Ea(Aa,t),Ea(Ia,n)}function Oa(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(o(108,V(e)||"Unknown",a));return B({},n,r)}function Ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ta,Na=Aa.current,Ea(Aa,e),Ea(Ia,Ia.current),!0}function Ba(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Oa(e,t,Na),r.__reactInternalMemoizedMergedChildContext=e,xa(Ia),xa(Aa),Ea(Aa,e)):xa(Ia),Ea(Ia,n)}var Fa=null,za=!1,Ua=!1;function Ha(e){null===Fa?Fa=[e]:Fa.push(e)}function ja(){if(!Ua&&null!==Fa){Ua=!0;var e=0,t=yt;try{var n=Fa;for(yt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Fa=null,za=!1}catch(t){throw null!==Fa&&(Fa=Fa.slice(e+1)),qe(Je,ja),t}finally{yt=t,Ua=!1}}return null}var Va=[],Ka=0,$a=null,Za=0,qa=[],Wa=0,Xa=null,Ya=1,Qa="";function Ga(e,t){Va[Ka++]=Za,Va[Ka++]=$a,$a=e,Za=t}function Ja(e,t,n){qa[Wa++]=Ya,qa[Wa++]=Qa,qa[Wa++]=Xa,Xa=e;var r=Ya;e=Qa;var a=32-it(r)-1;r&=~(1<<a),n+=1;var o=32-it(t)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Ya=1<<32-it(t)+a|n<<a|r,Qa=o+e}else Ya=1<<o|n<<a|r,Qa=e}function eo(e){null!==e.return&&(Ga(e,1),Ja(e,1,0))}function to(e){for(;e===$a;)$a=Va[--Ka],Va[Ka]=null,Za=Va[--Ka],Va[Ka]=null;for(;e===Xa;)Xa=qa[--Wa],qa[Wa]=null,Qa=qa[--Wa],qa[Wa]=null,Ya=qa[--Wa],qa[Wa]=null}var no=null,ro=null,ao=!1,oo=null;function io(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function so(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=ua(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xa?{id:Ya,overflow:Qa}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Lu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function lo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function uo(e){if(ao){var t=ro;if(t){var n=t;if(!so(e,t)){if(lo(e))throw Error(o(418));t=ua(n.nextSibling);var r=no;t&&so(e,t)?io(r,n):(e.flags=-4097&e.flags|2,ao=!1,no=e)}}else{if(lo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,no=e}}}function co(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function po(e){if(e!==no)return!1;if(!ao)return co(e),ao=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ro)){if(lo(e))throw fo(),Error(o(418));for(;t;)io(e,t),t=ua(t.nextSibling)}if(co(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=ua(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?ua(e.stateNode.nextSibling):null;return!0}function fo(){for(var e=ro;e;)e=ua(e.nextSibling)}function ho(){ro=no=null,ao=!1}function go(e){null===oo?oo=[e]:oo.push(e)}var mo=S.ReactCurrentBatchConfig;function vo(e,t){if(e&&e.defaultProps){for(var n in t=B({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var bo=_a(null),yo=null,So=null,wo=null;function ko(){wo=So=yo=null}function Co(e){var t=bo.current;xa(bo),e._currentValue=t}function _o(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function xo(e,t){yo=e,wo=So=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ss=!0),e.firstContext=null)}function Eo(e){var t=e._currentValue;if(wo!==e)if(e={context:e,memoizedValue:t,next:null},null===So){if(null===yo)throw Error(o(308));So=e,yo.dependencies={lanes:0,firstContext:e}}else So=So.next=e;return t}var To=null;function Ao(e){null===To?To=[e]:To.push(e)}function Io(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Ao(t)):(n.next=a.next,a.next=n),t.interleaved=n,No(e,r)}function No(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ro=!1;function Lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Do(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Po(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Oo(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Il)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,No(e,n)}return null===(a=r.interleaved)?(t.next=t,Ao(r)):(t.next=a.next,a.next=t),r.interleaved=t,No(e,n)}function Mo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Bo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Fo(e,t,n,r){var a=e.updateQueue;Ro=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,u=l.next;l.next=null,null===i?o=u:i.next=u,i=l;var c=e.alternate;null!==c&&(s=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===s?c.firstBaseUpdate=u:s.next=u,c.lastBaseUpdate=l)}if(null!==o){var d=a.baseState;for(i=0,c=u=l=null,s=o;;){var p=s.lane,f=s.eventTime;if((r&p)===p){null!==c&&(c=c.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var h=e,g=s;switch(p=t,f=n,g.tag){case 1:if("function"==typeof(h=g.payload)){d=h.call(f,d,p);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(p="function"==typeof(h=g.payload)?h.call(f,d,p):h))break e;d=B({},d,p);break e;case 2:Ro=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[s]:p.push(s))}else f={eventTime:f,lane:p,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===c?(u=c=f,l=d):c=c.next=f,i|=p;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(p=s).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Bl|=i,e.lanes=i,e.memoizedState=d}}function zo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Uo=(new r.Component).refs;function Ho(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:B({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var jo={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=tu(),a=nu(e),o=Po(r,a);o.payload=t,null!=n&&(o.callback=n),null!==(t=Oo(e,o,a))&&(ru(t,e,a,r),Mo(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=tu(),a=nu(e),o=Po(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=Oo(e,o,a))&&(ru(t,e,a,r),Mo(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tu(),r=nu(e),a=Po(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=Oo(e,a,r))&&(ru(t,e,r,n),Mo(t,e,r))}};function Vo(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,o))}function Ko(e,t,n){var r=!1,a=Ta,o=t.contextType;return"object"==typeof o&&null!==o?o=Eo(o):(a=La(t)?Na:Aa.current,o=(r=null!=(r=t.contextTypes))?Ra(e,a):Ta),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=jo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function $o(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&jo.enqueueReplaceState(t,t.state,null)}function Zo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Uo,Lo(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=Eo(o):(o=La(t)?Na:Aa.current,a.context=Ra(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(Ho(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&jo.enqueueReplaceState(a,a.state,null),Fo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function qo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;t===Uo&&(t=a.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Wo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Xo(e){return(0,e._init)(e._payload)}function Yo(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Pu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Fu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var o=n.type;return o===C?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===L&&Xo(o)===t.type)?((r=a(t,n.props)).ref=qo(e,t,n),r.return=e,r):((r=Ou(n.type,n.key,n.props,null,e.mode,r)).ref=qo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Mu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Fu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ou(t.type,t.key,t.props,null,e.mode,n)).ref=qo(e,null,t),n.return=e,n;case k:return(t=zu(t,e.mode,n)).return=e,t;case L:return p(e,(0,t._init)(t._payload),n)}if(te(t)||O(t))return(t=Mu(t,e.mode,n,null)).return=e,t;Wo(e,t)}return null}function f(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?u(e,t,n,r):null;case k:return n.key===a?c(e,t,n,r):null;case L:return f(e,t,(a=n._init)(n._payload),r)}if(te(n)||O(n))return null!==a?null:d(e,t,n,r,null);Wo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case L:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||O(r))return d(t,e=e.get(n)||null,r,a,null);Wo(t,r)}return null}function g(a,o,s,l){for(var u=null,c=null,d=o,g=o=0,m=null;null!==d&&g<s.length;g++){d.index>g?(m=d,d=null):m=d.sibling;var v=f(a,d,s[g],l);if(null===v){null===d&&(d=m);break}e&&d&&null===v.alternate&&t(a,d),o=i(v,o,g),null===c?u=v:c.sibling=v,c=v,d=m}if(g===s.length)return n(a,d),ao&&Ga(a,g),u;if(null===d){for(;g<s.length;g++)null!==(d=p(a,s[g],l))&&(o=i(d,o,g),null===c?u=d:c.sibling=d,c=d);return ao&&Ga(a,g),u}for(d=r(a,d);g<s.length;g++)null!==(m=h(d,a,g,s[g],l))&&(e&&null!==m.alternate&&d.delete(null===m.key?g:m.key),o=i(m,o,g),null===c?u=m:c.sibling=m,c=m);return e&&d.forEach((function(e){return t(a,e)})),ao&&Ga(a,g),u}function m(a,s,l,u){var c=O(l);if("function"!=typeof c)throw Error(o(150));if(null==(l=c.call(l)))throw Error(o(151));for(var d=c=null,g=s,m=s=0,v=null,b=l.next();null!==g&&!b.done;m++,b=l.next()){g.index>m?(v=g,g=null):v=g.sibling;var y=f(a,g,b.value,u);if(null===y){null===g&&(g=v);break}e&&g&&null===y.alternate&&t(a,g),s=i(y,s,m),null===d?c=y:d.sibling=y,d=y,g=v}if(b.done)return n(a,g),ao&&Ga(a,m),c;if(null===g){for(;!b.done;m++,b=l.next())null!==(b=p(a,b.value,u))&&(s=i(b,s,m),null===d?c=b:d.sibling=b,d=b);return ao&&Ga(a,m),c}for(g=r(a,g);!b.done;m++,b=l.next())null!==(b=h(g,a,m,b.value,u))&&(e&&null!==b.alternate&&g.delete(null===b.key?m:b.key),s=i(b,s,m),null===d?c=b:d.sibling=b,d=b);return e&&g.forEach((function(e){return t(a,e)})),ao&&Ga(a,m),c}return function e(r,o,i,l){if("object"==typeof i&&null!==i&&i.type===C&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var u=i.key,c=o;null!==c;){if(c.key===u){if((u=i.type)===C){if(7===c.tag){n(r,c.sibling),(o=a(c,i.props.children)).return=r,r=o;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===L&&Xo(u)===c.type){n(r,c.sibling),(o=a(c,i.props)).ref=qo(r,c,i),o.return=r,r=o;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===C?((o=Mu(i.props.children,r.mode,l,i.key)).return=r,r=o):((l=Ou(i.type,i.key,i.props,null,r.mode,l)).ref=qo(r,o,i),l.return=r,r=l)}return s(r);case k:e:{for(c=i.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=zu(i,r.mode,l)).return=r,r=o}return s(r);case L:return e(r,o,(c=i._init)(i._payload),l)}if(te(i))return g(r,o,i,l);if(O(i))return m(r,o,i,l);Wo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,i)).return=r,r=o):(n(r,o),(o=Fu(i,r.mode,l)).return=r,r=o),s(r)):n(r,o)}}var Qo=Yo(!0),Go=Yo(!1),Jo={},ei=_a(Jo),ti=_a(Jo),ni=_a(Jo);function ri(e){if(e===Jo)throw Error(o(174));return e}function ai(e,t){switch(Ea(ni,t),Ea(ti,e),Ea(ei,Jo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}xa(ei),Ea(ei,t)}function oi(){xa(ei),xa(ti),xa(ni)}function ii(e){ri(ni.current);var t=ri(ei.current),n=le(t,e.type);t!==n&&(Ea(ti,e),Ea(ei,n))}function si(e){ti.current===e&&(xa(ei),xa(ti))}var li=_a(0);function ui(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ci=[];function di(){for(var e=0;e<ci.length;e++)ci[e]._workInProgressVersionPrimary=null;ci.length=0}var pi=S.ReactCurrentDispatcher,fi=S.ReactCurrentBatchConfig,hi=0,gi=null,mi=null,vi=null,bi=!1,yi=!1,Si=0,wi=0;function ki(){throw Error(o(321))}function Ci(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!sr(e[n],t[n]))return!1;return!0}function _i(e,t,n,r,a,i){if(hi=i,gi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,pi.current=null===e||null===e.memoizedState?ss:ls,e=n(r,a),yi){i=0;do{if(yi=!1,Si=0,25<=i)throw Error(o(301));i+=1,vi=mi=null,t.updateQueue=null,pi.current=us,e=n(r,a)}while(yi)}if(pi.current=is,t=null!==mi&&null!==mi.next,hi=0,vi=mi=gi=null,bi=!1,t)throw Error(o(300));return e}function xi(){var e=0!==Si;return Si=0,e}function Ei(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===vi?gi.memoizedState=vi=e:vi=vi.next=e,vi}function Ti(){if(null===mi){var e=gi.alternate;e=null!==e?e.memoizedState:null}else e=mi.next;var t=null===vi?gi.memoizedState:vi.next;if(null!==t)vi=t,mi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(mi=e).memoizedState,baseState:mi.baseState,baseQueue:mi.baseQueue,queue:mi.queue,next:null},null===vi?gi.memoizedState=vi=e:vi=vi.next=e}return vi}function Ai(e,t){return"function"==typeof t?t(e):t}function Ii(e){var t=Ti(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=mi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var l=s=null,u=null,c=i;do{var d=c.lane;if((hi&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var p={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=p,s=r):u=u.next=p,gi.lanes|=d,Bl|=d}c=c.next}while(null!==c&&c!==i);null===u?s=r:u.next=l,sr(r,t.memoizedState)||(Ss=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,gi.lanes|=i,Bl|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ni(e){var t=Ti(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var s=a=a.next;do{i=e(i,s.action),s=s.next}while(s!==a);sr(i,t.memoizedState)||(Ss=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Ri(){}function Li(e,t){var n=gi,r=Ti(),a=t(),i=!sr(r.memoizedState,a);if(i&&(r.memoizedState=a,Ss=!0),r=r.queue,Ki(Oi.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==vi&&1&vi.memoizedState.tag){if(n.flags|=2048,zi(9,Pi.bind(null,n,r,a,t),void 0,null),null===Nl)throw Error(o(349));0!=(30&hi)||Di(n,t,a)}return a}function Di(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=gi.updateQueue)?(t={lastEffect:null,stores:null},gi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Pi(e,t,n,r){t.value=n,t.getSnapshot=r,Mi(t)&&Bi(e)}function Oi(e,t,n){return n((function(){Mi(t)&&Bi(e)}))}function Mi(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!sr(e,n)}catch(e){return!0}}function Bi(e){var t=No(e,1);null!==t&&ru(t,e,1,-1)}function Fi(e){var t=Ei();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ai,lastRenderedState:e},t.queue=e,e=e.dispatch=ns.bind(null,gi,e),[t.memoizedState,e]}function zi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=gi.updateQueue)?(t={lastEffect:null,stores:null},gi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ui(){return Ti().memoizedState}function Hi(e,t,n,r){var a=Ei();gi.flags|=e,a.memoizedState=zi(1|t,n,void 0,void 0===r?null:r)}function ji(e,t,n,r){var a=Ti();r=void 0===r?null:r;var o=void 0;if(null!==mi){var i=mi.memoizedState;if(o=i.destroy,null!==r&&Ci(r,i.deps))return void(a.memoizedState=zi(t,n,o,r))}gi.flags|=e,a.memoizedState=zi(1|t,n,o,r)}function Vi(e,t){return Hi(8390656,8,e,t)}function Ki(e,t){return ji(2048,8,e,t)}function $i(e,t){return ji(4,2,e,t)}function Zi(e,t){return ji(4,4,e,t)}function qi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wi(e,t,n){return n=null!=n?n.concat([e]):null,ji(4,4,qi.bind(null,t,e),n)}function Xi(){}function Yi(e,t){var n=Ti();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ci(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Qi(e,t){var n=Ti();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ci(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Gi(e,t,n){return 0==(21&hi)?(e.baseState&&(e.baseState=!1,Ss=!0),e.memoizedState=n):(sr(n,t)||(n=gt(),gi.lanes|=n,Bl|=n,e.baseState=!0),t)}function Ji(e,t){var n=yt;yt=0!==n&&4>n?n:4,e(!0);var r=fi.transition;fi.transition={};try{e(!1),t()}finally{yt=n,fi.transition=r}}function es(){return Ti().memoizedState}function ts(e,t,n){var r=nu(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},rs(e)?as(t,n):null!==(n=Io(e,t,n,r))&&(ru(n,e,r,tu()),os(n,t,r))}function ns(e,t,n){var r=nu(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(rs(e))as(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,s=o(i,n);if(a.hasEagerState=!0,a.eagerState=s,sr(s,i)){var l=t.interleaved;return null===l?(a.next=a,Ao(t)):(a.next=l.next,l.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Io(e,t,a,r))&&(ru(n,e,r,a=tu()),os(n,t,r))}}function rs(e){var t=e.alternate;return e===gi||null!==t&&t===gi}function as(e,t){yi=bi=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function os(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var is={readContext:Eo,useCallback:ki,useContext:ki,useEffect:ki,useImperativeHandle:ki,useInsertionEffect:ki,useLayoutEffect:ki,useMemo:ki,useReducer:ki,useRef:ki,useState:ki,useDebugValue:ki,useDeferredValue:ki,useTransition:ki,useMutableSource:ki,useSyncExternalStore:ki,useId:ki,unstable_isNewReconciler:!1},ss={readContext:Eo,useCallback:function(e,t){return Ei().memoizedState=[e,void 0===t?null:t],e},useContext:Eo,useEffect:Vi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Hi(4194308,4,qi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Hi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Hi(4,2,e,t)},useMemo:function(e,t){var n=Ei();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ei();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ts.bind(null,gi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ei().memoizedState=e},useState:Fi,useDebugValue:Xi,useDeferredValue:function(e){return Ei().memoizedState=e},useTransition:function(){var e=Fi(!1),t=e[0];return e=Ji.bind(null,e[1]),Ei().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=gi,a=Ei();if(ao){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Nl)throw Error(o(349));0!=(30&hi)||Di(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Vi(Oi.bind(null,r,i,e),[e]),r.flags|=2048,zi(9,Pi.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=Ei(),t=Nl.identifierPrefix;if(ao){var n=Qa;t=":"+t+"R"+(n=(Ya&~(1<<32-it(Ya)-1)).toString(32)+n),0<(n=Si++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=wi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ls={readContext:Eo,useCallback:Yi,useContext:Eo,useEffect:Ki,useImperativeHandle:Wi,useInsertionEffect:$i,useLayoutEffect:Zi,useMemo:Qi,useReducer:Ii,useRef:Ui,useState:function(){return Ii(Ai)},useDebugValue:Xi,useDeferredValue:function(e){return Gi(Ti(),mi.memoizedState,e)},useTransition:function(){return[Ii(Ai)[0],Ti().memoizedState]},useMutableSource:Ri,useSyncExternalStore:Li,useId:es,unstable_isNewReconciler:!1},us={readContext:Eo,useCallback:Yi,useContext:Eo,useEffect:Ki,useImperativeHandle:Wi,useInsertionEffect:$i,useLayoutEffect:Zi,useMemo:Qi,useReducer:Ni,useRef:Ui,useState:function(){return Ni(Ai)},useDebugValue:Xi,useDeferredValue:function(e){var t=Ti();return null===mi?t.memoizedState=e:Gi(t,mi.memoizedState,e)},useTransition:function(){return[Ni(Ai)[0],Ti().memoizedState]},useMutableSource:Ri,useSyncExternalStore:Li,useId:es,unstable_isNewReconciler:!1};function cs(e,t){try{var n="",r=t;do{n+=H(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function ds(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function ps(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var fs="function"==typeof WeakMap?WeakMap:Map;function hs(e,t,n){(n=Po(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){$l||($l=!0,Zl=r),ps(0,t)},n}function gs(e,t,n){(n=Po(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){ps(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){ps(0,t),"function"!=typeof r&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ms(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new fs;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Eu.bind(null,e,t,n),t.then(e,e))}function vs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bs(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Po(-1,1)).tag=2,Oo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var ys=S.ReactCurrentOwner,Ss=!1;function ws(e,t,n,r){t.child=null===e?Go(t,null,n,r):Qo(t,e.child,n,r)}function ks(e,t,n,r,a){n=n.render;var o=t.ref;return xo(t,a),r=_i(e,t,n,r,o,a),n=xi(),null===e||Ss?(ao&&n&&eo(t),t.flags|=1,ws(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$s(e,t,a))}function Cs(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||Du(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ou(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,_s(e,t,o,r,a))}if(o=e.child,0==(e.lanes&a)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(i,r)&&e.ref===t.ref)return $s(e,t,a)}return t.flags|=1,(e=Pu(o,r)).ref=t.ref,e.return=t,t.child=e}function _s(e,t,n,r,a){if(null!==e){var o=e.memoizedProps;if(lr(o,r)&&e.ref===t.ref){if(Ss=!1,t.pendingProps=r=o,0==(e.lanes&a))return t.lanes=e.lanes,$s(e,t,a);0!=(131072&e.flags)&&(Ss=!0)}}return Ts(e,t,n,r,a)}function xs(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ea(Pl,Dl),Dl|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ea(Pl,Dl),Dl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,Ea(Pl,Dl),Dl|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,Ea(Pl,Dl),Dl|=r;return ws(e,t,a,n),t.child}function Es(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ts(e,t,n,r,a){var o=La(n)?Na:Aa.current;return o=Ra(t,o),xo(t,a),n=_i(e,t,n,r,o,a),r=xi(),null===e||Ss?(ao&&r&&eo(t),t.flags|=1,ws(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$s(e,t,a))}function As(e,t,n,r,a){if(La(n)){var o=!0;Ma(t)}else o=!1;if(xo(t,a),null===t.stateNode)Ks(e,t),Ko(t,n,r),Zo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,s=t.memoizedProps;i.props=s;var l=i.context,u=n.contextType;u="object"==typeof u&&null!==u?Eo(u):Ra(t,u=La(n)?Na:Aa.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||l!==u)&&$o(t,i,r,u),Ro=!1;var p=t.memoizedState;i.state=p,Fo(t,r,i,a),l=t.memoizedState,s!==r||p!==l||Ia.current||Ro?("function"==typeof c&&(Ho(t,n,c,r),l=t.memoizedState),(s=Ro||Vo(t,n,s,r,p,l,u))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=s):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Do(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:vo(t.type,s),i.props=u,d=t.pendingProps,p=i.context,l="object"==typeof(l=n.contextType)&&null!==l?Eo(l):Ra(t,l=La(n)?Na:Aa.current);var f=n.getDerivedStateFromProps;(c="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==d||p!==l)&&$o(t,i,r,l),Ro=!1,p=t.memoizedState,i.state=p,Fo(t,r,i,a);var h=t.memoizedState;s!==d||p!==h||Ia.current||Ro?("function"==typeof f&&(Ho(t,n,f,r),h=t.memoizedState),(u=Ro||Vo(t,n,u,r,p,h,l)||!1)?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=l,r=u):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),r=!1)}return Is(e,t,n,r,o,a)}function Is(e,t,n,r,a,o){Es(e,t);var i=0!=(128&t.flags);if(!r&&!i)return a&&Ba(t,n,!1),$s(e,t,o);r=t.stateNode,ys.current=t;var s=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Qo(t,e.child,null,o),t.child=Qo(t,null,s,o)):ws(e,t,s,o),t.memoizedState=r.state,a&&Ba(t,n,!0),t.child}function Ns(e){var t=e.stateNode;t.pendingContext?Pa(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Pa(0,t.context,!1),ai(e,t.containerInfo)}function Rs(e,t,n,r,a){return ho(),go(a),t.flags|=256,ws(e,t,n,r),t.child}var Ls,Ds,Ps,Os,Ms={dehydrated:null,treeContext:null,retryLane:0};function Bs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fs(e,t,n){var r,a=t.pendingProps,i=li.current,s=!1,l=0!=(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Ea(li,1&i),null===e)return uo(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=a.children,e=a.fallback,s?(a=t.mode,s=t.child,l={mode:"hidden",children:l},0==(1&a)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Bu(l,a,0,null),e=Mu(e,a,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=Bs(n),t.memoizedState=Ms,e):zs(t,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,a,i,s){if(n)return 256&t.flags?(t.flags&=-257,Us(e,t,s,r=ds(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,a=t.mode,r=Bu({mode:"visible",children:r.children},a,0,null),(i=Mu(i,a,s,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!=(1&t.mode)&&Qo(t,e.child,null,s),t.child.memoizedState=Bs(s),t.memoizedState=Ms,i);if(0==(1&t.mode))return Us(e,t,s,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var l=r.dgst;return r=l,Us(e,t,s,r=ds(i=Error(o(419)),r,void 0))}if(l=0!=(s&e.childLanes),Ss||l){if(null!==(r=Nl)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|s))?0:a)&&a!==i.retryLane&&(i.retryLane=a,No(e,a),ru(r,e,a,-1))}return mu(),Us(e,t,s,r=ds(Error(o(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Au.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,ro=ua(a.nextSibling),no=t,ao=!0,oo=null,null!==e&&(qa[Wa++]=Ya,qa[Wa++]=Qa,qa[Wa++]=Xa,Ya=e.id,Qa=e.overflow,Xa=t),(t=zs(t,r.children)).flags|=4096,t)}(e,t,l,a,r,i,n);if(s){s=a.fallback,l=t.mode,r=(i=e.child).sibling;var u={mode:"hidden",children:a.children};return 0==(1&l)&&t.child!==i?((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null):(a=Pu(i,u)).subtreeFlags=14680064&i.subtreeFlags,null!==r?s=Pu(r,s):(s=Mu(s,l,n,null)).flags|=2,s.return=t,a.return=t,a.sibling=s,t.child=a,a=s,s=t.child,l=null===(l=e.child.memoizedState)?Bs(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~n,t.memoizedState=Ms,a}return e=(s=e.child).sibling,a=Pu(s,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function zs(e,t){return(t=Bu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Us(e,t,n,r){return null!==r&&go(r),Qo(t,e.child,null,n),(e=zs(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Hs(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),_o(e.return,t,n)}function js(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Vs(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(ws(e,t,r.children,n),0!=(2&(r=li.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Hs(e,n,t);else if(19===e.tag)Hs(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ea(li,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ui(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),js(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ui(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}js(t,!0,n,null,o);break;case"together":js(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ks(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function $s(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Bl|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Pu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Pu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Zs(e,t){if(!ao)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ws(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qs(t),null;case 1:case 17:return La(t.type)&&Da(),qs(t),null;case 3:return r=t.stateNode,oi(),xa(Ia),xa(Aa),di(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(po(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==oo&&(su(oo),oo=null))),Ds(e,t),qs(t),null;case 5:si(t);var a=ri(ni.current);if(n=t.type,null!==e&&null!=t.stateNode)Ps(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return qs(t),null}if(e=ri(ei.current),po(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[pa]=t,r[fa]=i,e=0!=(1&t.mode),n){case"dialog":zr("cancel",r),zr("close",r);break;case"iframe":case"object":case"embed":zr("load",r);break;case"video":case"audio":for(a=0;a<Or.length;a++)zr(Or[a],r);break;case"source":zr("error",r);break;case"img":case"image":case"link":zr("error",r),zr("load",r);break;case"details":zr("toggle",r);break;case"input":Y(r,i),zr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},zr("invalid",r);break;case"textarea":ae(r,i),zr("invalid",r)}for(var l in be(n,i),a=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"==typeof u?r.textContent!==u&&(!0!==i.suppressHydrationWarning&&Gr(r.textContent,u,e),a=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Gr(r.textContent,u,e),a=["children",""+u]):s.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&zr("scroll",r)}switch(n){case"input":Z(r),J(r,i,!0);break;case"textarea":Z(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[pa]=t,e[fa]=r,Ls(e,t,!1,!1),t.stateNode=e;e:{switch(l=ye(n,r),n){case"dialog":zr("cancel",e),zr("close",e),a=r;break;case"iframe":case"object":case"embed":zr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Or.length;a++)zr(Or[a],e);a=r;break;case"source":zr("error",e),a=r;break;case"img":case"image":case"link":zr("error",e),zr("load",e),a=r;break;case"details":zr("toggle",e),a=r;break;case"input":Y(e,r),a=X(e,r),zr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=B({},r,{value:void 0}),zr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),zr("invalid",e)}for(i in be(n,a),u=a)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?me(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===i?"string"==typeof c?("textarea"!==n||""!==c)&&pe(e,c):"number"==typeof c&&pe(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=c&&"onScroll"===i&&zr("scroll",e):null!=c&&y(e,i,c,l))}switch(n){case"input":Z(e),J(e,r,!1);break;case"textarea":Z(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qs(t),null;case 6:if(e&&null!=t.stateNode)Os(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=ri(ni.current),ri(ei.current),po(t)){if(r=t.stateNode,n=t.memoizedProps,r[pa]=t,(i=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Gr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Gr(r.nodeValue,n,0!=(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[pa]=t,t.stateNode=r}return qs(t),null;case 13:if(xa(li),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&0!=(1&t.mode)&&0==(128&t.flags))fo(),ho(),t.flags|=98560,i=!1;else if(i=po(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(o(317));i[pa]=t}else ho(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qs(t),i=!1}else null!==oo&&(su(oo),oo=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&li.current)?0===Ol&&(Ol=3):mu())),null!==t.updateQueue&&(t.flags|=4),qs(t),null);case 4:return oi(),Ds(e,t),null===e&&jr(t.stateNode.containerInfo),qs(t),null;case 10:return Co(t.type._context),qs(t),null;case 19:if(xa(li),null===(i=t.memoizedState))return qs(t),null;if(r=0!=(128&t.flags),null===(l=i.rendering))if(r)Zs(i,!1);else{if(0!==Ol||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ui(e))){for(t.flags|=128,Zs(i,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ea(li,1&li.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Vl&&(t.flags|=128,r=!0,Zs(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ui(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Zs(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!ao)return qs(t),null}else 2*Qe()-i.renderingStartTime>Vl&&1073741824!==n&&(t.flags|=128,r=!0,Zs(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,n=li.current,Ea(li,r?1&n|2:1&n),t):(qs(t),null);case 22:case 23:return pu(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Dl)&&(qs(t),6&t.subtreeFlags&&(t.flags|=8192)):qs(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Xs(e,t){switch(to(t),t.tag){case 1:return La(t.type)&&Da(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return oi(),xa(Ia),xa(Aa),di(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return si(t),null;case 13:if(xa(li),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));ho()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return xa(li),null;case 4:return oi(),null;case 10:return Co(t.type._context),null;case 22:case 23:return pu(),null;default:return null}}Ls=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ds=function(){},Ps=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,ri(ei.current);var o,i=null;switch(n){case"input":a=X(e,a),r=X(e,r),i=[];break;case"select":a=B({},a,{value:void 0}),r=B({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in be(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(o in l)l.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(o in l)!l.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in u)u.hasOwnProperty(o)&&l[o]!==u[o]&&(n||(n={}),n[o]=u[o])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(s.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&zr("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Os=function(e,t,n,r){n!==r&&(t.flags|=4)};var Ys=!1,Qs=!1,Gs="function"==typeof WeakSet?WeakSet:Set,Js=null;function el(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){xu(e,t,n)}else n.current=null}function tl(e,t,n){try{n()}catch(n){xu(e,t,n)}}var nl=!1;function rl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&tl(t,n,o)}a=a.next}while(a!==r)}}function al(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ol(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function il(e){var t=e.alternate;null!==t&&(e.alternate=null,il(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[pa],delete t[fa],delete t[ga],delete t[ma],delete t[va]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}function cl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cl(e,t,n),e=e.sibling;null!==e;)cl(e,t,n),e=e.sibling}var dl=null,pl=!1;function fl(e,t,n){for(n=n.child;null!==n;)hl(e,t,n),n=n.sibling}function hl(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Qs||el(n,t);case 6:var r=dl,a=pl;dl=null,fl(e,t,n),pl=a,null!==(dl=r)&&(pl?(e=dl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):dl.removeChild(n.stateNode));break;case 18:null!==dl&&(pl?(e=dl,n=n.stateNode,8===e.nodeType?la(e.parentNode,n):1===e.nodeType&&la(e,n),jt(e)):la(dl,n.stateNode));break;case 4:r=dl,a=pl,dl=n.stateNode.containerInfo,pl=!0,fl(e,t,n),dl=r,pl=a;break;case 0:case 11:case 14:case 15:if(!Qs&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&tl(n,t,i),a=a.next}while(a!==r)}fl(e,t,n);break;case 1:if(!Qs&&(el(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){xu(n,t,e)}fl(e,t,n);break;case 21:fl(e,t,n);break;case 22:1&n.mode?(Qs=(r=Qs)||null!==n.memoizedState,fl(e,t,n),Qs=r):fl(e,t,n);break;default:fl(e,t,n)}}function gl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Gs),t.forEach((function(t){var r=Iu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var i=e,s=t,l=s;e:for(;null!==l;){switch(l.tag){case 5:dl=l.stateNode,pl=!1;break e;case 3:case 4:dl=l.stateNode.containerInfo,pl=!0;break e}l=l.return}if(null===dl)throw Error(o(160));hl(i,s,a),dl=null,pl=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(e){xu(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)vl(t,e),t=t.sibling}function vl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),bl(e),4&r){try{rl(3,e,e.return),al(3,e)}catch(t){xu(e,e.return,t)}try{rl(5,e,e.return)}catch(t){xu(e,e.return,t)}}break;case 1:ml(t,e),bl(e),512&r&&null!==n&&el(n,n.return);break;case 5:if(ml(t,e),bl(e),512&r&&null!==n&&el(n,n.return),32&e.flags){var a=e.stateNode;try{pe(a,"")}catch(t){xu(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,s=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(a,i),ye(l,s);var c=ye(l,i);for(s=0;s<u.length;s+=2){var d=u[s],p=u[s+1];"style"===d?me(a,p):"dangerouslySetInnerHTML"===d?de(a,p):"children"===d?pe(a,p):y(a,d,p,c)}switch(l){case"input":G(a,i);break;case"textarea":oe(a,i);break;case"select":var f=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var h=i.value;null!=h?ne(a,!!i.multiple,h,!1):f!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[fa]=i}catch(t){xu(e,e.return,t)}}break;case 6:if(ml(t,e),bl(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(t){xu(e,e.return,t)}}break;case 3:if(ml(t,e),bl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{jt(t.containerInfo)}catch(t){xu(e,e.return,t)}break;case 4:default:ml(t,e),bl(e);break;case 13:ml(t,e),bl(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(jl=Qe())),4&r&&gl(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Qs=(c=Qs)||d,ml(t,e),Qs=c):ml(t,e),bl(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!=(1&e.mode))for(Js=e,d=e.child;null!==d;){for(p=Js=d;null!==Js;){switch(h=(f=Js).child,f.tag){case 0:case 11:case 14:case 15:rl(4,f,f.return);break;case 1:el(f,f.return);var g=f.stateNode;if("function"==typeof g.componentWillUnmount){r=f,n=f.return;try{t=r,g.props=t.memoizedProps,g.state=t.memoizedState,g.componentWillUnmount()}catch(e){xu(r,n,e)}}break;case 5:el(f,f.return);break;case 22:if(null!==f.memoizedState){kl(p);continue}}null!==h?(h.return=f,Js=h):kl(p)}d=d.sibling}e:for(d=null,p=e;;){if(5===p.tag){if(null===d){d=p;try{a=p.stateNode,c?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=p.stateNode,s=null!=(u=p.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,l.style.display=ge("display",s))}catch(t){xu(e,e.return,t)}}}else if(6===p.tag){if(null===d)try{p.stateNode.nodeValue=c?"":p.memoizedProps}catch(t){xu(e,e.return,t)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;d===p&&(d=null),p=p.return}d===p&&(d=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:ml(t,e),bl(e),4&r&&gl(e);case 21:}}function bl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(sl(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(pe(a,""),r.flags&=-33),cl(e,ll(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;ul(e,ll(e),i);break;default:throw Error(o(161))}}catch(t){xu(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yl(e,t,n){Js=e,Sl(e,t,n)}function Sl(e,t,n){for(var r=0!=(1&e.mode);null!==Js;){var a=Js,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Ys;if(!i){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Qs;s=Ys;var u=Qs;if(Ys=i,(Qs=l)&&!u)for(Js=a;null!==Js;)l=(i=Js).child,22===i.tag&&null!==i.memoizedState?Cl(a):null!==l?(l.return=i,Js=l):Cl(a);for(;null!==o;)Js=o,Sl(o,t,n),o=o.sibling;Js=a,Ys=s,Qs=u}wl(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Js=o):wl(e)}}function wl(e){for(;null!==Js;){var t=Js;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qs||al(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Qs)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:vo(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&zo(t,i,r);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}zo(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var p=d.dehydrated;null!==p&&jt(p)}}}break;default:throw Error(o(163))}Qs||512&t.flags&&ol(t)}catch(e){xu(t,t.return,e)}}if(t===e){Js=null;break}if(null!==(n=t.sibling)){n.return=t.return,Js=n;break}Js=t.return}}function kl(e){for(;null!==Js;){var t=Js;if(t===e){Js=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Js=n;break}Js=t.return}}function Cl(e){for(;null!==Js;){var t=Js;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{al(4,t)}catch(e){xu(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){xu(t,a,e)}}var o=t.return;try{ol(t)}catch(e){xu(t,o,e)}break;case 5:var i=t.return;try{ol(t)}catch(e){xu(t,i,e)}}}catch(e){xu(t,t.return,e)}if(t===e){Js=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Js=s;break}Js=t.return}}var _l,xl=Math.ceil,El=S.ReactCurrentDispatcher,Tl=S.ReactCurrentOwner,Al=S.ReactCurrentBatchConfig,Il=0,Nl=null,Rl=null,Ll=0,Dl=0,Pl=_a(0),Ol=0,Ml=null,Bl=0,Fl=0,zl=0,Ul=null,Hl=null,jl=0,Vl=1/0,Kl=null,$l=!1,Zl=null,ql=null,Wl=!1,Xl=null,Yl=0,Ql=0,Gl=null,Jl=-1,eu=0;function tu(){return 0!=(6&Il)?Qe():-1!==Jl?Jl:Jl=Qe()}function nu(e){return 0==(1&e.mode)?1:0!=(2&Il)&&0!==Ll?Ll&-Ll:null!==mo.transition?(0===eu&&(eu=gt()),eu):0!==(e=yt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function ru(e,t,n,r){if(50<Ql)throw Ql=0,Gl=null,Error(o(185));vt(e,n,r),0!=(2&Il)&&e===Nl||(e===Nl&&(0==(2&Il)&&(Fl|=n),4===Ol&&lu(e,Ll)),au(e,r),1===n&&0===Il&&0==(1&t.mode)&&(Vl=Qe()+500,za&&ja()))}function au(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-it(o),s=1<<i,l=a[i];-1===l?0!=(s&n)&&0==(s&r)||(a[i]=ft(s,t)):l<=t&&(e.expiredLanes|=s),o&=~s}}(e,t);var r=pt(e,e===Nl?Ll:0);if(0===r)null!==n&&We(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&We(n),1===t)0===e.tag?function(e){za=!0,Ha(e)}(uu.bind(null,e)):Ha(uu.bind(null,e)),ia((function(){0==(6&Il)&&ja()})),n=null;else{switch(St(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Nu(n,ou.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ou(e,t){if(Jl=-1,eu=0,0!=(6&Il))throw Error(o(327));var n=e.callbackNode;if(Cu()&&e.callbackNode!==n)return null;var r=pt(e,e===Nl?Ll:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=vu(e,r);else{t=r;var a=Il;Il|=2;var i=gu();for(Nl===e&&Ll===t||(Kl=null,Vl=Qe()+500,fu(e,t));;)try{yu();break}catch(t){hu(e,t)}ko(),El.current=i,Il=a,null!==Rl?t=0:(Nl=null,Ll=0,t=Ol)}if(0!==t){if(2===t&&0!==(a=ht(e))&&(r=a,t=iu(e,a)),1===t)throw n=Ml,fu(e,0),lu(e,r),au(e,Qe()),n;if(6===t)lu(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!sr(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=vu(e,r))&&0!==(i=ht(e))&&(r=i,t=iu(e,i)),1===t))throw n=Ml,fu(e,0),lu(e,r),au(e,Qe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:ku(e,Hl,Kl);break;case 3:if(lu(e,r),(130023424&r)===r&&10<(t=jl+500-Qe())){if(0!==pt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){tu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(ku.bind(null,e,Hl,Kl),t);break}ku(e,Hl,Kl);break;case 4:if(lu(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var s=31-it(r);i=1<<s,(s=t[s])>a&&(a=s),r&=~i}if(r=a,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xl(r/1960))-r)){e.timeoutHandle=ra(ku.bind(null,e,Hl,Kl),r);break}ku(e,Hl,Kl);break;default:throw Error(o(329))}}}return au(e,Qe()),e.callbackNode===n?ou.bind(null,e):null}function iu(e,t){var n=Ul;return e.current.memoizedState.isDehydrated&&(fu(e,t).flags|=256),2!==(e=vu(e,t))&&(t=Hl,Hl=n,null!==t&&su(t)),e}function su(e){null===Hl?Hl=e:Hl.push.apply(Hl,e)}function lu(e,t){for(t&=~zl,t&=~Fl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function uu(e){if(0!=(6&Il))throw Error(o(327));Cu();var t=pt(e,0);if(0==(1&t))return au(e,Qe()),null;var n=vu(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=iu(e,r))}if(1===n)throw n=Ml,fu(e,0),lu(e,t),au(e,Qe()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,ku(e,Hl,Kl),au(e,Qe()),null}function cu(e,t){var n=Il;Il|=1;try{return e(t)}finally{0===(Il=n)&&(Vl=Qe()+500,za&&ja())}}function du(e){null!==Xl&&0===Xl.tag&&0==(6&Il)&&Cu();var t=Il;Il|=1;var n=Al.transition,r=yt;try{if(Al.transition=null,yt=1,e)return e()}finally{yt=r,Al.transition=n,0==(6&(Il=t))&&ja()}}function pu(){Dl=Pl.current,xa(Pl)}function fu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Rl)for(n=Rl.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Da();break;case 3:oi(),xa(Ia),xa(Aa),di();break;case 5:si(r);break;case 4:oi();break;case 13:case 19:xa(li);break;case 10:Co(r.type._context);break;case 22:case 23:pu()}n=n.return}if(Nl=e,Rl=e=Pu(e.current,null),Ll=Dl=t,Ol=0,Ml=null,zl=Fl=Bl=0,Hl=Ul=null,null!==To){for(t=0;t<To.length;t++)if(null!==(r=(n=To[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}n.pending=r}To=null}return e}function hu(e,t){for(;;){var n=Rl;try{if(ko(),pi.current=is,bi){for(var r=gi.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}bi=!1}if(hi=0,vi=mi=gi=null,yi=!1,Si=0,Tl.current=null,null===n||null===n.return){Ol=1,Ml=t,Rl=null;break}e:{var i=e,s=n.return,l=n,u=t;if(t=Ll,l.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,d=l,p=d.tag;if(0==(1&d.mode)&&(0===p||11===p||15===p)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var h=vs(s);if(null!==h){h.flags&=-257,bs(h,s,l,0,t),1&h.mode&&ms(i,c,t),u=c;var g=(t=h).updateQueue;if(null===g){var m=new Set;m.add(u),t.updateQueue=m}else g.add(u);break e}if(0==(1&t)){ms(i,c,t),mu();break e}u=Error(o(426))}else if(ao&&1&l.mode){var v=vs(s);if(null!==v){0==(65536&v.flags)&&(v.flags|=256),bs(v,s,l,0,t),go(cs(u,l));break e}}i=u=cs(u,l),4!==Ol&&(Ol=2),null===Ul?Ul=[i]:Ul.push(i),i=s;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Bo(i,hs(0,u,t));break e;case 1:l=u;var b=i.type,y=i.stateNode;if(0==(128&i.flags)&&("function"==typeof b.getDerivedStateFromError||null!==y&&"function"==typeof y.componentDidCatch&&(null===ql||!ql.has(y)))){i.flags|=65536,t&=-t,i.lanes|=t,Bo(i,gs(i,l,t));break e}}i=i.return}while(null!==i)}wu(n)}catch(e){t=e,Rl===n&&null!==n&&(Rl=n=n.return);continue}break}}function gu(){var e=El.current;return El.current=is,null===e?is:e}function mu(){0!==Ol&&3!==Ol&&2!==Ol||(Ol=4),null===Nl||0==(268435455&Bl)&&0==(268435455&Fl)||lu(Nl,Ll)}function vu(e,t){var n=Il;Il|=2;var r=gu();for(Nl===e&&Ll===t||(Kl=null,fu(e,t));;)try{bu();break}catch(t){hu(e,t)}if(ko(),Il=n,El.current=r,null!==Rl)throw Error(o(261));return Nl=null,Ll=0,Ol}function bu(){for(;null!==Rl;)Su(Rl)}function yu(){for(;null!==Rl&&!Xe();)Su(Rl)}function Su(e){var t=_l(e.alternate,e,Dl);e.memoizedProps=e.pendingProps,null===t?wu(e):Rl=t,Tl.current=null}function wu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Ws(n,t,Dl)))return void(Rl=n)}else{if(null!==(n=Xs(n,t)))return n.flags&=32767,void(Rl=n);if(null===e)return Ol=6,void(Rl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rl=t);Rl=t=e}while(null!==t);0===Ol&&(Ol=5)}function ku(e,t,n){var r=yt,a=Al.transition;try{Al.transition=null,yt=1,function(e,t,n,r){do{Cu()}while(null!==Xl);if(0!=(6&Il))throw Error(o(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,i),e===Nl&&(Rl=Nl=null,Ll=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Wl||(Wl=!0,Nu(tt,(function(){return Cu(),null}))),i=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||i){i=Al.transition,Al.transition=null;var s=yt;yt=1;var l=Il;Il|=4,Tl.current=null,function(e,t){if(ea=Kt,fr(e=pr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var s=0,l=-1,u=-1,c=0,d=0,p=e,f=null;t:for(;;){for(var h;p!==n||0!==a&&3!==p.nodeType||(l=s+a),p!==i||0!==r&&3!==p.nodeType||(u=s+r),3===p.nodeType&&(s+=p.nodeValue.length),null!==(h=p.firstChild);)f=p,p=h;for(;;){if(p===e)break t;if(f===n&&++c===a&&(l=s),f===i&&++d===r&&(u=s),null!==(h=p.nextSibling))break;f=(p=f).parentNode}p=h}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Kt=!1,Js=t;null!==Js;)if(e=(t=Js).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Js=e;else for(;null!==Js;){t=Js;try{var g=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var m=g.memoizedProps,v=g.memoizedState,b=t.stateNode,y=b.getSnapshotBeforeUpdate(t.elementType===t.type?m:vo(t.type,m),v);b.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var S=t.stateNode.containerInfo;1===S.nodeType?S.textContent="":9===S.nodeType&&S.documentElement&&S.removeChild(S.documentElement);break;default:throw Error(o(163))}}catch(e){xu(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Js=e;break}Js=t.return}g=nl,nl=!1}(e,n),vl(n,e),hr(ta),Kt=!!ea,ta=ea=null,e.current=n,yl(n,e,a),Ye(),Il=l,yt=s,Al.transition=i}else e.current=n;if(Wl&&(Wl=!1,Xl=e,Yl=a),0===(i=e.pendingLanes)&&(ql=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),au(e,Qe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if($l)throw $l=!1,e=Zl,Zl=null,e;0!=(1&Yl)&&0!==e.tag&&Cu(),0!=(1&(i=e.pendingLanes))?e===Gl?Ql++:(Ql=0,Gl=e):Ql=0,ja()}(e,t,n,r)}finally{Al.transition=a,yt=r}return null}function Cu(){if(null!==Xl){var e=St(Yl),t=Al.transition,n=yt;try{if(Al.transition=null,yt=16>e?16:e,null===Xl)var r=!1;else{if(e=Xl,Xl=null,Yl=0,0!=(6&Il))throw Error(o(331));var a=Il;for(Il|=4,Js=e.current;null!==Js;){var i=Js,s=i.child;if(0!=(16&Js.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Js=c;null!==Js;){var d=Js;switch(d.tag){case 0:case 11:case 15:rl(8,d,i)}var p=d.child;if(null!==p)p.return=d,Js=p;else for(;null!==Js;){var f=(d=Js).sibling,h=d.return;if(il(d),d===c){Js=null;break}if(null!==f){f.return=h,Js=f;break}Js=h}}}var g=i.alternate;if(null!==g){var m=g.child;if(null!==m){g.child=null;do{var v=m.sibling;m.sibling=null,m=v}while(null!==m)}}Js=i}}if(0!=(2064&i.subtreeFlags)&&null!==s)s.return=i,Js=s;else e:for(;null!==Js;){if(0!=(2048&(i=Js).flags))switch(i.tag){case 0:case 11:case 15:rl(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Js=b;break e}Js=i.return}}var y=e.current;for(Js=y;null!==Js;){var S=(s=Js).child;if(0!=(2064&s.subtreeFlags)&&null!==S)S.return=s,Js=S;else e:for(s=y;null!==Js;){if(0!=(2048&(l=Js).flags))try{switch(l.tag){case 0:case 11:case 15:al(9,l)}}catch(e){xu(l,l.return,e)}if(l===s){Js=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Js=w;break e}Js=l.return}}if(Il=a,ja(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{yt=n,Al.transition=t}}return!1}function _u(e,t,n){e=Oo(e,t=hs(0,t=cs(n,t),1),1),t=tu(),null!==e&&(vt(e,1,t),au(e,t))}function xu(e,t,n){if(3===e.tag)_u(e,e,n);else for(;null!==t;){if(3===t.tag){_u(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r))){t=Oo(t,e=gs(t,e=cs(n,e),1),1),e=tu(),null!==t&&(vt(t,1,e),au(t,e));break}}t=t.return}}function Eu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=tu(),e.pingedLanes|=e.suspendedLanes&n,Nl===e&&(Ll&n)===n&&(4===Ol||3===Ol&&(130023424&Ll)===Ll&&500>Qe()-jl?fu(e,0):zl|=n),au(e,t)}function Tu(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=tu();null!==(e=No(e,t))&&(vt(e,t,n),au(e,n))}function Au(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tu(e,n)}function Iu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),Tu(e,n)}function Nu(e,t){return qe(e,t)}function Ru(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Lu(e,t,n,r){return new Ru(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Pu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ou(e,t,n,r,a,i){var s=2;if(r=e,"function"==typeof e)Du(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case C:return Mu(n.children,a,i,t);case _:s=8,a|=8;break;case x:return(e=Lu(12,n,t,2|a)).elementType=x,e.lanes=i,e;case I:return(e=Lu(13,n,t,a)).elementType=I,e.lanes=i,e;case N:return(e=Lu(19,n,t,a)).elementType=N,e.lanes=i,e;case D:return Bu(n,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case E:s=10;break e;case T:s=9;break e;case A:s=11;break e;case R:s=14;break e;case L:s=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Lu(s,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Mu(e,t,n,r){return(e=Lu(7,e,r,t)).lanes=n,e}function Bu(e,t,n,r){return(e=Lu(22,e,r,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Fu(e,t,n){return(e=Lu(6,e,null,t)).lanes=n,e}function zu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Uu(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=mt(0),this.expirationTimes=mt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=mt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Hu(e,t,n,r,a,o,i,s,l){return e=new Uu(e,t,n,s,l),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Lu(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lo(o),e}function ju(e){if(!e)return Ta;e:{if(je(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(La(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(La(n))return Oa(e,n,t)}return t}function Vu(e,t,n,r,a,o,i,s,l){return(e=Hu(n,r,!0,e,0,o,0,s,l)).context=ju(null),n=e.current,(o=Po(r=tu(),a=nu(n))).callback=null!=t?t:null,Oo(n,o,a),e.current.lanes=a,vt(e,a,r),au(e,r),e}function Ku(e,t,n,r){var a=t.current,o=tu(),i=nu(a);return n=ju(n),null===t.context?t.context=n:t.pendingContext=n,(t=Po(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Oo(a,t,i))&&(ru(e,a,i,o),Mo(e,a,i)),i}function $u(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qu(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}_l=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ia.current)Ss=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return Ss=!1,function(e,t,n){switch(t.tag){case 3:Ns(t),ho();break;case 5:ii(t);break;case 1:La(t.type)&&Ma(t);break;case 4:ai(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Ea(bo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ea(li,1&li.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Fs(e,t,n):(Ea(li,1&li.current),null!==(e=$s(e,t,n))?e.sibling:null);Ea(li,1&li.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Vs(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ea(li,li.current),r)break;return null;case 22:case 23:return t.lanes=0,xs(e,t,n)}return $s(e,t,n)}(e,t,n);Ss=0!=(131072&e.flags)}else Ss=!1,ao&&0!=(1048576&t.flags)&&Ja(t,Za,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Ks(e,t),e=t.pendingProps;var a=Ra(t,Aa.current);xo(t,n),a=_i(null,t,r,e,a,n);var i=xi();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,La(r)?(i=!0,Ma(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Lo(t),a.updater=jo,t.stateNode=a,a._reactInternals=t,Zo(t,r,e,n),t=Is(null,t,r,!0,i,n)):(t.tag=0,ao&&i&&eo(t),ws(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Ks(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===A)return 11;if(e===R)return 14}return 2}(r),e=vo(r,e),a){case 0:t=Ts(null,t,r,e,n);break e;case 1:t=As(null,t,r,e,n);break e;case 11:t=ks(null,t,r,e,n);break e;case 14:t=Cs(null,t,r,vo(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Ts(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 1:return r=t.type,a=t.pendingProps,As(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 3:e:{if(Ns(t),null===e)throw Error(o(387));r=t.pendingProps,a=(i=t.memoizedState).element,Do(e,t),Fo(t,r,null,n);var s=t.memoizedState;if(r=s.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Rs(e,t,r,n,a=cs(Error(o(423)),t));break e}if(r!==a){t=Rs(e,t,r,n,a=cs(Error(o(424)),t));break e}for(ro=ua(t.stateNode.containerInfo.firstChild),no=t,ao=!0,oo=null,n=Go(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ho(),r===a){t=$s(e,t,n);break e}ws(e,t,r,n)}t=t.child}return t;case 5:return ii(t),null===e&&uo(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,s=a.children,na(r,a)?s=null:null!==i&&na(r,i)&&(t.flags|=32),Es(e,t),ws(e,t,s,n),t.child;case 6:return null===e&&uo(t),null;case 13:return Fs(e,t,n);case 4:return ai(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Qo(t,null,r,n):ws(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,ks(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 7:return ws(e,t,t.pendingProps,n),t.child;case 8:case 12:return ws(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,s=a.value,Ea(bo,r._currentValue),r._currentValue=s,null!==i)if(sr(i.value,s)){if(i.children===a.children&&!Ia.current){t=$s(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){s=i.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===i.tag){(u=Po(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),_o(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)s=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(o(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),_o(s,n,t),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===t){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}ws(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,xo(t,n),r=r(a=Eo(a)),t.flags|=1,ws(e,t,r,n),t.child;case 14:return a=vo(r=t.type,t.pendingProps),Cs(e,t,r,a=vo(r.type,a),n);case 15:return _s(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:vo(r,a),Ks(e,t),t.tag=1,La(r)?(e=!0,Ma(t)):e=!1,xo(t,n),Ko(t,r,a),Zo(t,r,a,n),Is(null,t,r,!0,e,n);case 19:return Vs(e,t,n);case 22:return xs(e,t,n)}throw Error(o(156,t.tag))};var Wu="function"==typeof reportError?reportError:function(e){console.error(e)};function Xu(e){this._internalRoot=e}function Yu(e){this._internalRoot=e}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Gu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ju(){}function ec(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof a){var s=a;a=function(){var e=$u(i);s.call(e)}}Ku(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=$u(i);o.call(e)}}var i=Vu(t,r,e,0,null,!1,0,"",Ju);return e._reactRootContainer=i,e[ha]=i.current,jr(8===e.nodeType?e.parentNode:e),du(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var s=r;r=function(){var e=$u(l);s.call(e)}}var l=Hu(e,0,!1,null,0,!1,0,"",Ju);return e._reactRootContainer=l,e[ha]=l.current,jr(8===e.nodeType?e.parentNode:e),du((function(){Ku(t,l,n,r)})),l}(n,t,e,a,r);return $u(i)}Yu.prototype.render=Xu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Ku(e,t,null,null)},Yu.prototype.unmount=Xu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;du((function(){Ku(null,e,null,null)})),t[ha]=null}},Yu.prototype.unstable_scheduleHydration=function(e){if(e){var t=_t();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Bt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),au(t,Qe()),0==(6&Il)&&(Vl=Qe()+500,ja()))}break;case 13:du((function(){var t=No(e,1);if(null!==t){var n=tu();ru(t,e,1,n)}})),qu(e,1)}},kt=function(e){if(13===e.tag){var t=No(e,134217728);null!==t&&ru(t,e,134217728,tu()),qu(e,134217728)}},Ct=function(e){if(13===e.tag){var t=nu(e),n=No(e,t);null!==n&&ru(n,e,t,tu()),qu(e,t)}},_t=function(){return yt},xt=function(e,t){var n=yt;try{return yt=e,t()}finally{yt=n}},ke=function(e,t,n){switch(t){case"input":if(G(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=wa(r);if(!a)throw Error(o(90));q(r),G(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ae=cu,Ie=du;var tc={usingClientEntryPoint:!1,Events:[ya,Sa,wa,Ee,Te,cu]},nc={findFiberByHostInstance:ba,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:S.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{at=ac.inject(rc),ot=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(o(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qu(e))throw Error(o(299));var n=!1,r="",a=Wu;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Hu(e,1,!1,null,0,n,0,r,a),e[ha]=t.current,jr(8===e.nodeType?e.parentNode:e),new Xu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e){return du(e)},t.hydrate=function(e,t,n){if(!Gu(t))throw Error(o(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qu(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,a=!1,i="",s=Wu;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(s=n.onRecoverableError)),t=Vu(t,null,e,1,null!=n?n:null,a,0,i,s),e[ha]=t.current,jr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Yu(t)},t.render=function(e,t,n){if(!Gu(t))throw Error(o(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Gu(e))throw Error(o(40));return!!e._reactRootContainer&&(du((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},t.unstable_batchedUpdates=cu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Gu(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.s=r.createRoot,r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function b(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=v.prototype;var S=y.prototype=new b;S.constructor=y,g(S,v.prototype),S.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,C={current:null},_={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var a,o={},i=null,s=null;if(null!=t)for(a in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,a)&&!_.hasOwnProperty(a)&&(o[a]=t[a]);var l=arguments.length-2;if(1===l)o.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===o[a]&&(o[a]=l[a]);return{$$typeof:n,type:e,key:i,ref:s,props:o,_owner:C.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function I(e,t,a,o,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return i=i(l=e),e=""===o?"."+A(l,0):o,w(i)?(a="",null!=e&&(a=e.replace(T,"$&/")+"/"),I(i,t,a,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(T,"$&/")+"/")+e)),t.push(i)),1;if(l=0,o=""===o?".":o+":",w(e))for(var u=0;u<e.length;u++){var c=o+A(s=e[u],u);l+=I(s,t,a,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(s=e.next()).done;)l+=I(s=s.value,t,a,c=o+A(s,u++),i);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function N(e,t,n){if(null==e)return e;var r=[],a=0;return I(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var L={current:null},D={transition:null},P={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:D,ReactCurrentOwner:C};t.Children={map:N,forEach:function(e,t,n){N(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return N(e,(function(){t++})),t},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=a,t.Profiler=i,t.PureComponent=y,t.StrictMode=o,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=g({},e.props),o=e.key,i=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,s=C.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!_.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];a.children=l}return{$$typeof:n,type:e.type,key:o,ref:i,props:a,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return L.current.useCallback(e,t)},t.useContext=function(e){return L.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return L.current.useDeferredValue(e)},t.useEffect=function(e,t){return L.current.useEffect(e,t)},t.useId=function(){return L.current.useId()},t.useImperativeHandle=function(e,t,n){return L.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return L.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return L.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return L.current.useMemo(e,t)},t.useReducer=function(e,t,n){return L.current.useReducer(e,t,n)},t.useRef=function(e){return L.current.useRef(e)},t.useState=function(e){return L.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return L.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return L.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<o(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var s=2*(r+1)-1,l=e[s],u=s+1,c=e[u];if(0>o(l,n))u<a&&0>o(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[s]=n,r=s);else{if(!(u<a&&0>o(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var u=[],c=[],d=1,p=null,f=3,h=!1,g=!1,m=!1,v="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function S(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(m=!1,S(e),!g)if(null!==r(u))g=!0,D(k);else{var t=r(c);null!==t&&P(w,t.startTime-e)}}function k(e,n){g=!1,m&&(m=!1,b(E),E=-1),h=!0;var o=f;try{for(S(n),p=r(u);null!==p&&(!(p.expirationTime>n)||e&&!I());){var i=p.callback;if("function"==typeof i){p.callback=null,f=p.priorityLevel;var s=i(p.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?p.callback=s:p===r(u)&&a(u),S(n)}else a(u);p=r(u)}if(null!==p)var l=!0;else{var d=r(c);null!==d&&P(w,d.startTime-n),l=!1}return l}finally{p=null,f=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,_=!1,x=null,E=-1,T=5,A=-1;function I(){return!(t.unstable_now()-A<T)}function N(){if(null!==x){var e=t.unstable_now();A=e;var n=!0;try{n=x(!0,e)}finally{n?C():(_=!1,x=null)}}else _=!1}if("function"==typeof y)C=function(){y(N)};else if("undefined"!=typeof MessageChannel){var R=new MessageChannel,L=R.port2;R.port1.onmessage=N,C=function(){L.postMessage(null)}}else C=function(){v(N,0)};function D(e){x=e,_||(_=!0,C())}function P(e,n){E=v((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||h||(g=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var n=f;f=t;try{return e()}finally{f=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=f;f=e;try{return t()}finally{f=n}},t.unstable_scheduleCallback=function(e,a,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>i?(e.sortIndex=o,n(c,e),null===r(u)&&e===r(c)&&(m?(b(E),E=-1):m=!0,P(w,o-i))):(e.sortIndex=s,n(u,e),g||h||(g=!0,D(k))),e},t.unstable_shouldYield=I,t.unstable_wrapCallback=function(e){var t=f;return function(){var n=f;f=t;try{return e.apply(this,arguments)}finally{f=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var l=e[s],u=r.base?l[0]+r.base:l[0],c=o[u]||0,d="".concat(u," ").concat(c);o[u]=c+1;var p=n(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var h=a(f,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var l=r(e,a),u=0;u<o.length;u++){var c=n(o[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},739:e=>{e.exports={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nc=void 0;var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__);var e=__webpack_require__(294),t=__webpack_require__(745),n=__webpack_require__(869),r=__webpack_require__(379),a=__webpack_require__.n(r),o=__webpack_require__(795),i=__webpack_require__.n(o),s=__webpack_require__(569),l=__webpack_require__.n(s),u=__webpack_require__(565),c=__webpack_require__.n(u),d=__webpack_require__(216),p=__webpack_require__.n(d),f=__webpack_require__(589),h=__webpack_require__.n(f),g=__webpack_require__(648),m={};m.styleTagTransform=h(),m.setAttributes=c(),m.insert=l().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=p(),a()(g.Z,m),g.Z&&g.Z.locals&&g.Z.locals;class v extends e.Component{render(){return e.createElement("button",{className:"button",onClick:this.props.handleConnectClick},1===this.props.kvmstate?"Connecting KVM":2===this.props.kvmstate?"Disconnect KVM":"Connect KVM")}}var b=__webpack_require__(625),y={};y.styleTagTransform=h(),y.setAttributes=c(),y.insert=l().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=p(),a()(b.Z,y),b.Z&&b.Z.locals&&b.Z.locals;class S extends e.Component{constructor(e){super(e),this.state={value:1},this.onEncodingChange=this.onEncodingChange.bind(this)}onEncodingChange(e){this.setState({value:e.target.value}),this.props.changeEncoding(e.target.value)}render(){return e.createElement("span",{className:"encoding"},e.createElement("label",null,"Encoding:"),e.createElement("select",{value:this.state.value,className:2===this.props.getConnectState()?"reldisabled":"",onChange:this.onEncodingChange,disabled:2===this.props.getConnectState()},e.createElement("option",{value:"1"},"RLE 8"),e.createElement("option",{value:"2"},"RLE 16")))}}class w extends e.Component{constructor(e){super(e),this.desktopsettings={encoding:1},this.changeEncoding=this.changeEncoding.bind(this)}changeEncoding(e){this.desktopsettings.encoding=e,this.props.changeDesktopSettings(this.desktopsettings)}render(){return e.createElement(S,{changeEncoding:this.changeEncoding,getConnectState:this.props.getConnectState})}}var k=__webpack_require__(734),C={};C.styleTagTransform=h(),C.setAttributes=c(),C.insert=l().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=p(),a()(k.Z,C),k.Z&&k.Z.locals&&k.Z.locals;class _ extends e.Component{render(){return e.createElement(e.Fragment,null,e.createElement("div",{className:"header"},e.createElement(v,{handleConnectClick:this.props.handleConnectClick,kvmstate:this.props.kvmstate}),e.createElement(w,{changeDesktopSettings:this.props.changeDesktopSettings,getConnectState:this.props.getConnectState})))}}const x=e=>null!=e&&""!==e&&!1!==e&&0!==e;var E=__webpack_require__(250),T={};T.styleTagTransform=h(),T.setAttributes=c(),T.insert=l().bind(null,"head"),T.domAPI=i(),T.insertStyleElement=p(),a()(E.Z,T),E.Z&&E.Z.locals&&E.Z.locals;class A extends e.Component{shouldComponentUpdate(){return!1}render(){const t={width:"1366",height:"768",onContextMenu:e=>(e.preventDefault(),!1),onMouseDown:this.props.mouseDown,onMouseUp:this.props.mouseUp,onMouseMove:this.props.mouseMove};return e.createElement("canvas",Object.assign({},t,{"data-testid":"pure-canvas-testid",className:"canvas",ref:e=>x(e)?this.props.contextRef(e.getContext("2d")):null}))}}var I=__webpack_require__(917),N={};N.styleTagTransform=h(),N.setAttributes=c(),N.insert=l().bind(null,"head"),N.domAPI=i(),N.insertStyleElement=p(),a()(I.Z,N),I.Z&&I.Z.locals&&I.Z.locals;class R extends e.Component{constructor(e){super(e),this.desktopSettingsChange=!1,this.state={kvmstate:0,encodingOption:1},this.logger=new n.ConsoleLogger(n.LogLevel.ERROR),this.saveContext=this.saveContext.bind(this),this.startKVM=this.startKVM.bind(this),this.stopKVM=this.stopKVM.bind(this),this.handleConnectClick=this.handleConnectClick.bind(this),this.getRenderStatus=this.getRenderStatus.bind(this),this.OnConnectionStateChange=this.OnConnectionStateChange.bind(this),this.changeDesktopSettings=this.changeDesktopSettings.bind(this)}saveContext(e){this.logger.debug("save context called"),this.ctx=e,this.init()}init(){const e=null!=this.props.deviceId?this.props.deviceId:"",t=null!=this.props.mpsServer?this.props.mpsServer.replace("http","ws"):"";this.module=new n.AMTDesktop(this.logger,this.ctx),this.redirector=new n.AMTKvmDataRedirector(this.logger,n.Protocol.KVM,new FileReader,e,16994,"","",0,0,this.props.authToken,t),this.dataProcessor=new n.DataProcessor(this.logger,this.redirector,this.module),this.mouseHelper=new n.MouseHelper(this.module,this.redirector,this.props.mouseDebounceTime<200?200:this.props.mouseDebounceTime),this.keyboard=new n.KeyBoardHelper(this.module,this.redirector),this.redirector.onProcessData=this.module.processData.bind(this.module),this.redirector.onStart=this.module.start.bind(this.module),this.redirector.onNewState=this.module.onStateChange.bind(this.module),this.redirector.onSendKvmData=this.module.onSendKvmData.bind(this.module),this.redirector.onStateChanged=this.OnConnectionStateChange.bind(this),this.redirector.onError=this.onRedirectorError.bind(this),this.module.onSend=this.redirector.send.bind(this.redirector),this.module.onProcessData=this.dataProcessor.processData.bind(this.dataProcessor),this.module.bpp=this.state.encodingOption}cleanUp(){this.module=null,this.redirector=null,this.dataProcessor=null,this.mouseHelper=null,this.keyboard=null,this.ctx.clearRect(0,0,this.ctx.canvas.height,this.ctx.canvas.width)}componentWillUnmount(){this.stopKVM()}onRedirectorError(){this.reset()}reset(){this.cleanUp(),this.init()}OnConnectionStateChange(e,t){this.setState({kvmstate:t}),this.desktopSettingsChange&&0===t&&(this.desktopSettingsChange=!1,setTimeout((()=>this.startKVM()),2e3))}changeDesktopSettings(e){2===this.state.kvmstate?(this.desktopSettingsChange=!0,this.module.bpp=e.encoding,this.stopKVM()):(this.setState({encodingOption:parseInt(e.encoding)}),this.module.bpp=parseInt(e.encoding))}startKVM(){void 0!==this.redirector&&this.redirector.start(WebSocket),void 0!==this.keyboard&&this.keyboard.GrabKeyInput()}stopKVM(){void 0!==this.redirector&&this.redirector.stop(),void 0!==this.keyboard&&this.keyboard.UnGrabKeyInput(),this.reset()}getRenderStatus(){return this.module.state}handleConnectClick(e){e.persist(),0===this.state.kvmstate?this.startKVM():1===this.state.kvmstate||2===this.state.kvmstate&&this.stopKVM()}componentDidUpdate(e){e.deviceId!==this.props.deviceId&&this.stopKVM()}render(){return e.createElement("div",{className:"canvas-container"},x(this.props.autoConnect)?"":e.createElement(_,{key:"kvm_header",handleConnectClick:this.handleConnectClick,getConnectState:()=>this.state.kvmstate,kvmstate:this.state.kvmstate,changeDesktopSettings:this.changeDesktopSettings,deviceId:this.props.deviceId,server:this.props.mpsServer}),e.createElement(A,{key:"kvm_comp",contextRef:e=>this.saveContext(e),canvasHeight:this.props.canvasHeight,canvasWidth:this.props.canvasWidth,mouseMove:e=>{void 0!==this.mouseHelper&&this.mouseHelper.mousemove(e)},mouseDown:e=>{void 0!==this.mouseHelper&&this.mouseHelper.mousedown(e)},mouseUp:e=>{void 0!==this.mouseHelper&&this.mouseHelper.mouseup(e)}}))}}const L={type:"logger",log(e){this.output("log",e)},warn(e){this.output("warn",e)},error(e){this.output("error",e)},output(e,t){console&&console[e]&&console[e].apply(console,t)}};class D{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.init(e,t)}init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||L,this.options=t,this.debug=t.debug}log(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"log","",!0)}warn(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","",!0)}error(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"error","")}deprecate(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}forward(e,t,n,r){return r&&!this.debug?null:("string"==typeof e[0]&&(e[0]=`${n}${this.prefix} ${e[0]}`),this.logger[t](e))}create(e){return new D(this.logger,{prefix:`${this.prefix}:${e}:`,...this.options})}clone(e){return(e=e||this.options).prefix=e.prefix||this.prefix,new D(this.logger,e)}}var P=new D;class O{constructor(){this.observers={}}on(e,t){return e.split(" ").forEach((e=>{this.observers[e]=this.observers[e]||[],this.observers[e].push(t)})),this}off(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((e=>e!==t)):delete this.observers[e])}emit(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this.observers[e]&&[].concat(this.observers[e]).forEach((e=>{e(...n)})),this.observers["*"]&&[].concat(this.observers["*"]).forEach((t=>{t.apply(t,[e,...n])}))}}function M(){let e,t;const n=new Promise(((n,r)=>{e=n,t=r}));return n.resolve=e,n.reject=t,n}function B(e){return null==e?"":""+e}function F(e,t,n){function r(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function a(){return!e||"string"==typeof e}const o="string"!=typeof t?[].concat(t):t.split(".");for(;o.length>1;){if(a())return{};const t=r(o.shift());!e[t]&&n&&(e[t]=new n),e=Object.prototype.hasOwnProperty.call(e,t)?e[t]:{}}return a()?{}:{obj:e,k:r(o.shift())}}function z(e,t,n){const{obj:r,k:a}=F(e,t,Object);r[a]=n}function U(e,t){const{obj:n,k:r}=F(e,t);if(n)return n[r]}function H(e,t,n){for(const r in t)"__proto__"!==r&&"constructor"!==r&&(r in e?"string"==typeof e[r]||e[r]instanceof String||"string"==typeof t[r]||t[r]instanceof String?n&&(e[r]=t[r]):H(e[r],t[r],n):e[r]=t[r]);return e}function j(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var V={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function K(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(e=>V[e])):e}const $=[" ",",","?","!",";"];function Z(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(!e)return;if(e[t])return e[t];const r=t.split(n);let a=e;for(let e=0;e<r.length;++e){if(!a)return;if("string"==typeof a[r[e]]&&e+1<r.length)return;if(void 0===a[r[e]]){let o=2,i=r.slice(e,e+o).join(n),s=a[i];for(;void 0===s&&r.length>e+o;)o++,i=r.slice(e,e+o).join(n),s=a[i];if(void 0===s)return;if(null===s)return null;if(t.endsWith(i)){if("string"==typeof s)return s;if(i&&"string"==typeof s[i])return s[i]}const l=r.slice(e+o).join(n);return l?Z(s,l,n):void 0}a=a[r[e]]}return a}function q(e){return e&&e.indexOf("_")>0?e.replace("_","-"):e}class W extends O{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=e||{},this.options=t,void 0===this.options.keySeparator&&(this.options.keySeparator="."),void 0===this.options.ignoreJSONStructure&&(this.options.ignoreJSONStructure=!0)}addNamespaces(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}removeNamespaces(e){const t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}getResource(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const a=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,o=void 0!==r.ignoreJSONStructure?r.ignoreJSONStructure:this.options.ignoreJSONStructure;let i=[e,t];n&&"string"!=typeof n&&(i=i.concat(n)),n&&"string"==typeof n&&(i=i.concat(a?n.split(a):n)),e.indexOf(".")>-1&&(i=e.split("."));const s=U(this.data,i);return s||!o||"string"!=typeof n?s:Z(this.data&&this.data[e]&&this.data[e][t],n,a)}addResource(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1};const o=void 0!==a.keySeparator?a.keySeparator:this.options.keySeparator;let i=[e,t];n&&(i=i.concat(o?n.split(o):n)),e.indexOf(".")>-1&&(i=e.split("."),r=t,t=i[1]),this.addNamespaces(t),z(this.data,i,r),a.silent||this.emit("added",e,t,n,r)}addResources(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(const r in n)"string"!=typeof n[r]&&"[object Array]"!==Object.prototype.toString.apply(n[r])||this.addResource(e,t,r,n[r],{silent:!0});r.silent||this.emit("added",e,t,n)}addResourceBundle(e,t,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},i=[e,t];e.indexOf(".")>-1&&(i=e.split("."),r=n,n=t,t=i[1]),this.addNamespaces(t);let s=U(this.data,i)||{};r?H(s,n,a):s={...s,...n},z(this.data,i,s),o.silent||this.emit("added",e,t,n)}removeResourceBundle(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}hasResourceBundle(e,t){return void 0!==this.getResource(e,t)}getResourceBundle(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?{...this.getResource(e,t)}:this.getResource(e,t)}getDataByLanguage(e){return this.data[e]}hasLanguageSomeTranslations(e){const t=this.getDataByLanguage(e);return!!(t&&Object.keys(t)||[]).find((e=>t[e]&&Object.keys(t[e]).length>0))}toJSON(){return this.data}}var X={processors:{},addPostProcessor(e){this.processors[e.name]=e},handle(e,t,n,r,a){return e.forEach((e=>{this.processors[e]&&(t=this.processors[e].process(t,n,r,a))})),t}};const Y={};class Q extends O{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var n,r;super(),n=e,r=this,["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"].forEach((e=>{n[e]&&(r[e]=n[e])})),this.options=t,void 0===this.options.keySeparator&&(this.options.keySeparator="."),this.logger=P.create("translator")}changeLanguage(e){e&&(this.language=e)}exists(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;const n=this.resolve(e,t);return n&&void 0!==n.res}extractFromKey(e,t){let n=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===n&&(n=":");const r=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator;let a=t.ns||this.options.defaultNS||[];const o=n&&e.indexOf(n)>-1,i=!(this.options.userDefinedKeySeparator||t.keySeparator||this.options.userDefinedNsSeparator||t.nsSeparator||function(e,t,n){t=t||"",n=n||"";const r=$.filter((e=>t.indexOf(e)<0&&n.indexOf(e)<0));if(0===r.length)return!0;const a=new RegExp(`(${r.map((e=>"?"===e?"\\?":e)).join("|")})`);let o=!a.test(e);if(!o){const t=e.indexOf(n);t>0&&!a.test(e.substring(0,t))&&(o=!0)}return o}(e,n,r));if(o&&!i){const t=e.match(this.interpolator.nestingRegexp);if(t&&t.length>0)return{key:e,namespaces:a};const o=e.split(n);(n!==r||n===r&&this.options.ns.indexOf(o[0])>-1)&&(a=o.shift()),e=o.join(r)}return"string"==typeof a&&(a=[a]),{key:e,namespaces:a}}translate(e,t,n){if("object"!=typeof t&&this.options.overloadTranslationOptionHandler&&(t=this.options.overloadTranslationOptionHandler(arguments)),"object"==typeof t&&(t={...t}),t||(t={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);const r=void 0!==t.returnDetails?t.returnDetails:this.options.returnDetails,a=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,{key:o,namespaces:i}=this.extractFromKey(e[e.length-1],t),s=i[i.length-1],l=t.lng||this.language,u=t.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(l&&"cimode"===l.toLowerCase()){if(u){const e=t.nsSeparator||this.options.nsSeparator;return r?{res:`${s}${e}${o}`,usedKey:o,exactUsedKey:o,usedLng:l,usedNS:s}:`${s}${e}${o}`}return r?{res:o,usedKey:o,exactUsedKey:o,usedLng:l,usedNS:s}:o}const c=this.resolve(e,t);let d=c&&c.res;const p=c&&c.usedKey||o,f=c&&c.exactUsedKey||o,h=Object.prototype.toString.apply(d),g=void 0!==t.joinArrays?t.joinArrays:this.options.joinArrays,m=!this.i18nFormat||this.i18nFormat.handleAsObject;if(m&&d&&"string"!=typeof d&&"boolean"!=typeof d&&"number"!=typeof d&&["[object Number]","[object Function]","[object RegExp]"].indexOf(h)<0&&("string"!=typeof g||"[object Array]"!==h)){if(!t.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const e=this.options.returnedObjectHandler?this.options.returnedObjectHandler(p,d,{...t,ns:i}):`key '${o} (${this.language})' returned an object instead of string.`;return r?(c.res=e,c):e}if(a){const e="[object Array]"===h,n=e?[]:{},r=e?f:p;for(const e in d)if(Object.prototype.hasOwnProperty.call(d,e)){const o=`${r}${a}${e}`;n[e]=this.translate(o,{...t,joinArrays:!1,ns:i}),n[e]===o&&(n[e]=d[e])}d=n}}else if(m&&"string"==typeof g&&"[object Array]"===h)d=d.join(g),d&&(d=this.extendTranslation(d,e,t,n));else{let r=!1,i=!1;const u=void 0!==t.count&&"string"!=typeof t.count,p=Q.hasDefaultValue(t),f=u?this.pluralResolver.getSuffix(l,t.count,t):"",h=t.ordinal&&u?this.pluralResolver.getSuffix(l,t.count,{ordinal:!1}):"",g=t[`defaultValue${f}`]||t[`defaultValue${h}`]||t.defaultValue;!this.isValidLookup(d)&&p&&(r=!0,d=g),this.isValidLookup(d)||(i=!0,d=o);const m=(t.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&i?void 0:d,v=p&&g!==d&&this.options.updateMissing;if(i||r||v){if(this.logger.log(v?"updateKey":"missingKey",l,s,o,v?g:d),a){const e=this.resolve(o,{...t,keySeparator:!1});e&&e.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let e=[];const n=this.languageUtils.getFallbackCodes(this.options.fallbackLng,t.lng||this.language);if("fallback"===this.options.saveMissingTo&&n&&n[0])for(let t=0;t<n.length;t++)e.push(n[t]);else"all"===this.options.saveMissingTo?e=this.languageUtils.toResolveHierarchy(t.lng||this.language):e.push(t.lng||this.language);const r=(e,n,r)=>{const a=p&&r!==d?r:m;this.options.missingKeyHandler?this.options.missingKeyHandler(e,s,n,a,v,t):this.backendConnector&&this.backendConnector.saveMissing&&this.backendConnector.saveMissing(e,s,n,a,v,t),this.emit("missingKey",e,s,n,d)};this.options.saveMissing&&(this.options.saveMissingPlurals&&u?e.forEach((e=>{this.pluralResolver.getSuffixes(e,t).forEach((n=>{r([e],o+n,t[`defaultValue${n}`]||g)}))})):r(e,o,g))}d=this.extendTranslation(d,e,t,c,n),i&&d===o&&this.options.appendNamespaceToMissingKey&&(d=`${s}:${o}`),(i||r)&&this.options.parseMissingKeyHandler&&(d="v1"!==this.options.compatibilityAPI?this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${s}:${o}`:o,r?d:void 0):this.options.parseMissingKeyHandler(d))}return r?(c.res=d,c):d}extendTranslation(e,t,n,r,a){var o=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,{...this.options.interpolation.defaultVariables,...n},r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init({...n,interpolation:{...this.options.interpolation,...n.interpolation}});const i="string"==typeof e&&(n&&n.interpolation&&void 0!==n.interpolation.skipOnVariables?n.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let s;if(i){const t=e.match(this.interpolator.nestingRegexp);s=t&&t.length}let l=n.replace&&"string"!=typeof n.replace?n.replace:n;if(this.options.interpolation.defaultVariables&&(l={...this.options.interpolation.defaultVariables,...l}),e=this.interpolator.interpolate(e,l,n.lng||this.language,n),i){const t=e.match(this.interpolator.nestingRegexp);s<(t&&t.length)&&(n.nest=!1)}!n.lng&&"v1"!==this.options.compatibilityAPI&&r&&r.res&&(n.lng=r.usedLng),!1!==n.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,r=new Array(e),i=0;i<e;i++)r[i]=arguments[i];return a&&a[0]===r[0]&&!n.context?(o.logger.warn(`It seems you are nesting recursively key: ${r[0]} in key: ${t[0]}`),null):o.translate(...r,t)}),n)),n.interpolation&&this.interpolator.reset()}const i=n.postProcess||this.options.postProcess,s="string"==typeof i?[i]:i;return null!=e&&s&&s.length&&!1!==n.applyPostProcessor&&(e=X.handle(s,e,t,this.options&&this.options.postProcessPassResolved?{i18nResolved:r,...n}:n,this)),e}resolve(e){let t,n,r,a,o,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((e=>{if(this.isValidLookup(t))return;const s=this.extractFromKey(e,i),l=s.key;n=l;let u=s.namespaces;this.options.fallbackNS&&(u=u.concat(this.options.fallbackNS));const c=void 0!==i.count&&"string"!=typeof i.count,d=c&&!i.ordinal&&0===i.count&&this.pluralResolver.shouldUseIntlApi(),p=void 0!==i.context&&("string"==typeof i.context||"number"==typeof i.context)&&""!==i.context,f=i.lngs?i.lngs:this.languageUtils.toResolveHierarchy(i.lng||this.language,i.fallbackLng);u.forEach((e=>{this.isValidLookup(t)||(o=e,!Y[`${f[0]}-${e}`]&&this.utils&&this.utils.hasLoadedNamespace&&!this.utils.hasLoadedNamespace(o)&&(Y[`${f[0]}-${e}`]=!0,this.logger.warn(`key "${n}" for languages "${f.join(", ")}" won't get resolved as namespace "${o}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),f.forEach((n=>{if(this.isValidLookup(t))return;a=n;const o=[l];if(this.i18nFormat&&this.i18nFormat.addLookupKeys)this.i18nFormat.addLookupKeys(o,l,n,e,i);else{let e;c&&(e=this.pluralResolver.getSuffix(n,i.count,i));const t=`${this.options.pluralSeparator}zero`,r=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(c&&(o.push(l+e),i.ordinal&&0===e.indexOf(r)&&o.push(l+e.replace(r,this.options.pluralSeparator)),d&&o.push(l+t)),p){const n=`${l}${this.options.contextSeparator}${i.context}`;o.push(n),c&&(o.push(n+e),i.ordinal&&0===e.indexOf(r)&&o.push(n+e.replace(r,this.options.pluralSeparator)),d&&o.push(n+t))}}let s;for(;s=o.pop();)this.isValidLookup(t)||(r=s,t=this.getResource(n,e,s,i))})))}))})),{res:t,usedKey:n,exactUsedKey:r,usedLng:a,usedNS:o}}isValidLookup(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}getResource(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,r):this.resourceStore.getResource(e,t,n,r)}static hasDefaultValue(e){const t="defaultValue";for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t===n.substring(0,t.length)&&void 0!==e[n])return!0;return!1}}function G(e){return e.charAt(0).toUpperCase()+e.slice(1)}class J{constructor(e){this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=P.create("languageUtils")}getScriptPartFromCode(e){if(!(e=q(e))||e.indexOf("-")<0)return null;const t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}getLanguagePartFromCode(e){if(!(e=q(e))||e.indexOf("-")<0)return e;const t=e.split("-");return this.formatLanguageCode(t[0])}formatLanguageCode(e){if("string"==typeof e&&e.indexOf("-")>-1){const t=["hans","hant","latn","cyrl","cans","mong","arab"];let n=e.split("-");return this.options.lowerCaseLng?n=n.map((e=>e.toLowerCase())):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=G(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=G(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=G(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}isSupportedCode(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}getBestMatchFromCodes(e){if(!e)return null;let t;return e.forEach((e=>{if(t)return;const n=this.formatLanguageCode(e);this.options.supportedLngs&&!this.isSupportedCode(n)||(t=n)})),!t&&this.options.supportedLngs&&e.forEach((e=>{if(t)return;const n=this.getLanguagePartFromCode(e);if(this.isSupportedCode(n))return t=n;t=this.options.supportedLngs.find((e=>e===n?e:e.indexOf("-")<0&&n.indexOf("-")<0?void 0:0===e.indexOf(n)?e:void 0))})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t}getFallbackCodes(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];let n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e[this.getLanguagePartFromCode(t)]),n||(n=e.default),n||[]}toResolveHierarchy(e,t){const n=this.getFallbackCodes(t||this.options.fallbackLng||[],e),r=[],a=e=>{e&&(this.isSupportedCode(e)?r.push(e):this.logger.warn(`rejecting language code not found in supportedLngs: ${e}`))};return"string"==typeof e&&(e.indexOf("-")>-1||e.indexOf("_")>-1)?("languageOnly"!==this.options.load&&a(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&a(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&a(this.getLanguagePartFromCode(e))):"string"==typeof e&&a(this.formatLanguageCode(e)),n.forEach((e=>{r.indexOf(e)<0&&a(this.formatLanguageCode(e))})),r}}let ee=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],te={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}};const ne=["v1","v2","v3"],re=["v4"],ae={zero:0,one:1,two:2,few:3,many:4,other:5};class oe{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.languageUtils=e,this.options=t,this.logger=P.create("pluralResolver"),this.options.compatibilityJSON&&!re.includes(this.options.compatibilityJSON)||"undefined"!=typeof Intl&&Intl.PluralRules||(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=function(){const e={};return ee.forEach((t=>{t.lngs.forEach((n=>{e[n]={numbers:t.nr,plurals:te[t.fc]}}))})),e}()}addRule(e,t){this.rules[e]=t}getRule(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(q(e),{type:t.ordinal?"ordinal":"cardinal"})}catch{return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}needsPlural(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.getRule(e,t);return this.shouldUseIntlApi()?n&&n.resolvedOptions().pluralCategories.length>1:n&&n.numbers.length>1}getPluralFormsOfKey(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,n).map((e=>`${t}${e}`))}getSuffixes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.getRule(e,t);return n?this.shouldUseIntlApi()?n.resolvedOptions().pluralCategories.sort(((e,t)=>ae[e]-ae[t])).map((e=>`${this.options.prepend}${t.ordinal?`ordinal${this.options.prepend}`:""}${e}`)):n.numbers.map((n=>this.getSuffix(e,n,t))):[]}getSuffix(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=this.getRule(e,n);return r?this.shouldUseIntlApi()?`${this.options.prepend}${n.ordinal?`ordinal${this.options.prepend}`:""}${r.select(t)}`:this.getSuffixRetroCompatible(r,t):(this.logger.warn(`no plural rule found for: ${e}`),"")}getSuffixRetroCompatible(e,t){const n=e.noAbs?e.plurals(t):e.plurals(Math.abs(t));let r=e.numbers[n];this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]&&(2===r?r="plural":1===r&&(r=""));const a=()=>this.options.prepend&&r.toString()?this.options.prepend+r.toString():r.toString();return"v1"===this.options.compatibilityJSON?1===r?"":"number"==typeof r?`_plural_${r.toString()}`:a():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]?a():this.options.prepend&&n.toString()?this.options.prepend+n.toString():n.toString()}shouldUseIntlApi(){return!ne.includes(this.options.compatibilityJSON)}}function ie(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:".",a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=function(e,t,n){const r=U(e,n);return void 0!==r?r:U(t,n)}(e,t,n);return!o&&a&&"string"==typeof n&&(o=Z(e,n,r),void 0===o&&(o=Z(t,n,r))),o}class se{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=P.create("interpolator"),this.options=e,this.format=e.interpolation&&e.interpolation.format||(e=>e),this.init(e)}init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});const t=e.interpolation;this.escape=void 0!==t.escape?t.escape:K,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?j(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?j(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?j(t.nestingPrefix):t.nestingPrefixEscaped||j("$t("),this.nestingSuffix=t.nestingSuffix?j(t.nestingSuffix):t.nestingSuffixEscaped||j(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const e=`${this.prefix}(.+?)${this.suffix}`;this.regexp=new RegExp(e,"g");const t=`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;this.regexpUnescape=new RegExp(t,"g");const n=`${this.nestingPrefix}(.+?)${this.nestingSuffix}`;this.nestingRegexp=new RegExp(n,"g")}interpolate(e,t,n,r){let a,o,i;const s=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function l(e){return e.replace(/\$/g,"$$$$")}const u=e=>{if(e.indexOf(this.formatSeparator)<0){const a=ie(t,s,e,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(a,void 0,n,{...r,...t,interpolationkey:e}):a}const a=e.split(this.formatSeparator),o=a.shift().trim(),i=a.join(this.formatSeparator).trim();return this.format(ie(t,s,o,this.options.keySeparator,this.options.ignoreJSONStructure),i,n,{...r,...t,interpolationkey:o})};this.resetRegExp();const c=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,d=r&&r.interpolation&&void 0!==r.interpolation.skipOnVariables?r.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:e=>l(e)},{regex:this.regexp,safeValue:e=>this.escapeValue?l(this.escape(e)):l(e)}].forEach((t=>{for(i=0;a=t.regex.exec(e);){const n=a[1].trim();if(o=u(n),void 0===o)if("function"==typeof c){const t=c(e,a,r);o="string"==typeof t?t:""}else if(r&&Object.prototype.hasOwnProperty.call(r,n))o="";else{if(d){o=a[0];continue}this.logger.warn(`missed to pass in variable ${n} for interpolating ${e}`),o=""}else"string"==typeof o||this.useRawValueToEscape||(o=B(o));const s=t.safeValue(o);if(e=e.replace(a[0],s),d?(t.regex.lastIndex+=o.length,t.regex.lastIndex-=a[0].length):t.regex.lastIndex=0,i++,i>=this.maxReplaces)break}})),e}nest(e,t){let n,r,a,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};function i(e,t){const n=this.nestingOptionsSeparator;if(e.indexOf(n)<0)return e;const r=e.split(new RegExp(`${n}[ ]*{`));let o=`{${r[1]}`;e=r[0],o=this.interpolate(o,a);const i=o.match(/'/g),s=o.match(/"/g);(i&&i.length%2==0&&!s||s.length%2!=0)&&(o=o.replace(/'/g,'"'));try{a=JSON.parse(o),t&&(a={...t,...a})}catch(t){return this.logger.warn(`failed parsing options string in nesting for key ${e}`,t),`${e}${n}${o}`}return delete a.defaultValue,e}for(;n=this.nestingRegexp.exec(e);){let s=[];a={...o},a=a.replace&&"string"!=typeof a.replace?a.replace:a,a.applyPostProcessor=!1,delete a.defaultValue;let l=!1;if(-1!==n[0].indexOf(this.formatSeparator)&&!/{.*}/.test(n[1])){const e=n[1].split(this.formatSeparator).map((e=>e.trim()));n[1]=e.shift(),s=e,l=!0}if(r=t(i.call(this,n[1].trim(),a),a),r&&n[0]===e&&"string"!=typeof r)return r;"string"!=typeof r&&(r=B(r)),r||(this.logger.warn(`missed to resolve ${n[1]} for nesting ${e}`),r=""),l&&(r=s.reduce(((e,t)=>this.format(e,t,o.lng,{...o,interpolationkey:n[1].trim()})),r.trim())),e=e.replace(n[0],r),this.regexp.lastIndex=0}return e}}function le(e){const t={};return function(n,r,a){const o=r+JSON.stringify(a);let i=t[o];return i||(i=e(r,a),t[o]=i),i(n)}}class ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=P.create("formatter"),this.options=e,this.formats={number:le(((e,t)=>{const n=new Intl.NumberFormat(e,{...t});return e=>n.format(e)})),currency:le(((e,t)=>{const n=new Intl.NumberFormat(e,{...t,style:"currency"});return e=>n.format(e)})),datetime:le(((e,t)=>{const n=new Intl.DateTimeFormat(e,{...t});return e=>n.format(e)})),relativetime:le(((e,t)=>{const n=new Intl.RelativeTimeFormat(e,{...t});return e=>n.format(e,t.range||"day")})),list:le(((e,t)=>{const n=new Intl.ListFormat(e,{...t});return e=>n.format(e)}))},this.init(e)}init(e){const t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}}).interpolation;this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||","}add(e,t){this.formats[e.toLowerCase().trim()]=t}addCached(e,t){this.formats[e.toLowerCase().trim()]=le(t)}format(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return t.split(this.formatSeparator).reduce(((e,t)=>{const{formatName:a,formatOptions:o}=function(e){let t=e.toLowerCase().trim();const n={};if(e.indexOf("(")>-1){const r=e.split("(");t=r[0].toLowerCase().trim();const a=r[1].substring(0,r[1].length-1);"currency"===t&&a.indexOf(":")<0?n.currency||(n.currency=a.trim()):"relativetime"===t&&a.indexOf(":")<0?n.range||(n.range=a.trim()):a.split(";").forEach((e=>{if(!e)return;const[t,...r]=e.split(":"),a=r.join(":").trim().replace(/^'+|'+$/g,"");n[t.trim()]||(n[t.trim()]=a),"false"===a&&(n[t.trim()]=!1),"true"===a&&(n[t.trim()]=!0),isNaN(a)||(n[t.trim()]=parseInt(a,10))}))}return{formatName:t,formatOptions:n}}(t);if(this.formats[a]){let t=e;try{const i=r&&r.formatParams&&r.formatParams[r.interpolationkey]||{},s=i.locale||i.lng||r.locale||r.lng||n;t=this.formats[a](e,s,{...o,...r,...i})}catch(e){this.logger.warn(e)}return t}return this.logger.warn(`there was no format function for ${a}`),e}),e)}}class ce extends O{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};super(),this.backend=e,this.store=t,this.services=n,this.languageUtils=n.languageUtils,this.options=r,this.logger=P.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=r.maxParallelReads||10,this.readingCalls=0,this.maxRetries=r.maxRetries>=0?r.maxRetries:5,this.retryTimeout=r.retryTimeout>=1?r.retryTimeout:350,this.state={},this.queue=[],this.backend&&this.backend.init&&this.backend.init(n,r.backend,r)}queueLoad(e,t,n,r){const a={},o={},i={},s={};return e.forEach((e=>{let r=!0;t.forEach((t=>{const i=`${e}|${t}`;!n.reload&&this.store.hasResourceBundle(e,t)?this.state[i]=2:this.state[i]<0||(1===this.state[i]?void 0===o[i]&&(o[i]=!0):(this.state[i]=1,r=!1,void 0===o[i]&&(o[i]=!0),void 0===a[i]&&(a[i]=!0),void 0===s[t]&&(s[t]=!0)))})),r||(i[e]=!0)})),(Object.keys(a).length||Object.keys(o).length)&&this.queue.push({pending:o,pendingCount:Object.keys(o).length,loaded:{},errors:[],callback:r}),{toLoad:Object.keys(a),pending:Object.keys(o),toLoadLanguages:Object.keys(i),toLoadNamespaces:Object.keys(s)}}loaded(e,t,n){const r=e.split("|"),a=r[0],o=r[1];t&&this.emit("failedLoading",a,o,t),n&&this.store.addResourceBundle(a,o,n),this.state[e]=t?-1:2;const i={};this.queue.forEach((n=>{!function(e,t,n,r){const{obj:a,k:o}=F(e,t,Object);a[o]=a[o]||[],a[o].push(n)}(n.loaded,[a],o),function(e,t){void 0!==e.pending[t]&&(delete e.pending[t],e.pendingCount--)}(n,e),t&&n.errors.push(t),0!==n.pendingCount||n.done||(Object.keys(n.loaded).forEach((e=>{i[e]||(i[e]={});const t=n.loaded[e];t.length&&t.forEach((t=>{void 0===i[e][t]&&(i[e][t]=!0)}))})),n.done=!0,n.errors.length?n.callback(n.errors):n.callback())})),this.emit("loaded",i),this.queue=this.queue.filter((e=>!e.done))}read(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.retryTimeout,o=arguments.length>5?arguments[5]:void 0;if(!e.length)return o(null,{});if(this.readingCalls>=this.maxParallelReads)return void this.waitingReads.push({lng:e,ns:t,fcName:n,tried:r,wait:a,callback:o});this.readingCalls++;const i=(i,s)=>{if(this.readingCalls--,this.waitingReads.length>0){const e=this.waitingReads.shift();this.read(e.lng,e.ns,e.fcName,e.tried,e.wait,e.callback)}i&&s&&r<this.maxRetries?setTimeout((()=>{this.read.call(this,e,t,n,r+1,2*a,o)}),a):o(i,s)},s=this.backend[n].bind(this.backend);if(2!==s.length)return s(e,t,i);try{const n=s(e,t);n&&"function"==typeof n.then?n.then((e=>i(null,e))).catch(i):i(null,n)}catch(e){i(e)}}prepareLoading(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),r&&r();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);const a=this.queueLoad(e,t,n,r);if(!a.toLoad.length)return a.pending.length||r(),null;a.toLoad.forEach((e=>{this.loadOne(e)}))}load(e,t,n){this.prepareLoading(e,t,{},n)}reload(e,t,n){this.prepareLoading(e,t,{reload:!0},n)}loadOne(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=e.split("|"),r=n[0],a=n[1];this.read(r,a,"read",void 0,void 0,((n,o)=>{n&&this.logger.warn(`${t}loading namespace ${a} for language ${r} failed`,n),!n&&o&&this.logger.log(`${t}loaded namespace ${a} for language ${r}`,o),this.loaded(e,n,o)}))}saveMissing(e,t,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:()=>{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t))this.logger.warn(`did not save key "${n}" as the namespace "${t}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");else if(null!=n&&""!==n){if(this.backend&&this.backend.create){const s={...o,isUpdate:a},l=this.backend.create.bind(this.backend);if(l.length<6)try{let a;a=5===l.length?l(e,t,n,r,s):l(e,t,n,r),a&&"function"==typeof a.then?a.then((e=>i(null,e))).catch(i):i(null,a)}catch(e){i(e)}else l(e,t,n,r,i,s)}e&&e[0]&&this.store.addResource(e[0],t,n,r)}}}function de(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){let t={};if("object"==typeof e[1]&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"==typeof e[2]||"object"==typeof e[3]){const n=e[3]||e[2];Object.keys(n).forEach((e=>{t[e]=n[e]}))}return t},interpolation:{escapeValue:!0,format:(e,t,n,r)=>e,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function pe(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function fe(){}class he extends O{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;var n;if(super(),this.options=pe(e),this.services={},this.logger=P,this.modules={external:[]},n=this,Object.getOwnPropertyNames(Object.getPrototypeOf(n)).forEach((e=>{"function"==typeof n[e]&&(n[e]=n[e].bind(n))})),t&&!this.isInitialized&&!e.isClone){if(!this.options.initImmediate)return this.init(e,t),this;setTimeout((()=>{this.init(e,t)}),0)}}init(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;"function"==typeof t&&(n=t,t={}),!t.defaultNS&&!1!==t.defaultNS&&t.ns&&("string"==typeof t.ns?t.defaultNS=t.ns:t.ns.indexOf("translation")<0&&(t.defaultNS=t.ns[0]));const r=de();function a(e){return e?"function"==typeof e?new e:e:null}if(this.options={...r,...this.options,...pe(t)},"v1"!==this.options.compatibilityAPI&&(this.options.interpolation={...r.interpolation,...this.options.interpolation}),void 0!==t.keySeparator&&(this.options.userDefinedKeySeparator=t.keySeparator),void 0!==t.nsSeparator&&(this.options.userDefinedNsSeparator=t.nsSeparator),!this.options.isClone){let t;this.modules.logger?P.init(a(this.modules.logger),this.options):P.init(null,this.options),this.modules.formatter?t=this.modules.formatter:"undefined"!=typeof Intl&&(t=ue);const n=new J(this.options);this.store=new W(this.options.resources,this.options);const o=this.services;o.logger=P,o.resourceStore=this.store,o.languageUtils=n,o.pluralResolver=new oe(n,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!t||this.options.interpolation.format&&this.options.interpolation.format!==r.interpolation.format||(o.formatter=a(t),o.formatter.init(o,this.options),this.options.interpolation.format=o.formatter.format.bind(o.formatter)),o.interpolator=new se(this.options),o.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},o.backendConnector=new ce(a(this.modules.backend),o.resourceStore,o,this.options),o.backendConnector.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];e.emit(t,...r)})),this.modules.languageDetector&&(o.languageDetector=a(this.modules.languageDetector),o.languageDetector.init&&o.languageDetector.init(o,this.options.detection,this.options)),this.modules.i18nFormat&&(o.i18nFormat=a(this.modules.i18nFormat),o.i18nFormat.init&&o.i18nFormat.init(this)),this.translator=new Q(this.services,this.options),this.translator.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];e.emit(t,...r)})),this.modules.external.forEach((e=>{e.init&&e.init(this)}))}if(this.format=this.options.interpolation.format,n||(n=fe),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const e=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);e.length>0&&"dev"!==e[0]&&(this.options.lng=e[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined"),["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach((t=>{this[t]=function(){return e.store[t](...arguments)}})),["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach((t=>{this[t]=function(){return e.store[t](...arguments),e}}));const o=M(),i=()=>{const e=(e,t)=>{this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),o.resolve(t),n(e,t)};if(this.languages&&"v1"!==this.options.compatibilityAPI&&!this.isInitialized)return e(null,this.t.bind(this));this.changeLanguage(this.options.lng,e)};return this.options.resources||!this.options.initImmediate?i():setTimeout(i,0),o}loadResources(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:fe;const n="string"==typeof e?e:this.language;if("function"==typeof e&&(t=e),!this.options.resources||this.options.partialBundledLanguages){if(n&&"cimode"===n.toLowerCase())return t();const e=[],r=t=>{t&&this.services.languageUtils.toResolveHierarchy(t).forEach((t=>{e.indexOf(t)<0&&e.push(t)}))};n?r(n):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((e=>r(e))),this.options.preload&&this.options.preload.forEach((e=>r(e))),this.services.backendConnector.load(e,this.options.ns,(e=>{e||this.resolvedLanguage||!this.language||this.setResolvedLanguage(this.language),t(e)}))}else t(null)}reloadResources(e,t,n){const r=M();return e||(e=this.languages),t||(t=this.options.ns),n||(n=fe),this.services.backendConnector.reload(e,t,(e=>{r.resolve(),n(e)})),r}use(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&X.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}setResolvedLanguage(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(let e=0;e<this.languages.length;e++){const t=this.languages[e];if(!(["cimode","dev"].indexOf(t)>-1)&&this.store.hasLanguageSomeTranslations(t)){this.resolvedLanguage=t;break}}}changeLanguage(e,t){var n=this;this.isLanguageChangingTo=e;const r=M();this.emit("languageChanging",e);const a=e=>{this.language=e,this.languages=this.services.languageUtils.toResolveHierarchy(e),this.resolvedLanguage=void 0,this.setResolvedLanguage(e)},o=(e,o)=>{o?(a(o),this.translator.changeLanguage(o),this.isLanguageChangingTo=void 0,this.emit("languageChanged",o),this.logger.log("languageChanged",o)):this.isLanguageChangingTo=void 0,r.resolve((function(){return n.t(...arguments)})),t&&t(e,(function(){return n.t(...arguments)}))},i=t=>{e||t||!this.services.languageDetector||(t=[]);const n="string"==typeof t?t:this.services.languageUtils.getBestMatchFromCodes(t);n&&(this.language||a(n),this.translator.language||this.translator.changeLanguage(n),this.services.languageDetector&&this.services.languageDetector.cacheUserLanguage&&this.services.languageDetector.cacheUserLanguage(n)),this.loadResources(n,(e=>{o(e,n)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?0===this.services.languageDetector.detect.length?this.services.languageDetector.detect().then(i):this.services.languageDetector.detect(i):i(e):i(this.services.languageDetector.detect()),r}getFixedT(e,t,n){var r=this;const a=function(e,t){let o;if("object"!=typeof t){for(var i=arguments.length,s=new Array(i>2?i-2:0),l=2;l<i;l++)s[l-2]=arguments[l];o=r.options.overloadTranslationOptionHandler([e,t].concat(s))}else o={...t};o.lng=o.lng||a.lng,o.lngs=o.lngs||a.lngs,o.ns=o.ns||a.ns,o.keyPrefix=o.keyPrefix||n||a.keyPrefix;const u=r.options.keySeparator||".";let c;return c=o.keyPrefix&&Array.isArray(e)?e.map((e=>`${o.keyPrefix}${u}${e}`)):o.keyPrefix?`${o.keyPrefix}${u}${e}`:e,r.t(c,o)};return"string"==typeof e?a.lng=e:a.lngs=e,a.ns=t,a.keyPrefix=n,a}t(){return this.translator&&this.translator.translate(...arguments)}exists(){return this.translator&&this.translator.exists(...arguments)}setDefaultNamespace(e){this.options.defaultNS=e}hasLoadedNamespace(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const n=t.lng||this.resolvedLanguage||this.languages[0],r=!!this.options&&this.options.fallbackLng,a=this.languages[this.languages.length-1];if("cimode"===n.toLowerCase())return!0;const o=(e,t)=>{const n=this.services.backendConnector.state[`${e}|${t}`];return-1===n||2===n};if(t.precheck){const e=t.precheck(this,o);if(void 0!==e)return e}return!(!this.hasResourceBundle(n,e)&&this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages)&&(!o(n,e)||r&&!o(a,e)))}loadNamespaces(e,t){const n=M();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((e=>{this.options.ns.indexOf(e)<0&&this.options.ns.push(e)})),this.loadResources((e=>{n.resolve(),t&&t(e)})),n):(t&&t(),Promise.resolve())}loadLanguages(e,t){const n=M();"string"==typeof e&&(e=[e]);const r=this.options.preload||[],a=e.filter((e=>r.indexOf(e)<0));return a.length?(this.options.preload=r.concat(a),this.loadResources((e=>{n.resolve(),t&&t(e)})),n):(t&&t(),Promise.resolve())}dir(e){if(e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!e)return"rtl";const t=this.services&&this.services.languageUtils||new J(de());return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(t.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){return new he(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1?arguments[1]:void 0)}cloneInstance(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:fe;const n=e.forkResourceStore;n&&delete e.forkResourceStore;const r={...this.options,...e,isClone:!0},a=new he(r);return void 0===e.debug&&void 0===e.prefix||(a.logger=a.logger.clone(e)),["store","services","language"].forEach((e=>{a[e]=this[e]})),a.services={...this.services},a.services.utils={hasLoadedNamespace:a.hasLoadedNamespace.bind(a)},n&&(a.store=new W(this.store.data,r),a.services.resourceStore=a.store),a.translator=new Q(a.services,r),a.translator.on("*",(function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];a.emit(e,...n)})),a.init(r,t),a.translator.options=r,a.translator.backendConnector.services.utils={hasLoadedNamespace:a.hasLoadedNamespace.bind(a)},a}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const ge=he.createInstance();function me(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ve(e){return ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ve(e)}function be(e){var t=function(e,t){if("object"!==ve(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==ve(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===ve(t)?t:String(t)}function ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,be(r.key),r)}}function Se(e,t,n){return t&&ye(e.prototype,t),n&&ye(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}ge.createInstance=he.createInstance,ge.createInstance,ge.dir,ge.init,ge.loadResources,ge.reloadResources,ge.use,ge.changeLanguage,ge.getFixedT,ge.t,ge.exists,ge.setDefaultNamespace,ge.hasLoadedNamespace,ge.loadNamespaces,ge.loadLanguages;var we=[],ke=we.forEach,Ce=we.slice,_e=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,xe={name:"cookie",lookup:function(e){var t;if(e.lookupCookie&&"undefined"!=typeof document){var n=function(e){for(var t="".concat(e,"="),n=document.cookie.split(";"),r=0;r<n.length;r++){for(var a=n[r];" "===a.charAt(0);)a=a.substring(1,a.length);if(0===a.indexOf(t))return a.substring(t.length,a.length)}return null}(e.lookupCookie);n&&(t=n)}return t},cacheUserLanguage:function(e,t){t.lookupCookie&&"undefined"!=typeof document&&function(e,t,n,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};n&&(a.expires=new Date,a.expires.setTime(a.expires.getTime()+60*n*1e3)),r&&(a.domain=r),document.cookie=function(e,t,n){var r=n||{};r.path=r.path||"/";var a=encodeURIComponent(t),o="".concat(e,"=").concat(a);if(r.maxAge>0){var i=r.maxAge-0;if(Number.isNaN(i))throw new Error("maxAge should be a Number");o+="; Max-Age=".concat(Math.floor(i))}if(r.domain){if(!_e.test(r.domain))throw new TypeError("option domain is invalid");o+="; Domain=".concat(r.domain)}if(r.path){if(!_e.test(r.path))throw new TypeError("option path is invalid");o+="; Path=".concat(r.path)}if(r.expires){if("function"!=typeof r.expires.toUTCString)throw new TypeError("option expires is invalid");o+="; Expires=".concat(r.expires.toUTCString())}if(r.httpOnly&&(o+="; HttpOnly"),r.secure&&(o+="; Secure"),r.sameSite)switch("string"==typeof r.sameSite?r.sameSite.toLowerCase():r.sameSite){case!0:o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"strict":o+="; SameSite=Strict";break;case"none":o+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return o}(e,encodeURIComponent(t),a)}(t.lookupCookie,e,t.cookieMinutes,t.cookieDomain,t.cookieOptions)}},Ee={name:"querystring",lookup:function(e){var t;if("undefined"!=typeof window){var n=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(n=window.location.hash.substring(window.location.hash.indexOf("?")));for(var r=n.substring(1).split("&"),a=0;a<r.length;a++){var o=r[a].indexOf("=");o>0&&r[a].substring(0,o)===e.lookupQuerystring&&(t=r[a].substring(o+1))}}return t}},Te=null,Ae=function(){if(null!==Te)return Te;try{Te="undefined"!==window&&null!==window.localStorage;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(e){Te=!1}return Te},Ie={name:"localStorage",lookup:function(e){var t;if(e.lookupLocalStorage&&Ae()){var n=window.localStorage.getItem(e.lookupLocalStorage);n&&(t=n)}return t},cacheUserLanguage:function(e,t){t.lookupLocalStorage&&Ae()&&window.localStorage.setItem(t.lookupLocalStorage,e)}},Ne=null,Re=function(){if(null!==Ne)return Ne;try{Ne="undefined"!==window&&null!==window.sessionStorage;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(e){Ne=!1}return Ne},Le={name:"sessionStorage",lookup:function(e){var t;if(e.lookupSessionStorage&&Re()){var n=window.sessionStorage.getItem(e.lookupSessionStorage);n&&(t=n)}return t},cacheUserLanguage:function(e,t){t.lookupSessionStorage&&Re()&&window.sessionStorage.setItem(t.lookupSessionStorage,e)}},De={name:"navigator",lookup:function(e){var t=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var n=0;n<navigator.languages.length;n++)t.push(navigator.languages[n]);navigator.userLanguage&&t.push(navigator.userLanguage),navigator.language&&t.push(navigator.language)}return t.length>0?t:void 0}},Pe={name:"htmlTag",lookup:function(e){var t,n=e.htmlTag||("undefined"!=typeof document?document.documentElement:null);return n&&"function"==typeof n.getAttribute&&(t=n.getAttribute("lang")),t}},Oe={name:"path",lookup:function(e){var t;if("undefined"!=typeof window){var n=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(n instanceof Array)if("number"==typeof e.lookupFromPathIndex){if("string"!=typeof n[e.lookupFromPathIndex])return;t=n[e.lookupFromPathIndex].replace("/","")}else t=n[0].replace("/","")}return t}},Me={name:"subdomain",lookup:function(e){var t="number"==typeof e.lookupFromSubdomainIndex?e.lookupFromSubdomainIndex+1:1,n="undefined"!=typeof window&&window.location&&window.location.hostname&&window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);if(n)return n[t]}},Be=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};me(this,e),this.type="languageDetector",this.detectors={},this.init(t,n)}return Se(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e||{languageUtils:{}},this.options=function(e){return ke.call(Ce.call(arguments,1),(function(t){if(t)for(var n in t)void 0===e[n]&&(e[n]=t[n])})),e}(t,this.options||{},{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"]}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=n,this.addDetector(xe),this.addDetector(Ee),this.addDetector(Ie),this.addDetector(Le),this.addDetector(De),this.addDetector(Pe),this.addDetector(Oe),this.addDetector(Me)}},{key:"addDetector",value:function(e){this.detectors[e.name]=e}},{key:"detect",value:function(e){var t=this;e||(e=this.options.order);var n=[];return e.forEach((function(e){if(t.detectors[e]){var r=t.detectors[e].lookup(t.options);r&&"string"==typeof r&&(r=[r]),r&&(n=n.concat(r))}})),this.services.languageUtils.getBestMatchFromCodes?n:n.length>0?n[0]:null}},{key:"cacheUserLanguage",value:function(e,t){var n=this;t||(t=this.options.caches),t&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||t.forEach((function(t){n.detectors[t]&&n.detectors[t].cacheUserLanguage(e,n.options)})))}}]),e}();function Fe(e,t,n){return(t=be(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Be.type="languageDetector",__webpack_require__(739),Object.create(null);var ze=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,Ue={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"©","&#169;":"©","&reg;":"®","&#174;":"®","&hellip;":"…","&#8230;":"…","&#x2F;":"/","&#47;":"/"},He=function(e){return Ue[e]};function je(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ve(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?je(Object(n),!0).forEach((function(t){Fe(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):je(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Ke={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:function(e){return e.replace(ze,He)}},$e={type:"3rdParty",init:function(e){!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Ke=Ve(Ve({},Ke),e)}(e.options.react)}};(0,e.createContext)(),Se((function e(){me(this,e),this.usedNamespaces={}}),[{key:"addUsedNamespaces",value:function(e){var t=this;e.forEach((function(e){t.usedNamespaces[e]||(t.usedNamespaces[e]=!0)}))}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]);const Ze={en:{translations:JSON.parse('{"amtFeatures":{"enabled":"enabled","disabled":"disabled","messageTypes":{"success":"success","warning":"warning","error":"error"},"features":{"kvm":"KVM","sol":"SOL"},"messages":{"kvmNotEnabledAndNotPoweredUp":"Power on remote computer and check the KVM enable to connect to KVM","notPoweredUp":"Remote computer is not powered on.","kvmNotEnabled":"Check the KVM enable to connect to KVM","failedKvmFetch":"Unable to fetch KVM features","failedKvmFetchAndNotPoweredUp":"Unable to fetch KVM features and device is not powered on","failedKvmFetchAndFailedPowerFetch":"Unable to fetch KVM features and device power status","kvmNotEnabledAndFailedPowerFetch":"Check the KVM enable to connect to KVM and failed to fetch power status","failedPowerFetch":"Failed to fetch the power status","solNotEnabledAndNotPoweredUp":"Power on remote computer and check the SOL enable to connect to SOL","solNotEnabled":"Check the SOL enable to connect to SOL","failedSolFetch":"Unable to fetch SOL features","failedSolFetchAndNotPoweredUp":"Unable to fetch SOL features and device is not powered on","failedSolFetchAndFailedPowerFetch":"Unable to fetch SOL features and device power status","solNotEnabledAndFailedPowerFetch":"Check the SOL enable to connect to SOL and failed to fetch power status","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"Logout","profile":"Profile"},"pageNotFound":{"title":"404 - Page not found","message":"Oops, we weren\'t able to find the page you requested."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"Login","userName":"username","password":"password","signIn":"Sign In","cancel":"Cancel"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"devices":{"grid":{"Name":"Name","uuids":"UUID","connected":"Connected","deviceName":"Device name","deviceType":"Device type","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"Status","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"}},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"Initiator","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"dashboard":{"header":"AMT Device Management","deviceDetails":"Device details","count":"Count","totalDevices":"Total Devices","connectedDevices":"Connected","disconnectedDevices":"Disconnected"},"cira":{"new":"New","delete":"Delete","edit":"Edit","close":"Close","newCIRAConfig":"New CIRA Configuration","editCIRAConfig":"Edit CIRA Configuration","configName":"Config Name","addressFormat":"MPS Server Address Format","ipv4":"IPV4","ipv6":"IPV6","fqdn":"FQDN","mpsServerAddress":"MPS Server Address","port":"Port","userName":"User Name","password":"Password","commonName":"Cert. Hostname(CN)","mpsRootCetificate":"MPS Root Certificate","create":"Create","save":"Save","mpsRootCertFormat":"Mps root certificate format","autoLoad":"Auto load","manual":"Manual","load":"Load","mpsLoaded":"MPS root certificate successfully loaded","errors":{"commonNameValidation":"Cert. Hostname(CN) is required field and contains letters,numbers and ._- characters.","passwordValidation":"Password is required field should contains atleast one lowercase letter, one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","userNameValidation":"User name is required field and contains letters, numbers and special characters.","portValidation":"Port is required and should be a numeric value between 1024 and 49151","ipv4AddressValidation":"Please enter valid IPV4 Address.","ipv6AddressValidation":"Please enter valid IPV6 Address.","fqdnAddressValidation":"Please enter valid FQDN Address.","configNameValidation":"Config name is required field and contains letters, numbers and special characters.","loadMpsError":"Load the mps root certificate","mpsCertFetchError":"Failed to fetch the certificate from the server. Please try to enter the certificate manually by switching the Mps root certificate format option.","mpsServerMismatchError":"MPS server address does not match with base URL of the application. Please try to enter the certificate manually by switching the Mps root certificate format option."},"grid":{"configName":"Config Name","mpsServer":"MPS server","port":"Port","username":"Username","password":"Password","commonName":"Cert. Hostname(CN)","rootCert":"MPS root Certificate"}},"domain":{"delete":"Delete","new":"New","edit":"Edit","close":"Close","newDomain":"Create Domain","editDomain":"Edit domain details","grid":{"name":"Name","domainSuffix":"Domain Suffix","provisioningCert":"Provisioning Certificate","provisioningCertStorageFormat":"Provisioning Certificate Storage Format","provisioningCertPassword":"Provisioning Certificate Password"},"name":"Name","domainSuffix":"Domain Suffix","provisioningCertStorageFormat":"Provisioning Cert Storage Format","provisioningCert":"Provisioning Cert","provisioningCertPassword":"Provisioning Cert Password","create":"Create","file":"File","browse":"Browse","browseNew":"Browse new file","save":"Save","namePlaceHolder":"Enter domain name","domainSuffixPlaceHolder":"Enter Domain suffix","provisioningCertTextAreaPlaceHolder":"Enter provisioning Cert ","provisioningCertPasswordPlaceHolder":"Enter password","provisioningCertTextPlaceHolder":"Enter file path","text":"Text","certExists":"If you would like to add a new Provisioning certificate browse and select.","error":{"nameValidation":"Name is a required field and contains letters, numbers and special characters.","domainSuffixValidation":"Domain suffix is a required field","provisioningCertStorageFormatValidation":"Provisioning Cert Storage Format is a required field","provisioningCertValidation":"Provisioning cert is a required field","provisioningCertPasswordValidation":"Provisioning Cert Password is required field should contains atleast one lowercase letter,  one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","invalidFileType":"Invalid provisioning certificate type"}},"network":{"new":"New","newNetwork":"New Network configuration","editNetwork":"Edit Network configuration","create":"Create","delete":"Delete","edit":"Edit","save":"Save","grid":{"name":"Name","dhcpEnabled":"DHCP Enabled"},"networkName":"Network Name","dhcpEnabled":"DHCP Enabled","errors":{"networkNameValidation":"Network name is a required field and contains letters, numbers and special characters."}}}')},te:{translations:JSON.parse('{"amtFeatures":{"enabled":"ఎనేబుల్","disabled":"వికలాంగ","messageTypes":{"success":"విజయం","warning":"హెచ్చరిక","error":"లోపం"},"features":{"kvm":"KVM","sol":"సోల్"},"messages":{"kvmNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు KVM ని ప్రారంభించండి","notPoweredUp":"రిమోట్ కంప్యూటర్ ఆన్ చేయబడదు.","kvmNotEnabled":"KVM ప్రారంభించబడలేదు","solNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు SOL ని ప్రారంభించండి","solNotEnabled":"SOL ప్రారంభించబడలేదు","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"లాగౌట్","profile":"ప్రొఫైల్"},"pageNotFound":{"title":"404 - పేజి దొరకలేదు","message":"అయ్యో, మీరు అభ్యర్థించిన పేజీని మేము కనుగొనలేకపోయాము."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"ప్రవేశించండి","userName":"యూజర్పేరు","password":"పాస్వర్డ్","signIn":"సైన్ ఇన్ చేయండి","cancel":"రద్దు చేయండి"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"పేరు","uuids":"UUID లను","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"స్థితి","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},fr:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"Nom","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"statut","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},es:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"nombre","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"estado","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')}};ge.use($e).use(Be).init({resources:Ze,ns:["translations"],defaultNS:"translations",debug:!1,fallbackLng:"en",interpolation:{escapeValue:!1,formatSeparator:","}}).catch((()=>console.info("error occured"))),ge.changeLanguage(navigator.language).catch((()=>console.info("error occurred")));const qe=new URL(window.location.href),We=new URLSearchParams(qe.search),Xe=document.querySelector("#kvm");null!=Xe&&(0,t.s)(Xe).render(e.createElement(R,{autoConnect:!1,deviceId:We.get("deviceId"),mpsServer:We.get("mpsServer")+"/relay",authToken:"authToken",mouseDebounceTime:200,canvasHeight:"100%",canvasWidth:"100%"}))})(),__webpack_exports__})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,