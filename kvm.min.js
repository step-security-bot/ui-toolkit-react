/*! For license information please see kvm.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["ui-toolkit"]=t():e["ui-toolkit"]=t()}(self,(()=>(()=>{var __webpack_modules__={869:module=>{var e;self,e=function(){return(()=>{var __webpack_modules__={487:e=>{var t={utf8:{stringToBytes:function(e){return t.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(t.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t},bytesToString:function(e){for(var t=[],n=0;n<e.length;n++)t.push(String.fromCharCode(e[n]));return t.join("")}}};e.exports=t},12:e=>{var t,n;t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&n.rotl(e,8)|4278255360&n.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=n.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],n=0,r=0;n<e.length;n++,r+=8)t[r>>>5]|=e[n]<<24-r%32;return t},wordsToBytes:function(e){for(var t=[],n=0;n<32*e.length;n+=8)t.push(e[n>>>5]>>>24-n%32&255);return t},bytesToHex:function(e){for(var t=[],n=0;n<e.length;n++)t.push((e[n]>>>4).toString(16)),t.push((15&e[n]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],n=0;n<e.length;n+=2)t.push(parseInt(e.substr(n,2),16));return t},bytesToBase64:function(e){for(var n=[],r=0;r<e.length;r+=3)for(var a=e[r]<<16|e[r+1]<<8|e[r+2],o=0;o<4;o++)8*r+6*o<=8*e.length?n.push(t.charAt(a>>>6*(3-o)&63)):n.push("=");return n.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var n=[],r=0,a=0;r<e.length;a=++r%4)0!=a&&n.push((t.indexOf(e.charAt(r-1))&Math.pow(2,-2*a+8)-1)<<2*a|t.indexOf(e.charAt(r))>>>6-2*a);return n}},e.exports=n},738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},568:(e,t,n)=>{var r,a,o,i,s;r=n(12),a=n(487).utf8,o=n(738),i=n(487).bin,(s=function(e,t){e.constructor==String?e=t&&"binary"===t.encoding?i.stringToBytes(e):a.stringToBytes(e):o(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||e.constructor===Uint8Array||(e=e.toString());for(var n=r.bytesToWords(e),l=8*e.length,u=1732584193,c=-271733879,d=-1732584194,p=271733878,f=0;f<n.length;f++)n[f]=16711935&(n[f]<<8|n[f]>>>24)|4278255360&(n[f]<<24|n[f]>>>8);n[l>>>5]|=128<<l%32,n[14+(l+64>>>9<<4)]=l;var h=s._ff,g=s._gg,v=s._hh,m=s._ii;for(f=0;f<n.length;f+=16){var b=u,y=c,S=d,w=p;u=h(u,c,d,p,n[f+0],7,-680876936),p=h(p,u,c,d,n[f+1],12,-389564586),d=h(d,p,u,c,n[f+2],17,606105819),c=h(c,d,p,u,n[f+3],22,-1044525330),u=h(u,c,d,p,n[f+4],7,-176418897),p=h(p,u,c,d,n[f+5],12,1200080426),d=h(d,p,u,c,n[f+6],17,-1473231341),c=h(c,d,p,u,n[f+7],22,-45705983),u=h(u,c,d,p,n[f+8],7,1770035416),p=h(p,u,c,d,n[f+9],12,-1958414417),d=h(d,p,u,c,n[f+10],17,-42063),c=h(c,d,p,u,n[f+11],22,-1990404162),u=h(u,c,d,p,n[f+12],7,1804603682),p=h(p,u,c,d,n[f+13],12,-40341101),d=h(d,p,u,c,n[f+14],17,-1502002290),u=g(u,c=h(c,d,p,u,n[f+15],22,1236535329),d,p,n[f+1],5,-165796510),p=g(p,u,c,d,n[f+6],9,-1069501632),d=g(d,p,u,c,n[f+11],14,643717713),c=g(c,d,p,u,n[f+0],20,-373897302),u=g(u,c,d,p,n[f+5],5,-701558691),p=g(p,u,c,d,n[f+10],9,38016083),d=g(d,p,u,c,n[f+15],14,-660478335),c=g(c,d,p,u,n[f+4],20,-405537848),u=g(u,c,d,p,n[f+9],5,568446438),p=g(p,u,c,d,n[f+14],9,-1019803690),d=g(d,p,u,c,n[f+3],14,-187363961),c=g(c,d,p,u,n[f+8],20,1163531501),u=g(u,c,d,p,n[f+13],5,-1444681467),p=g(p,u,c,d,n[f+2],9,-51403784),d=g(d,p,u,c,n[f+7],14,1735328473),u=v(u,c=g(c,d,p,u,n[f+12],20,-1926607734),d,p,n[f+5],4,-378558),p=v(p,u,c,d,n[f+8],11,-2022574463),d=v(d,p,u,c,n[f+11],16,1839030562),c=v(c,d,p,u,n[f+14],23,-35309556),u=v(u,c,d,p,n[f+1],4,-1530992060),p=v(p,u,c,d,n[f+4],11,1272893353),d=v(d,p,u,c,n[f+7],16,-155497632),c=v(c,d,p,u,n[f+10],23,-1094730640),u=v(u,c,d,p,n[f+13],4,681279174),p=v(p,u,c,d,n[f+0],11,-358537222),d=v(d,p,u,c,n[f+3],16,-722521979),c=v(c,d,p,u,n[f+6],23,76029189),u=v(u,c,d,p,n[f+9],4,-640364487),p=v(p,u,c,d,n[f+12],11,-421815835),d=v(d,p,u,c,n[f+15],16,530742520),u=m(u,c=v(c,d,p,u,n[f+2],23,-995338651),d,p,n[f+0],6,-198630844),p=m(p,u,c,d,n[f+7],10,1126891415),d=m(d,p,u,c,n[f+14],15,-1416354905),c=m(c,d,p,u,n[f+5],21,-57434055),u=m(u,c,d,p,n[f+12],6,1700485571),p=m(p,u,c,d,n[f+3],10,-1894986606),d=m(d,p,u,c,n[f+10],15,-1051523),c=m(c,d,p,u,n[f+1],21,-2054922799),u=m(u,c,d,p,n[f+8],6,1873313359),p=m(p,u,c,d,n[f+15],10,-30611744),d=m(d,p,u,c,n[f+6],15,-1560198380),c=m(c,d,p,u,n[f+13],21,1309151649),u=m(u,c,d,p,n[f+4],6,-145523070),p=m(p,u,c,d,n[f+11],10,-1120210379),d=m(d,p,u,c,n[f+2],15,718787259),c=m(c,d,p,u,n[f+9],21,-343485551),u=u+b>>>0,c=c+y>>>0,d=d+S>>>0,p=p+w>>>0}return r.endian([u,c,d,p])})._ff=function(e,t,n,r,a,o,i){var s=e+(t&n|~t&r)+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._gg=function(e,t,n,r,a,o,i){var s=e+(t&r|n&~r)+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._hh=function(e,t,n,r,a,o,i){var s=e+(t^n^r)+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._ii=function(e,t,n,r,a,o,i){var s=e+(n^(t|~r))+(a>>>0)+i;return(s<<o|s>>>32-o)+t},s._blocksize=16,s._digestsize=16,e.exports=function(e,t){if(null==e)throw new Error("Illegal argument "+e);var n=r.wordsToBytes(s(e,t));return t&&t.asBytes?n:t&&t.asString?i.bytesToString(n):r.bytesToHex(n)}},166:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(46),a=n(565),o=n(611),i=n(305),s=n.n(i);class l extends r.H{constructor(e,t){super(),this.protocol=2,this.inflate=s().inflateInit(15),this.bpp=1,this.state=0,this.focusMode=0,this.useZRLE=!0,this.frameRateDelay=2,this.canvasCtx=t,this.sparecache={},this.buttonmask=0,this.canvasControl=this.canvasCtx.canvas,this.lastMouseMoveTime=(new Date).getTime(),this.logger=e,this.setDeskFocus=(e,t)=>{},this.getDeskFocus=e=>{}}processData(e){this.onProcessData(e)}onStateChange(e){this.logger.verbose(`state change in AMTDesktop: ${e}`),0===e&&(this.canvasCtx.fillStyle="#FFFFFF",this.canvasCtx.fillRect(0,0,this.canvasCtx.canvas.width,this.canvasCtx.canvas.width))}start(){this.logger.verbose("Starting desktop here"),this.state=0,this.inflate.inflateReset(),this.onKvmDataPending=[],this.onKvmDataAck=-1,this.kvmDataSupported=!1;for(const e in this.sparecache)delete this.sparecache[e]}onSendKvmData(e){!0!==this.onKvmDataAck?this.onKvmDataPending.push(e):((0,o.f)(this.urlvars)&&(0,o.f)(this.urlvars.kvmdatatrace)&&console.log(`KVM-Send (${e.length}) data`),e="\0KvmDataChannel\0"+e,this.onSend(String.fromCharCode(6,0,0,0)+a.r.IntToStr(e.length)+e),this.onKvmDataAck=!1)}}},59:(e,t,n)=>{"use strict";n.d(t,{N:()=>a});var r=n(503);class a extends r.K{constructor(e,t,n,r,a,o,i,s,l,u,c){super(e,t,n,r,a,o,i,s,l,u,c)}}},503:(e,t,n)=>{"use strict";n.d(t,{K:()=>l,b:()=>r});var r,a=n(565),o=n(568),i=n.n(o),s=n(611);!function(e){e[e.SOL=1]="SOL",e[e.KVM=2]="KVM",e[e.IDER=3]="IDER"}(r||(r={}));class l{constructor(e,t,n,r,a,o,i,s,l,u,c){this.fileReader=n,this.randomNonceChars="abcdef0123456789",this.host=r,this.port=a,this.user=o,this.pass=i,this.tls=s,this.tlsv1only=l,this.protocol=t,this.RedirectStartSol=String.fromCharCode(16,0,0,0,83,79,76,32),this.RedirectStartKvm=String.fromCharCode(16,1,0,0,75,86,77,82),this.RedirectStartIder=String.fromCharCode(16,0,0,0,73,68,69,82),this.urlvars={},this.server=c,this.amtAccumulator="",this.authUri="",this.logger=e,this.authToken=u}getWsLocation(){return this.isBrowser()&&!(0,s.f)(this.server)?`${window.location.protocol.replace("http","ws")}//\n      ${window.location.host}\n      ${window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/"))}\n      /webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`:`${String(this.server)}/webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`}isBrowser(){try{const e="undefined"!=typeof window;return e&&this.logger.debug("!!!!!BROWSER!!!!!"),e}catch(e){return!1}}start(e){this.connectState=0,this.socket=new e(this.getWsLocation(),this.authToken),this.socket.onopen=this.onSocketConnected.bind(this),this.socket.onmessage=this.onMessage.bind(this),this.socket.onclose=this.onSocketClosed.bind(this),(0,s.f)(this.fileReader)&&(0,s.f)(this.fileReader.readAsBinaryString)?this.fileReader.onload=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsBinaryString(new Blob([this.fileReaderAcc.shift()]))}).bind(this):(0,s.f)(this.fileReader)&&(0,s.f)(this.fileReader.readAsArrayBuffer)&&(this.fileReader.onloadend=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsArrayBuffer(this.fileReaderAcc.shift())}).bind(this)),this.logger.verbose("Connecting to websocket"),this.onStateChange(1)}onSocketConnected(){(0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.redirtrace)&&console.log("REDIR-CONNECT"),this.onStateChange(2),this.logger.verbose(`Connected to websocket server. With protocol ${this.protocol} (2 = KVM)`),this.logger.info(`Start Redirect Session for protocol. ${this.protocol}`),this.protocol===r.SOL&&this.socketSend(this.RedirectStartSol),this.protocol===r.KVM&&this.socketSend(this.RedirectStartKvm),this.protocol===r.IDER&&this.socketSend(this.RedirectStartIder)}onMessage(e){try{if(this.inDataCount++,"object"==typeof e.data){if(this.fileReaderInUse)return void this.fileReaderAcc.push(e.data);if(null!=this.fileReader.readAsBinaryString)this.fileReaderInUse=!0,this.fileReader.readAsBinaryString(new Blob([e.data]));else if(null!=this.fileReader.readAsArrayBuffer)this.fileReaderInUse=!0,this.fileReader.readAsArrayBuffer(e.data);else{let t="";const n=new Uint8Array(e.data),r=n.byteLength;for(let e=0;e<r;e++)t+=String.fromCharCode(n[e]);this.onSocketData(t)}}else this.onSocketData(e.data)}catch(e){this.logger.error(e),this.stop(),this.onError()}}onSocketData(e){if((0,s.f)(e)&&-1!==this.connectState){if("object"==typeof e){let t="";const n=new Uint8Array(e),r=n.byteLength;for(let e=0;e<r;e++)t+=String.fromCharCode(n[e]);e=t}else if("string"!=typeof e)return;if((this.protocol===r.KVM||this.protocol===r.IDER)&&1===this.connectState)return this.onProcessData(e);for(this.amtAccumulator+=e;this.amtAccumulator.length>=1;){let e=0;switch(this.amtAccumulator.charCodeAt(0)){case 17:if(this.logger.verbose(`Start Redirection Session reply received for  ${this.protocol}`),this.amtAccumulator.length<4)return;switch(this.amtAccumulator.charCodeAt(1)){case 0:{if(this.logger.verbose("Session status success. Start handshake"),this.amtAccumulator.length<13)return;const t=this.amtAccumulator.charCodeAt(12);if(this.amtAccumulator.length<13+t)return;this.logger.verbose("Query for available authentication"),this.socketSend(String.fromCharCode(19,0,0,0,0,0,0,0,0)),e=13+t;break}default:this.stop()}break;case 20:{if(this.logger.verbose("Available Authentications reply received."),this.amtAccumulator.length<9)return;const t=a.r.ReadIntX(this.amtAccumulator,5);if(this.amtAccumulator.length<9+t)return;const n=this.amtAccumulator.charCodeAt(1),r=this.amtAccumulator.charCodeAt(4),o=[];for(let e=0;e<t;e++)o.push(this.amtAccumulator.charCodeAt(9+e));const i=this.amtAccumulator.substring(9,9+t);if(e=9+t,0===r)(0,s.f)(o.includes(4))?(this.logger.verbose("Good Digest Auth (With cnonce and all)"),this.socketSend(String.fromCharCode(19,0,0,0,4)+a.r.IntToStrX(this.user.length+this.authUri.length+8)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0,0))):(0,s.f)(o.includes(3))?(this.logger.warn("Bad Digest Auth"),this.socketSend(String.fromCharCode(19,0,0,0,3)+a.r.IntToStrX(this.user.length+this.authUri.length+7)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0))):(0,s.f)(o.includes(1))?(this.logger.verbose("Basic Auth"),this.socketSend(String.fromCharCode(19,0,0,0,1)+a.r.IntToStrX(this.user.length+this.pass.length+2)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(this.pass.length)+this.pass)):(this.logger.error("Auth Type not recognized. Stopping."),this.stop());else if(3!==r&&4!==r||1!==n)if(0===n){if(1===this.protocol){const e=1e4,t=100,n=0,r=1e4,o=100,i=0;this.socketSend(String.fromCharCode(32,0,0,0)+a.r.IntToStrX(this.amtSequence++)+a.r.ShortToStrX(e)+a.r.ShortToStrX(t)+a.r.ShortToStrX(n)+a.r.ShortToStrX(r)+a.r.ShortToStrX(o)+a.r.ShortToStrX(i)+a.r.IntToStrX(0))}2===this.protocol&&this.socketSend(String.fromCharCode(64,0,0,0,0,0,0,0)),3===this.protocol&&(this.connectState=1,this.onStateChange(3))}else this.stop();else{let e=0;const t=i.charCodeAt(e),n=i.substring(e+1,e+1+t);e+=t+1;const o=i.charCodeAt(e),s=i.substring(e+1,e+1+o);e+=o+1;let l=0,u=null;const c=this.generateRandomNonce(32),d="00000002";let p="";4===r&&(l=i.charCodeAt(e),u=i.substring(e+1,e+1+l),e+=l+1,p=`${d}:${c}:${String(u)} :`);const f=this.hex_md5(this.hex_md5(this.user+":"+n+":"+this.pass)+":"+s+":"+p+this.hex_md5("POST:"+this.authUri));let h=this.user.length+n.length+s.length+this.authUri.length+c.length+d.length+f.length+7;4===r&&(h+=parseInt(u.length)+1);let g=String.fromCharCode(19,0,0,0,r)+a.r.IntToStrX(h)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(n.length)+n+String.fromCharCode(s.length)+s+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(c.length)+c+String.fromCharCode(d.length)+d+String.fromCharCode(f.length)+f;4===r&&(g=String(g)+(String.fromCharCode(u.length)+String(u))),this.socketSend(g)}break}case 33:if(this.amtAccumulator.length<23)break;this.logger.verbose("Response to settings"),e=23,this.socketSend(String.fromCharCode(39,0,0,0)+a.r.IntToStrX(this.amtSequence++)+String.fromCharCode(0,0,27,0,0,0)),1===this.protocol&&(this.amtKeepAliveTimer=setInterval(this.sendAmtKeepAlive.bind(this),2e3)),this.connectState=1,this.onStateChange(3);break;case 41:if(this.amtAccumulator.length<10)break;this.logger.verbose("Serial Settings"),e=10;break;case 42:{if(this.amtAccumulator.length<10)break;this.logger.verbose("Incoming display data");const t=10+((255&this.amtAccumulator.charCodeAt(9))<<8)+(255&this.amtAccumulator.charCodeAt(8));if(this.amtAccumulator.length<t)break;this.onProcessData(this.amtAccumulator.substring(10,t)),e=t;break}case 43:if(this.amtAccumulator.length<8)break;this.logger.verbose("Keep Alve message"),e=8;break;case 65:if(this.amtAccumulator.length<8)break;this.logger.verbose("KVM traffic. Call onStart handler. And forward rest of acc directly."),this.connectState=1,this.onStart(),this.amtAccumulator.length>8&&this.onProcessData(this.amtAccumulator.substring(8)),e=this.amtAccumulator.length;break;default:return this.logger.error(`Unknown Intel AMT command:  ${this.amtAccumulator.charCodeAt(0)}  acclen=${this.amtAccumulator.length}`),void this.stop()}if(0===e)return;this.amtAccumulator=this.amtAccumulator.substring(e)}}}hex_md5(e){return this.logger.verbose("MD5 the string"),i()(e)}socketSend(e){(0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.redirtrace)&&this.logger.verbose(`REDIR-SEND(${e.length}): ${a.r.rstr2hex(e)}`);try{if(null!=this.socket&&1===this.socket.readyState){const t=new Uint8Array(e.length);this.logger.verbose(`Redir Send( ${e.length}): ${a.r.rstr2hex(e)}`);for(let n=0;n<e.length;++n)t[n]=e.charCodeAt(n);this.socket.send(t.buffer)}}catch(e){this.logger.error(`Socket send error: ${String(e)}`)}}send(e){this.logger.verbose("Send called "+e),null!=this.socket&&1===this.connectState&&(this.protocol===r.SOL?this.socketSend(String.fromCharCode(40,0,0,0)+a.r.IntToStrX(this.amtSequence++)+a.r.ShortToStrX(e.length)+e):this.socketSend(e))}sendAmtKeepAlive(){null!=this.socket&&this.socketSend(String.fromCharCode(43,0,0,0)+a.r.IntToStrX(this.amtSequence++))}generateRandomNonce(e){let t="";for(let n=0;n<e;n++)t+=this.randomNonceChars.charAt(Math.floor(Math.random()*this.randomNonceChars.length));return t}onSocketClosed(e){(0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.redirtrace)&&console.log("REDIR-CLOSED"),this.logger.warn("Redir Socket Closed"),this.stop()}onStateChange(e){console.info("onstatechange",e),this.state!==e&&(this.state=e,this.onNewState(this.state),null!=this.onStateChanged&&this.onStateChanged(this,this.state))}stop(){this.logger.warn("Stop called on Redirector. Change state to 0 and close Socket."),this.onStateChange(0),this.connectState=-1,this.amtAccumulator="",null!=this.socket&&(this.socket.close(),this.socket=null),null!=this.amtKeepAliveTimer&&(clearInterval(this.amtKeepAliveTimer),this.amtKeepAliveTimer=null)}}},277:(e,t,n)=>{"use strict";n.d(t,{r:()=>r});class r{constructor(){this.terminalEmulation=1,this.fxEmulation=0,this.fxLineBreak=0,this.AsciiToUnicode=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,171,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.AsciiToUnicodeIntel=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,174,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.StateChange=e=>{},this.TermSendKeys=e=>this.onSend(e)}}},237:(e,t,n)=>{"use strict";n.d(t,{k:()=>a});var r=n(201);class a{constructor(e){this.minLevel=e}log(e,t){switch(e){case r.i.VERBOSE:this.verbose(t);break;case r.i.INFO:this.info(t);break;case r.i.DEBUG:this.debug(t);break;case r.i.WARNING:this.warn(t);break;case r.i.ERROR:this.error(t)}}debug(e){this.minLevel>=r.i.DEBUG&&console.debug(e)}info(e){this.minLevel>=r.i.INFO&&console.info(e)}error(e){this.minLevel>=r.i.ERROR&&console.error(e)}warn(e){this.minLevel>=r.i.WARNING&&console.warn(e)}verbose(e){this.minLevel>=r.i.VERBOSE&&console.log(e)}}},565:(e,t,n)=>{"use strict";n.d(t,{r:()=>a});var r=n(611);const a={ReadShort:(e,t)=>(e.charCodeAt(t)<<8)+e.charCodeAt(t+1),ReadShortX:(e,t)=>(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ReadInt:(e,t)=>16777216*e.charCodeAt(t)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadSInt:(e,t)=>(e.charCodeAt(t)<<24)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadIntX:(e,t)=>16777216*e.charCodeAt(t+3)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ShortToStr:e=>String.fromCharCode(e>>8&255,255&e),ShortToStrX:e=>String.fromCharCode(255&e,e>>8&255),IntToStr:e=>String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e),IntToStrX:e=>String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255),SplitArray:e=>e.split(","),Clone:e=>JSON.parse(JSON.stringify(e)),EscapeHtml:e=>"string"==typeof e?e.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"boolean"==typeof e||"number"==typeof e?e:void 0,ArrayElementMove(e,t,n){e.splice(n,0,e.splice(t,1)[0])},ObjectToStringEx(e,t){let n="";if(0!==e&&(!(0,r.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const r in e)n=n+"<br />"+String(this.gap(t))+"Item #"+String(r)+": "+String(this.ObjectToStringEx(e[r],t+1));else if(e instanceof Object)for(const r in e)n=n+"<br />"+String(this.gap(t))+String(r)+" = "+String(this.ObjectToStringEx(e[r],t+1));else n+=String(this.EscapeHtml(e));return n},ObjectToStringEx2(e,t){let n="";if(0!==e&&(!(0,r.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const r in e)n=n+"\r\n"+String(this.gap2(t))+"Item #"+String(r)+": "+String(this.ObjectToStringEx2(e[r],t+1));else if(e instanceof Object)for(const r in e)n=n+"\r\n"+String(this.gap2(t))+String(r)+" = "+String(this.ObjectToStringEx2(e[r],t+1));else n+=String(this.EscapeHtml(e));return n},gap(e){let t="";for(let n=0;n<4*e;n++)t+="&nbsp;";return t},gap2(e){let t="";for(let n=0;n<4*e;n++)t+=" ";return t},ObjectToString(e){return this.ObjectToStringEx(e,0)},ObjectToString2(e){return this.ObjectToStringEx2(e,0)},char2hex:e=>(e+256).toString(16).substr(-2).toUpperCase(),rstr2hex(e){let t,n="";for(t=0;t<e.length;t++)n+=String(this.char2hex(e.charCodeAt(t)));return n},encode_utf8:e=>unescape(encodeURIComponent(e)),decode_utf8:e=>decodeURIComponent(escape(e)),data2blob(e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return new Blob([new Uint8Array(t)])},random:e=>Math.floor(Math.random()*e),trademarks:e=>e.replace(/\(R\)/g,"&reg;").replace(/\(TM\)/g,"&trade;")}},46:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});class r{processData(e){}onStateChange(e){}start(){}onSendKvmData(e){}}},784:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var r=n(989),a=n(611);class o{constructor(e,t,n){this.acc="",this.stateProcessorFac=new r.v(t,n,this.updateRFBState.bind(this)),this.parent=n,this.logger=e}processData(e){if(!(0,a.f)(e))return;this.acc+=e;let t=0;for(this.logger.verbose(`Process Data ACC length:  ${this.acc.length}`);this.acc.length>0;){const e=this.stateProcessorFac.getProcessor(this.parent.state),n=this.parent.state;if(t=e.processState(this.acc),this.logger.verbose(`State  ${n}  Processed. cmdSize returned ${t}`),0===t)return;this.acc=this.acc.substring(t),this.logger.verbose(`remaining acc  ${this.acc.length} command size: ${t} new parent state: ${this.parent.state}`)}}updateRFBState(e){this.parent.state=e}}},679:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(644);class a{constructor(e){this.parent=e}Decode(e,t,n,a,o,i,s,l){const u=e.charCodeAt(t++);let c,d,p;const f={};let h,g=0,v=0;if(0===u){for(this.parent.logger.verbose("Raw encoding"),h=0;h<s;h++)r.j.setPixel(this.parent,e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),h);r.j.putImage(this.parent,n,a)}else if(1===u){d=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),this.parent.canvasCtx.fillStyle="rgb("+(1===this.parent.bpp?`${224&d}, ${(28&d)<<3}, ${r.j.fixColor((3&d)<<6)}`:`${d>>8&248}, ${d>>3&252},${(31&d)<<3}`)+")",this.parent.logger.verbose("fillstyle: "+this.parent.canvasCtx.fillStyle);const s=r.j.rotX(this.parent,n,a);a=r.j.rotY(this.parent,n,a),n=s,this.parent.canvasCtx.fillRect(n,a,o,i)}else if(u>1&&u<17){this.parent.logger.verbose("Read the packed palette");let o=4,i=15;for(h=0;h<u;h++)f[h]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(2===u?(o=1,i=1):u<=4&&(o=2,i=3);g<s&&t<e.length;)for(d=e.charCodeAt(t++),h=8-o;h>=0;h-=o)r.j.setPixel(this.parent,f[d>>h&i],g++);r.j.putImage(this.parent,n,a)}else if(128===u){for(this.parent.logger.verbose("RLE encoded tile");g<s&&t<e.length;){d=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),v=1;do{v+=p=e.charCodeAt(t++)}while(255===p);for(;--v>=0;)r.j.setPixel(this.parent,d,g++)}r.j.putImage(this.parent,n,a)}else if(u>129){for(this.parent.logger.verbose("Read the RLE palette"),h=0;h<u-128;h++)f[h]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(this.parent.logger.verbose("Decode RLE on palette");g<s&&t<e.length;){if(v=1,c=e.charCodeAt(t++),d=f[c%128],c>127)do{v+=p=e.charCodeAt(t++)}while(255===p);for(;--v>=0;)r.j.setPixel(this.parent,d,g++)}r.j.putImage(this.parent,n,a)}}}},646:(e,t,n)=>{"use strict";n.d(t,{$:()=>r.$,X:()=>a.X});var r=n(784),a=n(679)},663:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>r}),function(e){e[e.VERBOSE=5]="VERBOSE",e[e.INFO=4]="INFO",e[e.DEBUG=3]="DEBUG",e[e.WARNING=2]="WARNING",e[e.ERROR=1]="ERROR"}(r||(r={}))},201:(e,t,n)=>{"use strict";n.d(t,{i:()=>r.i});var r=n(663)},725:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(565),a=n(8);class o{constructor(e,t,n,r){this.wsSocket=e,this.parent=t,this.rleDecoder=n,this.updateRFBState=r}processState(e){let t=0;if(e.length>=12){const n=r.r.ReadShort(e,0),o=r.r.ReadShort(e,2),i=r.r.ReadShort(e,4),s=r.r.ReadShort(e,6),l=i*s,u=r.r.ReadInt(e,8);if(u<17){if(i<1||i>64||s<1||s>64)throw this.parent.logger.error(`Invalid tile size (${i},${s}), disconnecting.`),new Error("Invalid tile size");if(this.parent.sparew!==i||this.parent.spareh!==s){this.parent.sparew=this.parent.sparew2=i,this.parent.spareh=this.parent.spareh2=s,1!==this.parent.rotation&&3!==this.parent.rotation||(this.parent.sparew2=s,this.parent.spareh2=i);const e=`${this.parent.sparew2}x${this.parent.spareh2}`;this.parent.spare=this.parent.sparecache[e],(0,a.fQ)(this.parent.spare)||(this.parent.sparecache[e]=this.parent.spare=this.parent.canvasCtx.createImageData(this.parent.sparew2,this.parent.spareh2))}}if(4294967073===u)this.parent.logger.verbose("Desktop size"),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=i,this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=s,this.wsSocket.send(String.fromCharCode(3,0,0,0,0,0)+r.r.ShortToStr(this.parent.width)+r.r.ShortToStr(this.parent.height)),t=12,null!=this.parent.onScreenSizeChange&&this.parent.onScreenSizeChange(this.parent.ScreenWidth,this.parent.ScreenHeight);else if(0===u){let r=12;const i=12+l*this.parent.bpp;if(e.length<i)return 0;t=i;for(let t=0;t<l;t++)a.jw.setPixel(this.parent,e.charCodeAt(r++)+(2===this.parent.bpp?e.charCodeAt(r++)<<8:0),t);a.jw.putImage(this.parent,n,o)}else{if(16!==u)throw this.parent.logger.error(`Unknown Encoding: ${u} , HEX: ${r.r.rstr2hex(e)}`),new Error(`Unknown Encoding: ${u}`);{if(e.length<16)return 0;const a=r.r.ReadInt(e,12);if(e.length<16+a)return 0;const u=16,c=5,d=0;if(a>5&&0===e.charCodeAt(u)&&r.r.ReadShortX(e,u+1)===a-c)this.rleDecoder.Decode(e,u+5,n,o,i,s,l,a);else{const t=e.substring(u,u+a-d),r=this.parent.inflate.inflate(t);if(!(r.length>0))throw this.parent.logger.error("Invalid deflate data."),new Error("invalid deflate data");this.rleDecoder.Decode(r,0,n,o,i,s,l,r.length)}t=16+a}}if(100==--this.parent.state){this.parent.logger.debug("Frame completed. Update state and request new frame"),this.updateRFBState(4);const e=()=>a.Xn.sendRefresh(this.parent,this.wsSocket);0===this.parent.frameRateDelay?a.Xn.sendRefresh(this.parent,this.wsSocket):setTimeout(e,this.parent.frameRateDelay)}}return t}}},70:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(565);class a{constructor(e,t,n){this.wsSocket=e,this.serverCutTextHandler=t,this.updateRFBState=n}processState(e){let t=0,n=0;switch(e.charCodeAt(0)){case 0:if(e.length<4)return 0;this.updateRFBState(100+r.r.ReadShort(e,2)),t=4;break;case 2:t=1;break;case 3:if(e.length<8)return 0;if(n=r.r.ReadInt(e,4)+8,e.length<n)return 0;t=this.serverCutTextHandler.handleServerCutText(e)}return t}}},212:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});class r{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=12?(t=12,this.updateRFBState(1),this.wsSocket.send("RFB 003.008\n"),t):0}}},26:(e,t,n)=>{"use strict";n.d(t,{l:()=>r});class r{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=1?(t=e.charCodeAt(0)+1,this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(2),t):0}}},724:(e,t,n)=>{"use strict";n.d(t,{m:()=>a});var r=n(565);class a{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;if(e.length>=4){if(t=4,0!==r.r.ReadInt(e,0))throw new Error("Error. Stopping. Security response not None.");return this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(3),t}return 0}}},256:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(565),a=n(611);class o{constructor(e,t){this.wsSocket=e,this.parent=t}handleServerCutText(e){if(e.length<8)return 0;const t=r.r.ReadInt(e,4)+8;if(e.length<t)return 0;if(null!=this.parent.onKvmData){const n=e.substring(8,t);n.length>=16&&"\0KvmDataChannel"===n.substring(0,15)&&(this.parent.kvmDataSupported||(this.parent.kvmDataSupported=!0,console.log("KVM Data Channel Supported.")),(-1===this.parent.onKvmDataAck&&16===n.length||0!==n.charCodeAt(15))&&(this.parent.onKvmDataAck=!0),(0,a.f)(this.parent.urlvars)&&(0,a.f)(this.parent.urlvars.kvmdatatrace)&&console.log(`KVM-Recv((${n.length-16})):  ${n.substring(16)}`),n.length>16&&this.parent.onKvmData(n.substring(16)),!0===this.parent.onKvmDataAck&&this.parent.onKvmDataPending.length>0&&this.wsSocket.onSendKvmData(this.parent.onKvmDataPending.shift()))}return t}}},946:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var r=n(565),a=n(173);class o{constructor(e,t,n){this.wsSocket=e,this.parent=t,this.updateRFBState=n}processState(e){let t=0;if(e.length>=24){this.parent.rotation=0;const n=r.r.ReadInt(e,20);if(e.length<24+n)return 0;t=24+n,null!=this.parent.updateScreenDimensions&&this.parent.updateScreenDimensions(r.r.ReadShort(e,0),r.r.ReadShort(e,2)),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=r.r.ReadShort(e,0),this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=r.r.ReadShort(e,2);let o="";return this.parent.useZRLE&&(o+=r.r.IntToStr(16)),o+=r.r.IntToStr(0),o+=r.r.IntToStr(1092),this.parent.logger.verbose("Send supported encodings"),this.wsSocket.send(String.fromCharCode(2,0)+r.r.ShortToStr(o.length/4+1)+o+r.r.IntToStr(-223)),1===this.parent.bpp&&this.wsSocket.send(String.fromCharCode(0,0,0,0,8,8,0,1)+r.r.ShortToStr(7)+r.r.ShortToStr(7)+r.r.ShortToStr(3)+String.fromCharCode(5,2,0,0,0,0)),this.updateRFBState(4),this.parent.onStateChange(3),this.parent.logger.info("Start new frame."),a.X.sendRefresh(this.parent,this.wsSocket),this.parent.oldMouseX=-1,t}return 0}}},389:(e,t,n)=>{"use strict";n.d(t,{Cu:()=>l.C,Ut:()=>o.U,ez:()=>r.e,ll:()=>i.l,mC:()=>s.m,wW:()=>a.w});var r=n(725),a=n(212),o=n(70),i=n(26),s=n(724),l=n(946)},989:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(389),a=n(256),o=n(679);class i{constructor(e,t,n){this.stateProcessors={},this.stateProcessors[0]=new r.wW(e,n),this.stateProcessors[1]=new r.ll(e,n),this.stateProcessors[2]=new r.mC(e,n),this.stateProcessors[3]=new r.Cu(e,t,n);const i=new a.I(e,t);this.stateProcessors[4]=new r.Ut(e,i,n),this.stateProcessors["100plus"]=new r.ez(e,t,new o.X(t),n)}getProcessor(e){return e<=100?this.stateProcessors[e]:this.stateProcessors["100plus"]}}},155:(e,t,n)=>{"use strict";n.d(t,{Q:()=>r});class r{constructor(e){this.processData=e=>{null!=this.terminal.capture&&(this.terminal.capture=String(this.terminal.capture)+e);let t="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);"J"===e[n]?this.clearTerminal():t+=0!=(128&r)?String.fromCharCode(this.terminal.AsciiToUnicode[127&r]):`${e[n]}`}this.processDataToXterm(t)},this.terminal=e}}},38:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(923),a=n(611);const o={convertAMTKeyCode:e=>(0,a.f)(e.code.startsWith("Key"))&&4===e.code.length?e.code.charCodeAt(3)+(!1===e.shiftKey?32:0):(0,a.f)(e.code.startsWith("Digit"))&&6===e.code.length?e.code.charCodeAt(5):(0,a.f)(e.code.startsWith("Numpad"))&&7===e.code.length?e.code.charCodeAt(6):r.Z[e.code]}},923:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r={Pause:19,CapsLock:20,Space:32,Quote:39,Minus:45,NumpadMultiply:42,NumpadAdd:43,PrintScreen:44,Comma:44,NumpadSubtract:45,NumpadDecimal:46,Period:46,Slash:47,NumpadDivide:47,Semicolon:59,Equal:61,OSLeft:91,BracketLeft:91,OSRight:91,Backslash:92,BracketRight:93,ContextMenu:93,Backquote:96,NumLock:144,ScrollLock:145,Backspace:65288,Tab:65289,Enter:65293,NumpadEnter:65293,Escape:65307,Delete:65535,Home:65360,PageUp:65365,PageDown:65366,ArrowLeft:65361,ArrowUp:65362,ArrowRight:65363,ArrowDown:65364,End:65367,Insert:65379,F1:65470,F2:65471,F3:65472,F4:65473,F5:65474,F6:65475,F7:65476,F8:65477,F9:65478,F10:65479,F11:65480,F12:65481,ShiftLeft:65505,ShiftRight:65506,ControlLeft:65507,ControlRight:65508,AltLeft:65513,AltRight:65514,MetaLeft:65511,MetaRight:65512}},173:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(565),a=n(611);const o={sendRefresh(e,t){if(!e.holding)if(e.focusMode>0){const n=2*e.focusMode;t.send(String.fromCharCode(3,1)+r.r.ShortToStr(Math.max(Math.min(e.oldMouseX,e.lastMouseX)-e.focusMode,0))+r.r.ShortToStr(Math.max(Math.min(e.oldMouseY,e.lastMouseY)-e.focusMode,0))+r.r.ShortToStr(n+Math.abs(e.oldMouseX-e.lastMouseX))+r.r.ShortToStr(n+Math.abs(e.oldMouseY-e.lastMouseY))),e.oldMouseX=e.lastMouseX,e.oldMouseY=e.lastMouseY}else t.send(String.fromCharCode(3,1,0,0,0,0)+r.r.ShortToStr(e.rwidth)+r.r.ShortToStr(e.rheight))},sendKey(e,t,n){if("object"==typeof t)for(const n in t)this.sendKey(e,t[n][0],t[n][1]);else e.send(String.fromCharCode(4,n,0,0)+r.r.IntToStr(t))},sendKvmData(e,t,n){!0!==e.onKvmDataAck?e.onKvmDataPending.push(n):((0,a.f)(e.urlvars)&&(0,a.f)(e.urlvars.kvmdatatrace)&&console.log(`KVM-Send(${String(n.length)}): ${String(n)}`),n="\0KvmDataChannel\0"+String(n),t.send(`${String.fromCharCode(6,0,0,0)}${r.r.IntToStr(n.length)}${String(n)}`),e.onKvmDataAck=!1)},sendKeepAlive(e,t){e.lastKeepAlive<Date.now()-5e3&&(e.lastKeepAlive=Date.now(),t.send(String.fromCharCode(6,0,0,0)+r.r.IntToStr(16)+"\0KvmDataChannel\0"))},sendCtrlAltDelMsg(e){this.sendCad(e)},sendCad(e){this.sendKey(e,65507,1),this.sendKey(e,65513,1),this.sendKey(e,65535,1),this.sendKey(e,65535,0),this.sendKey(e,65513,0),this.sendKey(e,65507,0)}}},644:(e,t,n)=>{"use strict";n.d(t,{j:()=>r});const r={putImage(e,t,n){if(e.holding)return;const a=r.arotX(e,t,n);n=r.arotY(e,t,n),t=a,e.canvasCtx.putImageData(e.spare,t,n)},setPixel(e,t,n){let a,o,i=4*n;e.rotation>0&&(1===e.rotation?(a=n%e.sparew,o=Math.floor(n/e.sparew),i=4*(n=a*e.sparew2+(e.sparew2-1-o))):2===e.rotation?i=e.sparew*e.spareh*4-4-i:3===e.rotation&&(a=n%e.sparew,o=Math.floor(n/e.sparew),i=4*(n=(e.sparew2-1-a)*e.sparew2+o))),1===e.bpp?(e.spare.data[i++]=224&t,e.spare.data[i++]=(28&t)<<3,e.spare.data[i++]=r.fixColor((3&t)<<6)):(e.spare.data[i++]=t>>8&248,e.spare.data[i++]=t>>3&252,e.spare.data[i++]=(31&t)<<3),e.spare.data[i]=255},arotX:(e,t,n)=>0===e.rotation?t:1===e.rotation?e.canvasCtx.canvas.width-e.sparew2-n:2===e.rotation?e.canvasCtx.canvas.width-e.sparew2-t:3===e.rotation?n:0,arotY:(e,t,n)=>0===e.rotation?n:1===e.rotation?t:2===e.rotation?e.canvasCtx.canvas.height-e.spareh2-n:3===e.rotation?e.canvasCtx.canvas.height-e.spareh-t:0,crotX:(e,t,n)=>0===e.rotation?t:1===e.rotation?n:2===e.rotation?e.canvasCtx.canvas.width-t:3===e.rotation?e.canvasCtx.canvas.height-n:0,crotY:(e,t,n)=>0===e.rotation?n:1===e.rotation?e.canvasCtx.canvas.width-t:2===e.rotation?e.canvasCtx.canvas.height-n:3===e.rotation?t:0,rotX:(e,t,n)=>0===e.rotation||1===e.rotation?t:2===e.rotation?t-e.canvasCtx.canvas.width:3===e.rotation?t-e.canvasCtx.canvas.height:0,rotY:(e,t,n)=>0===e.rotation?n:1===e.rotation?n-e.canvasCtx.canvas.width:2===e.rotation?n-e.canvasCtx.canvas.height:3===e.rotation?n:0,setRotation(e,t){for(;t<0;)t+=4;const n=t%4;if(e.holding)return e.rotation=n,!1;if(n===e.rotation)return!0;let a=e.canvasCtx.canvas.width,o=e.canvasCtx.canvas.height;1!==e.rotation&&3!==e.rotation||(a=e.canvasCtx.canvas.height,o=e.canvasCtx.canvas.width),null==e.tcanvas&&(e.tcanvas=document.createElement("canvas"));const i=e.tcanvas.getContext("2d");return i.setTransform(1,0,0,1,0,0),i.canvas.width=a,i.canvas.height=o,i.rotate(-90*e.rotation*Math.PI/180),0===e.rotation&&i.drawImage(e.canvasCtx.canvas,0,0),1===e.rotation&&i.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,0),2===e.rotation&&i.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,-e.canvasCtx.canvas.height),3===e.rotation&&i.drawImage(e.canvasCtx.canvas,0,-e.canvasCtx.canvas.height),0!==e.rotation&&2!==e.rotation||(e.canvasCtx.canvas.height=a,e.canvasCtx.canvas.width=o),1!==e.rotation&&3!==e.rotation||(e.canvasCtx.canvas.height=o,e.canvasCtx.canvas.width=a),e.canvasCtx.setTransform(1,0,0,1,0,0),e.canvasCtx.rotate(90*n*Math.PI/180),e.rotation=n,e.canvasCtx.drawImage(e.tcanvas,r.rotX(e,0,0),r.rotY(e,0,0)),e.width=e.canvasCtx.canvas.width,e.height=e.canvasCtx.canvas.height,null!=e.onScreenResize&&e.onScreenResize(e.width,e.height,e.canvasId),!0},fixColor:e=>e>127?e+32:e}},717:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var r,a=n(38),o=n(173),i=n(611);!function(e){e[e.Up=0]="Up",e[e.Down=1]="Down"}(r||(r={}));class s{constructor(e,t){this.Comms=t,this.parent=e}GrabKeyInput(){this.KeyInputGrab||(document.onkeyup=this.handleKeyUp.bind(this),document.onkeydown=this.handleKeyDown.bind(this),document.onkeypress=this.handleKeys.bind(this),this.KeyInputGrab=!0)}UnGrabKeyInput(){this.KeyInputGrab&&(document.onkeyup=null,document.onkeydown=null,document.onkeypress=null,this.KeyInputGrab=!1)}handleKeys(e){return this.haltEvent(e)}haltEvent(e){return(0,i.f)(e.preventDefault)&&e.preventDefault(),(0,i.f)(e.stopPropagation)&&e.stopPropagation(),!1}handleKeyUp(e){return this.handleKeyEvent(r.Up,e)}handleKeyDown(e){return this.handleKeyEvent(r.Down,e)}handleKeyEvent(e,t){let n=t;if((0,i.f)(n)||(n=window.event),(0,i.f)(n.code)){const t=a.q.convertAMTKeyCode(n);this.parent.logger.verbose(`Key ${e} : ${String(t)}`),null!=t&&o.X.sendKey(this.Comms,t,e)}else{let t=n.keyCode;173===t&&(t=189),61===t&&(t=187);let r=t;!1===n.shiftKey&&t>=65&&t<=90&&(r=t+32),t>=112&&t<=124&&(r=t+65358),8===t&&(r=65288),9===t&&(r=65289),13===t&&(r=65293),16===t&&(r=65505),17===t&&(r=65507),18===t&&(r=65513),27===t&&(r=65307),33===t&&(r=65365),34===t&&(r=65366),35===t&&(r=65367),36===t&&(r=65360),37===t&&(r=65361),38===t&&(r=65362),39===t&&(r=65363),40===t&&(r=65364),45===t&&(r=65379),46===t&&(r=65535),t>=96&&t<=105&&(r=t-48),106===t&&(r=42),107===t&&(r=43),109===t&&(r=45),110===t&&(r=46),111===t&&(r=47),186===t&&(r=59),187===t&&(r=61),188===t&&(r=44),189===t&&(r=45),190===t&&(r=46),191===t&&(r=47),192===t&&(r=96),219===t&&(r=91),220===t&&(r=92),221===t&&(r=93),222===t&&(r=39),this.parent.logger.verbose(`Key ${e}: ${t}  = ${r}`),o.X.sendKey(this.Comms,r,e)}return this.haltEvent(n)}}},33:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(565),a=n(644),o=n(611);class i{constructor(e,t,n){this.parent=e,this.comm=t,this.debounceTime=n,this.mouseClickCompleted=!0,this.lastEvent=null}GrabMouseInput(){this.MouseInputGrab||(this.MouseInputGrab=!0)}UnGrabMouseInput(){if(!this.MouseInputGrab)return;const e=this.parent.canvasCtx.canvas;e.onmousemove=null,e.onmouseup=null,e.onmousedown=null,this.MouseInputGrab=!1}mousedown(e){return this.parent.buttonmask|=1<<e.button,this.mousemove(e)}mouseup(e){return this.parent.buttonmask&=65535-(1<<e.button),this.mousemove(e)}mousemove(e){if(4!==this.parent.state)return!0;const t=this.getPositionOfControl(this.parent.canvasControl);if(this.parent.lastMouseX=(e.pageX-t[0])*(this.parent.canvasControl.height/this.parent.canvasControl.offsetHeight),this.parent.lastMouseY=(Number(e.pageY-t[1])+((0,o.f)(this.parent.scrolldiv)?Number(this.parent.scrolldiv.scrollTop):0))*(this.parent.canvasControl.width/this.parent.canvasControl.offsetWidth),(0,o.f)(this.parent.noMouseRotate)||(this.parent.lastMouseX2=a.j.crotX(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseY=a.j.crotY(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseX=this.parent.lastMouseX2),this.comm.send(String.fromCharCode(5,this.parent.buttonmask)+r.r.ShortToStr(this.parent.lastMouseX)+r.r.ShortToStr(this.parent.lastMouseY)),this.parent.setDeskFocus("DeskFocus",this.parent.focusMode),0!==this.parent.focusMode){const e=Math.min(this.parent.lastMouseX,this.parent.canvasControl.width-this.parent.focusMode),n=Math.min(this.parent.lastMouseY,this.parent.canvasControl.height-this.parent.focusMode),r=2*this.parent.focusMode,a=this.parent.canvasControl,o=a.offsetHeight/this.parent.canvasControl.height,i=a.offsetWidth/this.parent.canvasControl.width,s=this.parent.getDeskFocus("DeskFocus"),l=this.getPositionOfControl(this.parent.canvasControl.parentElement);s.left=`${Math.max((e-this.parent.focusMode)*o,0)+(t[0]-l[0])}px`,s.top=`${Math.max((n-this.parent.focusMode)*i,0)+(t[1]-l[1])}px`,s.width=r*o-6+"px",s.height=r*o-6+"px"}return this.haltEvent(e)}haltEvent(e){return(0,o.f)(e.preventDefault)&&e.preventDefault(),(0,o.f)(e.stopPropagation)&&e.stopPropagation(),!1}getPositionOfControl(e){const t=Array(2);t[0]=t[1]=0;let n=e;for(;null!=n;)t[0]=Number(t[0])+Number(n.offsetLeft),t[1]=Number(t[1])+Number(n.offsetTop),n=n.offsetParent;return t}}},611:(e,t,n)=>{"use strict";n.d(t,{f:()=>r});const r=e=>null!=e&&""!==e&&!1!==e&&0!==e},8:(e,t,n)=>{"use strict";n.d(t,{EB:()=>i.E,Xn:()=>a.X,fQ:()=>l.f,jw:()=>o.j,qD:()=>r.q,xx:()=>s.x});var r=n(38),a=n(173),o=n(644),i=n(717),s=n(33),l=n(611)},305:module=>{var ZLIB=ZLIB||{},BASE,NMAX;void 0===ZLIB.common_initialized&&(ZLIB.Z_NO_FLUSH=0,ZLIB.Z_PARTIAL_FLUSH=1,ZLIB.Z_SYNC_FLUSH=2,ZLIB.Z_FULL_FLUSH=3,ZLIB.Z_FINISH=4,ZLIB.Z_BLOCK=5,ZLIB.Z_TREES=6,ZLIB.Z_OK=0,ZLIB.Z_STREAM_END=1,ZLIB.Z_NEED_DICT=2,ZLIB.Z_ERRNO=-1,ZLIB.Z_STREAM_ERROR=-2,ZLIB.Z_DATA_ERROR=-3,ZLIB.Z_MEM_ERROR=-4,ZLIB.Z_BUF_ERROR=-5,ZLIB.Z_VERSION_ERROR=-6,ZLIB.Z_DEFLATED=8,ZLIB.z_stream=function(){this.next_in=0,this.avail_in=0,this.total_in=0,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=null,this.state=null,this.data_type=0,this.adler=0,this.input_data="",this.output_data="",this.error=0,this.checksum_function=null},ZLIB.gz_header=function(){this.text=0,this.time=0,this.xflags=0,this.os=255,this.extra=null,this.extra_len=0,this.extra_max=0,this.name=null,this.name_max=0,this.comment=null,this.comm_max=0,this.hcrc=0,this.done=0},ZLIB.common_initialized=!0),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-inflate.js"),function(){var DEF_WBITS=15,HEAD=0,FLAGS=1,TIME=2,OS=3,EXLEN=4,EXTRA=5,NAME=6,COMMENT=7,HCRC=8,DICTID=9,DICT=10,TYPE=11,TYPEDO=12,STORED=13,COPY_=14,COPY=15,TABLE=16,LENLENS=17,CODELENS=18,LEN_=19,LEN=20,LENEXT=21,DIST=22,DISTEXT=23,MATCH=24,LIT=25,CHECK=26,LENGTH=27,DONE=28,BAD=29,MEM=30,SYNC=31,ENOUGH_LENS=852,ENOUGH_DISTS=592,ENOUGH=ENOUGH_LENS+ENOUGH_DISTS,CODES=0,LENS=1,DISTS=2,inflate_table_lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],inflate_table_lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,203,69],inflate_table_dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],inflate_table_dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];function inflate_table(e,t){var n,r,a,o,i,s,l,u,c,d,p,f,h,g,v,m,b,y,S,w,k,C,_=e.next,x=t==DISTS?e.distbits:e.lenbits,E=e.work,T=e.lens,A=t==DISTS?e.nlen:0,I=e.codes;n=t==LENS?e.nlen:t==DISTS?e.ndist:19;var N=new Array(16),P=new Array(16);for(r=0;r<=15;r++)N[r]=0;for(a=0;a<n;a++)N[T[A+a]]++;for(s=x,i=15;i>=1&&0==N[i];i--);if(s>i&&(s=i),0==i)return m={op:64,bits:1,val:0},I[_++]=m,I[_++]=m,t==DISTS?e.distbits=1:e.lenbits=1,e.next=_,0;for(o=1;o<i&&0==N[o];o++);for(s<o&&(s=o),c=1,r=1;r<=15;r++)if(c<<=1,(c-=N[r])<0)return-1;if(c>0&&(t==CODES||1!=i))return e.next=_,-1;for(P[1]=0,r=1;r<15;r++)P[r+1]=P[r]+N[r];for(a=0;a<n;a++)0!=T[A+a]&&(E[P[T[A+a]]++]=a);switch(t){case CODES:y=w=E,S=0,k=0,C=19;break;case LENS:y=inflate_table_lbase,S=-257,w=inflate_table_lext,k=-257,C=256;break;default:y=inflate_table_dbase,w=inflate_table_dext,S=0,k=0,C=-1}if(p=0,a=0,r=o,b=_,l=s,u=0,g=-1,v=(d=1<<s)-1,t==LENS&&d>=ENOUGH_LENS||t==DISTS&&d>=ENOUGH_DISTS)return e.next=_,1;for(;;){m={op:0,bits:r-u,val:0},E[a]<C?m.val=E[a]:E[a]>C?(m.op=w[k+E[a]],m.val=y[S+E[a]]):m.op=96,f=1<<r-u,o=h=1<<l;do{I[b+(p>>>u)+(h-=f)]=m}while(0!=h);for(f=1<<r-1;p&f;)f>>>=1;if(0!=f?(p&=f-1,p+=f):p=0,a++,0==--N[r]){if(r==i)break;r=T[A+E[a]]}if(r>s&&(p&v)!=g){for(0==u&&(u=s),b+=o,c=1<<(l=r-u);l+u<i&&!((c-=N[l+u])<=0);)l++,c<<=1;if(d+=1<<l,t==LENS&&d>=ENOUGH_LENS||t==DISTS&&d>=ENOUGH_DISTS)return e.next=_,1;I[_+(g=p&v)]={op:l,bits:s,val:b-_}}}return 0!=p&&(I[b+p]={op:64,bits:r-u,val:0}),e.next=_+d,t==DISTS?e.distbits=s:e.lenbits=s,0}function inflate_fast(e,t){var n,r,a,o,i,s,l,u,c,d,p,f,h,g,v,m,b,y,S,w,k,C,_=-1,x=-1;n=e.state,r=e.input_data,o=(a=e.next_in)+e.avail_in-5,s=(i=e.next_out)-(t-e.avail_out),l=i+(e.avail_out-257),u=n.wsize,c=n.whave,d=n.wnext,p=n.window,f=n.hold,h=n.bits,g=n.codes,v=n.lencode,m=n.distcode,b=(1<<n.lenbits)-1,y=(1<<n.distbits)-1;e:do{h<15&&(f+=(255&r.charCodeAt(a++))<<h,h+=8,f+=(255&r.charCodeAt(a++))<<h,h+=8),S=g[v+(f&b)];t:for(;;){if(f>>>=w=S.bits,h-=w,0==(w=S.op))e.output_data+=String.fromCharCode(S.val),i++;else{if(!(16&w)){if(0==(64&w)){S=g[v+(S.val+(f&(1<<w)-1))];continue t}if(32&w){n.mode=TYPE;break e}e.msg="invalid literal/length code",n.mode=BAD;break e}k=S.val,(w&=15)&&(h<w&&(f+=(255&r.charCodeAt(a++))<<h,h+=8),k+=f&(1<<w)-1,f>>>=w,h-=w),h<15&&(f+=(255&r.charCodeAt(a++))<<h,h+=8,f+=(255&r.charCodeAt(a++))<<h,h+=8),S=g[m+(f&y)];n:for(;;){if(f>>>=w=S.bits,h-=w,!(16&(w=S.op))){if(0==(64&w)){S=g[m+(S.val+(f&(1<<w)-1))];continue n}e.msg="invalid distance code",n.mode=BAD;break e}if(C=S.val,h<(w&=15)&&(f+=(255&r.charCodeAt(a++))<<h,(h+=8)<w&&(f+=(255&r.charCodeAt(a++))<<h,h+=8)),C+=f&(1<<w)-1,f>>>=w,h-=w,C>(w=i-s)){if((w=C-w)>c&&n.sane){e.msg="invalid distance too far back",n.mode=BAD;break e}_=0,x=-1,0==d?(_+=u-w,w<k&&(k-=w,e.output_data+=p.substring(_,_+w),i+=w,w=0,_=-1,x=i-C)):(_+=d-w,w<k&&(k-=w,e.output_data+=p.substring(_,_+w),_=-1,x=(i+=w)-C))}else _=-1,x=i-C;if(_>=0)e.output_data+=p.substring(_,_+k),i+=k,_+=k;else{var E=k;for(E>i-x&&(E=i-x),e.output_data+=e.output_data.substring(x,x+E),i+=E,x+=E,i+=k-=E;k>2;)e.output_data+=e.output_data.charAt(x++),e.output_data+=e.output_data.charAt(x++),e.output_data+=e.output_data.charAt(x++),k-=3;k&&(e.output_data+=e.output_data.charAt(x++),k>1&&(e.output_data+=e.output_data.charAt(x++)))}break n}}break t}}while(a<o&&i<l);a-=k=h>>>3,f&=(1<<(h-=k<<3))-1,e.next_in=a,e.next_out=i,e.avail_in=a<o?o-a+5:5-(a-o),e.avail_out=i<l?l-i+257:257-(i-l),n.hold=f,n.bits=h}function new_array(e){var t,n=new Array(e);for(t=0;t<e;t++)n[t]=0;return n}function getarg(e,t,n){return e&&t in e?e[t]:n}function checksum_none(){return 0}function inflate_state(){var e;this.mode=0,this.last=0,this.wrap=0,this.havedict=0,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=0,this.distcode=0,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=0,this.lens=new_array(320),this.work=new_array(288),this.codes=new Array(ENOUGH);var t={op:0,bits:0,val:0};for(e=0;e<ENOUGH;e++)this.codes[e]=t;this.sane=0,this.back=0,this.was=0}ZLIB.inflate_copyright=" inflate 1.2.6 Copyright 1995-2012 Mark Adler ",ZLIB.inflateResetKeep=function(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=null,t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=0,t.distcode=0,t.next=0,t.sane=1,t.back=-1,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.inflateReset=function(e,t){var n,r;return e&&e.state?(r=e.state,void 0===t&&(t=DEF_WBITS),t<0?(n=0,t=-t):(n=1+(t>>>4),t<48&&(t&=15)),1==n&&"function"==typeof ZLIB.adler32?e.checksum_function=ZLIB.adler32:2==n&&"function"==typeof ZLIB.crc32?e.checksum_function=ZLIB.crc32:e.checksum_function=checksum_none,t&&(t<8||t>15)?ZLIB.Z_STREAM_ERROR:(r.window&&r.wbits!=t&&(r.window=null),r.wrap=n,r.wbits=t,r.wsize=0,r.whave=0,r.wnext=0,ZLIB.inflateResetKeep(e))):ZLIB.Z_STREAM_ERROR},ZLIB.inflateInit=function(e){var t=new ZLIB.z_stream;return t.state=new inflate_state,ZLIB.inflateReset(t,e),t},ZLIB.inflatePrime=function(e,t,n){var r;return e&&e.state?(r=e.state,t<0?(r.hold=0,r.bits=0,ZLIB.Z_OK):t>16||r.bits+t>32?ZLIB.Z_STREAM_ERROR:(n&=(1<<t)-1,r.hold+=n<<r.bits,r.bits+=t,ZLIB.Z_OK)):ZLIB.Z_STREAM_ERROR};var lenfix_ary=null,lenfix_def="([    {op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},{op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},    {op:0,bits:9,val:192},{op:16,bits:7,val:10},{op:0,bits:8,val:96},{op:0,bits:8,val:32},{op:0,bits:9,val:160},{op:0,bits:8,val:0},{op:0,bits:8,val:128},    {op:0,bits:8,val:64},{op:0,bits:9,val:224},{op:16,bits:7,val:6},{op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:144},{op:19,bits:7,val:59},    {op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:208},{op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:176},    {op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},{op:0,bits:9,val:240},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},    {op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},{op:0,bits:8,val:52},{op:0,bits:9,val:200},{op:17,bits:7,val:13},{op:0,bits:8,val:100},    {op:0,bits:8,val:36},{op:0,bits:9,val:168},{op:0,bits:8,val:4},{op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:232},{op:16,bits:7,val:8},    {op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:152},{op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:216},    {op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},{op:0,bits:9,val:184},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},    {op:0,bits:9,val:248},{op:16,bits:7,val:3},{op:0,bits:8,val:82},{op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},    {op:0,bits:8,val:50},{op:0,bits:9,val:196},{op:17,bits:7,val:11},{op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:164},{op:0,bits:8,val:2},    {op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:228},{op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:148},    {op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},{op:0,bits:9,val:212},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},    {op:0,bits:9,val:180},{op:0,bits:8,val:10},{op:0,bits:8,val:138},{op:0,bits:8,val:74},{op:0,bits:9,val:244},{op:16,bits:7,val:5},{op:0,bits:8,val:86},    {op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:204},{op:17,bits:7,val:15},    {op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:172},{op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:236},    {op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},{op:0,bits:9,val:156},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},    {op:0,bits:9,val:220},{op:18,bits:7,val:27},{op:0,bits:8,val:110},{op:0,bits:8,val:46},{op:0,bits:9,val:188},{op:0,bits:8,val:14},{op:0,bits:8,val:142},    {op:0,bits:8,val:78},{op:0,bits:9,val:252},{op:96,bits:7,val:0},{op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},    {op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:194},{op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:162},    {op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},{op:0,bits:9,val:226},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},    {op:0,bits:9,val:146},{op:19,bits:7,val:59},{op:0,bits:8,val:121},{op:0,bits:8,val:57},{op:0,bits:9,val:210},{op:17,bits:7,val:17},{op:0,bits:8,val:105},    {op:0,bits:8,val:41},{op:0,bits:9,val:178},{op:0,bits:8,val:9},{op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:242},{op:16,bits:7,val:4},    {op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},{op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:202},    {op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},{op:0,bits:9,val:170},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},    {op:0,bits:9,val:234},{op:16,bits:7,val:8},{op:0,bits:8,val:93},{op:0,bits:8,val:29},{op:0,bits:9,val:154},{op:20,bits:7,val:83},{op:0,bits:8,val:125},    {op:0,bits:8,val:61},{op:0,bits:9,val:218},{op:18,bits:7,val:23},{op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:186},{op:0,bits:8,val:13},    {op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:250},{op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},    {op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},{op:0,bits:9,val:198},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},    {op:0,bits:9,val:166},{op:0,bits:8,val:3},{op:0,bits:8,val:131},{op:0,bits:8,val:67},{op:0,bits:9,val:230},{op:16,bits:7,val:7},{op:0,bits:8,val:91},    {op:0,bits:8,val:27},{op:0,bits:9,val:150},{op:20,bits:7,val:67},{op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:214},{op:18,bits:7,val:19},    {op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:182},{op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:246},    {op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},    {op:0,bits:9,val:206},{op:17,bits:7,val:15},{op:0,bits:8,val:103},{op:0,bits:8,val:39},{op:0,bits:9,val:174},{op:0,bits:8,val:7},{op:0,bits:8,val:135},    {op:0,bits:8,val:71},{op:0,bits:9,val:238},{op:16,bits:7,val:9},{op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:158},{op:20,bits:7,val:99},    {op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:222},{op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:190},    {op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},{op:0,bits:9,val:254},{op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},    {op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},{op:0,bits:9,val:193},{op:16,bits:7,val:10},{op:0,bits:8,val:96},    {op:0,bits:8,val:32},{op:0,bits:9,val:161},{op:0,bits:8,val:0},{op:0,bits:8,val:128},{op:0,bits:8,val:64},{op:0,bits:9,val:225},{op:16,bits:7,val:6},    {op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:145},{op:19,bits:7,val:59},{op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:209},    {op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:177},{op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},    {op:0,bits:9,val:241},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},{op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},    {op:0,bits:8,val:52},{op:0,bits:9,val:201},{op:17,bits:7,val:13},{op:0,bits:8,val:100},{op:0,bits:8,val:36},{op:0,bits:9,val:169},{op:0,bits:8,val:4},    {op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:233},{op:16,bits:7,val:8},{op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:153},    {op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:217},{op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},    {op:0,bits:9,val:185},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},{op:0,bits:9,val:249},{op:16,bits:7,val:3},{op:0,bits:8,val:82},    {op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},{op:0,bits:8,val:50},{op:0,bits:9,val:197},{op:17,bits:7,val:11},    {op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:165},{op:0,bits:8,val:2},{op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:229},    {op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:149},{op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},    {op:0,bits:9,val:213},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},{op:0,bits:9,val:181},{op:0,bits:8,val:10},{op:0,bits:8,val:138},    {op:0,bits:8,val:74},{op:0,bits:9,val:245},{op:16,bits:7,val:5},{op:0,bits:8,val:86},{op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},    {op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:205},{op:17,bits:7,val:15},{op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:173},    {op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:237},{op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},    {op:0,bits:9,val:157},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},{op:0,bits:9,val:221},{op:18,bits:7,val:27},{op:0,bits:8,val:110},    {op:0,bits:8,val:46},{op:0,bits:9,val:189},{op:0,bits:8,val:14},{op:0,bits:8,val:142},{op:0,bits:8,val:78},{op:0,bits:9,val:253},{op:96,bits:7,val:0},    {op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},{op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:195},    {op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:163},{op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},    {op:0,bits:9,val:227},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},{op:0,bits:9,val:147},{op:19,bits:7,val:59},{op:0,bits:8,val:121},    {op:0,bits:8,val:57},{op:0,bits:9,val:211},{op:17,bits:7,val:17},{op:0,bits:8,val:105},{op:0,bits:8,val:41},{op:0,bits:9,val:179},{op:0,bits:8,val:9},    {op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:243},{op:16,bits:7,val:4},{op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},    {op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:203},{op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},    {op:0,bits:9,val:171},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},{op:0,bits:9,val:235},{op:16,bits:7,val:8},{op:0,bits:8,val:93},    {op:0,bits:8,val:29},{op:0,bits:9,val:155},{op:20,bits:7,val:83},{op:0,bits:8,val:125},{op:0,bits:8,val:61},{op:0,bits:9,val:219},{op:18,bits:7,val:23},    {op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:187},{op:0,bits:8,val:13},{op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:251},    {op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},{op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},    {op:0,bits:9,val:199},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},{op:0,bits:9,val:167},{op:0,bits:8,val:3},{op:0,bits:8,val:131},    {op:0,bits:8,val:67},{op:0,bits:9,val:231},{op:16,bits:7,val:7},{op:0,bits:8,val:91},{op:0,bits:8,val:27},{op:0,bits:9,val:151},{op:20,bits:7,val:67},    {op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:215},{op:18,bits:7,val:19},{op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:183},    {op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:247},{op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},    {op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},{op:0,bits:9,val:207},{op:17,bits:7,val:15},{op:0,bits:8,val:103},    {op:0,bits:8,val:39},{op:0,bits:9,val:175},{op:0,bits:8,val:7},{op:0,bits:8,val:135},{op:0,bits:8,val:71},{op:0,bits:9,val:239},{op:16,bits:7,val:9},    {op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:159},{op:20,bits:7,val:99},{op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:223},    {op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:191},{op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},    {op:0,bits:9,val:255}])",distfix_ary=null,distfix_def="([    {op:16,bits:5,val:1},{op:23,bits:5,val:257},{op:19,bits:5,val:17},{op:27,bits:5,val:4097},{op:17,bits:5,val:5},{op:25,bits:5,val:1025},    {op:21,bits:5,val:65},{op:29,bits:5,val:16385},{op:16,bits:5,val:3},{op:24,bits:5,val:513},{op:20,bits:5,val:33},{op:28,bits:5,val:8193},    {op:18,bits:5,val:9},{op:26,bits:5,val:2049},{op:22,bits:5,val:129},{op:64,bits:5,val:0},{op:16,bits:5,val:2},{op:23,bits:5,val:385},    {op:19,bits:5,val:25},{op:27,bits:5,val:6145},{op:17,bits:5,val:7},{op:25,bits:5,val:1537},{op:21,bits:5,val:97},{op:29,bits:5,val:24577},    {op:16,bits:5,val:4},{op:24,bits:5,val:769},{op:20,bits:5,val:49},{op:28,bits:5,val:12289},{op:18,bits:5,val:13},{op:26,bits:5,val:3073},    {op:22,bits:5,val:193},{op:64,bits:5,val:0}])";function fixedtables(state){var i;for(lenfix_ary||(lenfix_ary=eval(lenfix_def)),distfix_ary||(distfix_ary=eval(distfix_def)),state.lencode=0,state.distcode=512,i=0;i<512;i++)state.codes[i]=lenfix_ary[i];for(i=0;i<32;i++)state.codes[i+512]=distfix_ary[i];state.lenbits=9,state.distbits=5}function updatewindow(e){var t=e.state,n=e.output_data.length;return null===t.window&&(t.window=""),0==t.wsize&&(t.wsize=1<<t.wbits),n>=t.wsize?t.window=e.output_data.substring(n-t.wsize):t.whave+n<t.wsize?t.window+=e.output_data:t.window=t.window.substring(t.whave-(t.wsize-n))+e.output_data,t.whave=t.window.length,t.whave<t.wsize?t.wnext=t.whave:t.wnext=0,0}function CRC2(e,t){var n=[255&t,t>>>8&255];e.state.check=e.checksum_function(e.state.check,n,0,2)}function CRC4(e,t){var n=[255&t,t>>>8&255,t>>>16&255,t>>>24&255];e.state.check=e.checksum_function(e.state.check,n,0,4)}function LOAD(e,t){return t.strm=e,t.left=e.avail_out,t.next=e.next_in,t.have=e.avail_in,t.hold=e.state.hold,t.bits=e.state.bits,t}function RESTORE(e){var t=e.strm;t.next_in=e.next,t.avail_out=e.left,t.avail_in=e.have,t.state.hold=e.hold,t.state.bits=e.bits}function INITBITS(e){e.hold=0,e.bits=0}function PULLBYTE(e){return 0!=e.have&&(e.have--,e.hold+=(255&e.strm.input_data.charCodeAt(e.next++))<<e.bits,e.bits+=8,!0)}function NEEDBITS(e,t){for(;e.bits<t;)if(!PULLBYTE(e))return!1;return!0}function BITS(e,t){return e.hold&(1<<t)-1}function DROPBITS(e,t){e.hold>>>=t,e.bits-=t}function BYTEBITS(e){e.hold>>>=7&e.bits,e.bits-=7&e.bits}function REVERSE(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}var inflate_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];ZLIB.inflate=function(e,t){var n,r,a,o,i,s,l,u,c,d=-1,p=-1;if(!e||!e.state||!e.input_data&&0!=e.avail_in)return ZLIB.Z_STREAM_ERROR;(n=e.state).mode==TYPE&&(n.mode=TYPEDO),LOAD(e,r={}),a=r.have,o=r.left,c=ZLIB.Z_OK;e:for(;;)switch(n.mode){case HEAD:if(0==n.wrap){n.mode=TYPEDO;break}if(!NEEDBITS(r,16))break e;if(2&n.wrap&&35615==r.hold){n.check=e.checksum_function(0,null,0,0),CRC2(e,r.hold),INITBITS(r),n.mode=FLAGS;break}if(n.flags=0,null!==n.head&&(n.head.done=-1),!(1&n.wrap)||((BITS(r,8)<<8)+(r.hold>>>8))%31){e.msg="incorrect header check",n.mode=BAD;break}if(BITS(r,4)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",n.mode=BAD;break}if(DROPBITS(r,4),u=BITS(r,4)+8,0==n.wbits)n.wbits=u;else if(u>n.wbits){e.msg="invalid window size",n.mode=BAD;break}n.dmax=1<<u,e.adler=n.check=e.checksum_function(0,null,0,0),n.mode=512&r.hold?DICTID:TYPE,INITBITS(r);break;case FLAGS:if(!NEEDBITS(r,16))break e;if(n.flags=r.hold,(255&n.flags)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",n.mode=BAD;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=BAD;break}null!==n.head&&(n.head.text=r.hold>>>8&1),512&n.flags&&CRC2(e,r.hold),INITBITS(r),n.mode=TIME;case TIME:if(!NEEDBITS(r,32))break e;null!==n.head&&(n.head.time=r.hold),512&n.flags&&CRC4(e,r.hold),INITBITS(r),n.mode=OS;case OS:if(!NEEDBITS(r,16))break e;null!==n.head&&(n.head.xflags=255&r.hold,n.head.os=r.hold>>>8),512&n.flags&&CRC2(e,r.hold),INITBITS(r),n.mode=EXLEN;case EXLEN:if(1024&n.flags){if(!NEEDBITS(r,16))break e;n.length=r.hold,null!==n.head&&(n.head.extra_len=r.hold),512&n.flags&&CRC2(e,r.hold),INITBITS(r),n.head.extra=""}else null!==n.head&&(n.head.extra=null);n.mode=EXTRA;case EXTRA:if(1024&n.flags&&((i=n.length)>r.have&&(i=r.have),i&&(null!==n.head&&null!==n.head.extra&&(u=n.head.extra_len-n.length,n.head.extra+=e.input_data.substring(r.next,r.next+(u+i>n.head.extra_max?n.head.extra_max-u:i))),512&n.flags&&(n.check=e.checksum_function(n.check,e.input_data,r.next,i)),r.have-=i,r.next+=i,n.length-=i),n.length))break e;n.length=0,n.mode=NAME;case NAME:if(2048&n.flags){if(0==r.have)break e;null!==n.head&&null===n.head.name&&(n.head.name=""),i=0;do{if(u=e.input_data.charAt(r.next+i),i++,"\0"===u)break;null!==n.head&&n.length<n.head.name_max&&(n.head.name+=u,n.length++)}while(i<r.have);if(512&n.flags&&(n.check=e.checksum_function(n.check,e.input_data,r.next,i)),r.have-=i,r.next+=i,"\0"!==u)break e}else null!==n.head&&(n.head.name=null);n.length=0,n.mode=COMMENT;case COMMENT:if(4096&n.flags){if(0==r.have)break e;i=0,null!==n.head&&null===n.head.comment&&(n.head.comment="");do{if(u=e.input_data.charAt(r.next+i),i++,"\0"===u)break;null!==n.head&&n.length<n.head.comm_max&&(n.head.comment+=u,n.length++)}while(i<r.have);if(512&n.flags&&(n.check=e.checksum_function(n.check,e.input_data,r.next,i)),r.have-=i,r.next+=i,"\0"!==u)break e}else null!==n.head&&(n.head.comment=null);n.mode=HCRC;case HCRC:if(512&n.flags){if(!NEEDBITS(r,16))break e;if(r.hold!=(65535&n.check)){e.msg="header crc mismatch",n.mode=BAD;break}INITBITS(r)}null!==n.head&&(n.head.hcrc=n.flags>>>9&1,n.head.done=1),e.adler=n.check=e.checksum_function(0,null,0,0),n.mode=TYPE;break;case DICTID:if(!NEEDBITS(r,32))break e;e.adler=n.check=REVERSE(r.hold),INITBITS(r),n.mode=DICT;case DICT:if(0==n.havedict)return RESTORE(r),ZLIB.Z_NEED_DICT;e.adler=n.check=e.checksum_function(0,null,0,0),n.mode=TYPE;case TYPE:if(t==ZLIB.Z_BLOCK||t==ZLIB.Z_TREES)break e;case TYPEDO:if(n.last){BYTEBITS(r),n.mode=CHECK;break}if(!NEEDBITS(r,3))break e;switch(n.last=BITS(r,1),DROPBITS(r,1),BITS(r,2)){case 0:n.mode=STORED;break;case 1:if(fixedtables(n),n.mode=LEN_,t==ZLIB.Z_TREES){DROPBITS(r,2);break e}break;case 2:n.mode=TABLE;break;case 3:e.msg="invalid block type",n.mode=BAD}DROPBITS(r,2);break;case STORED:if(BYTEBITS(r),!NEEDBITS(r,32))break e;if((65535&r.hold)!=(r.hold>>>16&65535^65535)){e.msg="invalid stored block lengths",n.mode=BAD;break}if(n.length=65535&r.hold,INITBITS(r),n.mode=COPY_,t==ZLIB.Z_TREES)break e;case COPY_:n.mode=COPY;case COPY:if(i=n.length){if(i>r.have&&(i=r.have),i>r.left&&(i=r.left),0==i)break e;e.output_data+=e.input_data.substring(r.next,r.next+i),e.next_out+=i,r.have-=i,r.next+=i,r.left-=i,n.length-=i;break}n.mode=TYPE;break;case TABLE:if(!NEEDBITS(r,14))break e;if(n.nlen=BITS(r,5)+257,DROPBITS(r,5),n.ndist=BITS(r,5)+1,DROPBITS(r,5),n.ncode=BITS(r,4)+4,DROPBITS(r,4),n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=BAD;break}n.have=0,n.mode=LENLENS;case LENLENS:for(;n.have<n.ncode;){if(!NEEDBITS(r,3))break e;var f=BITS(r,3);n.lens[inflate_order[n.have++]]=f,DROPBITS(r,3)}for(;n.have<19;)n.lens[inflate_order[n.have++]]=0;if(n.next=0,n.lencode=0,n.lenbits=7,c=inflate_table(n,CODES)){e.msg="invalid code lengths set",n.mode=BAD;break}n.have=0,n.mode=CODELENS;case CODELENS:for(;n.have<n.nlen+n.ndist;){for(;!((s=n.codes[n.lencode+BITS(r,n.lenbits)]).bits<=r.bits);)if(!PULLBYTE(r))break e;if(s.val<16)DROPBITS(r,s.bits),n.lens[n.have++]=s.val;else{if(16==s.val){if(!NEEDBITS(r,s.bits+2))break e;if(DROPBITS(r,s.bits),0==n.have){e.msg="invalid bit length repeat",n.mode=BAD;break}u=n.lens[n.have-1],i=3+BITS(r,2),DROPBITS(r,2)}else if(17==s.val){if(!NEEDBITS(r,s.bits+3))break e;DROPBITS(r,s.bits),u=0,i=3+BITS(r,3),DROPBITS(r,3)}else{if(!NEEDBITS(r,s.bits+7))break e;DROPBITS(r,s.bits),u=0,i=11+BITS(r,7),DROPBITS(r,7)}if(n.have+i>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=BAD;break}for(;i--;)n.lens[n.have++]=u}}if(n.mode==BAD)break;if(0==n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=BAD;break}if(n.next=0,n.lencode=n.next,n.lenbits=9,c=inflate_table(n,LENS)){e.msg="invalid literal/lengths set",n.mode=BAD;break}if(n.distcode=n.next,n.distbits=6,c=inflate_table(n,DISTS)){e.msg="invalid distances set",n.mode=BAD;break}if(n.mode=LEN_,t==ZLIB.Z_TREES)break e;case LEN_:n.mode=LEN;case LEN:if(r.have>=6&&r.left>=258){RESTORE(r),inflate_fast(e,o),LOAD(e,r),n.mode==TYPE&&(n.back=-1);break}for(n.back=0;!((s=n.codes[n.lencode+BITS(r,n.lenbits)]).bits<=r.bits);)if(!PULLBYTE(r))break e;if(s.op&&0==(240&s.op)){for(l=s;s=n.codes[n.lencode+l.val+(BITS(r,l.bits+l.op)>>>l.bits)],!(l.bits+s.bits<=r.bits);)if(!PULLBYTE(r))break e;DROPBITS(r,l.bits),n.back+=l.bits}if(DROPBITS(r,s.bits),n.back+=s.bits,n.length=s.val,0==s.op){n.mode=LIT;break}if(32&s.op){n.back=-1,n.mode=TYPE;break}if(64&s.op){e.msg="invalid literal/length code",n.mode=BAD;break}n.extra=15&s.op,n.mode=LENEXT;case LENEXT:if(n.extra){if(!NEEDBITS(r,n.extra))break e;n.length+=BITS(r,n.extra),DROPBITS(r,n.extra),n.back+=n.extra}n.was=n.length,n.mode=DIST;case DIST:for(;!((s=n.codes[n.distcode+BITS(r,n.distbits)]).bits<=r.bits);)if(!PULLBYTE(r))break e;if(0==(240&s.op)){for(l=s;s=n.codes[n.distcode+l.val+(BITS(r,l.bits+l.op)>>>l.bits)],!(l.bits+s.bits<=r.bits);)if(!PULLBYTE(r))break e;DROPBITS(r,l.bits),n.back+=l.bits}if(DROPBITS(r,s.bits),n.back+=s.bits,64&s.op){e.msg="invalid distance code",n.mode=BAD;break}n.offset=s.val,n.extra=15&s.op,n.mode=DISTEXT;case DISTEXT:if(n.extra){if(!NEEDBITS(r,n.extra))break e;n.offset+=BITS(r,n.extra),DROPBITS(r,n.extra),n.back+=n.extra}n.mode=MATCH;case MATCH:if(0==r.left)break e;if(i=o-r.left,n.offset>i){if((i=n.offset-i)>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=BAD;break}i>n.wnext?(i-=n.wnext,d=n.wsize-i,p=-1):(d=n.wnext-i,p=-1),i>n.length&&(i=n.length)}else d=-1,p=e.next_out-n.offset,i=n.length;if(i>r.left&&(i=r.left),r.left-=i,n.length-=i,d>=0)e.output_data+=n.window.substring(d,d+i),e.next_out+=i,i=0;else{e.next_out+=i;do{e.output_data+=e.output_data.charAt(p++)}while(--i)}0==n.length&&(n.mode=LEN);break;case LIT:if(0==r.left)break e;e.output_data+=String.fromCharCode(n.length),e.next_out++,r.left--,n.mode=LEN;break;case CHECK:if(n.wrap){if(!NEEDBITS(r,32))break e;if(o-=r.left,e.total_out+=o,n.total+=o,o&&(e.adler=n.check=e.checksum_function(n.check,e.output_data,e.output_data.length-o,o)),o=r.left,(n.flags?r.hold:REVERSE(r.hold))!=n.check){e.msg="incorrect data check",n.mode=BAD;break}INITBITS(r)}n.mode=LENGTH;case LENGTH:if(n.wrap&&n.flags){if(!NEEDBITS(r,32))break e;if(r.hold!=(4294967295&n.total)){e.msg="incorrect length check",n.mode=BAD;break}INITBITS(r)}n.mode=DONE;case DONE:c=ZLIB.Z_STREAM_END;break e;case BAD:c=ZLIB.Z_DATA_ERROR;break e;case MEM:return ZLIB.Z_MEM_ERROR;default:return ZLIB.Z_STREAM_ERROR}return RESTORE(r),(n.wsize||o!=e.avail_out&&n.mode<BAD&&(n.mode<CHECK||t!=ZLIB.Z_FINISH))&&updatewindow(e)?(n.mode=MEM,ZLIB.Z_MEM_ERROR):(a-=e.avail_in,o-=e.avail_out,e.total_in+=a,e.total_out+=o,n.total+=o,n.wrap&&o&&(e.adler=n.check=e.checksum_function(n.check,e.output_data,0,e.output_data.length)),e.data_type=n.bits+(n.last?64:0)+(n.mode==TYPE?128:0)+(n.mode==LEN_||n.mode==COPY_?256:0),(0==a&&0==o||t==ZLIB.Z_FINISH)&&c==ZLIB.Z_OK&&(c=ZLIB.Z_BUF_ERROR),c)},ZLIB.inflateEnd=function(e){return e&&e.state?(e.state.window=null,e.state=null,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.z_stream.prototype.inflate=function(e,t){var n,r;this.input_data=e,this.next_in=getarg(t,"next_in",0),this.avail_in=getarg(t,"avail_in",e.length-this.next_in),n=getarg(t,"flush",ZLIB.Z_SYNC_FLUSH),r=getarg(t,"avail_out",-1);var a="";do{if(this.avail_out=r>=0?r:16384,this.output_data="",this.next_out=0,this.error=ZLIB.inflate(this,n),0!=this.error&&console.log("zlib error",this.error),r>=0)return this.output_data;if(a+=this.output_data,this.avail_out>0)break}while(this.error==ZLIB.Z_OK);return a},ZLIB.z_stream.prototype.inflateReset=function(e){return ZLIB.inflateReset(this,e)}}(),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-adler32.js"),BASE=65521,NMAX=5552,ZLIB.adler32=function(e,t,n,r){return"string"==typeof t?function(e,t,n,r){var a,o;if(a=e>>>16&65535,e&=65535,1==r)return(e+=255&t.charCodeAt(n))>=BASE&&(e-=BASE),(a+=e)>=BASE&&(a-=BASE),e|a<<16;if(null===t)return 1;if(r<16){for(;r--;)a+=e+=255&t.charCodeAt(n++);return e>=BASE&&(e-=BASE),e|(a%=BASE)<<16}for(;r>=NMAX;){r-=NMAX,o=347;do{a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++)}while(--o);e%=BASE,a%=BASE}if(r){for(;r>=16;)r-=16,a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++),a+=e+=255&t.charCodeAt(n++);for(;r--;)a+=e+=255&t.charCodeAt(n++);e%=BASE,a%=BASE}return e|a<<16}(e,t,n,r):function(e,t,n,r){var a,o;if(a=e>>>16&65535,e&=65535,1==r)return(e+=t[n])>=BASE&&(e-=BASE),(a+=e)>=BASE&&(a-=BASE),e|a<<16;if(null===t)return 1;if(r<16){for(;r--;)a+=e+=t[n++];return e>=BASE&&(e-=BASE),e|(a%=BASE)<<16}for(;r>=NMAX;){r-=NMAX,o=347;do{a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++]}while(--o);e%=BASE,a%=BASE}if(r){for(;r>=16;)r-=16,a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++],a+=e+=t[n++];for(;r--;)a+=e+=t[n++];e%=BASE,a%=BASE}return e|a<<16}(e,t,n,r)},ZLIB.adler32_combine=function(e,t,n){var r,a,o;return n<0?4294967295:(a=(o=n%=BASE)*(r=65535&e),a%=BASE,(r+=(65535&t)+BASE-1)>=BASE&&(r-=BASE),r>=BASE&&(r-=BASE),(a+=(e>>16&65535)+(t>>16&65535)+BASE-o)>=131042&&(a-=131042),a>=BASE&&(a-=BASE),r|a<<16)},void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-crc32.js"),function(){var e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function t(e,t){var n,r=0;for(n=0;t;)1&t&&(n^=e[r]),t>>=1,r++;return n}function n(e,n){var r;for(r=0;r<32;r++)e[r]=t(n,n[r])}ZLIB.crc32=function(t,n,r,a){return"string"==typeof n?function(t,n,r,a){if(null==n)return 0;for(t^=4294967295;a>=8;)t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,t=e[255&(t^n.charCodeAt(r++))]^t>>>8,a-=8;if(a)do{t=e[255&(t^n.charCodeAt(r++))]^t>>>8}while(--a);return 4294967295^t}(t,n,r,a):function(t,n,r,a){if(null==n)return 0;for(t^=4294967295;a>=8;)t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,t=e[255&(t^n[r++])]^t>>>8,a-=8;if(a)do{t=e[255&(t^n[r++])]^t>>>8}while(--a);return 4294967295^t}(t,n,r,a)},ZLIB.crc32_combine=function(e,r,a){var o,i,s,l;if(a<=0)return e;for(s=new Array(32),(l=new Array(32))[0]=3988292384,i=1,o=1;o<32;o++)l[o]=i,i<<=1;n(s,l),n(l,s);do{if(n(s,l),1&a&&(e=t(s,e)),0==(a>>=1))break;n(l,s),1&a&&(e=t(l,e)),a>>=1}while(0!=a);return e^r}}(),module.exports=ZLIB}},__webpack_module_cache__={};function __nested_webpack_require_78403__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__nested_webpack_require_78403__),n.exports}__nested_webpack_require_78403__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_78403__.d(t,{a:t}),t},__nested_webpack_require_78403__.d=(e,t)=>{for(var n in t)__nested_webpack_require_78403__.o(t,n)&&!__nested_webpack_require_78403__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__nested_webpack_require_78403__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_78403__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_78403__.r(__webpack_exports__),__nested_webpack_require_78403__.d(__webpack_exports__,{AMTDesktop:()=>e.r,AMTKeyCodeConverter:()=>p.qD,AMTKvmDataRedirector:()=>t.N,AMTRedirector:()=>n.K,AmtTerminal:()=>r.r,CommsHelper:()=>p.Xn,ConsoleLogger:()=>a.k,DataProcessor:()=>c.$,Desktop:()=>i.H,Encoding:()=>d.ez,FrameBufferBellServerCutText:()=>d.Ut,HandshakeState:()=>d.wW,ImageHelper:()=>p.jw,KeyBoardHelper:()=>p.EB,LogLevel:()=>u.i,MouseHelper:()=>p.xx,Protocol:()=>n.b,RLEDecoder:()=>c.X,SecurityOptions:()=>d.ll,SecurityResponse:()=>d.mC,ServerInit:()=>d.Cu,StateProcessorFactory:()=>s.v,TerminalDataProcessor:()=>l.Q,TypeConverter:()=>o.r,isTruthy:()=>p.fQ});var e=__nested_webpack_require_78403__(166),t=__nested_webpack_require_78403__(59),n=__nested_webpack_require_78403__(503),r=__nested_webpack_require_78403__(277),a=__nested_webpack_require_78403__(237),o=__nested_webpack_require_78403__(565),i=__nested_webpack_require_78403__(46),s=__nested_webpack_require_78403__(989),l=__nested_webpack_require_78403__(155),u=__nested_webpack_require_78403__(201),c=__nested_webpack_require_78403__(646),d=__nested_webpack_require_78403__(389),p=__nested_webpack_require_78403__(8)})(),__webpack_exports__})()},module.exports=e()},648:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".button{margin-right:3px;padding:2px;min-width:90px}","",{version:3,sources:["webpack://./src/reactjs/KVM/ConnectButton.scss"],names:[],mappings:"AAKA,QACI,gBAAA,CACA,WAAA,CACA,cAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n\n.button{\n    margin-right: 3px;\n    padding: 2px;\n    min-width: 90px\n}"],sourceRoot:""}]);const s=i},625:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".encoding{margin-left:10px}.encoding label{padding:2px;font-size:15px}.encoding select{padding:2px 0}.reldisabled{opacity:.5}","",{version:3,sources:["webpack://./src/reactjs/KVM/EncodingOptions.scss"],names:[],mappings:"AAKA,UACI,gBAAA,CAEF,gBACE,WAAA,CACA,cAAA,CAEF,iBACE,aAAA,CAGF,aACE,UAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n.encoding {\n    margin-left: 10px;\n  }\n  .encoding label {      \n    padding: 2px;\n    font-size: 15px;\n  }\n  .encoding select {\n    padding: 2px 0;\n  }\n  \n  .reldisabled{\n    opacity: 0.5;\n  }"],sourceRoot:""}]);const s=i},734:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".header{background-color:#a9a9a9;padding:5px;font-size:13px}","",{version:3,sources:["webpack://./src/reactjs/KVM/Header.scss"],names:[],mappings:"AAKA,QACE,wBAAA,CACA,WAAA,CACA,cAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n.header {\n  background-color: darkgray;\n  padding: 5px;\n  font-size: 13px;\n}\n"],sourceRoot:""}]);const s=i},250:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".canvas{max-height:90%;max-width:100%}","",{version:3,sources:["webpack://./src/reactjs/KVM/PureCanvas.scss"],names:[],mappings:"AAKA,QACI,cAAA,CACA,cAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n.canvas{\n    max-height: 90%;\n    max-width: 100%;\n}\n"],sourceRoot:""}]);const s=i},917:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,"*{margin:0;padding:0;box-sizing:border-box}.canvas-container{height:100vh;text-align:center;background-color:#fff}","",{version:3,sources:["webpack://./src/reactjs/KVM/UI.scss"],names:[],mappings:"AAKA,EACI,QAAA,CACA,SAAA,CACA,qBAAA,CAGJ,kBACG,YAAA,CACA,iBAAA,CACA,qBAAA",sourcesContent:["/*********************************************************************\n * Copyright (c) Intel Corporation 2019\n * SPDX-License-Identifier: Apache-2.0\n **********************************************************************/\n \n*{ // * refers every element and removes default margin  padding that comes with html elements body, h1 etc\n    margin:0;\n    padding:0;\n    box-sizing: border-box; //element padding and border are included in the width and height\n}\n\n.canvas-container{\n   height: 100vh; \n   text-align: center;\n   background-color: #ffffff;\n}\n"],sourceRoot:""}]);const s=i},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(s[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},h={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var m=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function y(e,t,n,r){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(h,e)||!d.call(f,e)&&(p.test(e)?h[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(m,b);v[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(m,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(m,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var S=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),C=Symbol.for("react.fragment"),_=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),T=Symbol.for("react.context"),A=Symbol.for("react.forward_ref"),I=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),P=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=O&&e[O]||e["@@iterator"])?e:null}var M,B=Object.assign;function F(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var j=!1;function z(e,t){if(!e||j)return"";j=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,s=o.length-1;1<=i&&0<=s&&a[i]!==o[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==o[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==o[s]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=s);break}}}finally{j=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function U(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return z(e.type,!1);case 11:return z(e.type.render,!1);case 1:return z(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case k:return"Portal";case x:return"Profiler";case _:return"StrictMode";case I:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case A:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case P:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function V(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===_?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function K(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function Z(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $(e){e._valueTracker||(e._valueTracker=function(e){var t=Z(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Z(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function W(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return B({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&y(e,"checked",t,!1)}function G(e,t){Q(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&W(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return B({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function oe(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ve(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ge(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(fe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var me=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(me[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function ye(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Se=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ce=null,_e=null;function xe(e){if(e=ga(e)){if("function"!=typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=ma(t),ke(e.stateNode,e.type,t))}}function Ee(e){Ce?_e?_e.push(e):_e=[e]:Ce=e}function Te(){if(Ce){var e=Ce,t=_e;if(_e=Ce=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Ae(e,t){return e(t)}function Ie(){}var Ne=!1;function Pe(e,t,n){if(Ne)return e(t,n);Ne=!0;try{return Ae(e,t,n)}finally{Ne=!1,(null!==Ce||null!==_e)&&(Ie(),Te())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=ma(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var De=!1;if(c)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ce){De=!1}function Le(e,t,n,r,a,o,i,s,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Me=!1,Be=null,Fe=!1,je=null,ze={onError:function(e){Me=!0,Be=e}};function Ue(e,t,n,r,a,o,i,s,l){Me=!1,Be=null,Le.apply(ze,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ve(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ke(e){if(He(e)!==e)throw Error(o(188))}function Ze(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Ke(a),e;if(i===r)return Ke(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var s=!1,l=a.child;l;){if(l===n){s=!0,n=a,r=i;break}if(l===r){s=!0,r=a,n=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===n){s=!0,n=i,r=a;break}if(l===r){s=!0,r=i,n=a;break}l=l.sibling}if(!s)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?$e(e):null}function $e(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=$e(e);if(null!==t)return t;e=e.sibling}return null}var qe=a.unstable_scheduleCallback,We=a.unstable_cancelCallback,Xe=a.unstable_shouldYield,Ye=a.unstable_requestPaint,Qe=a.unstable_now,Ge=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=(a.unstable_LowPriority,a.unstable_IdlePriority),rt=null,at=null,ot=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(it(e)/st|0)|0},it=Math.log,st=Math.LN2,lt=64,ut=4194304;function ct(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&n;if(0!==i){var s=i&~a;0!==s?r=ct(s):0!=(o&=i)&&(r=ct(o))}else 0!=(i=n&~a)?r=ct(i):0!==o&&(r=ct(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-ot(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function vt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var mt=0;function bt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var yt,St,wt,kt,Ct,_t=!1,xt=[],Et=null,Tt=null,At=null,It=new Map,Nt=new Map,Pt=[],Rt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Dt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":Tt=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":It.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Nt.delete(t.pointerId)}}function Ot(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&null!==(t=ga(t))&&St(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Lt(e){var t=ha(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ve(n)))return e.blockedOn=t,void Ct(e.priority,(function(){wt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ga(n))&&St(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);Se=r,n.target.dispatchEvent(r),Se=null,t.shift()}return!0}function Bt(e,t,n){Mt(e)&&n.delete(t)}function Ft(){_t=!1,null!==Et&&Mt(Et)&&(Et=null),null!==Tt&&Mt(Tt)&&(Tt=null),null!==At&&Mt(At)&&(At=null),It.forEach(Bt),Nt.forEach(Bt)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ft)))}function zt(e){function t(t){return jt(t,e)}if(0<xt.length){jt(xt[0],e);for(var n=1;n<xt.length;n++){var r=xt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Et&&jt(Et,e),null!==Tt&&jt(Tt,e),null!==At&&jt(At,e),It.forEach(t),Nt.forEach(t),n=0;n<Pt.length;n++)(r=Pt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Pt.length&&null===(n=Pt[0]).blockedOn;)Lt(n),null===n.blockedOn&&Pt.shift()}var Ut=S.ReactCurrentBatchConfig;function Ht(e,t,n,r){var a=mt,o=Ut.transition;Ut.transition=null;try{mt=1,Kt(e,t,n,r)}finally{mt=a,Ut.transition=o}}function Vt(e,t,n,r){var a=mt,o=Ut.transition;Ut.transition=null;try{mt=4,Kt(e,t,n,r)}finally{mt=a,Ut.transition=o}}function Kt(e,t,n,r){var a=$t(e,t,n,r);if(null===a)Ur(e,t,r,Zt,n),Dt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Et=Ot(Et,e,t,n,r,a),!0;case"dragenter":return Tt=Ot(Tt,e,t,n,r,a),!0;case"mouseover":return At=Ot(At,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return It.set(o,Ot(It.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Nt.set(o,Ot(Nt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Dt(e,r),4&t&&-1<Rt.indexOf(e)){for(;null!==a;){var o=ga(a);if(null!==o&&yt(o),null===(o=$t(e,t,n,r))&&Ur(e,t,r,Zt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else Ur(e,t,r,null,n)}var Zt=null;function $t(e,t,n,r){if(Zt=null,null!==(e=ha(e=we(r))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ve(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Zt=e,null}function qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ge()){case Je:return 1;case et:return 4;default:return 16;case nt:return 536870912}default:return 16}}var Wt=null,Xt=null,Yt=null;function Qt(){if(Yt)return Yt;var e,t,n=Xt,r=n.length,a="value"in Wt?Wt.value:Wt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return Yt=a.slice(e,1<t?1-t:void 0)}function Gt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function Jt(){return!0}function en(){return!1}function tn(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?Jt:en,this.isPropagationStopped=en,this}return B(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Jt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Jt)},persist:function(){},isPersistent:Jt}),t}var nn,rn,an,on={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=tn(on),ln=B({},on,{view:0,detail:0}),un=tn(ln),cn=B({},ln,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==an&&(an&&"mousemove"===e.type?(nn=e.screenX-an.screenX,rn=e.screenY-an.screenY):rn=nn=0,an=e),nn)},movementY:function(e){return"movementY"in e?e.movementY:rn}}),dn=tn(cn),pn=tn(B({},cn,{dataTransfer:0})),fn=tn(B({},ln,{relatedTarget:0})),hn=tn(B({},on,{animationName:0,elapsedTime:0,pseudoElement:0})),gn=B({},on,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=tn(gn),mn=tn(B({},on,{data:0})),bn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},yn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function kn(){return wn}var Cn=B({},ln,{key:function(e){if(e.key){var t=bn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Gt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?yn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kn,charCode:function(e){return"keypress"===e.type?Gt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Gt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_n=tn(Cn),xn=tn(B({},cn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),En=tn(B({},ln,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kn})),Tn=tn(B({},on,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=B({},cn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),In=tn(An),Nn=[9,13,27,32],Pn=c&&"CompositionEvent"in window,Rn=null;c&&"documentMode"in document&&(Rn=document.documentMode);var Dn=c&&"TextEvent"in window&&!Rn,On=c&&(!Pn||Rn&&8<Rn&&11>=Rn),Ln=String.fromCharCode(32),Mn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Nn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Fn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jn=!1,zn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!zn[e.type]:"textarea"===t}function Hn(e,t,n,r){Ee(r),0<(t=Vr(t,"onChange")).length&&(n=new sn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,Kn=null;function Zn(e){Lr(e,0)}function $n(e){if(q(va(e)))return e}function qn(e,t){if("change"===e)return t}var Wn=!1;if(c){var Xn;if(c){var Yn="oninput"in document;if(!Yn){var Qn=document.createElement("div");Qn.setAttribute("oninput","return;"),Yn="function"==typeof Qn.oninput}Xn=Yn}else Xn=!1;Wn=Xn&&(!document.documentMode||9<document.documentMode)}function Gn(){Vn&&(Vn.detachEvent("onpropertychange",Jn),Kn=Vn=null)}function Jn(e){if("value"===e.propertyName&&$n(Kn)){var t=[];Hn(t,Kn,e,we(e)),Pe(Zn,t)}}function er(e,t,n){"focusin"===e?(Gn(),Kn=n,(Vn=t).attachEvent("onpropertychange",Jn)):"focusout"===e&&Gn()}function tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return $n(Kn)}function nr(e,t){if("click"===e)return $n(t)}function rr(e,t){if("input"===e||"change"===e)return $n(t)}var ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function or(e,t){if(ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!ar(e[a],t[a]))return!1}return!0}function ir(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=ir(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ir(r)}}function lr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?lr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ur(){for(var e=window,t=W();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=W((e=t.contentWindow).document)}return t}function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function dr(e){var t=ur(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&lr(n.ownerDocument.documentElement,n)){if(null!==r&&cr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=sr(n,o);var i=sr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var pr=c&&"documentMode"in document&&11>=document.documentMode,fr=null,hr=null,gr=null,vr=!1;function mr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==fr||fr!==W(r)||(r="selectionStart"in(r=fr)&&cr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&or(gr,r)||(gr=r,0<(r=Vr(hr,"onSelect")).length&&(t=new sn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=fr)))}function br(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var yr={animationend:br("Animation","AnimationEnd"),animationiteration:br("Animation","AnimationIteration"),animationstart:br("Animation","AnimationStart"),transitionend:br("Transition","TransitionEnd")},Sr={},wr={};function kr(e){if(Sr[e])return Sr[e];if(!yr[e])return e;var t,n=yr[e];for(t in n)if(n.hasOwnProperty(t)&&t in wr)return Sr[e]=n[t];return e}c&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete yr.animationend.animation,delete yr.animationiteration.animation,delete yr.animationstart.animation),"TransitionEvent"in window||delete yr.transitionend.transition);var Cr=kr("animationend"),_r=kr("animationiteration"),xr=kr("animationstart"),Er=kr("transitionend"),Tr=new Map,Ar="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ir(e,t){Tr.set(e,t),l(t,[e])}for(var Nr=0;Nr<Ar.length;Nr++){var Pr=Ar[Nr];Ir(Pr.toLowerCase(),"on"+(Pr[0].toUpperCase()+Pr.slice(1)))}Ir(Cr,"onAnimationEnd"),Ir(_r,"onAnimationIteration"),Ir(xr,"onAnimationStart"),Ir("dblclick","onDoubleClick"),Ir("focusin","onFocus"),Ir("focusout","onBlur"),Ir(Er,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Rr));function Or(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,s,l,u){if(Ue.apply(this,arguments),Me){if(!Me)throw Error(o(198));var c=Be;Me=!1,Be=null,Fe||(Fe=!0,je=c)}}(r,t,void 0,e),e.currentTarget=null}function Lr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var s=r[i],l=s.instance,u=s.currentTarget;if(s=s.listener,l!==o&&a.isPropagationStopped())break e;Or(a,s,u),o=l}else for(i=0;i<r.length;i++){if(l=(s=r[i]).instance,u=s.currentTarget,s=s.listener,l!==o&&a.isPropagationStopped())break e;Or(a,s,u),o=l}}}if(Fe)throw e=je,Fe=!1,je=null,e}function Mr(e,t){var n=t[da];void 0===n&&(n=t[da]=new Set);var r=e+"__bubble";n.has(r)||(zr(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),zr(n,e,r,t)}var Fr="_reactListening"+Math.random().toString(36).slice(2);function jr(e){if(!e[Fr]){e[Fr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Dr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Fr]||(t[Fr]=!0,Br("selectionchange",!1,t))}}function zr(e,t,n,r){switch(qt(t)){case 1:var a=Ht;break;case 4:a=Vt;break;default:a=Kt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Ur(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=ha(s)))return;if(5===(l=i.tag)||6===l){r=o=i;continue e}s=s.parentNode}}r=r.return}Pe((function(){var r=o,a=we(n),i=[];e:{var s=Tr.get(e);if(void 0!==s){var l=sn,u=e;switch(e){case"keypress":if(0===Gt(n))break e;case"keydown":case"keyup":l=_n;break;case"focusin":u="focus",l=fn;break;case"focusout":u="blur",l=fn;break;case"beforeblur":case"afterblur":l=fn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=dn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=En;break;case Cr:case _r:case xr:l=hn;break;case Er:l=Tn;break;case"scroll":l=un;break;case"wheel":l=In;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=xn}var c=0!=(4&t),d=!c&&"scroll"===e,p=c?null!==s?s+"Capture":null:s;c=[];for(var f,h=r;null!==h;){var g=(f=h).stateNode;if(5===f.tag&&null!==g&&(f=g,null!==p&&null!=(g=Re(h,p))&&c.push(Hr(h,g,f))),d)break;h=h.return}0<c.length&&(s=new l(s,u,null,n,a),i.push({event:s,listeners:c}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===Se||!(u=n.relatedTarget||n.fromElement)||!ha(u)&&!u[ca])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ha(u):null)&&(u!==(d=He(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=dn,g="onMouseLeave",p="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=xn,g="onPointerLeave",p="onPointerEnter",h="pointer"),d=null==l?s:va(l),f=null==u?s:va(u),(s=new c(g,h+"leave",l,n,a)).target=d,s.relatedTarget=f,g=null,ha(a)===r&&((c=new c(p,h+"enter",u,n,a)).target=f,c.relatedTarget=d,g=c),d=g,l&&u)e:{for(p=u,h=0,f=c=l;f;f=Kr(f))h++;for(f=0,g=p;g;g=Kr(g))f++;for(;0<h-f;)c=Kr(c),h--;for(;0<f-h;)p=Kr(p),f--;for(;h--;){if(c===p||null!==p&&c===p.alternate)break e;c=Kr(c),p=Kr(p)}c=null}else c=null;null!==l&&Zr(i,s,l,c,!1),null!==u&&null!==d&&Zr(i,d,u,c,!0)}if("select"===(l=(s=r?va(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var v=qn;else if(Un(s))if(Wn)v=rr;else{v=tr;var m=er}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(v=nr);switch(v&&(v=v(e,r))?Hn(i,v,n,a):(m&&m(e,s,r),"focusout"===e&&(m=s._wrapperState)&&m.controlled&&"number"===s.type&&ee(s,"number",s.value)),m=r?va(r):window,e){case"focusin":(Un(m)||"true"===m.contentEditable)&&(fr=m,hr=r,gr=null);break;case"focusout":gr=hr=fr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,mr(i,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":mr(i,n,a)}var b;if(Pn)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else jn?Bn(e,n)&&(y="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(y="onCompositionStart");y&&(On&&"ko"!==n.locale&&(jn||"onCompositionStart"!==y?"onCompositionEnd"===y&&jn&&(b=Qt()):(Xt="value"in(Wt=a)?Wt.value:Wt.textContent,jn=!0)),0<(m=Vr(r,y)).length&&(y=new mn(y,e,null,n,a),i.push({event:y,listeners:m}),(b||null!==(b=Fn(n)))&&(y.data=b))),(b=Dn?function(e,t){switch(e){case"compositionend":return Fn(t);case"keypress":return 32!==t.which?null:(Mn=!0,Ln);case"textInput":return(e=t.data)===Ln&&Mn?null:e;default:return null}}(e,n):function(e,t){if(jn)return"compositionend"===e||!Pn&&Bn(e,t)?(e=Qt(),Yt=Xt=Wt=null,jn=!1,e):null;switch(e){default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return On&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Vr(r,"onBeforeInput")).length&&(a=new mn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b)}Lr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Vr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Re(e,n))&&r.unshift(Hr(e,o,a)),null!=(o=Re(e,t))&&r.push(Hr(e,o,a))),e=e.return}return r}function Kr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Zr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var s=n,l=s.alternate,u=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==u&&(s=u,a?null!=(l=Re(n,o))&&i.unshift(Hr(n,l,s)):a||null!=(l=Re(n,o))&&i.push(Hr(n,l,s))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var $r=/\r\n?/g,qr=/\u0000|\uFFFD/g;function Wr(e){return("string"==typeof e?e:""+e).replace($r,"\n").replace(qr,"")}function Xr(e,t,n){if(t=Wr(t),Wr(e)!==t&&n)throw Error(o(425))}function Yr(){}var Qr=null;function Gr(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Jr="function"==typeof setTimeout?setTimeout:void 0,ea="function"==typeof clearTimeout?clearTimeout:void 0,ta="function"==typeof Promise?Promise:void 0,na="function"==typeof queueMicrotask?queueMicrotask:void 0!==ta?function(e){return ta.resolve(null).then(e).catch(ra)}:Jr;function ra(e){setTimeout((function(){throw e}))}function aa(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void zt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);zt(t)}function oa(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ia(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var sa=Math.random().toString(36).slice(2),la="__reactFiber$"+sa,ua="__reactProps$"+sa,ca="__reactContainer$"+sa,da="__reactEvents$"+sa,pa="__reactListeners$"+sa,fa="__reactHandles$"+sa;function ha(e){var t=e[la];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ca]||n[la]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ia(e);null!==e;){if(n=e[la])return n;e=ia(e)}return t}n=(e=n).parentNode}return null}function ga(e){return!(e=e[la]||e[ca])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function va(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ma(e){return e[ua]||null}var ba=[],ya=-1;function Sa(e){return{current:e}}function wa(e){0>ya||(e.current=ba[ya],ba[ya]=null,ya--)}function ka(e,t){ya++,ba[ya]=e.current,e.current=t}var Ca={},_a=Sa(Ca),xa=Sa(!1),Ea=Ca;function Ta(e,t){var n=e.type.contextTypes;if(!n)return Ca;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Aa(e){return null!=e.childContextTypes}function Ia(){wa(xa),wa(_a)}function Na(e,t,n){if(_a.current!==Ca)throw Error(o(168));ka(_a,t),ka(xa,n)}function Pa(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(o(108,V(e)||"Unknown",a));return B({},n,r)}function Ra(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ca,Ea=_a.current,ka(_a,e),ka(xa,xa.current),!0}function Da(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Pa(e,t,Ea),r.__reactInternalMemoizedMergedChildContext=e,wa(xa),wa(_a),ka(_a,e)):wa(xa),ka(xa,n)}var Oa=null,La=!1,Ma=!1;function Ba(e){null===Oa?Oa=[e]:Oa.push(e)}function Fa(){if(!Ma&&null!==Oa){Ma=!0;var e=0,t=mt;try{var n=Oa;for(mt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Oa=null,La=!1}catch(t){throw null!==Oa&&(Oa=Oa.slice(e+1)),qe(Je,Fa),t}finally{mt=t,Ma=!1}}return null}var ja=S.ReactCurrentBatchConfig;function za(e,t){if(e&&e.defaultProps){for(var n in t=B({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ua=Sa(null),Ha=null,Va=null,Ka=null;function Za(){Ka=Va=Ha=null}function $a(e){var t=Ua.current;wa(Ua),e._currentValue=t}function qa(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Wa(e,t){Ha=e,Ka=Va=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(vs=!0),e.firstContext=null)}function Xa(e){var t=e._currentValue;if(Ka!==e)if(e={context:e,memoizedValue:t,next:null},null===Va){if(null===Ha)throw Error(o(308));Va=e,Ha.dependencies={lanes:0,firstContext:e}}else Va=Va.next=e;return t}var Ya=null,Qa=!1;function Ga(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ja(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function eo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function to(e,t){var n=e.updateQueue;null!==n&&(n=n.shared,null!==vl&&0!=(1&e.mode)&&0==(2&gl)?(null===(e=n.interleaved)?(t.next=t,null===Ya?Ya=[n]:Ya.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t))}function no(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}function ro(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ao(e,t,n,r){var a=e.updateQueue;Qa=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,u=l.next;l.next=null,null===i?o=u:i.next=u,i=l;var c=e.alternate;null!==c&&(s=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===s?c.firstBaseUpdate=u:s.next=u,c.lastBaseUpdate=l)}if(null!==o){var d=a.baseState;for(i=0,c=u=l=null,s=o;;){var p=s.lane,f=s.eventTime;if((r&p)===p){null!==c&&(c=c.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var h=e,g=s;switch(p=t,f=n,g.tag){case 1:if("function"==typeof(h=g.payload)){d=h.call(f,d,p);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(p="function"==typeof(h=g.payload)?h.call(f,d,p):h))break e;d=B({},d,p);break e;case 2:Qa=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[s]:p.push(s))}else f={eventTime:f,lane:p,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===c?(u=c=f,l=d):c=c.next=f,i|=p;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(p=s).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Cl|=i,e.lanes=i,e.memoizedState=d}}function oo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var io=(new r.Component).refs;function so(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:B({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var lo={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=zl(),a=Ul(e),o=eo(r,a);o.payload=t,null!=n&&(o.callback=n),to(e,o),null!==(t=Hl(e,a,r))&&no(t,e,a)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=zl(),a=Ul(e),o=eo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),to(e,o),null!==(t=Hl(e,a,r))&&no(t,e,a)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=zl(),r=Ul(e),a=eo(n,r);a.tag=2,null!=t&&(a.callback=t),to(e,a),null!==(t=Hl(e,r,n))&&no(t,e,r)}};function uo(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&or(n,r)&&or(a,o))}function co(e,t,n){var r=!1,a=Ca,o=t.contextType;return"object"==typeof o&&null!==o?o=Xa(o):(a=Aa(t)?Ea:_a.current,o=(r=null!=(r=t.contextTypes))?Ta(e,a):Ca),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=lo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function po(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&lo.enqueueReplaceState(t,t.state,null)}function fo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=io,Ga(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=Xa(o):(o=Aa(t)?Ea:_a.current,a.context=Ta(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(so(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&lo.enqueueReplaceState(a,a.state,null),ao(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}var ho=[],go=0,vo=null,mo=0,bo=[],yo=0,So=null,wo=1,ko="";function Co(e,t){ho[go++]=mo,ho[go++]=vo,vo=e,mo=t}function _o(e,t,n){bo[yo++]=wo,bo[yo++]=ko,bo[yo++]=So,So=e;var r=wo;e=ko;var a=32-ot(r)-1;r&=~(1<<a),n+=1;var o=32-ot(t)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,wo=1<<32-ot(t)+a|n<<a|r,ko=o+e}else wo=1<<o|n<<a|r,ko=e}function xo(e){null!==e.return&&(Co(e,1),_o(e,1,0))}function Eo(e){for(;e===vo;)vo=ho[--go],ho[go]=null,mo=ho[--go],ho[go]=null;for(;e===So;)So=bo[--yo],bo[yo]=null,ko=bo[--yo],bo[yo]=null,wo=bo[--yo],bo[yo]=null}var To=null,Ao=null,Io=!1,No=null;function Po(e,t){var n=bu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function Ro(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,To=e,Ao=oa(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,To=e,Ao=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==So?{id:wo,overflow:ko}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=bu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,To=e,Ao=null,!0);default:return!1}}function Do(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function Oo(e){if(Io){var t=Ao;if(t){var n=t;if(!Ro(e,t)){if(Do(e))throw Error(o(418));t=oa(n.nextSibling);var r=To;t&&Ro(e,t)?Po(r,n):(e.flags=-4097&e.flags|2,Io=!1,To=e)}}else{if(Do(e))throw Error(o(418));e.flags=-4097&e.flags|2,Io=!1,To=e}}}function Lo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;To=e}function Mo(e){if(e!==To)return!1;if(!Io)return Lo(e),Io=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!Gr(e.type,e.memoizedProps)),t&&(t=Ao)){if(Do(e)){for(e=Ao;e;)e=oa(e.nextSibling);throw Error(o(418))}for(;t;)Po(e,t),t=oa(t.nextSibling)}if(Lo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ao=oa(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ao=null}}else Ao=To?oa(e.stateNode.nextSibling):null;return!0}function Bo(){Ao=To=null,Io=!1}function Fo(e){null===No?No=[e]:No.push(e)}function jo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;t===io&&(t=a.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function zo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Uo(e){return(0,e._init)(e._payload)}function Ho(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Su(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=_u(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var o=n.type;return o===C?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===R&&Uo(o)===t.type)?((r=a(t,n.props)).ref=jo(e,t,n),r.return=e,r):((r=wu(n.type,n.key,n.props,null,e.mode,r)).ref=jo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=xu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=ku(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=_u(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return(n=wu(t.type,t.key,t.props,null,e.mode,n)).ref=jo(e,null,t),n.return=e,n;case k:return(t=xu(t,e.mode,n)).return=e,t;case R:return p(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=ku(t,e.mode,n,null)).return=e,t;zo(e,t)}return null}function f(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?u(e,t,n,r):null;case k:return n.key===a?c(e,t,n,r):null;case R:return f(e,t,(a=n._init)(n._payload),r)}if(te(n)||L(n))return null!==a?null:d(e,t,n,r,null);zo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case R:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||L(r))return d(t,e=e.get(n)||null,r,a,null);zo(t,r)}return null}function g(a,o,s,l){for(var u=null,c=null,d=o,g=o=0,v=null;null!==d&&g<s.length;g++){d.index>g?(v=d,d=null):v=d.sibling;var m=f(a,d,s[g],l);if(null===m){null===d&&(d=v);break}e&&d&&null===m.alternate&&t(a,d),o=i(m,o,g),null===c?u=m:c.sibling=m,c=m,d=v}if(g===s.length)return n(a,d),Io&&Co(a,g),u;if(null===d){for(;g<s.length;g++)null!==(d=p(a,s[g],l))&&(o=i(d,o,g),null===c?u=d:c.sibling=d,c=d);return Io&&Co(a,g),u}for(d=r(a,d);g<s.length;g++)null!==(v=h(d,a,g,s[g],l))&&(e&&null!==v.alternate&&d.delete(null===v.key?g:v.key),o=i(v,o,g),null===c?u=v:c.sibling=v,c=v);return e&&d.forEach((function(e){return t(a,e)})),Io&&Co(a,g),u}function v(a,s,l,u){var c=L(l);if("function"!=typeof c)throw Error(o(150));if(null==(l=c.call(l)))throw Error(o(151));for(var d=c=null,g=s,v=s=0,m=null,b=l.next();null!==g&&!b.done;v++,b=l.next()){g.index>v?(m=g,g=null):m=g.sibling;var y=f(a,g,b.value,u);if(null===y){null===g&&(g=m);break}e&&g&&null===y.alternate&&t(a,g),s=i(y,s,v),null===d?c=y:d.sibling=y,d=y,g=m}if(b.done)return n(a,g),Io&&Co(a,v),c;if(null===g){for(;!b.done;v++,b=l.next())null!==(b=p(a,b.value,u))&&(s=i(b,s,v),null===d?c=b:d.sibling=b,d=b);return Io&&Co(a,v),c}for(g=r(a,g);!b.done;v++,b=l.next())null!==(b=h(g,a,v,b.value,u))&&(e&&null!==b.alternate&&g.delete(null===b.key?v:b.key),s=i(b,s,v),null===d?c=b:d.sibling=b,d=b);return e&&g.forEach((function(e){return t(a,e)})),Io&&Co(a,v),c}return function e(r,o,i,l){if("object"==typeof i&&null!==i&&i.type===C&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var u=i.key,c=o;null!==c;){if(c.key===u){if((u=i.type)===C){if(7===c.tag){n(r,c.sibling),(o=a(c,i.props.children)).return=r,r=o;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===R&&Uo(u)===c.type){n(r,c.sibling),(o=a(c,i.props)).ref=jo(r,c,i),o.return=r,r=o;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===C?((o=ku(i.props.children,r.mode,l,i.key)).return=r,r=o):((l=wu(i.type,i.key,i.props,null,r.mode,l)).ref=jo(r,o,i),l.return=r,r=l)}return s(r);case k:e:{for(c=i.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=xu(i,r.mode,l)).return=r,r=o}return s(r);case R:return e(r,o,(c=i._init)(i._payload),l)}if(te(i))return g(r,o,i,l);if(L(i))return v(r,o,i,l);zo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,i)).return=r,r=o):(n(r,o),(o=_u(i,r.mode,l)).return=r,r=o),s(r)):n(r,o)}}var Vo=Ho(!0),Ko=Ho(!1),Zo={},$o=Sa(Zo),qo=Sa(Zo),Wo=Sa(Zo);function Xo(e){if(e===Zo)throw Error(o(174));return e}function Yo(e,t){switch(ka(Wo,t),ka(qo,e),ka($o,Zo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}wa($o),ka($o,t)}function Qo(){wa($o),wa(qo),wa(Wo)}function Go(e){Xo(Wo.current);var t=Xo($o.current),n=le(t,e.type);t!==n&&(ka(qo,e),ka($o,n))}function Jo(e){qo.current===e&&(wa($o),wa(qo))}var ei=Sa(0);function ti(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ni=[];function ri(){for(var e=0;e<ni.length;e++)ni[e]._workInProgressVersionPrimary=null;ni.length=0}var ai=S.ReactCurrentDispatcher,oi=S.ReactCurrentBatchConfig,ii=0,si=null,li=null,ui=null,ci=!1,di=!1,pi=0,fi=0;function hi(){throw Error(o(321))}function gi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ar(e[n],t[n]))return!1;return!0}function vi(e,t,n,r,a,i){if(ii=i,si=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ai.current=null===e||null===e.memoizedState?Gi:Ji,e=n(r,a),di){i=0;do{if(di=!1,pi=0,25<=i)throw Error(o(301));i+=1,ui=li=null,t.updateQueue=null,ai.current=es,e=n(r,a)}while(di)}if(ai.current=Qi,t=null!==li&&null!==li.next,ii=0,ui=li=si=null,ci=!1,t)throw Error(o(300));return e}function mi(){var e=0!==pi;return pi=0,e}function bi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ui?si.memoizedState=ui=e:ui=ui.next=e,ui}function yi(){if(null===li){var e=si.alternate;e=null!==e?e.memoizedState:null}else e=li.next;var t=null===ui?si.memoizedState:ui.next;if(null!==t)ui=t,li=e;else{if(null===e)throw Error(o(310));e={memoizedState:(li=e).memoizedState,baseState:li.baseState,baseQueue:li.baseQueue,queue:li.queue,next:null},null===ui?si.memoizedState=ui=e:ui=ui.next=e}return ui}function Si(e,t){return"function"==typeof t?t(e):t}function wi(e){var t=yi(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=li,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var l=s=null,u=null,c=i;do{var d=c.lane;if((ii&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var p={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=p,s=r):u=u.next=p,si.lanes|=d,Cl|=d}c=c.next}while(null!==c&&c!==i);null===u?s=r:u.next=l,ar(r,t.memoizedState)||(vs=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,si.lanes|=i,Cl|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ki(e){var t=yi(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var s=a=a.next;do{i=e(i,s.action),s=s.next}while(s!==a);ar(i,t.memoizedState)||(vs=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Ci(){}function _i(e,t){var n=si,r=yi(),a=t(),i=!ar(r.memoizedState,a);if(i&&(r.memoizedState=a,vs=!0),r=r.queue,Li(Ti.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==ui&&1&ui.memoizedState.tag){if(n.flags|=2048,Ni(9,Ei.bind(null,n,r,a,t),void 0,null),null===vl)throw Error(o(349));0!=(30&ii)||xi(n,t,a)}return a}function xi(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=si.updateQueue)?(t={lastEffect:null,stores:null},si.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ei(e,t,n,r){t.value=n,t.getSnapshot=r,Ai(t)&&Hl(e,1,-1)}function Ti(e,t,n){return n((function(){Ai(t)&&Hl(e,1,-1)}))}function Ai(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ar(e,n)}catch(e){return!0}}function Ii(e){var t=bi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Si,lastRenderedState:e},t.queue=e,e=e.dispatch=$i.bind(null,si,e),[t.memoizedState,e]}function Ni(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=si.updateQueue)?(t={lastEffect:null,stores:null},si.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Pi(){return yi().memoizedState}function Ri(e,t,n,r){var a=bi();si.flags|=e,a.memoizedState=Ni(1|t,n,void 0,void 0===r?null:r)}function Di(e,t,n,r){var a=yi();r=void 0===r?null:r;var o=void 0;if(null!==li){var i=li.memoizedState;if(o=i.destroy,null!==r&&gi(r,i.deps))return void(a.memoizedState=Ni(t,n,o,r))}si.flags|=e,a.memoizedState=Ni(1|t,n,o,r)}function Oi(e,t){return Ri(8390656,8,e,t)}function Li(e,t){return Di(2048,8,e,t)}function Mi(e,t){return Di(4,2,e,t)}function Bi(e,t){return Di(4,4,e,t)}function Fi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ji(e,t,n){return n=null!=n?n.concat([e]):null,Di(4,4,Fi.bind(null,t,e),n)}function zi(){}function Ui(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&gi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Hi(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&gi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Vi(e,t){var n=mt;mt=0!==n&&4>n?n:4,e(!0);var r=oi.transition;oi.transition={};try{e(!1),t()}finally{mt=n,oi.transition=r}}function Ki(){return yi().memoizedState}function Zi(e,t,n){var r=Ul(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},qi(e)?Wi(t,n):(Xi(e,t,n),null!==(e=Hl(e,r,n=zl()))&&Yi(e,t,r))}function $i(e,t,n){var r=Ul(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(qi(e))Wi(t,a);else{Xi(e,t,a);var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,s=o(i,n);if(a.hasEagerState=!0,a.eagerState=s,ar(s,i))return}catch(e){}null!==(e=Hl(e,r,n=zl()))&&Yi(e,t,r)}}function qi(e){var t=e.alternate;return e===si||null!==t&&t===si}function Wi(e,t){di=ci=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Xi(e,t,n){null!==vl&&0!=(1&e.mode)&&0==(2&gl)?(null===(e=t.interleaved)?(n.next=n,null===Ya?Ya=[t]:Ya.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n)}function Yi(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}var Qi={readContext:Xa,useCallback:hi,useContext:hi,useEffect:hi,useImperativeHandle:hi,useInsertionEffect:hi,useLayoutEffect:hi,useMemo:hi,useReducer:hi,useRef:hi,useState:hi,useDebugValue:hi,useDeferredValue:hi,useTransition:hi,useMutableSource:hi,useSyncExternalStore:hi,useId:hi,unstable_isNewReconciler:!1},Gi={readContext:Xa,useCallback:function(e,t){return bi().memoizedState=[e,void 0===t?null:t],e},useContext:Xa,useEffect:Oi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ri(4194308,4,Fi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ri(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ri(4,2,e,t)},useMemo:function(e,t){var n=bi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=bi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Zi.bind(null,si,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},bi().memoizedState=e},useState:Ii,useDebugValue:zi,useDeferredValue:function(e){var t=Ii(e),n=t[0],r=t[1];return Oi((function(){var t=oi.transition;oi.transition={};try{r(e)}finally{oi.transition=t}}),[e]),n},useTransition:function(){var e=Ii(!1),t=e[0];return e=Vi.bind(null,e[1]),bi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=si,a=bi();if(Io){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===vl)throw Error(o(349));0!=(30&ii)||xi(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Oi(Ti.bind(null,r,i,e),[e]),r.flags|=2048,Ni(9,Ei.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=bi(),t=vl.identifierPrefix;if(Io){var n=ko;t=":"+t+"R"+(n=(wo&~(1<<32-ot(wo)-1)).toString(32)+n),0<(n=pi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=fi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Ji={readContext:Xa,useCallback:Ui,useContext:Xa,useEffect:Li,useImperativeHandle:ji,useInsertionEffect:Mi,useLayoutEffect:Bi,useMemo:Hi,useReducer:wi,useRef:Pi,useState:function(){return wi(Si)},useDebugValue:zi,useDeferredValue:function(e){var t=wi(Si),n=t[0],r=t[1];return Li((function(){var t=oi.transition;oi.transition={};try{r(e)}finally{oi.transition=t}}),[e]),n},useTransition:function(){return[wi(Si)[0],yi().memoizedState]},useMutableSource:Ci,useSyncExternalStore:_i,useId:Ki,unstable_isNewReconciler:!1},es={readContext:Xa,useCallback:Ui,useContext:Xa,useEffect:Li,useImperativeHandle:ji,useInsertionEffect:Mi,useLayoutEffect:Bi,useMemo:Hi,useReducer:ki,useRef:Pi,useState:function(){return ki(Si)},useDebugValue:zi,useDeferredValue:function(e){var t=ki(Si),n=t[0],r=t[1];return Li((function(){var t=oi.transition;oi.transition={};try{r(e)}finally{oi.transition=t}}),[e]),n},useTransition:function(){return[ki(Si)[0],yi().memoizedState]},useMutableSource:Ci,useSyncExternalStore:_i,useId:Ki,unstable_isNewReconciler:!1};function ts(e,t){try{var n="",r=t;do{n+=U(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ns(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var rs,as,os,is="function"==typeof WeakMap?WeakMap:Map;function ss(e,t,n){(n=eo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Nl||(Nl=!0,Pl=r),ns(0,t)},n}function ls(e,t,n){(n=eo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){ns(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){ns(0,t),"function"!=typeof r&&(null===Rl?Rl=new Set([this]):Rl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function us(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new is;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=pu.bind(null,e,t,n),t.then(e,e))}function cs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ds(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=eo(-1,1)).tag=2,to(n,t))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}function ps(e,t){if(!Io)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function fs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function hs(e,t,n){var r=t.pendingProps;switch(Eo(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return fs(t),null;case 1:case 17:return Aa(t.type)&&Ia(),fs(t),null;case 3:return r=t.stateNode,Qo(),wa(xa),wa(_a),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Mo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==No&&(ql(No),No=null))),fs(t),null;case 5:Jo(t);var a=Xo(Wo.current);if(n=t.type,null!==e&&null!=t.stateNode)as(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return fs(t),null}if(e=Xo($o.current),Mo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[la]=t,r[ua]=i,e=0!=(1&t.mode),n){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(a=0;a<Rr.length;a++)Mr(Rr[a],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":Y(r,i),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Mr("invalid",r);break;case"textarea":ae(r,i),Mr("invalid",r)}for(var l in be(n,i),a=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"==typeof u?r.textContent!==u&&(Xr(r.textContent,u,e),a=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(Xr(r.textContent,u,e),a=["children",""+u]):s.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Mr("scroll",r)}switch(n){case"input":$(r),J(r,i,!0);break;case"textarea":$(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Yr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[la]=t,e[ua]=r,rs(e,t),t.stateNode=e;e:{switch(l=ye(n,r),n){case"dialog":Mr("cancel",e),Mr("close",e),a=r;break;case"iframe":case"object":case"embed":Mr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Rr.length;a++)Mr(Rr[a],e);a=r;break;case"source":Mr("error",e),a=r;break;case"img":case"image":case"link":Mr("error",e),Mr("load",e),a=r;break;case"details":Mr("toggle",e),a=r;break;case"input":Y(e,r),a=X(e,r),Mr("invalid",e);break;default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=B({},r,{value:void 0}),Mr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Mr("invalid",e)}for(i in be(n,a),u=a)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ve(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===i?"string"==typeof c?("textarea"!==n||""!==c)&&pe(e,c):"number"==typeof c&&pe(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Mr("scroll",e):null!=c&&y(e,i,c,l))}switch(n){case"input":$(e),J(e,r,!1);break;case"textarea":$(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Yr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return fs(t),null;case 6:if(e&&null!=t.stateNode)os(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=Xo(Wo.current),Xo($o.current),Mo(t)){if(r=t.stateNode,n=t.memoizedProps,r[la]=t,(i=r.nodeValue!==n)&&null!==(e=To))switch(l=0!=(1&e.mode),e.tag){case 3:Xr(r.nodeValue,n,l);break;case 5:!0!==e.memoizedProps[void 0]&&Xr(r.nodeValue,n,l)}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[la]=t,t.stateNode=r}return fs(t),null;case 13:if(wa(ei),r=t.memoizedState,Io&&null!==Ao&&0!=(1&t.mode)&&0==(128&t.flags)){for(r=Ao;r;)r=oa(r.nextSibling);return Bo(),t.flags|=98560,t}if(null!==r&&null!==r.dehydrated){if(r=Mo(t),null===e){if(!r)throw Error(o(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(o(317));r[la]=t}else Bo(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;return fs(t),null}return null!==No&&(ql(No),No=null),0!=(128&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?Mo(t):n=null!==e.memoizedState,r&&!n&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ei.current)?0===wl&&(wl=3):nu())),null!==t.updateQueue&&(t.flags|=4),fs(t),null);case 4:return Qo(),null===e&&jr(t.stateNode.containerInfo),fs(t),null;case 10:return $a(t.type._context),fs(t),null;case 19:if(wa(ei),null===(i=t.memoizedState))return fs(t),null;if(r=0!=(128&t.flags),null===(l=i.rendering))if(r)ps(i,!1);else{if(0!==wl||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ti(e))){for(t.flags|=128,ps(i,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ka(ei,1&ei.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Il&&(t.flags|=128,r=!0,ps(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ti(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ps(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!Io)return fs(t),null}else 2*Qe()-i.renderingStartTime>Il&&1073741824!==n&&(t.flags|=128,r=!0,ps(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,n=ei.current,ka(ei,r?1&n|2:1&n),t):(fs(t),null);case 22:case 23:return Gl(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&yl)&&(fs(t),6&t.subtreeFlags&&(t.flags|=8192)):fs(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}rs=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},as=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Xo($o.current);var o,i=null;switch(n){case"input":a=X(e,a),r=X(e,r),i=[];break;case"select":a=B({},a,{value:void 0}),r=B({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Yr)}for(c in be(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(o in l)l.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(o in l)!l.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in u)u.hasOwnProperty(o)&&l[o]!==u[o]&&(n||(n={}),n[o]=u[o])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(s.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Mr("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},os=function(e,t,n,r){n!==r&&(t.flags|=4)};var gs=S.ReactCurrentOwner,vs=!1;function ms(e,t,n,r){t.child=null===e?Ko(t,null,n,r):Vo(t,e.child,n,r)}function bs(e,t,n,r,a){n=n.render;var o=t.ref;return Wa(t,a),r=vi(e,t,n,r,o,a),n=mi(),null===e||vs?(Io&&n&&xo(t),t.flags|=1,ms(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Fs(e,t,a))}function ys(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||yu(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=wu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Ss(e,t,o,r,a))}if(o=e.child,0==(e.lanes&a)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:or)(i,r)&&e.ref===t.ref)return Fs(e,t,a)}return t.flags|=1,(e=Su(o,r)).ref=t.ref,e.return=t,t.child=e}function Ss(e,t,n,r,a){if(null!==e&&or(e.memoizedProps,r)&&e.ref===t.ref){if(vs=!1,0==(e.lanes&a))return t.lanes=e.lanes,Fs(e,t,a);0!=(131072&e.flags)&&(vs=!0)}return Cs(e,t,n,r,a)}function ws(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null},ka(Sl,yl),yl|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null},t.updateQueue=null,ka(Sl,yl),yl|=e,null;t.memoizedState={baseLanes:0,cachePool:null},r=null!==o?o.baseLanes:n,ka(Sl,yl),yl|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,ka(Sl,yl),yl|=r;return ms(e,t,a,n),t.child}function ks(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Cs(e,t,n,r,a){var o=Aa(n)?Ea:_a.current;return o=Ta(t,o),Wa(t,a),n=vi(e,t,n,r,o,a),r=mi(),null===e||vs?(Io&&r&&xo(t),t.flags|=1,ms(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Fs(e,t,a))}function _s(e,t,n,r,a){if(Aa(n)){var o=!0;Ra(t)}else o=!1;if(Wa(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),co(t,n,r),fo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,s=t.memoizedProps;i.props=s;var l=i.context,u=n.contextType;u="object"==typeof u&&null!==u?Xa(u):Ta(t,u=Aa(n)?Ea:_a.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||l!==u)&&po(t,i,r,u),Qa=!1;var p=t.memoizedState;i.state=p,ao(t,r,i,a),l=t.memoizedState,s!==r||p!==l||xa.current||Qa?("function"==typeof c&&(so(t,n,c,r),l=t.memoizedState),(s=Qa||uo(t,n,s,r,p,l,u))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=s):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Ja(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:za(t.type,s),i.props=u,d=t.pendingProps,p=i.context,l="object"==typeof(l=n.contextType)&&null!==l?Xa(l):Ta(t,l=Aa(n)?Ea:_a.current);var f=n.getDerivedStateFromProps;(c="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==d||p!==l)&&po(t,i,r,l),Qa=!1,p=t.memoizedState,i.state=p,ao(t,r,i,a);var h=t.memoizedState;s!==d||p!==h||xa.current||Qa?("function"==typeof f&&(so(t,n,f,r),h=t.memoizedState),(u=Qa||uo(t,n,u,r,p,h,l)||!1)?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=l,r=u):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),r=!1)}return xs(e,t,n,r,o,a)}function xs(e,t,n,r,a,o){ks(e,t);var i=0!=(128&t.flags);if(!r&&!i)return a&&Da(t,n,!1),Fs(e,t,o);r=t.stateNode,gs.current=t;var s=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Vo(t,e.child,null,o),t.child=Vo(t,null,s,o)):ms(e,t,s,o),t.memoizedState=r.state,a&&Da(t,n,!0),t.child}function Es(e){var t=e.stateNode;t.pendingContext?Na(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Na(0,t.context,!1),Yo(e,t.containerInfo)}function Ts(e,t,n,r,a){return Bo(),Fo(a),t.flags|=256,ms(e,t,n,r),t.child}var As={dehydrated:null,treeContext:null,retryLane:0};function Is(e){return{baseLanes:e,cachePool:null}}function Ns(e,t,n){var r,a=t.pendingProps,i=ei.current,s=!1,l=0!=(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),ka(ei,1&i),null===e)return Oo(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(i=a.children,e=a.fallback,s?(a=t.mode,s=t.child,i={mode:"hidden",children:i},0==(1&a)&&null!==s?(s.childLanes=0,s.pendingProps=i):s=Cu(i,a,0,null),e=ku(e,a,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=Is(n),t.memoizedState=As,e):Ps(t,i));if(null!==(i=e.memoizedState)){if(null!==(r=i.dehydrated)){if(l)return 256&t.flags?(t.flags&=-257,Os(e,t,n,Error(o(422)))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(s=a.fallback,i=t.mode,a=Cu({mode:"visible",children:a.children},i,0,null),(s=ku(s,i,n,null)).flags|=2,a.return=t,s.return=t,a.sibling=s,t.child=a,0!=(1&t.mode)&&Vo(t,e.child,null,n),t.child.memoizedState=Is(n),t.memoizedState=As,s);if(0==(1&t.mode))t=Os(e,t,n,null);else if("$!"===r.data)t=Os(e,t,n,Error(o(419)));else if(a=0!=(n&e.childLanes),vs||a){if(null!==(a=vl)){switch(n&-n){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(a=0!=(s&(a.suspendedLanes|n))?0:s)&&a!==i.retryLane&&(i.retryLane=a,Hl(e,a,-1))}nu(),t=Os(e,t,n,Error(o(421)))}else"$?"===r.data?(t.flags|=128,t.child=e.child,t=hu.bind(null,e),r._reactRetry=t,t=null):(n=i.treeContext,Ao=oa(r.nextSibling),To=t,Io=!0,No=null,null!==n&&(bo[yo++]=wo,bo[yo++]=ko,bo[yo++]=So,wo=n.id,ko=n.overflow,So=t),(t=Ps(t,t.pendingProps.children)).flags|=4096);return t}return s?(a=Ds(e,t,a.children,a.fallback,n),s=t.child,i=e.child.memoizedState,s.memoizedState=null===i?Is(n):{baseLanes:i.baseLanes|n,cachePool:null},s.childLanes=e.childLanes&~n,t.memoizedState=As,a):(n=Rs(e,t,a.children,n),t.memoizedState=null,n)}return s?(a=Ds(e,t,a.children,a.fallback,n),s=t.child,i=e.child.memoizedState,s.memoizedState=null===i?Is(n):{baseLanes:i.baseLanes|n,cachePool:null},s.childLanes=e.childLanes&~n,t.memoizedState=As,a):(n=Rs(e,t,a.children,n),t.memoizedState=null,n)}function Ps(e,t){return(t=Cu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Rs(e,t,n,r){var a=e.child;return e=a.sibling,n=Su(a,{mode:"visible",children:n}),0==(1&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n}function Ds(e,t,n,r,a){var o=t.mode,i=(e=e.child).sibling,s={mode:"hidden",children:n};return 0==(1&o)&&t.child!==e?((n=t.child).childLanes=0,n.pendingProps=s,t.deletions=null):(n=Su(e,s)).subtreeFlags=14680064&e.subtreeFlags,null!==i?r=Su(i,r):(r=ku(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function Os(e,t,n,r){return null!==r&&Fo(r),Vo(t,e.child,null,n),(e=Ps(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ls(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),qa(e.return,t,n)}function Ms(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Bs(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(ms(e,t,r.children,n),0!=(2&(r=ei.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ls(e,n,t);else if(19===e.tag)Ls(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(ei,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ti(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ms(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ti(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ms(t,!0,n,null,o);break;case"together":Ms(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Fs(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Cl|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Su(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Su(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function js(e,t){switch(Eo(t),t.tag){case 1:return Aa(t.type)&&Ia(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qo(),wa(xa),wa(_a),ri(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Jo(t),null;case 13:if(wa(ei),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));Bo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return wa(ei),null;case 4:return Qo(),null;case 10:return $a(t.type._context),null;case 22:case 23:return Gl(),null;default:return null}}var zs=!1,Us=!1,Hs="function"==typeof WeakSet?WeakSet:Set,Vs=null;function Ks(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){du(e,t,n)}else n.current=null}function Zs(e,t,n){try{n()}catch(n){du(e,t,n)}}var $s=!1;function qs(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&Zs(t,n,o)}a=a.next}while(a!==r)}}function Ws(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Xs(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function Ys(e,t,n){if(at&&"function"==typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(rt,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var a=r,o=a.destroy;a=a.tag,void 0!==o&&(0!=(2&a)||0!=(4&a))&&Zs(t,n,o),r=r.next}while(r!==e)}break;case 1:if(Ks(t,n),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){du(t,n,e)}break;case 5:Ks(t,n);break;case 4:rl(e,t,n)}}function Qs(e){var t=e.alternate;null!==t&&(e.alternate=null,Qs(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[la],delete t[ua],delete t[da],delete t[pa],delete t[fa]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Gs(e){return 5===e.tag||3===e.tag||4===e.tag}function Js(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||Gs(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function el(e){e:{for(var t=e.return;null!==t;){if(Gs(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(n.tag){case 5:t=n.stateNode,32&n.flags&&(pe(t,""),n.flags&=-33),nl(e,n=Js(e),t);break;case 3:case 4:t=n.stateNode.containerInfo,tl(e,n=Js(e),t);break;default:throw Error(o(161))}}function tl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Yr));else if(4!==r&&null!==(e=e.child))for(tl(e,t,n),e=e.sibling;null!==e;)tl(e,t,n),e=e.sibling}function nl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(nl(e,t,n),e=e.sibling;null!==e;)nl(e,t,n),e=e.sibling}function rl(e,t,n){for(var r,a,i=t,s=!1;;){if(!s){s=i.return;e:for(;;){if(null===s)throw Error(o(160));switch(r=s.stateNode,s.tag){case 5:a=!1;break e;case 3:case 4:r=r.containerInfo,a=!0;break e}s=s.return}s=!0}if(5===i.tag||6===i.tag){e:for(var l=e,u=i,c=n,d=u;;)if(Ys(l,d,c),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===u)break e;for(;null===d.sibling;){if(null===d.return||d.return===u)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}a?(l=r,u=i.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(i.stateNode)}else if(18===i.tag)a?(l=r,u=i.stateNode,8===l.nodeType?aa(l.parentNode,u):1===l.nodeType&&aa(l,u),zt(l)):aa(r,i.stateNode);else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,a=!0,i.child.return=i,i=i.child;continue}}else if(Ys(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(s=!1)}i.sibling.return=i.return,i=i.sibling}}function al(e,t){switch(t.tag){case 0:case 11:case 14:case 15:return qs(3,t,t.return),Ws(3,t),void qs(5,t,t.return);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,a=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for("input"===e&&"radio"===r.type&&null!=r.name&&Q(n,r),ye(e,a),t=ye(e,r),a=0;a<i.length;a+=2){var s=i[a],l=i[a+1];"style"===s?ve(n,l):"dangerouslySetInnerHTML"===s?de(n,l):"children"===s?pe(n,l):y(n,s,l,t)}switch(e){case"input":G(n,r);break;case"textarea":oe(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?ne(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?ne(n,!!r.multiple,r.defaultValue,!0):ne(n,!!r.multiple,r.multiple?[]:"",!1))}n[ua]=r}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void(null!==e&&e.memoizedState.isDehydrated&&zt(t.stateNode.containerInfo));case 13:case 19:return void function(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Hs),t.forEach((function(t){var r=gu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}(t)}throw Error(o(163))}function ol(e,t,n){Vs=e,il(e,t,n)}function il(e,t,n){for(var r=0!=(1&e.mode);null!==Vs;){var a=Vs,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||zs;if(!i){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Us;s=zs;var u=Us;if(zs=i,(Us=l)&&!u)for(Vs=a;null!==Vs;)l=(i=Vs).child,22===i.tag&&null!==i.memoizedState?ul(a):null!==l?(l.return=i,Vs=l):ul(a);for(;null!==o;)Vs=o,il(o,t,n),o=o.sibling;Vs=a,zs=s,Us=u}sl(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Vs=o):sl(e)}}function sl(e){for(;null!==Vs;){var t=Vs;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Us||Ws(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Us)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:za(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&oo(t,i,r);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}oo(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var p=d.dehydrated;null!==p&&zt(p)}}}break;default:throw Error(o(163))}Us||512&t.flags&&Xs(t)}catch(e){du(t,t.return,e)}}if(t===e){Vs=null;break}if(null!==(n=t.sibling)){n.return=t.return,Vs=n;break}Vs=t.return}}function ll(e){for(;null!==Vs;){var t=Vs;if(t===e){Vs=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Vs=n;break}Vs=t.return}}function ul(e){for(;null!==Vs;){var t=Vs;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Ws(4,t)}catch(e){du(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){du(t,a,e)}}var o=t.return;try{Xs(t)}catch(e){du(t,o,e)}break;case 5:var i=t.return;try{Xs(t)}catch(e){du(t,i,e)}}}catch(e){du(t,t.return,e)}if(t===e){Vs=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Vs=s;break}Vs=t.return}}var cl,dl=Math.ceil,pl=S.ReactCurrentDispatcher,fl=S.ReactCurrentOwner,hl=S.ReactCurrentBatchConfig,gl=0,vl=null,ml=null,bl=0,yl=0,Sl=Sa(0),wl=0,kl=null,Cl=0,_l=0,xl=0,El=null,Tl=null,Al=0,Il=1/0,Nl=!1,Pl=null,Rl=null,Dl=!1,Ol=null,Ll=0,Ml=0,Bl=null,Fl=-1,jl=0;function zl(){return 0!=(6&gl)?Qe():-1!==Fl?Fl:Fl=Qe()}function Ul(e){return 0==(1&e.mode)?1:0!=(2&gl)&&0!==bl?bl&-bl:null!==ja.transition?(0===jl&&(e=lt,0==(4194240&(lt<<=1))&&(lt=64),jl=e),jl):0!==(e=mt)?e:e=void 0===(e=window.event)?16:qt(e.type)}function Hl(e,t,n){if(50<Ml)throw Ml=0,Bl=null,Error(o(185));var r=Vl(e,t);return null===r?null:(gt(r,t,n),0!=(2&gl)&&r===vl||(r===vl&&(0==(2&gl)&&(_l|=t),4===wl&&Wl(r,bl)),Kl(r,n),1===t&&0===gl&&0==(1&e.mode)&&(Il=Qe()+500,La&&Fa())),r)}function Vl(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function Kl(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-ot(o),s=1<<i,l=a[i];-1===l?0!=(s&n)&&0==(s&r)||(a[i]=pt(s,t)):l<=t&&(e.expiredLanes|=s),o&=~s}}(e,t);var r=dt(e,e===vl?bl:0);if(0===r)null!==n&&We(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&We(n),1===t)0===e.tag?function(e){La=!0,Ba(e)}(Xl.bind(null,e)):Ba(Xl.bind(null,e)),na((function(){0===gl&&Fa()})),n=null;else{switch(bt(r)){case 1:n=Je;break;case 4:n=et;break;default:n=tt;break;case 536870912:n=nt}n=vu(n,Zl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Zl(e,t){if(Fl=-1,jl=0,0!=(6&gl))throw Error(o(327));var n=e.callbackNode;if(uu()&&e.callbackNode!==n)return null;var r=dt(e,e===vl?bl:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=ru(e,r);else{t=r;var a=gl;gl|=2;var i=tu();for(vl===e&&bl===t||(Il=Qe()+500,Jl(e,t));;)try{ou();break}catch(t){eu(e,t)}Za(),pl.current=i,gl=a,null!==ml?t=0:(vl=null,bl=0,t=wl)}if(0!==t){if(2===t&&0!==(a=ft(e))&&(r=a,t=$l(e,a)),1===t)throw n=kl,Jl(e,0),Wl(e,r),Kl(e,Qe()),n;if(6===t)Wl(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!ar(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=ru(e,r))&&0!==(i=ft(e))&&(r=i,t=$l(e,i)),1===t))throw n=kl,Jl(e,0),Wl(e,r),Kl(e,Qe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:lu(e,Tl);break;case 3:if(Wl(e,r),(130023424&r)===r&&10<(t=Al+500-Qe())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){zl(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Jr(lu.bind(null,e,Tl),t);break}lu(e,Tl);break;case 4:if(Wl(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var s=31-ot(r);i=1<<s,(s=t[s])>a&&(a=s),r&=~i}if(r=a,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*dl(r/1960))-r)){e.timeoutHandle=Jr(lu.bind(null,e,Tl),r);break}lu(e,Tl);break;default:throw Error(o(329))}}}return Kl(e,Qe()),e.callbackNode===n?Zl.bind(null,e):null}function $l(e,t){var n=El;return e.current.memoizedState.isDehydrated&&(Jl(e,t).flags|=256),2!==(e=ru(e,t))&&(t=Tl,Tl=n,null!==t&&ql(t)),e}function ql(e){null===Tl?Tl=e:Tl.push.apply(Tl,e)}function Wl(e,t){for(t&=~xl,t&=~_l,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function Xl(e){if(0!=(6&gl))throw Error(o(327));uu();var t=dt(e,0);if(0==(1&t))return Kl(e,Qe()),null;var n=ru(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=$l(e,r))}if(1===n)throw n=kl,Jl(e,0),Wl(e,t),Kl(e,Qe()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,lu(e,Tl),Kl(e,Qe()),null}function Yl(e,t){var n=gl;gl|=1;try{return e(t)}finally{0===(gl=n)&&(Il=Qe()+500,La&&Fa())}}function Ql(e){null!==Ol&&0===Ol.tag&&0==(6&gl)&&uu();var t=gl;gl|=1;var n=hl.transition,r=mt;try{if(hl.transition=null,mt=1,e)return e()}finally{mt=r,hl.transition=n,0==(6&(gl=t))&&Fa()}}function Gl(){yl=Sl.current,wa(Sl)}function Jl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ea(n)),null!==ml)for(n=ml.return;null!==n;){var r=n;switch(Eo(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ia();break;case 3:Qo(),wa(xa),wa(_a),ri();break;case 5:Jo(r);break;case 4:Qo();break;case 13:case 19:wa(ei);break;case 10:$a(r.type._context);break;case 22:case 23:Gl()}n=n.return}if(vl=e,ml=e=Su(e.current,null),bl=yl=t,wl=0,kl=null,xl=_l=Cl=0,Tl=El=null,null!==Ya){for(t=0;t<Ya.length;t++)if(null!==(r=(n=Ya[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}n.pending=r}Ya=null}return e}function eu(e,t){for(;;){var n=ml;try{if(Za(),ai.current=Qi,ci){for(var r=si.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ci=!1}if(ii=0,ui=li=si=null,di=!1,pi=0,fl.current=null,null===n||null===n.return){wl=1,kl=t,ml=null;break}e:{var i=e,s=n.return,l=n,u=t;if(t=bl,l.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,d=l,p=d.tag;if(0==(1&d.mode)&&(0===p||11===p||15===p)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var h=cs(s);if(null!==h){h.flags&=-257,ds(h,s,l,0,t),1&h.mode&&us(i,c,t),u=c;var g=(t=h).updateQueue;if(null===g){var v=new Set;v.add(u),t.updateQueue=v}else g.add(u);break e}if(0==(1&t)){us(i,c,t),nu();break e}u=Error(o(426))}else if(Io&&1&l.mode){var m=cs(s);if(null!==m){0==(65536&m.flags)&&(m.flags|=256),ds(m,s,l,0,t),Fo(u);break e}}i=u,4!==wl&&(wl=2),null===El?El=[i]:El.push(i),u=ts(u,l),l=s;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,ro(l,ss(0,u,t));break e;case 1:i=u;var b=l.type,y=l.stateNode;if(0==(128&l.flags)&&("function"==typeof b.getDerivedStateFromError||null!==y&&"function"==typeof y.componentDidCatch&&(null===Rl||!Rl.has(y)))){l.flags|=65536,t&=-t,l.lanes|=t,ro(l,ls(l,i,t));break e}}l=l.return}while(null!==l)}su(n)}catch(e){t=e,ml===n&&null!==n&&(ml=n=n.return);continue}break}}function tu(){var e=pl.current;return pl.current=Qi,null===e?Qi:e}function nu(){0!==wl&&3!==wl&&2!==wl||(wl=4),null===vl||0==(268435455&Cl)&&0==(268435455&_l)||Wl(vl,bl)}function ru(e,t){var n=gl;gl|=2;var r=tu();for(vl===e&&bl===t||Jl(e,t);;)try{au();break}catch(t){eu(e,t)}if(Za(),gl=n,pl.current=r,null!==ml)throw Error(o(261));return vl=null,bl=0,wl}function au(){for(;null!==ml;)iu(ml)}function ou(){for(;null!==ml&&!Xe();)iu(ml)}function iu(e){var t=cl(e.alternate,e,yl);e.memoizedProps=e.pendingProps,null===t?su(e):ml=t,fl.current=null}function su(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=hs(n,t,yl)))return void(ml=n)}else{if(null!==(n=js(n,t)))return n.flags&=32767,void(ml=n);if(null===e)return wl=6,void(ml=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(ml=t);ml=t=e}while(null!==t);0===wl&&(wl=5)}function lu(e,t){var n=mt,r=hl.transition;try{hl.transition=null,mt=1,function(e,t,n){do{uu()}while(null!==Ol);if(0!=(6&gl))throw Error(o(327));var r=e.finishedWork,a=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=r.lanes|r.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,i),e===vl&&(ml=vl=null,bl=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||Dl||(Dl=!0,vu(tt,(function(){return uu(),null}))),i=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||i){i=hl.transition,hl.transition=null;var s=mt;mt=1;var l=gl;gl|=4,fl.current=null,function(e,t){if(cr(e=ur())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var s=0,l=-1,u=-1,c=0,d=0,p=e,f=null;t:for(;;){for(var h;p!==n||0!==a&&3!==p.nodeType||(l=s+a),p!==i||0!==r&&3!==p.nodeType||(u=s+r),3===p.nodeType&&(s+=p.nodeValue.length),null!==(h=p.firstChild);)f=p,p=h;for(;;){if(p===e)break t;if(f===n&&++c===a&&(l=s),f===i&&++d===r&&(u=s),null!==(h=p.nextSibling))break;f=(p=f).parentNode}p=h}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(Qr={focusedElem:e,selectionRange:n},Vs=t;null!==Vs;)if(e=(t=Vs).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Vs=e;else for(;null!==Vs;){t=Vs;try{var g=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var v=g.memoizedProps,m=g.memoizedState,b=t.stateNode,y=b.getSnapshotBeforeUpdate(t.elementType===t.type?v:za(t.type,v),m);b.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var S=t.stateNode.containerInfo;if(1===S.nodeType)S.textContent="";else if(9===S.nodeType){var w=S.body;null!=w&&(w.textContent="")}break;default:throw Error(o(163))}}catch(e){du(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Vs=e;break}Vs=t.return}g=$s,$s=!1}(e,r),function(e,t){for(Vs=t;null!==Vs;){var n=(t=Vs).deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{rl(e,a,t);var o=a.alternate;null!==o&&(o.return=null),a.return=null}catch(e){du(a,t,e)}}if(n=t.child,0!=(12854&t.subtreeFlags)&&null!==n)n.return=t,Vs=n;else for(;null!==Vs;){t=Vs;try{var i=t.flags;if(32&i&&pe(t.stateNode,""),512&i){var s=t.alternate;if(null!==s){var l=s.ref;null!==l&&("function"==typeof l?l(null):l.current=null)}}if(8192&i)switch(t.tag){case 13:if(null!==t.memoizedState){var u=t.alternate;null!==u&&null!==u.memoizedState||(Al=Qe())}break;case 22:var c=null!==t.memoizedState,d=t.alternate,p=null!==d&&null!==d.memoizedState;e:{a=c;for(var f=null,h=r=n=t;;){if(5===h.tag){if(null===f){f=h;var g=h.stateNode;if(a){var v=g.style;"function"==typeof v.setProperty?v.setProperty("display","none","important"):v.display="none"}else{var m=h.stateNode,b=h.memoizedProps.style,y=null!=b&&b.hasOwnProperty("display")?b.display:null;m.style.display=ge("display",y)}}}else if(6===h.tag)null===f&&(h.stateNode.nodeValue=a?"":h.memoizedProps);else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===r)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===r)break;for(;null===h.sibling;){if(null===h.return||h.return===r)break e;f===h&&(f=null),h=h.return}f===h&&(f=null),h.sibling.return=h.return,h=h.sibling}}if(c&&!p&&0!=(1&n.mode)){Vs=n;for(var S=n.child;null!==S;){for(n=Vs=S;null!==Vs;){var w=(r=Vs).child;switch(r.tag){case 0:case 11:case 14:case 15:qs(4,r,r.return);break;case 1:Ks(r,r.return);var k=r.stateNode;if("function"==typeof k.componentWillUnmount){var C=r.return;try{k.props=r.memoizedProps,k.state=r.memoizedState,k.componentWillUnmount()}catch(e){du(r,C,e)}}break;case 5:Ks(r,r.return);break;case 22:if(null!==r.memoizedState){ll(n);continue}}null!==w?(w.return=r,Vs=w):ll(n)}S=S.sibling}}}switch(4102&i){case 2:el(t),t.flags&=-3;break;case 6:el(t),t.flags&=-3,al(t.alternate,t);break;case 4096:t.flags&=-4097;break;case 4100:t.flags&=-4097,al(t.alternate,t);break;case 4:al(t.alternate,t)}}catch(e){du(t,t.return,e)}if(null!==(n=t.sibling)){n.return=t.return,Vs=n;break}Vs=t.return}}}(e,r),dr(Qr),Qr=null,e.current=r,ol(r,e,a),Ye(),gl=l,mt=s,hl.transition=i}else e.current=r;if(Dl&&(Dl=!1,Ol=e,Ll=a),0===(i=e.pendingLanes)&&(Rl=null),function(e){if(at&&"function"==typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(rt,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),Kl(e,Qe()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)n(t[r]);if(Nl)throw Nl=!1,e=Pl,Pl=null,e;0!=(1&Ll)&&0!==e.tag&&uu(),0!=(1&(i=e.pendingLanes))?e===Bl?Ml++:(Ml=0,Bl=e):Ml=0,Fa()}(e,t,n)}finally{hl.transition=r,mt=n}return null}function uu(){if(null!==Ol){var e=bt(Ll),t=hl.transition,n=mt;try{if(hl.transition=null,mt=16>e?16:e,null===Ol)var r=!1;else{if(e=Ol,Ol=null,Ll=0,0!=(6&gl))throw Error(o(331));var a=gl;for(gl|=4,Vs=e.current;null!==Vs;){var i=Vs,s=i.child;if(0!=(16&Vs.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Vs=c;null!==Vs;){var d=Vs;switch(d.tag){case 0:case 11:case 15:qs(8,d,i)}var p=d.child;if(null!==p)p.return=d,Vs=p;else for(;null!==Vs;){var f=(d=Vs).sibling,h=d.return;if(Qs(d),d===c){Vs=null;break}if(null!==f){f.return=h,Vs=f;break}Vs=h}}}var g=i.alternate;if(null!==g){var v=g.child;if(null!==v){g.child=null;do{var m=v.sibling;v.sibling=null,v=m}while(null!==v)}}Vs=i}}if(0!=(2064&i.subtreeFlags)&&null!==s)s.return=i,Vs=s;else e:for(;null!==Vs;){if(0!=(2048&(i=Vs).flags))switch(i.tag){case 0:case 11:case 15:qs(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Vs=b;break e}Vs=i.return}}var y=e.current;for(Vs=y;null!==Vs;){var S=(s=Vs).child;if(0!=(2064&s.subtreeFlags)&&null!==S)S.return=s,Vs=S;else e:for(s=y;null!==Vs;){if(0!=(2048&(l=Vs).flags))try{switch(l.tag){case 0:case 11:case 15:Ws(9,l)}}catch(e){du(l,l.return,e)}if(l===s){Vs=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Vs=w;break e}Vs=l.return}}if(gl=a,Fa(),at&&"function"==typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(rt,e)}catch(e){}r=!0}return r}finally{mt=n,hl.transition=t}}return!1}function cu(e,t,n){to(e,t=ss(0,t=ts(n,t),1)),t=zl(),null!==(e=Vl(e,1))&&(gt(e,1,t),Kl(e,t))}function du(e,t,n){if(3===e.tag)cu(e,e,n);else for(;null!==t;){if(3===t.tag){cu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Rl||!Rl.has(r))){to(t,e=ls(t,e=ts(n,e),1)),e=zl(),null!==(t=Vl(t,1))&&(gt(t,1,e),Kl(t,e));break}}t=t.return}}function pu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=zl(),e.pingedLanes|=e.suspendedLanes&n,vl===e&&(bl&n)===n&&(4===wl||3===wl&&(130023424&bl)===bl&&500>Qe()-Al?Jl(e,0):xl|=n),Kl(e,t)}function fu(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ut,0==(130023424&(ut<<=1))&&(ut=4194304)));var n=zl();null!==(e=Vl(e,t))&&(gt(e,t,n),Kl(e,n))}function hu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),fu(e,n)}function gu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),fu(e,n)}function vu(e,t){return qe(e,t)}function mu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function bu(e,t,n,r){return new mu(e,t,n,r)}function yu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Su(e,t){var n=e.alternate;return null===n?((n=bu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function wu(e,t,n,r,a,i){var s=2;if(r=e,"function"==typeof e)yu(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case C:return ku(n.children,a,i,t);case _:s=8,a|=8;break;case x:return(e=bu(12,n,t,2|a)).elementType=x,e.lanes=i,e;case I:return(e=bu(13,n,t,a)).elementType=I,e.lanes=i,e;case N:return(e=bu(19,n,t,a)).elementType=N,e.lanes=i,e;case D:return Cu(n,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case E:s=10;break e;case T:s=9;break e;case A:s=11;break e;case P:s=14;break e;case R:s=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=bu(s,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function ku(e,t,n,r){return(e=bu(7,e,r,t)).lanes=n,e}function Cu(e,t,n,r){return(e=bu(22,e,r,t)).elementType=D,e.lanes=n,e.stateNode={},e}function _u(e,t,n){return(e=bu(6,e,null,t)).lanes=n,e}function xu(e,t,n){return(t=bu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Eu(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ht(0),this.expirationTimes=ht(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ht(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Tu(e,t,n,r,a,o,i,s,l){return e=new Eu(e,t,n,s,l),1===t?(t=1,!0===o&&(t|=8)):t=0,o=bu(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null},Ga(o),e}function Au(e){if(!e)return Ca;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Aa(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Aa(n))return Pa(e,n,t)}return t}function Iu(e,t,n,r){var a=t.current,o=zl(),i=Ul(a);return n=Au(n),null===t.context?t.context=n:t.pendingContext=n,(t=eo(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),to(a,t),null!==(e=Hl(a,i,o))&&no(e,a,i),i}function Nu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Pu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ru(e,t){Pu(e,t),(e=e.alternate)&&Pu(e,t)}cl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||xa.current)vs=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return vs=!1,function(e,t,n){switch(t.tag){case 3:Es(t),Bo();break;case 5:Go(t);break;case 1:Aa(t.type)&&Ra(t);break;case 4:Yo(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;ka(Ua,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(ka(ei,1&ei.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Ns(e,t,n):(ka(ei,1&ei.current),null!==(e=Fs(e,t,n))?e.sibling:null);ka(ei,1&ei.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Bs(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(ei,ei.current),r)break;return null;case 22:case 23:return t.lanes=0,ws(e,t,n)}return Fs(e,t,n)}(e,t,n);vs=0!=(131072&e.flags)}else vs=!1,Io&&0!=(1048576&t.flags)&&_o(t,mo,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps;var a=Ta(t,_a.current);Wa(t,n),a=vi(null,t,r,e,a,n);var i=mi();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Aa(r)?(i=!0,Ra(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ga(t),a.updater=lo,t.stateNode=a,a._reactInternals=t,fo(t,r,e,n),t=xs(null,t,r,!0,i,n)):(t.tag=0,Io&&i&&xo(t),ms(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return yu(e)?1:0;if(null!=e){if((e=e.$$typeof)===A)return 11;if(e===P)return 14}return 2}(r),e=za(r,e),a){case 0:t=Cs(null,t,r,e,n);break e;case 1:t=_s(null,t,r,e,n);break e;case 11:t=bs(null,t,r,e,n);break e;case 14:t=ys(null,t,r,za(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Cs(e,t,r,a=t.elementType===r?a:za(r,a),n);case 1:return r=t.type,a=t.pendingProps,_s(e,t,r,a=t.elementType===r?a:za(r,a),n);case 3:e:{if(Es(t),null===e)throw Error(o(387));r=t.pendingProps,a=(i=t.memoizedState).element,Ja(e,t),ao(t,r,null,n);var s=t.memoizedState;if(r=s.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:s.cache,transitions:s.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Ts(e,t,r,n,a=Error(o(423)));break e}if(r!==a){t=Ts(e,t,r,n,a=Error(o(424)));break e}for(Ao=oa(t.stateNode.containerInfo.firstChild),To=t,Io=!0,No=null,n=Ko(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(Bo(),r===a){t=Fs(e,t,n);break e}ms(e,t,r,n)}t=t.child}return t;case 5:return Go(t),null===e&&Oo(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,s=a.children,Gr(r,a)?s=null:null!==i&&Gr(r,i)&&(t.flags|=32),ks(e,t),ms(e,t,s,n),t.child;case 6:return null===e&&Oo(t),null;case 13:return Ns(e,t,n);case 4:return Yo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Vo(t,null,r,n):ms(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,bs(e,t,r,a=t.elementType===r?a:za(r,a),n);case 7:return ms(e,t,t.pendingProps,n),t.child;case 8:case 12:return ms(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,s=a.value,ka(Ua,r._currentValue),r._currentValue=s,null!==i)if(ar(i.value,s)){if(i.children===a.children&&!xa.current){t=Fs(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){s=i.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===i.tag){(u=eo(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),qa(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)s=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(o(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),qa(s,n,t),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===t){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}ms(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Wa(t,n),r=r(a=Xa(a)),t.flags|=1,ms(e,t,r,n),t.child;case 14:return a=za(r=t.type,t.pendingProps),ys(e,t,r,a=za(r.type,a),n);case 15:return Ss(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:za(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,Aa(r)?(e=!0,Ra(t)):e=!1,Wa(t,n),co(t,r,a),fo(t,r,a,n),xs(null,t,r,!0,e,n);case 19:return Bs(e,t,n);case 22:return ws(e,t,n)}throw Error(o(156,t.tag))};"function"==typeof reportError&&reportError;function Du(e){this._internalRoot=e}function Ou(e){this._internalRoot=e}function Lu(){}function Mu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof a){var s=a;a=function(){var e=Nu(i);s.call(e)}}Iu(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=Nu(i);o.call(e)}}var i=function(e,t,n,r,a,o,i,s,l){return(e=Tu(n,r,!0,e,0,o,0,s,l)).context=Au(null),n=e.current,(o=eo(r=zl(),a=Ul(n))).callback=null!=t?t:null,to(n,o),e.current.lanes=a,gt(e,a,r),Kl(e,r),e}(t,r,e,0,null,!1,0,"",Lu);return e._reactRootContainer=i,e[ca]=i.current,jr(8===e.nodeType?e.parentNode:e),Ql(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var s=r;r=function(){var e=Nu(l);s.call(e)}}var l=Tu(e,0,!1,null,0,!1,0,"",Lu);return e._reactRootContainer=l,e[ca]=l.current,jr(8===e.nodeType?e.parentNode:e),Ql((function(){Iu(t,l,n,r)})),l}(n,t,e,a,r);return Nu(i)}Ou.prototype.render=Du.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Iu(e,t,null,null)},Ou.prototype.unmount=Du.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;Ql((function(){Iu(null,e,null,null)})),t[ca]=null}},Ou.prototype.unstable_scheduleHydration=function(e){if(e){var t=kt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Pt.length&&0!==t&&t<Pt[n].priority;n++);Pt.splice(n,0,e),0===n&&Lt(e)}},yt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ct(t.pendingLanes);0!==n&&(vt(t,1|n),Kl(t,Qe()),0==(6&gl)&&(Il=Qe()+500,Fa()))}break;case 13:var r=zl();Ql((function(){return Hl(e,1,r)})),Ru(e,1)}},St=function(e){13===e.tag&&(Hl(e,134217728,zl()),Ru(e,134217728))},wt=function(e){if(13===e.tag){var t=zl(),n=Ul(e);Hl(e,n,t),Ru(e,n)}},kt=function(){return mt},Ct=function(e,t){var n=mt;try{return mt=e,t()}finally{mt=n}},ke=function(e,t,n){switch(t){case"input":if(G(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ma(r);if(!a)throw Error(o(90));q(r),G(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ae=Yl,Ie=Ql;var Bu={findFiberByHostInstance:ha,bundleType:0,version:"18.0.0-fc46dba67-20220329",rendererPackageName:"react-dom"},Fu={bundleType:Bu.bundleType,version:Bu.version,rendererPackageName:Bu.rendererPackageName,rendererConfig:Bu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:S.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:Bu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ju=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ju.isDisabled&&ju.supportsFiber)try{rt=ju.inject(Fu),at=ju}catch(ce){}}t.render=function(e,t,n){if(!function(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}(t))throw Error(o(200));return Mu(null,e,t,!1,n)}},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,v={};function m(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||h}function b(){}function y(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=m.prototype;var S=y.prototype=new b;S.constructor=y,g(S,m.prototype),S.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,C={current:null},_={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var a,o={},i=null,s=null;if(null!=t)for(a in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,a)&&!_.hasOwnProperty(a)&&(o[a]=t[a]);var l=arguments.length-2;if(1===l)o.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===o[a]&&(o[a]=l[a]);return{$$typeof:n,type:e,key:i,ref:s,props:o,_owner:C.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function I(e,t,a,o,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return i=i(l=e),e=""===o?"."+A(l,0):o,w(i)?(a="",null!=e&&(a=e.replace(T,"$&/")+"/"),I(i,t,a,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(T,"$&/")+"/")+e)),t.push(i)),1;if(l=0,o=""===o?".":o+":",w(e))for(var u=0;u<e.length;u++){var c=o+A(s=e[u],u);l+=I(s,t,a,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(s=e.next()).done;)l+=I(s=s.value,t,a,c=o+A(s,u++),i);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function N(e,t,n){if(null==e)return e;var r=[],a=0;return I(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function P(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},D={transition:null},O={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:D,ReactCurrentOwner:C};t.Children={map:N,forEach:function(e,t,n){N(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return N(e,(function(){t++})),t},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=m,t.Fragment=a,t.Profiler=i,t.PureComponent=y,t.StrictMode=o,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=g({},e.props),o=e.key,i=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,s=C.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!_.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];a.children=l}return{$$typeof:n,type:e.type,key:o,ref:i,props:a,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.0.0-fc46dba67-20220329"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<o(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var s=2*(r+1)-1,l=e[s],u=s+1,c=e[u];if(0>o(l,n))u<a&&0>o(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[s]=n,r=s);else{if(!(u<a&&0>o(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var u=[],c=[],d=1,p=null,f=3,h=!1,g=!1,v=!1,m="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function S(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(v=!1,S(e),!g)if(null!==r(u))g=!0,D(k);else{var t=r(c);null!==t&&O(w,t.startTime-e)}}function k(e,n){g=!1,v&&(v=!1,b(E),E=-1),h=!0;var o=f;try{for(S(n),p=r(u);null!==p&&(!(p.expirationTime>n)||e&&!I());){var i=p.callback;if("function"==typeof i){p.callback=null,f=p.priorityLevel;var s=i(p.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?p.callback=s:p===r(u)&&a(u),S(n)}else a(u);p=r(u)}if(null!==p)var l=!0;else{var d=r(c);null!==d&&O(w,d.startTime-n),l=!1}return l}finally{p=null,f=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,_=!1,x=null,E=-1,T=5,A=-1;function I(){return!(t.unstable_now()-A<T)}function N(){if(null!==x){var e=t.unstable_now();A=e;var n=!0;try{n=x(!0,e)}finally{n?C():(_=!1,x=null)}}else _=!1}if("function"==typeof y)C=function(){y(N)};else if("undefined"!=typeof MessageChannel){var P=new MessageChannel,R=P.port2;P.port1.onmessage=N,C=function(){R.postMessage(null)}}else C=function(){m(N,0)};function D(e){x=e,_||(_=!0,C())}function O(e,n){E=m((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||h||(g=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var n=f;f=t;try{return e()}finally{f=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=f;f=e;try{return t()}finally{f=n}},t.unstable_scheduleCallback=function(e,a,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>i?(e.sortIndex=o,n(c,e),null===r(u)&&e===r(c)&&(v?(b(E),E=-1):v=!0,O(w,o-i))):(e.sortIndex=s,n(u,e),g||h||(g=!0,D(k))),e},t.unstable_shouldYield=I,t.unstable_wrapCallback=function(e){var t=f;return function(){var n=f;f=t;try{return e.apply(this,arguments)}finally{f=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var l=e[s],u=r.base?l[0]+r.base:l[0],c=o[u]||0,d="".concat(u," ").concat(c);o[u]=c+1;var p=n(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var h=a(f,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var l=r(e,a),u=0;u<o.length;u++){var c=n(o[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__);var e=__webpack_require__(294),t=__webpack_require__(935),n=__webpack_require__(869),r=__webpack_require__(379),a=__webpack_require__.n(r),o=__webpack_require__(795),i=__webpack_require__.n(o),s=__webpack_require__(569),l=__webpack_require__.n(s),u=__webpack_require__(565),c=__webpack_require__.n(u),d=__webpack_require__(216),p=__webpack_require__.n(d),f=__webpack_require__(589),h=__webpack_require__.n(f),g=__webpack_require__(648),v={};v.styleTagTransform=h(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=p(),a()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals;class m extends e.Component{render(){return e.createElement("button",{className:"button",onClick:this.props.handleConnectClick},1===this.props.kvmstate?"Connecting KVM":2===this.props.kvmstate?"Disconnect KVM":"Connect KVM")}}var b=__webpack_require__(625),y={};y.styleTagTransform=h(),y.setAttributes=c(),y.insert=l().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=p(),a()(b.Z,y),b.Z&&b.Z.locals&&b.Z.locals;class S extends e.Component{constructor(e){super(e),this.state={value:1},this.onEncodingChange=this.onEncodingChange.bind(this)}onEncodingChange(e){this.setState({value:e.target.value}),this.props.changeEncoding(e.target.value)}render(){return e.createElement("span",{className:"encoding"},e.createElement("label",null,"Encoding:"),e.createElement("select",{value:this.state.value,className:2===this.props.getConnectState()?"reldisabled":"",onChange:this.onEncodingChange,disabled:2===this.props.getConnectState()},e.createElement("option",{value:"1"},"RLE 8"),e.createElement("option",{value:"2"},"RLE 16")))}}class w extends e.Component{constructor(e){super(e),this.desktopsettings={encoding:1},this.changeEncoding=this.changeEncoding.bind(this)}changeEncoding(e){this.desktopsettings.encoding=e,this.props.changeDesktopSettings(this.desktopsettings)}render(){return e.createElement(S,{changeEncoding:this.changeEncoding,getConnectState:this.props.getConnectState})}}var k=__webpack_require__(734),C={};C.styleTagTransform=h(),C.setAttributes=c(),C.insert=l().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=p(),a()(k.Z,C),k.Z&&k.Z.locals&&k.Z.locals;class _ extends e.Component{render(){return e.createElement(e.Fragment,null,e.createElement("div",{className:"header"},e.createElement(m,{handleConnectClick:this.props.handleConnectClick,kvmstate:this.props.kvmstate}),e.createElement(w,{changeDesktopSettings:this.props.changeDesktopSettings,getConnectState:this.props.getConnectState})))}}const x=e=>null!=e&&""!==e&&!1!==e&&0!==e;var E=__webpack_require__(250),T={};T.styleTagTransform=h(),T.setAttributes=c(),T.insert=l().bind(null,"head"),T.domAPI=i(),T.insertStyleElement=p(),a()(E.Z,T),E.Z&&E.Z.locals&&E.Z.locals;class A extends e.Component{shouldComponentUpdate(){return!1}render(){const t={width:"1366",height:"768",onContextMenu:e=>(e.preventDefault(),!1),onMouseDown:this.props.mouseDown,onMouseUp:this.props.mouseUp,onMouseMove:this.props.mouseMove};return e.createElement("canvas",Object.assign({},t,{className:"canvas",ref:e=>x(e)?this.props.contextRef(e.getContext("2d")):null}))}}var I=__webpack_require__(917),N={};N.styleTagTransform=h(),N.setAttributes=c(),N.insert=l().bind(null,"head"),N.domAPI=i(),N.insertStyleElement=p(),a()(I.Z,N),I.Z&&I.Z.locals&&I.Z.locals;class P extends e.Component{constructor(e){super(e),this.desktopSettingsChange=!1,this.state={kvmstate:0,encodingOption:1},this.logger=new n.ConsoleLogger(n.LogLevel.ERROR),this.saveContext=this.saveContext.bind(this),this.startKVM=this.startKVM.bind(this),this.stopKVM=this.stopKVM.bind(this),this.handleConnectClick=this.handleConnectClick.bind(this),this.getRenderStatus=this.getRenderStatus.bind(this),this.OnConnectionStateChange=this.OnConnectionStateChange.bind(this),this.changeDesktopSettings=this.changeDesktopSettings.bind(this)}saveContext(e){this.logger.debug("save context called"),this.ctx=e,this.init()}init(){const e=null!=this.props.deviceId?this.props.deviceId:"",t=null!=this.props.mpsServer?this.props.mpsServer.replace("http","ws"):"";this.module=new n.AMTDesktop(this.logger,this.ctx),this.redirector=new n.AMTKvmDataRedirector(this.logger,n.Protocol.KVM,new FileReader,e,16994,"","",0,0,this.props.authToken,t),this.dataProcessor=new n.DataProcessor(this.logger,this.redirector,this.module),this.mouseHelper=new n.MouseHelper(this.module,this.redirector,this.props.mouseDebounceTime<200?200:this.props.mouseDebounceTime),this.keyboard=new n.KeyBoardHelper(this.module,this.redirector),this.redirector.onProcessData=this.module.processData.bind(this.module),this.redirector.onStart=this.module.start.bind(this.module),this.redirector.onNewState=this.module.onStateChange.bind(this.module),this.redirector.onSendKvmData=this.module.onSendKvmData.bind(this.module),this.redirector.onStateChanged=this.OnConnectionStateChange.bind(this),this.redirector.onError=this.onRedirectorError.bind(this),this.module.onSend=this.redirector.send.bind(this.redirector),this.module.onProcessData=this.dataProcessor.processData.bind(this.dataProcessor),this.module.bpp=this.state.encodingOption}cleanUp(){this.module=null,this.redirector=null,this.dataProcessor=null,this.mouseHelper=null,this.keyboard=null,this.ctx.clearRect(0,0,this.ctx.canvas.height,this.ctx.canvas.width)}componentWillUnmount(){this.stopKVM()}onRedirectorError(){this.reset()}reset(){this.cleanUp(),this.init()}OnConnectionStateChange(e,t){this.setState({kvmstate:t}),this.desktopSettingsChange&&0===t&&(this.desktopSettingsChange=!1,setTimeout((()=>this.startKVM()),2e3))}changeDesktopSettings(e){2===this.state.kvmstate?(this.desktopSettingsChange=!0,this.module.bpp=e.encoding,this.stopKVM()):(this.setState({encodingOption:parseInt(e.encoding)}),this.module.bpp=parseInt(e.encoding))}startKVM(){void 0!==this.redirector&&this.redirector.start(WebSocket),void 0!==this.keyboard&&this.keyboard.GrabKeyInput()}stopKVM(){void 0!==this.redirector&&this.redirector.stop(),void 0!==this.keyboard&&this.keyboard.UnGrabKeyInput(),this.reset()}getRenderStatus(){return this.module.state}handleConnectClick(e){e.persist(),0===this.state.kvmstate?this.startKVM():1===this.state.kvmstate||2===this.state.kvmstate&&this.stopKVM()}componentDidUpdate(e){e.deviceId!==this.props.deviceId&&this.stopKVM()}render(){return e.createElement("div",{className:"canvas-container"},x(this.props.autoConnect)?"":e.createElement(_,{key:"kvm_header",handleConnectClick:this.handleConnectClick,getConnectState:()=>this.state.kvmstate,kvmstate:this.state.kvmstate,changeDesktopSettings:this.changeDesktopSettings,deviceId:this.props.deviceId,server:this.props.mpsServer}),e.createElement(A,{key:"kvm_comp",contextRef:e=>this.saveContext(e),canvasHeight:this.props.canvasHeight,canvasWidth:this.props.canvasWidth,mouseMove:e=>{void 0!==this.mouseHelper&&this.mouseHelper.mousemove(e)},mouseDown:e=>{void 0!==this.mouseHelper&&this.mouseHelper.mousedown(e)},mouseUp:e=>{void 0!==this.mouseHelper&&this.mouseHelper.mouseup(e)}}))}}function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function D(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return t&&O(e.prototype,t),n&&O(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function M(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function B(e,t){return B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},B(e,t)}function F(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}function j(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return M(e)}function z(e){return z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},z(e)}function U(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function V(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function K(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?V(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):V(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Z={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,t){console&&console[e]&&console[e].apply(console,t)}},$=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};D(this,e),this.init(t,n)}return L(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||Z,this.options=t,this.debug=t.debug}},{key:"setDebug",value:function(e){this.debug=e}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,n,r){return r&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(n).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,K(K({},{prefix:"".concat(this.prefix,":").concat(t,":")}),this.options))}}]),e}(),q=new $,W=function(){function e(){D(this,e),this.observers={}}return L(e,[{key:"on",value:function(e,t){var n=this;return e.split(" ").forEach((function(e){n.observers[e]=n.observers[e]||[],n.observers[e].push(t)})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e])}},{key:"emit",value:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(this.observers[e]){var a=[].concat(this.observers[e]);a.forEach((function(e){e.apply(void 0,n)}))}if(this.observers["*"]){var o=[].concat(this.observers["*"]);o.forEach((function(t){t.apply(t,[e].concat(n))}))}}}]),e}();function X(){var e,t,n=new Promise((function(n,r){e=n,t=r}));return n.resolve=e,n.reject=t,n}function Y(e){return null==e?"":""+e}function Q(e,t,n){e.forEach((function(e){t[e]&&(n[e]=t[e])}))}function G(e,t,n){function r(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function a(){return!e||"string"==typeof e}for(var o="string"!=typeof t?[].concat(t):t.split(".");o.length>1;){if(a())return{};var i=r(o.shift());!e[i]&&n&&(e[i]=new n),e=Object.prototype.hasOwnProperty.call(e,i)?e[i]:{}}return a()?{}:{obj:e,k:r(o.shift())}}function J(e,t,n){var r=G(e,t,Object);r.obj[r.k]=n}function ee(e,t){var n=G(e,t),r=n.obj,a=n.k;if(r)return r[a]}function te(e,t,n){var r=ee(e,n);return void 0!==r?r:ee(t,n)}function ne(e,t,n){for(var r in t)"__proto__"!==r&&"constructor"!==r&&(r in e?"string"==typeof e[r]||e[r]instanceof String||"string"==typeof t[r]||t[r]instanceof String?n&&(e[r]=t[r]):ne(e[r],t[r],n):e[r]=t[r]);return e}function re(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var ae={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function oe(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return ae[e]})):e}var ie="undefined"!=typeof window&&window.navigator&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1,se=[" ",",","?","!",";"];function le(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ue(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?le(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):le(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ce(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(e){if(e[t])return e[t];for(var r=t.split(n),a=e,o=0;o<r.length;++o){if(!a)return;if("string"==typeof a[r[o]]&&o+1<r.length)return;if(void 0===a[r[o]]){for(var i=2,s=r.slice(o,o+i).join(n),l=a[s];void 0===l&&r.length>o+i;)i++,l=a[s=r.slice(o,o+i).join(n)];if(void 0===l)return;if(t.endsWith(s)){if("string"==typeof l)return l;if(s&&"string"==typeof l[s])return l[s]}var u=r.slice(o+i).join(n);return u?ce(l,u,n):void 0}a=a[r[o]]}return a}}var de=function(e){F(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=z(t);if(n){var a=z(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return j(this,e)});function a(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return D(this,a),t=r.call(this),ie&&W.call(M(t)),t.data=e||{},t.options=n,void 0===t.options.keySeparator&&(t.options.keySeparator="."),void 0===t.options.ignoreJSONStructure&&(t.options.ignoreJSONStructure=!0),t}return L(a,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,o=void 0!==r.ignoreJSONStructure?r.ignoreJSONStructure:this.options.ignoreJSONStructure,i=[e,t];n&&"string"!=typeof n&&(i=i.concat(n)),n&&"string"==typeof n&&(i=i.concat(a?n.split(a):n)),e.indexOf(".")>-1&&(i=e.split("."));var s=ee(this.data,i);return s||!o||"string"!=typeof n?s:ce(this.data&&this.data[e]&&this.data[e][t],n,a)}},{key:"addResource",value:function(e,t,n,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},o=this.options.keySeparator;void 0===o&&(o=".");var i=[e,t];n&&(i=i.concat(o?n.split(o):n)),e.indexOf(".")>-1&&(r=t,t=(i=e.split("."))[1]),this.addNamespaces(t),J(this.data,i,r),a.silent||this.emit("added",e,t,n,r)}},{key:"addResources",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var a in n)"string"!=typeof n[a]&&"[object Array]"!==Object.prototype.toString.apply(n[a])||this.addResource(e,t,a,n[a],{silent:!0});r.silent||this.emit("added",e,t,n)}},{key:"addResourceBundle",value:function(e,t,n,r,a){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},i=[e,t];e.indexOf(".")>-1&&(r=n,n=t,t=(i=e.split("."))[1]),this.addNamespaces(t);var s=ee(this.data,i)||{};r?ne(s,n,a):s=ue(ue({},s),n),J(this.data,i,s),o.silent||this.emit("added",e,t,n)}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?ue(ue({},{}),this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"hasLanguageSomeTranslations",value:function(e){var t=this.getDataByLanguage(e);return!!(t&&Object.keys(t)||[]).find((function(e){return t[e]&&Object.keys(t[e]).length>0}))}},{key:"toJSON",value:function(){return this.data}}]),a}(W),pe={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,n,r,a){var o=this;return e.forEach((function(e){o.processors[e]&&(t=o.processors[e].process(t,n,r,a))})),t}};function fe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function he(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?fe(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):fe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var ge={},ve=function(e){F(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=z(t);if(n){var a=z(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return j(this,e)});function a(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return D(this,a),t=r.call(this),ie&&W.call(M(t)),Q(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,M(t)),t.options=n,void 0===t.options.keySeparator&&(t.options.keySeparator="."),t.logger=q.create("translator"),t}return L(a,[{key:"changeLanguage",value:function(e){e&&(this.language=e)}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;var n=this.resolve(e,t);return n&&void 0!==n.res}},{key:"extractFromKey",value:function(e,t){var n=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===n&&(n=":");var r=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,a=t.ns||this.options.defaultNS||[],o=n&&e.indexOf(n)>-1,i=!(this.options.userDefinedKeySeparator||t.keySeparator||this.options.userDefinedNsSeparator||t.nsSeparator||function(e,t,n){t=t||"",n=n||"";var r=se.filter((function(e){return t.indexOf(e)<0&&n.indexOf(e)<0}));if(0===r.length)return!0;var a=new RegExp("(".concat(r.map((function(e){return"?"===e?"\\?":e})).join("|"),")")),o=!a.test(e);if(!o){var i=e.indexOf(n);i>0&&!a.test(e.substring(0,i))&&(o=!0)}return o}(e,n,r));if(o&&!i){var s=e.match(this.interpolator.nestingRegexp);if(s&&s.length>0)return{key:e,namespaces:a};var l=e.split(n);(n!==r||n===r&&this.options.ns.indexOf(l[0])>-1)&&(a=l.shift()),e=l.join(r)}return"string"==typeof a&&(a=[a]),{key:e,namespaces:a}}},{key:"translate",value:function(e,t,n){var r=this;if("object"!==R(t)&&this.options.overloadTranslationOptionHandler&&(t=this.options.overloadTranslationOptionHandler(arguments)),t||(t={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);var o=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,i=this.extractFromKey(e[e.length-1],t),s=i.key,l=i.namespaces,u=l[l.length-1],c=t.lng||this.language,d=t.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(c&&"cimode"===c.toLowerCase()){if(d){var p=t.nsSeparator||this.options.nsSeparator;return u+p+s}return s}var f=this.resolve(e,t),h=f&&f.res,g=f&&f.usedKey||s,v=f&&f.exactUsedKey||s,m=Object.prototype.toString.apply(h),b=["[object Number]","[object Function]","[object RegExp]"],y=void 0!==t.joinArrays?t.joinArrays:this.options.joinArrays,S=!this.i18nFormat||this.i18nFormat.handleAsObject,w="string"!=typeof h&&"boolean"!=typeof h&&"number"!=typeof h;if(S&&h&&w&&b.indexOf(m)<0&&("string"!=typeof y||"[object Array]"!==m)){if(!t.returnObjects&&!this.options.returnObjects)return this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(g,h,he(he({},t),{},{ns:l})):"key '".concat(s," (").concat(this.language,")' returned an object instead of string.");if(o){var k="[object Array]"===m,C=k?[]:{},_=k?v:g;for(var x in h)if(Object.prototype.hasOwnProperty.call(h,x)){var E="".concat(_).concat(o).concat(x);C[x]=this.translate(E,he(he({},t),{joinArrays:!1,ns:l})),C[x]===E&&(C[x]=h[x])}h=C}}else if(S&&"string"==typeof y&&"[object Array]"===m)(h=h.join(y))&&(h=this.extendTranslation(h,e,t,n));else{var T=!1,A=!1,I=void 0!==t.count&&"string"!=typeof t.count,N=a.hasDefaultValue(t),P=I?this.pluralResolver.getSuffix(c,t.count,t):"",D=t["defaultValue".concat(P)]||t.defaultValue;!this.isValidLookup(h)&&N&&(T=!0,h=D),this.isValidLookup(h)||(A=!0,h=s);var O=t.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey,L=O&&A?void 0:h,M=N&&D!==h&&this.options.updateMissing;if(A||T||M){if(this.logger.log(M?"updateKey":"missingKey",c,u,s,M?D:h),o){var B=this.resolve(s,he(he({},t),{},{keySeparator:!1}));B&&B.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var F=[],j=this.languageUtils.getFallbackCodes(this.options.fallbackLng,t.lng||this.language);if("fallback"===this.options.saveMissingTo&&j&&j[0])for(var z=0;z<j.length;z++)F.push(j[z]);else"all"===this.options.saveMissingTo?F=this.languageUtils.toResolveHierarchy(t.lng||this.language):F.push(t.lng||this.language);var U=function(e,n,a){var o=N&&a!==h?a:L;r.options.missingKeyHandler?r.options.missingKeyHandler(e,u,n,o,M,t):r.backendConnector&&r.backendConnector.saveMissing&&r.backendConnector.saveMissing(e,u,n,o,M,t),r.emit("missingKey",e,u,n,h)};this.options.saveMissing&&(this.options.saveMissingPlurals&&I?F.forEach((function(e){r.pluralResolver.getSuffixes(e,t).forEach((function(n){U([e],s+n,t["defaultValue".concat(n)]||D)}))})):U(F,s,D))}h=this.extendTranslation(h,e,t,f,n),A&&h===s&&this.options.appendNamespaceToMissingKey&&(h="".concat(u,":").concat(s)),(A||T)&&this.options.parseMissingKeyHandler&&(h="v1"!==this.options.compatibilityAPI?this.options.parseMissingKeyHandler(s,T?h:void 0):this.options.parseMissingKeyHandler(h))}return h}},{key:"extendTranslation",value:function(e,t,n,r,a){var o=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,n,r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(he(he({},n),{interpolation:he(he({},this.options.interpolation),n.interpolation)}));var i,s="string"==typeof e&&(n&&n.interpolation&&void 0!==n.interpolation.skipOnVariables?n.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);if(s){var l=e.match(this.interpolator.nestingRegexp);i=l&&l.length}var u=n.replace&&"string"!=typeof n.replace?n.replace:n;if(this.options.interpolation.defaultVariables&&(u=he(he({},this.options.interpolation.defaultVariables),u)),e=this.interpolator.interpolate(e,u,n.lng||this.language,n),s){var c=e.match(this.interpolator.nestingRegexp);i<(c&&c.length)&&(n.nest=!1)}!1!==n.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,r=new Array(e),i=0;i<e;i++)r[i]=arguments[i];return a&&a[0]===r[0]&&!n.context?(o.logger.warn("It seems you are nesting recursively key: ".concat(r[0]," in key: ").concat(t[0])),null):o.translate.apply(o,r.concat([t]))}),n)),n.interpolation&&this.interpolator.reset()}var d=n.postProcess||this.options.postProcess,p="string"==typeof d?[d]:d;return null!=e&&p&&p.length&&!1!==n.applyPostProcessor&&(e=pe.handle(p,e,t,this.options&&this.options.postProcessPassResolved?he({i18nResolved:r},n):n,this)),e}},{key:"resolve",value:function(e){var t,n,r,a,o,i=this,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((function(e){if(!i.isValidLookup(t)){var l=i.extractFromKey(e,s),u=l.key;n=u;var c=l.namespaces;i.options.fallbackNS&&(c=c.concat(i.options.fallbackNS));var d=void 0!==s.count&&"string"!=typeof s.count,p=d&&!s.ordinal&&0===s.count&&i.pluralResolver.shouldUseIntlApi(),f=void 0!==s.context&&("string"==typeof s.context||"number"==typeof s.context)&&""!==s.context,h=s.lngs?s.lngs:i.languageUtils.toResolveHierarchy(s.lng||i.language,s.fallbackLng);c.forEach((function(e){i.isValidLookup(t)||(o=e,!ge["".concat(h[0],"-").concat(e)]&&i.utils&&i.utils.hasLoadedNamespace&&!i.utils.hasLoadedNamespace(o)&&(ge["".concat(h[0],"-").concat(e)]=!0,i.logger.warn('key "'.concat(n,'" for languages "').concat(h.join(", "),'" won\'t get resolved as namespace "').concat(o,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),h.forEach((function(n){if(!i.isValidLookup(t)){a=n;var o,l=[u];if(i.i18nFormat&&i.i18nFormat.addLookupKeys)i.i18nFormat.addLookupKeys(l,u,n,e,s);else{var c;d&&(c=i.pluralResolver.getSuffix(n,s.count,s));var h="_zero";if(d&&(l.push(u+c),p&&l.push(u+h)),f){var g="".concat(u).concat(i.options.contextSeparator).concat(s.context);l.push(g),d&&(l.push(g+c),p&&l.push(g+h))}}for(;o=l.pop();)i.isValidLookup(t)||(r=o,t=i.getResource(n,e,o,s))}})))}))}})),{res:t,usedKey:n,exactUsedKey:r,usedLng:a,usedNS:o}}},{key:"isValidLookup",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,r):this.resourceStore.getResource(e,t,n,r)}}],[{key:"hasDefaultValue",value:function(e){var t="defaultValue";for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t===n.substring(0,t.length)&&void 0!==e[n])return!0;return!1}}]),a}(W);function me(e){return e.charAt(0).toUpperCase()+e.slice(1)}var be=function(){function e(t){D(this,e),this.options=t,this.supportedLngs=this.options.supportedLngs||!1,this.logger=q.create("languageUtils")}return L(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],n=e.split("-");return this.options.lowerCaseLng?n=n.map((function(e){return e.toLowerCase()})):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=me(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=me(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=me(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isSupportedCode",value:function(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,n=this;return e?(e.forEach((function(e){if(!t){var r=n.formatLanguageCode(e);n.options.supportedLngs&&!n.isSupportedCode(r)||(t=r)}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var r=n.getLanguagePartFromCode(e);if(n.isSupportedCode(r))return t=r;t=n.options.supportedLngs.find((function(e){if(0===e.indexOf(r))return e}))}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e[this.getLanguagePartFromCode(t)]),n||(n=e.default),n||[]}},{key:"toResolveHierarchy",value:function(e,t){var n=this,r=this.getFallbackCodes(t||this.options.fallbackLng||[],e),a=[],o=function(e){e&&(n.isSupportedCode(e)?a.push(e):n.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))};return"string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&o(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&o(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&o(this.getLanguagePartFromCode(e))):"string"==typeof e&&o(this.formatLanguageCode(e)),r.forEach((function(e){a.indexOf(e)<0&&o(n.formatLanguageCode(e))})),a}}]),e}(),ye=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],Se={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}},we=["v1","v2","v3"],ke={zero:0,one:1,two:2,few:3,many:4,other:5};function Ce(){var e={};return ye.forEach((function(t){t.lngs.forEach((function(n){e[n]={numbers:t.nr,plurals:Se[t.fc]}}))})),e}var _e=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};D(this,e),this.languageUtils=t,this.options=n,this.logger=q.create("pluralResolver"),this.options.compatibilityJSON&&"v4"!==this.options.compatibilityJSON||"undefined"!=typeof Intl&&Intl.PluralRules||(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=Ce()}return L(e,[{key:"addRule",value:function(e,t){this.rules[e]=t}},{key:"getRule",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(e,{type:t.ordinal?"ordinal":"cardinal"})}catch(e){return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.getRule(e,t);return this.shouldUseIntlApi()?n&&n.resolvedOptions().pluralCategories.length>1:n&&n.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,n).map((function(e){return"".concat(t).concat(e)}))}},{key:"getSuffixes",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=this.getRule(e,n);return r?this.shouldUseIntlApi()?r.resolvedOptions().pluralCategories.sort((function(e,t){return ke[e]-ke[t]})).map((function(e){return"".concat(t.options.prepend).concat(e)})):r.numbers.map((function(r){return t.getSuffix(e,r,n)})):[]}},{key:"getSuffix",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=this.getRule(e,n);return r?this.shouldUseIntlApi()?"".concat(this.options.prepend).concat(r.select(t)):this.getSuffixRetroCompatible(r,t):(this.logger.warn("no plural rule found for: ".concat(e)),"")}},{key:"getSuffixRetroCompatible",value:function(e,t){var n=this,r=e.noAbs?e.plurals(t):e.plurals(Math.abs(t)),a=e.numbers[r];this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]&&(2===a?a="plural":1===a&&(a=""));var o=function(){return n.options.prepend&&a.toString()?n.options.prepend+a.toString():a.toString()};return"v1"===this.options.compatibilityJSON?1===a?"":"number"==typeof a?"_plural_".concat(a.toString()):o():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]?o():this.options.prepend&&r.toString()?this.options.prepend+r.toString():r.toString()}},{key:"shouldUseIntlApi",value:function(){return!we.includes(this.options.compatibilityJSON)}}]),e}();function xe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ee(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xe(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Te=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};D(this,e),this.logger=q.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return L(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:oe,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?re(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?re(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?re(t.nestingPrefix):t.nestingPrefixEscaped||re("$t("),this.nestingSuffix=t.nestingSuffix?re(t.nestingSuffix):t.nestingSuffixEscaped||re(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var n="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(n,"g")}},{key:"interpolate",value:function(e,t,n,r){var a,o,i,s=this,l=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function u(e){return e.replace(/\$/g,"$$$$")}var c=function(e){if(e.indexOf(s.formatSeparator)<0){var a=te(t,l,e);return s.alwaysFormat?s.format(a,void 0,n,Ee(Ee(Ee({},r),t),{},{interpolationkey:e})):a}var o=e.split(s.formatSeparator),i=o.shift().trim(),u=o.join(s.formatSeparator).trim();return s.format(te(t,l,i),u,n,Ee(Ee(Ee({},r),t),{},{interpolationkey:i}))};this.resetRegExp();var d=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,p=r&&r.interpolation&&void 0!==r.interpolation.skipOnVariables?r.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:function(e){return u(e)}},{regex:this.regexp,safeValue:function(e){return s.escapeValue?u(s.escape(e)):u(e)}}].forEach((function(t){for(i=0;a=t.regex.exec(e);){var n=a[1].trim();if(void 0===(o=c(n)))if("function"==typeof d){var l=d(e,a,r);o="string"==typeof l?l:""}else if(r&&r.hasOwnProperty(n))o="";else{if(p){o=a[0];continue}s.logger.warn("missed to pass in variable ".concat(n," for interpolating ").concat(e)),o=""}else"string"==typeof o||s.useRawValueToEscape||(o=Y(o));var u=t.safeValue(o);if(e=e.replace(a[0],u),p?(t.regex.lastIndex+=u.length,t.regex.lastIndex-=a[0].length):t.regex.lastIndex=0,++i>=s.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var n,r,a=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=Ee({},o);function s(e,t){var n=this.nestingOptionsSeparator;if(e.indexOf(n)<0)return e;var r=e.split(new RegExp("".concat(n,"[ ]*{"))),a="{".concat(r[1]);e=r[0],a=(a=this.interpolate(a,i)).replace(/'/g,'"');try{i=JSON.parse(a),t&&(i=Ee(Ee({},t),i))}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(n).concat(a)}return delete i.defaultValue,e}for(i.applyPostProcessor=!1,delete i.defaultValue;n=this.nestingRegexp.exec(e);){var l=[],u=!1;if(-1!==n[0].indexOf(this.formatSeparator)&&!/{.*}/.test(n[1])){var c=n[1].split(this.formatSeparator).map((function(e){return e.trim()}));n[1]=c.shift(),l=c,u=!0}if((r=t(s.call(this,n[1].trim(),i),i))&&n[0]===e&&"string"!=typeof r)return r;"string"!=typeof r&&(r=Y(r)),r||(this.logger.warn("missed to resolve ".concat(n[1]," for nesting ").concat(e)),r=""),u&&(r=l.reduce((function(e,t){return a.format(e,t,o.lng,Ee(Ee({},o),{},{interpolationkey:n[1].trim()}))}),r.trim())),e=e.replace(n[0],r),this.regexp.lastIndex=0}return e}}]),e}();function Ae(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ie(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ae(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ae(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Ne=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};D(this,e),this.logger=q.create("formatter"),this.options=t,this.formats={number:function(e,t,n){return new Intl.NumberFormat(t,n).format(e)},currency:function(e,t,n){return new Intl.NumberFormat(t,Ie(Ie({},n),{},{style:"currency"})).format(e)},datetime:function(e,t,n){return new Intl.DateTimeFormat(t,Ie({},n)).format(e)},relativetime:function(e,t,n){return new Intl.RelativeTimeFormat(t,Ie({},n)).format(e,n.range||"day")},list:function(e,t,n){return new Intl.ListFormat(t,Ie({},n)).format(e)}},this.init(t)}return L(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},n=t.interpolation;this.formatSeparator=n.formatSeparator?n.formatSeparator:n.formatSeparator||","}},{key:"add",value:function(e,t){this.formats[e.toLowerCase().trim()]=t}},{key:"format",value:function(e,t,n,r){var a=this;return t.split(this.formatSeparator).reduce((function(e,t){var o=function(e){var t=e.toLowerCase().trim(),n={};if(e.indexOf("(")>-1){var r=e.split("(");t=r[0].toLowerCase().trim();var a=r[1].substring(0,r[1].length-1);"currency"===t&&a.indexOf(":")<0?n.currency||(n.currency=a.trim()):"relativetime"===t&&a.indexOf(":")<0?n.range||(n.range=a.trim()):a.split(";").forEach((function(e){if(e){var t=function(e){return function(e){if(Array.isArray(e))return e}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.split(":")),r=t[0],a=t.slice(1).join(":");n[r.trim()]||(n[r.trim()]=a.trim()),"false"===a.trim()&&(n[r.trim()]=!1),"true"===a.trim()&&(n[r.trim()]=!0),isNaN(a.trim())||(n[r.trim()]=parseInt(a.trim(),10))}}))}return{formatName:t,formatOptions:n}}(t),i=o.formatName,s=o.formatOptions;if(a.formats[i]){var l=e;try{var u=r&&r.formatParams&&r.formatParams[r.interpolationkey]||{},c=u.locale||u.lng||r.locale||r.lng||n;l=a.formats[i](e,c,Ie(Ie(Ie({},s),r),u))}catch(e){a.logger.warn(e)}return l}return a.logger.warn("there was no format function for ".concat(i)),e}),e)}}]),e}();function Pe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Re(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Pe(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Pe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var De=function(e){F(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=z(t);if(n){var a=z(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return j(this,e)});function a(e,t,n){var o,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return D(this,a),o=r.call(this),ie&&W.call(M(o)),o.backend=e,o.store=t,o.services=n,o.languageUtils=n.languageUtils,o.options=i,o.logger=q.create("backendConnector"),o.state={},o.queue=[],o.backend&&o.backend.init&&o.backend.init(n,i.backend,i),o}return L(a,[{key:"queueLoad",value:function(e,t,n,r){var a=this,o=[],i=[],s=[],l=[];return e.forEach((function(e){var r=!0;t.forEach((function(t){var s="".concat(e,"|").concat(t);!n.reload&&a.store.hasResourceBundle(e,t)?a.state[s]=2:a.state[s]<0||(1===a.state[s]?i.indexOf(s)<0&&i.push(s):(a.state[s]=1,r=!1,i.indexOf(s)<0&&i.push(s),o.indexOf(s)<0&&o.push(s),l.indexOf(t)<0&&l.push(t)))})),r||s.push(e)})),(o.length||i.length)&&this.queue.push({pending:i,loaded:{},errors:[],callback:r}),{toLoad:o,pending:i,toLoadLanguages:s,toLoadNamespaces:l}}},{key:"loaded",value:function(e,t,n){var r=e.split("|"),a=r[0],o=r[1];t&&this.emit("failedLoading",a,o,t),n&&this.store.addResourceBundle(a,o,n),this.state[e]=t?-1:2;var i={};this.queue.forEach((function(n){!function(e,t,n,r){var a=G(e,t,Object),o=a.obj,i=a.k;o[i]=o[i]||[],o[i].push(n)}(n.loaded,[a],o),function(e,t){for(var n=e.indexOf(t);-1!==n;)e.splice(n,1),n=e.indexOf(t)}(n.pending,e),t&&n.errors.push(t),0!==n.pending.length||n.done||(Object.keys(n.loaded).forEach((function(e){i[e]||(i[e]=[]),n.loaded[e].length&&n.loaded[e].forEach((function(t){i[e].indexOf(t)<0&&i[e].push(t)}))})),n.done=!0,n.errors.length?n.callback(n.errors):n.callback())})),this.emit("loaded",i),this.queue=this.queue.filter((function(e){return!e.done}))}},{key:"read",value:function(e,t,n){var r=this,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:350,i=arguments.length>5?arguments[5]:void 0;return e.length?this.backend[n](e,t,(function(s,l){s&&l&&a<5?setTimeout((function(){r.read.call(r,e,t,n,a+1,2*o,i)}),o):i(s,l)})):i(null,{})}},{key:"prepareLoading",value:function(e,t){var n=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),a&&a();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var o=this.queueLoad(e,t,r,a);if(!o.toLoad.length)return o.pending.length||a(),null;o.toLoad.forEach((function(e){n.loadOne(e)}))}},{key:"load",value:function(e,t,n){this.prepareLoading(e,t,{},n)}},{key:"reload",value:function(e,t,n){this.prepareLoading(e,t,{reload:!0},n)}},{key:"loadOne",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=e.split("|"),a=r[0],o=r[1];this.read(a,o,"read",void 0,void 0,(function(r,i){r&&t.logger.warn("".concat(n,"loading namespace ").concat(o," for language ").concat(a," failed"),r),!r&&i&&t.logger.log("".concat(n,"loaded namespace ").concat(o," for language ").concat(a),i),t.loaded(e,r,i)}))}},{key:"saveMissing",value:function(e,t,n,r,a){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key "'.concat(n,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"):null!=n&&""!==n&&(this.backend&&this.backend.create&&this.backend.create(e,t,n,r,null,Re(Re({},o),{},{isUpdate:a})),e&&e[0]&&this.store.addResource(e[0],t,n,r))}}]),a}(W);function Oe(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===R(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===R(e[2])||"object"===R(e[3])){var n=e[3]||e[2];Object.keys(n).forEach((function(e){t[e]=n[e]}))}return t},interpolation:{escapeValue:!0,format:function(e,t,n,r){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function Le(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function Me(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Be(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Me(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Me(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Fe(){}function je(e){Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(t){"function"==typeof e[t]&&(e[t]=e[t].bind(e))}))}var ze=function(e){F(a,e);var t,n,r=(t=a,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=z(t);if(n){var a=z(this).constructor;e=Reflect.construct(r,arguments,a)}else e=r.apply(this,arguments);return j(this,e)});function a(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;if(D(this,a),e=r.call(this),ie&&W.call(M(e)),e.options=Le(t),e.services={},e.logger=q,e.modules={external:[]},je(M(e)),n&&!e.isInitialized&&!t.isClone){if(!e.options.initImmediate)return e.init(t,n),j(e,M(e));setTimeout((function(){e.init(t,n)}),0)}return e}return L(a,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;"function"==typeof t&&(n=t,t={}),!t.defaultNS&&t.ns&&("string"==typeof t.ns?t.defaultNS=t.ns:t.ns.indexOf("translation")<0&&(t.defaultNS=t.ns[0]));var r=Oe();function a(e){return e?"function"==typeof e?new e:e:null}if(this.options=Be(Be(Be({},r),this.options),Le(t)),"v1"!==this.options.compatibilityAPI&&(this.options.interpolation=Be(Be({},r.interpolation),this.options.interpolation)),void 0!==t.keySeparator&&(this.options.userDefinedKeySeparator=t.keySeparator),void 0!==t.nsSeparator&&(this.options.userDefinedNsSeparator=t.nsSeparator),!this.options.isClone){var o;this.modules.logger?q.init(a(this.modules.logger),this.options):q.init(null,this.options),this.modules.formatter?o=this.modules.formatter:"undefined"!=typeof Intl&&(o=Ne);var i=new be(this.options);this.store=new de(this.options.resources,this.options);var s=this.services;s.logger=q,s.resourceStore=this.store,s.languageUtils=i,s.pluralResolver=new _e(i,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!o||this.options.interpolation.format&&this.options.interpolation.format!==r.interpolation.format||(s.formatter=a(o),s.formatter.init(s,this.options),this.options.interpolation.format=s.formatter.format.bind(s.formatter)),s.interpolator=new Te(this.options),s.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},s.backendConnector=new De(a(this.modules.backend),s.resourceStore,s,this.options),s.backendConnector.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];e.emit.apply(e,[t].concat(r))})),this.modules.languageDetector&&(s.languageDetector=a(this.modules.languageDetector),s.languageDetector.init(s,this.options.detection,this.options)),this.modules.i18nFormat&&(s.i18nFormat=a(this.modules.i18nFormat),s.i18nFormat.init&&s.i18nFormat.init(this)),this.translator=new ve(this.services,this.options),this.translator.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];e.emit.apply(e,[t].concat(r))})),this.modules.external.forEach((function(t){t.init&&t.init(e)}))}if(this.format=this.options.interpolation.format,n||(n=Fe),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var l=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);l.length>0&&"dev"!==l[0]&&(this.options.lng=l[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");var u=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];u.forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments)}}));var c=["addResource","addResources","addResourceBundle","removeResourceBundle"];c.forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments),e}}));var d=X(),p=function(){var t=function(t,r){e.isInitialized&&!e.initializedStoreOnce&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),d.resolve(r),n(t,r)};if(e.languages&&"v1"!==e.options.compatibilityAPI&&!e.isInitialized)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t)};return this.options.resources||!this.options.initImmediate?p():setTimeout(p,0),d}},{key:"loadResources",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Fe,r=n,a="string"==typeof e?e:this.language;if("function"==typeof e&&(r=e),!this.options.resources||this.options.partialBundledLanguages){if(a&&"cimode"===a.toLowerCase())return r();var o=[],i=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){o.indexOf(e)<0&&o.push(e)}))};if(a)i(a);else{var s=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);s.forEach((function(e){return i(e)}))}this.options.preload&&this.options.preload.forEach((function(e){return i(e)})),this.services.backendConnector.load(o,this.options.ns,(function(e){e||t.resolvedLanguage||!t.language||t.setResolvedLanguage(t.language),r(e)}))}else r(null)}},{key:"reloadResources",value:function(e,t,n){var r=X();return e||(e=this.languages),t||(t=this.options.ns),n||(n=Fe),this.services.backendConnector.reload(e,t,(function(e){r.resolve(),n(e)})),r}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&pe.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"setResolvedLanguage",value:function(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(var t=0;t<this.languages.length;t++){var n=this.languages[t];if(!(["cimode","dev"].indexOf(n)>-1)&&this.store.hasLanguageSomeTranslations(n)){this.resolvedLanguage=n;break}}}},{key:"changeLanguage",value:function(e,t){var n=this;this.isLanguageChangingTo=e;var r=X();this.emit("languageChanging",e);var a=function(e){n.language=e,n.languages=n.services.languageUtils.toResolveHierarchy(e),n.resolvedLanguage=void 0,n.setResolvedLanguage(e)},o=function(o){e||o||!n.services.languageDetector||(o=[]);var i="string"==typeof o?o:n.services.languageUtils.getBestMatchFromCodes(o);i&&(n.language||a(i),n.translator.language||n.translator.changeLanguage(i),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(i)),n.loadResources(i,(function(e){!function(e,o){o?(a(o),n.translator.changeLanguage(o),n.isLanguageChangingTo=void 0,n.emit("languageChanged",o),n.logger.log("languageChanged",o)):n.isLanguageChangingTo=void 0,r.resolve((function(){return n.t.apply(n,arguments)})),t&&t(e,(function(){return n.t.apply(n,arguments)}))}(e,i)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(o):o(e):o(this.services.languageDetector.detect()),r}},{key:"getFixedT",value:function(e,t,n){var r=this,a=function e(t,a){var o;if("object"!==R(a)){for(var i=arguments.length,s=new Array(i>2?i-2:0),l=2;l<i;l++)s[l-2]=arguments[l];o=r.options.overloadTranslationOptionHandler([t,a].concat(s))}else o=Be({},a);o.lng=o.lng||e.lng,o.lngs=o.lngs||e.lngs,o.ns=o.ns||e.ns;var u=r.options.keySeparator||".",c=n?"".concat(n).concat(u).concat(t):t;return r.t(c,o)};return"string"==typeof e?a.lng=e:a.lngs=e,a.ns=t,a.keyPrefix=n,a}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e}},{key:"hasLoadedNamespace",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var r=this.resolvedLanguage||this.languages[0],a=!!this.options&&this.options.fallbackLng,o=this.languages[this.languages.length-1];if("cimode"===r.toLowerCase())return!0;var i=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return-1===r||2===r};if(n.precheck){var s=n.precheck(this,i);if(void 0!==s)return s}return!(!this.hasResourceBundle(r,e)&&this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages)&&(!i(r,e)||a&&!i(o,e)))}},{key:"loadNamespaces",value:function(e,t){var n=this,r=X();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){n.options.ns.indexOf(e)<0&&n.options.ns.push(e)})),this.loadResources((function(e){r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var n=X();"string"==typeof e&&(e=[e]);var r=this.options.preload||[],a=e.filter((function(e){return r.indexOf(e)<0}));return a.length?(this.options.preload=r.concat(a),this.loadResources((function(e){n.resolve(),t&&t(e)})),n):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){return e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),e?["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr":"rtl"}},{key:"cloneInstance",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Fe,r=Be(Be(Be({},this.options),t),{isClone:!0}),o=new a(r),i=["store","services","language"];return i.forEach((function(t){o[t]=e[t]})),o.services=Be({},this.services),o.services.utils={hasLoadedNamespace:o.hasLoadedNamespace.bind(o)},o.translator=new ve(o.services,o.options),o.translator.on("*",(function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];o.emit.apply(o,[e].concat(n))})),o.init(r,n),o.translator.options=o.options,o.translator.backendConnector.services.utils={hasLoadedNamespace:o.hasLoadedNamespace.bind(o)},o}},{key:"toJSON",value:function(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}]),a}(W);U(ze,"createInstance",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;return new ze(e,t)}));var Ue=ze.createInstance();Ue.createInstance=ze.createInstance,Ue.createInstance,Ue.init,Ue.loadResources,Ue.reloadResources,Ue.use,Ue.changeLanguage,Ue.getFixedT,Ue.t,Ue.exists,Ue.setDefaultNamespace,Ue.hasLoadedNamespace,Ue.loadNamespaces,Ue.loadLanguages;const He=Ue;var Ve=[],Ke=Ve.forEach,Ze=Ve.slice;function $e(e){return Ke.call(Ze.call(arguments,1),(function(t){if(t)for(var n in t)void 0===e[n]&&(e[n]=t[n])})),e}var qe=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,We=function(e,t,n){var r=n||{};r.path=r.path||"/";var a=e+"="+encodeURIComponent(t);if(r.maxAge>0){var o=r.maxAge-0;if(isNaN(o))throw new Error("maxAge should be a Number");a+="; Max-Age="+Math.floor(o)}if(r.domain){if(!qe.test(r.domain))throw new TypeError("option domain is invalid");a+="; Domain="+r.domain}if(r.path){if(!qe.test(r.path))throw new TypeError("option path is invalid");a+="; Path="+r.path}if(r.expires){if("function"!=typeof r.expires.toUTCString)throw new TypeError("option expires is invalid");a+="; Expires="+r.expires.toUTCString()}if(r.httpOnly&&(a+="; HttpOnly"),r.secure&&(a+="; Secure"),r.sameSite)switch("string"==typeof r.sameSite?r.sameSite.toLowerCase():r.sameSite){case!0:case"strict":a+="; SameSite=Strict";break;case"lax":a+="; SameSite=Lax";break;case"none":a+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return a},Xe={name:"cookie",lookup:function(e){var t;if(e.lookupCookie&&"undefined"!=typeof document){var n=function(e){for(var t=e+"=",n=document.cookie.split(";"),r=0;r<n.length;r++){for(var a=n[r];" "===a.charAt(0);)a=a.substring(1,a.length);if(0===a.indexOf(t))return a.substring(t.length,a.length)}return null}(e.lookupCookie);n&&(t=n)}return t},cacheUserLanguage:function(e,t){t.lookupCookie&&"undefined"!=typeof document&&function(e,t,n,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};n&&(a.expires=new Date,a.expires.setTime(a.expires.getTime()+60*n*1e3)),r&&(a.domain=r),document.cookie=We(e,encodeURIComponent(t),a)}(t.lookupCookie,e,t.cookieMinutes,t.cookieDomain,t.cookieOptions)}},Ye={name:"querystring",lookup:function(e){var t;if("undefined"!=typeof window){var n=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(n=window.location.hash.substring(window.location.hash.indexOf("?")));for(var r=n.substring(1).split("&"),a=0;a<r.length;a++){var o=r[a].indexOf("=");o>0&&r[a].substring(0,o)===e.lookupQuerystring&&(t=r[a].substring(o+1))}}return t}},Qe=null,Ge=function(){if(null!==Qe)return Qe;try{Qe="undefined"!==window&&null!==window.localStorage;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(e){Qe=!1}return Qe},Je={name:"localStorage",lookup:function(e){var t;if(e.lookupLocalStorage&&Ge()){var n=window.localStorage.getItem(e.lookupLocalStorage);n&&(t=n)}return t},cacheUserLanguage:function(e,t){t.lookupLocalStorage&&Ge()&&window.localStorage.setItem(t.lookupLocalStorage,e)}},et=null,tt=function(){if(null!==et)return et;try{et="undefined"!==window&&null!==window.sessionStorage;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(e){et=!1}return et},nt={name:"sessionStorage",lookup:function(e){var t;if(e.lookupSessionStorage&&tt()){var n=window.sessionStorage.getItem(e.lookupSessionStorage);n&&(t=n)}return t},cacheUserLanguage:function(e,t){t.lookupSessionStorage&&tt()&&window.sessionStorage.setItem(t.lookupSessionStorage,e)}},rt={name:"navigator",lookup:function(e){var t=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var n=0;n<navigator.languages.length;n++)t.push(navigator.languages[n]);navigator.userLanguage&&t.push(navigator.userLanguage),navigator.language&&t.push(navigator.language)}return t.length>0?t:void 0}},at={name:"htmlTag",lookup:function(e){var t,n=e.htmlTag||("undefined"!=typeof document?document.documentElement:null);return n&&"function"==typeof n.getAttribute&&(t=n.getAttribute("lang")),t}},ot={name:"path",lookup:function(e){var t;if("undefined"!=typeof window){var n=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(n instanceof Array)if("number"==typeof e.lookupFromPathIndex){if("string"!=typeof n[e.lookupFromPathIndex])return;t=n[e.lookupFromPathIndex].replace("/","")}else t=n[0].replace("/","")}return t}},it={name:"subdomain",lookup:function(e){var t;if("undefined"!=typeof window){var n=window.location.href.match(/(?:http[s]*\:\/\/)*(.*?)\.(?=[^\/]*\..{2,5})/gi);n instanceof Array&&(t="number"==typeof e.lookupFromSubdomainIndex?n[e.lookupFromSubdomainIndex].replace("http://","").replace("https://","").replace(".",""):n[0].replace("http://","").replace("https://","").replace(".",""))}return t}},st=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};D(this,e),this.type="languageDetector",this.detectors={},this.init(t,n)}return L(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e,this.options=$e(t,this.options||{},{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"]}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=n,this.addDetector(Xe),this.addDetector(Ye),this.addDetector(Je),this.addDetector(nt),this.addDetector(rt),this.addDetector(at),this.addDetector(ot),this.addDetector(it)}},{key:"addDetector",value:function(e){this.detectors[e.name]=e}},{key:"detect",value:function(e){var t=this;e||(e=this.options.order);var n=[];return e.forEach((function(e){if(t.detectors[e]){var r=t.detectors[e].lookup(t.options);r&&"string"==typeof r&&(r=[r]),r&&(n=n.concat(r))}})),this.services.languageUtils.getBestMatchFromCodes?n:n.length>0?n[0]:null}},{key:"cacheUserLanguage",value:function(e,t){var n=this;t||(t=this.options.caches),t&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||t.forEach((function(t){n.detectors[t]&&n.detectors[t].cacheUserLanguage(e,n.options)})))}}]),e}();function lt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ut(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?lt(Object(n),!0).forEach((function(t){U(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):lt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}st.type="languageDetector";var ct={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0};e.createContext(),L((function e(){D(this,e),this.usedNamespaces={}}),[{key:"addUsedNamespaces",value:function(e){var t=this;e.forEach((function(e){t.usedNamespaces[e]||(t.usedNamespaces[e]=!0)}))}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]);var dt={type:"3rdParty",init:function(e){!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};ct=ut(ut({},ct),e)}(e.options.react)}};const pt={en:{translations:JSON.parse('{"amtFeatures":{"enabled":"enabled","disabled":"disabled","messageTypes":{"success":"success","warning":"warning","error":"error"},"features":{"kvm":"KVM","sol":"SOL"},"messages":{"kvmNotEnabledAndNotPoweredUp":"Power on remote computer and check the KVM enable to connect to KVM","notPoweredUp":"Remote computer is not powered on.","kvmNotEnabled":"Check the KVM enable to connect to KVM","failedKvmFetch":"Unable to fetch KVM features","failedKvmFetchAndNotPoweredUp":"Unable to fetch KVM features and device is not powered on","failedKvmFetchAndFailedPowerFetch":"Unable to fetch KVM features and device power status","kvmNotEnabledAndFailedPowerFetch":"Check the KVM enable to connect to KVM and failed to fetch power status","failedPowerFetch":"Failed to fetch the power status","solNotEnabledAndNotPoweredUp":"Power on remote computer and check the SOL enable to connect to SOL","solNotEnabled":"Check the SOL enable to connect to SOL","failedSolFetch":"Unable to fetch SOL features","failedSolFetchAndNotPoweredUp":"Unable to fetch SOL features and device is not powered on","failedSolFetchAndFailedPowerFetch":"Unable to fetch SOL features and device power status","solNotEnabledAndFailedPowerFetch":"Check the SOL enable to connect to SOL and failed to fetch power status","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"Logout","profile":"Profile"},"pageNotFound":{"title":"404 - Page not found","message":"Oops, we weren\'t able to find the page you requested."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"Login","userName":"username","password":"password","signIn":"Sign In","cancel":"Cancel"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"devices":{"grid":{"Name":"Name","uuids":"UUID","connected":"Connected","deviceName":"Device name","deviceType":"Device type","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"Status","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"}},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"Initiator","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"dashboard":{"header":"AMT Device Management","deviceDetails":"Device details","count":"Count","totalDevices":"Total Devices","connectedDevices":"Connected","disconnectedDevices":"Disconnected"},"cira":{"new":"New","delete":"Delete","edit":"Edit","close":"Close","newCIRAConfig":"New CIRA Configuration","editCIRAConfig":"Edit CIRA Configuration","configName":"Config Name","addressFormat":"MPS Server Address Format","ipv4":"IPV4","ipv6":"IPV6","fqdn":"FQDN","mpsServerAddress":"MPS Server Address","port":"Port","userName":"User Name","password":"Password","commonName":"Cert. Hostname(CN)","mpsRootCetificate":"MPS Root Certificate","create":"Create","save":"Save","mpsRootCertFormat":"Mps root certificate format","autoLoad":"Auto load","manual":"Manual","load":"Load","mpsLoaded":"MPS root certificate successfully loaded","errors":{"commonNameValidation":"Cert. Hostname(CN) is required field and contains letters,numbers and ._- characters.","passwordValidation":"Password is required field should contains atleast one lowercase letter, one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","userNameValidation":"User name is required field and contains letters, numbers and special characters.","portValidation":"Port is required and should be a numeric value between 1024 and 49151","ipv4AddressValidation":"Please enter valid IPV4 Address.","ipv6AddressValidation":"Please enter valid IPV6 Address.","fqdnAddressValidation":"Please enter valid FQDN Address.","configNameValidation":"Config name is required field and contains letters, numbers and special characters.","loadMpsError":"Load the mps root certificate","mpsCertFetchError":"Failed to fetch the certificate from the server. Please try to enter the certificate manually by switching the Mps root certificate format option.","mpsServerMismatchError":"MPS server address does not match with base URL of the application. Please try to enter the certificate manually by switching the Mps root certificate format option."},"grid":{"configName":"Config Name","mpsServer":"MPS server","port":"Port","username":"Username","password":"Password","commonName":"Cert. Hostname(CN)","rootCert":"MPS root Certificate"}},"domain":{"delete":"Delete","new":"New","edit":"Edit","close":"Close","newDomain":"Create Domain","editDomain":"Edit domain details","grid":{"name":"Name","domainSuffix":"Domain Suffix","provisioningCert":"Provisioning Certificate","provisioningCertStorageFormat":"Provisioning Certificate Storage Format","provisioningCertPassword":"Provisioning Certificate Password"},"name":"Name","domainSuffix":"Domain Suffix","provisioningCertStorageFormat":"Provisioning Cert Storage Format","provisioningCert":"Provisioning Cert","provisioningCertPassword":"Provisioning Cert Password","create":"Create","file":"File","browse":"Browse","browseNew":"Browse new file","save":"Save","namePlaceHolder":"Enter domain name","domainSuffixPlaceHolder":"Enter Domain suffix","provisioningCertTextAreaPlaceHolder":"Enter provisioning Cert ","provisioningCertPasswordPlaceHolder":"Enter password","provisioningCertTextPlaceHolder":"Enter file path","text":"Text","certExists":"If you would like to add a new Provisioning certificate browse and select.","error":{"nameValidation":"Name is a required field and contains letters, numbers and special characters.","domainSuffixValidation":"Domain suffix is a required field","provisioningCertStorageFormatValidation":"Provisioning Cert Storage Format is a required field","provisioningCertValidation":"Provisioning cert is a required field","provisioningCertPasswordValidation":"Provisioning Cert Password is required field should contains atleast one lowercase letter,  one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","invalidFileType":"Invalid provisioning certificate type"}},"network":{"new":"New","newNetwork":"New Network configuration","editNetwork":"Edit Network configuration","create":"Create","delete":"Delete","edit":"Edit","save":"Save","grid":{"name":"Name","dhcpEnabled":"DHCP Enabled"},"networkName":"Network Name","dhcpEnabled":"DHCP Enabled","errors":{"networkNameValidation":"Network name is a required field and contains letters, numbers and special characters."}}}')},te:{translations:JSON.parse('{"amtFeatures":{"enabled":"ఎనేబుల్","disabled":"వికలాంగ","messageTypes":{"success":"విజయం","warning":"హెచ్చరిక","error":"లోపం"},"features":{"kvm":"KVM","sol":"సోల్"},"messages":{"kvmNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు KVM ని ప్రారంభించండి","notPoweredUp":"రిమోట్ కంప్యూటర్ ఆన్ చేయబడదు.","kvmNotEnabled":"KVM ప్రారంభించబడలేదు","solNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు SOL ని ప్రారంభించండి","solNotEnabled":"SOL ప్రారంభించబడలేదు","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"లాగౌట్","profile":"ప్రొఫైల్"},"pageNotFound":{"title":"404 - పేజి దొరకలేదు","message":"అయ్యో, మీరు అభ్యర్థించిన పేజీని మేము కనుగొనలేకపోయాము."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"ప్రవేశించండి","userName":"యూజర్పేరు","password":"పాస్వర్డ్","signIn":"సైన్ ఇన్ చేయండి","cancel":"రద్దు చేయండి"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"పేరు","uuids":"UUID లను","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"స్థితి","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},fr:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"Nom","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"statut","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},es:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"nombre","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"estado","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')}};He.use(dt).use(st).init({resources:pt,ns:["translations"],defaultNS:"translations",debug:!1,fallbackLng:"en",interpolation:{escapeValue:!1,formatSeparator:","}}).catch((()=>console.info("error occured"))),He.changeLanguage(navigator.language).catch((()=>console.info("error occured")));const ft=new URL(window.location.href),ht=new URLSearchParams(ft.search);(0,t.render)(e.createElement(P,{autoConnect:!1,deviceId:ht.get("deviceId"),mpsServer:ht.get("mpsServer")+"/relay",authToken:"authorization",mouseDebounceTime:200,canvasHeight:"100%",canvasWidth:"100%"}),document.querySelector("#kvm"))})(),__webpack_exports__})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUksS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssSUFBSSxLQUFLLElBQUksSUFBSSxLQUFLLEtBQUssSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLEtBQUssSUFBSSxLQUFLLEtBQUt2SCxLQUFLd0gsb0JBQW9CLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxL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QUFVeFMsR0FBRyxJQUFJQSxHQUFHLEtBQUs0QixFQUFFNUIsRUFBRSxJQUFJQSxHQUFHLEtBQUtBLEdBQUcsTUFBTTRCLEVBQUU1QixFQUFFLE9BQU8sSUFBSUEsSUFBSTRCLEVBQUUsT0FBTyxJQUFJNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTyxLQUFLNUIsSUFBSTRCLEVBQUUsT0FBTzVCLEdBQUcsSUFBSUEsR0FBRyxNQUFNNEIsRUFBRTVCLEVBQUUsSUFBSSxNQUFNQSxJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01QixJQUFJNEIsRUFBRSxJQUFJLE1BQU01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QU0sR0FBR0MsT0FBTyxHQUFHQyxLQUFLLEdBQUdDLElBQUksR0FBR0MsSUFBSSxHQUFHQyxLQUFLLEdBQUdDLFlBQVksSUFBSUMsYUFBYSxJQUFJQyxPQUFPRixZQUFZQyxhQUFhRSxNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxvQkFBb0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksRUFBRSxHQUFHQyxtQkFBbUIsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxJQUFJQyxvQkFBb0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLE1BQU0sTUFBTSxFQUFFLEdBQUdDLG1CQUFtQixDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxTQUFTQyxjQUFjbGhCLEVBQUVGLEdBQUcsSUFBSVcsRUFBRWlCLEVBQUVRLEVBQUVDLEVBQUVVLEVBQUVDLEVBQUVPLEVBQUVDLEVBQUVDLEVB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QVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxTQUFTLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsU0FBUyxXQUFXLFdBQVcsV0FBVyxTQUFTLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFNBQVMsV0FBVyxXQUFXLFdBQVcsU0FBUyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsU0FBUyxXQUFXLFdB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QUFJQSxJQUFpQnhuRCxHQXVDaEVtb0QsQ0FBWWpzQyxFQUFTbGMsUUFBUW9vRCxlQy9DM0I1YSxHQUFZLENBQ2hCNmEsR0FBSSxDQUNGQyw0OFNBRUZseEMsR0FBSSxDQUNGa3hDLG05VkFFRkMsR0FBSSxDQUNGRCxrOVBBRUZFLEdBQUksQ0FDRkYsczlQQUlKLE9BQ09KLElBQ0p4RSxJQUFJLElBQ0oxZSxLQUFLLENBQ0p3SSxVQUFBQSxHQUNBUCxHQUFJLENBQUMsZ0JBQ0xDLFVBQVcsZUFDWHQwRCxPQUFPLEVBQ1B5NUQsWUFBYSxLQUVickQsY0FBZSxDQUNia0ssYUFBYSxFQUNiSyxnQkFBaUIsT0FFbEI5NkIsT0FBTSxJQUFNNW5DLFFBQVFxRCxLQUFLLG1CQUU5QixHQ3BDS2tuRSxlQUFlM2hCLFVBQVVzUCxVQUFVdHdCLE9BQU0sSUFBTTVuQyxRQUFRcUQsS0FBSyxtQkFFakUsTUFBTW04QixHQUFNLElBQUlveUMsSUFBSWx3RSxPQUFPQyxTQUFTbWdDLE1BQzlCMnNDLEdBQVMsSUFBSW9ELGdCQUFnQnJ5QyxHQUFJRixTQUV2QyxJQUFBelksUUFBTyxnQkFBQ3RtQixFQUFHLENBQUM2dUQsYUFBYSxFQUFPZixTQUFVb2dCLEdBQU8zdkQsSUFBSSxZQUFhd3ZDLFVBQVdtZ0IsR0FBTzN2RCxJQUFJLGFBQWUsU0FBVXZkLFVBQVUsZ0JBQWdCb3RELGtCQUFtQixJQUFLVSxhQUFjLE9BQVFDLFlBQWEsU0FBWTkrQyxTQUFTNjZDLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91aS10b29sa2l0L3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BvcGVuLWFtdC1jbG91ZC10b29sa2l0L3VpLXRvb2xraXQvYnVuZGxlcy9jb3JlLmJ1bmRsZS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvS1ZNL0Nvbm5lY3RCdXR0b24uc2NzcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvS1ZNL0VuY29kaW5nT3B0aW9ucy5zY3NzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9LVk0vSGVhZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9QdXJlQ2FudmFzLnNjc3MiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9VSS5zY3NzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly91aS10b29sa2l0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly91aS10b29sa2l0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9LVk0vQ29ubmVjdEJ1dHRvbi5zY3NzPzQ2Y2IiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9Db25uZWN0QnV0dG9uLnRzeCIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvS1ZNL0VuY29kaW5nT3B0aW9ucy5zY3NzP2NiMzciLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9FbmNvZGluZ09wdGlvbnMudHN4Iiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9LVk0vRGVza3RvcFNldHRpbmdzLnRzeCIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvS1ZNL0hlYWRlci5zY3NzPzdhNWYiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9IZWFkZXIudHN4Iiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9zaGFyZWQvVXRpbGl0aWVzLnRzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9LVk0vUHVyZUNhbnZhcy5zY3NzPzM1NjgiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9QdXJlQ2FudmFzLnRzeCIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvS1ZNL1VJLnNjc3M/YjA3NyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvS1ZNL1VJLnRzeCIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvaTE4bmV4dC9kaXN0L2VzbS9pMThuZXh0LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9BcnJheS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9pMThuZXh0LWJyb3dzZXItbGFuZ3VhZ2VkZXRlY3Rvci9kaXN0L2VzbS9pMThuZXh0QnJvd3Nlckxhbmd1YWdlRGV0ZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvY29udGV4dC5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL2kxOG4udHMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL0tWTS9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1widWktdG9vbGtpdFwiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJ1aS10b29sa2l0XCJdID0gZmFjdG9yeSgpO1xufSkoc2VsZiwgKCkgPT4ge1xucmV0dXJuICIsIi8qISBGb3IgbGljZW5zZSBpbmZvcm1hdGlvbiBwbGVhc2Ugc2VlIGNvcmUuYnVuZGxlLmpzLkxJQ0VOU0UudHh0ICovXG4hZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzW1widWktdG9vbGtpdC9jb3JlXCJdPWUoKTp0W1widWktdG9vbGtpdC9jb3JlXCJdPWUoKX0oc2VsZiwoZnVuY3Rpb24oKXtyZXR1cm4oKCk9Pnt2YXIgX193ZWJwYWNrX21vZHVsZXNfXz17NDg3OnQ9Pnt2YXIgZT17dXRmODp7c3RyaW5nVG9CeXRlczpmdW5jdGlvbih0KXtyZXR1cm4gZS5iaW4uc3RyaW5nVG9CeXRlcyh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQodCkpKX0sYnl0ZXNUb1N0cmluZzpmdW5jdGlvbih0KXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShlLmJpbi5ieXRlc1RvU3RyaW5nKHQpKSl9fSxiaW46e3N0cmluZ1RvQnl0ZXM6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGE9MDthPHQubGVuZ3RoO2ErKyllLnB1c2goMjU1JnQuY2hhckNvZGVBdChhKSk7cmV0dXJuIGV9LGJ5dGVzVG9TdHJpbmc6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGE9MDthPHQubGVuZ3RoO2ErKyllLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZSh0W2FdKSk7cmV0dXJuIGUuam9pbihcIlwiKX19fTt0LmV4cG9ydHM9ZX0sMTI6dD0+e3ZhciBlLGE7ZT1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIixhPXtyb3RsOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ8PGV8dD4+PjMyLWV9LHJvdHI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdDw8MzItZXx0Pj4+ZX0sZW5kaWFuOmZ1bmN0aW9uKHQpe2lmKHQuY29uc3RydWN0b3I9PU51bWJlcilyZXR1cm4gMTY3MTE5MzUmYS5yb3RsKHQsOCl8NDI3ODI1NTM2MCZhLnJvdGwodCwyNCk7Zm9yKHZhciBlPTA7ZTx0Lmxlbmd0aDtlKyspdFtlXT1hLmVuZGlhbih0W2VdKTtyZXR1cm4gdH0scmFuZG9tQnl0ZXM6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdO3Q+MDt0LS0pZS5wdXNoKE1hdGguZmxvb3IoMjU2Kk1hdGgucmFuZG9tKCkpKTtyZXR1cm4gZX0sYnl0ZXNUb1dvcmRzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxhPTAscz0wO2E8dC5sZW5ndGg7YSsrLHMrPTgpZVtzPj4+NV18PXRbYV08PDI0LXMlMzI7cmV0dXJuIGV9LHdvcmRzVG9CeXRlczpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10sYT0wO2E8MzIqdC5sZW5ndGg7YSs9OCllLnB1c2godFthPj4+NV0+Pj4yNC1hJTMyJjI1NSk7cmV0dXJuIGV9LGJ5dGVzVG9IZXg6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGE9MDthPHQubGVuZ3RoO2ErKyllLnB1c2goKHRbYV0+Pj40KS50b1N0cmluZygxNikpLGUucHVzaCgoMTUmdFthXSkudG9TdHJpbmcoMTYpKTtyZXR1cm4gZS5qb2luKFwiXCIpfSxoZXhUb0J5dGVzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxhPTA7YTx0Lmxlbmd0aDthKz0yKWUucHVzaChwYXJzZUludCh0LnN1YnN0cihhLDIpLDE2KSk7cmV0dXJuIGV9LGJ5dGVzVG9CYXNlNjQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBhPVtdLHM9MDtzPHQubGVuZ3RoO3MrPTMpZm9yKHZhciBvPXRbc108PDE2fHRbcysxXTw8OHx0W3MrMl0saT0wO2k8NDtpKyspOCpzKzYqaTw9OCp0Lmxlbmd0aD9hLnB1c2goZS5jaGFyQXQobz4+PjYqKDMtaSkmNjMpKTphLnB1c2goXCI9XCIpO3JldHVybiBhLmpvaW4oXCJcIil9LGJhc2U2NFRvQnl0ZXM6ZnVuY3Rpb24odCl7dD10LnJlcGxhY2UoL1teQS1aMC05K1xcL10vZ2ksXCJcIik7Zm9yKHZhciBhPVtdLHM9MCxvPTA7czx0Lmxlbmd0aDtvPSsrcyU0KTAhPW8mJmEucHVzaCgoZS5pbmRleE9mKHQuY2hhckF0KHMtMSkpJk1hdGgucG93KDIsLTIqbys4KS0xKTw8MipvfGUuaW5kZXhPZih0LmNoYXJBdChzKSk+Pj42LTIqbyk7cmV0dXJuIGF9fSx0LmV4cG9ydHM9YX0sNzM4OnQ9PntmdW5jdGlvbiBlKHQpe3JldHVybiEhdC5jb25zdHJ1Y3RvciYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5jb25zdHJ1Y3Rvci5pc0J1ZmZlciYmdC5jb25zdHJ1Y3Rvci5pc0J1ZmZlcih0KX10LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXQmJihlKHQpfHxmdW5jdGlvbih0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnJlYWRGbG9hdExFJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnNsaWNlJiZlKHQuc2xpY2UoMCwwKSl9KHQpfHwhIXQuX2lzQnVmZmVyKX19LDU2ODoodCxlLGEpPT57dmFyIHMsbyxpLHIsbjtzPWEoMTIpLG89YSg0ODcpLnV0ZjgsaT1hKDczOCkscj1hKDQ4NykuYmluLChuPWZ1bmN0aW9uKHQsZSl7dC5jb25zdHJ1Y3Rvcj09U3RyaW5nP3Q9ZSYmXCJiaW5hcnlcIj09PWUuZW5jb2Rpbmc/ci5zdHJpbmdUb0J5dGVzKHQpOm8uc3RyaW5nVG9CeXRlcyh0KTppKHQpP3Q9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCwwKTpBcnJheS5pc0FycmF5KHQpfHx0LmNvbnN0cnVjdG9yPT09VWludDhBcnJheXx8KHQ9dC50b1N0cmluZygpKTtmb3IodmFyIGE9cy5ieXRlc1RvV29yZHModCksbD04KnQubGVuZ3RoLGg9MTczMjU4NDE5MyxjPS0yNzE3MzM4NzkscD0tMTczMjU4NDE5NCxkPTI3MTczMzg3OCx2PTA7djxhLmxlbmd0aDt2KyspYVt2XT0xNjcxMTkzNSYoYVt2XTw8OHxhW3ZdPj4+MjQpfDQyNzgyNTUzNjAmKGFbdl08PDI0fGFbdl0+Pj44KTthW2w+Pj41XXw9MTI4PDxsJTMyLGFbMTQrKGwrNjQ+Pj45PDw0KV09bDt2YXIgYj1uLl9mZix1PW4uX2dnLGY9bi5faGgsZz1uLl9paTtmb3Iodj0wO3Y8YS5sZW5ndGg7dis9MTYpe3ZhciBTPWgsbT1jLF89cCxDPWQ7aD1iKGgsYyxwLGQsYVt2KzBdLDcsLTY4MDg3NjkzNiksZD1iKGQsaCxjLHAsYVt2KzFdLDEyLC0zODk1NjQ1ODYpLHA9YihwLGQsaCxjLGFbdisyXSwxNyw2MDYxMDU4MTkpLGM9YihjLHAsZCxoLGFbdiszXSwyMiwtMTA0NDUyNTMzMCksaD1iKGgsYyxwLGQsYVt2KzRdLDcsLTE3NjQxODg5NyksZD1iKGQsaCxjLHAsYVt2KzVdLDEyLDEyMDAwODA0MjYpLHA9YihwLGQsaCxjLGFbdis2XSwxNywtMTQ3MzIzMTM0MSksYz1iKGMscCxkLGgsYVt2KzddLDIyLC00NTcwNTk4MyksaD1iKGgsYyxwLGQsYVt2KzhdLDcsMTc3MDAzNTQxNiksZD1iKGQsaCxjLHAsYVt2KzldLDEyLC0xOTU4NDE0NDE3KSxwPWIocCxkLGgsYyxhW3YrMTBdLDE3LC00MjA2MyksYz1iKGMscCxkLGgsYVt2KzExXSwyMiwtMTk5MDQwNDE2MiksaD1iKGgsYyxwLGQsYVt2KzEyXSw3LDE4MDQ2MDM2ODIpLGQ9YihkLGgsYyxwLGFbdisxM10sMTIsLTQwMzQxMTAxKSxwPWIocCxkLGgsYyxhW3YrMTRdLDE3LC0xNTAyMDAyMjkwKSxoPXUoaCxjPWIoYyxwLGQsaCxhW3YrMTVdLDIyLDEyMzY1MzUzMjkpLHAsZCxhW3YrMV0sNSwtMTY1Nzk2NTEwKSxkPXUoZCxoLGMscCxhW3YrNl0sOSwtMTA2OTUwMTYzMikscD11KHAsZCxoLGMsYVt2KzExXSwxNCw2NDM3MTc3MTMpLGM9dShjLHAsZCxoLGFbdiswXSwyMCwtMzczODk3MzAyKSxoPXUoaCxjLHAsZCxhW3YrNV0sNSwtNzAxNTU4NjkxKSxkPXUoZCxoLGMscCxhW3YrMTBdLDksMzgwMTYwODMpLHA9dShwLGQsaCxjLGFbdisxNV0sMTQsLTY2MDQ3ODMzNSksYz11KGMscCxkLGgsYVt2KzRdLDIwLC00MDU1Mzc4NDgpLGg9dShoLGMscCxkLGFbdis5XSw1LDU2ODQ0NjQzOCksZD11KGQsaCxjLHAsYVt2KzE0XSw5LC0xMDE5ODAzNjkwKSxwPXUocCxkLGgsYyxhW3YrM10sMTQsLTE4NzM2Mzk2MSksYz11KGMscCxkLGgsYVt2KzhdLDIwLDExNjM1MzE1MDEpLGg9dShoLGMscCxkLGFbdisxM10sNSwtMTQ0NDY4MTQ2NyksZD11KGQsaCxjLHAsYVt2KzJdLDksLTUxNDAzNzg0KSxwPXUocCxkLGgsYyxhW3YrN10sMTQsMTczNTMyODQ3MyksaD1mKGgsYz11KGMscCxkLGgsYVt2KzEyXSwyMCwtMTkyNjYwNzczNCkscCxkLGFbdis1XSw0LC0zNzg1NTgpLGQ9ZihkLGgsYyxwLGFbdis4XSwxMSwtMjAyMjU3NDQ2MykscD1mKHAsZCxoLGMsYVt2KzExXSwxNiwxODM5MDMwNTYyKSxjPWYoYyxwLGQsaCxhW3YrMTRdLDIzLC0zNTMwOTU1NiksaD1mKGgsYyxwLGQsYVt2KzFdLDQsLTE1MzA5OTIwNjApLGQ9ZihkLGgsYyxwLGFbdis0XSwxMSwxMjcyODkzMzUzKSxwPWYocCxkLGgsYyxhW3YrN10sMTYsLTE1NTQ5NzYzMiksYz1mKGMscCxkLGgsYVt2KzEwXSwyMywtMTA5NDczMDY0MCksaD1mKGgsYyxwLGQsYVt2KzEzXSw0LDY4MTI3OTE3NCksZD1mKGQsaCxjLHAsYVt2KzBdLDExLC0zNTg1MzcyMjIpLHA9ZihwLGQsaCxjLGFbdiszXSwxNiwtNzIyNTIxOTc5KSxjPWYoYyxwLGQsaCxhW3YrNl0sMjMsNzYwMjkxODkpLGg9ZihoLGMscCxkLGFbdis5XSw0LC02NDAzNjQ0ODcpLGQ9ZihkLGgsYyxwLGFbdisxMl0sMTEsLTQyMTgxNTgzNSkscD1mKHAsZCxoLGMsYVt2KzE1XSwxNiw1MzA3NDI1MjApLGg9ZyhoLGM9ZihjLHAsZCxoLGFbdisyXSwyMywtOTk1MzM4NjUxKSxwLGQsYVt2KzBdLDYsLTE5ODYzMDg0NCksZD1nKGQsaCxjLHAsYVt2KzddLDEwLDExMjY4OTE0MTUpLHA9ZyhwLGQsaCxjLGFbdisxNF0sMTUsLTE0MTYzNTQ5MDUpLGM9ZyhjLHAsZCxoLGFbdis1XSwyMSwtNTc0MzQwNTUpLGg9ZyhoLGMscCxkLGFbdisxMl0sNiwxNzAwNDg1NTcxKSxkPWcoZCxoLGMscCxhW3YrM10sMTAsLTE4OTQ5ODY2MDYpLHA9ZyhwLGQsaCxjLGFbdisxMF0sMTUsLTEwNTE1MjMpLGM9ZyhjLHAsZCxoLGFbdisxXSwyMSwtMjA1NDkyMjc5OSksaD1nKGgsYyxwLGQsYVt2KzhdLDYsMTg3MzMxMzM1OSksZD1nKGQsaCxjLHAsYVt2KzE1XSwxMCwtMzA2MTE3NDQpLHA9ZyhwLGQsaCxjLGFbdis2XSwxNSwtMTU2MDE5ODM4MCksYz1nKGMscCxkLGgsYVt2KzEzXSwyMSwxMzA5MTUxNjQ5KSxoPWcoaCxjLHAsZCxhW3YrNF0sNiwtMTQ1NTIzMDcwKSxkPWcoZCxoLGMscCxhW3YrMTFdLDEwLC0xMTIwMjEwMzc5KSxwPWcocCxkLGgsYyxhW3YrMl0sMTUsNzE4Nzg3MjU5KSxjPWcoYyxwLGQsaCxhW3YrOV0sMjEsLTM0MzQ4NTU1MSksaD1oK1M+Pj4wLGM9YyttPj4+MCxwPXArXz4+PjAsZD1kK0M+Pj4wfXJldHVybiBzLmVuZGlhbihbaCxjLHAsZF0pfSkuX2ZmPWZ1bmN0aW9uKHQsZSxhLHMsbyxpLHIpe3ZhciBuPXQrKGUmYXx+ZSZzKSsobz4+PjApK3I7cmV0dXJuKG48PGl8bj4+PjMyLWkpK2V9LG4uX2dnPWZ1bmN0aW9uKHQsZSxhLHMsbyxpLHIpe3ZhciBuPXQrKGUmc3xhJn5zKSsobz4+PjApK3I7cmV0dXJuKG48PGl8bj4+PjMyLWkpK2V9LG4uX2hoPWZ1bmN0aW9uKHQsZSxhLHMsbyxpLHIpe3ZhciBuPXQrKGVeYV5zKSsobz4+PjApK3I7cmV0dXJuKG48PGl8bj4+PjMyLWkpK2V9LG4uX2lpPWZ1bmN0aW9uKHQsZSxhLHMsbyxpLHIpe3ZhciBuPXQrKGFeKGV8fnMpKSsobz4+PjApK3I7cmV0dXJuKG48PGl8bj4+PjMyLWkpK2V9LG4uX2Jsb2Nrc2l6ZT0xNixuLl9kaWdlc3RzaXplPTE2LHQuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2lmKG51bGw9PXQpdGhyb3cgbmV3IEVycm9yKFwiSWxsZWdhbCBhcmd1bWVudCBcIit0KTt2YXIgYT1zLndvcmRzVG9CeXRlcyhuKHQsZSkpO3JldHVybiBlJiZlLmFzQnl0ZXM/YTplJiZlLmFzU3RyaW5nP3IuYnl0ZXNUb1N0cmluZyhhKTpzLmJ5dGVzVG9IZXgoYSl9fSwxNjY6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtyOigpPT5sfSk7dmFyIHM9YSg0Niksbz1hKDU2NSksaT1hKDYxMSkscj1hKDMwNSksbj1hLm4ocik7Y2xhc3MgbCBleHRlbmRzIHMuSHtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKCksdGhpcy5wcm90b2NvbD0yLHRoaXMuaW5mbGF0ZT1uKCkuaW5mbGF0ZUluaXQoMTUpLHRoaXMuYnBwPTEsdGhpcy5zdGF0ZT0wLHRoaXMuZm9jdXNNb2RlPTAsdGhpcy51c2VaUkxFPSEwLHRoaXMuZnJhbWVSYXRlRGVsYXk9Mix0aGlzLmNhbnZhc0N0eD1lLHRoaXMuc3BhcmVjYWNoZT17fSx0aGlzLmJ1dHRvbm1hc2s9MCx0aGlzLmNhbnZhc0NvbnRyb2w9dGhpcy5jYW52YXNDdHguY2FudmFzLHRoaXMubGFzdE1vdXNlTW92ZVRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5sb2dnZXI9dCx0aGlzLnNldERlc2tGb2N1cz0odCxlKT0+e30sdGhpcy5nZXREZXNrRm9jdXM9dD0+e319cHJvY2Vzc0RhdGEodCl7dGhpcy5vblByb2Nlc3NEYXRhKHQpfW9uU3RhdGVDaGFuZ2UodCl7dGhpcy5sb2dnZXIudmVyYm9zZShgc3RhdGUgY2hhbmdlIGluIEFNVERlc2t0b3A6ICR7dH1gKSwwPT09dCYmKHRoaXMuY2FudmFzQ3R4LmZpbGxTdHlsZT1cIiNGRkZGRkZcIix0aGlzLmNhbnZhc0N0eC5maWxsUmVjdCgwLDAsdGhpcy5jYW52YXNDdHguY2FudmFzLndpZHRoLHRoaXMuY2FudmFzQ3R4LmNhbnZhcy53aWR0aCkpfXN0YXJ0KCl7dGhpcy5sb2dnZXIudmVyYm9zZShcIlN0YXJ0aW5nIGRlc2t0b3AgaGVyZVwiKSx0aGlzLnN0YXRlPTAsdGhpcy5pbmZsYXRlLmluZmxhdGVSZXNldCgpLHRoaXMub25Ldm1EYXRhUGVuZGluZz1bXSx0aGlzLm9uS3ZtRGF0YUFjaz0tMSx0aGlzLmt2bURhdGFTdXBwb3J0ZWQ9ITE7Zm9yKGNvbnN0IHQgaW4gdGhpcy5zcGFyZWNhY2hlKWRlbGV0ZSB0aGlzLnNwYXJlY2FjaGVbdF19b25TZW5kS3ZtRGF0YSh0KXshMCE9PXRoaXMub25Ldm1EYXRhQWNrP3RoaXMub25Ldm1EYXRhUGVuZGluZy5wdXNoKHQpOigoMCxpLmYpKHRoaXMudXJsdmFycykmJigwLGkuZikodGhpcy51cmx2YXJzLmt2bWRhdGF0cmFjZSkmJmNvbnNvbGUubG9nKGBLVk0tU2VuZCAoJHt0Lmxlbmd0aH0pIGRhdGFgKSx0PVwiXFwwS3ZtRGF0YUNoYW5uZWxcXDBcIit0LHRoaXMub25TZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoNiwwLDAsMCkrby5yLkludFRvU3RyKHQubGVuZ3RoKSt0KSx0aGlzLm9uS3ZtRGF0YUFjaz0hMSl9fX0sNTk6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtOOigpPT5vfSk7dmFyIHM9YSg1MDMpO2NsYXNzIG8gZXh0ZW5kcyBzLkt7Y29uc3RydWN0b3IodCxlLGEscyxvLGkscixuLGwsaCxjKXtzdXBlcih0LGUsYSxzLG8saSxyLG4sbCxoLGMpfX19LDUwMzoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse0s6KCk9PmwsYjooKT0+c30pO3ZhciBzLG89YSg1NjUpLGk9YSg1NjgpLHI9YS5uKGkpLG49YSg2MTEpOyFmdW5jdGlvbih0KXt0W3QuU09MPTFdPVwiU09MXCIsdFt0LktWTT0yXT1cIktWTVwiLHRbdC5JREVSPTNdPVwiSURFUlwifShzfHwocz17fSkpO2NsYXNzIGx7Y29uc3RydWN0b3IodCxlLGEscyxvLGkscixuLGwsaCxjKXt0aGlzLmZpbGVSZWFkZXI9YSx0aGlzLnJhbmRvbU5vbmNlQ2hhcnM9XCJhYmNkZWYwMTIzNDU2Nzg5XCIsdGhpcy5ob3N0PXMsdGhpcy5wb3J0PW8sdGhpcy51c2VyPWksdGhpcy5wYXNzPXIsdGhpcy50bHM9bix0aGlzLnRsc3Yxb25seT1sLHRoaXMucHJvdG9jb2w9ZSx0aGlzLlJlZGlyZWN0U3RhcnRTb2w9U3RyaW5nLmZyb21DaGFyQ29kZSgxNiwwLDAsMCw4Myw3OSw3NiwzMiksdGhpcy5SZWRpcmVjdFN0YXJ0S3ZtPVN0cmluZy5mcm9tQ2hhckNvZGUoMTYsMSwwLDAsNzUsODYsNzcsODIpLHRoaXMuUmVkaXJlY3RTdGFydElkZXI9U3RyaW5nLmZyb21DaGFyQ29kZSgxNiwwLDAsMCw3Myw2OCw2OSw4MiksdGhpcy51cmx2YXJzPXt9LHRoaXMuc2VydmVyPWMsdGhpcy5hbXRBY2N1bXVsYXRvcj1cIlwiLHRoaXMuYXV0aFVyaT1cIlwiLHRoaXMubG9nZ2VyPXQsdGhpcy5hdXRoVG9rZW49aH1nZXRXc0xvY2F0aW9uKCl7cmV0dXJuIHRoaXMuaXNCcm93c2VyKCkmJiEoMCxuLmYpKHRoaXMuc2VydmVyKT9gJHt3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wucmVwbGFjZShcImh0dHBcIixcIndzXCIpfS8vXFxuICAgICAgJHt3aW5kb3cubG9jYXRpb24uaG9zdH1cXG4gICAgICAke3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zdWJzdHJpbmcoMCx3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUubGFzdEluZGV4T2YoXCIvXCIpKX1cXG4gICAgICAvd2VicmVsYXkuYXNoeD9wPTImaG9zdD0ke3RoaXMuaG9zdH0mcG9ydD0ke3RoaXMucG9ydH0mdGxzPSR7dGhpcy50bHN9JHtcIipcIj09PXRoaXMudXNlcj9cIiZzZXJ2ZXJhdXRoPTFcIjpcIlwifSR7dm9pZCAwPT09dGhpcy5wYXNzP1wiJnNlcnZlcmF1dGg9MSZ1c2VyPVwiK3RoaXMudXNlcjpcIlwifSZ0bHMxb25seT0ke3RoaXMudGxzdjFvbmx5fWA6YCR7U3RyaW5nKHRoaXMuc2VydmVyKX0vd2VicmVsYXkuYXNoeD9wPTImaG9zdD0ke3RoaXMuaG9zdH0mcG9ydD0ke3RoaXMucG9ydH0mdGxzPSR7dGhpcy50bHN9JHtcIipcIj09PXRoaXMudXNlcj9cIiZzZXJ2ZXJhdXRoPTFcIjpcIlwifSR7dm9pZCAwPT09dGhpcy5wYXNzP1wiJnNlcnZlcmF1dGg9MSZ1c2VyPVwiK3RoaXMudXNlcjpcIlwifSZ0bHMxb25seT0ke3RoaXMudGxzdjFvbmx5fWB9aXNCcm93c2VyKCl7dHJ5e2NvbnN0IHQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdztyZXR1cm4gdCYmdGhpcy5sb2dnZXIuZGVidWcoXCIhISEhIUJST1dTRVIhISEhIVwiKSx0fWNhdGNoKHQpe3JldHVybiExfX1zdGFydCh0KXt0aGlzLmNvbm5lY3RTdGF0ZT0wLHRoaXMuc29ja2V0PW5ldyB0KHRoaXMuZ2V0V3NMb2NhdGlvbigpLHRoaXMuYXV0aFRva2VuKSx0aGlzLnNvY2tldC5vbm9wZW49dGhpcy5vblNvY2tldENvbm5lY3RlZC5iaW5kKHRoaXMpLHRoaXMuc29ja2V0Lm9ubWVzc2FnZT10aGlzLm9uTWVzc2FnZS5iaW5kKHRoaXMpLHRoaXMuc29ja2V0Lm9uY2xvc2U9dGhpcy5vblNvY2tldENsb3NlZC5iaW5kKHRoaXMpOygwLG4uZikodGhpcy5maWxlUmVhZGVyKSYmKDAsbi5mKSh0aGlzLmZpbGVSZWFkZXIucmVhZEFzQmluYXJ5U3RyaW5nKT90aGlzLmZpbGVSZWFkZXIub25sb2FkPSh0PT57dGhpcy5vblNvY2tldERhdGEodC50YXJnZXQucmVzdWx0KSwwPT09dGhpcy5maWxlUmVhZGVyQWNjLmxlbmd0aD90aGlzLmZpbGVSZWFkZXJJblVzZT0hMTp0aGlzLmZpbGVSZWFkZXIucmVhZEFzQmluYXJ5U3RyaW5nKG5ldyBCbG9iKFt0aGlzLmZpbGVSZWFkZXJBY2Muc2hpZnQoKV0pKX0pLmJpbmQodGhpcyk6KDAsbi5mKSh0aGlzLmZpbGVSZWFkZXIpJiYoMCxuLmYpKHRoaXMuZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcikmJih0aGlzLmZpbGVSZWFkZXIub25sb2FkZW5kPSh0PT57dGhpcy5vblNvY2tldERhdGEodC50YXJnZXQucmVzdWx0KSwwPT09dGhpcy5maWxlUmVhZGVyQWNjLmxlbmd0aD90aGlzLmZpbGVSZWFkZXJJblVzZT0hMTp0aGlzLmZpbGVSZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIodGhpcy5maWxlUmVhZGVyQWNjLnNoaWZ0KCkpfSkuYmluZCh0aGlzKSksdGhpcy5sb2dnZXIudmVyYm9zZShcIkNvbm5lY3RpbmcgdG8gd2Vic29ja2V0XCIpLHRoaXMub25TdGF0ZUNoYW5nZSgxKX1vblNvY2tldENvbm5lY3RlZCgpeygwLG4uZikodGhpcy51cmx2YXJzKSYmKDAsbi5mKSh0aGlzLnVybHZhcnMucmVkaXJ0cmFjZSkmJmNvbnNvbGUubG9nKFwiUkVESVItQ09OTkVDVFwiKSx0aGlzLm9uU3RhdGVDaGFuZ2UoMiksdGhpcy5sb2dnZXIudmVyYm9zZShgQ29ubmVjdGVkIHRvIHdlYnNvY2tldCBzZXJ2ZXIuIFdpdGggcHJvdG9jb2wgJHt0aGlzLnByb3RvY29sfSAoMiA9IEtWTSlgKSx0aGlzLmxvZ2dlci5pbmZvKGBTdGFydCBSZWRpcmVjdCBTZXNzaW9uIGZvciBwcm90b2NvbC4gJHt0aGlzLnByb3RvY29sfWApLHRoaXMucHJvdG9jb2w9PT1zLlNPTCYmdGhpcy5zb2NrZXRTZW5kKHRoaXMuUmVkaXJlY3RTdGFydFNvbCksdGhpcy5wcm90b2NvbD09PXMuS1ZNJiZ0aGlzLnNvY2tldFNlbmQodGhpcy5SZWRpcmVjdFN0YXJ0S3ZtKSx0aGlzLnByb3RvY29sPT09cy5JREVSJiZ0aGlzLnNvY2tldFNlbmQodGhpcy5SZWRpcmVjdFN0YXJ0SWRlcil9b25NZXNzYWdlKHQpe3RyeXtpZih0aGlzLmluRGF0YUNvdW50KyssXCJvYmplY3RcIj09dHlwZW9mIHQuZGF0YSl7aWYodGhpcy5maWxlUmVhZGVySW5Vc2UpcmV0dXJuIHZvaWQgdGhpcy5maWxlUmVhZGVyQWNjLnB1c2godC5kYXRhKTtpZihudWxsIT10aGlzLmZpbGVSZWFkZXIucmVhZEFzQmluYXJ5U3RyaW5nKXRoaXMuZmlsZVJlYWRlckluVXNlPSEwLHRoaXMuZmlsZVJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcobmV3IEJsb2IoW3QuZGF0YV0pKTtlbHNlIGlmKG51bGwhPXRoaXMuZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcil0aGlzLmZpbGVSZWFkZXJJblVzZT0hMCx0aGlzLmZpbGVSZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIodC5kYXRhKTtlbHNle2xldCBlPVwiXCI7Y29uc3QgYT1uZXcgVWludDhBcnJheSh0LmRhdGEpLHM9YS5ieXRlTGVuZ3RoO2ZvcihsZXQgdD0wO3Q8czt0KyspZSs9U3RyaW5nLmZyb21DaGFyQ29kZShhW3RdKTt0aGlzLm9uU29ja2V0RGF0YShlKX19ZWxzZSB0aGlzLm9uU29ja2V0RGF0YSh0LmRhdGEpfWNhdGNoKHQpe3RoaXMubG9nZ2VyLmVycm9yKHQpLHRoaXMuc3RvcCgpLHRoaXMub25FcnJvcigpfX1vblNvY2tldERhdGEodCl7aWYoKDAsbi5mKSh0KSYmLTEhPT10aGlzLmNvbm5lY3RTdGF0ZSl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQpe2xldCBlPVwiXCI7Y29uc3QgYT1uZXcgVWludDhBcnJheSh0KSxzPWEuYnl0ZUxlbmd0aDtmb3IobGV0IHQ9MDt0PHM7dCsrKWUrPVN0cmluZy5mcm9tQ2hhckNvZGUoYVt0XSk7dD1lfWVsc2UgaWYoXCJzdHJpbmdcIiE9dHlwZW9mIHQpcmV0dXJuO2lmKCh0aGlzLnByb3RvY29sPT09cy5LVk18fHRoaXMucHJvdG9jb2w9PT1zLklERVIpJiYxPT09dGhpcy5jb25uZWN0U3RhdGUpcmV0dXJuIHRoaXMub25Qcm9jZXNzRGF0YSh0KTtmb3IodGhpcy5hbXRBY2N1bXVsYXRvcis9dDt0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aD49MTspe2xldCB0PTA7c3dpdGNoKHRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCgwKSl7Y2FzZSAxNzppZih0aGlzLmxvZ2dlci52ZXJib3NlKGBTdGFydCBSZWRpcmVjdGlvbiBTZXNzaW9uIHJlcGx5IHJlY2VpdmVkIGZvciAgJHt0aGlzLnByb3RvY29sfWApLHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDQpcmV0dXJuO3N3aXRjaCh0aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoMSkpe2Nhc2UgMDp7aWYodGhpcy5sb2dnZXIudmVyYm9zZShcIlNlc3Npb24gc3RhdHVzIHN1Y2Nlc3MuIFN0YXJ0IGhhbmRzaGFrZVwiKSx0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDwxMylyZXR1cm47Y29uc3QgZT10aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoMTIpO2lmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDEzK2UpcmV0dXJuO3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJRdWVyeSBmb3IgYXZhaWxhYmxlIGF1dGhlbnRpY2F0aW9uXCIpLHRoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDE5LDAsMCwwLDAsMCwwLDAsMCkpLHQ9MTMrZTticmVha31kZWZhdWx0OnRoaXMuc3RvcCgpfWJyZWFrO2Nhc2UgMjA6e2lmKHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJBdmFpbGFibGUgQXV0aGVudGljYXRpb25zIHJlcGx5IHJlY2VpdmVkLlwiKSx0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDw5KXJldHVybjtjb25zdCBlPW8uci5SZWFkSW50WCh0aGlzLmFtdEFjY3VtdWxhdG9yLDUpO2lmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDkrZSlyZXR1cm47Y29uc3QgYT10aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoMSkscz10aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoNCksaT1bXTtmb3IobGV0IHQ9MDt0PGU7dCsrKWkucHVzaCh0aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoOSt0KSk7Y29uc3Qgcj10aGlzLmFtdEFjY3VtdWxhdG9yLnN1YnN0cmluZyg5LDkrZSk7aWYodD05K2UsMD09PXMpKDAsbi5mKShpLmluY2x1ZGVzKDQpKT8odGhpcy5sb2dnZXIudmVyYm9zZShcIkdvb2QgRGlnZXN0IEF1dGggKFdpdGggY25vbmNlIGFuZCBhbGwpXCIpLHRoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDE5LDAsMCwwLDQpK28uci5JbnRUb1N0clgodGhpcy51c2VyLmxlbmd0aCt0aGlzLmF1dGhVcmkubGVuZ3RoKzgpK1N0cmluZy5mcm9tQ2hhckNvZGUodGhpcy51c2VyLmxlbmd0aCkrdGhpcy51c2VyK1N0cmluZy5mcm9tQ2hhckNvZGUoMCwwKStTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuYXV0aFVyaS5sZW5ndGgpK3RoaXMuYXV0aFVyaStTdHJpbmcuZnJvbUNoYXJDb2RlKDAsMCwwLDApKSk6KDAsbi5mKShpLmluY2x1ZGVzKDMpKT8odGhpcy5sb2dnZXIud2FybihcIkJhZCBEaWdlc3QgQXV0aFwiKSx0aGlzLnNvY2tldFNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgxOSwwLDAsMCwzKStvLnIuSW50VG9TdHJYKHRoaXMudXNlci5sZW5ndGgrdGhpcy5hdXRoVXJpLmxlbmd0aCs3KStTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMudXNlci5sZW5ndGgpK3RoaXMudXNlcitTdHJpbmcuZnJvbUNoYXJDb2RlKDAsMCkrU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmF1dGhVcmkubGVuZ3RoKSt0aGlzLmF1dGhVcmkrU3RyaW5nLmZyb21DaGFyQ29kZSgwLDAsMCkpKTooMCxuLmYpKGkuaW5jbHVkZXMoMSkpPyh0aGlzLmxvZ2dlci52ZXJib3NlKFwiQmFzaWMgQXV0aFwiKSx0aGlzLnNvY2tldFNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgxOSwwLDAsMCwxKStvLnIuSW50VG9TdHJYKHRoaXMudXNlci5sZW5ndGgrdGhpcy5wYXNzLmxlbmd0aCsyKStTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMudXNlci5sZW5ndGgpK3RoaXMudXNlcitTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMucGFzcy5sZW5ndGgpK3RoaXMucGFzcykpOih0aGlzLmxvZ2dlci5lcnJvcihcIkF1dGggVHlwZSBub3QgcmVjb2duaXplZC4gU3RvcHBpbmcuXCIpLHRoaXMuc3RvcCgpKTtlbHNlIGlmKDMhPT1zJiY0IT09c3x8MSE9PWEpaWYoMD09PWEpe2lmKDE9PT10aGlzLnByb3RvY29sKXtjb25zdCB0PTFlNCxlPTEwMCxhPTAscz0xZTQsaT0xMDAscj0wO3RoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDMyLDAsMCwwKStvLnIuSW50VG9TdHJYKHRoaXMuYW10U2VxdWVuY2UrKykrby5yLlNob3J0VG9TdHJYKHQpK28uci5TaG9ydFRvU3RyWChlKStvLnIuU2hvcnRUb1N0clgoYSkrby5yLlNob3J0VG9TdHJYKHMpK28uci5TaG9ydFRvU3RyWChpKStvLnIuU2hvcnRUb1N0clgocikrby5yLkludFRvU3RyWCgwKSl9Mj09PXRoaXMucHJvdG9jb2wmJnRoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDY0LDAsMCwwLDAsMCwwLDApKSwzPT09dGhpcy5wcm90b2NvbCYmKHRoaXMuY29ubmVjdFN0YXRlPTEsdGhpcy5vblN0YXRlQ2hhbmdlKDMpKX1lbHNlIHRoaXMuc3RvcCgpO2Vsc2V7bGV0IHQ9MDtjb25zdCBlPXIuY2hhckNvZGVBdCh0KSxhPXIuc3Vic3RyaW5nKHQrMSx0KzErZSk7dCs9ZSsxO2NvbnN0IGk9ci5jaGFyQ29kZUF0KHQpLG49ci5zdWJzdHJpbmcodCsxLHQrMStpKTt0Kz1pKzE7bGV0IGw9MCxoPW51bGw7Y29uc3QgYz10aGlzLmdlbmVyYXRlUmFuZG9tTm9uY2UoMzIpLHA9XCIwMDAwMDAwMlwiO2xldCBkPVwiXCI7ND09PXMmJihsPXIuY2hhckNvZGVBdCh0KSxoPXIuc3Vic3RyaW5nKHQrMSx0KzErbCksdCs9bCsxLGQ9YCR7cH06JHtjfToke1N0cmluZyhoKX0gOmApO2NvbnN0IHY9dGhpcy5oZXhfbWQ1KHRoaXMuaGV4X21kNSh0aGlzLnVzZXIrXCI6XCIrYStcIjpcIit0aGlzLnBhc3MpK1wiOlwiK24rXCI6XCIrZCt0aGlzLmhleF9tZDUoXCJQT1NUOlwiK3RoaXMuYXV0aFVyaSkpO2xldCBiPXRoaXMudXNlci5sZW5ndGgrYS5sZW5ndGgrbi5sZW5ndGgrdGhpcy5hdXRoVXJpLmxlbmd0aCtjLmxlbmd0aCtwLmxlbmd0aCt2Lmxlbmd0aCs3OzQ9PT1zJiYoYis9cGFyc2VJbnQoaC5sZW5ndGgpKzEpO2xldCB1PVN0cmluZy5mcm9tQ2hhckNvZGUoMTksMCwwLDAscykrby5yLkludFRvU3RyWChiKStTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMudXNlci5sZW5ndGgpK3RoaXMudXNlcitTdHJpbmcuZnJvbUNoYXJDb2RlKGEubGVuZ3RoKSthK1N0cmluZy5mcm9tQ2hhckNvZGUobi5sZW5ndGgpK24rU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmF1dGhVcmkubGVuZ3RoKSt0aGlzLmF1dGhVcmkrU3RyaW5nLmZyb21DaGFyQ29kZShjLmxlbmd0aCkrYytTdHJpbmcuZnJvbUNoYXJDb2RlKHAubGVuZ3RoKStwK1N0cmluZy5mcm9tQ2hhckNvZGUodi5sZW5ndGgpK3Y7ND09PXMmJih1PVN0cmluZyh1KSsoU3RyaW5nLmZyb21DaGFyQ29kZShoLmxlbmd0aCkrU3RyaW5nKGgpKSksdGhpcy5zb2NrZXRTZW5kKHUpfWJyZWFrfWNhc2UgMzM6aWYodGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg8MjMpYnJlYWs7dGhpcy5sb2dnZXIudmVyYm9zZShcIlJlc3BvbnNlIHRvIHNldHRpbmdzXCIpLHQ9MjMsdGhpcy5zb2NrZXRTZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMzksMCwwLDApK28uci5JbnRUb1N0clgodGhpcy5hbXRTZXF1ZW5jZSsrKStTdHJpbmcuZnJvbUNoYXJDb2RlKDAsMCwyNywwLDAsMCkpLDE9PT10aGlzLnByb3RvY29sJiYodGhpcy5hbXRLZWVwQWxpdmVUaW1lcj1zZXRJbnRlcnZhbCh0aGlzLnNlbmRBbXRLZWVwQWxpdmUuYmluZCh0aGlzKSwyZTMpKSx0aGlzLmNvbm5lY3RTdGF0ZT0xLHRoaXMub25TdGF0ZUNoYW5nZSgzKTticmVhaztjYXNlIDQxOmlmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDEwKWJyZWFrO3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJTZXJpYWwgU2V0dGluZ3NcIiksdD0xMDticmVhaztjYXNlIDQyOntpZih0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDwxMClicmVhazt0aGlzLmxvZ2dlci52ZXJib3NlKFwiSW5jb21pbmcgZGlzcGxheSBkYXRhXCIpO2NvbnN0IGU9MTArKCgyNTUmdGhpcy5hbXRBY2N1bXVsYXRvci5jaGFyQ29kZUF0KDkpKTw8OCkrKDI1NSZ0aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoOCkpO2lmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPGUpYnJlYWs7dGhpcy5vblByb2Nlc3NEYXRhKHRoaXMuYW10QWNjdW11bGF0b3Iuc3Vic3RyaW5nKDEwLGUpKSx0PWU7YnJlYWt9Y2FzZSA0MzppZih0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDw4KWJyZWFrO3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJLZWVwIEFsdmUgbWVzc2FnZVwiKSx0PTg7YnJlYWs7Y2FzZSA2NTppZih0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDw4KWJyZWFrO3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJLVk0gdHJhZmZpYy4gQ2FsbCBvblN0YXJ0IGhhbmRsZXIuIEFuZCBmb3J3YXJkIHJlc3Qgb2YgYWNjIGRpcmVjdGx5LlwiKSx0aGlzLmNvbm5lY3RTdGF0ZT0xLHRoaXMub25TdGFydCgpLHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPjgmJnRoaXMub25Qcm9jZXNzRGF0YSh0aGlzLmFtdEFjY3VtdWxhdG9yLnN1YnN0cmluZyg4KSksdD10aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDticmVhaztkZWZhdWx0OnJldHVybiB0aGlzLmxvZ2dlci5lcnJvcihgVW5rbm93biBJbnRlbCBBTVQgY29tbWFuZDogICR7dGhpcy5hbXRBY2N1bXVsYXRvci5jaGFyQ29kZUF0KDApfSAgYWNjbGVuPSR7dGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGh9YCksdm9pZCB0aGlzLnN0b3AoKX1pZigwPT09dClyZXR1cm47dGhpcy5hbXRBY2N1bXVsYXRvcj10aGlzLmFtdEFjY3VtdWxhdG9yLnN1YnN0cmluZyh0KX19fWhleF9tZDUodCl7cmV0dXJuIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJNRDUgdGhlIHN0cmluZ1wiKSxyKCkodCl9c29ja2V0U2VuZCh0KXsoMCxuLmYpKHRoaXMudXJsdmFycykmJigwLG4uZikodGhpcy51cmx2YXJzLnJlZGlydHJhY2UpJiZ0aGlzLmxvZ2dlci52ZXJib3NlKGBSRURJUi1TRU5EKCR7dC5sZW5ndGh9KTogJHtvLnIucnN0cjJoZXgodCl9YCk7dHJ5e2lmKG51bGwhPXRoaXMuc29ja2V0JiYxPT09dGhpcy5zb2NrZXQucmVhZHlTdGF0ZSl7Y29uc3QgZT1uZXcgVWludDhBcnJheSh0Lmxlbmd0aCk7dGhpcy5sb2dnZXIudmVyYm9zZShgUmVkaXIgU2VuZCggJHt0Lmxlbmd0aH0pOiAke28uci5yc3RyMmhleCh0KX1gKTtmb3IobGV0IGE9MDthPHQubGVuZ3RoOysrYSllW2FdPXQuY2hhckNvZGVBdChhKTt0aGlzLnNvY2tldC5zZW5kKGUuYnVmZmVyKX19Y2F0Y2godCl7dGhpcy5sb2dnZXIuZXJyb3IoYFNvY2tldCBzZW5kIGVycm9yOiAke1N0cmluZyh0KX1gKX19c2VuZCh0KXt0aGlzLmxvZ2dlci52ZXJib3NlKFwiU2VuZCBjYWxsZWQgXCIrdCksbnVsbCE9dGhpcy5zb2NrZXQmJjE9PT10aGlzLmNvbm5lY3RTdGF0ZSYmKHRoaXMucHJvdG9jb2w9PT1zLlNPTD90aGlzLnNvY2tldFNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSg0MCwwLDAsMCkrby5yLkludFRvU3RyWCh0aGlzLmFtdFNlcXVlbmNlKyspK28uci5TaG9ydFRvU3RyWCh0Lmxlbmd0aCkrdCk6dGhpcy5zb2NrZXRTZW5kKHQpKX1zZW5kQW10S2VlcEFsaXZlKCl7bnVsbCE9dGhpcy5zb2NrZXQmJnRoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDQzLDAsMCwwKStvLnIuSW50VG9TdHJYKHRoaXMuYW10U2VxdWVuY2UrKykpfWdlbmVyYXRlUmFuZG9tTm9uY2UodCl7bGV0IGU9XCJcIjtmb3IobGV0IGE9MDthPHQ7YSsrKWUrPXRoaXMucmFuZG9tTm9uY2VDaGFycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnRoaXMucmFuZG9tTm9uY2VDaGFycy5sZW5ndGgpKTtyZXR1cm4gZX1vblNvY2tldENsb3NlZCh0KXsoMCxuLmYpKHRoaXMudXJsdmFycykmJigwLG4uZikodGhpcy51cmx2YXJzLnJlZGlydHJhY2UpJiZjb25zb2xlLmxvZyhcIlJFRElSLUNMT1NFRFwiKSx0aGlzLmxvZ2dlci53YXJuKFwiUmVkaXIgU29ja2V0IENsb3NlZFwiKSx0aGlzLnN0b3AoKX1vblN0YXRlQ2hhbmdlKHQpe2NvbnNvbGUuaW5mbyhcIm9uc3RhdGVjaGFuZ2VcIix0KSx0aGlzLnN0YXRlIT09dCYmKHRoaXMuc3RhdGU9dCx0aGlzLm9uTmV3U3RhdGUodGhpcy5zdGF0ZSksbnVsbCE9dGhpcy5vblN0YXRlQ2hhbmdlZCYmdGhpcy5vblN0YXRlQ2hhbmdlZCh0aGlzLHRoaXMuc3RhdGUpKX1zdG9wKCl7dGhpcy5sb2dnZXIud2FybihcIlN0b3AgY2FsbGVkIG9uIFJlZGlyZWN0b3IuIENoYW5nZSBzdGF0ZSB0byAwIGFuZCBjbG9zZSBTb2NrZXQuXCIpLHRoaXMub25TdGF0ZUNoYW5nZSgwKSx0aGlzLmNvbm5lY3RTdGF0ZT0tMSx0aGlzLmFtdEFjY3VtdWxhdG9yPVwiXCIsbnVsbCE9dGhpcy5zb2NrZXQmJih0aGlzLnNvY2tldC5jbG9zZSgpLHRoaXMuc29ja2V0PW51bGwpLG51bGwhPXRoaXMuYW10S2VlcEFsaXZlVGltZXImJihjbGVhckludGVydmFsKHRoaXMuYW10S2VlcEFsaXZlVGltZXIpLHRoaXMuYW10S2VlcEFsaXZlVGltZXI9bnVsbCl9fX0sMjc3Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7cjooKT0+c30pO2NsYXNzIHN7Y29uc3RydWN0b3IoKXt0aGlzLnRlcm1pbmFsRW11bGF0aW9uPTEsdGhpcy5meEVtdWxhdGlvbj0wLHRoaXMuZnhMaW5lQnJlYWs9MCx0aGlzLkFzY2lpVG9Vbmljb2RlPVsxOTksMjUyLDIzMywyMjYsMjI4LDIyNCwyMjksMjMxLDIzNCwyMzUsMjMyLDIzOSwyMzgsMjM2LDE5NiwxOTcsMjAxLDIzMCwxOTgsMjQ0LDI0NiwyNDIsMjUxLDI0OSwyNTUsMjE0LDIyMCwxNjIsMTYzLDE2NSw4MzU5LDQwMiwyMjUsMjM3LDI0MywyNTAsMjQxLDIwOSwxNzAsMjE4LDE5MSw4OTc2LDE3MiwxODksMTg4LDE2MSwxNzEsMTg3LDk2MTksOTYxOCw5NjE3LDk0NzQsOTUwOCw5NTY5LDk1NzAsOTU1OCw5NTU3LDk1NzEsOTU1Myw5NTU5LDk1NjUsOTU2NCw5NTYzLDk0ODgsOTQ5Miw5NTI0LDk1MTYsOTUwMCw5NDcyLDk1MzIsOTU2Niw5NTY3LDk1NjIsOTU1Niw5NTc3LDk1NzQsOTU2OCw5NTUyLDk1ODAsOTU3NSw5NTc2LDk1NzIsOTU3Myw5NTc2LDk1NjAsOTU1NCw5NTU1LDk1NzksOTU3OCw5NDk2LDk0ODQsOTYwOCw5NjA0LDk2MTEsOTYxNiw5NjAwLDk0NSwyMjMsOTE1LDk2MCw5MzEsOTYzLDE4MSw5NjQsOTY2LDk1Miw4NDg2LDk0OCw4NzM0LDI0OCw5NDksODcxOSw4ODAxLDE3Nyw4ODA1LDg4MDYsODk5Miw4OTkzLDI0Nyw4Nzc2LDE3Niw4MjI2LDE4Myw4NzMwLDgzMTksMTc4LDg3MTgsMTYwXSx0aGlzLkFzY2lpVG9Vbmljb2RlSW50ZWw9WzE5OSwyNTIsMjMzLDIyNiwyMjgsMjI0LDIyOSwyMzEsMjM0LDIzNSwyMzIsMjM5LDIzOCwyMzYsMTk2LDE5NywyMDEsMjMwLDE5OCwyNDQsMjQ2LDI0MiwyNTEsMjQ5LDI1NSwyMTQsMjIwLDE2MiwxNjMsMTY1LDgzNTksNDAyLDIyNSwyMzcsMjQzLDI1MCwyNDEsMjA5LDE3MCwyMTgsMTkxLDg5NzYsMTcyLDE4OSwxODgsMTYxLDE3NCwxODcsOTYxOSw5NjE4LDk2MTcsOTQ3NCw5NTA4LDk1NjksOTU3MCw5NTU4LDk1NTcsOTU3MSw5NTUzLDk1NTksOTU2NSw5NTY0LDk1NjMsOTQ4OCw5NDkyLDk1MjQsOTUxNiw5NTAwLDk0NzIsOTUzMiw5NTY2LDk1NjcsOTU2Miw5NTU2LDk1NzcsOTU3NCw5NTY4LDk1NTIsOTU4MCw5NTc1LDk1NzYsOTU3Miw5NTczLDk1NzYsOTU2MCw5NTU0LDk1NTUsOTU3OSw5NTc4LDk0OTYsOTQ4NCw5NjA4LDk2MDQsOTYxMSw5NjE2LDk2MDAsOTQ1LDIyMyw5MTUsOTYwLDkzMSw5NjMsMTgxLDk2NCw5NjYsOTUyLDg0ODYsOTQ4LDg3MzQsMjQ4LDk0OSw4NzE5LDg4MDEsMTc3LDg4MDUsODgwNiw4OTkyLDg5OTMsMjQ3LDg3NzYsMTc2LDgyMjYsMTgzLDg3MzAsODMxOSwxNzgsODcxOCwxNjBdLHRoaXMuU3RhdGVDaGFuZ2U9dD0+e30sdGhpcy5UZXJtU2VuZEtleXM9dD0+dGhpcy5vblNlbmQodCl9fX0sMjM3Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7azooKT0+b30pO3ZhciBzPWEoMjAxKTtjbGFzcyBve2NvbnN0cnVjdG9yKHQpe3RoaXMubWluTGV2ZWw9dH1sb2codCxlKXtzd2l0Y2godCl7Y2FzZSBzLmkuVkVSQk9TRTp0aGlzLnZlcmJvc2UoZSk7YnJlYWs7Y2FzZSBzLmkuSU5GTzp0aGlzLmluZm8oZSk7YnJlYWs7Y2FzZSBzLmkuREVCVUc6dGhpcy5kZWJ1ZyhlKTticmVhaztjYXNlIHMuaS5XQVJOSU5HOnRoaXMud2FybihlKTticmVhaztjYXNlIHMuaS5FUlJPUjp0aGlzLmVycm9yKGUpfX1kZWJ1Zyh0KXt0aGlzLm1pbkxldmVsPj1zLmkuREVCVUcmJmNvbnNvbGUuZGVidWcodCl9aW5mbyh0KXt0aGlzLm1pbkxldmVsPj1zLmkuSU5GTyYmY29uc29sZS5pbmZvKHQpfWVycm9yKHQpe3RoaXMubWluTGV2ZWw+PXMuaS5FUlJPUiYmY29uc29sZS5lcnJvcih0KX13YXJuKHQpe3RoaXMubWluTGV2ZWw+PXMuaS5XQVJOSU5HJiZjb25zb2xlLndhcm4odCl9dmVyYm9zZSh0KXt0aGlzLm1pbkxldmVsPj1zLmkuVkVSQk9TRSYmY29uc29sZS5sb2codCl9fX0sNTY1Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7cjooKT0+b30pO3ZhciBzPWEoNjExKTtjb25zdCBvPXtSZWFkU2hvcnQ6KHQsZSk9Pih0LmNoYXJDb2RlQXQoZSk8PDgpK3QuY2hhckNvZGVBdChlKzEpLFJlYWRTaG9ydFg6KHQsZSk9Pih0LmNoYXJDb2RlQXQoZSsxKTw8OCkrdC5jaGFyQ29kZUF0KGUpLFJlYWRJbnQ6KHQsZSk9PjE2Nzc3MjE2KnQuY2hhckNvZGVBdChlKSsodC5jaGFyQ29kZUF0KGUrMSk8PDE2KSsodC5jaGFyQ29kZUF0KGUrMik8PDgpK3QuY2hhckNvZGVBdChlKzMpLFJlYWRTSW50Oih0LGUpPT4odC5jaGFyQ29kZUF0KGUpPDwyNCkrKHQuY2hhckNvZGVBdChlKzEpPDwxNikrKHQuY2hhckNvZGVBdChlKzIpPDw4KSt0LmNoYXJDb2RlQXQoZSszKSxSZWFkSW50WDoodCxlKT0+MTY3NzcyMTYqdC5jaGFyQ29kZUF0KGUrMykrKHQuY2hhckNvZGVBdChlKzIpPDwxNikrKHQuY2hhckNvZGVBdChlKzEpPDw4KSt0LmNoYXJDb2RlQXQoZSksU2hvcnRUb1N0cjp0PT5TdHJpbmcuZnJvbUNoYXJDb2RlKHQ+PjgmMjU1LDI1NSZ0KSxTaG9ydFRvU3RyWDp0PT5TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSZ0LHQ+PjgmMjU1KSxJbnRUb1N0cjp0PT5TdHJpbmcuZnJvbUNoYXJDb2RlKHQ+PjI0JjI1NSx0Pj4xNiYyNTUsdD4+OCYyNTUsMjU1JnQpLEludFRvU3RyWDp0PT5TdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSZ0LHQ+PjgmMjU1LHQ+PjE2JjI1NSx0Pj4yNCYyNTUpLFNwbGl0QXJyYXk6dD0+dC5zcGxpdChcIixcIiksQ2xvbmU6dD0+SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0KSksRXNjYXBlSHRtbDp0PT5cInN0cmluZ1wiPT10eXBlb2YgdD90LnJlcGxhY2UoLyYvZyxcIiZhbXA7XCIpLnJlcGxhY2UoLz4vZyxcIiZndDtcIikucmVwbGFjZSgvPC9nLFwiJmx0O1wiKS5yZXBsYWNlKC9cIi9nLFwiJnF1b3Q7XCIpLnJlcGxhY2UoLycvZyxcIiZhcG9zO1wiKTpcImJvb2xlYW5cIj09dHlwZW9mIHR8fFwibnVtYmVyXCI9PXR5cGVvZiB0P3Q6dm9pZCAwLEFycmF5RWxlbWVudE1vdmUodCxlLGEpe3Quc3BsaWNlKGEsMCx0LnNwbGljZShlLDEpWzBdKX0sT2JqZWN0VG9TdHJpbmdFeCh0LGUpe2xldCBhPVwiXCI7aWYoMCE9PXQmJighKDAscy5mKSh0KXx8bnVsbD09dCkpcmV0dXJuXCIoTnVsbClcIjtpZih0IGluc3RhbmNlb2YgQXJyYXkpZm9yKGNvbnN0IHMgaW4gdClhPWErXCI8YnIgLz5cIitTdHJpbmcodGhpcy5nYXAoZSkpK1wiSXRlbSAjXCIrU3RyaW5nKHMpK1wiOiBcIitTdHJpbmcodGhpcy5PYmplY3RUb1N0cmluZ0V4KHRbc10sZSsxKSk7ZWxzZSBpZih0IGluc3RhbmNlb2YgT2JqZWN0KWZvcihjb25zdCBzIGluIHQpYT1hK1wiPGJyIC8+XCIrU3RyaW5nKHRoaXMuZ2FwKGUpKStTdHJpbmcocykrXCIgPSBcIitTdHJpbmcodGhpcy5PYmplY3RUb1N0cmluZ0V4KHRbc10sZSsxKSk7ZWxzZSBhKz1TdHJpbmcodGhpcy5Fc2NhcGVIdG1sKHQpKTtyZXR1cm4gYX0sT2JqZWN0VG9TdHJpbmdFeDIodCxlKXtsZXQgYT1cIlwiO2lmKDAhPT10JiYoISgwLHMuZikodCl8fG51bGw9PXQpKXJldHVyblwiKE51bGwpXCI7aWYodCBpbnN0YW5jZW9mIEFycmF5KWZvcihjb25zdCBzIGluIHQpYT1hK1wiXFxyXFxuXCIrU3RyaW5nKHRoaXMuZ2FwMihlKSkrXCJJdGVtICNcIitTdHJpbmcocykrXCI6IFwiK1N0cmluZyh0aGlzLk9iamVjdFRvU3RyaW5nRXgyKHRbc10sZSsxKSk7ZWxzZSBpZih0IGluc3RhbmNlb2YgT2JqZWN0KWZvcihjb25zdCBzIGluIHQpYT1hK1wiXFxyXFxuXCIrU3RyaW5nKHRoaXMuZ2FwMihlKSkrU3RyaW5nKHMpK1wiID0gXCIrU3RyaW5nKHRoaXMuT2JqZWN0VG9TdHJpbmdFeDIodFtzXSxlKzEpKTtlbHNlIGErPVN0cmluZyh0aGlzLkVzY2FwZUh0bWwodCkpO3JldHVybiBhfSxnYXAodCl7bGV0IGU9XCJcIjtmb3IobGV0IGE9MDthPDQqdDthKyspZSs9XCImbmJzcDtcIjtyZXR1cm4gZX0sZ2FwMih0KXtsZXQgZT1cIlwiO2ZvcihsZXQgYT0wO2E8NCp0O2ErKyllKz1cIiBcIjtyZXR1cm4gZX0sT2JqZWN0VG9TdHJpbmcodCl7cmV0dXJuIHRoaXMuT2JqZWN0VG9TdHJpbmdFeCh0LDApfSxPYmplY3RUb1N0cmluZzIodCl7cmV0dXJuIHRoaXMuT2JqZWN0VG9TdHJpbmdFeDIodCwwKX0sY2hhcjJoZXg6dD0+KHQrMjU2KS50b1N0cmluZygxNikuc3Vic3RyKC0yKS50b1VwcGVyQ2FzZSgpLHJzdHIyaGV4KHQpe2xldCBlLGE9XCJcIjtmb3IoZT0wO2U8dC5sZW5ndGg7ZSsrKWErPVN0cmluZyh0aGlzLmNoYXIyaGV4KHQuY2hhckNvZGVBdChlKSkpO3JldHVybiBhfSxlbmNvZGVfdXRmODp0PT51bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQodCkpLGRlY29kZV91dGY4OnQ9PmRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUodCkpLGRhdGEyYmxvYih0KXtjb25zdCBlPW5ldyBBcnJheSh0Lmxlbmd0aCk7Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspZVthXT10LmNoYXJDb2RlQXQoYSk7cmV0dXJuIG5ldyBCbG9iKFtuZXcgVWludDhBcnJheShlKV0pfSxyYW5kb206dD0+TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnQpLHRyYWRlbWFya3M6dD0+dC5yZXBsYWNlKC9cXChSXFwpL2csXCImcmVnO1wiKS5yZXBsYWNlKC9cXChUTVxcKS9nLFwiJnRyYWRlO1wiKX19LDQ2Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7SDooKT0+c30pO2NsYXNzIHN7cHJvY2Vzc0RhdGEodCl7fW9uU3RhdGVDaGFuZ2UodCl7fXN0YXJ0KCl7fW9uU2VuZEt2bURhdGEodCl7fX19LDc4NDoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUseyQ6KCk9Pml9KTt2YXIgcz1hKDk4OSksbz1hKDYxMSk7Y2xhc3MgaXtjb25zdHJ1Y3Rvcih0LGUsYSl7dGhpcy5hY2M9XCJcIix0aGlzLnN0YXRlUHJvY2Vzc29yRmFjPW5ldyBzLnYoZSxhLHRoaXMudXBkYXRlUkZCU3RhdGUuYmluZCh0aGlzKSksdGhpcy5wYXJlbnQ9YSx0aGlzLmxvZ2dlcj10fXByb2Nlc3NEYXRhKHQpe2lmKCEoMCxvLmYpKHQpKXJldHVybjt0aGlzLmFjYys9dDtsZXQgZT0wO2Zvcih0aGlzLmxvZ2dlci52ZXJib3NlKGBQcm9jZXNzIERhdGEgQUNDIGxlbmd0aDogICR7dGhpcy5hY2MubGVuZ3RofWApO3RoaXMuYWNjLmxlbmd0aD4wOyl7Y29uc3QgdD10aGlzLnN0YXRlUHJvY2Vzc29yRmFjLmdldFByb2Nlc3Nvcih0aGlzLnBhcmVudC5zdGF0ZSksYT10aGlzLnBhcmVudC5zdGF0ZTtpZihlPXQucHJvY2Vzc1N0YXRlKHRoaXMuYWNjKSx0aGlzLmxvZ2dlci52ZXJib3NlKGBTdGF0ZSAgJHthfSAgUHJvY2Vzc2VkLiBjbWRTaXplIHJldHVybmVkICR7ZX1gKSwwPT09ZSlyZXR1cm47dGhpcy5hY2M9dGhpcy5hY2Muc3Vic3RyaW5nKGUpLHRoaXMubG9nZ2VyLnZlcmJvc2UoYHJlbWFpbmluZyBhY2MgICR7dGhpcy5hY2MubGVuZ3RofSBjb21tYW5kIHNpemU6ICR7ZX0gbmV3IHBhcmVudCBzdGF0ZTogJHt0aGlzLnBhcmVudC5zdGF0ZX1gKX19dXBkYXRlUkZCU3RhdGUodCl7dGhpcy5wYXJlbnQuc3RhdGU9dH19fSw2Nzk6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtYOigpPT5vfSk7dmFyIHM9YSg2NDQpO2NsYXNzIG97Y29uc3RydWN0b3IodCl7dGhpcy5wYXJlbnQ9dH1EZWNvZGUodCxlLGEsbyxpLHIsbixsKXtjb25zdCBoPXQuY2hhckNvZGVBdChlKyspO2xldCBjLHAsZDtjb25zdCB2PXt9O2xldCBiLHU9MCxmPTA7aWYoMD09PWgpe2Zvcih0aGlzLnBhcmVudC5sb2dnZXIudmVyYm9zZShcIlJhdyBlbmNvZGluZ1wiKSxiPTA7YjxuO2IrKylzLmouc2V0UGl4ZWwodGhpcy5wYXJlbnQsdC5jaGFyQ29kZUF0KGUrKykrKDI9PT10aGlzLnBhcmVudC5icHA/dC5jaGFyQ29kZUF0KGUrKyk8PDg6MCksYik7cy5qLnB1dEltYWdlKHRoaXMucGFyZW50LGEsbyl9ZWxzZSBpZigxPT09aCl7cD10LmNoYXJDb2RlQXQoZSsrKSsoMj09PXRoaXMucGFyZW50LmJwcD90LmNoYXJDb2RlQXQoZSsrKTw8ODowKSx0aGlzLnBhcmVudC5jYW52YXNDdHguZmlsbFN0eWxlPVwicmdiKFwiKygxPT09dGhpcy5wYXJlbnQuYnBwP2AkezIyNCZwfSwgJHsoMjgmcCk8PDN9LCAke3Muai5maXhDb2xvcigoMyZwKTw8Nil9YDpgJHtwPj44JjI0OH0sICR7cD4+MyYyNTJ9LCR7KDMxJnApPDwzfWApK1wiKVwiLHRoaXMucGFyZW50LmxvZ2dlci52ZXJib3NlKFwiZmlsbHN0eWxlOiBcIit0aGlzLnBhcmVudC5jYW52YXNDdHguZmlsbFN0eWxlKTtjb25zdCBuPXMuai5yb3RYKHRoaXMucGFyZW50LGEsbyk7bz1zLmoucm90WSh0aGlzLnBhcmVudCxhLG8pLGE9bix0aGlzLnBhcmVudC5jYW52YXNDdHguZmlsbFJlY3QoYSxvLGkscil9ZWxzZSBpZihoPjEmJmg8MTcpe3RoaXMucGFyZW50LmxvZ2dlci52ZXJib3NlKFwiUmVhZCB0aGUgcGFja2VkIHBhbGV0dGVcIik7bGV0IGk9NCxyPTE1O2ZvcihiPTA7YjxoO2IrKyl2W2JdPXQuY2hhckNvZGVBdChlKyspKygyPT09dGhpcy5wYXJlbnQuYnBwP3QuY2hhckNvZGVBdChlKyspPDw4OjApO2ZvcigyPT09aD8oaT0xLHI9MSk6aDw9NCYmKGk9MixyPTMpO3U8biYmZTx0Lmxlbmd0aDspZm9yKHA9dC5jaGFyQ29kZUF0KGUrKyksYj04LWk7Yj49MDtiLT1pKXMuai5zZXRQaXhlbCh0aGlzLnBhcmVudCx2W3A+PmImcl0sdSsrKTtzLmoucHV0SW1hZ2UodGhpcy5wYXJlbnQsYSxvKX1lbHNlIGlmKDEyOD09PWgpe2Zvcih0aGlzLnBhcmVudC5sb2dnZXIudmVyYm9zZShcIlJMRSBlbmNvZGVkIHRpbGVcIik7dTxuJiZlPHQubGVuZ3RoOyl7cD10LmNoYXJDb2RlQXQoZSsrKSsoMj09PXRoaXMucGFyZW50LmJwcD90LmNoYXJDb2RlQXQoZSsrKTw8ODowKSxmPTE7ZG97Zis9ZD10LmNoYXJDb2RlQXQoZSsrKX13aGlsZSgyNTU9PT1kKTtmb3IoOy0tZj49MDspcy5qLnNldFBpeGVsKHRoaXMucGFyZW50LHAsdSsrKX1zLmoucHV0SW1hZ2UodGhpcy5wYXJlbnQsYSxvKX1lbHNlIGlmKGg+MTI5KXtmb3IodGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoXCJSZWFkIHRoZSBSTEUgcGFsZXR0ZVwiKSxiPTA7YjxoLTEyODtiKyspdltiXT10LmNoYXJDb2RlQXQoZSsrKSsoMj09PXRoaXMucGFyZW50LmJwcD90LmNoYXJDb2RlQXQoZSsrKTw8ODowKTtmb3IodGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoXCJEZWNvZGUgUkxFIG9uIHBhbGV0dGVcIik7dTxuJiZlPHQubGVuZ3RoOyl7aWYoZj0xLGM9dC5jaGFyQ29kZUF0KGUrKykscD12W2MlMTI4XSxjPjEyNylkb3tmKz1kPXQuY2hhckNvZGVBdChlKyspfXdoaWxlKDI1NT09PWQpO2Zvcig7LS1mPj0wOylzLmouc2V0UGl4ZWwodGhpcy5wYXJlbnQscCx1KyspfXMuai5wdXRJbWFnZSh0aGlzLnBhcmVudCxhLG8pfX19fSw2NDY6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHskOigpPT5zLiQsWDooKT0+by5YfSk7dmFyIHM9YSg3ODQpLG89YSg2NzkpfSw2NjM6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO3ZhciBzO2EuZChlLHtpOigpPT5zfSksZnVuY3Rpb24odCl7dFt0LlZFUkJPU0U9NV09XCJWRVJCT1NFXCIsdFt0LklORk89NF09XCJJTkZPXCIsdFt0LkRFQlVHPTNdPVwiREVCVUdcIix0W3QuV0FSTklORz0yXT1cIldBUk5JTkdcIix0W3QuRVJST1I9MV09XCJFUlJPUlwifShzfHwocz17fSkpfSwyMDE6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtpOigpPT5zLml9KTt2YXIgcz1hKDY2Myl9LDcyNToodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse2U6KCk9Pml9KTt2YXIgcz1hKDU2NSksbz1hKDgpO2NsYXNzIGl7Y29uc3RydWN0b3IodCxlLGEscyl7dGhpcy53c1NvY2tldD10LHRoaXMucGFyZW50PWUsdGhpcy5ybGVEZWNvZGVyPWEsdGhpcy51cGRhdGVSRkJTdGF0ZT1zfXByb2Nlc3NTdGF0ZSh0KXtsZXQgZT0wO2lmKHQubGVuZ3RoPj0xMil7Y29uc3QgYT1zLnIuUmVhZFNob3J0KHQsMCksaT1zLnIuUmVhZFNob3J0KHQsMikscj1zLnIuUmVhZFNob3J0KHQsNCksbj1zLnIuUmVhZFNob3J0KHQsNiksbD1yKm4saD1zLnIuUmVhZEludCh0LDgpO2lmKGg8MTcpe2lmKHI8MXx8cj42NHx8bjwxfHxuPjY0KXRocm93IHRoaXMucGFyZW50LmxvZ2dlci5lcnJvcihgSW52YWxpZCB0aWxlIHNpemUgKCR7cn0sJHtufSksIGRpc2Nvbm5lY3RpbmcuYCksbmV3IEVycm9yKFwiSW52YWxpZCB0aWxlIHNpemVcIik7aWYodGhpcy5wYXJlbnQuc3BhcmV3IT09cnx8dGhpcy5wYXJlbnQuc3BhcmVoIT09bil7dGhpcy5wYXJlbnQuc3BhcmV3PXRoaXMucGFyZW50LnNwYXJldzI9cix0aGlzLnBhcmVudC5zcGFyZWg9dGhpcy5wYXJlbnQuc3BhcmVoMj1uLDEhPT10aGlzLnBhcmVudC5yb3RhdGlvbiYmMyE9PXRoaXMucGFyZW50LnJvdGF0aW9ufHwodGhpcy5wYXJlbnQuc3BhcmV3Mj1uLHRoaXMucGFyZW50LnNwYXJlaDI9cik7Y29uc3QgdD1gJHt0aGlzLnBhcmVudC5zcGFyZXcyfXgke3RoaXMucGFyZW50LnNwYXJlaDJ9YDt0aGlzLnBhcmVudC5zcGFyZT10aGlzLnBhcmVudC5zcGFyZWNhY2hlW3RdLCgwLG8uZlEpKHRoaXMucGFyZW50LnNwYXJlKXx8KHRoaXMucGFyZW50LnNwYXJlY2FjaGVbdF09dGhpcy5wYXJlbnQuc3BhcmU9dGhpcy5wYXJlbnQuY2FudmFzQ3R4LmNyZWF0ZUltYWdlRGF0YSh0aGlzLnBhcmVudC5zcGFyZXcyLHRoaXMucGFyZW50LnNwYXJlaDIpKX19aWYoNDI5NDk2NzA3Mz09PWgpdGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoXCJEZXNrdG9wIHNpemVcIiksdGhpcy5wYXJlbnQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aD10aGlzLnBhcmVudC5TY3JlZW5XaWR0aD10aGlzLnBhcmVudC5yd2lkdGg9dGhpcy5wYXJlbnQud2lkdGg9cix0aGlzLnBhcmVudC5jYW52YXNDdHguY2FudmFzLmhlaWdodD10aGlzLnBhcmVudC5TY3JlZW5IZWlnaHQ9dGhpcy5wYXJlbnQucmhlaWdodD10aGlzLnBhcmVudC5oZWlnaHQ9bix0aGlzLndzU29ja2V0LnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgzLDAsMCwwLDAsMCkrcy5yLlNob3J0VG9TdHIodGhpcy5wYXJlbnQud2lkdGgpK3Muci5TaG9ydFRvU3RyKHRoaXMucGFyZW50LmhlaWdodCkpLGU9MTIsbnVsbCE9dGhpcy5wYXJlbnQub25TY3JlZW5TaXplQ2hhbmdlJiZ0aGlzLnBhcmVudC5vblNjcmVlblNpemVDaGFuZ2UodGhpcy5wYXJlbnQuU2NyZWVuV2lkdGgsdGhpcy5wYXJlbnQuU2NyZWVuSGVpZ2h0KTtlbHNlIGlmKDA9PT1oKXtsZXQgcz0xMjtjb25zdCByPTEyK2wqdGhpcy5wYXJlbnQuYnBwO2lmKHQubGVuZ3RoPHIpcmV0dXJuIDA7ZT1yO2ZvcihsZXQgZT0wO2U8bDtlKyspby5qdy5zZXRQaXhlbCh0aGlzLnBhcmVudCx0LmNoYXJDb2RlQXQocysrKSsoMj09PXRoaXMucGFyZW50LmJwcD90LmNoYXJDb2RlQXQocysrKTw8ODowKSxlKTtvLmp3LnB1dEltYWdlKHRoaXMucGFyZW50LGEsaSl9ZWxzZXtpZigxNiE9PWgpdGhyb3cgdGhpcy5wYXJlbnQubG9nZ2VyLmVycm9yKGBVbmtub3duIEVuY29kaW5nOiAke2h9ICwgSEVYOiAke3Muci5yc3RyMmhleCh0KX1gKSxuZXcgRXJyb3IoYFVua25vd24gRW5jb2Rpbmc6ICR7aH1gKTt7aWYodC5sZW5ndGg8MTYpcmV0dXJuIDA7Y29uc3Qgbz1zLnIuUmVhZEludCh0LDEyKTtpZih0Lmxlbmd0aDwxNitvKXJldHVybiAwO2NvbnN0IGg9MTYsYz01LHA9MDtpZihvPjUmJjA9PT10LmNoYXJDb2RlQXQoaCkmJnMuci5SZWFkU2hvcnRYKHQsaCsxKT09PW8tYyl0aGlzLnJsZURlY29kZXIuRGVjb2RlKHQsaCs1LGEsaSxyLG4sbCxvKTtlbHNle2NvbnN0IGU9dC5zdWJzdHJpbmcoaCxoK28tcCkscz10aGlzLnBhcmVudC5pbmZsYXRlLmluZmxhdGUoZSk7aWYoIShzLmxlbmd0aD4wKSl0aHJvdyB0aGlzLnBhcmVudC5sb2dnZXIuZXJyb3IoXCJJbnZhbGlkIGRlZmxhdGUgZGF0YS5cIiksbmV3IEVycm9yKFwiaW52YWxpZCBkZWZsYXRlIGRhdGFcIik7dGhpcy5ybGVEZWNvZGVyLkRlY29kZShzLDAsYSxpLHIsbixsLHMubGVuZ3RoKX1lPTE2K299fWlmKDEwMD09LS10aGlzLnBhcmVudC5zdGF0ZSl7dGhpcy5wYXJlbnQubG9nZ2VyLmRlYnVnKFwiRnJhbWUgY29tcGxldGVkLiBVcGRhdGUgc3RhdGUgYW5kIHJlcXVlc3QgbmV3IGZyYW1lXCIpLHRoaXMudXBkYXRlUkZCU3RhdGUoNCk7Y29uc3QgdD0oKT0+by5Ybi5zZW5kUmVmcmVzaCh0aGlzLnBhcmVudCx0aGlzLndzU29ja2V0KTswPT09dGhpcy5wYXJlbnQuZnJhbWVSYXRlRGVsYXk/by5Ybi5zZW5kUmVmcmVzaCh0aGlzLnBhcmVudCx0aGlzLndzU29ja2V0KTpzZXRUaW1lb3V0KHQsdGhpcy5wYXJlbnQuZnJhbWVSYXRlRGVsYXkpfX1yZXR1cm4gZX19fSw3MDoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse1U6KCk9Pm99KTt2YXIgcz1hKDU2NSk7Y2xhc3Mgb3tjb25zdHJ1Y3Rvcih0LGUsYSl7dGhpcy53c1NvY2tldD10LHRoaXMuc2VydmVyQ3V0VGV4dEhhbmRsZXI9ZSx0aGlzLnVwZGF0ZVJGQlN0YXRlPWF9cHJvY2Vzc1N0YXRlKHQpe2xldCBlPTAsYT0wO3N3aXRjaCh0LmNoYXJDb2RlQXQoMCkpe2Nhc2UgMDppZih0Lmxlbmd0aDw0KXJldHVybiAwO3RoaXMudXBkYXRlUkZCU3RhdGUoMTAwK3Muci5SZWFkU2hvcnQodCwyKSksZT00O2JyZWFrO2Nhc2UgMjplPTE7YnJlYWs7Y2FzZSAzOmlmKHQubGVuZ3RoPDgpcmV0dXJuIDA7aWYoYT1zLnIuUmVhZEludCh0LDQpKzgsdC5sZW5ndGg8YSlyZXR1cm4gMDtlPXRoaXMuc2VydmVyQ3V0VGV4dEhhbmRsZXIuaGFuZGxlU2VydmVyQ3V0VGV4dCh0KX1yZXR1cm4gZX19fSwyMTI6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHt3OigpPT5zfSk7Y2xhc3Mgc3tjb25zdHJ1Y3Rvcih0LGUpe3RoaXMud3NTb2NrZXQ9dCx0aGlzLnVwZGF0ZVJGQlN0YXRlPWV9cHJvY2Vzc1N0YXRlKHQpe2xldCBlPTA7cmV0dXJuIHQubGVuZ3RoPj0xMj8oZT0xMix0aGlzLnVwZGF0ZVJGQlN0YXRlKDEpLHRoaXMud3NTb2NrZXQuc2VuZChcIlJGQiAwMDMuMDA4XFxuXCIpLGUpOjB9fX0sMjY6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtsOigpPT5zfSk7Y2xhc3Mgc3tjb25zdHJ1Y3Rvcih0LGUpe3RoaXMud3NTb2NrZXQ9dCx0aGlzLnVwZGF0ZVJGQlN0YXRlPWV9cHJvY2Vzc1N0YXRlKHQpe2xldCBlPTA7cmV0dXJuIHQubGVuZ3RoPj0xPyhlPXQuY2hhckNvZGVBdCgwKSsxLHRoaXMud3NTb2NrZXQuc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDEpKSx0aGlzLnVwZGF0ZVJGQlN0YXRlKDIpLGUpOjB9fX0sNzI0Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7bTooKT0+b30pO3ZhciBzPWEoNTY1KTtjbGFzcyBve2NvbnN0cnVjdG9yKHQsZSl7dGhpcy53c1NvY2tldD10LHRoaXMudXBkYXRlUkZCU3RhdGU9ZX1wcm9jZXNzU3RhdGUodCl7bGV0IGU9MDtpZih0Lmxlbmd0aD49NCl7aWYoZT00LDAhPT1zLnIuUmVhZEludCh0LDApKXRocm93IG5ldyBFcnJvcihcIkVycm9yLiBTdG9wcGluZy4gU2VjdXJpdHkgcmVzcG9uc2Ugbm90IE5vbmUuXCIpO3JldHVybiB0aGlzLndzU29ja2V0LnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgxKSksdGhpcy51cGRhdGVSRkJTdGF0ZSgzKSxlfXJldHVybiAwfX19LDI1NjoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse0k6KCk9Pml9KTt2YXIgcz1hKDU2NSksbz1hKDYxMSk7Y2xhc3MgaXtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMud3NTb2NrZXQ9dCx0aGlzLnBhcmVudD1lfWhhbmRsZVNlcnZlckN1dFRleHQodCl7aWYodC5sZW5ndGg8OClyZXR1cm4gMDtjb25zdCBlPXMuci5SZWFkSW50KHQsNCkrODtpZih0Lmxlbmd0aDxlKXJldHVybiAwO2lmKG51bGwhPXRoaXMucGFyZW50Lm9uS3ZtRGF0YSl7Y29uc3QgYT10LnN1YnN0cmluZyg4LGUpO2EubGVuZ3RoPj0xNiYmXCJcXDBLdm1EYXRhQ2hhbm5lbFwiPT09YS5zdWJzdHJpbmcoMCwxNSkmJih0aGlzLnBhcmVudC5rdm1EYXRhU3VwcG9ydGVkfHwodGhpcy5wYXJlbnQua3ZtRGF0YVN1cHBvcnRlZD0hMCxjb25zb2xlLmxvZyhcIktWTSBEYXRhIENoYW5uZWwgU3VwcG9ydGVkLlwiKSksKC0xPT09dGhpcy5wYXJlbnQub25Ldm1EYXRhQWNrJiYxNj09PWEubGVuZ3RofHwwIT09YS5jaGFyQ29kZUF0KDE1KSkmJih0aGlzLnBhcmVudC5vbkt2bURhdGFBY2s9ITApLCgwLG8uZikodGhpcy5wYXJlbnQudXJsdmFycykmJigwLG8uZikodGhpcy5wYXJlbnQudXJsdmFycy5rdm1kYXRhdHJhY2UpJiZjb25zb2xlLmxvZyhgS1ZNLVJlY3YoKCR7YS5sZW5ndGgtMTZ9KSk6ICAke2Euc3Vic3RyaW5nKDE2KX1gKSxhLmxlbmd0aD4xNiYmdGhpcy5wYXJlbnQub25Ldm1EYXRhKGEuc3Vic3RyaW5nKDE2KSksITA9PT10aGlzLnBhcmVudC5vbkt2bURhdGFBY2smJnRoaXMucGFyZW50Lm9uS3ZtRGF0YVBlbmRpbmcubGVuZ3RoPjAmJnRoaXMud3NTb2NrZXQub25TZW5kS3ZtRGF0YSh0aGlzLnBhcmVudC5vbkt2bURhdGFQZW5kaW5nLnNoaWZ0KCkpKX1yZXR1cm4gZX19fSw5NDY6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtDOigpPT5pfSk7dmFyIHM9YSg1NjUpLG89YSgxNzMpO2NsYXNzIGl7Y29uc3RydWN0b3IodCxlLGEpe3RoaXMud3NTb2NrZXQ9dCx0aGlzLnBhcmVudD1lLHRoaXMudXBkYXRlUkZCU3RhdGU9YX1wcm9jZXNzU3RhdGUodCl7bGV0IGU9MDtpZih0Lmxlbmd0aD49MjQpe3RoaXMucGFyZW50LnJvdGF0aW9uPTA7Y29uc3QgYT1zLnIuUmVhZEludCh0LDIwKTtpZih0Lmxlbmd0aDwyNCthKXJldHVybiAwO2U9MjQrYSxudWxsIT10aGlzLnBhcmVudC51cGRhdGVTY3JlZW5EaW1lbnNpb25zJiZ0aGlzLnBhcmVudC51cGRhdGVTY3JlZW5EaW1lbnNpb25zKHMuci5SZWFkU2hvcnQodCwwKSxzLnIuUmVhZFNob3J0KHQsMikpLHRoaXMucGFyZW50LmNhbnZhc0N0eC5jYW52YXMud2lkdGg9dGhpcy5wYXJlbnQuU2NyZWVuV2lkdGg9dGhpcy5wYXJlbnQucndpZHRoPXRoaXMucGFyZW50LndpZHRoPXMuci5SZWFkU2hvcnQodCwwKSx0aGlzLnBhcmVudC5jYW52YXNDdHguY2FudmFzLmhlaWdodD10aGlzLnBhcmVudC5TY3JlZW5IZWlnaHQ9dGhpcy5wYXJlbnQucmhlaWdodD10aGlzLnBhcmVudC5oZWlnaHQ9cy5yLlJlYWRTaG9ydCh0LDIpO2xldCBpPVwiXCI7cmV0dXJuIHRoaXMucGFyZW50LnVzZVpSTEUmJihpKz1zLnIuSW50VG9TdHIoMTYpKSxpKz1zLnIuSW50VG9TdHIoMCksaSs9cy5yLkludFRvU3RyKDEwOTIpLHRoaXMucGFyZW50LmxvZ2dlci52ZXJib3NlKFwiU2VuZCBzdXBwb3J0ZWQgZW5jb2RpbmdzXCIpLHRoaXMud3NTb2NrZXQuc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDIsMCkrcy5yLlNob3J0VG9TdHIoaS5sZW5ndGgvNCsxKStpK3Muci5JbnRUb1N0cigtMjIzKSksMT09PXRoaXMucGFyZW50LmJwcCYmdGhpcy53c1NvY2tldC5zZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMCwwLDAsMCw4LDgsMCwxKStzLnIuU2hvcnRUb1N0cig3KStzLnIuU2hvcnRUb1N0cig3KStzLnIuU2hvcnRUb1N0cigzKStTdHJpbmcuZnJvbUNoYXJDb2RlKDUsMiwwLDAsMCwwKSksdGhpcy51cGRhdGVSRkJTdGF0ZSg0KSx0aGlzLnBhcmVudC5vblN0YXRlQ2hhbmdlKDMpLHRoaXMucGFyZW50LmxvZ2dlci5pbmZvKFwiU3RhcnQgbmV3IGZyYW1lLlwiKSxvLlguc2VuZFJlZnJlc2godGhpcy5wYXJlbnQsdGhpcy53c1NvY2tldCksdGhpcy5wYXJlbnQub2xkTW91c2VYPS0xLGV9cmV0dXJuIDB9fX0sMzg5Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7Q3U6KCk9PmwuQyxVdDooKT0+aS5VLGV6OigpPT5zLmUsbGw6KCk9PnIubCxtQzooKT0+bi5tLHdXOigpPT5vLnd9KTt2YXIgcz1hKDcyNSksbz1hKDIxMiksaT1hKDcwKSxyPWEoMjYpLG49YSg3MjQpLGw9YSg5NDYpfSw5ODk6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHt2OigpPT5yfSk7dmFyIHM9YSgzODkpLG89YSgyNTYpLGk9YSg2NzkpO2NsYXNzIHJ7Y29uc3RydWN0b3IodCxlLGEpe3RoaXMuc3RhdGVQcm9jZXNzb3JzPXt9LHRoaXMuc3RhdGVQcm9jZXNzb3JzWzBdPW5ldyBzLndXKHQsYSksdGhpcy5zdGF0ZVByb2Nlc3NvcnNbMV09bmV3IHMubGwodCxhKSx0aGlzLnN0YXRlUHJvY2Vzc29yc1syXT1uZXcgcy5tQyh0LGEpLHRoaXMuc3RhdGVQcm9jZXNzb3JzWzNdPW5ldyBzLkN1KHQsZSxhKTtjb25zdCByPW5ldyBvLkkodCxlKTt0aGlzLnN0YXRlUHJvY2Vzc29yc1s0XT1uZXcgcy5VdCh0LHIsYSksdGhpcy5zdGF0ZVByb2Nlc3NvcnNbXCIxMDBwbHVzXCJdPW5ldyBzLmV6KHQsZSxuZXcgaS5YKGUpLGEpfWdldFByb2Nlc3Nvcih0KXtyZXR1cm4gdDw9MTAwP3RoaXMuc3RhdGVQcm9jZXNzb3JzW3RdOnRoaXMuc3RhdGVQcm9jZXNzb3JzW1wiMTAwcGx1c1wiXX19fSwxNTU6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtROigpPT5zfSk7Y2xhc3Mgc3tjb25zdHJ1Y3Rvcih0KXt0aGlzLnByb2Nlc3NEYXRhPXQ9PntudWxsIT10aGlzLnRlcm1pbmFsLmNhcHR1cmUmJih0aGlzLnRlcm1pbmFsLmNhcHR1cmU9U3RyaW5nKHRoaXMudGVybWluYWwuY2FwdHVyZSkrdCk7bGV0IGU9XCJcIjtmb3IobGV0IGE9MDthPHQubGVuZ3RoO2ErKyl7Y29uc3Qgcz10LmNoYXJDb2RlQXQoYSk7XCJKXCI9PT10W2FdP3RoaXMuY2xlYXJUZXJtaW5hbCgpOmUrPTAhPSgxMjgmcyk/U3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLnRlcm1pbmFsLkFzY2lpVG9Vbmljb2RlWzEyNyZzXSk6YCR7dFthXX1gfXRoaXMucHJvY2Vzc0RhdGFUb1h0ZXJtKGUpfSx0aGlzLnRlcm1pbmFsPXR9fX0sMzg6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtxOigpPT5pfSk7dmFyIHM9YSg5MjMpLG89YSg2MTEpO2NvbnN0IGk9e2NvbnZlcnRBTVRLZXlDb2RlOnQ9PigwLG8uZikodC5jb2RlLnN0YXJ0c1dpdGgoXCJLZXlcIikpJiY0PT09dC5jb2RlLmxlbmd0aD90LmNvZGUuY2hhckNvZGVBdCgzKSsoITE9PT10LnNoaWZ0S2V5PzMyOjApOigwLG8uZikodC5jb2RlLnN0YXJ0c1dpdGgoXCJEaWdpdFwiKSkmJjY9PT10LmNvZGUubGVuZ3RoP3QuY29kZS5jaGFyQ29kZUF0KDUpOigwLG8uZikodC5jb2RlLnN0YXJ0c1dpdGgoXCJOdW1wYWRcIikpJiY3PT09dC5jb2RlLmxlbmd0aD90LmNvZGUuY2hhckNvZGVBdCg2KTpzLlpbdC5jb2RlXX19LDkyMzoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse1o6KCk9PnN9KTtjb25zdCBzPXtQYXVzZToxOSxDYXBzTG9jazoyMCxTcGFjZTozMixRdW90ZTozOSxNaW51czo0NSxOdW1wYWRNdWx0aXBseTo0MixOdW1wYWRBZGQ6NDMsUHJpbnRTY3JlZW46NDQsQ29tbWE6NDQsTnVtcGFkU3VidHJhY3Q6NDUsTnVtcGFkRGVjaW1hbDo0NixQZXJpb2Q6NDYsU2xhc2g6NDcsTnVtcGFkRGl2aWRlOjQ3LFNlbWljb2xvbjo1OSxFcXVhbDo2MSxPU0xlZnQ6OTEsQnJhY2tldExlZnQ6OTEsT1NSaWdodDo5MSxCYWNrc2xhc2g6OTIsQnJhY2tldFJpZ2h0OjkzLENvbnRleHRNZW51OjkzLEJhY2txdW90ZTo5NixOdW1Mb2NrOjE0NCxTY3JvbGxMb2NrOjE0NSxCYWNrc3BhY2U6NjUyODgsVGFiOjY1Mjg5LEVudGVyOjY1MjkzLE51bXBhZEVudGVyOjY1MjkzLEVzY2FwZTo2NTMwNyxEZWxldGU6NjU1MzUsSG9tZTo2NTM2MCxQYWdlVXA6NjUzNjUsUGFnZURvd246NjUzNjYsQXJyb3dMZWZ0OjY1MzYxLEFycm93VXA6NjUzNjIsQXJyb3dSaWdodDo2NTM2MyxBcnJvd0Rvd246NjUzNjQsRW5kOjY1MzY3LEluc2VydDo2NTM3OSxGMTo2NTQ3MCxGMjo2NTQ3MSxGMzo2NTQ3MixGNDo2NTQ3MyxGNTo2NTQ3NCxGNjo2NTQ3NSxGNzo2NTQ3NixGODo2NTQ3NyxGOTo2NTQ3OCxGMTA6NjU0NzksRjExOjY1NDgwLEYxMjo2NTQ4MSxTaGlmdExlZnQ6NjU1MDUsU2hpZnRSaWdodDo2NTUwNixDb250cm9sTGVmdDo2NTUwNyxDb250cm9sUmlnaHQ6NjU1MDgsQWx0TGVmdDo2NTUxMyxBbHRSaWdodDo2NTUxNCxNZXRhTGVmdDo2NTUxMSxNZXRhUmlnaHQ6NjU1MTJ9fSwxNzM6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtYOigpPT5pfSk7dmFyIHM9YSg1NjUpLG89YSg2MTEpO2NvbnN0IGk9e3NlbmRSZWZyZXNoKHQsZSl7aWYoIXQuaG9sZGluZylpZih0LmZvY3VzTW9kZT4wKXtjb25zdCBhPTIqdC5mb2N1c01vZGU7ZS5zZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMywxKStzLnIuU2hvcnRUb1N0cihNYXRoLm1heChNYXRoLm1pbih0Lm9sZE1vdXNlWCx0Lmxhc3RNb3VzZVgpLXQuZm9jdXNNb2RlLDApKStzLnIuU2hvcnRUb1N0cihNYXRoLm1heChNYXRoLm1pbih0Lm9sZE1vdXNlWSx0Lmxhc3RNb3VzZVkpLXQuZm9jdXNNb2RlLDApKStzLnIuU2hvcnRUb1N0cihhK01hdGguYWJzKHQub2xkTW91c2VYLXQubGFzdE1vdXNlWCkpK3Muci5TaG9ydFRvU3RyKGErTWF0aC5hYnModC5vbGRNb3VzZVktdC5sYXN0TW91c2VZKSkpLHQub2xkTW91c2VYPXQubGFzdE1vdXNlWCx0Lm9sZE1vdXNlWT10Lmxhc3RNb3VzZVl9ZWxzZSBlLnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgzLDEsMCwwLDAsMCkrcy5yLlNob3J0VG9TdHIodC5yd2lkdGgpK3Muci5TaG9ydFRvU3RyKHQucmhlaWdodCkpfSxzZW5kS2V5KHQsZSxhKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZSlmb3IoY29uc3QgYSBpbiBlKXRoaXMuc2VuZEtleSh0LGVbYV1bMF0sZVthXVsxXSk7ZWxzZSB0LnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSg0LGEsMCwwKStzLnIuSW50VG9TdHIoZSkpfSxzZW5kS3ZtRGF0YSh0LGUsYSl7ITAhPT10Lm9uS3ZtRGF0YUFjaz90Lm9uS3ZtRGF0YVBlbmRpbmcucHVzaChhKTooKDAsby5mKSh0LnVybHZhcnMpJiYoMCxvLmYpKHQudXJsdmFycy5rdm1kYXRhdHJhY2UpJiZjb25zb2xlLmxvZyhgS1ZNLVNlbmQoJHtTdHJpbmcoYS5sZW5ndGgpfSk6ICR7U3RyaW5nKGEpfWApLGE9XCJcXDBLdm1EYXRhQ2hhbm5lbFxcMFwiK1N0cmluZyhhKSxlLnNlbmQoYCR7U3RyaW5nLmZyb21DaGFyQ29kZSg2LDAsMCwwKX0ke3Muci5JbnRUb1N0cihhLmxlbmd0aCl9JHtTdHJpbmcoYSl9YCksdC5vbkt2bURhdGFBY2s9ITEpfSxzZW5kS2VlcEFsaXZlKHQsZSl7dC5sYXN0S2VlcEFsaXZlPERhdGUubm93KCktNWUzJiYodC5sYXN0S2VlcEFsaXZlPURhdGUubm93KCksZS5zZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoNiwwLDAsMCkrcy5yLkludFRvU3RyKDE2KStcIlxcMEt2bURhdGFDaGFubmVsXFwwXCIpKX0sc2VuZEN0cmxBbHREZWxNc2codCl7dGhpcy5zZW5kQ2FkKHQpfSxzZW5kQ2FkKHQpe3RoaXMuc2VuZEtleSh0LDY1NTA3LDEpLHRoaXMuc2VuZEtleSh0LDY1NTEzLDEpLHRoaXMuc2VuZEtleSh0LDY1NTM1LDEpLHRoaXMuc2VuZEtleSh0LDY1NTM1LDApLHRoaXMuc2VuZEtleSh0LDY1NTEzLDApLHRoaXMuc2VuZEtleSh0LDY1NTA3LDApfX19LDY0NDoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse2o6KCk9PnN9KTtjb25zdCBzPXtwdXRJbWFnZSh0LGUsYSl7aWYodC5ob2xkaW5nKXJldHVybjtjb25zdCBvPXMuYXJvdFgodCxlLGEpO2E9cy5hcm90WSh0LGUsYSksZT1vLHQuY2FudmFzQ3R4LnB1dEltYWdlRGF0YSh0LnNwYXJlLGUsYSl9LHNldFBpeGVsKHQsZSxhKXtsZXQgbyxpLHI9NCphO3Qucm90YXRpb24+MCYmKDE9PT10LnJvdGF0aW9uPyhvPWEldC5zcGFyZXcsaT1NYXRoLmZsb29yKGEvdC5zcGFyZXcpLHI9NCooYT1vKnQuc3BhcmV3MisodC5zcGFyZXcyLTEtaSkpKToyPT09dC5yb3RhdGlvbj9yPXQuc3BhcmV3KnQuc3BhcmVoKjQtNC1yOjM9PT10LnJvdGF0aW9uJiYobz1hJXQuc3BhcmV3LGk9TWF0aC5mbG9vcihhL3Quc3BhcmV3KSxyPTQqKGE9KHQuc3BhcmV3Mi0xLW8pKnQuc3BhcmV3MitpKSkpLDE9PT10LmJwcD8odC5zcGFyZS5kYXRhW3IrK109MjI0JmUsdC5zcGFyZS5kYXRhW3IrK109KDI4JmUpPDwzLHQuc3BhcmUuZGF0YVtyKytdPXMuZml4Q29sb3IoKDMmZSk8PDYpKToodC5zcGFyZS5kYXRhW3IrK109ZT4+OCYyNDgsdC5zcGFyZS5kYXRhW3IrK109ZT4+MyYyNTIsdC5zcGFyZS5kYXRhW3IrK109KDMxJmUpPDwzKSx0LnNwYXJlLmRhdGFbcl09MjU1fSxhcm90WDoodCxlLGEpPT4wPT09dC5yb3RhdGlvbj9lOjE9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy53aWR0aC10LnNwYXJldzItYToyPT09dC5yb3RhdGlvbj90LmNhbnZhc0N0eC5jYW52YXMud2lkdGgtdC5zcGFyZXcyLWU6Mz09PXQucm90YXRpb24/YTowLGFyb3RZOih0LGUsYSk9PjA9PT10LnJvdGF0aW9uP2E6MT09PXQucm90YXRpb24/ZToyPT09dC5yb3RhdGlvbj90LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0LXQuc3BhcmVoMi1hOjM9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQtdC5zcGFyZWgtZTowLGNyb3RYOih0LGUsYSk9PjA9PT10LnJvdGF0aW9uP2U6MT09PXQucm90YXRpb24/YToyPT09dC5yb3RhdGlvbj90LmNhbnZhc0N0eC5jYW52YXMud2lkdGgtZTozPT09dC5yb3RhdGlvbj90LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0LWE6MCxjcm90WToodCxlLGEpPT4wPT09dC5yb3RhdGlvbj9hOjE9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy53aWR0aC1lOjI9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQtYTozPT09dC5yb3RhdGlvbj9lOjAscm90WDoodCxlLGEpPT4wPT09dC5yb3RhdGlvbnx8MT09PXQucm90YXRpb24/ZToyPT09dC5yb3RhdGlvbj9lLXQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aDozPT09dC5yb3RhdGlvbj9lLXQuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQ6MCxyb3RZOih0LGUsYSk9PjA9PT10LnJvdGF0aW9uP2E6MT09PXQucm90YXRpb24/YS10LmNhbnZhc0N0eC5jYW52YXMud2lkdGg6Mj09PXQucm90YXRpb24/YS10LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0OjM9PT10LnJvdGF0aW9uP2E6MCxzZXRSb3RhdGlvbih0LGUpe2Zvcig7ZTwwOyllKz00O2NvbnN0IGE9ZSU0O2lmKHQuaG9sZGluZylyZXR1cm4gdC5yb3RhdGlvbj1hLCExO2lmKGE9PT10LnJvdGF0aW9uKXJldHVybiEwO2xldCBvPXQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aCxpPXQuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQ7MSE9PXQucm90YXRpb24mJjMhPT10LnJvdGF0aW9ufHwobz10LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0LGk9dC5jYW52YXNDdHguY2FudmFzLndpZHRoKSxudWxsPT10LnRjYW52YXMmJih0LnRjYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSk7Y29uc3Qgcj10LnRjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO3JldHVybiByLnNldFRyYW5zZm9ybSgxLDAsMCwxLDAsMCksci5jYW52YXMud2lkdGg9byxyLmNhbnZhcy5oZWlnaHQ9aSxyLnJvdGF0ZSgtOTAqdC5yb3RhdGlvbipNYXRoLlBJLzE4MCksMD09PXQucm90YXRpb24mJnIuZHJhd0ltYWdlKHQuY2FudmFzQ3R4LmNhbnZhcywwLDApLDE9PT10LnJvdGF0aW9uJiZyLmRyYXdJbWFnZSh0LmNhbnZhc0N0eC5jYW52YXMsLXQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aCwwKSwyPT09dC5yb3RhdGlvbiYmci5kcmF3SW1hZ2UodC5jYW52YXNDdHguY2FudmFzLC10LmNhbnZhc0N0eC5jYW52YXMud2lkdGgsLXQuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQpLDM9PT10LnJvdGF0aW9uJiZyLmRyYXdJbWFnZSh0LmNhbnZhc0N0eC5jYW52YXMsMCwtdC5jYW52YXNDdHguY2FudmFzLmhlaWdodCksMCE9PXQucm90YXRpb24mJjIhPT10LnJvdGF0aW9ufHwodC5jYW52YXNDdHguY2FudmFzLmhlaWdodD1vLHQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aD1pKSwxIT09dC5yb3RhdGlvbiYmMyE9PXQucm90YXRpb258fCh0LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0PWksdC5jYW52YXNDdHguY2FudmFzLndpZHRoPW8pLHQuY2FudmFzQ3R4LnNldFRyYW5zZm9ybSgxLDAsMCwxLDAsMCksdC5jYW52YXNDdHgucm90YXRlKDkwKmEqTWF0aC5QSS8xODApLHQucm90YXRpb249YSx0LmNhbnZhc0N0eC5kcmF3SW1hZ2UodC50Y2FudmFzLHMucm90WCh0LDAsMCkscy5yb3RZKHQsMCwwKSksdC53aWR0aD10LmNhbnZhc0N0eC5jYW52YXMud2lkdGgsdC5oZWlnaHQ9dC5jYW52YXNDdHguY2FudmFzLmhlaWdodCxudWxsIT10Lm9uU2NyZWVuUmVzaXplJiZ0Lm9uU2NyZWVuUmVzaXplKHQud2lkdGgsdC5oZWlnaHQsdC5jYW52YXNJZCksITB9LGZpeENvbG9yOnQ9PnQ+MTI3P3QrMzI6dH19LDcxNzoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse0U6KCk9Pm59KTt2YXIgcyxvPWEoMzgpLGk9YSgxNzMpLHI9YSg2MTEpOyFmdW5jdGlvbih0KXt0W3QuVXA9MF09XCJVcFwiLHRbdC5Eb3duPTFdPVwiRG93blwifShzfHwocz17fSkpO2NsYXNzIG57Y29uc3RydWN0b3IodCxlKXt0aGlzLkNvbW1zPWUsdGhpcy5wYXJlbnQ9dH1HcmFiS2V5SW5wdXQoKXt0aGlzLktleUlucHV0R3JhYnx8KGRvY3VtZW50Lm9ua2V5dXA9dGhpcy5oYW5kbGVLZXlVcC5iaW5kKHRoaXMpLGRvY3VtZW50Lm9ua2V5ZG93bj10aGlzLmhhbmRsZUtleURvd24uYmluZCh0aGlzKSxkb2N1bWVudC5vbmtleXByZXNzPXRoaXMuaGFuZGxlS2V5cy5iaW5kKHRoaXMpLHRoaXMuS2V5SW5wdXRHcmFiPSEwKX1VbkdyYWJLZXlJbnB1dCgpe3RoaXMuS2V5SW5wdXRHcmFiJiYoZG9jdW1lbnQub25rZXl1cD1udWxsLGRvY3VtZW50Lm9ua2V5ZG93bj1udWxsLGRvY3VtZW50Lm9ua2V5cHJlc3M9bnVsbCx0aGlzLktleUlucHV0R3JhYj0hMSl9aGFuZGxlS2V5cyh0KXtyZXR1cm4gdGhpcy5oYWx0RXZlbnQodCl9aGFsdEV2ZW50KHQpe3JldHVybigwLHIuZikodC5wcmV2ZW50RGVmYXVsdCkmJnQucHJldmVudERlZmF1bHQoKSwoMCxyLmYpKHQuc3RvcFByb3BhZ2F0aW9uKSYmdC5zdG9wUHJvcGFnYXRpb24oKSwhMX1oYW5kbGVLZXlVcCh0KXtyZXR1cm4gdGhpcy5oYW5kbGVLZXlFdmVudChzLlVwLHQpfWhhbmRsZUtleURvd24odCl7cmV0dXJuIHRoaXMuaGFuZGxlS2V5RXZlbnQocy5Eb3duLHQpfWhhbmRsZUtleUV2ZW50KHQsZSl7bGV0IGE9ZTtpZigoMCxyLmYpKGEpfHwoYT13aW5kb3cuZXZlbnQpLCgwLHIuZikoYS5jb2RlKSl7Y29uc3QgZT1vLnEuY29udmVydEFNVEtleUNvZGUoYSk7dGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoYEtleSAke3R9IDogJHtTdHJpbmcoZSl9YCksbnVsbCE9ZSYmaS5YLnNlbmRLZXkodGhpcy5Db21tcyxlLHQpfWVsc2V7bGV0IGU9YS5rZXlDb2RlOzE3Mz09PWUmJihlPTE4OSksNjE9PT1lJiYoZT0xODcpO2xldCBzPWU7ITE9PT1hLnNoaWZ0S2V5JiZlPj02NSYmZTw9OTAmJihzPWUrMzIpLGU+PTExMiYmZTw9MTI0JiYocz1lKzY1MzU4KSw4PT09ZSYmKHM9NjUyODgpLDk9PT1lJiYocz02NTI4OSksMTM9PT1lJiYocz02NTI5MyksMTY9PT1lJiYocz02NTUwNSksMTc9PT1lJiYocz02NTUwNyksMTg9PT1lJiYocz02NTUxMyksMjc9PT1lJiYocz02NTMwNyksMzM9PT1lJiYocz02NTM2NSksMzQ9PT1lJiYocz02NTM2NiksMzU9PT1lJiYocz02NTM2NyksMzY9PT1lJiYocz02NTM2MCksMzc9PT1lJiYocz02NTM2MSksMzg9PT1lJiYocz02NTM2MiksMzk9PT1lJiYocz02NTM2MyksNDA9PT1lJiYocz02NTM2NCksNDU9PT1lJiYocz02NTM3OSksNDY9PT1lJiYocz02NTUzNSksZT49OTYmJmU8PTEwNSYmKHM9ZS00OCksMTA2PT09ZSYmKHM9NDIpLDEwNz09PWUmJihzPTQzKSwxMDk9PT1lJiYocz00NSksMTEwPT09ZSYmKHM9NDYpLDExMT09PWUmJihzPTQ3KSwxODY9PT1lJiYocz01OSksMTg3PT09ZSYmKHM9NjEpLDE4OD09PWUmJihzPTQ0KSwxODk9PT1lJiYocz00NSksMTkwPT09ZSYmKHM9NDYpLDE5MT09PWUmJihzPTQ3KSwxOTI9PT1lJiYocz05NiksMjE5PT09ZSYmKHM9OTEpLDIyMD09PWUmJihzPTkyKSwyMjE9PT1lJiYocz05MyksMjIyPT09ZSYmKHM9MzkpLHRoaXMucGFyZW50LmxvZ2dlci52ZXJib3NlKGBLZXkgJHt0fTogJHtlfSAgPSAke3N9YCksaS5YLnNlbmRLZXkodGhpcy5Db21tcyxzLHQpfXJldHVybiB0aGlzLmhhbHRFdmVudChhKX19fSwzMzoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse3g6KCk9PnJ9KTt2YXIgcz1hKDU2NSksbz1hKDY0NCksaT1hKDYxMSk7Y2xhc3Mgcntjb25zdHJ1Y3Rvcih0LGUsYSl7dGhpcy5wYXJlbnQ9dCx0aGlzLmNvbW09ZSx0aGlzLmRlYm91bmNlVGltZT1hLHRoaXMubW91c2VDbGlja0NvbXBsZXRlZD0hMCx0aGlzLmxhc3RFdmVudD1udWxsfUdyYWJNb3VzZUlucHV0KCl7dGhpcy5Nb3VzZUlucHV0R3JhYnx8KHRoaXMuTW91c2VJbnB1dEdyYWI9ITApfVVuR3JhYk1vdXNlSW5wdXQoKXtpZighdGhpcy5Nb3VzZUlucHV0R3JhYilyZXR1cm47Y29uc3QgdD10aGlzLnBhcmVudC5jYW52YXNDdHguY2FudmFzO3Qub25tb3VzZW1vdmU9bnVsbCx0Lm9ubW91c2V1cD1udWxsLHQub25tb3VzZWRvd249bnVsbCx0aGlzLk1vdXNlSW5wdXRHcmFiPSExfW1vdXNlZG93bih0KXtyZXR1cm4gdGhpcy5wYXJlbnQuYnV0dG9ubWFza3w9MTw8dC5idXR0b24sdGhpcy5tb3VzZW1vdmUodCl9bW91c2V1cCh0KXtyZXR1cm4gdGhpcy5wYXJlbnQuYnV0dG9ubWFzayY9NjU1MzUtKDE8PHQuYnV0dG9uKSx0aGlzLm1vdXNlbW92ZSh0KX1tb3VzZW1vdmUodCl7aWYoNCE9PXRoaXMucGFyZW50LnN0YXRlKXJldHVybiEwO2NvbnN0IGU9dGhpcy5nZXRQb3NpdGlvbk9mQ29udHJvbCh0aGlzLnBhcmVudC5jYW52YXNDb250cm9sKTtpZih0aGlzLnBhcmVudC5sYXN0TW91c2VYPSh0LnBhZ2VYLWVbMF0pKih0aGlzLnBhcmVudC5jYW52YXNDb250cm9sLmhlaWdodC90aGlzLnBhcmVudC5jYW52YXNDb250cm9sLm9mZnNldEhlaWdodCksdGhpcy5wYXJlbnQubGFzdE1vdXNlWT0oTnVtYmVyKHQucGFnZVktZVsxXSkrKCgwLGkuZikodGhpcy5wYXJlbnQuc2Nyb2xsZGl2KT9OdW1iZXIodGhpcy5wYXJlbnQuc2Nyb2xsZGl2LnNjcm9sbFRvcCk6MCkpKih0aGlzLnBhcmVudC5jYW52YXNDb250cm9sLndpZHRoL3RoaXMucGFyZW50LmNhbnZhc0NvbnRyb2wub2Zmc2V0V2lkdGgpLCgwLGkuZikodGhpcy5wYXJlbnQubm9Nb3VzZVJvdGF0ZSl8fCh0aGlzLnBhcmVudC5sYXN0TW91c2VYMj1vLmouY3JvdFgodGhpcy5wYXJlbnQsdGhpcy5wYXJlbnQubGFzdE1vdXNlWCx0aGlzLnBhcmVudC5sYXN0TW91c2VZKSx0aGlzLnBhcmVudC5sYXN0TW91c2VZPW8uai5jcm90WSh0aGlzLnBhcmVudCx0aGlzLnBhcmVudC5sYXN0TW91c2VYLHRoaXMucGFyZW50Lmxhc3RNb3VzZVkpLHRoaXMucGFyZW50Lmxhc3RNb3VzZVg9dGhpcy5wYXJlbnQubGFzdE1vdXNlWDIpLHRoaXMuY29tbS5zZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoNSx0aGlzLnBhcmVudC5idXR0b25tYXNrKStzLnIuU2hvcnRUb1N0cih0aGlzLnBhcmVudC5sYXN0TW91c2VYKStzLnIuU2hvcnRUb1N0cih0aGlzLnBhcmVudC5sYXN0TW91c2VZKSksdGhpcy5wYXJlbnQuc2V0RGVza0ZvY3VzKFwiRGVza0ZvY3VzXCIsdGhpcy5wYXJlbnQuZm9jdXNNb2RlKSwwIT09dGhpcy5wYXJlbnQuZm9jdXNNb2RlKXtjb25zdCB0PU1hdGgubWluKHRoaXMucGFyZW50Lmxhc3RNb3VzZVgsdGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC53aWR0aC10aGlzLnBhcmVudC5mb2N1c01vZGUpLGE9TWF0aC5taW4odGhpcy5wYXJlbnQubGFzdE1vdXNlWSx0aGlzLnBhcmVudC5jYW52YXNDb250cm9sLmhlaWdodC10aGlzLnBhcmVudC5mb2N1c01vZGUpLHM9Mip0aGlzLnBhcmVudC5mb2N1c01vZGUsbz10aGlzLnBhcmVudC5jYW52YXNDb250cm9sLGk9by5vZmZzZXRIZWlnaHQvdGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC5oZWlnaHQscj1vLm9mZnNldFdpZHRoL3RoaXMucGFyZW50LmNhbnZhc0NvbnRyb2wud2lkdGgsbj10aGlzLnBhcmVudC5nZXREZXNrRm9jdXMoXCJEZXNrRm9jdXNcIiksbD10aGlzLmdldFBvc2l0aW9uT2ZDb250cm9sKHRoaXMucGFyZW50LmNhbnZhc0NvbnRyb2wucGFyZW50RWxlbWVudCk7bi5sZWZ0PWAke01hdGgubWF4KCh0LXRoaXMucGFyZW50LmZvY3VzTW9kZSkqaSwwKSsoZVswXS1sWzBdKX1weGAsbi50b3A9YCR7TWF0aC5tYXgoKGEtdGhpcy5wYXJlbnQuZm9jdXNNb2RlKSpyLDApKyhlWzFdLWxbMV0pfXB4YCxuLndpZHRoPXMqaS02K1wicHhcIixuLmhlaWdodD1zKmktNitcInB4XCJ9cmV0dXJuIHRoaXMuaGFsdEV2ZW50KHQpfWhhbHRFdmVudCh0KXtyZXR1cm4oMCxpLmYpKHQucHJldmVudERlZmF1bHQpJiZ0LnByZXZlbnREZWZhdWx0KCksKDAsaS5mKSh0LnN0b3BQcm9wYWdhdGlvbikmJnQuc3RvcFByb3BhZ2F0aW9uKCksITF9Z2V0UG9zaXRpb25PZkNvbnRyb2wodCl7Y29uc3QgZT1BcnJheSgyKTtlWzBdPWVbMV09MDtsZXQgYT10O2Zvcig7bnVsbCE9YTspZVswXT1OdW1iZXIoZVswXSkrTnVtYmVyKGEub2Zmc2V0TGVmdCksZVsxXT1OdW1iZXIoZVsxXSkrTnVtYmVyKGEub2Zmc2V0VG9wKSxhPWEub2Zmc2V0UGFyZW50O3JldHVybiBlfX19LDYxMToodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse2Y6KCk9PnN9KTtjb25zdCBzPXQ9Pm51bGwhPXQmJlwiXCIhPT10JiYhMSE9PXQmJjAhPT10fSw4Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7RUI6KCk9PnIuRSxYbjooKT0+by5YLGZROigpPT5sLmYsanc6KCk9PmkuaixxRDooKT0+cy5xLHh4OigpPT5uLnh9KTt2YXIgcz1hKDM4KSxvPWEoMTczKSxpPWEoNjQ0KSxyPWEoNzE3KSxuPWEoMzMpLGw9YSg2MTEpfSwzMDU6bW9kdWxlPT57dmFyIFpMSUI9WkxJQnx8e30sQkFTRSxOTUFYO3ZvaWQgMD09PVpMSUIuY29tbW9uX2luaXRpYWxpemVkJiYoWkxJQi5aX05PX0ZMVVNIPTAsWkxJQi5aX1BBUlRJQUxfRkxVU0g9MSxaTElCLlpfU1lOQ19GTFVTSD0yLFpMSUIuWl9GVUxMX0ZMVVNIPTMsWkxJQi5aX0ZJTklTSD00LFpMSUIuWl9CTE9DSz01LFpMSUIuWl9UUkVFUz02LFpMSUIuWl9PSz0wLFpMSUIuWl9TVFJFQU1fRU5EPTEsWkxJQi5aX05FRURfRElDVD0yLFpMSUIuWl9FUlJOTz0tMSxaTElCLlpfU1RSRUFNX0VSUk9SPS0yLFpMSUIuWl9EQVRBX0VSUk9SPS0zLFpMSUIuWl9NRU1fRVJST1I9LTQsWkxJQi5aX0JVRl9FUlJPUj0tNSxaTElCLlpfVkVSU0lPTl9FUlJPUj0tNixaTElCLlpfREVGTEFURUQ9OCxaTElCLnpfc3RyZWFtPWZ1bmN0aW9uKCl7dGhpcy5uZXh0X2luPTAsdGhpcy5hdmFpbF9pbj0wLHRoaXMudG90YWxfaW49MCx0aGlzLm5leHRfb3V0PTAsdGhpcy5hdmFpbF9vdXQ9MCx0aGlzLnRvdGFsX291dD0wLHRoaXMubXNnPW51bGwsdGhpcy5zdGF0ZT1udWxsLHRoaXMuZGF0YV90eXBlPTAsdGhpcy5hZGxlcj0wLHRoaXMuaW5wdXRfZGF0YT1cIlwiLHRoaXMub3V0cHV0X2RhdGE9XCJcIix0aGlzLmVycm9yPTAsdGhpcy5jaGVja3N1bV9mdW5jdGlvbj1udWxsfSxaTElCLmd6X2hlYWRlcj1mdW5jdGlvbigpe3RoaXMudGV4dD0wLHRoaXMudGltZT0wLHRoaXMueGZsYWdzPTAsdGhpcy5vcz0yNTUsdGhpcy5leHRyYT1udWxsLHRoaXMuZXh0cmFfbGVuPTAsdGhpcy5leHRyYV9tYXg9MCx0aGlzLm5hbWU9bnVsbCx0aGlzLm5hbWVfbWF4PTAsdGhpcy5jb21tZW50PW51bGwsdGhpcy5jb21tX21heD0wLHRoaXMuaGNyYz0wLHRoaXMuZG9uZT0wfSxaTElCLmNvbW1vbl9pbml0aWFsaXplZD0hMCksdm9pZCAwPT09WkxJQiYmYWxlcnQoXCJaTElCIGlzIG5vdCBkZWZpbmVkLiAgU1JDIHpsaWIuanMgYmVmb3JlIHpsaWItaW5mbGF0ZS5qc1wiKSxmdW5jdGlvbigpe3ZhciBERUZfV0JJVFM9MTUsSEVBRD0wLEZMQUdTPTEsVElNRT0yLE9TPTMsRVhMRU49NCxFWFRSQT01LE5BTUU9NixDT01NRU5UPTcsSENSQz04LERJQ1RJRD05LERJQ1Q9MTAsVFlQRT0xMSxUWVBFRE89MTIsU1RPUkVEPTEzLENPUFlfPTE0LENPUFk9MTUsVEFCTEU9MTYsTEVOTEVOUz0xNyxDT0RFTEVOUz0xOCxMRU5fPTE5LExFTj0yMCxMRU5FWFQ9MjEsRElTVD0yMixESVNURVhUPTIzLE1BVENIPTI0LExJVD0yNSxDSEVDSz0yNixMRU5HVEg9MjcsRE9ORT0yOCxCQUQ9MjksTUVNPTMwLFNZTkM9MzEsRU5PVUdIX0xFTlM9ODUyLEVOT1VHSF9ESVNUUz01OTIsRU5PVUdIPUVOT1VHSF9MRU5TK0VOT1VHSF9ESVNUUyxDT0RFUz0wLExFTlM9MSxESVNUUz0yLGluZmxhdGVfdGFibGVfbGJhc2U9WzMsNCw1LDYsNyw4LDksMTAsMTEsMTMsMTUsMTcsMTksMjMsMjcsMzEsMzUsNDMsNTEsNTksNjcsODMsOTksMTE1LDEzMSwxNjMsMTk1LDIyNywyNTgsMCwwXSxpbmZsYXRlX3RhYmxlX2xleHQ9WzE2LDE2LDE2LDE2LDE2LDE2LDE2LDE2LDE3LDE3LDE3LDE3LDE4LDE4LDE4LDE4LDE5LDE5LDE5LDE5LDIwLDIwLDIwLDIwLDIxLDIxLDIxLDIxLDE2LDIwMyw2OV0saW5mbGF0ZV90YWJsZV9kYmFzZT1bMSwyLDMsNCw1LDcsOSwxMywxNywyNSwzMyw0OSw2NSw5NywxMjksMTkzLDI1NywzODUsNTEzLDc2OSwxMDI1LDE1MzcsMjA0OSwzMDczLDQwOTcsNjE0NSw4MTkzLDEyMjg5LDE2Mzg1LDI0NTc3LDAsMF0saW5mbGF0ZV90YWJsZV9kZXh0PVsxNiwxNiwxNiwxNiwxNywxNywxOCwxOCwxOSwxOSwyMCwyMCwyMSwyMSwyMiwyMiwyMywyMywyNCwyNCwyNSwyNSwyNiwyNiwyNywyNywyOCwyOCwyOSwyOSw2NCw2NF07ZnVuY3Rpb24gaW5mbGF0ZV90YWJsZSh0LGUpe3ZhciBhLHMsbyxpLHIsbixsLGgsYyxwLGQsdixiLHUsZixnLFMsbSxfLEMsQSxFLEk9dC5uZXh0LGs9ZT09RElTVFM/dC5kaXN0Yml0czp0LmxlbmJpdHMsVD10Lndvcmssdz10LmxlbnMsQj1lPT1ESVNUUz90Lm5sZW46MCxSPXQuY29kZXM7YT1lPT1MRU5TP3QubmxlbjplPT1ESVNUUz90Lm5kaXN0OjE5O3ZhciBEPW5ldyBBcnJheSgxNikseD1uZXcgQXJyYXkoMTYpO2ZvcihzPTA7czw9MTU7cysrKURbc109MDtmb3Iobz0wO288YTtvKyspRFt3W0Irb11dKys7Zm9yKG49ayxyPTE1O3I+PTEmJjA9PURbcl07ci0tKTtpZihuPnImJihuPXIpLDA9PXIpcmV0dXJuIGc9e29wOjY0LGJpdHM6MSx2YWw6MH0sUltJKytdPWcsUltJKytdPWcsZT09RElTVFM/dC5kaXN0Yml0cz0xOnQubGVuYml0cz0xLHQubmV4dD1JLDA7Zm9yKGk9MTtpPHImJjA9PURbaV07aSsrKTtmb3IobjxpJiYobj1pKSxjPTEscz0xO3M8PTE1O3MrKylpZihjPDw9MSwoYy09RFtzXSk8MClyZXR1cm4tMTtpZihjPjAmJihlPT1DT0RFU3x8MSE9cikpcmV0dXJuIHQubmV4dD1JLC0xO2Zvcih4WzFdPTAscz0xO3M8MTU7cysrKXhbcysxXT14W3NdK0Rbc107Zm9yKG89MDtvPGE7bysrKTAhPXdbQitvXSYmKFRbeFt3W0Irb11dKytdPW8pO3N3aXRjaChlKXtjYXNlIENPREVTOm09Qz1ULF89MCxBPTAsRT0xOTticmVhaztjYXNlIExFTlM6bT1pbmZsYXRlX3RhYmxlX2xiYXNlLF89LTI1NyxDPWluZmxhdGVfdGFibGVfbGV4dCxBPS0yNTcsRT0yNTY7YnJlYWs7ZGVmYXVsdDptPWluZmxhdGVfdGFibGVfZGJhc2UsQz1pbmZsYXRlX3RhYmxlX2RleHQsXz0wLEE9MCxFPS0xfWlmKGQ9MCxvPTAscz1pLFM9SSxsPW4saD0wLHU9LTEsZj0ocD0xPDxuKS0xLGU9PUxFTlMmJnA+PUVOT1VHSF9MRU5TfHxlPT1ESVNUUyYmcD49RU5PVUdIX0RJU1RTKXJldHVybiB0Lm5leHQ9SSwxO2Zvcig7Oyl7Zz17b3A6MCxiaXRzOnMtaCx2YWw6MH0sVFtvXTxFP2cudmFsPVRbb106VFtvXT5FPyhnLm9wPUNbQStUW29dXSxnLnZhbD1tW18rVFtvXV0pOmcub3A9OTYsdj0xPDxzLWgsaT1iPTE8PGw7ZG97UltTKyhkPj4+aCkrKGItPXYpXT1nfXdoaWxlKDAhPWIpO2Zvcih2PTE8PHMtMTtkJnY7KXY+Pj49MTtpZigwIT12PyhkJj12LTEsZCs9dik6ZD0wLG8rKywwPT0tLURbc10pe2lmKHM9PXIpYnJlYWs7cz13W0IrVFtvXV19aWYocz5uJiYoZCZmKSE9dSl7Zm9yKDA9PWgmJihoPW4pLFMrPWksYz0xPDwobD1zLWgpO2wraDxyJiYhKChjLT1EW2wraF0pPD0wKTspbCsrLGM8PD0xO2lmKHArPTE8PGwsZT09TEVOUyYmcD49RU5PVUdIX0xFTlN8fGU9PURJU1RTJiZwPj1FTk9VR0hfRElTVFMpcmV0dXJuIHQubmV4dD1JLDE7UltJKyh1PWQmZildPXtvcDpsLGJpdHM6bix2YWw6Uy1JfX19cmV0dXJuIDAhPWQmJihSW1MrZF09e29wOjY0LGJpdHM6cy1oLHZhbDowfSksdC5uZXh0PUkrcCxlPT1ESVNUUz90LmRpc3RiaXRzPW46dC5sZW5iaXRzPW4sMH1mdW5jdGlvbiBpbmZsYXRlX2Zhc3QodCxlKXt2YXIgYSxzLG8saSxyLG4sbCxoLGMscCxkLHYsYix1LGYsZyxTLG0sXyxDLEEsRSxJPS0xLGs9LTE7YT10LnN0YXRlLHM9dC5pbnB1dF9kYXRhLGk9KG89dC5uZXh0X2luKSt0LmF2YWlsX2luLTUsbj0ocj10Lm5leHRfb3V0KS0oZS10LmF2YWlsX291dCksbD1yKyh0LmF2YWlsX291dC0yNTcpLGg9YS53c2l6ZSxjPWEud2hhdmUscD1hLnduZXh0LGQ9YS53aW5kb3csdj1hLmhvbGQsYj1hLmJpdHMsdT1hLmNvZGVzLGY9YS5sZW5jb2RlLGc9YS5kaXN0Y29kZSxTPSgxPDxhLmxlbmJpdHMpLTEsbT0oMTw8YS5kaXN0Yml0cyktMTt0OmRve2I8MTUmJih2Kz0oMjU1JnMuY2hhckNvZGVBdChvKyspKTw8YixiKz04LHYrPSgyNTUmcy5jaGFyQ29kZUF0KG8rKykpPDxiLGIrPTgpLF89dVtmKyh2JlMpXTtlOmZvcig7Oyl7aWYodj4+Pj1DPV8uYml0cyxiLT1DLDA9PShDPV8ub3ApKXQub3V0cHV0X2RhdGErPVN0cmluZy5mcm9tQ2hhckNvZGUoXy52YWwpLHIrKztlbHNle2lmKCEoMTYmQykpe2lmKDA9PSg2NCZDKSl7Xz11W2YrKF8udmFsKyh2JigxPDxDKS0xKSldO2NvbnRpbnVlIGV9aWYoMzImQyl7YS5tb2RlPVRZUEU7YnJlYWsgdH10Lm1zZz1cImludmFsaWQgbGl0ZXJhbC9sZW5ndGggY29kZVwiLGEubW9kZT1CQUQ7YnJlYWsgdH1BPV8udmFsLChDJj0xNSkmJihiPEMmJih2Kz0oMjU1JnMuY2hhckNvZGVBdChvKyspKTw8YixiKz04KSxBKz12JigxPDxDKS0xLHY+Pj49QyxiLT1DKSxiPDE1JiYodis9KDI1NSZzLmNoYXJDb2RlQXQobysrKSk8PGIsYis9OCx2Kz0oMjU1JnMuY2hhckNvZGVBdChvKyspKTw8YixiKz04KSxfPXVbZysodiZtKV07YTpmb3IoOzspe2lmKHY+Pj49Qz1fLmJpdHMsYi09QywhKDE2JihDPV8ub3ApKSl7aWYoMD09KDY0JkMpKXtfPXVbZysoXy52YWwrKHYmKDE8PEMpLTEpKV07Y29udGludWUgYX10Lm1zZz1cImludmFsaWQgZGlzdGFuY2UgY29kZVwiLGEubW9kZT1CQUQ7YnJlYWsgdH1pZihFPV8udmFsLGI8KEMmPTE1KSYmKHYrPSgyNTUmcy5jaGFyQ29kZUF0KG8rKykpPDxiLChiKz04KTxDJiYodis9KDI1NSZzLmNoYXJDb2RlQXQobysrKSk8PGIsYis9OCkpLEUrPXYmKDE8PEMpLTEsdj4+Pj1DLGItPUMsRT4oQz1yLW4pKXtpZigoQz1FLUMpPmMmJmEuc2FuZSl7dC5tc2c9XCJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFja1wiLGEubW9kZT1CQUQ7YnJlYWsgdH1JPTAsaz0tMSwwPT1wPyhJKz1oLUMsQzxBJiYoQS09Qyx0Lm91dHB1dF9kYXRhKz1kLnN1YnN0cmluZyhJLEkrQykscis9QyxDPTAsST0tMSxrPXItRSkpOihJKz1wLUMsQzxBJiYoQS09Qyx0Lm91dHB1dF9kYXRhKz1kLnN1YnN0cmluZyhJLEkrQyksST0tMSxrPShyKz1DKS1FKSl9ZWxzZSBJPS0xLGs9ci1FO2lmKEk+PTApdC5vdXRwdXRfZGF0YSs9ZC5zdWJzdHJpbmcoSSxJK0EpLHIrPUEsSSs9QTtlbHNle3ZhciBUPUE7Zm9yKFQ+ci1rJiYoVD1yLWspLHQub3V0cHV0X2RhdGErPXQub3V0cHV0X2RhdGEuc3Vic3RyaW5nKGssaytUKSxyKz1ULGsrPVQscis9QS09VDtBPjI7KXQub3V0cHV0X2RhdGErPXQub3V0cHV0X2RhdGEuY2hhckF0KGsrKyksdC5vdXRwdXRfZGF0YSs9dC5vdXRwdXRfZGF0YS5jaGFyQXQoaysrKSx0Lm91dHB1dF9kYXRhKz10Lm91dHB1dF9kYXRhLmNoYXJBdChrKyspLEEtPTM7QSYmKHQub3V0cHV0X2RhdGErPXQub3V0cHV0X2RhdGEuY2hhckF0KGsrKyksQT4xJiYodC5vdXRwdXRfZGF0YSs9dC5vdXRwdXRfZGF0YS5jaGFyQXQoaysrKSkpfWJyZWFrIGF9fWJyZWFrIGV9fXdoaWxlKG88aSYmcjxsKTtvLT1BPWI+Pj4zLHYmPSgxPDwoYi09QTw8MykpLTEsdC5uZXh0X2luPW8sdC5uZXh0X291dD1yLHQuYXZhaWxfaW49bzxpP2ktbys1OjUtKG8taSksdC5hdmFpbF9vdXQ9cjxsP2wtcisyNTc6MjU3LShyLWwpLGEuaG9sZD12LGEuYml0cz1ifWZ1bmN0aW9uIG5ld19hcnJheSh0KXt2YXIgZSxhPW5ldyBBcnJheSh0KTtmb3IoZT0wO2U8dDtlKyspYVtlXT0wO3JldHVybiBhfWZ1bmN0aW9uIGdldGFyZyh0LGUsYSl7cmV0dXJuIHQmJmUgaW4gdD90W2VdOmF9ZnVuY3Rpb24gY2hlY2tzdW1fbm9uZSgpe3JldHVybiAwfWZ1bmN0aW9uIGluZmxhdGVfc3RhdGUoKXt2YXIgdDt0aGlzLm1vZGU9MCx0aGlzLmxhc3Q9MCx0aGlzLndyYXA9MCx0aGlzLmhhdmVkaWN0PTAsdGhpcy5mbGFncz0wLHRoaXMuZG1heD0wLHRoaXMuY2hlY2s9MCx0aGlzLnRvdGFsPTAsdGhpcy5oZWFkPW51bGwsdGhpcy53Yml0cz0wLHRoaXMud3NpemU9MCx0aGlzLndoYXZlPTAsdGhpcy53bmV4dD0wLHRoaXMud2luZG93PW51bGwsdGhpcy5ob2xkPTAsdGhpcy5iaXRzPTAsdGhpcy5sZW5ndGg9MCx0aGlzLm9mZnNldD0wLHRoaXMuZXh0cmE9MCx0aGlzLmxlbmNvZGU9MCx0aGlzLmRpc3Rjb2RlPTAsdGhpcy5sZW5iaXRzPTAsdGhpcy5kaXN0Yml0cz0wLHRoaXMubmNvZGU9MCx0aGlzLm5sZW49MCx0aGlzLm5kaXN0PTAsdGhpcy5oYXZlPTAsdGhpcy5uZXh0PTAsdGhpcy5sZW5zPW5ld19hcnJheSgzMjApLHRoaXMud29yaz1uZXdfYXJyYXkoMjg4KSx0aGlzLmNvZGVzPW5ldyBBcnJheShFTk9VR0gpO3ZhciBlPXtvcDowLGJpdHM6MCx2YWw6MH07Zm9yKHQ9MDt0PEVOT1VHSDt0KyspdGhpcy5jb2Rlc1t0XT1lO3RoaXMuc2FuZT0wLHRoaXMuYmFjaz0wLHRoaXMud2FzPTB9WkxJQi5pbmZsYXRlX2NvcHlyaWdodD1cIiBpbmZsYXRlIDEuMi42IENvcHlyaWdodCAxOTk1LTIwMTIgTWFyayBBZGxlciBcIixaTElCLmluZmxhdGVSZXNldEtlZXA9ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuIHQmJnQuc3RhdGU/KGU9dC5zdGF0ZSx0LnRvdGFsX2luPXQudG90YWxfb3V0PWUudG90YWw9MCx0Lm1zZz1udWxsLGUud3JhcCYmKHQuYWRsZXI9MSZlLndyYXApLGUubW9kZT1IRUFELGUubGFzdD0wLGUuaGF2ZWRpY3Q9MCxlLmRtYXg9MzI3NjgsZS5oZWFkPW51bGwsZS5ob2xkPTAsZS5iaXRzPTAsZS5sZW5jb2RlPTAsZS5kaXN0Y29kZT0wLGUubmV4dD0wLGUuc2FuZT0xLGUuYmFjaz0tMSxaTElCLlpfT0spOlpMSUIuWl9TVFJFQU1fRVJST1J9LFpMSUIuaW5mbGF0ZVJlc2V0PWZ1bmN0aW9uKHQsZSl7dmFyIGEscztyZXR1cm4gdCYmdC5zdGF0ZT8ocz10LnN0YXRlLHZvaWQgMD09PWUmJihlPURFRl9XQklUUyksZTwwPyhhPTAsZT0tZSk6KGE9MSsoZT4+PjQpLGU8NDgmJihlJj0xNSkpLDE9PWEmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFpMSUIuYWRsZXIzMj90LmNoZWNrc3VtX2Z1bmN0aW9uPVpMSUIuYWRsZXIzMjoyPT1hJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBaTElCLmNyYzMyP3QuY2hlY2tzdW1fZnVuY3Rpb249WkxJQi5jcmMzMjp0LmNoZWNrc3VtX2Z1bmN0aW9uPWNoZWNrc3VtX25vbmUsZSYmKGU8OHx8ZT4xNSk/WkxJQi5aX1NUUkVBTV9FUlJPUjoocy53aW5kb3cmJnMud2JpdHMhPWUmJihzLndpbmRvdz1udWxsKSxzLndyYXA9YSxzLndiaXRzPWUscy53c2l6ZT0wLHMud2hhdmU9MCxzLnduZXh0PTAsWkxJQi5pbmZsYXRlUmVzZXRLZWVwKHQpKSk6WkxJQi5aX1NUUkVBTV9FUlJPUn0sWkxJQi5pbmZsYXRlSW5pdD1mdW5jdGlvbih0KXt2YXIgZT1uZXcgWkxJQi56X3N0cmVhbTtyZXR1cm4gZS5zdGF0ZT1uZXcgaW5mbGF0ZV9zdGF0ZSxaTElCLmluZmxhdGVSZXNldChlLHQpLGV9LFpMSUIuaW5mbGF0ZVByaW1lPWZ1bmN0aW9uKHQsZSxhKXt2YXIgcztyZXR1cm4gdCYmdC5zdGF0ZT8ocz10LnN0YXRlLGU8MD8ocy5ob2xkPTAscy5iaXRzPTAsWkxJQi5aX09LKTplPjE2fHxzLmJpdHMrZT4zMj9aTElCLlpfU1RSRUFNX0VSUk9SOihhJj0oMTw8ZSktMSxzLmhvbGQrPWE8PHMuYml0cyxzLmJpdHMrPWUsWkxJQi5aX09LKSk6WkxJQi5aX1NUUkVBTV9FUlJPUn07dmFyIGxlbmZpeF9hcnk9bnVsbCxsZW5maXhfZGVmPVwiKFsgICAge29wOjk2LGJpdHM6Nyx2YWw6MH0se29wOjAsYml0czo4LHZhbDo4MH0se29wOjAsYml0czo4LHZhbDoxNn0se29wOjIwLGJpdHM6OCx2YWw6MTE1fSx7b3A6MTgsYml0czo3LHZhbDozMX0se29wOjAsYml0czo4LHZhbDoxMTJ9LHtvcDowLGJpdHM6OCx2YWw6NDh9LCAgICB7b3A6MCxiaXRzOjksdmFsOjE5Mn0se29wOjE2LGJpdHM6Nyx2YWw6MTB9LHtvcDowLGJpdHM6OCx2YWw6OTZ9LHtvcDowLGJpdHM6OCx2YWw6MzJ9LHtvcDowLGJpdHM6OSx2YWw6MTYwfSx7b3A6MCxiaXRzOjgsdmFsOjB9LHtvcDowLGJpdHM6OCx2YWw6MTI4fSwgICAge29wOjAsYml0czo4LHZhbDo2NH0se29wOjAsYml0czo5LHZhbDoyMjR9LHtvcDoxNixiaXRzOjcsdmFsOjZ9LHtvcDowLGJpdHM6OCx2YWw6ODh9LHtvcDowLGJpdHM6OCx2YWw6MjR9LHtvcDowLGJpdHM6OSx2YWw6MTQ0fSx7b3A6MTksYml0czo3LHZhbDo1OX0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTIwfSx7b3A6MCxiaXRzOjgsdmFsOjU2fSx7b3A6MCxiaXRzOjksdmFsOjIwOH0se29wOjE3LGJpdHM6Nyx2YWw6MTd9LHtvcDowLGJpdHM6OCx2YWw6MTA0fSx7b3A6MCxiaXRzOjgsdmFsOjQwfSx7b3A6MCxiaXRzOjksdmFsOjE3Nn0sICAgIHtvcDowLGJpdHM6OCx2YWw6OH0se29wOjAsYml0czo4LHZhbDoxMzZ9LHtvcDowLGJpdHM6OCx2YWw6NzJ9LHtvcDowLGJpdHM6OSx2YWw6MjQwfSx7b3A6MTYsYml0czo3LHZhbDo0fSx7b3A6MCxiaXRzOjgsdmFsOjg0fSx7b3A6MCxiaXRzOjgsdmFsOjIwfSwgICAge29wOjIxLGJpdHM6OCx2YWw6MjI3fSx7b3A6MTksYml0czo3LHZhbDo0M30se29wOjAsYml0czo4LHZhbDoxMTZ9LHtvcDowLGJpdHM6OCx2YWw6NTJ9LHtvcDowLGJpdHM6OSx2YWw6MjAwfSx7b3A6MTcsYml0czo3LHZhbDoxM30se29wOjAsYml0czo4LHZhbDoxMDB9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjM2fSx7b3A6MCxiaXRzOjksdmFsOjE2OH0se29wOjAsYml0czo4LHZhbDo0fSx7b3A6MCxiaXRzOjgsdmFsOjEzMn0se29wOjAsYml0czo4LHZhbDo2OH0se29wOjAsYml0czo5LHZhbDoyMzJ9LHtvcDoxNixiaXRzOjcsdmFsOjh9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjkyfSx7b3A6MCxiaXRzOjgsdmFsOjI4fSx7b3A6MCxiaXRzOjksdmFsOjE1Mn0se29wOjIwLGJpdHM6Nyx2YWw6ODN9LHtvcDowLGJpdHM6OCx2YWw6MTI0fSx7b3A6MCxiaXRzOjgsdmFsOjYwfSx7b3A6MCxiaXRzOjksdmFsOjIxNn0sICAgIHtvcDoxOCxiaXRzOjcsdmFsOjIzfSx7b3A6MCxiaXRzOjgsdmFsOjEwOH0se29wOjAsYml0czo4LHZhbDo0NH0se29wOjAsYml0czo5LHZhbDoxODR9LHtvcDowLGJpdHM6OCx2YWw6MTJ9LHtvcDowLGJpdHM6OCx2YWw6MTQwfSx7b3A6MCxiaXRzOjgsdmFsOjc2fSwgICAge29wOjAsYml0czo5LHZhbDoyNDh9LHtvcDoxNixiaXRzOjcsdmFsOjN9LHtvcDowLGJpdHM6OCx2YWw6ODJ9LHtvcDowLGJpdHM6OCx2YWw6MTh9LHtvcDoyMSxiaXRzOjgsdmFsOjE2M30se29wOjE5LGJpdHM6Nyx2YWw6MzV9LHtvcDowLGJpdHM6OCx2YWw6MTE0fSwgICAge29wOjAsYml0czo4LHZhbDo1MH0se29wOjAsYml0czo5LHZhbDoxOTZ9LHtvcDoxNyxiaXRzOjcsdmFsOjExfSx7b3A6MCxiaXRzOjgsdmFsOjk4fSx7b3A6MCxiaXRzOjgsdmFsOjM0fSx7b3A6MCxiaXRzOjksdmFsOjE2NH0se29wOjAsYml0czo4LHZhbDoyfSwgICAge29wOjAsYml0czo4LHZhbDoxMzB9LHtvcDowLGJpdHM6OCx2YWw6NjZ9LHtvcDowLGJpdHM6OSx2YWw6MjI4fSx7b3A6MTYsYml0czo3LHZhbDo3fSx7b3A6MCxiaXRzOjgsdmFsOjkwfSx7b3A6MCxiaXRzOjgsdmFsOjI2fSx7b3A6MCxiaXRzOjksdmFsOjE0OH0sICAgIHtvcDoyMCxiaXRzOjcsdmFsOjY3fSx7b3A6MCxiaXRzOjgsdmFsOjEyMn0se29wOjAsYml0czo4LHZhbDo1OH0se29wOjAsYml0czo5LHZhbDoyMTJ9LHtvcDoxOCxiaXRzOjcsdmFsOjE5fSx7b3A6MCxiaXRzOjgsdmFsOjEwNn0se29wOjAsYml0czo4LHZhbDo0Mn0sICAgIHtvcDowLGJpdHM6OSx2YWw6MTgwfSx7b3A6MCxiaXRzOjgsdmFsOjEwfSx7b3A6MCxiaXRzOjgsdmFsOjEzOH0se29wOjAsYml0czo4LHZhbDo3NH0se29wOjAsYml0czo5LHZhbDoyNDR9LHtvcDoxNixiaXRzOjcsdmFsOjV9LHtvcDowLGJpdHM6OCx2YWw6ODZ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjIyfSx7b3A6NjQsYml0czo4LHZhbDowfSx7b3A6MTksYml0czo3LHZhbDo1MX0se29wOjAsYml0czo4LHZhbDoxMTh9LHtvcDowLGJpdHM6OCx2YWw6NTR9LHtvcDowLGJpdHM6OSx2YWw6MjA0fSx7b3A6MTcsYml0czo3LHZhbDoxNX0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTAyfSx7b3A6MCxiaXRzOjgsdmFsOjM4fSx7b3A6MCxiaXRzOjksdmFsOjE3Mn0se29wOjAsYml0czo4LHZhbDo2fSx7b3A6MCxiaXRzOjgsdmFsOjEzNH0se29wOjAsYml0czo4LHZhbDo3MH0se29wOjAsYml0czo5LHZhbDoyMzZ9LCAgICB7b3A6MTYsYml0czo3LHZhbDo5fSx7b3A6MCxiaXRzOjgsdmFsOjk0fSx7b3A6MCxiaXRzOjgsdmFsOjMwfSx7b3A6MCxiaXRzOjksdmFsOjE1Nn0se29wOjIwLGJpdHM6Nyx2YWw6OTl9LHtvcDowLGJpdHM6OCx2YWw6MTI2fSx7b3A6MCxiaXRzOjgsdmFsOjYyfSwgICAge29wOjAsYml0czo5LHZhbDoyMjB9LHtvcDoxOCxiaXRzOjcsdmFsOjI3fSx7b3A6MCxiaXRzOjgsdmFsOjExMH0se29wOjAsYml0czo4LHZhbDo0Nn0se29wOjAsYml0czo5LHZhbDoxODh9LHtvcDowLGJpdHM6OCx2YWw6MTR9LHtvcDowLGJpdHM6OCx2YWw6MTQyfSwgICAge29wOjAsYml0czo4LHZhbDo3OH0se29wOjAsYml0czo5LHZhbDoyNTJ9LHtvcDo5NixiaXRzOjcsdmFsOjB9LHtvcDowLGJpdHM6OCx2YWw6ODF9LHtvcDowLGJpdHM6OCx2YWw6MTd9LHtvcDoyMSxiaXRzOjgsdmFsOjEzMX0se29wOjE4LGJpdHM6Nyx2YWw6MzF9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjExM30se29wOjAsYml0czo4LHZhbDo0OX0se29wOjAsYml0czo5LHZhbDoxOTR9LHtvcDoxNixiaXRzOjcsdmFsOjEwfSx7b3A6MCxiaXRzOjgsdmFsOjk3fSx7b3A6MCxiaXRzOjgsdmFsOjMzfSx7b3A6MCxiaXRzOjksdmFsOjE2Mn0sICAgIHtvcDowLGJpdHM6OCx2YWw6MX0se29wOjAsYml0czo4LHZhbDoxMjl9LHtvcDowLGJpdHM6OCx2YWw6NjV9LHtvcDowLGJpdHM6OSx2YWw6MjI2fSx7b3A6MTYsYml0czo3LHZhbDo2fSx7b3A6MCxiaXRzOjgsdmFsOjg5fSx7b3A6MCxiaXRzOjgsdmFsOjI1fSwgICAge29wOjAsYml0czo5LHZhbDoxNDZ9LHtvcDoxOSxiaXRzOjcsdmFsOjU5fSx7b3A6MCxiaXRzOjgsdmFsOjEyMX0se29wOjAsYml0czo4LHZhbDo1N30se29wOjAsYml0czo5LHZhbDoyMTB9LHtvcDoxNyxiaXRzOjcsdmFsOjE3fSx7b3A6MCxiaXRzOjgsdmFsOjEwNX0sICAgIHtvcDowLGJpdHM6OCx2YWw6NDF9LHtvcDowLGJpdHM6OSx2YWw6MTc4fSx7b3A6MCxiaXRzOjgsdmFsOjl9LHtvcDowLGJpdHM6OCx2YWw6MTM3fSx7b3A6MCxiaXRzOjgsdmFsOjczfSx7b3A6MCxiaXRzOjksdmFsOjI0Mn0se29wOjE2LGJpdHM6Nyx2YWw6NH0sICAgIHtvcDowLGJpdHM6OCx2YWw6ODV9LHtvcDowLGJpdHM6OCx2YWw6MjF9LHtvcDoxNixiaXRzOjgsdmFsOjI1OH0se29wOjE5LGJpdHM6Nyx2YWw6NDN9LHtvcDowLGJpdHM6OCx2YWw6MTE3fSx7b3A6MCxiaXRzOjgsdmFsOjUzfSx7b3A6MCxiaXRzOjksdmFsOjIwMn0sICAgIHtvcDoxNyxiaXRzOjcsdmFsOjEzfSx7b3A6MCxiaXRzOjgsdmFsOjEwMX0se29wOjAsYml0czo4LHZhbDozN30se29wOjAsYml0czo5LHZhbDoxNzB9LHtvcDowLGJpdHM6OCx2YWw6NX0se29wOjAsYml0czo4LHZhbDoxMzN9LHtvcDowLGJpdHM6OCx2YWw6Njl9LCAgICB7b3A6MCxiaXRzOjksdmFsOjIzNH0se29wOjE2LGJpdHM6Nyx2YWw6OH0se29wOjAsYml0czo4LHZhbDo5M30se29wOjAsYml0czo4LHZhbDoyOX0se29wOjAsYml0czo5LHZhbDoxNTR9LHtvcDoyMCxiaXRzOjcsdmFsOjgzfSx7b3A6MCxiaXRzOjgsdmFsOjEyNX0sICAgIHtvcDowLGJpdHM6OCx2YWw6NjF9LHtvcDowLGJpdHM6OSx2YWw6MjE4fSx7b3A6MTgsYml0czo3LHZhbDoyM30se29wOjAsYml0czo4LHZhbDoxMDl9LHtvcDowLGJpdHM6OCx2YWw6NDV9LHtvcDowLGJpdHM6OSx2YWw6MTg2fSx7b3A6MCxiaXRzOjgsdmFsOjEzfSwgICAge29wOjAsYml0czo4LHZhbDoxNDF9LHtvcDowLGJpdHM6OCx2YWw6Nzd9LHtvcDowLGJpdHM6OSx2YWw6MjUwfSx7b3A6MTYsYml0czo3LHZhbDozfSx7b3A6MCxiaXRzOjgsdmFsOjgzfSx7b3A6MCxiaXRzOjgsdmFsOjE5fSx7b3A6MjEsYml0czo4LHZhbDoxOTV9LCAgICB7b3A6MTksYml0czo3LHZhbDozNX0se29wOjAsYml0czo4LHZhbDoxMTV9LHtvcDowLGJpdHM6OCx2YWw6NTF9LHtvcDowLGJpdHM6OSx2YWw6MTk4fSx7b3A6MTcsYml0czo3LHZhbDoxMX0se29wOjAsYml0czo4LHZhbDo5OX0se29wOjAsYml0czo4LHZhbDozNX0sICAgIHtvcDowLGJpdHM6OSx2YWw6MTY2fSx7b3A6MCxiaXRzOjgsdmFsOjN9LHtvcDowLGJpdHM6OCx2YWw6MTMxfSx7b3A6MCxiaXRzOjgsdmFsOjY3fSx7b3A6MCxiaXRzOjksdmFsOjIzMH0se29wOjE2LGJpdHM6Nyx2YWw6N30se29wOjAsYml0czo4LHZhbDo5MX0sICAgIHtvcDowLGJpdHM6OCx2YWw6Mjd9LHtvcDowLGJpdHM6OSx2YWw6MTUwfSx7b3A6MjAsYml0czo3LHZhbDo2N30se29wOjAsYml0czo4LHZhbDoxMjN9LHtvcDowLGJpdHM6OCx2YWw6NTl9LHtvcDowLGJpdHM6OSx2YWw6MjE0fSx7b3A6MTgsYml0czo3LHZhbDoxOX0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTA3fSx7b3A6MCxiaXRzOjgsdmFsOjQzfSx7b3A6MCxiaXRzOjksdmFsOjE4Mn0se29wOjAsYml0czo4LHZhbDoxMX0se29wOjAsYml0czo4LHZhbDoxMzl9LHtvcDowLGJpdHM6OCx2YWw6NzV9LHtvcDowLGJpdHM6OSx2YWw6MjQ2fSwgICAge29wOjE2LGJpdHM6Nyx2YWw6NX0se29wOjAsYml0czo4LHZhbDo4N30se29wOjAsYml0czo4LHZhbDoyM30se29wOjY0LGJpdHM6OCx2YWw6MH0se29wOjE5LGJpdHM6Nyx2YWw6NTF9LHtvcDowLGJpdHM6OCx2YWw6MTE5fSx7b3A6MCxiaXRzOjgsdmFsOjU1fSwgICAge29wOjAsYml0czo5LHZhbDoyMDZ9LHtvcDoxNyxiaXRzOjcsdmFsOjE1fSx7b3A6MCxiaXRzOjgsdmFsOjEwM30se29wOjAsYml0czo4LHZhbDozOX0se29wOjAsYml0czo5LHZhbDoxNzR9LHtvcDowLGJpdHM6OCx2YWw6N30se29wOjAsYml0czo4LHZhbDoxMzV9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjcxfSx7b3A6MCxiaXRzOjksdmFsOjIzOH0se29wOjE2LGJpdHM6Nyx2YWw6OX0se29wOjAsYml0czo4LHZhbDo5NX0se29wOjAsYml0czo4LHZhbDozMX0se29wOjAsYml0czo5LHZhbDoxNTh9LHtvcDoyMCxiaXRzOjcsdmFsOjk5fSwgICAge29wOjAsYml0czo4LHZhbDoxMjd9LHtvcDowLGJpdHM6OCx2YWw6NjN9LHtvcDowLGJpdHM6OSx2YWw6MjIyfSx7b3A6MTgsYml0czo3LHZhbDoyN30se29wOjAsYml0czo4LHZhbDoxMTF9LHtvcDowLGJpdHM6OCx2YWw6NDd9LHtvcDowLGJpdHM6OSx2YWw6MTkwfSwgICAge29wOjAsYml0czo4LHZhbDoxNX0se29wOjAsYml0czo4LHZhbDoxNDN9LHtvcDowLGJpdHM6OCx2YWw6Nzl9LHtvcDowLGJpdHM6OSx2YWw6MjU0fSx7b3A6OTYsYml0czo3LHZhbDowfSx7b3A6MCxiaXRzOjgsdmFsOjgwfSx7b3A6MCxiaXRzOjgsdmFsOjE2fSwgICAge29wOjIwLGJpdHM6OCx2YWw6MTE1fSx7b3A6MTgsYml0czo3LHZhbDozMX0se29wOjAsYml0czo4LHZhbDoxMTJ9LHtvcDowLGJpdHM6OCx2YWw6NDh9LHtvcDowLGJpdHM6OSx2YWw6MTkzfSx7b3A6MTYsYml0czo3LHZhbDoxMH0se29wOjAsYml0czo4LHZhbDo5Nn0sICAgIHtvcDowLGJpdHM6OCx2YWw6MzJ9LHtvcDowLGJpdHM6OSx2YWw6MTYxfSx7b3A6MCxiaXRzOjgsdmFsOjB9LHtvcDowLGJpdHM6OCx2YWw6MTI4fSx7b3A6MCxiaXRzOjgsdmFsOjY0fSx7b3A6MCxiaXRzOjksdmFsOjIyNX0se29wOjE2LGJpdHM6Nyx2YWw6Nn0sICAgIHtvcDowLGJpdHM6OCx2YWw6ODh9LHtvcDowLGJpdHM6OCx2YWw6MjR9LHtvcDowLGJpdHM6OSx2YWw6MTQ1fSx7b3A6MTksYml0czo3LHZhbDo1OX0se29wOjAsYml0czo4LHZhbDoxMjB9LHtvcDowLGJpdHM6OCx2YWw6NTZ9LHtvcDowLGJpdHM6OSx2YWw6MjA5fSwgICAge29wOjE3LGJpdHM6Nyx2YWw6MTd9LHtvcDowLGJpdHM6OCx2YWw6MTA0fSx7b3A6MCxiaXRzOjgsdmFsOjQwfSx7b3A6MCxiaXRzOjksdmFsOjE3N30se29wOjAsYml0czo4LHZhbDo4fSx7b3A6MCxiaXRzOjgsdmFsOjEzNn0se29wOjAsYml0czo4LHZhbDo3Mn0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjQxfSx7b3A6MTYsYml0czo3LHZhbDo0fSx7b3A6MCxiaXRzOjgsdmFsOjg0fSx7b3A6MCxiaXRzOjgsdmFsOjIwfSx7b3A6MjEsYml0czo4LHZhbDoyMjd9LHtvcDoxOSxiaXRzOjcsdmFsOjQzfSx7b3A6MCxiaXRzOjgsdmFsOjExNn0sICAgIHtvcDowLGJpdHM6OCx2YWw6NTJ9LHtvcDowLGJpdHM6OSx2YWw6MjAxfSx7b3A6MTcsYml0czo3LHZhbDoxM30se29wOjAsYml0czo4LHZhbDoxMDB9LHtvcDowLGJpdHM6OCx2YWw6MzZ9LHtvcDowLGJpdHM6OSx2YWw6MTY5fSx7b3A6MCxiaXRzOjgsdmFsOjR9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjEzMn0se29wOjAsYml0czo4LHZhbDo2OH0se29wOjAsYml0czo5LHZhbDoyMzN9LHtvcDoxNixiaXRzOjcsdmFsOjh9LHtvcDowLGJpdHM6OCx2YWw6OTJ9LHtvcDowLGJpdHM6OCx2YWw6Mjh9LHtvcDowLGJpdHM6OSx2YWw6MTUzfSwgICAge29wOjIwLGJpdHM6Nyx2YWw6ODN9LHtvcDowLGJpdHM6OCx2YWw6MTI0fSx7b3A6MCxiaXRzOjgsdmFsOjYwfSx7b3A6MCxiaXRzOjksdmFsOjIxN30se29wOjE4LGJpdHM6Nyx2YWw6MjN9LHtvcDowLGJpdHM6OCx2YWw6MTA4fSx7b3A6MCxiaXRzOjgsdmFsOjQ0fSwgICAge29wOjAsYml0czo5LHZhbDoxODV9LHtvcDowLGJpdHM6OCx2YWw6MTJ9LHtvcDowLGJpdHM6OCx2YWw6MTQwfSx7b3A6MCxiaXRzOjgsdmFsOjc2fSx7b3A6MCxiaXRzOjksdmFsOjI0OX0se29wOjE2LGJpdHM6Nyx2YWw6M30se29wOjAsYml0czo4LHZhbDo4Mn0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTh9LHtvcDoyMSxiaXRzOjgsdmFsOjE2M30se29wOjE5LGJpdHM6Nyx2YWw6MzV9LHtvcDowLGJpdHM6OCx2YWw6MTE0fSx7b3A6MCxiaXRzOjgsdmFsOjUwfSx7b3A6MCxiaXRzOjksdmFsOjE5N30se29wOjE3LGJpdHM6Nyx2YWw6MTF9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjk4fSx7b3A6MCxiaXRzOjgsdmFsOjM0fSx7b3A6MCxiaXRzOjksdmFsOjE2NX0se29wOjAsYml0czo4LHZhbDoyfSx7b3A6MCxiaXRzOjgsdmFsOjEzMH0se29wOjAsYml0czo4LHZhbDo2Nn0se29wOjAsYml0czo5LHZhbDoyMjl9LCAgICB7b3A6MTYsYml0czo3LHZhbDo3fSx7b3A6MCxiaXRzOjgsdmFsOjkwfSx7b3A6MCxiaXRzOjgsdmFsOjI2fSx7b3A6MCxiaXRzOjksdmFsOjE0OX0se29wOjIwLGJpdHM6Nyx2YWw6Njd9LHtvcDowLGJpdHM6OCx2YWw6MTIyfSx7b3A6MCxiaXRzOjgsdmFsOjU4fSwgICAge29wOjAsYml0czo5LHZhbDoyMTN9LHtvcDoxOCxiaXRzOjcsdmFsOjE5fSx7b3A6MCxiaXRzOjgsdmFsOjEwNn0se29wOjAsYml0czo4LHZhbDo0Mn0se29wOjAsYml0czo5LHZhbDoxODF9LHtvcDowLGJpdHM6OCx2YWw6MTB9LHtvcDowLGJpdHM6OCx2YWw6MTM4fSwgICAge29wOjAsYml0czo4LHZhbDo3NH0se29wOjAsYml0czo5LHZhbDoyNDV9LHtvcDoxNixiaXRzOjcsdmFsOjV9LHtvcDowLGJpdHM6OCx2YWw6ODZ9LHtvcDowLGJpdHM6OCx2YWw6MjJ9LHtvcDo2NCxiaXRzOjgsdmFsOjB9LHtvcDoxOSxiaXRzOjcsdmFsOjUxfSwgICAge29wOjAsYml0czo4LHZhbDoxMTh9LHtvcDowLGJpdHM6OCx2YWw6NTR9LHtvcDowLGJpdHM6OSx2YWw6MjA1fSx7b3A6MTcsYml0czo3LHZhbDoxNX0se29wOjAsYml0czo4LHZhbDoxMDJ9LHtvcDowLGJpdHM6OCx2YWw6Mzh9LHtvcDowLGJpdHM6OSx2YWw6MTczfSwgICAge29wOjAsYml0czo4LHZhbDo2fSx7b3A6MCxiaXRzOjgsdmFsOjEzNH0se29wOjAsYml0czo4LHZhbDo3MH0se29wOjAsYml0czo5LHZhbDoyMzd9LHtvcDoxNixiaXRzOjcsdmFsOjl9LHtvcDowLGJpdHM6OCx2YWw6OTR9LHtvcDowLGJpdHM6OCx2YWw6MzB9LCAgICB7b3A6MCxiaXRzOjksdmFsOjE1N30se29wOjIwLGJpdHM6Nyx2YWw6OTl9LHtvcDowLGJpdHM6OCx2YWw6MTI2fSx7b3A6MCxiaXRzOjgsdmFsOjYyfSx7b3A6MCxiaXRzOjksdmFsOjIyMX0se29wOjE4LGJpdHM6Nyx2YWw6Mjd9LHtvcDowLGJpdHM6OCx2YWw6MTEwfSwgICAge29wOjAsYml0czo4LHZhbDo0Nn0se29wOjAsYml0czo5LHZhbDoxODl9LHtvcDowLGJpdHM6OCx2YWw6MTR9LHtvcDowLGJpdHM6OCx2YWw6MTQyfSx7b3A6MCxiaXRzOjgsdmFsOjc4fSx7b3A6MCxiaXRzOjksdmFsOjI1M30se29wOjk2LGJpdHM6Nyx2YWw6MH0sICAgIHtvcDowLGJpdHM6OCx2YWw6ODF9LHtvcDowLGJpdHM6OCx2YWw6MTd9LHtvcDoyMSxiaXRzOjgsdmFsOjEzMX0se29wOjE4LGJpdHM6Nyx2YWw6MzF9LHtvcDowLGJpdHM6OCx2YWw6MTEzfSx7b3A6MCxiaXRzOjgsdmFsOjQ5fSx7b3A6MCxiaXRzOjksdmFsOjE5NX0sICAgIHtvcDoxNixiaXRzOjcsdmFsOjEwfSx7b3A6MCxiaXRzOjgsdmFsOjk3fSx7b3A6MCxiaXRzOjgsdmFsOjMzfSx7b3A6MCxiaXRzOjksdmFsOjE2M30se29wOjAsYml0czo4LHZhbDoxfSx7b3A6MCxiaXRzOjgsdmFsOjEyOX0se29wOjAsYml0czo4LHZhbDo2NX0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjI3fSx7b3A6MTYsYml0czo3LHZhbDo2fSx7b3A6MCxiaXRzOjgsdmFsOjg5fSx7b3A6MCxiaXRzOjgsdmFsOjI1fSx7b3A6MCxiaXRzOjksdmFsOjE0N30se29wOjE5LGJpdHM6Nyx2YWw6NTl9LHtvcDowLGJpdHM6OCx2YWw6MTIxfSwgICAge29wOjAsYml0czo4LHZhbDo1N30se29wOjAsYml0czo5LHZhbDoyMTF9LHtvcDoxNyxiaXRzOjcsdmFsOjE3fSx7b3A6MCxiaXRzOjgsdmFsOjEwNX0se29wOjAsYml0czo4LHZhbDo0MX0se29wOjAsYml0czo5LHZhbDoxNzl9LHtvcDowLGJpdHM6OCx2YWw6OX0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTM3fSx7b3A6MCxiaXRzOjgsdmFsOjczfSx7b3A6MCxiaXRzOjksdmFsOjI0M30se29wOjE2LGJpdHM6Nyx2YWw6NH0se29wOjAsYml0czo4LHZhbDo4NX0se29wOjAsYml0czo4LHZhbDoyMX0se29wOjE2LGJpdHM6OCx2YWw6MjU4fSwgICAge29wOjE5LGJpdHM6Nyx2YWw6NDN9LHtvcDowLGJpdHM6OCx2YWw6MTE3fSx7b3A6MCxiaXRzOjgsdmFsOjUzfSx7b3A6MCxiaXRzOjksdmFsOjIwM30se29wOjE3LGJpdHM6Nyx2YWw6MTN9LHtvcDowLGJpdHM6OCx2YWw6MTAxfSx7b3A6MCxiaXRzOjgsdmFsOjM3fSwgICAge29wOjAsYml0czo5LHZhbDoxNzF9LHtvcDowLGJpdHM6OCx2YWw6NX0se29wOjAsYml0czo4LHZhbDoxMzN9LHtvcDowLGJpdHM6OCx2YWw6Njl9LHtvcDowLGJpdHM6OSx2YWw6MjM1fSx7b3A6MTYsYml0czo3LHZhbDo4fSx7b3A6MCxiaXRzOjgsdmFsOjkzfSwgICAge29wOjAsYml0czo4LHZhbDoyOX0se29wOjAsYml0czo5LHZhbDoxNTV9LHtvcDoyMCxiaXRzOjcsdmFsOjgzfSx7b3A6MCxiaXRzOjgsdmFsOjEyNX0se29wOjAsYml0czo4LHZhbDo2MX0se29wOjAsYml0czo5LHZhbDoyMTl9LHtvcDoxOCxiaXRzOjcsdmFsOjIzfSwgICAge29wOjAsYml0czo4LHZhbDoxMDl9LHtvcDowLGJpdHM6OCx2YWw6NDV9LHtvcDowLGJpdHM6OSx2YWw6MTg3fSx7b3A6MCxiaXRzOjgsdmFsOjEzfSx7b3A6MCxiaXRzOjgsdmFsOjE0MX0se29wOjAsYml0czo4LHZhbDo3N30se29wOjAsYml0czo5LHZhbDoyNTF9LCAgICB7b3A6MTYsYml0czo3LHZhbDozfSx7b3A6MCxiaXRzOjgsdmFsOjgzfSx7b3A6MCxiaXRzOjgsdmFsOjE5fSx7b3A6MjEsYml0czo4LHZhbDoxOTV9LHtvcDoxOSxiaXRzOjcsdmFsOjM1fSx7b3A6MCxiaXRzOjgsdmFsOjExNX0se29wOjAsYml0czo4LHZhbDo1MX0sICAgIHtvcDowLGJpdHM6OSx2YWw6MTk5fSx7b3A6MTcsYml0czo3LHZhbDoxMX0se29wOjAsYml0czo4LHZhbDo5OX0se29wOjAsYml0czo4LHZhbDozNX0se29wOjAsYml0czo5LHZhbDoxNjd9LHtvcDowLGJpdHM6OCx2YWw6M30se29wOjAsYml0czo4LHZhbDoxMzF9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjY3fSx7b3A6MCxiaXRzOjksdmFsOjIzMX0se29wOjE2LGJpdHM6Nyx2YWw6N30se29wOjAsYml0czo4LHZhbDo5MX0se29wOjAsYml0czo4LHZhbDoyN30se29wOjAsYml0czo5LHZhbDoxNTF9LHtvcDoyMCxiaXRzOjcsdmFsOjY3fSwgICAge29wOjAsYml0czo4LHZhbDoxMjN9LHtvcDowLGJpdHM6OCx2YWw6NTl9LHtvcDowLGJpdHM6OSx2YWw6MjE1fSx7b3A6MTgsYml0czo3LHZhbDoxOX0se29wOjAsYml0czo4LHZhbDoxMDd9LHtvcDowLGJpdHM6OCx2YWw6NDN9LHtvcDowLGJpdHM6OSx2YWw6MTgzfSwgICAge29wOjAsYml0czo4LHZhbDoxMX0se29wOjAsYml0czo4LHZhbDoxMzl9LHtvcDowLGJpdHM6OCx2YWw6NzV9LHtvcDowLGJpdHM6OSx2YWw6MjQ3fSx7b3A6MTYsYml0czo3LHZhbDo1fSx7b3A6MCxiaXRzOjgsdmFsOjg3fSx7b3A6MCxiaXRzOjgsdmFsOjIzfSwgICAge29wOjY0LGJpdHM6OCx2YWw6MH0se29wOjE5LGJpdHM6Nyx2YWw6NTF9LHtvcDowLGJpdHM6OCx2YWw6MTE5fSx7b3A6MCxiaXRzOjgsdmFsOjU1fSx7b3A6MCxiaXRzOjksdmFsOjIwN30se29wOjE3LGJpdHM6Nyx2YWw6MTV9LHtvcDowLGJpdHM6OCx2YWw6MTAzfSwgICAge29wOjAsYml0czo4LHZhbDozOX0se29wOjAsYml0czo5LHZhbDoxNzV9LHtvcDowLGJpdHM6OCx2YWw6N30se29wOjAsYml0czo4LHZhbDoxMzV9LHtvcDowLGJpdHM6OCx2YWw6NzF9LHtvcDowLGJpdHM6OSx2YWw6MjM5fSx7b3A6MTYsYml0czo3LHZhbDo5fSwgICAge29wOjAsYml0czo4LHZhbDo5NX0se29wOjAsYml0czo4LHZhbDozMX0se29wOjAsYml0czo5LHZhbDoxNTl9LHtvcDoyMCxiaXRzOjcsdmFsOjk5fSx7b3A6MCxiaXRzOjgsdmFsOjEyN30se29wOjAsYml0czo4LHZhbDo2M30se29wOjAsYml0czo5LHZhbDoyMjN9LCAgICB7b3A6MTgsYml0czo3LHZhbDoyN30se29wOjAsYml0czo4LHZhbDoxMTF9LHtvcDowLGJpdHM6OCx2YWw6NDd9LHtvcDowLGJpdHM6OSx2YWw6MTkxfSx7b3A6MCxiaXRzOjgsdmFsOjE1fSx7b3A6MCxiaXRzOjgsdmFsOjE0M30se29wOjAsYml0czo4LHZhbDo3OX0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjU1fV0pXCIsZGlzdGZpeF9hcnk9bnVsbCxkaXN0Zml4X2RlZj1cIihbICAgIHtvcDoxNixiaXRzOjUsdmFsOjF9LHtvcDoyMyxiaXRzOjUsdmFsOjI1N30se29wOjE5LGJpdHM6NSx2YWw6MTd9LHtvcDoyNyxiaXRzOjUsdmFsOjQwOTd9LHtvcDoxNyxiaXRzOjUsdmFsOjV9LHtvcDoyNSxiaXRzOjUsdmFsOjEwMjV9LCAgICB7b3A6MjEsYml0czo1LHZhbDo2NX0se29wOjI5LGJpdHM6NSx2YWw6MTYzODV9LHtvcDoxNixiaXRzOjUsdmFsOjN9LHtvcDoyNCxiaXRzOjUsdmFsOjUxM30se29wOjIwLGJpdHM6NSx2YWw6MzN9LHtvcDoyOCxiaXRzOjUsdmFsOjgxOTN9LCAgICB7b3A6MTgsYml0czo1LHZhbDo5fSx7b3A6MjYsYml0czo1LHZhbDoyMDQ5fSx7b3A6MjIsYml0czo1LHZhbDoxMjl9LHtvcDo2NCxiaXRzOjUsdmFsOjB9LHtvcDoxNixiaXRzOjUsdmFsOjJ9LHtvcDoyMyxiaXRzOjUsdmFsOjM4NX0sICAgIHtvcDoxOSxiaXRzOjUsdmFsOjI1fSx7b3A6MjcsYml0czo1LHZhbDo2MTQ1fSx7b3A6MTcsYml0czo1LHZhbDo3fSx7b3A6MjUsYml0czo1LHZhbDoxNTM3fSx7b3A6MjEsYml0czo1LHZhbDo5N30se29wOjI5LGJpdHM6NSx2YWw6MjQ1Nzd9LCAgICB7b3A6MTYsYml0czo1LHZhbDo0fSx7b3A6MjQsYml0czo1LHZhbDo3Njl9LHtvcDoyMCxiaXRzOjUsdmFsOjQ5fSx7b3A6MjgsYml0czo1LHZhbDoxMjI4OX0se29wOjE4LGJpdHM6NSx2YWw6MTN9LHtvcDoyNixiaXRzOjUsdmFsOjMwNzN9LCAgICB7b3A6MjIsYml0czo1LHZhbDoxOTN9LHtvcDo2NCxiaXRzOjUsdmFsOjB9XSlcIjtmdW5jdGlvbiBmaXhlZHRhYmxlcyhzdGF0ZSl7dmFyIGk7Zm9yKGxlbmZpeF9hcnl8fChsZW5maXhfYXJ5PWV2YWwobGVuZml4X2RlZikpLGRpc3RmaXhfYXJ5fHwoZGlzdGZpeF9hcnk9ZXZhbChkaXN0Zml4X2RlZikpLHN0YXRlLmxlbmNvZGU9MCxzdGF0ZS5kaXN0Y29kZT01MTIsaT0wO2k8NTEyO2krKylzdGF0ZS5jb2Rlc1tpXT1sZW5maXhfYXJ5W2ldO2ZvcihpPTA7aTwzMjtpKyspc3RhdGUuY29kZXNbaSs1MTJdPWRpc3RmaXhfYXJ5W2ldO3N0YXRlLmxlbmJpdHM9OSxzdGF0ZS5kaXN0Yml0cz01fWZ1bmN0aW9uIHVwZGF0ZXdpbmRvdyh0KXt2YXIgZT10LnN0YXRlLGE9dC5vdXRwdXRfZGF0YS5sZW5ndGg7cmV0dXJuIG51bGw9PT1lLndpbmRvdyYmKGUud2luZG93PVwiXCIpLDA9PWUud3NpemUmJihlLndzaXplPTE8PGUud2JpdHMpLGE+PWUud3NpemU/ZS53aW5kb3c9dC5vdXRwdXRfZGF0YS5zdWJzdHJpbmcoYS1lLndzaXplKTplLndoYXZlK2E8ZS53c2l6ZT9lLndpbmRvdys9dC5vdXRwdXRfZGF0YTplLndpbmRvdz1lLndpbmRvdy5zdWJzdHJpbmcoZS53aGF2ZS0oZS53c2l6ZS1hKSkrdC5vdXRwdXRfZGF0YSxlLndoYXZlPWUud2luZG93Lmxlbmd0aCxlLndoYXZlPGUud3NpemU/ZS53bmV4dD1lLndoYXZlOmUud25leHQ9MCwwfWZ1bmN0aW9uIENSQzIodCxlKXt2YXIgYT1bMjU1JmUsZT4+PjgmMjU1XTt0LnN0YXRlLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24odC5zdGF0ZS5jaGVjayxhLDAsMil9ZnVuY3Rpb24gQ1JDNCh0LGUpe3ZhciBhPVsyNTUmZSxlPj4+OCYyNTUsZT4+PjE2JjI1NSxlPj4+MjQmMjU1XTt0LnN0YXRlLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24odC5zdGF0ZS5jaGVjayxhLDAsNCl9ZnVuY3Rpb24gTE9BRCh0LGUpe3JldHVybiBlLnN0cm09dCxlLmxlZnQ9dC5hdmFpbF9vdXQsZS5uZXh0PXQubmV4dF9pbixlLmhhdmU9dC5hdmFpbF9pbixlLmhvbGQ9dC5zdGF0ZS5ob2xkLGUuYml0cz10LnN0YXRlLmJpdHMsZX1mdW5jdGlvbiBSRVNUT1JFKHQpe3ZhciBlPXQuc3RybTtlLm5leHRfaW49dC5uZXh0LGUuYXZhaWxfb3V0PXQubGVmdCxlLmF2YWlsX2luPXQuaGF2ZSxlLnN0YXRlLmhvbGQ9dC5ob2xkLGUuc3RhdGUuYml0cz10LmJpdHN9ZnVuY3Rpb24gSU5JVEJJVFModCl7dC5ob2xkPTAsdC5iaXRzPTB9ZnVuY3Rpb24gUFVMTEJZVEUodCl7cmV0dXJuIDAhPXQuaGF2ZSYmKHQuaGF2ZS0tLHQuaG9sZCs9KDI1NSZ0LnN0cm0uaW5wdXRfZGF0YS5jaGFyQ29kZUF0KHQubmV4dCsrKSk8PHQuYml0cyx0LmJpdHMrPTgsITApfWZ1bmN0aW9uIE5FRURCSVRTKHQsZSl7Zm9yKDt0LmJpdHM8ZTspaWYoIVBVTExCWVRFKHQpKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEJJVFModCxlKXtyZXR1cm4gdC5ob2xkJigxPDxlKS0xfWZ1bmN0aW9uIERST1BCSVRTKHQsZSl7dC5ob2xkPj4+PWUsdC5iaXRzLT1lfWZ1bmN0aW9uIEJZVEVCSVRTKHQpe3QuaG9sZD4+Pj03JnQuYml0cyx0LmJpdHMtPTcmdC5iaXRzfWZ1bmN0aW9uIFJFVkVSU0UodCl7cmV0dXJuKHQ+Pj4yNCYyNTUpKyh0Pj4+OCY2NTI4MCkrKCg2NTI4MCZ0KTw8OCkrKCgyNTUmdCk8PDI0KX12YXIgaW5mbGF0ZV9vcmRlcj1bMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV07WkxJQi5pbmZsYXRlPWZ1bmN0aW9uKHQsZSl7dmFyIGEscyxvLGkscixuLGwsaCxjLHA9LTEsZD0tMTtpZighdHx8IXQuc3RhdGV8fCF0LmlucHV0X2RhdGEmJjAhPXQuYXZhaWxfaW4pcmV0dXJuIFpMSUIuWl9TVFJFQU1fRVJST1I7KGE9dC5zdGF0ZSkubW9kZT09VFlQRSYmKGEubW9kZT1UWVBFRE8pLExPQUQodCxzPXt9KSxvPXMuaGF2ZSxpPXMubGVmdCxjPVpMSUIuWl9PSzt0OmZvcig7Oylzd2l0Y2goYS5tb2RlKXtjYXNlIEhFQUQ6aWYoMD09YS53cmFwKXthLm1vZGU9VFlQRURPO2JyZWFrfWlmKCFORUVEQklUUyhzLDE2KSlicmVhayB0O2lmKDImYS53cmFwJiYzNTYxNT09cy5ob2xkKXthLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oMCxudWxsLDAsMCksQ1JDMih0LHMuaG9sZCksSU5JVEJJVFMocyksYS5tb2RlPUZMQUdTO2JyZWFrfWlmKGEuZmxhZ3M9MCxudWxsIT09YS5oZWFkJiYoYS5oZWFkLmRvbmU9LTEpLCEoMSZhLndyYXApfHwoKEJJVFMocyw4KTw8OCkrKHMuaG9sZD4+PjgpKSUzMSl7dC5tc2c9XCJpbmNvcnJlY3QgaGVhZGVyIGNoZWNrXCIsYS5tb2RlPUJBRDticmVha31pZihCSVRTKHMsNCkhPVpMSUIuWl9ERUZMQVRFRCl7dC5tc2c9XCJ1bmtub3duIGNvbXByZXNzaW9uIG1ldGhvZFwiLGEubW9kZT1CQUQ7YnJlYWt9aWYoRFJPUEJJVFMocyw0KSxoPUJJVFMocyw0KSs4LDA9PWEud2JpdHMpYS53Yml0cz1oO2Vsc2UgaWYoaD5hLndiaXRzKXt0Lm1zZz1cImludmFsaWQgd2luZG93IHNpemVcIixhLm1vZGU9QkFEO2JyZWFrfWEuZG1heD0xPDxoLHQuYWRsZXI9YS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKDAsbnVsbCwwLDApLGEubW9kZT01MTImcy5ob2xkP0RJQ1RJRDpUWVBFLElOSVRCSVRTKHMpO2JyZWFrO2Nhc2UgRkxBR1M6aWYoIU5FRURCSVRTKHMsMTYpKWJyZWFrIHQ7aWYoYS5mbGFncz1zLmhvbGQsKDI1NSZhLmZsYWdzKSE9WkxJQi5aX0RFRkxBVEVEKXt0Lm1zZz1cInVua25vd24gY29tcHJlc3Npb24gbWV0aG9kXCIsYS5tb2RlPUJBRDticmVha31pZig1NzM0NCZhLmZsYWdzKXt0Lm1zZz1cInVua25vd24gaGVhZGVyIGZsYWdzIHNldFwiLGEubW9kZT1CQUQ7YnJlYWt9bnVsbCE9PWEuaGVhZCYmKGEuaGVhZC50ZXh0PXMuaG9sZD4+PjgmMSksNTEyJmEuZmxhZ3MmJkNSQzIodCxzLmhvbGQpLElOSVRCSVRTKHMpLGEubW9kZT1USU1FO2Nhc2UgVElNRTppZighTkVFREJJVFMocywzMikpYnJlYWsgdDtudWxsIT09YS5oZWFkJiYoYS5oZWFkLnRpbWU9cy5ob2xkKSw1MTImYS5mbGFncyYmQ1JDNCh0LHMuaG9sZCksSU5JVEJJVFMocyksYS5tb2RlPU9TO2Nhc2UgT1M6aWYoIU5FRURCSVRTKHMsMTYpKWJyZWFrIHQ7bnVsbCE9PWEuaGVhZCYmKGEuaGVhZC54ZmxhZ3M9MjU1JnMuaG9sZCxhLmhlYWQub3M9cy5ob2xkPj4+OCksNTEyJmEuZmxhZ3MmJkNSQzIodCxzLmhvbGQpLElOSVRCSVRTKHMpLGEubW9kZT1FWExFTjtjYXNlIEVYTEVOOmlmKDEwMjQmYS5mbGFncyl7aWYoIU5FRURCSVRTKHMsMTYpKWJyZWFrIHQ7YS5sZW5ndGg9cy5ob2xkLG51bGwhPT1hLmhlYWQmJihhLmhlYWQuZXh0cmFfbGVuPXMuaG9sZCksNTEyJmEuZmxhZ3MmJkNSQzIodCxzLmhvbGQpLElOSVRCSVRTKHMpLGEuaGVhZC5leHRyYT1cIlwifWVsc2UgbnVsbCE9PWEuaGVhZCYmKGEuaGVhZC5leHRyYT1udWxsKTthLm1vZGU9RVhUUkE7Y2FzZSBFWFRSQTppZigxMDI0JmEuZmxhZ3MmJigocj1hLmxlbmd0aCk+cy5oYXZlJiYocj1zLmhhdmUpLHImJihudWxsIT09YS5oZWFkJiZudWxsIT09YS5oZWFkLmV4dHJhJiYoaD1hLmhlYWQuZXh0cmFfbGVuLWEubGVuZ3RoLGEuaGVhZC5leHRyYSs9dC5pbnB1dF9kYXRhLnN1YnN0cmluZyhzLm5leHQscy5uZXh0KyhoK3I+YS5oZWFkLmV4dHJhX21heD9hLmhlYWQuZXh0cmFfbWF4LWg6cikpKSw1MTImYS5mbGFncyYmKGEuY2hlY2s9dC5jaGVja3N1bV9mdW5jdGlvbihhLmNoZWNrLHQuaW5wdXRfZGF0YSxzLm5leHQscikpLHMuaGF2ZS09cixzLm5leHQrPXIsYS5sZW5ndGgtPXIpLGEubGVuZ3RoKSlicmVhayB0O2EubGVuZ3RoPTAsYS5tb2RlPU5BTUU7Y2FzZSBOQU1FOmlmKDIwNDgmYS5mbGFncyl7aWYoMD09cy5oYXZlKWJyZWFrIHQ7bnVsbCE9PWEuaGVhZCYmbnVsbD09PWEuaGVhZC5uYW1lJiYoYS5oZWFkLm5hbWU9XCJcIikscj0wO2Rve2lmKGg9dC5pbnB1dF9kYXRhLmNoYXJBdChzLm5leHQrcikscisrLFwiXFwwXCI9PT1oKWJyZWFrO251bGwhPT1hLmhlYWQmJmEubGVuZ3RoPGEuaGVhZC5uYW1lX21heCYmKGEuaGVhZC5uYW1lKz1oLGEubGVuZ3RoKyspfXdoaWxlKHI8cy5oYXZlKTtpZig1MTImYS5mbGFncyYmKGEuY2hlY2s9dC5jaGVja3N1bV9mdW5jdGlvbihhLmNoZWNrLHQuaW5wdXRfZGF0YSxzLm5leHQscikpLHMuaGF2ZS09cixzLm5leHQrPXIsXCJcXDBcIiE9PWgpYnJlYWsgdH1lbHNlIG51bGwhPT1hLmhlYWQmJihhLmhlYWQubmFtZT1udWxsKTthLmxlbmd0aD0wLGEubW9kZT1DT01NRU5UO2Nhc2UgQ09NTUVOVDppZig0MDk2JmEuZmxhZ3Mpe2lmKDA9PXMuaGF2ZSlicmVhayB0O3I9MCxudWxsIT09YS5oZWFkJiZudWxsPT09YS5oZWFkLmNvbW1lbnQmJihhLmhlYWQuY29tbWVudD1cIlwiKTtkb3tpZihoPXQuaW5wdXRfZGF0YS5jaGFyQXQocy5uZXh0K3IpLHIrKyxcIlxcMFwiPT09aClicmVhaztudWxsIT09YS5oZWFkJiZhLmxlbmd0aDxhLmhlYWQuY29tbV9tYXgmJihhLmhlYWQuY29tbWVudCs9aCxhLmxlbmd0aCsrKX13aGlsZShyPHMuaGF2ZSk7aWYoNTEyJmEuZmxhZ3MmJihhLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oYS5jaGVjayx0LmlucHV0X2RhdGEscy5uZXh0LHIpKSxzLmhhdmUtPXIscy5uZXh0Kz1yLFwiXFwwXCIhPT1oKWJyZWFrIHR9ZWxzZSBudWxsIT09YS5oZWFkJiYoYS5oZWFkLmNvbW1lbnQ9bnVsbCk7YS5tb2RlPUhDUkM7Y2FzZSBIQ1JDOmlmKDUxMiZhLmZsYWdzKXtpZighTkVFREJJVFMocywxNikpYnJlYWsgdDtpZihzLmhvbGQhPSg2NTUzNSZhLmNoZWNrKSl7dC5tc2c9XCJoZWFkZXIgY3JjIG1pc21hdGNoXCIsYS5tb2RlPUJBRDticmVha31JTklUQklUUyhzKX1udWxsIT09YS5oZWFkJiYoYS5oZWFkLmhjcmM9YS5mbGFncz4+PjkmMSxhLmhlYWQuZG9uZT0xKSx0LmFkbGVyPWEuY2hlY2s9dC5jaGVja3N1bV9mdW5jdGlvbigwLG51bGwsMCwwKSxhLm1vZGU9VFlQRTticmVhaztjYXNlIERJQ1RJRDppZighTkVFREJJVFMocywzMikpYnJlYWsgdDt0LmFkbGVyPWEuY2hlY2s9UkVWRVJTRShzLmhvbGQpLElOSVRCSVRTKHMpLGEubW9kZT1ESUNUO2Nhc2UgRElDVDppZigwPT1hLmhhdmVkaWN0KXJldHVybiBSRVNUT1JFKHMpLFpMSUIuWl9ORUVEX0RJQ1Q7dC5hZGxlcj1hLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oMCxudWxsLDAsMCksYS5tb2RlPVRZUEU7Y2FzZSBUWVBFOmlmKGU9PVpMSUIuWl9CTE9DS3x8ZT09WkxJQi5aX1RSRUVTKWJyZWFrIHQ7Y2FzZSBUWVBFRE86aWYoYS5sYXN0KXtCWVRFQklUUyhzKSxhLm1vZGU9Q0hFQ0s7YnJlYWt9aWYoIU5FRURCSVRTKHMsMykpYnJlYWsgdDtzd2l0Y2goYS5sYXN0PUJJVFMocywxKSxEUk9QQklUUyhzLDEpLEJJVFMocywyKSl7Y2FzZSAwOmEubW9kZT1TVE9SRUQ7YnJlYWs7Y2FzZSAxOmlmKGZpeGVkdGFibGVzKGEpLGEubW9kZT1MRU5fLGU9PVpMSUIuWl9UUkVFUyl7RFJPUEJJVFMocywyKTticmVhayB0fWJyZWFrO2Nhc2UgMjphLm1vZGU9VEFCTEU7YnJlYWs7Y2FzZSAzOnQubXNnPVwiaW52YWxpZCBibG9jayB0eXBlXCIsYS5tb2RlPUJBRH1EUk9QQklUUyhzLDIpO2JyZWFrO2Nhc2UgU1RPUkVEOmlmKEJZVEVCSVRTKHMpLCFORUVEQklUUyhzLDMyKSlicmVhayB0O2lmKCg2NTUzNSZzLmhvbGQpIT0ocy5ob2xkPj4+MTYmNjU1MzVeNjU1MzUpKXt0Lm1zZz1cImludmFsaWQgc3RvcmVkIGJsb2NrIGxlbmd0aHNcIixhLm1vZGU9QkFEO2JyZWFrfWlmKGEubGVuZ3RoPTY1NTM1JnMuaG9sZCxJTklUQklUUyhzKSxhLm1vZGU9Q09QWV8sZT09WkxJQi5aX1RSRUVTKWJyZWFrIHQ7Y2FzZSBDT1BZXzphLm1vZGU9Q09QWTtjYXNlIENPUFk6aWYocj1hLmxlbmd0aCl7aWYocj5zLmhhdmUmJihyPXMuaGF2ZSkscj5zLmxlZnQmJihyPXMubGVmdCksMD09cilicmVhayB0O3Qub3V0cHV0X2RhdGErPXQuaW5wdXRfZGF0YS5zdWJzdHJpbmcocy5uZXh0LHMubmV4dCtyKSx0Lm5leHRfb3V0Kz1yLHMuaGF2ZS09cixzLm5leHQrPXIscy5sZWZ0LT1yLGEubGVuZ3RoLT1yO2JyZWFrfWEubW9kZT1UWVBFO2JyZWFrO2Nhc2UgVEFCTEU6aWYoIU5FRURCSVRTKHMsMTQpKWJyZWFrIHQ7aWYoYS5ubGVuPUJJVFMocyw1KSsyNTcsRFJPUEJJVFMocyw1KSxhLm5kaXN0PUJJVFMocyw1KSsxLERST1BCSVRTKHMsNSksYS5uY29kZT1CSVRTKHMsNCkrNCxEUk9QQklUUyhzLDQpLGEubmxlbj4yODZ8fGEubmRpc3Q+MzApe3QubXNnPVwidG9vIG1hbnkgbGVuZ3RoIG9yIGRpc3RhbmNlIHN5bWJvbHNcIixhLm1vZGU9QkFEO2JyZWFrfWEuaGF2ZT0wLGEubW9kZT1MRU5MRU5TO2Nhc2UgTEVOTEVOUzpmb3IoO2EuaGF2ZTxhLm5jb2RlOyl7aWYoIU5FRURCSVRTKHMsMykpYnJlYWsgdDt2YXIgdj1CSVRTKHMsMyk7YS5sZW5zW2luZmxhdGVfb3JkZXJbYS5oYXZlKytdXT12LERST1BCSVRTKHMsMyl9Zm9yKDthLmhhdmU8MTk7KWEubGVuc1tpbmZsYXRlX29yZGVyW2EuaGF2ZSsrXV09MDtpZihhLm5leHQ9MCxhLmxlbmNvZGU9MCxhLmxlbmJpdHM9NyxjPWluZmxhdGVfdGFibGUoYSxDT0RFUykpe3QubXNnPVwiaW52YWxpZCBjb2RlIGxlbmd0aHMgc2V0XCIsYS5tb2RlPUJBRDticmVha31hLmhhdmU9MCxhLm1vZGU9Q09ERUxFTlM7Y2FzZSBDT0RFTEVOUzpmb3IoO2EuaGF2ZTxhLm5sZW4rYS5uZGlzdDspe2Zvcig7ISgobj1hLmNvZGVzW2EubGVuY29kZStCSVRTKHMsYS5sZW5iaXRzKV0pLmJpdHM8PXMuYml0cyk7KWlmKCFQVUxMQllURShzKSlicmVhayB0O2lmKG4udmFsPDE2KURST1BCSVRTKHMsbi5iaXRzKSxhLmxlbnNbYS5oYXZlKytdPW4udmFsO2Vsc2V7aWYoMTY9PW4udmFsKXtpZighTkVFREJJVFMocyxuLmJpdHMrMikpYnJlYWsgdDtpZihEUk9QQklUUyhzLG4uYml0cyksMD09YS5oYXZlKXt0Lm1zZz1cImludmFsaWQgYml0IGxlbmd0aCByZXBlYXRcIixhLm1vZGU9QkFEO2JyZWFrfWg9YS5sZW5zW2EuaGF2ZS0xXSxyPTMrQklUUyhzLDIpLERST1BCSVRTKHMsMil9ZWxzZSBpZigxNz09bi52YWwpe2lmKCFORUVEQklUUyhzLG4uYml0cyszKSlicmVhayB0O0RST1BCSVRTKHMsbi5iaXRzKSxoPTAscj0zK0JJVFMocywzKSxEUk9QQklUUyhzLDMpfWVsc2V7aWYoIU5FRURCSVRTKHMsbi5iaXRzKzcpKWJyZWFrIHQ7RFJPUEJJVFMocyxuLmJpdHMpLGg9MCxyPTExK0JJVFMocyw3KSxEUk9QQklUUyhzLDcpfWlmKGEuaGF2ZStyPmEubmxlbithLm5kaXN0KXt0Lm1zZz1cImludmFsaWQgYml0IGxlbmd0aCByZXBlYXRcIixhLm1vZGU9QkFEO2JyZWFrfWZvcig7ci0tOylhLmxlbnNbYS5oYXZlKytdPWh9fWlmKGEubW9kZT09QkFEKWJyZWFrO2lmKDA9PWEubGVuc1syNTZdKXt0Lm1zZz1cImludmFsaWQgY29kZSAtLSBtaXNzaW5nIGVuZC1vZi1ibG9ja1wiLGEubW9kZT1CQUQ7YnJlYWt9aWYoYS5uZXh0PTAsYS5sZW5jb2RlPWEubmV4dCxhLmxlbmJpdHM9OSxjPWluZmxhdGVfdGFibGUoYSxMRU5TKSl7dC5tc2c9XCJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RocyBzZXRcIixhLm1vZGU9QkFEO2JyZWFrfWlmKGEuZGlzdGNvZGU9YS5uZXh0LGEuZGlzdGJpdHM9NixjPWluZmxhdGVfdGFibGUoYSxESVNUUykpe3QubXNnPVwiaW52YWxpZCBkaXN0YW5jZXMgc2V0XCIsYS5tb2RlPUJBRDticmVha31pZihhLm1vZGU9TEVOXyxlPT1aTElCLlpfVFJFRVMpYnJlYWsgdDtjYXNlIExFTl86YS5tb2RlPUxFTjtjYXNlIExFTjppZihzLmhhdmU+PTYmJnMubGVmdD49MjU4KXtSRVNUT1JFKHMpLGluZmxhdGVfZmFzdCh0LGkpLExPQUQodCxzKSxhLm1vZGU9PVRZUEUmJihhLmJhY2s9LTEpO2JyZWFrfWZvcihhLmJhY2s9MDshKChuPWEuY29kZXNbYS5sZW5jb2RlK0JJVFMocyxhLmxlbmJpdHMpXSkuYml0czw9cy5iaXRzKTspaWYoIVBVTExCWVRFKHMpKWJyZWFrIHQ7aWYobi5vcCYmMD09KDI0MCZuLm9wKSl7Zm9yKGw9bjtuPWEuY29kZXNbYS5sZW5jb2RlK2wudmFsKyhCSVRTKHMsbC5iaXRzK2wub3ApPj4+bC5iaXRzKV0sIShsLmJpdHMrbi5iaXRzPD1zLmJpdHMpOylpZighUFVMTEJZVEUocykpYnJlYWsgdDtEUk9QQklUUyhzLGwuYml0cyksYS5iYWNrKz1sLmJpdHN9aWYoRFJPUEJJVFMocyxuLmJpdHMpLGEuYmFjays9bi5iaXRzLGEubGVuZ3RoPW4udmFsLDA9PW4ub3Ape2EubW9kZT1MSVQ7YnJlYWt9aWYoMzImbi5vcCl7YS5iYWNrPS0xLGEubW9kZT1UWVBFO2JyZWFrfWlmKDY0Jm4ub3Ape3QubXNnPVwiaW52YWxpZCBsaXRlcmFsL2xlbmd0aCBjb2RlXCIsYS5tb2RlPUJBRDticmVha31hLmV4dHJhPTE1Jm4ub3AsYS5tb2RlPUxFTkVYVDtjYXNlIExFTkVYVDppZihhLmV4dHJhKXtpZighTkVFREJJVFMocyxhLmV4dHJhKSlicmVhayB0O2EubGVuZ3RoKz1CSVRTKHMsYS5leHRyYSksRFJPUEJJVFMocyxhLmV4dHJhKSxhLmJhY2srPWEuZXh0cmF9YS53YXM9YS5sZW5ndGgsYS5tb2RlPURJU1Q7Y2FzZSBESVNUOmZvcig7ISgobj1hLmNvZGVzW2EuZGlzdGNvZGUrQklUUyhzLGEuZGlzdGJpdHMpXSkuYml0czw9cy5iaXRzKTspaWYoIVBVTExCWVRFKHMpKWJyZWFrIHQ7aWYoMD09KDI0MCZuLm9wKSl7Zm9yKGw9bjtuPWEuY29kZXNbYS5kaXN0Y29kZStsLnZhbCsoQklUUyhzLGwuYml0cytsLm9wKT4+PmwuYml0cyldLCEobC5iaXRzK24uYml0czw9cy5iaXRzKTspaWYoIVBVTExCWVRFKHMpKWJyZWFrIHQ7RFJPUEJJVFMocyxsLmJpdHMpLGEuYmFjays9bC5iaXRzfWlmKERST1BCSVRTKHMsbi5iaXRzKSxhLmJhY2srPW4uYml0cyw2NCZuLm9wKXt0Lm1zZz1cImludmFsaWQgZGlzdGFuY2UgY29kZVwiLGEubW9kZT1CQUQ7YnJlYWt9YS5vZmZzZXQ9bi52YWwsYS5leHRyYT0xNSZuLm9wLGEubW9kZT1ESVNURVhUO2Nhc2UgRElTVEVYVDppZihhLmV4dHJhKXtpZighTkVFREJJVFMocyxhLmV4dHJhKSlicmVhayB0O2Eub2Zmc2V0Kz1CSVRTKHMsYS5leHRyYSksRFJPUEJJVFMocyxhLmV4dHJhKSxhLmJhY2srPWEuZXh0cmF9YS5tb2RlPU1BVENIO2Nhc2UgTUFUQ0g6aWYoMD09cy5sZWZ0KWJyZWFrIHQ7aWYocj1pLXMubGVmdCxhLm9mZnNldD5yKXtpZigocj1hLm9mZnNldC1yKT5hLndoYXZlJiZhLnNhbmUpe3QubXNnPVwiaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2tcIixhLm1vZGU9QkFEO2JyZWFrfXI+YS53bmV4dD8oci09YS53bmV4dCxwPWEud3NpemUtcixkPS0xKToocD1hLnduZXh0LXIsZD0tMSkscj5hLmxlbmd0aCYmKHI9YS5sZW5ndGgpfWVsc2UgcD0tMSxkPXQubmV4dF9vdXQtYS5vZmZzZXQscj1hLmxlbmd0aDtpZihyPnMubGVmdCYmKHI9cy5sZWZ0KSxzLmxlZnQtPXIsYS5sZW5ndGgtPXIscD49MCl0Lm91dHB1dF9kYXRhKz1hLndpbmRvdy5zdWJzdHJpbmcocCxwK3IpLHQubmV4dF9vdXQrPXIscj0wO2Vsc2V7dC5uZXh0X291dCs9cjtkb3t0Lm91dHB1dF9kYXRhKz10Lm91dHB1dF9kYXRhLmNoYXJBdChkKyspfXdoaWxlKC0tcil9MD09YS5sZW5ndGgmJihhLm1vZGU9TEVOKTticmVhaztjYXNlIExJVDppZigwPT1zLmxlZnQpYnJlYWsgdDt0Lm91dHB1dF9kYXRhKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGEubGVuZ3RoKSx0Lm5leHRfb3V0Kysscy5sZWZ0LS0sYS5tb2RlPUxFTjticmVhaztjYXNlIENIRUNLOmlmKGEud3JhcCl7aWYoIU5FRURCSVRTKHMsMzIpKWJyZWFrIHQ7aWYoaS09cy5sZWZ0LHQudG90YWxfb3V0Kz1pLGEudG90YWwrPWksaSYmKHQuYWRsZXI9YS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKGEuY2hlY2ssdC5vdXRwdXRfZGF0YSx0Lm91dHB1dF9kYXRhLmxlbmd0aC1pLGkpKSxpPXMubGVmdCwoYS5mbGFncz9zLmhvbGQ6UkVWRVJTRShzLmhvbGQpKSE9YS5jaGVjayl7dC5tc2c9XCJpbmNvcnJlY3QgZGF0YSBjaGVja1wiLGEubW9kZT1CQUQ7YnJlYWt9SU5JVEJJVFMocyl9YS5tb2RlPUxFTkdUSDtjYXNlIExFTkdUSDppZihhLndyYXAmJmEuZmxhZ3Mpe2lmKCFORUVEQklUUyhzLDMyKSlicmVhayB0O2lmKHMuaG9sZCE9KDQyOTQ5NjcyOTUmYS50b3RhbCkpe3QubXNnPVwiaW5jb3JyZWN0IGxlbmd0aCBjaGVja1wiLGEubW9kZT1CQUQ7YnJlYWt9SU5JVEJJVFMocyl9YS5tb2RlPURPTkU7Y2FzZSBET05FOmM9WkxJQi5aX1NUUkVBTV9FTkQ7YnJlYWsgdDtjYXNlIEJBRDpjPVpMSUIuWl9EQVRBX0VSUk9SO2JyZWFrIHQ7Y2FzZSBNRU06cmV0dXJuIFpMSUIuWl9NRU1fRVJST1I7ZGVmYXVsdDpyZXR1cm4gWkxJQi5aX1NUUkVBTV9FUlJPUn1yZXR1cm4gUkVTVE9SRShzKSwoYS53c2l6ZXx8aSE9dC5hdmFpbF9vdXQmJmEubW9kZTxCQUQmJihhLm1vZGU8Q0hFQ0t8fGUhPVpMSUIuWl9GSU5JU0gpKSYmdXBkYXRld2luZG93KHQpPyhhLm1vZGU9TUVNLFpMSUIuWl9NRU1fRVJST1IpOihvLT10LmF2YWlsX2luLGktPXQuYXZhaWxfb3V0LHQudG90YWxfaW4rPW8sdC50b3RhbF9vdXQrPWksYS50b3RhbCs9aSxhLndyYXAmJmkmJih0LmFkbGVyPWEuY2hlY2s9dC5jaGVja3N1bV9mdW5jdGlvbihhLmNoZWNrLHQub3V0cHV0X2RhdGEsMCx0Lm91dHB1dF9kYXRhLmxlbmd0aCkpLHQuZGF0YV90eXBlPWEuYml0cysoYS5sYXN0PzY0OjApKyhhLm1vZGU9PVRZUEU/MTI4OjApKyhhLm1vZGU9PUxFTl98fGEubW9kZT09Q09QWV8/MjU2OjApLCgwPT1vJiYwPT1pfHxlPT1aTElCLlpfRklOSVNIKSYmYz09WkxJQi5aX09LJiYoYz1aTElCLlpfQlVGX0VSUk9SKSxjKX0sWkxJQi5pbmZsYXRlRW5kPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0LnN0YXRlPyh0LnN0YXRlLndpbmRvdz1udWxsLHQuc3RhdGU9bnVsbCxaTElCLlpfT0spOlpMSUIuWl9TVFJFQU1fRVJST1J9LFpMSUIuel9zdHJlYW0ucHJvdG90eXBlLmluZmxhdGU9ZnVuY3Rpb24odCxlKXt2YXIgYSxzO3RoaXMuaW5wdXRfZGF0YT10LHRoaXMubmV4dF9pbj1nZXRhcmcoZSxcIm5leHRfaW5cIiwwKSx0aGlzLmF2YWlsX2luPWdldGFyZyhlLFwiYXZhaWxfaW5cIix0Lmxlbmd0aC10aGlzLm5leHRfaW4pLGE9Z2V0YXJnKGUsXCJmbHVzaFwiLFpMSUIuWl9TWU5DX0ZMVVNIKSxzPWdldGFyZyhlLFwiYXZhaWxfb3V0XCIsLTEpO3ZhciBvPVwiXCI7ZG97aWYodGhpcy5hdmFpbF9vdXQ9cz49MD9zOjE2Mzg0LHRoaXMub3V0cHV0X2RhdGE9XCJcIix0aGlzLm5leHRfb3V0PTAsdGhpcy5lcnJvcj1aTElCLmluZmxhdGUodGhpcyxhKSwwIT10aGlzLmVycm9yJiZjb25zb2xlLmxvZyhcInpsaWIgZXJyb3JcIix0aGlzLmVycm9yKSxzPj0wKXJldHVybiB0aGlzLm91dHB1dF9kYXRhO2lmKG8rPXRoaXMub3V0cHV0X2RhdGEsdGhpcy5hdmFpbF9vdXQ+MClicmVha313aGlsZSh0aGlzLmVycm9yPT1aTElCLlpfT0spO3JldHVybiBvfSxaTElCLnpfc3RyZWFtLnByb3RvdHlwZS5pbmZsYXRlUmVzZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIFpMSUIuaW5mbGF0ZVJlc2V0KHRoaXMsdCl9fSgpLHZvaWQgMD09PVpMSUImJmFsZXJ0KFwiWkxJQiBpcyBub3QgZGVmaW5lZC4gIFNSQyB6bGliLmpzIGJlZm9yZSB6bGliLWFkbGVyMzIuanNcIiksQkFTRT02NTUyMSxOTUFYPTU1NTIsWkxJQi5hZGxlcjMyPWZ1bmN0aW9uKHQsZSxhLHMpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlP2Z1bmN0aW9uKHQsZSxhLHMpe3ZhciBvLGk7aWYobz10Pj4+MTYmNjU1MzUsdCY9NjU1MzUsMT09cylyZXR1cm4odCs9MjU1JmUuY2hhckNvZGVBdChhKSk+PUJBU0UmJih0LT1CQVNFKSwobys9dCk+PUJBU0UmJihvLT1CQVNFKSx0fG88PDE2O2lmKG51bGw9PT1lKXJldHVybiAxO2lmKHM8MTYpe2Zvcig7cy0tOylvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyk7cmV0dXJuIHQ+PUJBU0UmJih0LT1CQVNFKSx0fChvJT1CQVNFKTw8MTZ9Zm9yKDtzPj1OTUFYOyl7cy09Tk1BWCxpPTM0Nztkb3tvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyl9d2hpbGUoLS1pKTt0JT1CQVNFLG8lPUJBU0V9aWYocyl7Zm9yKDtzPj0xNjspcy09MTYsbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspO2Zvcig7cy0tOylvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyk7dCU9QkFTRSxvJT1CQVNFfXJldHVybiB0fG88PDE2fSh0LGUsYSxzKTpmdW5jdGlvbih0LGUsYSxzKXt2YXIgbyxpO2lmKG89dD4+PjE2JjY1NTM1LHQmPTY1NTM1LDE9PXMpcmV0dXJuKHQrPWVbYV0pPj1CQVNFJiYodC09QkFTRSksKG8rPXQpPj1CQVNFJiYoby09QkFTRSksdHxvPDwxNjtpZihudWxsPT09ZSlyZXR1cm4gMTtpZihzPDE2KXtmb3IoO3MtLTspbys9dCs9ZVthKytdO3JldHVybiB0Pj1CQVNFJiYodC09QkFTRSksdHwobyU9QkFTRSk8PDE2fWZvcig7cz49Tk1BWDspe3MtPU5NQVgsaT0zNDc7ZG97bys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdfXdoaWxlKC0taSk7dCU9QkFTRSxvJT1CQVNFfWlmKHMpe2Zvcig7cz49MTY7KXMtPTE2LG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXTtmb3IoO3MtLTspbys9dCs9ZVthKytdO3QlPUJBU0UsbyU9QkFTRX1yZXR1cm4gdHxvPDwxNn0odCxlLGEscyl9LFpMSUIuYWRsZXIzMl9jb21iaW5lPWZ1bmN0aW9uKHQsZSxhKXt2YXIgcyxvLGk7cmV0dXJuIGE8MD80Mjk0OTY3Mjk1OihvPShpPWElPUJBU0UpKihzPTY1NTM1JnQpLG8lPUJBU0UsKHMrPSg2NTUzNSZlKStCQVNFLTEpPj1CQVNFJiYocy09QkFTRSkscz49QkFTRSYmKHMtPUJBU0UpLChvKz0odD4+MTYmNjU1MzUpKyhlPj4xNiY2NTUzNSkrQkFTRS1pKT49MTMxMDQyJiYoby09MTMxMDQyKSxvPj1CQVNFJiYoby09QkFTRSksc3xvPDwxNil9LHZvaWQgMD09PVpMSUImJmFsZXJ0KFwiWkxJQiBpcyBub3QgZGVmaW5lZC4gIFNSQyB6bGliLmpzIGJlZm9yZSB6bGliLWNyYzMyLmpzXCIpLGZ1bmN0aW9uKCl7dmFyIHQ9WzAsMTk5Njk1OTg5NCwzOTkzOTE5Nzg4LDI1Njc1MjQ3OTQsMTI0NjM0MTM3LDE4ODYwNTc2MTUsMzkxNTYyMTY4NSwyNjU3MzkyMDM1LDI0OTI2ODI3NCwyMDQ0NTA4MzI0LDM3NzIxMTUyMzAsMjU0NzE3Nzg2NCwxNjI5NDE5OTUsMjEyNTU2MTAyMSwzODg3NjA3MDQ3LDI0Mjg0NDQwNDksNDk4NTM2NTQ4LDE3ODk5Mjc2NjYsNDA4OTAxNjY0OCwyMjI3MDYxMjE0LDQ1MDU0ODg2MSwxODQzMjU4NjAzLDQxMDc1ODA3NTMsMjIxMTY3NzYzOSwzMjU4ODM5OTAsMTY4NDc3NzE1Miw0MjUxMTIyMDQyLDIzMjE5MjY2MzYsMzM1NjMzNDg3LDE2NjEzNjU0NjUsNDE5NTMwMjc1NSwyMzY2MTE1MzE3LDk5NzA3MzA5NiwxMjgxOTUzODg2LDM1Nzk4NTUzMzIsMjcyNDY4ODI0MiwxMDA2ODg4MTQ1LDEyNTg2MDc2ODcsMzUyNDEwMTYyOSwyNzY4OTQyNDQzLDkwMTA5NzcyMiwxMTE5MDAwNjg0LDM2ODY1MTcyMDYsMjg5ODA2NTcyOCw4NTMwNDQ0NTEsMTE3MjI2NjEwMSwzNzA1MDE1NzU5LDI4ODI2MTY2NjUsNjUxNzY3OTgwLDEzNzM1MDM1NDYsMzM2OTU1NDMwNCwzMjE4MTA0NTk4LDU2NTUwNzI1MywxNDU0NjIxNzMxLDM0ODUxMTE3MDUsMzA5OTQzNjMwMyw2NzEyNjY5NzQsMTU5NDE5ODAyNCwzMzIyNzMwOTMwLDI5NzAzNDc4MTIsNzk1ODM1NTI3LDE0ODMyMzAyMjUsMzI0NDM2NzI3NSwzMDYwMTQ5NTY1LDE5OTQxNDYxOTIsMzExNTg1MzQsMjU2MzkwNzc3Miw0MDIzNzE3OTMwLDE5MDc0NTk0NjUsMTEyNjM3MjE1LDI2ODAxNTMyNTMsMzkwNDQyNzA1OSwyMDEzNzc2MjkwLDI1MTcyMjAzNiwyNTE3MjE1Mzc0LDM3NzU4MzAwNDAsMjEzNzY1Njc2MywxNDEzNzY4MTMsMjQzOTI3NzcxOSwzODY1MjcxMjk3LDE4MDIxOTU0NDQsNDc2ODY0ODY2LDIyMzgwMDEzNjgsNDA2NjUwODg3OCwxODEyMzcwOTI1LDQ1MzA5MjczMSwyMTgxNjI1MDI1LDQxMTE0NTEyMjMsMTcwNjA4ODkwMiwzMTQwNDI3MDQsMjM0NDUzMjIwMiw0MjQwMDE3NTMyLDE2NTg2NTgyNzEsMzY2NjE5OTc3LDIzNjI2NzAzMjMsNDIyNDk5NDQwNSwxMzAzNTM1OTYwLDk4NDk2MTQ4NiwyNzQ3MDA3MDkyLDM1NjkwMzc1MzgsMTI1NjE3MDgxNywxMDM3NjA0MzExLDI3NjUyMTA3MzMsMzU1NDA3OTk5NSwxMTMxMDE0NTA2LDg3OTY3OTk5NiwyOTA5MjQzNDYyLDM2NjM3NzE4NTYsMTE0MTEyNDQ2Nyw4NTU4NDIyNzcsMjg1MjgwMTYzMSwzNzA4NjQ4NjQ5LDEzNDI1MzM5NDgsNjU0NDU5MzA2LDMxODgzOTYwNDgsMzM3MzAxNTE3NCwxNDY2NDc5OTA5LDU0NDE3OTYzNSwzMTEwNTIzOTEzLDM0NjI1MjIwMTUsMTU5MTY3MTA1NCw3MDIxMzg3NzYsMjk2NjQ2MDQ1MCwzMzUyNzk5NDEyLDE1MDQ5MTg4MDcsNzgzNTUxODczLDMwODI2NDA0NDMsMzIzMzQ0Mjk4OSwzOTg4MjkyMzg0LDI1OTYyNTQ2NDYsNjIzMTcwNjgsMTk1NzgxMDg0MiwzOTM5ODQ1OTQ1LDI2NDc4MTYxMTEsODE0NzA5OTcsMTk0MzgwMzUyMywzODE0OTE4OTMwLDI0ODk1OTY4MDQsMjI1Mjc0NDMwLDIwNTM3OTAzNzYsMzgyNjE3NTc1NSwyNDY2OTA2MDEzLDE2NzgxNjc0MywyMDk3NjUxMzc3LDQwMjc1NTI1ODAsMjI2NTQ5MDM4Niw1MDM0NDQwNzIsMTc2MjA1MDgxNCw0MTUwNDE3MjQ1LDIxNTQxMjkzNTUsNDI2NTIyMjI1LDE4NTI1MDc4NzksNDI3NTMxMzUyNiwyMzEyMzE3OTIwLDI4Mjc1MzYyNiwxNzQyNTU1ODUyLDQxODk3MDgxNDMsMjM5NDg3Nzk0NSwzOTc5MTc3NjMsMTYyMjE4MzYzNywzNjA0MzkwODg4LDI3MTQ4NjY1NTgsOTUzNzI5NzMyLDEzNDAwNzY2MjYsMzUxODcxOTk4NSwyNzk3MzYwOTk5LDEwNjg4MjgzODEsMTIxOTYzODg1OSwzNjI0NzQxODUwLDI5MzY2NzUxNDgsOTA2MTg1NDYyLDEwOTA4MTI1MTIsMzc0NzY3MjAwMywyODI1Mzc5NjY5LDgyOTMyOTEzNSwxMTgxMzM1MTYxLDM0MTIxNzc4MDQsMzE2MDgzNDg0Miw2MjgwODU0MDgsMTM4MjYwNTM2NiwzNDIzMzY5MTA5LDMxMzgwNzg0NjcsNTcwNTYyMjMzLDE0MjY0MDA4MTUsMzMxNzMxNjU0MiwyOTk4NzMzNjA4LDczMzIzOTk1NCwxNTU1MjYxOTU2LDMyNjg5MzU1OTEsMzA1MDM2MDYyNSw3NTI0NTk0MDMsMTU0MTMyMDIyMSwyNjA3MDcxOTIwLDM5NjU5NzMwMzAsMTk2OTkyMjk3Miw0MDczNTQ5OCwyNjE3ODM3MjI1LDM5NDM1NzcxNTEsMTkxMzA4Nzg3Nyw4MzkwODM3MSwyNTEyMzQxNjM0LDM4MDM3NDA2OTIsMjA3NTIwODYyMiwyMTMyNjExMTIsMjQ2MzI3MjYwMywzODU1OTkwMjg1LDIwOTQ4NTQwNzEsMTk4OTU4ODgxLDIyNjIwMjkwMTIsNDA1NzI2MDYxMCwxNzU5MzU5OTkyLDUzNDQxNDE5MCwyMTc2NzE4NTQxLDQxMzkzMjkxMTUsMTg3MzgzNjAwMSw0MTQ2NjQ1NjcsMjI4MjI0ODkzNCw0Mjc5MjAwMzY4LDE3MTE2ODQ1NTQsMjg1MjgxMTE2LDI0MDU4MDE3MjcsNDE2NzIxNjc0NSwxNjM0NDY3Nzk1LDM3NjIyOTcwMSwyNjg1MDY3ODk2LDM2MDgwMDc0MDYsMTMwODkxODYxMiw5NTY1NDM5MzgsMjgwODU1NTEwNSwzNDk1OTU4MjYzLDEyMzE2MzYzMDEsMTA0NzQyNzAzNSwyOTMyOTU5ODE4LDM2NTQ3MDM4MzYsMTA4ODM1OTI3MCw5MzY5MThlMywyODQ3NzE0ODk5LDM3MzY4Mzc4MjksMTIwMjkwMDg2Myw4MTcyMzM4OTcsMzE4MzM0MjEwOCwzNDAxMjM3MTMwLDE0MDQyNzc1NTIsNjE1ODE4MTUwLDMxMzQyMDc0OTMsMzQ1MzQyMTIwMywxNDIzODU3NDQ5LDYwMTQ1MDQzMSwzMDA5ODM3NjE0LDMyOTQ3MTA0NTYsMTU2NzEwMzc0Niw3MTE5Mjg3MjQsMzAyMDY2ODQ3MSwzMjcyMzgwMDY1LDE1MTAzMzQyMzUsNzU1MTY3MTE3XTtmdW5jdGlvbiBlKHQsZSl7dmFyIGEscz0wO2ZvcihhPTA7ZTspMSZlJiYoYV49dFtzXSksZT4+PTEscysrO3JldHVybiBhfWZ1bmN0aW9uIGEodCxhKXt2YXIgcztmb3Iocz0wO3M8MzI7cysrKXRbc109ZShhLGFbc10pfVpMSUIuY3JjMzI9ZnVuY3Rpb24oZSxhLHMsbyl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGE/ZnVuY3Rpb24oZSxhLHMsbyl7aWYobnVsbD09YSlyZXR1cm4gMDtmb3IoZV49NDI5NDk2NzI5NTtvPj04OyllPXRbMjU1JihlXmEuY2hhckNvZGVBdChzKyspKV1eZT4+PjgsZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44LGU9dFsyNTUmKGVeYS5jaGFyQ29kZUF0KHMrKykpXV5lPj4+OCxlPXRbMjU1JihlXmEuY2hhckNvZGVBdChzKyspKV1eZT4+PjgsZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44LGU9dFsyNTUmKGVeYS5jaGFyQ29kZUF0KHMrKykpXV5lPj4+OCxlPXRbMjU1JihlXmEuY2hhckNvZGVBdChzKyspKV1eZT4+PjgsZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44LG8tPTg7aWYobylkb3tlPXRbMjU1JihlXmEuY2hhckNvZGVBdChzKyspKV1eZT4+Pjh9d2hpbGUoLS1vKTtyZXR1cm4gNDI5NDk2NzI5NV5lfShlLGEscyxvKTpmdW5jdGlvbihlLGEscyxvKXtpZihudWxsPT1hKXJldHVybiAwO2ZvcihlXj00Mjk0OTY3Mjk1O28+PTg7KWU9dFsyNTUmKGVeYVtzKytdKV1eZT4+PjgsZT10WzI1NSYoZV5hW3MrK10pXV5lPj4+OCxlPXRbMjU1JihlXmFbcysrXSldXmU+Pj44LGU9dFsyNTUmKGVeYVtzKytdKV1eZT4+PjgsZT10WzI1NSYoZV5hW3MrK10pXV5lPj4+OCxlPXRbMjU1JihlXmFbcysrXSldXmU+Pj44LGU9dFsyNTUmKGVeYVtzKytdKV1eZT4+PjgsZT10WzI1NSYoZV5hW3MrK10pXV5lPj4+OCxvLT04O2lmKG8pZG97ZT10WzI1NSYoZV5hW3MrK10pXV5lPj4+OH13aGlsZSgtLW8pO3JldHVybiA0Mjk0OTY3Mjk1XmV9KGUsYSxzLG8pfSxaTElCLmNyYzMyX2NvbWJpbmU9ZnVuY3Rpb24odCxzLG8pe3ZhciBpLHIsbixsO2lmKG88PTApcmV0dXJuIHQ7Zm9yKG49bmV3IEFycmF5KDMyKSwobD1uZXcgQXJyYXkoMzIpKVswXT0zOTg4MjkyMzg0LHI9MSxpPTE7aTwzMjtpKyspbFtpXT1yLHI8PD0xO2EobixsKSxhKGwsbik7ZG97aWYoYShuLGwpLDEmbyYmKHQ9ZShuLHQpKSwwPT0obz4+PTEpKWJyZWFrO2EobCxuKSwxJm8mJih0PWUobCx0KSksbz4+PTF9d2hpbGUoMCE9byk7cmV0dXJuIHRec319KCksbW9kdWxlLmV4cG9ydHM9WkxJQn19LF9fd2VicGFja19tb2R1bGVfY2FjaGVfXz17fTtmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKHQpe3ZhciBlPV9fd2VicGFja19tb2R1bGVfY2FjaGVfX1t0XTtpZih2b2lkIDAhPT1lKXJldHVybiBlLmV4cG9ydHM7dmFyIGE9X193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW3RdPXtleHBvcnRzOnt9fTtyZXR1cm4gX193ZWJwYWNrX21vZHVsZXNfX1t0XShhLGEuZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKSxhLmV4cG9ydHN9X193ZWJwYWNrX3JlcXVpcmVfXy5uPXQ9Pnt2YXIgZT10JiZ0Ll9fZXNNb2R1bGU/KCk9PnQuZGVmYXVsdDooKT0+dDtyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5kKGUse2E6ZX0pLGV9LF9fd2VicGFja19yZXF1aXJlX18uZD0odCxlKT0+e2Zvcih2YXIgYSBpbiBlKV9fd2VicGFja19yZXF1aXJlX18ubyhlLGEpJiYhX193ZWJwYWNrX3JlcXVpcmVfXy5vKHQsYSkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGEse2VudW1lcmFibGU6ITAsZ2V0OmVbYV19KX0sX193ZWJwYWNrX3JlcXVpcmVfXy5vPSh0LGUpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSxfX3dlYnBhY2tfcmVxdWlyZV9fLnI9dD0+e1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9O3ZhciBfX3dlYnBhY2tfZXhwb3J0c19fPXt9O3JldHVybigoKT0+e1widXNlIHN0cmljdFwiO19fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXyx7QU1URGVza3RvcDooKT0+dC5yLEFNVEtleUNvZGVDb252ZXJ0ZXI6KCk9PmQucUQsQU1US3ZtRGF0YVJlZGlyZWN0b3I6KCk9PmUuTixBTVRSZWRpcmVjdG9yOigpPT5hLkssQW10VGVybWluYWw6KCk9PnMucixDb21tc0hlbHBlcjooKT0+ZC5YbixDb25zb2xlTG9nZ2VyOigpPT5vLmssRGF0YVByb2Nlc3NvcjooKT0+Yy4kLERlc2t0b3A6KCk9PnIuSCxFbmNvZGluZzooKT0+cC5leixGcmFtZUJ1ZmZlckJlbGxTZXJ2ZXJDdXRUZXh0OigpPT5wLlV0LEhhbmRzaGFrZVN0YXRlOigpPT5wLndXLEltYWdlSGVscGVyOigpPT5kLmp3LEtleUJvYXJkSGVscGVyOigpPT5kLkVCLExvZ0xldmVsOigpPT5oLmksTW91c2VIZWxwZXI6KCk9PmQueHgsUHJvdG9jb2w6KCk9PmEuYixSTEVEZWNvZGVyOigpPT5jLlgsU2VjdXJpdHlPcHRpb25zOigpPT5wLmxsLFNlY3VyaXR5UmVzcG9uc2U6KCk9PnAubUMsU2VydmVySW5pdDooKT0+cC5DdSxTdGF0ZVByb2Nlc3NvckZhY3Rvcnk6KCk9Pm4udixUZXJtaW5hbERhdGFQcm9jZXNzb3I6KCk9PmwuUSxUeXBlQ29udmVydGVyOigpPT5pLnIsaXNUcnV0aHk6KCk9PmQuZlF9KTt2YXIgdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDE2NiksZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDU5KSxhPV9fd2VicGFja19yZXF1aXJlX18oNTAzKSxzPV9fd2VicGFja19yZXF1aXJlX18oMjc3KSxvPV9fd2VicGFja19yZXF1aXJlX18oMjM3KSxpPV9fd2VicGFja19yZXF1aXJlX18oNTY1KSxyPV9fd2VicGFja19yZXF1aXJlX18oNDYpLG49X193ZWJwYWNrX3JlcXVpcmVfXyg5ODkpLGw9X193ZWJwYWNrX3JlcXVpcmVfXygxNTUpLGg9X193ZWJwYWNrX3JlcXVpcmVfXygyMDEpLGM9X193ZWJwYWNrX3JlcXVpcmVfXyg2NDYpLHA9X193ZWJwYWNrX3JlcXVpcmVfXygzODkpLGQ9X193ZWJwYWNrX3JlcXVpcmVfXyg4KX0pKCksX193ZWJwYWNrX2V4cG9ydHNfX30pKCl9KSk7IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuYnV0dG9ue21hcmdpbi1yaWdodDozcHg7cGFkZGluZzoycHg7bWluLXdpZHRoOjkwcHh9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3JlYWN0anMvS1ZNL0Nvbm5lY3RCdXR0b24uc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFLQSxRQUNJLGdCQUFBLENBQ0EsV0FBQSxDQUNBLGNBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxcbiAqIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXFxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuXFxuLmJ1dHRvbntcXG4gICAgbWFyZ2luLXJpZ2h0OiAzcHg7XFxuICAgIHBhZGRpbmc6IDJweDtcXG4gICAgbWluLXdpZHRoOiA5MHB4XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5lbmNvZGluZ3ttYXJnaW4tbGVmdDoxMHB4fS5lbmNvZGluZyBsYWJlbHtwYWRkaW5nOjJweDtmb250LXNpemU6MTVweH0uZW5jb2Rpbmcgc2VsZWN0e3BhZGRpbmc6MnB4IDB9LnJlbGRpc2FibGVke29wYWNpdHk6LjV9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3JlYWN0anMvS1ZNL0VuY29kaW5nT3B0aW9ucy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUtBLFVBQ0ksZ0JBQUEsQ0FFRixnQkFDRSxXQUFBLENBQ0EsY0FBQSxDQUVGLGlCQUNFLGFBQUEsQ0FHRixhQUNFLFVBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxcbiAqIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXFxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuIFxcbi5lbmNvZGluZyB7XFxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgfVxcbiAgLmVuY29kaW5nIGxhYmVsIHsgICAgICBcXG4gICAgcGFkZGluZzogMnB4O1xcbiAgICBmb250LXNpemU6IDE1cHg7XFxuICB9XFxuICAuZW5jb2Rpbmcgc2VsZWN0IHtcXG4gICAgcGFkZGluZzogMnB4IDA7XFxuICB9XFxuICBcXG4gIC5yZWxkaXNhYmxlZHtcXG4gICAgb3BhY2l0eTogMC41O1xcbiAgfVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5oZWFkZXJ7YmFja2dyb3VuZC1jb2xvcjojYTlhOWE5O3BhZGRpbmc6NXB4O2ZvbnQtc2l6ZToxM3B4fVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9yZWFjdGpzL0tWTS9IZWFkZXIuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFLQSxRQUNFLHdCQUFBLENBQ0EsV0FBQSxDQUNBLGNBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxcbiAqIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXFxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuIFxcbi5oZWFkZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya2dyYXk7XFxuICBwYWRkaW5nOiA1cHg7XFxuICBmb250LXNpemU6IDEzcHg7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5jYW52YXN7bWF4LWhlaWdodDo5MCU7bWF4LXdpZHRoOjEwMCV9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3JlYWN0anMvS1ZNL1B1cmVDYW52YXMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFLQSxRQUNJLGNBQUEsQ0FDQSxjQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcXG4gKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbiBcXG4uY2FudmFze1xcbiAgICBtYXgtaGVpZ2h0OiA5MCU7XFxuICAgIG1heC13aWR0aDogMTAwJTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKnttYXJnaW46MDtwYWRkaW5nOjA7Ym94LXNpemluZzpib3JkZXItYm94fS5jYW52YXMtY29udGFpbmVye2hlaWdodDoxMDB2aDt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3JlYWN0anMvS1ZNL1VJLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBS0EsRUFDSSxRQUFBLENBQ0EsU0FBQSxDQUNBLHFCQUFBLENBR0osa0JBQ0csWUFBQSxDQUNBLGlCQUFBLENBQ0EscUJBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxcbiAqIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXFxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuIFxcbip7IC8vICogcmVmZXJzIGV2ZXJ5IGVsZW1lbnQgYW5kIHJlbW92ZXMgZGVmYXVsdCBtYXJnaW4gIHBhZGRpbmcgdGhhdCBjb21lcyB3aXRoIGh0bWwgZWxlbWVudHMgYm9keSwgaDEgZXRjXFxuICAgIG1hcmdpbjowO1xcbiAgICBwYWRkaW5nOjA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8vZWxlbWVudCBwYWRkaW5nIGFuZCBib3JkZXIgYXJlIGluY2x1ZGVkIGluIHRoZSB3aWR0aCBhbmQgaGVpZ2h0XFxufVxcblxcbi5jYW52YXMtY29udGFpbmVye1xcbiAgIGhlaWdodDogMTAwdmg7IFxcbiAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksYmE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBwKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBjYT1uZXcgU2V0LGRhPXt9O2Z1bmN0aW9uIGVhKGEsYil7ZmEoYSxiKTtmYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gZmEoYSxiKXtkYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspY2EuYWRkKGJbYV0pfVxudmFyIGhhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxpYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGphPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxrYT1cbnt9LGxhPXt9O2Z1bmN0aW9uIG1hKGEpe2lmKGlhLmNhbGwobGEsYSkpcmV0dXJuITA7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMTtpZihqYS50ZXN0KGEpKXJldHVybiBsYVthXT0hMDtrYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIG9hKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fG5hKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gcShhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIHo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07eltiXT1uZXcgcShiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyBxKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyBxKGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyBxKGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciBwYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHFhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHBhLFxucWEpO3pbYl09bmV3IHEoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShwYSxxYSk7eltiXT1uZXcgcShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShwYSxxYSk7eltiXT1uZXcgcShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuei54bGlua0hyZWY9bmV3IHEoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHEoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gcmEoYSxiLGMsZCl7dmFyIGU9ei5oYXNPd25Qcm9wZXJ0eShiKT96W2JdOm51bGw7aWYobnVsbCE9PWU/MCE9PWUudHlwZTpkfHwhKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0pb2EoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP21hKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKX1cbnZhciBzYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCx0YT1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSx1YT1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHZhPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSx3YT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIikseGE9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLHlhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxBYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxCYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksQ2E9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLERhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEVhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtcbnZhciBHYT1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5jYWNoZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QudHJhY2luZ19tYXJrZXJcIik7dmFyIEhhPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBJYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SGEmJmFbSGFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIEE9T2JqZWN0LmFzc2lnbixKYTtmdW5jdGlvbiBLYShhKXtpZih2b2lkIDA9PT1KYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtKYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrSmErYX12YXIgTGE9ITE7XG5mdW5jdGlvbiBNYShhLGIpe2lmKCFhfHxMYSlyZXR1cm5cIlwiO0xhPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChsKXt2YXIgZD1sfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2gobCl7ZD1sfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2gobCl7ZD1sfWEoKX19Y2F0Y2gobCl7aWYobCYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBsLnN0YWNrKXtmb3IodmFyIGU9bC5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXt2YXIgaz1cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO2EuZGlzcGxheU5hbWUmJmsuaW5jbHVkZXMoXCI8YW5vbnltb3VzPlwiKSYmKGs9ay5yZXBsYWNlKFwiPGFub255bW91cz5cIixhLmRpc3BsYXlOYW1lKSk7cmV0dXJuIGt9d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e0xhPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/S2EoYSk6XCJcIn1cbmZ1bmN0aW9uIE5hKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBLYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIEthKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBLYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIEthKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1NYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1NYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1NYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIE9hKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgdmE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgdWE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIHhhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHdhOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgQ2E6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgRGE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQWE6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgeWE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgQmE6dmFyIGI9YS5yZW5kZXI7YT1hLmRpc3BsYXlOYW1lO2F8fChhPWIuZGlzcGxheU5hbWV8fFxuYi5uYW1lfHxcIlwiLGE9XCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO3JldHVybiBhO2Nhc2UgRWE6cmV0dXJuIGI9YS5kaXNwbGF5TmFtZXx8bnVsbCxudWxsIT09Yj9iOk9hKGEudHlwZSl8fFwiTWVtb1wiO2Nhc2UgRmE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIE9hKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBQYShhKXt2YXIgYj1hLnR5cGU7c3dpdGNoKGEudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKGIuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKGIuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBhPWIucmVuZGVyLGE9YS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIlwiLGIuZGlzcGxheU5hbWV8fChcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDU6cmV0dXJuIGI7Y2FzZSA0OnJldHVyblwiUG9ydGFsXCI7Y2FzZSAzOnJldHVyblwiUm9vdFwiO2Nhc2UgNjpyZXR1cm5cIlRleHRcIjtjYXNlIDE2OnJldHVybiBPYShiKTtjYXNlIDg6cmV0dXJuIGI9PT13YT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7XG5jYXNlIDEyOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIDIxOnJldHVyblwiU2NvcGVcIjtjYXNlIDEzOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIDE5OnJldHVyblwiU3VzcGVuc2VMaXN0XCI7Y2FzZSAyNTpyZXR1cm5cIlRyYWNpbmdNYXJrZXJcIjtjYXNlIDE6Y2FzZSAwOmNhc2UgMTc6Y2FzZSAyOmNhc2UgMTQ6Y2FzZSAxNTppZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBRYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7Y2FzZSBcIm9iamVjdFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gU2EoYSl7dmFyIGI9UmEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFRhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1TYShhKSl9ZnVuY3Rpb24gVWEoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVJhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gVmEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gV2EoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIEEoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFhhKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVFhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gWWEoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZyYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gWmEoYSxiKXtZYShhLGIpO3ZhciBjPVFhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpPyRhKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJiRhKGEsYi50eXBlLFFhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gYWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uICRhKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8VmEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBiYj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gY2IoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1FhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBkYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IocCg5MSkpO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGViKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHAoOTIpKTtpZihiYihjKSl7aWYoMTxjLmxlbmd0aCl0aHJvdyBFcnJvcihwKDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6UWEoYyl9fVxuZnVuY3Rpb24gZmIoYSxiKXt2YXIgYz1RYShiLnZhbHVlKSxkPVFhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gZ2IoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX1mdW5jdGlvbiBoYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxuZnVuY3Rpb24gaWIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2hiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIGpiLGtiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIhPT1hLm5hbWVzcGFjZVVSSXx8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle2piPWpifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2piLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPWpiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIGxiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgbWI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGFzcGVjdFJhdGlvOiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCxcbnpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sbmI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKG1iKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe25iLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7bWJbYl09bWJbYV19KX0pO2Z1bmN0aW9uIG9iKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxtYi5oYXNPd25Qcm9wZXJ0eShhKSYmbWJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gcGIoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9b2IoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgcWI9QSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHJiKGEsYil7aWYoYil7aWYocWJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcihwKDYwKSk7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfHwhKFwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcihwKDYyKSk7fX1cbmZ1bmN0aW9uIHNiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgdGI9bnVsbDtmdW5jdGlvbiB1YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHZiPW51bGwsd2I9bnVsbCx4Yj1udWxsO1xuZnVuY3Rpb24geWIoYSl7aWYoYT16YihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHZiKXRocm93IEVycm9yKHAoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9QWIoYiksdmIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gQmIoYSl7d2I/eGI/eGIucHVzaChhKTp4Yj1bYV06d2I9YX1mdW5jdGlvbiBDYigpe2lmKHdiKXt2YXIgYT13YixiPXhiO3hiPXdiPW51bGw7eWIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKXliKGJbYV0pfX1mdW5jdGlvbiBEYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEViKCl7fXZhciBGYj0hMTtmdW5jdGlvbiBHYihhLGIsYyl7aWYoRmIpcmV0dXJuIGEoYixjKTtGYj0hMDt0cnl7cmV0dXJuIERiKGEsYixjKX1maW5hbGx5e2lmKEZiPSExLG51bGwhPT13Ynx8bnVsbCE9PXhiKUViKCksQ2IoKX19XG5mdW5jdGlvbiBIYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPUFiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHAoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgSWI9ITE7aWYoaGEpdHJ5e3ZhciBKYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoSmIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe0liPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLEpiLEpiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixKYixKYil9Y2F0Y2goYSl7SWI9ITF9ZnVuY3Rpb24gS2IoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIExiPSExLE1iPW51bGwsTmI9ITEsT2I9bnVsbCxQYj17b25FcnJvcjpmdW5jdGlvbihhKXtMYj0hMDtNYj1hfX07ZnVuY3Rpb24gUWIoYSxiLGMsZCxlLGYsZyxoLGspe0xiPSExO01iPW51bGw7S2IuYXBwbHkoUGIsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFJiKGEsYixjLGQsZSxmLGcsaCxrKXtRYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoTGIpe2lmKExiKXt2YXIgbD1NYjtMYj0hMTtNYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IocCgxOTgpKTtOYnx8KE5iPSEwLE9iPWwpfX1mdW5jdGlvbiBTYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmNDA5OCkmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIFRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gVWIoYSl7aWYoU2IoYSkhPT1hKXRocm93IEVycm9yKHAoMTg4KSk7fVxuZnVuY3Rpb24gVmIoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9U2IoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gVWIoZSksYTtpZihmPT09ZClyZXR1cm4gVWIoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcihwKDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHAoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IocCgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBXYihhKXthPVZiKGEpO3JldHVybiBudWxsIT09YT9YYihhKTpudWxsfWZ1bmN0aW9uIFhiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhO2ZvcihhPWEuY2hpbGQ7bnVsbCE9PWE7KXt2YXIgYj1YYihhKTtpZihudWxsIT09YilyZXR1cm4gYjthPWEuc2libGluZ31yZXR1cm4gbnVsbH1cbnZhciBZYj1iYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFpiPWJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLCRiPWJhLnVuc3RhYmxlX3Nob3VsZFlpZWxkLGFjPWJhLnVuc3RhYmxlX3JlcXVlc3RQYWludCxEPWJhLnVuc3RhYmxlX25vdyxiYz1iYS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxjYz1iYS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxkYz1iYS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlYz1iYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxmYz1iYS51bnN0YWJsZV9Mb3dQcmlvcml0eSxnYz1iYS51bnN0YWJsZV9JZGxlUHJpb3JpdHksaGM9bnVsbCxpYz1udWxsO2Z1bmN0aW9uIGpjKGEpe2lmKGljJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaWMub25Db21taXRGaWJlclJvb3QpdHJ5e2ljLm9uQ29tbWl0RmliZXJSb290KGhjLGEsdm9pZCAwLDEyOD09PShhLmN1cnJlbnQuZmxhZ3MmMTI4KSl9Y2F0Y2goYil7fX1cbnZhciBsYz1NYXRoLmNsejMyP01hdGguY2x6MzI6a2MsbWM9TWF0aC5sb2csbmM9TWF0aC5MTjI7ZnVuY3Rpb24ga2MoYSl7YT4+Pj0wO3JldHVybiAwPT09YT8zMjozMS0obWMoYSkvbmN8MCl8MH12YXIgb2M9NjQscGM9NDE5NDMwNDtcbmZ1bmN0aW9uIHFjKGEpe3N3aXRjaChhJi1hKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYSY0MTk0MjQwO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuIGEmMTMwMDIzNDI0O2Nhc2UgMTM0MjE3NzI4OnJldHVybiAxMzQyMTc3Mjg7Y2FzZSAyNjg0MzU0NTY6cmV0dXJuIDI2ODQzNTQ1NjtjYXNlIDUzNjg3MDkxMjpyZXR1cm4gNTM2ODcwOTEyO2Nhc2UgMTA3Mzc0MTgyNDpyZXR1cm4gMTA3Mzc0MTgyNDtcbmRlZmF1bHQ6cmV0dXJuIGF9fWZ1bmN0aW9uIHJjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIDA7dmFyIGQ9MCxlPWEuc3VzcGVuZGVkTGFuZXMsZj1hLnBpbmdlZExhbmVzLGc9YyYyNjg0MzU0NTU7aWYoMCE9PWcpe3ZhciBoPWcmfmU7MCE9PWg/ZD1xYyhoKTooZiY9ZywwIT09ZiYmKGQ9cWMoZikpKX1lbHNlIGc9YyZ+ZSwwIT09Zz9kPXFjKGcpOjAhPT1mJiYoZD1xYyhmKSk7aWYoMD09PWQpcmV0dXJuIDA7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZSkmJihlPWQmLWQsZj1iJi1iLGU+PWZ8fDE2PT09ZSYmMCE9PShmJjQxOTQyNDApKSlyZXR1cm4gYjswIT09KGQmNCkmJihkfD1jJjE2KTtiPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLWxjKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIGIrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYis1RTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19XG5mdW5jdGlvbiB0YyhhLGIpe2Zvcih2YXIgYz1hLnN1c3BlbmRlZExhbmVzLGQ9YS5waW5nZWRMYW5lcyxlPWEuZXhwaXJhdGlvblRpbWVzLGY9YS5wZW5kaW5nTGFuZXM7MDxmOyl7dmFyIGc9MzEtbGMoZiksaD0xPDxnLGs9ZVtnXTtpZigtMT09PWspe2lmKDA9PT0oaCZjKXx8MCE9PShoJmQpKWVbZ109c2MoaCxiKX1lbHNlIGs8PWImJihhLmV4cGlyZWRMYW5lc3w9aCk7ZiY9fmh9fWZ1bmN0aW9uIHVjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiB2YyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1mdW5jdGlvbiB3YyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7NTM2ODcwOTEyIT09YiYmKGEuc3VzcGVuZGVkTGFuZXM9MCxhLnBpbmdlZExhbmVzPTApO2E9YS5ldmVudFRpbWVzO2I9MzEtbGMoYik7YVtiXT1jfVxuZnVuY3Rpb24geGMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcyZ+YjthLnBlbmRpbmdMYW5lcz1iO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWI7YS5tdXRhYmxlUmVhZExhbmVzJj1iO2EuZW50YW5nbGVkTGFuZXMmPWI7Yj1hLmVudGFuZ2xlbWVudHM7dmFyIGQ9YS5ldmVudFRpbWVzO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yzspe3ZhciBlPTMxLWxjKGMpLGY9MTw8ZTtiW2VdPTA7ZFtlXT0tMTthW2VdPS0xO2MmPX5mfX1mdW5jdGlvbiB5YyhhLGIpe3ZhciBjPWEuZW50YW5nbGVkTGFuZXN8PWI7Zm9yKGE9YS5lbnRhbmdsZW1lbnRzO2M7KXt2YXIgZD0zMS1sYyhjKSxlPTE8PGQ7ZSZifGFbZF0mYiYmKGFbZF18PWIpO2MmPX5lfX12YXIgRT0wO2Z1bmN0aW9uIHpjKGEpe2EmPS1hO3JldHVybiAxPGE/NDxhPzAhPT0oYSYyNjg0MzU0NTUpPzE2OjUzNjg3MDkxMjo0OjF9XG52YXIgQWMsQmMsQ2MsRGMsRWMsRmM9ITEsR2M9W10sSGM9bnVsbCxJYz1udWxsLEpjPW51bGwsS2M9bmV3IE1hcCxMYz1uZXcgTWFwLE1jPVtdLE5jPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIE9jKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6SGM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkljPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkpjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpLYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpMYy5kZWxldGUoYi5wb2ludGVySWQpfX1cbmZ1bmN0aW9uIFBjKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9e2Jsb2NrZWRPbjpiLGRvbUV2ZW50TmFtZTpjLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpmLHRhcmdldENvbnRhaW5lcnM6W2VdfSxudWxsIT09YiYmKGI9emIoYiksbnVsbCE9PWImJkJjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtiPWEudGFyZ2V0Q29udGFpbmVycztudWxsIT09ZSYmLTE9PT1iLmluZGV4T2YoZSkmJmIucHVzaChlKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFFjKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c2luXCI6cmV0dXJuIEhjPVBjKEhjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBJYz1QYyhJYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gSmM9UGMoSmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtLYy5zZXQoZixQYyhLYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsTGMuc2V0KGYsUGMoTGMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUmMoYSl7dmFyIGI9U2MoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1TYihiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1UYihjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtFYyhhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Q2MoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24gVGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPVVjKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGw9PT1jKXtjPWEubmF0aXZlRXZlbnQ7dmFyIGQ9bmV3IGMuY29uc3RydWN0b3IoYy50eXBlLGMpO3RiPWQ7Yy50YXJnZXQuZGlzcGF0Y2hFdmVudChkKTt0Yj1udWxsfWVsc2UgcmV0dXJuIGI9emIoYyksbnVsbCE9PWImJkJjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIFZjKGEsYixjKXtUYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gV2MoKXtGYz0hMTtudWxsIT09SGMmJlRjKEhjKSYmKEhjPW51bGwpO251bGwhPT1JYyYmVGMoSWMpJiYoSWM9bnVsbCk7bnVsbCE9PUpjJiZUYyhKYykmJihKYz1udWxsKTtLYy5mb3JFYWNoKFZjKTtMYy5mb3JFYWNoKFZjKX1cbmZ1bmN0aW9uIFhjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCxGY3x8KEZjPSEwLGJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soYmEudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksV2MpKSl9XG5mdW5jdGlvbiBZYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBYYyhiLGEpfWlmKDA8R2MubGVuZ3RoKXtYYyhHY1swXSxhKTtmb3IodmFyIGM9MTtjPEdjLmxlbmd0aDtjKyspe3ZhciBkPUdjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09SGMmJlhjKEhjLGEpO251bGwhPT1JYyYmWGMoSWMsYSk7bnVsbCE9PUpjJiZYYyhKYyxhKTtLYy5mb3JFYWNoKGIpO0xjLmZvckVhY2goYik7Zm9yKGM9MDtjPE1jLmxlbmd0aDtjKyspZD1NY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8TWMubGVuZ3RoJiYoYz1NY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylSYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJk1jLnNoaWZ0KCl9dmFyIFpjPXNhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO1xuZnVuY3Rpb24gJGMoYSxiLGMsZCl7dmFyIGU9RSxmPVpjLnRyYW5zaXRpb247WmMudHJhbnNpdGlvbj1udWxsO3RyeXtFPTEsYWQoYSxiLGMsZCl9ZmluYWxseXtFPWUsWmMudHJhbnNpdGlvbj1mfX1mdW5jdGlvbiBiZChhLGIsYyxkKXt2YXIgZT1FLGY9WmMudHJhbnNpdGlvbjtaYy50cmFuc2l0aW9uPW51bGw7dHJ5e0U9NCxhZChhLGIsYyxkKX1maW5hbGx5e0U9ZSxaYy50cmFuc2l0aW9uPWZ9fVxuZnVuY3Rpb24gYWQoYSxiLGMsZCl7dmFyIGU9VWMoYSxiLGMsZCk7aWYobnVsbD09PWUpY2QoYSxiLGQsZGQsYyksT2MoYSxkKTtlbHNlIGlmKFFjKGUsYSxiLGMsZCkpZC5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKE9jKGEsZCksYiY0JiYtMTxOYy5pbmRleE9mKGEpKXtmb3IoO251bGwhPT1lOyl7dmFyIGY9emIoZSk7bnVsbCE9PWYmJkFjKGYpO2Y9VWMoYSxiLGMsZCk7bnVsbD09PWYmJmNkKGEsYixkLGRkLGMpO2lmKGY9PT1lKWJyZWFrO2U9Zn1udWxsIT09ZSYmZC5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGNkKGEsYixkLG51bGwsYyl9dmFyIGRkPW51bGw7XG5mdW5jdGlvbiBVYyhhLGIsYyxkKXtkZD1udWxsO2E9dWIoZCk7YT1TYyhhKTtpZihudWxsIT09YSlpZihiPVNiKGEpLG51bGw9PT1iKWE9bnVsbDtlbHNlIGlmKGM9Yi50YWcsMTM9PT1jKXthPVRiKGIpO2lmKG51bGwhPT1hKXJldHVybiBhO2E9bnVsbH1lbHNlIGlmKDM9PT1jKXtpZihiLnN0YXRlTm9kZS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXJldHVybiAzPT09Yi50YWc/Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2E9bnVsbH1lbHNlIGIhPT1hJiYoYT1udWxsKTtkZD1hO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZWQoYSl7c3dpdGNoKGEpe2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xpY2tcIjpjYXNlIFwiY2xvc2VcIjpjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmNhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcImludmFsaWRcIjpjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJrZXl1cFwiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJwYXN0ZVwiOmNhc2UgXCJwYXVzZVwiOmNhc2UgXCJwbGF5XCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcnVwXCI6Y2FzZSBcInJhdGVjaGFuZ2VcIjpjYXNlIFwicmVzZXRcIjpjYXNlIFwicmVzaXplXCI6Y2FzZSBcInNlZWtlZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2hzdGFydFwiOmNhc2UgXCJ2b2x1bWVjaGFuZ2VcIjpjYXNlIFwiY2hhbmdlXCI6Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmNhc2UgXCJ0ZXh0SW5wdXRcIjpjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmNhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmNhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOmNhc2UgXCJiZWZvcmVpbnB1dFwiOmNhc2UgXCJibHVyXCI6Y2FzZSBcImZ1bGxzY3JlZW5jaGFuZ2VcIjpjYXNlIFwiZm9jdXNcIjpjYXNlIFwiaGFzaGNoYW5nZVwiOmNhc2UgXCJwb3BzdGF0ZVwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwic2VsZWN0c3RhcnRcIjpyZXR1cm4gMTtjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJzY3JvbGxcIjpjYXNlIFwidG9nZ2xlXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ3aGVlbFwiOmNhc2UgXCJtb3VzZWVudGVyXCI6Y2FzZSBcIm1vdXNlbGVhdmVcIjpjYXNlIFwicG9pbnRlcmVudGVyXCI6Y2FzZSBcInBvaW50ZXJsZWF2ZVwiOnJldHVybiA0O1xuY2FzZSBcIm1lc3NhZ2VcIjpzd2l0Y2goYmMoKSl7Y2FzZSBjYzpyZXR1cm4gMTtjYXNlIGRjOnJldHVybiA0O2Nhc2UgZWM6Y2FzZSBmYzpyZXR1cm4gMTY7Y2FzZSBnYzpyZXR1cm4gNTM2ODcwOTEyO2RlZmF1bHQ6cmV0dXJuIDE2fWRlZmF1bHQ6cmV0dXJuIDE2fX12YXIgZmQ9bnVsbCxnZD1udWxsLGhkPW51bGw7ZnVuY3Rpb24gaWQoKXtpZihoZClyZXR1cm4gaGQ7dmFyIGEsYj1nZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBmZD9mZC52YWx1ZTpmZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBoZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfVxuZnVuY3Rpb24gamQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24ga2QoKXtyZXR1cm4hMH1mdW5jdGlvbiBsZCgpe3JldHVybiExfVxuZnVuY3Rpb24gbWQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/a2Q6bGQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1sZDtyZXR1cm4gdGhpc31BKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1rZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1rZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDprZH0pO3JldHVybiBifVxudmFyIG5kPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LG9kPW1kKG5kKSxwZD1BKHt9LG5kLHt2aWV3OjAsZGV0YWlsOjB9KSxxZD1tZChwZCkscmQsc2QsdGQsdmQ9QSh7fSxwZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp1ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT10ZCYmKHRkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyhyZD1hLnNjcmVlblgtdGQuc2NyZWVuWCxzZD1hLnNjcmVlblktdGQuc2NyZWVuWSk6c2Q9cmQ9MCx0ZD1hKTtyZXR1cm4gcmR9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTpzZH19KSx3ZD1tZCh2ZCkseGQ9QSh7fSx2ZCx7ZGF0YVRyYW5zZmVyOjB9KSx5ZD1tZCh4ZCksemQ9QSh7fSxwZCx7cmVsYXRlZFRhcmdldDowfSksQWQ9bWQoemQpLEJkPUEoe30sbmQse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLENkPW1kKEJkKSxEZD1BKHt9LG5kLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksRWQ9bWQoRGQpLEZkPUEoe30sbmQse2RhdGE6MH0pLEdkPW1kKEZkKSxIZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxJZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sSmQ9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIEtkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9SmRbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB1ZCgpe3JldHVybiBLZH1cbnZhciBMZD1BKHt9LHBkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPUhkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWpkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9JZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnVkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9qZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2pkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksTWQ9bWQoTGQpLE5kPUEoe30sdmQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksT2Q9bWQoTmQpLFBkPUEoe30scGQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp1ZH0pLFFkPW1kKFBkKSxSZD1BKHt9LG5kLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFNkPW1kKFJkKSxUZD1BKHt9LHZkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksVWQ9bWQoVGQpLFZkPVs5LDEzLDI3LDMyXSxXZD1oYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csWGQ9bnVsbDtoYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoWGQ9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgWWQ9aGEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFYZCxaZD1oYSYmKCFXZHx8WGQmJjg8WGQmJjExPj1YZCksJGQ9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksYWU9ITE7XG5mdW5jdGlvbiBiZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PVZkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGNlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGRlPSExO2Z1bmN0aW9uIGVlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBjZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7YWU9ITA7cmV0dXJuICRkO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PSRkJiZhZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBmZShhLGIpe2lmKGRlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFXZCYmYmUoYSxiKT8oYT1pZCgpLGhkPWdkPWZkPW51bGwsZGU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIFpkJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBnZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBoZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBpZShhLGIsYyxkKXtCYihkKTtiPWplKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgb2QoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIga2U9bnVsbCxsZT1udWxsO2Z1bmN0aW9uIG1lKGEpe25lKGEsMCl9ZnVuY3Rpb24gb2UoYSl7dmFyIGI9cGUoYSk7aWYoVWEoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiBxZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciByZT0hMTtpZihoYSl7dmFyIHNlO2lmKGhhKXt2YXIgdGU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZighdGUpe3ZhciB1ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3VlLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7dGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHVlLm9uaW5wdXR9c2U9dGV9ZWxzZSBzZT0hMTtyZT1zZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiB2ZSgpe2tlJiYoa2UuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsd2UpLGxlPWtlPW51bGwpfWZ1bmN0aW9uIHdlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZvZShsZSkpe3ZhciBiPVtdO2llKGIsbGUsYSx1YihhKSk7R2IobWUsYil9fVxuZnVuY3Rpb24geGUoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8odmUoKSxrZT1iLGxlPWMsa2UuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsd2UpKTpcImZvY3Vzb3V0XCI9PT1hJiZ2ZSgpfWZ1bmN0aW9uIHllKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIG9lKGxlKX1mdW5jdGlvbiB6ZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIG9lKGIpfWZ1bmN0aW9uIEFlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIG9lKGIpfWZ1bmN0aW9uIEJlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgQ2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6QmU7XG5mdW5jdGlvbiBEZShhLGIpe2lmKENlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTtpZighaWEuY2FsbChiLGUpfHwhQ2UoYVtlXSxiW2VdKSlyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBFZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBGZShhLGIpe3ZhciBjPUVlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUVlKGMpfX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP0dlKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIEhlKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVZhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVZhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIEllKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG5mdW5jdGlvbiBKZShhKXt2YXIgYj1IZSgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmR2UoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJkllKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUZlKGMsZik7dmFyIGc9RmUoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBLZT1oYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLExlPW51bGwsTWU9bnVsbCxOZT1udWxsLE9lPSExO1xuZnVuY3Rpb24gUGUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O09lfHxudWxsPT1MZXx8TGUhPT1WYShkKXx8KGQ9TGUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmSWUoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxOZSYmRGUoTmUsZCl8fChOZT1kLGQ9amUoTWUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgb2QoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PUxlKSkpfVxuZnVuY3Rpb24gUWUoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgUmU9e2FuaW1hdGlvbmVuZDpRZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpRZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlFlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlFlKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sU2U9e30sVGU9e307XG5oYSYmKFRlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFJlLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFJlLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFJlLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFJlLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gVWUoYSl7aWYoU2VbYV0pcmV0dXJuIFNlW2FdO2lmKCFSZVthXSlyZXR1cm4gYTt2YXIgYj1SZVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBUZSlyZXR1cm4gU2VbYV09YltjXTtyZXR1cm4gYX12YXIgVmU9VWUoXCJhbmltYXRpb25lbmRcIiksV2U9VWUoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWGU9VWUoXCJhbmltYXRpb25zdGFydFwiKSxZZT1VZShcInRyYW5zaXRpb25lbmRcIiksWmU9bmV3IE1hcCwkZT1cImFib3J0IGF1eENsaWNrIGNhbmNlbCBjYW5QbGF5IGNhblBsYXlUaHJvdWdoIGNsaWNrIGNsb3NlIGNvbnRleHRNZW51IGNvcHkgY3V0IGRyYWcgZHJhZ0VuZCBkcmFnRW50ZXIgZHJhZ0V4aXQgZHJhZ0xlYXZlIGRyYWdPdmVyIGRyYWdTdGFydCBkcm9wIGR1cmF0aW9uQ2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGdvdFBvaW50ZXJDYXB0dXJlIGlucHV0IGludmFsaWQga2V5RG93biBrZXlQcmVzcyBrZXlVcCBsb2FkIGxvYWRlZERhdGEgbG9hZGVkTWV0YWRhdGEgbG9hZFN0YXJ0IGxvc3RQb2ludGVyQ2FwdHVyZSBtb3VzZURvd24gbW91c2VNb3ZlIG1vdXNlT3V0IG1vdXNlT3ZlciBtb3VzZVVwIHBhc3RlIHBhdXNlIHBsYXkgcGxheWluZyBwb2ludGVyQ2FuY2VsIHBvaW50ZXJEb3duIHBvaW50ZXJNb3ZlIHBvaW50ZXJPdXQgcG9pbnRlck92ZXIgcG9pbnRlclVwIHByb2dyZXNzIHJhdGVDaGFuZ2UgcmVzZXQgcmVzaXplIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VibWl0IHN1c3BlbmQgdGltZVVwZGF0ZSB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaFN0YXJ0IHZvbHVtZUNoYW5nZSBzY3JvbGwgdG9nZ2xlIHRvdWNoTW92ZSB3YWl0aW5nIHdoZWVsXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gYWYoYSxiKXtaZS5zZXQoYSxiKTtlYShiLFthXSl9Zm9yKHZhciBiZj0wO2JmPCRlLmxlbmd0aDtiZisrKXt2YXIgY2Y9JGVbYmZdLGRmPWNmLnRvTG93ZXJDYXNlKCksZWY9Y2ZbMF0udG9VcHBlckNhc2UoKStjZi5zbGljZSgxKTthZihkZixcIm9uXCIrZWYpfWFmKFZlLFwib25BbmltYXRpb25FbmRcIik7YWYoV2UsXCJvbkFuaW1hdGlvbkl0ZXJhdGlvblwiKTthZihYZSxcIm9uQW5pbWF0aW9uU3RhcnRcIik7YWYoXCJkYmxjbGlja1wiLFwib25Eb3VibGVDbGlja1wiKTthZihcImZvY3VzaW5cIixcIm9uRm9jdXNcIik7YWYoXCJmb2N1c291dFwiLFwib25CbHVyXCIpO2FmKFllLFwib25UcmFuc2l0aW9uRW5kXCIpO2ZhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7ZmEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtmYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO1xuZmEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtlYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZWEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtlYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2VhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2VhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmVhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBmZj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2UgcmVzaXplIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGdmPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KGZmKSk7XG5mdW5jdGlvbiBoZihhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztSYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gbmUoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtoZihlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO2hmKGUsaCxsKTtmPWt9fX1pZihOYil0aHJvdyBhPU9iLE5iPSExLE9iPW51bGwsYTt9XG5mdW5jdGlvbiBGKGEsYil7dmFyIGM9YltqZl07dm9pZCAwPT09YyYmKGM9YltqZl09bmV3IFNldCk7dmFyIGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChrZihiLGEsMiwhMSksYy5hZGQoZCkpfWZ1bmN0aW9uIGxmKGEsYixjKXt2YXIgZD0wO2ImJihkfD00KTtrZihjLGEsZCxiKX12YXIgbWY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBuZihhKXtpZighYVttZl0pe2FbbWZdPSEwO2NhLmZvckVhY2goZnVuY3Rpb24oYil7XCJzZWxlY3Rpb25jaGFuZ2VcIiE9PWImJihnZi5oYXMoYil8fGxmKGIsITEsYSksbGYoYiwhMCxhKSl9KTt2YXIgYj05PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDtudWxsPT09Ynx8YlttZl18fChiW21mXT0hMCxsZihcInNlbGVjdGlvbmNoYW5nZVwiLCExLGIpKX19XG5mdW5jdGlvbiBrZihhLGIsYyxkKXtzd2l0Y2goZWQoYikpe2Nhc2UgMTp2YXIgZT0kYzticmVhaztjYXNlIDQ6ZT1iZDticmVhaztkZWZhdWx0OmU9YWR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IUlifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGNkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9U2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufUdiKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXViKGMpLGc9W107XG5hOnt2YXIgaD1aZS5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9b2Qsbj1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09amQoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9TWQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjpuPVwiZm9jdXNcIjtrPUFkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOm49XCJibHVyXCI7az1BZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az13ZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxueWQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1RZDticmVhaztjYXNlIFZlOmNhc2UgV2U6Y2FzZSBYZTprPUNkO2JyZWFrO2Nhc2UgWWU6az1TZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az1xZDticmVhaztjYXNlIFwid2hlZWxcIjprPVVkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9RWQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1PZH12YXIgdj0wIT09KGImNCksQz0hdiYmXCJzY3JvbGxcIj09PWEsdD12P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3Y9W107Zm9yKHZhciByPWQseDtudWxsIT09XG5yOyl7eD1yO3ZhciBCPXguc3RhdGVOb2RlOzU9PT14LnRhZyYmbnVsbCE9PUImJih4PUIsbnVsbCE9PXQmJihCPUhiKHIsdCksbnVsbCE9QiYmdi5wdXNoKG9mKHIsQix4KSkpKTtpZihDKWJyZWFrO3I9ci5yZXR1cm59MDx2Lmxlbmd0aCYmKGg9bmV3IGsoaCxuLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnZ9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiZjIT09dGImJihuPWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJihTYyhuKXx8bltwZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZihuPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLG49bj9TYyhuKTpudWxsLG51bGwhPT1cbm4mJihDPVNiKG4pLG4hPT1DfHw1IT09bi50YWcmJjYhPT1uLnRhZykpbj1udWxsfWVsc2Ugaz1udWxsLG49ZDtpZihrIT09bil7dj13ZDtCPVwib25Nb3VzZUxlYXZlXCI7dD1cIm9uTW91c2VFbnRlclwiO3I9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl2PU9kLEI9XCJvblBvaW50ZXJMZWF2ZVwiLHQ9XCJvblBvaW50ZXJFbnRlclwiLHI9XCJwb2ludGVyXCI7Qz1udWxsPT1rP2g6cGUoayk7eD1udWxsPT1uP2g6cGUobik7aD1uZXcgdihCLHIrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD1DO2gucmVsYXRlZFRhcmdldD14O0I9bnVsbDtTYyhlKT09PWQmJih2PW5ldyB2KHQscitcImVudGVyXCIsbixjLGUpLHYudGFyZ2V0PXgsdi5yZWxhdGVkVGFyZ2V0PUMsQj12KTtDPUI7aWYoayYmbiliOnt2PWs7dD1uO3I9MDtmb3IoeD12O3g7eD1xZih4KSlyKys7eD0wO2ZvcihCPXQ7QjtCPXFmKEIpKXgrKztmb3IoOzA8ci14Oyl2PXFmKHYpLHItLTtmb3IoOzA8eC1yOyl0PVxucWYodCkseC0tO2Zvcig7ci0tOyl7aWYodj09PXR8fG51bGwhPT10JiZ2PT09dC5hbHRlcm5hdGUpYnJlYWsgYjt2PXFmKHYpO3Q9cWYodCl9dj1udWxsfWVsc2Ugdj1udWxsO251bGwhPT1rJiZyZihnLGgsayx2LCExKTtudWxsIT09biYmbnVsbCE9PUMmJnJmKGcsQyxuLHYsITApfX19YTp7aD1kP3BlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIE89cWU7ZWxzZSBpZihoZShoKSlpZihyZSlPPUFlO2Vsc2V7Tz15ZTt2YXIgVD14ZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKE89emUpO2lmKE8mJihPPU8oYSxkKSkpe2llKGcsTyxjLGUpO2JyZWFrIGF9VCYmVChhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKFQ9aC5fd3JhcHBlclN0YXRlKSYmXG5ULmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJiRhKGgsXCJudW1iZXJcIixoLnZhbHVlKX1UPWQ/cGUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKGhlKFQpfHxcInRydWVcIj09PVQuY29udGVudEVkaXRhYmxlKUxlPVQsTWU9ZCxOZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOk5lPU1lPUxlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOk9lPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpPZT0hMTtQZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKEtlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6UGUoZyxjLGUpfXZhciB6YTtpZihXZCliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xuY2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6TD1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifUw9dm9pZCAwfWVsc2UgZGU/YmUoYSxjKSYmKEw9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtMJiYoWmQmJlwia29cIiE9PWMubG9jYWxlJiYoZGV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1MP1wib25Db21wb3NpdGlvbkVuZFwiPT09TCYmZGUmJih6YT1pZCgpKTooZmQ9ZSxnZD1cInZhbHVlXCJpbiBmZD9mZC52YWx1ZTpmZC50ZXh0Q29udGVudCxkZT0hMCkpLFQ9amUoZCxMKSwwPFQubGVuZ3RoJiYoTD1uZXcgR2QoTCxhLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OkwsbGlzdGVuZXJzOlR9KSx6YT9MLmRhdGE9emE6KHphPWNlKGMpLG51bGwhPT16YSYmKEwuZGF0YT16YSkpKSk7aWYoemE9WWQ/ZWUoYSxjKTpmZShhLGMpKWQ9amUoZCxcIm9uQmVmb3JlSW5wdXRcIiksMDxkLmxlbmd0aCYmKGU9bmV3IEdkKFwib25CZWZvcmVJbnB1dFwiLFxuXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9emEpfW5lKGcsYil9KX1mdW5jdGlvbiBvZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIGplKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9SGIoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQob2YoYSxmLGUpKSxmPUhiKGEsYiksbnVsbCE9ZiYmZC5wdXNoKG9mKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gcWYoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHJmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9SGIoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQob2YoYyxrLGgpKSk6ZXx8KGs9SGIoYyxmKSxudWxsIT1rJiZnLnB1c2gob2YoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX12YXIgc2Y9L1xcclxcbj8vZyx0Zj0vXFx1MDAwMHxcXHVGRkZEL2c7ZnVuY3Rpb24gdWYoYSl7cmV0dXJuKFwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiXCIrYSkucmVwbGFjZShzZixcIlxcblwiKS5yZXBsYWNlKHRmLFwiXCIpfWZ1bmN0aW9uIHZmKGEsYixjKXtiPXVmKGIpO2lmKHVmKGEpIT09YiYmYyl0aHJvdyBFcnJvcihwKDQyNSkpO31mdW5jdGlvbiB3Zigpe31cbnZhciB4Zj1udWxsO2Z1bmN0aW9uIHlmKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfVxudmFyIHpmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLEFmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxCZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgUHJvbWlzZT9Qcm9taXNlOnZvaWQgMCxEZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcXVldWVNaWNyb3Rhc2s/cXVldWVNaWNyb3Rhc2s6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBCZj9mdW5jdGlvbihhKXtyZXR1cm4gQmYucmVzb2x2ZShudWxsKS50aGVuKGEpLmNhdGNoKENmKX06emY7ZnVuY3Rpb24gQ2YoYSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGE7fSl9XG5mdW5jdGlvbiBFZihhLGIpe3ZhciBjPWIsZD0wO2Rve3ZhciBlPWMubmV4dFNpYmxpbmc7YS5yZW1vdmVDaGlsZChjKTtpZihlJiY4PT09ZS5ub2RlVHlwZSlpZihjPWUuZGF0YSxcIi8kXCI9PT1jKXtpZigwPT09ZCl7YS5yZW1vdmVDaGlsZChlKTtZYyhiKTtyZXR1cm59ZC0tfWVsc2VcIiRcIiE9PWMmJlwiJD9cIiE9PWMmJlwiJCFcIiE9PWN8fGQrKztjPWV9d2hpbGUoYyk7WWMoYil9ZnVuY3Rpb24gRmYoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWs7aWYoOD09PWIpe2I9YS5kYXRhO2lmKFwiJFwiPT09Ynx8XCIkIVwiPT09Ynx8XCIkP1wiPT09YilicmVhaztpZihcIi8kXCI9PT1iKXJldHVybiBudWxsfX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEdmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBIZj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxJZj1cIl9fcmVhY3RGaWJlciRcIitIZixKZj1cIl9fcmVhY3RQcm9wcyRcIitIZixwZj1cIl9fcmVhY3RDb250YWluZXIkXCIrSGYsamY9XCJfX3JlYWN0RXZlbnRzJFwiK0hmLEtmPVwiX19yZWFjdExpc3RlbmVycyRcIitIZixMZj1cIl9fcmVhY3RIYW5kbGVzJFwiK0hmO1xuZnVuY3Rpb24gU2MoYSl7dmFyIGI9YVtJZl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbcGZdfHxjW0lmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUdmKGEpO251bGwhPT1hOyl7aWYoYz1hW0lmXSlyZXR1cm4gYzthPUdmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6YihhKXthPWFbSWZdfHxhW3BmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gcGUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHAoMzMpKTt9ZnVuY3Rpb24gQWIoYSl7cmV0dXJuIGFbSmZdfHxudWxsfXZhciBNZj1bXSxOZj0tMTtmdW5jdGlvbiBPZihhKXtyZXR1cm57Y3VycmVudDphfX1cbmZ1bmN0aW9uIEcoYSl7MD5OZnx8KGEuY3VycmVudD1NZltOZl0sTWZbTmZdPW51bGwsTmYtLSl9ZnVuY3Rpb24gSChhLGIpe05mKys7TWZbTmZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgUGY9e30sST1PZihQZiksUWY9T2YoITEpLFJmPVBmO2Z1bmN0aW9uIFNmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gUGY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBUZihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIFVmKCl7RyhRZik7RyhJKX1mdW5jdGlvbiBWZihhLGIsYyl7aWYoSS5jdXJyZW50IT09UGYpdGhyb3cgRXJyb3IocCgxNjgpKTtIKEksYik7SChRZixjKX1mdW5jdGlvbiBXZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7Yj1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGIpKXRocm93IEVycm9yKHAoMTA4LFBhKGEpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIEEoe30sYyxkKX1cbmZ1bmN0aW9uIFhmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxQZjtSZj1JLmN1cnJlbnQ7SChJLGEpO0goUWYsUWYuY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gWWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHAoMTY5KSk7Yz8oYT1XZihhLGIsUmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxHKFFmKSxHKEkpLEgoSSxhKSk6RyhRZik7SChRZixjKX12YXIgWmY9bnVsbCwkZj0hMSxhZz0hMTtmdW5jdGlvbiBiZyhhKXtudWxsPT09WmY/WmY9W2FdOlpmLnB1c2goYSl9ZnVuY3Rpb24gY2coYSl7JGY9ITA7YmcoYSl9XG5mdW5jdGlvbiBkZygpe2lmKCFhZyYmbnVsbCE9PVpmKXthZz0hMDt2YXIgYT0wLGI9RTt0cnl7dmFyIGM9WmY7Zm9yKEU9MTthPGMubGVuZ3RoO2ErKyl7dmFyIGQ9Y1thXTtkbyBkPWQoITApO3doaWxlKG51bGwhPT1kKX1aZj1udWxsOyRmPSExfWNhdGNoKGUpe3Rocm93IG51bGwhPT1aZiYmKFpmPVpmLnNsaWNlKGErMSkpLFliKGNjLGRnKSxlO31maW5hbGx5e0U9YixhZz0hMX19cmV0dXJuIG51bGx9dmFyIGVnPXNhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnO2Z1bmN0aW9uIGZnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9QSh7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pO3JldHVybiBifXJldHVybiBifXZhciBnZz1PZihudWxsKSxoZz1udWxsLGlnPW51bGwsamc9bnVsbDtmdW5jdGlvbiBrZygpe2pnPWlnPWhnPW51bGx9XG5mdW5jdGlvbiBsZyhhKXt2YXIgYj1nZy5jdXJyZW50O0coZ2cpO2EuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIG1nKGEsYixjKXtmb3IoO251bGwhPT1hOyl7dmFyIGQ9YS5hbHRlcm5hdGU7KGEuY2hpbGRMYW5lcyZiKSE9PWI/KGEuY2hpbGRMYW5lc3w9YixudWxsIT09ZCYmKGQuY2hpbGRMYW5lc3w9YikpOm51bGwhPT1kJiYoZC5jaGlsZExhbmVzJmIpIT09YiYmKGQuY2hpbGRMYW5lc3w9Yik7aWYoYT09PWMpYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gbmcoYSxiKXtoZz1hO2pnPWlnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYob2c9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gcGcoYSl7dmFyIGI9YS5fY3VycmVudFZhbHVlO2lmKGpnIT09YSlpZihhPXtjb250ZXh0OmEsbWVtb2l6ZWRWYWx1ZTpiLG5leHQ6bnVsbH0sbnVsbD09PWlnKXtpZihudWxsPT09aGcpdGhyb3cgRXJyb3IocCgzMDgpKTtpZz1hO2hnLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YX19ZWxzZSBpZz1pZy5uZXh0PWE7cmV0dXJuIGJ9dmFyIHFnPW51bGwscmc9ITE7ZnVuY3Rpb24gc2coYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHRnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHVnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO251bGwhPT1jJiYoYz1jLnNoYXJlZCxudWxsIT09SiYmMCE9PShhLm1vZGUmMSkmJjA9PT0oSyYyKT8oYT1jLmludGVybGVhdmVkLG51bGw9PT1hPyhiLm5leHQ9YixudWxsPT09cWc/cWc9W2NdOnFnLnB1c2goYykpOihiLm5leHQ9YS5uZXh0LGEubmV4dD1iKSxjLmludGVybGVhdmVkPWIpOihhPWMucGVuZGluZyxudWxsPT09YT9iLm5leHQ9YjooYi5uZXh0PWEubmV4dCxhLm5leHQ9YiksYy5wZW5kaW5nPWIpKX1mdW5jdGlvbiB3ZyhhLGIsYyl7Yj1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLnNoYXJlZCwwIT09KGMmNDE5NDI0MCkpKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO3ljKGEsYyl9fVxuZnVuY3Rpb24geGcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIHlnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7cmc9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbT1hLmFsdGVybmF0ZTtudWxsIT09bSYmKG09bS51cGRhdGVRdWV1ZSxoPW0ubGFzdEJhc2VVcGRhdGUsaCE9PWcmJihudWxsPT09aD9tLmZpcnN0QmFzZVVwZGF0ZT1sOmgubmV4dD1sLG0ubGFzdEJhc2VVcGRhdGU9aykpfWlmKG51bGwhPT1mKXt2YXIgdz1lLmJhc2VTdGF0ZTtnPTA7bT1sPWs9bnVsbDtoPWY7ZG97dmFyIHU9aC5sYW5lLHk9aC5ldmVudFRpbWU7aWYoKGQmdSk9PT11KXtudWxsIT09bSYmKG09bS5uZXh0PXtldmVudFRpbWU6eSxsYW5lOjAsdGFnOmgudGFnLHBheWxvYWQ6aC5wYXlsb2FkLGNhbGxiYWNrOmguY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgbj1hLHY9aDt1PWI7eT1jO3N3aXRjaCh2LnRhZyl7Y2FzZSAxOm49di5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuKXt3PW4uY2FsbCh5LHcsdSk7YnJlYWsgYX13PW47YnJlYWsgYTtjYXNlIDM6bi5mbGFncz1uLmZsYWdzJi02NTUzN3wxMjg7Y2FzZSAwOm49di5wYXlsb2FkO3U9XCJmdW5jdGlvblwiPT09dHlwZW9mIG4/bi5jYWxsKHksdyx1KTpuO2lmKG51bGw9PT11fHx2b2lkIDA9PT11KWJyZWFrIGE7dz1BKHt9LHcsdSk7YnJlYWsgYTtjYXNlIDI6cmc9ITB9fW51bGwhPT1oLmNhbGxiYWNrJiYwIT09aC5sYW5lJiYoYS5mbGFnc3w9NjQsdT1lLmVmZmVjdHMsbnVsbD09PXU/ZS5lZmZlY3RzPVtoXTp1LnB1c2goaCkpfWVsc2UgeT17ZXZlbnRUaW1lOnksbGFuZTp1LHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW0/KGw9bT15LGs9dyk6bT1tLm5leHQ9eSxnfD11O1xuaD1oLm5leHQ7aWYobnVsbD09PWgpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2UgdT1oLGg9dS5uZXh0LHUubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9dSxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW0mJihrPXcpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW07Yj1lLnNoYXJlZC5pbnRlcmxlYXZlZDtpZihudWxsIT09Yil7ZT1iO2RvIGd8PWUubGFuZSxlPWUubmV4dDt3aGlsZShlIT09Yil9ZWxzZSBudWxsPT09ZiYmKGUuc2hhcmVkLmxhbmVzPTApO3pnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9d319XG5mdW5jdGlvbiBBZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IocCgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBCZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBDZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6QSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgRmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/U2IoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9TSgpLGU9RGcoYSksZj11ZyhkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTt2ZyhhLGYpO2I9RWcoYSxlLGQpO251bGwhPT1iJiZ3ZyhiLGEsZSl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9TSgpLGU9RGcoYSksZj11ZyhkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO3ZnKGEsZik7Yj1FZyhhLGUsZCk7bnVsbCE9PWImJndnKGIsYSxlKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1NKCksZD1EZyhhKSxlPXVnKGMsXG5kKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTt2ZyhhLGUpO2I9RWcoYSxkLGMpO251bGwhPT1iJiZ3ZyhiLGEsZCl9fTtmdW5jdGlvbiBHZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFEZShjLGQpfHwhRGUoZSxmKTohMH1cbmZ1bmN0aW9uIEhnKGEsYixjKXt2YXIgZD0hMSxlPVBmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXBnKGYpOihlPVRmKGIpP1JmOkkuY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP1NmKGEsZSk6UGYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1GZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIElnKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZGZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIEpnKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Qmc7c2coYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1wZyhmKTooZj1UZihiKT9SZjpJLmN1cnJlbnQsZS5jb250ZXh0PVNmKGEsZikpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihDZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZGZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx5ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00MTk0MzA4KX12YXIgS2c9W10sTGc9MCxNZz1udWxsLE5nPTAsT2c9W10sUGc9MCxRZz1udWxsLFJnPTEsU2c9XCJcIjtmdW5jdGlvbiBUZyhhLGIpe0tnW0xnKytdPU5nO0tnW0xnKytdPU1nO01nPWE7Tmc9Yn1cbmZ1bmN0aW9uIFVnKGEsYixjKXtPZ1tQZysrXT1SZztPZ1tQZysrXT1TZztPZ1tQZysrXT1RZztRZz1hO3ZhciBkPVJnO2E9U2c7dmFyIGU9MzItbGMoZCktMTtkJj1+KDE8PGUpO2MrPTE7dmFyIGY9MzItbGMoYikrZTtpZigzMDxmKXt2YXIgZz1lLWUlNTtmPShkJigxPDxnKS0xKS50b1N0cmluZygzMik7ZD4+PWc7ZS09ZztSZz0xPDwzMi1sYyhiKStlfGM8PGV8ZDtTZz1mK2F9ZWxzZSBSZz0xPDxmfGM8PGV8ZCxTZz1hfWZ1bmN0aW9uIFZnKGEpe251bGwhPT1hLnJldHVybiYmKFRnKGEsMSksVWcoYSwxLDApKX1mdW5jdGlvbiBXZyhhKXtmb3IoO2E9PT1NZzspTWc9S2dbLS1MZ10sS2dbTGddPW51bGwsTmc9S2dbLS1MZ10sS2dbTGddPW51bGw7Zm9yKDthPT09UWc7KVFnPU9nWy0tUGddLE9nW1BnXT1udWxsLFNnPU9nWy0tUGddLE9nW1BnXT1udWxsLFJnPU9nWy0tUGddLE9nW1BnXT1udWxsfXZhciBYZz1udWxsLFlnPW51bGwsTj0hMSxaZz1udWxsO1xuZnVuY3Rpb24gJGcoYSxiKXt2YXIgYz1haCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtiPWEuZGVsZXRpb25zO251bGw9PT1iPyhhLmRlbGV0aW9ucz1bY10sYS5mbGFnc3w9MTYpOmIucHVzaChjKX1cbmZ1bmN0aW9uIGJoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLFhnPWEsWWc9RmYoYi5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLFhnPWEsWWc9bnVsbCwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4gYj04IT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGM9bnVsbCE9PVFnP3tpZDpSZyxvdmVyZmxvdzpTZ306bnVsbCxhLm1lbW9pemVkU3RhdGU9e2RlaHlkcmF0ZWQ6Yix0cmVlQ29udGV4dDpjLHJldHJ5TGFuZToxMDczNzQxODI0fSxjPWFoKDE4LG51bGwsbnVsbCwwKSxjLnN0YXRlTm9kZT1iLGMucmV0dXJuPWEsYS5jaGlsZD1jLFhnPWEsWWc9XG5udWxsLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBjaChhKXtyZXR1cm4gMCE9PShhLm1vZGUmMSkmJjA9PT0oYS5mbGFncyYxMjgpfWZ1bmN0aW9uIGRoKGEpe2lmKE4pe3ZhciBiPVlnO2lmKGIpe3ZhciBjPWI7aWYoIWJoKGEsYikpe2lmKGNoKGEpKXRocm93IEVycm9yKHAoNDE4KSk7Yj1GZihjLm5leHRTaWJsaW5nKTt2YXIgZD1YZztiJiZiaChhLGIpPyRnKGQsYyk6KGEuZmxhZ3M9YS5mbGFncyYtNDA5N3wyLE49ITEsWGc9YSl9fWVsc2V7aWYoY2goYSkpdGhyb3cgRXJyb3IocCg0MTgpKTthLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MjtOPSExO1hnPWF9fX1mdW5jdGlvbiBlaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47WGc9YX1cbmZ1bmN0aW9uIGZoKGEpe2lmKGEhPT1YZylyZXR1cm4hMTtpZighTilyZXR1cm4gZWgoYSksTj0hMCwhMTt2YXIgYjsoYj0zIT09YS50YWcpJiYhKGI9NSE9PWEudGFnKSYmKGI9YS50eXBlLGI9XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF5ZihhLnR5cGUsYS5tZW1vaXplZFByb3BzKSk7aWYoYiYmKGI9WWcpKXtpZihjaChhKSl7Zm9yKGE9WWc7YTspYT1GZihhLm5leHRTaWJsaW5nKTt0aHJvdyBFcnJvcihwKDQxOCkpO31mb3IoO2I7KSRnKGEsYiksYj1GZihiLm5leHRTaWJsaW5nKX1laChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHAoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe1lnPUZmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlxuXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31ZZz1udWxsfX1lbHNlIFlnPVhnP0ZmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIGdoKCl7WWc9WGc9bnVsbDtOPSExfWZ1bmN0aW9uIGhoKGEpe251bGw9PT1aZz9aZz1bYV06WmcucHVzaChhKX1cbmZ1bmN0aW9uIGloKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IocCgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcihwKDE0NyxhKSk7dmFyIGU9ZCxmPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1mKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWUucmVmcztiPT09QmcmJihiPWUucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZl06YltmXT1hfTtiLl9zdHJpbmdSZWY9ZjtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IocCgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IocCgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIGpoKGEsYil7YT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik7dGhyb3cgRXJyb3IocCgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09YT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjphKSk7fWZ1bmN0aW9uIGtoKGEpe3ZhciBiPWEuX2luaXQ7cmV0dXJuIGIoYS5fcGF5bG9hZCl9XG5mdW5jdGlvbiBsaChhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5kZWxldGlvbnM7bnVsbD09PWQ/KGIuZGVsZXRpb25zPVtjXSxiLmZsYWdzfD0xNik6ZC5wdXNoKGMpfX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1taChhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGIuZmxhZ3N8PTEwNDg1NzYsYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzfD0yLGMpOmQ7Yi5mbGFnc3w9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJlxubnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFnc3w9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPW5oKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7dmFyIGY9Yy50eXBlO2lmKGY9PT12YSlyZXR1cm4gbShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGMua2V5KTtpZihudWxsIT09YiYmKGIuZWxlbWVudFR5cGU9PT1mfHxcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLiQkdHlwZW9mPT09RmEmJmtoKGYpPT09Yi50eXBlKSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9aWgoYSxiLGMpLGQucmV0dXJuPWEsZDtkPW9oKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPWloKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8XG5iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9cGgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPXFoKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gdyhhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiJiZcIlwiIT09Ynx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPW5oKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHRhOnJldHVybiBjPW9oKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLFxuYy5yZWY9aWgoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHVhOnJldHVybiBiPXBoKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtjYXNlIEZhOnZhciBkPWIuX2luaXQ7cmV0dXJuIHcoYSxkKGIuX3BheWxvYWQpLGMpfWlmKGJiKGIpfHxJYShiKSlyZXR1cm4gYj1xaChiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtqaChhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHUoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGMmJlwiXCIhPT1jfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/ayhhLGIsYyxkKTpudWxsO2Nhc2UgdWE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGw7Y2FzZSBGYTpyZXR1cm4gZT1jLl9pbml0LHUoYSxcbmIsZShjLl9wYXlsb2FkKSxkKX1pZihiYihjKXx8SWEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO2poKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZCYmXCJcIiE9PWR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgdGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGsoYixhLGQsZSk7Y2FzZSB1YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKTtjYXNlIEZhOnZhciBmPWQuX2luaXQ7cmV0dXJuIHkoYSxiLGMsZihkLl9wYXlsb2FkKSxlKX1pZihiYihkKXx8SWEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO2poKGIsZCl9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBuKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG49bnVsbCxtPWcscj1nPTAseD1udWxsO251bGwhPT1tJiZyPGgubGVuZ3RoO3IrKyl7bS5pbmRleD5yPyh4PW0sbT1udWxsKTp4PW0uc2libGluZzt2YXIgdD11KGUsbSxoW3JdLGspO2lmKG51bGw9PT10KXtudWxsPT09bSYmKG09eCk7YnJlYWt9YSYmbSYmbnVsbD09PXQuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHQsZyxyKTtudWxsPT09bj9sPXQ6bi5zaWJsaW5nPXQ7bj10O209eH1pZihyPT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxOJiZUZyhlLHIpLGw7aWYobnVsbD09PW0pe2Zvcig7cjxoLmxlbmd0aDtyKyspbT13KGUsaFtyXSxrKSxudWxsIT09bSYmKGc9ZihtLGcsciksbnVsbD09PW4/bD1tOm4uc2libGluZz1tLG49bSk7TiYmVGcoZSxyKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7cjxoLmxlbmd0aDtyKyspeD15KG0sZSxyLGhbcl0sayksbnVsbCE9PXgmJihhJiZudWxsIT09eC5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1cbngua2V5P3I6eC5rZXkpLGc9Zih4LGcsciksbnVsbD09PW4/bD14Om4uc2libGluZz14LG49eCk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtOJiZUZyhlLHIpO3JldHVybiBsfWZ1bmN0aW9uIHYoZSxnLGgsayl7dmFyIGw9SWEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IocCgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1oKXRocm93IEVycm9yKHAoMTUxKSk7Zm9yKHZhciBtPWw9bnVsbCxuPWcscj1nPTAseD1udWxsLHQ9aC5uZXh0KCk7bnVsbCE9PW4mJiF0LmRvbmU7cisrLHQ9aC5uZXh0KCkpe24uaW5kZXg+cj8oeD1uLG49bnVsbCk6eD1uLnNpYmxpbmc7dmFyIHY9dShlLG4sdC52YWx1ZSxrKTtpZihudWxsPT09dil7bnVsbD09PW4mJihuPXgpO2JyZWFrfWEmJm4mJm51bGw9PT12LmFsdGVybmF0ZSYmYihlLG4pO2c9Zih2LGcscik7bnVsbD09PW0/bD12Om0uc2libGluZz12O209djtuPXh9aWYodC5kb25lKXJldHVybiBjKGUsXG5uKSxOJiZUZyhlLHIpLGw7aWYobnVsbD09PW4pe2Zvcig7IXQuZG9uZTtyKyssdD1oLm5leHQoKSl0PXcoZSx0LnZhbHVlLGspLG51bGwhPT10JiYoZz1mKHQsZyxyKSxudWxsPT09bT9sPXQ6bS5zaWJsaW5nPXQsbT10KTtOJiZUZyhlLHIpO3JldHVybiBsfWZvcihuPWQoZSxuKTshdC5kb25lO3IrKyx0PWgubmV4dCgpKXQ9eShuLGUscix0LnZhbHVlLGspLG51bGwhPT10JiYoYSYmbnVsbCE9PXQuYWx0ZXJuYXRlJiZuLmRlbGV0ZShudWxsPT09dC5rZXk/cjp0LmtleSksZz1mKHQsZyxyKSxudWxsPT09bT9sPXQ6bS5zaWJsaW5nPXQsbT10KTthJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO04mJlRnKGUscik7cmV0dXJuIGx9ZnVuY3Rpb24gQyhhLGQsZixoKXtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT12YSYmbnVsbD09PWYua2V5JiYoZj1mLnByb3BzLmNoaWxkcmVuKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mKXtzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSB0YTphOntmb3IodmFyIGs9XG5mLmtleSxsPWQ7bnVsbCE9PWw7KXtpZihsLmtleT09PWspe2s9Zi50eXBlO2lmKGs9PT12YSl7aWYoNz09PWwudGFnKXtjKGEsbC5zaWJsaW5nKTtkPWUobCxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1lbHNlIGlmKGwuZWxlbWVudFR5cGU9PT1rfHxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09RmEmJmtoKGspPT09bC50eXBlKXtjKGEsbC5zaWJsaW5nKTtkPWUobCxmLnByb3BzKTtkLnJlZj1paChhLGwsZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1jKGEsbCk7YnJlYWt9ZWxzZSBiKGEsbCk7bD1sLnNpYmxpbmd9Zi50eXBlPT09dmE/KGQ9cWgoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPW9oKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPWloKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB1YTphOntmb3IobD1mLmtleTtudWxsIT09XG5kOyl7aWYoZC5rZXk9PT1sKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPXBoKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgRmE6cmV0dXJuIGw9Zi5faW5pdCxDKGEsZCxsKGYuX3BheWxvYWQpLGgpfWlmKGJiKGYpKXJldHVybiBuKGEsZCxmLGgpO2lmKElhKGYpKXJldHVybiB2KGEsZCxmLGgpO2poKGEsZil9cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBmJiZcIlwiIT09Znx8XCJudW1iZXJcIj09PXR5cGVvZiBmPyhmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6XG4oYyhhLGQpLGQ9bmgoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSkpOmMoYSxkKX1yZXR1cm4gQ312YXIgcmg9bGgoITApLHNoPWxoKCExKSx0aD17fSx1aD1PZih0aCksdmg9T2YodGgpLHdoPU9mKHRoKTtmdW5jdGlvbiB4aChhKXtpZihhPT09dGgpdGhyb3cgRXJyb3IocCgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiB5aChhLGIpe0god2gsYik7SCh2aCxhKTtIKHVoLHRoKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOmliKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1pYihiLGEpfUcodWgpO0godWgsYil9ZnVuY3Rpb24gemgoKXtHKHVoKTtHKHZoKTtHKHdoKX1cbmZ1bmN0aW9uIEFoKGEpe3hoKHdoLmN1cnJlbnQpO3ZhciBiPXhoKHVoLmN1cnJlbnQpO3ZhciBjPWliKGIsYS50eXBlKTtiIT09YyYmKEgodmgsYSksSCh1aCxjKSl9ZnVuY3Rpb24gQmgoYSl7dmguY3VycmVudD09PWEmJihHKHVoKSxHKHZoKSl9dmFyIFA9T2YoMCk7XG5mdW5jdGlvbiBDaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyYxMjgpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgRGg9W107XG5mdW5jdGlvbiBFaCgpe2Zvcih2YXIgYT0wO2E8RGgubGVuZ3RoO2ErKylEaFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO0RoLmxlbmd0aD0wfXZhciBGaD1zYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEdoPXNhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEhoPTAsUT1udWxsLFI9bnVsbCxTPW51bGwsSWg9ITEsSmg9ITEsS2g9MCxMaD0wO2Z1bmN0aW9uIFUoKXt0aHJvdyBFcnJvcihwKDMyMSkpO31mdW5jdGlvbiBNaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFDZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gTmgoYSxiLGMsZCxlLGYpe0hoPWY7UT1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7RmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9PaDpQaDthPWMoZCxlKTtpZihKaCl7Zj0wO2Rve0poPSExO0toPTA7aWYoMjU8PWYpdGhyb3cgRXJyb3IocCgzMDEpKTtmKz0xO1M9Uj1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtGaC5jdXJyZW50PVFoO2E9YyhkLGUpfXdoaWxlKEpoKX1GaC5jdXJyZW50PVJoO2I9bnVsbCE9PVImJm51bGwhPT1SLm5leHQ7SGg9MDtTPVI9UT1udWxsO0loPSExO2lmKGIpdGhyb3cgRXJyb3IocCgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBTaCgpe3ZhciBhPTAhPT1LaDtLaD0wO3JldHVybiBhfVxuZnVuY3Rpb24gVGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09Uz9RLm1lbW9pemVkU3RhdGU9Uz1hOlM9Uy5uZXh0PWE7cmV0dXJuIFN9ZnVuY3Rpb24gVWgoKXtpZihudWxsPT09Uil7dmFyIGE9US5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ui5uZXh0O3ZhciBiPW51bGw9PT1TP1EubWVtb2l6ZWRTdGF0ZTpTLm5leHQ7aWYobnVsbCE9PWIpUz1iLFI9YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHAoMzEwKSk7Uj1hO2E9e21lbW9pemVkU3RhdGU6Ui5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpSLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ui5iYXNlUXVldWUscXVldWU6Ui5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1TP1EubWVtb2l6ZWRTdGF0ZT1TPWE6Uz1TLm5leHQ9YX1yZXR1cm4gU31cbmZ1bmN0aW9uIFZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gV2goYSl7dmFyIGI9VWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IocCgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1SLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2Y9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1udWxsLGs9bnVsbCxsPWY7ZG97dmFyIG09bC5sYW5lO2lmKChIaCZtKT09PW0pbnVsbCE9PWsmJihrPWsubmV4dD17bGFuZTowLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxlYWdlclN0YXRlOmwuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWwuaGFzRWFnZXJTdGF0ZT9sLmVhZ2VyU3RhdGU6YShkLGwuYWN0aW9uKTtlbHNle3ZhciB3PXtsYW5lOm0sYWN0aW9uOmwuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6bC5oYXNFYWdlclN0YXRlLFxuZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09az8oaD1rPXcsZz1kKTprPWsubmV4dD13O1EubGFuZXN8PW07emd8PW19bD1sLm5leHR9d2hpbGUobnVsbCE9PWwmJmwhPT1mKTtudWxsPT09az9nPWQ6ay5uZXh0PWg7Q2UoZCxiLm1lbW9pemVkU3RhdGUpfHwob2c9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWc7Yi5iYXNlUXVldWU9aztjLmxhc3RSZW5kZXJlZFN0YXRlPWR9YT1jLmludGVybGVhdmVkO2lmKG51bGwhPT1hKXtlPWE7ZG8gZj1lLmxhbmUsUS5sYW5lc3w9Zix6Z3w9ZixlPWUubmV4dDt3aGlsZShlIT09YSl9ZWxzZSBudWxsPT09ZSYmKGMubGFuZXM9MCk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIFhoKGEpe3ZhciBiPVVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtDZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChvZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfWZ1bmN0aW9uIFloKCl7fVxuZnVuY3Rpb24gWmgoYSxiKXt2YXIgYz1RLGQ9VWgoKSxlPWIoKSxmPSFDZShkLm1lbW9pemVkU3RhdGUsZSk7ZiYmKGQubWVtb2l6ZWRTdGF0ZT1lLG9nPSEwKTtkPWQucXVldWU7JGgoYWkuYmluZChudWxsLGMsZCxhKSxbYV0pO2lmKGQuZ2V0U25hcHNob3QhPT1ifHxmfHxudWxsIT09UyYmUy5tZW1vaXplZFN0YXRlLnRhZyYxKXtjLmZsYWdzfD0yMDQ4O2JpKDksY2kuYmluZChudWxsLGMsZCxlLGIpLHZvaWQgMCxudWxsKTtpZihudWxsPT09Sil0aHJvdyBFcnJvcihwKDM0OSkpOzAhPT0oSGgmMzApfHxkaShjLGIsZSl9cmV0dXJuIGV9ZnVuY3Rpb24gZGkoYSxiLGMpe2EuZmxhZ3N8PTE2Mzg0O2E9e2dldFNuYXBzaG90OmIsdmFsdWU6Y307Yj1RLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LFEudXBkYXRlUXVldWU9YixiLnN0b3Jlcz1bYV0pOihjPWIuc3RvcmVzLG51bGw9PT1jP2Iuc3RvcmVzPVthXTpjLnB1c2goYSkpfVxuZnVuY3Rpb24gY2koYSxiLGMsZCl7Yi52YWx1ZT1jO2IuZ2V0U25hcHNob3Q9ZDtlaShiKSYmRWcoYSwxLC0xKX1mdW5jdGlvbiBhaShhLGIsYyl7cmV0dXJuIGMoZnVuY3Rpb24oKXtlaShiKSYmRWcoYSwxLC0xKX0pfWZ1bmN0aW9uIGVpKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgYz1iKCk7cmV0dXJuIUNlKGEsYyl9Y2F0Y2goZCl7cmV0dXJuITB9fWZ1bmN0aW9uIGZpKGEpe3ZhciBiPVRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6VmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07Yi5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1naS5iaW5kKG51bGwsUSxhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gYmkoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9US51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxRLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIGhpKCl7cmV0dXJuIFVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBpaShhLGIsYyxkKXt2YXIgZT1UaCgpO1EuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWJpKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiBqaShhLGIsYyxkKXt2YXIgZT1VaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1SKXt2YXIgZz1SLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJk1oKGQsZy5kZXBzKSl7ZS5tZW1vaXplZFN0YXRlPWJpKGIsYyxmLGQpO3JldHVybn19US5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9YmkoMXxiLGMsZixkKX1mdW5jdGlvbiBraShhLGIpe3JldHVybiBpaSg4MzkwNjU2LDgsYSxiKX1mdW5jdGlvbiAkaChhLGIpe3JldHVybiBqaSgyMDQ4LDgsYSxiKX1mdW5jdGlvbiBsaShhLGIpe3JldHVybiBqaSg0LDIsYSxiKX1mdW5jdGlvbiBtaShhLGIpe3JldHVybiBqaSg0LDQsYSxiKX1cbmZ1bmN0aW9uIG5pKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gb2koYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBqaSg0LDQsbmkuYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gcGkoKXt9ZnVuY3Rpb24gcWkoYSxiKXt2YXIgYz1VaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmTWgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiByaShhLGIpe3ZhciBjPVVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZNaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBzaShhLGIpe3ZhciBjPUU7RT0wIT09YyYmND5jP2M6NDthKCEwKTt2YXIgZD1HaC50cmFuc2l0aW9uO0doLnRyYW5zaXRpb249e307dHJ5e2EoITEpLGIoKX1maW5hbGx5e0U9YyxHaC50cmFuc2l0aW9uPWR9fWZ1bmN0aW9uIHRpKCl7cmV0dXJuIFVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiB1aShhLGIsYyl7dmFyIGQ9RGcoYSk7Yz17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmkoYSk/d2koYixjKTooeGkoYSxiLGMpLGM9TSgpLGE9RWcoYSxkLGMpLG51bGwhPT1hJiZ5aShhLGIsZCkpfVxuZnVuY3Rpb24gZ2koYSxiLGMpe3ZhciBkPURnKGEpLGU9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKHZpKGEpKXdpKGIsZSk7ZWxzZXt4aShhLGIsZSk7dmFyIGY9YS5hbHRlcm5hdGU7aWYoMD09PWEubGFuZXMmJihudWxsPT09Znx8MD09PWYubGFuZXMpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuaGFzRWFnZXJTdGF0ZT0hMDtlLmVhZ2VyU3RhdGU9aDtpZihDZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9Yz1NKCk7YT1FZyhhLGQsYyk7bnVsbCE9PWEmJnlpKGEsYixkKX19ZnVuY3Rpb24gdmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7cmV0dXJuIGE9PT1RfHxudWxsIT09YiYmYj09PVF9XG5mdW5jdGlvbiB3aShhLGIpe0poPUloPSEwO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9ZnVuY3Rpb24geGkoYSxiLGMpe251bGwhPT1KJiYwIT09KGEubW9kZSYxKSYmMD09PShLJjIpPyhhPWIuaW50ZXJsZWF2ZWQsbnVsbD09PWE/KGMubmV4dD1jLG51bGw9PT1xZz9xZz1bYl06cWcucHVzaChiKSk6KGMubmV4dD1hLm5leHQsYS5uZXh0PWMpLGIuaW50ZXJsZWF2ZWQ9Yyk6KGE9Yi5wZW5kaW5nLG51bGw9PT1hP2MubmV4dD1jOihjLm5leHQ9YS5uZXh0LGEubmV4dD1jKSxiLnBlbmRpbmc9Yyl9ZnVuY3Rpb24geWkoYSxiLGMpe2lmKDAhPT0oYyY0MTk0MjQwKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9Yzt5YyhhLGMpfX1cbnZhciBSaD17cmVhZENvbnRleHQ6cGcsdXNlQ2FsbGJhY2s6VSx1c2VDb250ZXh0OlUsdXNlRWZmZWN0OlUsdXNlSW1wZXJhdGl2ZUhhbmRsZTpVLHVzZUluc2VydGlvbkVmZmVjdDpVLHVzZUxheW91dEVmZmVjdDpVLHVzZU1lbW86VSx1c2VSZWR1Y2VyOlUsdXNlUmVmOlUsdXNlU3RhdGU6VSx1c2VEZWJ1Z1ZhbHVlOlUsdXNlRGVmZXJyZWRWYWx1ZTpVLHVzZVRyYW5zaXRpb246VSx1c2VNdXRhYmxlU291cmNlOlUsdXNlU3luY0V4dGVybmFsU3RvcmU6VSx1c2VJZDpVLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sT2g9e3JlYWRDb250ZXh0OnBnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7VGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpwZyx1c2VFZmZlY3Q6a2ksdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIGlpKDQxOTQzMDgsXG40LG5pLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gaWkoNDE5NDMwOCw0LGEsYil9LHVzZUluc2VydGlvbkVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBpaSg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPVRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2QucXVldWU9YTthPWEuZGlzcGF0Y2g9dWkuYmluZChudWxsLFEsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPVxuVGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6ZmksdXNlRGVidWdWYWx1ZTpwaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPWZpKGEpLGM9YlswXSxkPWJbMV07a2koZnVuY3Rpb24oKXt2YXIgYj1HaC50cmFuc2l0aW9uO0doLnRyYW5zaXRpb249e307dHJ5e2QoYSl9ZmluYWxseXtHaC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9ZmkoITEpLGI9YVswXTthPXNpLmJpbmQobnVsbCxhWzFdKTtUaCgpLm1lbW9pemVkU3RhdGU9YTtyZXR1cm5bYixhXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbigpe30sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVEsZT1UaCgpO2lmKE4pe2lmKHZvaWQgMD09PWMpdGhyb3cgRXJyb3IocCg0MDcpKTtjPWMoKX1lbHNle2M9YigpO2lmKG51bGw9PT1KKXRocm93IEVycm9yKHAoMzQ5KSk7XG4wIT09KEhoJjMwKXx8ZGkoZCxiLGMpfWUubWVtb2l6ZWRTdGF0ZT1jO3ZhciBmPXt2YWx1ZTpjLGdldFNuYXBzaG90OmJ9O2UucXVldWU9ZjtraShhaS5iaW5kKG51bGwsZCxmLGEpLFthXSk7ZC5mbGFnc3w9MjA0ODtiaSg5LGNpLmJpbmQobnVsbCxkLGYsYyxiKSx2b2lkIDAsbnVsbCk7cmV0dXJuIGN9LHVzZUlkOmZ1bmN0aW9uKCl7dmFyIGE9VGgoKSxiPUouaWRlbnRpZmllclByZWZpeDtpZihOKXt2YXIgYz1TZzt2YXIgZD1SZztjPShkJn4oMTw8MzItbGMoZCktMSkpLnRvU3RyaW5nKDMyKStjO2I9XCI6XCIrYitcIlJcIitjO2M9S2grKzswPGMmJihiKz1cIkhcIitjLnRvU3RyaW5nKDMyKSk7Yis9XCI6XCJ9ZWxzZSBjPUxoKyssYj1cIjpcIitiK1wiclwiK2MudG9TdHJpbmcoMzIpK1wiOlwiO3JldHVybiBhLm1lbW9pemVkU3RhdGU9Yn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxQaD17cmVhZENvbnRleHQ6cGcsdXNlQ2FsbGJhY2s6cWksdXNlQ29udGV4dDpwZyx1c2VFZmZlY3Q6JGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpvaSxcbnVzZUluc2VydGlvbkVmZmVjdDpsaSx1c2VMYXlvdXRFZmZlY3Q6bWksdXNlTWVtbzpyaSx1c2VSZWR1Y2VyOldoLHVzZVJlZjpoaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBXaChWaCl9LHVzZURlYnVnVmFsdWU6cGksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1XaChWaCksYz1iWzBdLGQ9YlsxXTskaChmdW5jdGlvbigpe3ZhciBiPUdoLnRyYW5zaXRpb247R2gudHJhbnNpdGlvbj17fTt0cnl7ZChhKX1maW5hbGx5e0doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1XaChWaClbMF0sYj1VaCgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6WWgsdXNlU3luY0V4dGVybmFsU3RvcmU6WmgsdXNlSWQ6dGksdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxRaD17cmVhZENvbnRleHQ6cGcsdXNlQ2FsbGJhY2s6cWksdXNlQ29udGV4dDpwZyx1c2VFZmZlY3Q6JGgsXG51c2VJbXBlcmF0aXZlSGFuZGxlOm9pLHVzZUluc2VydGlvbkVmZmVjdDpsaSx1c2VMYXlvdXRFZmZlY3Q6bWksdXNlTWVtbzpyaSx1c2VSZWR1Y2VyOlhoLHVzZVJlZjpoaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBYaChWaCl9LHVzZURlYnVnVmFsdWU6cGksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1YaChWaCksYz1iWzBdLGQ9YlsxXTskaChmdW5jdGlvbigpe3ZhciBiPUdoLnRyYW5zaXRpb247R2gudHJhbnNpdGlvbj17fTt0cnl7ZChhKX1maW5hbGx5e0doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1YaChWaClbMF0sYj1VaCgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6WWgsdXNlU3luY0V4dGVybmFsU3RvcmU6WmgsdXNlSWQ6dGksdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfTtcbmZ1bmN0aW9uIHppKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPU5hKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBBaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gQ2koYSxiLGMpe2M9dWcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGl8fChEaT0hMCxFaT1kKTtBaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIEZpKGEsYixjKXtjPXVnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX07Yy5jYWxsYmFjaz1mdW5jdGlvbigpe0FpKGEsYil9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtBaShhLGIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PUdpP0dpPW5ldyBTZXQoW3RoaXNdKTpHaS5hZGQodGhpcykpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gSGkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO2lmKG51bGw9PT1kKXtkPWEucGluZ0NhY2hlPW5ldyBCaTt2YXIgZT1uZXcgU2V0O2Quc2V0KGIsZSl9ZWxzZSBlPWQuZ2V0KGIpLHZvaWQgMD09PWUmJihlPW5ldyBTZXQsZC5zZXQoYixlKSk7ZS5oYXMoYyl8fChlLmFkZChjKSxhPUlpLmJpbmQobnVsbCxhLGIsYyksYi50aGVuKGEsYSkpfWZ1bmN0aW9uIEppKGEpe2Rve3ZhciBiO2lmKGI9MTM9PT1hLnRhZyliPWEubWVtb2l6ZWRTdGF0ZSxiPW51bGwhPT1iP251bGwhPT1iLmRlaHlkcmF0ZWQ/ITA6ITE6ITA7aWYoYilyZXR1cm4gYTthPWEucmV0dXJufXdoaWxlKG51bGwhPT1hKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIEtpKGEsYixjLGQsZSl7aWYoMD09PShhLm1vZGUmMSkpcmV0dXJuIGE9PT1iP2EuZmxhZ3N8PTY1NTM2OihhLmZsYWdzfD0xMjgsYy5mbGFnc3w9MTMxMDcyLGMuZmxhZ3MmPS01MjgwNSwxPT09Yy50YWcmJihudWxsPT09Yy5hbHRlcm5hdGU/Yy50YWc9MTc6KGI9dWcoLTEsMSksYi50YWc9Mix2ZyhjLGIpKSksYy5sYW5lc3w9MSksYTthLmZsYWdzfD02NTUzNjthLmxhbmVzPWU7cmV0dXJuIGF9dmFyIExpLE1pLE5pLE9pO1xuTGk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O01pPWZ1bmN0aW9uKCl7fTtcbk5pPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTt4aCh1aC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVdhKGEsZSk7ZD1XYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9QSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWRiKGEsZSk7ZD1kYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPXdmKX1yYihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PWwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiZcbihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGRhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHwoYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsXG5jKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihkYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRihcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixjKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07T2k9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07XG5mdW5jdGlvbiBQaShhLGIpe2lmKCFOKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBWKGEpe3ZhciBiPW51bGwhPT1hLmFsdGVybmF0ZSYmYS5hbHRlcm5hdGUuY2hpbGQ9PT1hLmNoaWxkLGM9MCxkPTA7aWYoYilmb3IodmFyIGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQsZHw9ZS5mbGFncyYxNDY4MDA2NCxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Vsc2UgZm9yKGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MsZHw9ZS5mbGFncyxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Euc3VidHJlZUZsYWdzfD1kO2EuY2hpbGRMYW5lcz1jO3JldHVybiBifVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO1dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIFYoYiksbnVsbDtjYXNlIDE6cmV0dXJuIFRmKGIudHlwZSkmJlVmKCksVihiKSxudWxsO2Nhc2UgMzpkPWIuc3RhdGVOb2RlO3poKCk7RyhRZik7RyhJKTtFaCgpO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClmaChiKT9iLmZsYWdzfD00Om51bGw9PT1hfHxhLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYwPT09KGIuZmxhZ3MmMjU2KXx8KGIuZmxhZ3N8PTEwMjQsbnVsbCE9PVpnJiYoUmkoWmcpLFpnPW51bGwpKTtNaShhLGIpO1YoYik7cmV0dXJuIG51bGw7Y2FzZSA1OkJoKGIpO3ZhciBlPXhoKHdoLmN1cnJlbnQpO1xuYz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKU5pKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtWKGIpO3JldHVybiBudWxsfWE9eGgodWguY3VycmVudCk7aWYoZmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbSWZdPWI7ZFtKZl09ZjthPTAhPT0oYi5tb2RlJjEpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RihcImNhbmNlbFwiLGQpO0YoXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8ZmYubGVuZ3RoO2UrKylGKGZmW2VdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixcbmQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WGEoZCxmKTtGKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplYihkLGYpLEYoXCJpbnZhbGlkXCIsZCl9cmIoYyxmKTtlPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKHZmKGQudGV4dENvbnRlbnQsaCxhKSxlPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKHZmKGQudGV4dENvbnRlbnQsaCxhKSxlPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6ZGEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJlwib25TY3JvbGxcIj09PVxuZyYmRihcInNjcm9sbFwiLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpUYShkKTthYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlRhKGQpO2diKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPXdmKX1kPWU7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YSYmKGE9aGIoYykpO1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTpcbihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVtJZl09YjthW0pmXT1kO0xpKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTthOntnPXNiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpGKFwiY2FuY2VsXCIsYSk7RihcImNsb3NlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGZmLmxlbmd0aDtlKyspRihmZltlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixcbmEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpYYShhLGQpO2U9V2EoYSxkKTtGKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWQ7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplYihhLGQpO2U9ZGIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXJiKGMsZSk7aD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3BiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZrYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Y3x8XCJcIiE9PWspJiZsYihhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmbGIoYSxcblwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGRhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkYoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZyYShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlRhKGEpO2FiKGEsZCwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VGEoYSk7Z2IoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1FhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/Y2IoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmNiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLm9uQ2xpY2smJlxuKGEub25jbGljaz13Zil9c3dpdGNoKGMpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ZD0hIWQuYXV0b0ZvY3VzO2JyZWFrIGE7Y2FzZSBcImltZ1wiOmQ9ITA7YnJlYWsgYTtkZWZhdWx0OmQ9ITF9fWQmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mil9VihiKTtyZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpT2koYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7Yz14aCh3aC5jdXJyZW50KTt4aCh1aC5jdXJyZW50KTtpZihmaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIubWVtb2l6ZWRQcm9wcztkW0lmXT1iO2lmKGY9ZC5ub2RlVmFsdWUhPT1jKWlmKGE9WGcsbnVsbCE9PWEpc3dpdGNoKGc9MCE9PShhLm1vZGUmMSksYS50YWcpe2Nhc2UgMzp2ZihkLm5vZGVWYWx1ZSxcbmMsZyk7YnJlYWs7Y2FzZSA1OiEwIT09YS5tZW1vaXplZFByb3BzW3ZvaWQgMF0mJnZmKGQubm9kZVZhbHVlLGMsZyl9ZiYmKGIuZmxhZ3N8PTQpfWVsc2UgZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbSWZdPWIsYi5zdGF0ZU5vZGU9ZH1WKGIpO3JldHVybiBudWxsO2Nhc2UgMTM6RyhQKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihOJiZudWxsIT09WWcmJjAhPT0oYi5tb2RlJjEpJiYwPT09KGIuZmxhZ3MmMTI4KSl7Zm9yKGQ9WWc7ZDspZD1GZihkLm5leHRTaWJsaW5nKTtnaCgpO2IuZmxhZ3N8PTk4NTYwO3JldHVybiBifWlmKG51bGwhPT1kJiZudWxsIT09ZC5kZWh5ZHJhdGVkKXtkPWZoKGIpO2lmKG51bGw9PT1hKXtpZighZCl0aHJvdyBFcnJvcihwKDMxOCkpO2Q9Yi5tZW1vaXplZFN0YXRlO2Q9bnVsbCE9PWQ/ZC5kZWh5ZHJhdGVkOm51bGw7aWYoIWQpdGhyb3cgRXJyb3IocCgzMTcpKTtkW0lmXT1ifWVsc2UgZ2goKSwwPT09XG4oYi5mbGFncyYxMjgpJiYoYi5tZW1vaXplZFN0YXRlPW51bGwpLGIuZmxhZ3N8PTQ7VihiKTtyZXR1cm4gbnVsbH1udWxsIT09WmcmJihSaShaZyksWmc9bnVsbCk7aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT9maChiKTpjPW51bGwhPT1hLm1lbW9pemVkU3RhdGU7ZCYmIWMmJihiLmNoaWxkLmZsYWdzfD04MTkyLDAhPT0oYi5tb2RlJjEpJiYobnVsbD09PWF8fDAhPT0oUC5jdXJyZW50JjEpPzA9PT1XJiYoVz0zKTpTaSgpKSk7bnVsbCE9PWIudXBkYXRlUXVldWUmJihiLmZsYWdzfD00KTtWKGIpO3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gemgoKSxNaShhLGIpLG51bGw9PT1hJiZuZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxWKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gbGcoYi50eXBlLl9jb250ZXh0KSxWKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gVGYoYi50eXBlKSYmVWYoKSxWKGIpLG51bGw7Y2FzZSAxOTpHKFApO1xuZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWYpcmV0dXJuIFYoYiksbnVsbDtkPTAhPT0oYi5mbGFncyYxMjgpO2c9Zi5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZClQaShmLCExKTtlbHNle2lmKDAhPT1XfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9Q2goYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTEyODtQaShmLCExKTtkPWcudXBkYXRlUXVldWU7bnVsbCE9PWQmJihiLnVwZGF0ZVF1ZXVlPWQsYi5mbGFnc3w9NCk7Yi5zdWJ0cmVlRmxhZ3M9MDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0xNDY4MDA2NixnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYuc3VidHJlZUZsYWdzPTAsZi5tZW1vaXplZFByb3BzPW51bGwsZi5tZW1vaXplZFN0YXRlPW51bGwsZi51cGRhdGVRdWV1ZT1udWxsLGYuZGVwZW5kZW5jaWVzPW51bGwsXG5mLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYuc3VidHJlZUZsYWdzPTAsZi5kZWxldGlvbnM9bnVsbCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxmLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0goUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09Zi50YWlsJiZEKCk+VGkmJihiLmZsYWdzfD0xMjgsZD0hMCxQaShmLCExKSxiLmxhbmVzPTQxOTQzMDQpfWVsc2V7aWYoIWQpaWYoYT1DaChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9MTI4LGQ9ITAsYz1hLnVwZGF0ZVF1ZXVlLFxubnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksUGkoZiwhMCksbnVsbD09PWYudGFpbCYmXCJoaWRkZW5cIj09PWYudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIU4pcmV0dXJuIFYoYiksbnVsbH1lbHNlIDIqRCgpLWYucmVuZGVyaW5nU3RhcnRUaW1lPlRpJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PTEyOCxkPSEwLFBpKGYsITEpLGIubGFuZXM9NDE5NDMwNCk7Zi5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1mLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGYubGFzdD1nKX1pZihudWxsIT09Zi50YWlsKXJldHVybiBiPWYudGFpbCxmLnJlbmRlcmluZz1iLGYudGFpbD1iLnNpYmxpbmcsZi5yZW5kZXJpbmdTdGFydFRpbWU9RCgpLGIuc2libGluZz1udWxsLGM9UC5jdXJyZW50LEgoUCxkP2MmMXwyOmMmMSksYjtWKGIpO3JldHVybiBudWxsO2Nhc2UgMjI6Y2FzZSAyMzpyZXR1cm4gVWkoKSxkPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PWQmJihiLmZsYWdzfD04MTkyKSxkJiYwIT09KGIubW9kZSYxKT8wIT09KFZpJjEwNzM3NDE4MjQpJiYoVihiKSxiLnN1YnRyZWVGbGFncyY2JiYoYi5mbGFnc3w9ODE5MikpOlYoYiksbnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9dmFyIFdpPXNhLlJlYWN0Q3VycmVudE93bmVyLG9nPSExO2Z1bmN0aW9uIFhpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/c2goYixudWxsLGMsZCk6cmgoYixhLmNoaWxkLGMsZCl9XG5mdW5jdGlvbiBZaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7bmcoYixlKTtkPU5oKGEsYixjLGQsZixlKTtjPVNoKCk7aWYobnVsbCE9PWEmJiFvZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLFppKGEsYixlKTtOJiZjJiZWZyhiKTtiLmZsYWdzfD0xO1hpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGkoYSxiLGMsZCxlKXtpZihudWxsPT09YSl7dmFyIGY9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYhYWooZikmJnZvaWQgMD09PWYuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWYsYmooYSxiLGYsZCxlKTthPW9oKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZSk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWY9YS5jaGlsZDtpZigwPT09KGEubGFuZXMmZSkpe3ZhciBnPWYubWVtb2l6ZWRQcm9wcztjPWMuY29tcGFyZTtjPW51bGwhPT1jP2M6RGU7aWYoYyhnLGQpJiZhLnJlZj09PWIucmVmKXJldHVybiBaaShhLGIsZSl9Yi5mbGFnc3w9MTthPW1oKGYsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gYmooYSxiLGMsZCxlKXtpZihudWxsIT09YSYmRGUoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmKWlmKG9nPSExLDAhPT0oYS5sYW5lcyZlKSkwIT09KGEuZmxhZ3MmMTMxMDcyKSYmKG9nPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsWmkoYSxiLGUpO3JldHVybiBjaihhLGIsYyxkLGUpfVxuZnVuY3Rpb24gZGooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbH0sSChlaixWaSksVml8PWM7ZWxzZSBpZigwIT09KGMmMTA3Mzc0MTgyNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbH0sZD1udWxsIT09Zj9mLmJhc2VMYW5lczpjLEgoZWosVmkpLFZpfD1kO2Vsc2UgcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YSxjYWNoZVBvb2w6bnVsbH0sYi51cGRhdGVRdWV1ZT1udWxsLEgoZWosVmkpLFZpfD1hLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpcbmQ9YyxIKGVqLFZpKSxWaXw9ZDtYaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBmaihhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mn1mdW5jdGlvbiBjaihhLGIsYyxkLGUpe3ZhciBmPVRmKGMpP1JmOkkuY3VycmVudDtmPVNmKGIsZik7bmcoYixlKTtjPU5oKGEsYixjLGQsZixlKTtkPVNoKCk7aWYobnVsbCE9PWEmJiFvZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLFppKGEsYixlKTtOJiZkJiZWZyhiKTtiLmZsYWdzfD0xO1hpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZ2ooYSxiLGMsZCxlKXtpZihUZihjKSl7dmFyIGY9ITA7WGYoYil9ZWxzZSBmPSExO25nKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLEhnKGIsYyxkKSxKZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1wZyhsKToobD1UZihjKT9SZjpJLmN1cnJlbnQsbD1TZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyx3PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTt3fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmSWcoYixnLGQsbCk7cmc9ITE7dmFyIHU9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9dTt5ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8dSE9PWt8fFFmLmN1cnJlbnR8fHJnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKENnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD1yZ3x8R2coYixjLGgsZCx1LGssbCkpPyh3fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7dGcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpmZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO3c9Yi5wZW5kaW5nUHJvcHM7dT1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1wZyhrKTooaz1UZihjKT9SZjpJLmN1cnJlbnQsaz1TZihiLGspKTt2YXIgeT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobT1cImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiB5fHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PXd8fHUhPT1rKSYmSWcoYixnLGQsayk7cmc9ITE7dT1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT11O3lnKGIsZCxnLGUpO3ZhciBuPWIubWVtb2l6ZWRTdGF0ZTtoIT09d3x8dSE9PW58fFFmLmN1cnJlbnR8fHJnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgeSYmKENnKGIsYyx5LGQpLG49Yi5tZW1vaXplZFN0YXRlKSwobD1yZ3x8R2coYixjLGwsZCx1LG4sayl8fCExKT8obXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZcbmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLG4sayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTEwMjQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9biksZy5wcm9wcz1kLGcuc3RhdGU9bixnLmNvbnRleHQ9XG5rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmdT09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksZD0hMSl9cmV0dXJuIGhqKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGhqKGEsYixjLGQsZSxmKXtmaihhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyYxMjgpO2lmKCFkJiYhZylyZXR1cm4gZSYmWWYoYixjLCExKSxaaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtXaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPXJoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9cmgoYixudWxsLGgsZikpOlhpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJllmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaWooYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9WZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZWZihhLGIuY29udGV4dCwhMSk7eWgoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gamooYSxiLGMsZCxlKXtnaCgpO2hoKGUpO2IuZmxhZ3N8PTI1NjtYaShhLGIsYyxkKTtyZXR1cm4gYi5jaGlsZH12YXIga2o9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfTtmdW5jdGlvbiBsaihhKXtyZXR1cm57YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGx9fVxuZnVuY3Rpb24gbWooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZz0wIT09KGIuZmxhZ3MmMTI4KSxoOyhoPWcpfHwoaD1udWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZT8hMTowIT09KGUmMikpO2lmKGgpZj0hMCxiLmZsYWdzJj0tMTI5O2Vsc2UgaWYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpZXw9MTtIKFAsZSYxKTtpZihudWxsPT09YSl7ZGgoYik7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJihhPWEuZGVoeWRyYXRlZCxudWxsIT09YSkpcmV0dXJuIDA9PT0oYi5tb2RlJjEpP2IubGFuZXM9MTpcIiQhXCI9PT1hLmRhdGE/Yi5sYW5lcz04OmIubGFuZXM9MTA3Mzc0MTgyNCxudWxsO2U9ZC5jaGlsZHJlbjthPWQuZmFsbGJhY2s7cmV0dXJuIGY/KGQ9Yi5tb2RlLGY9Yi5jaGlsZCxlPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46ZX0sMD09PShkJjEpJiZudWxsIT09Zj8oZi5jaGlsZExhbmVzPTAsZi5wZW5kaW5nUHJvcHM9XG5lKTpmPW5qKGUsZCwwLG51bGwpLGE9cWgoYSxkLGMsbnVsbCksZi5yZXR1cm49YixhLnJldHVybj1iLGYuc2libGluZz1hLGIuY2hpbGQ9ZixiLmNoaWxkLm1lbW9pemVkU3RhdGU9bGooYyksYi5tZW1vaXplZFN0YXRlPWtqLGEpOm9qKGIsZSl9ZT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2g9ZS5kZWh5ZHJhdGVkO2lmKG51bGwhPT1oKXtpZihnKXtpZihiLmZsYWdzJjI1NilyZXR1cm4gYi5mbGFncyY9LTI1NyxwaihhLGIsYyxFcnJvcihwKDQyMikpKTtpZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXJldHVybiBiLmNoaWxkPWEuY2hpbGQsYi5mbGFnc3w9MTI4LG51bGw7Zj1kLmZhbGxiYWNrO2U9Yi5tb2RlO2Q9bmooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn0sZSwwLG51bGwpO2Y9cWgoZixlLGMsbnVsbCk7Zi5mbGFnc3w9MjtkLnJldHVybj1iO2YucmV0dXJuPWI7ZC5zaWJsaW5nPWY7Yi5jaGlsZD1kOzAhPT0oYi5tb2RlJjEpJiZyaChiLGEuY2hpbGQsXG5udWxsLGMpO2IuY2hpbGQubWVtb2l6ZWRTdGF0ZT1saihjKTtiLm1lbW9pemVkU3RhdGU9a2o7cmV0dXJuIGZ9aWYoMD09PShiLm1vZGUmMSkpYj1waihhLGIsYyxudWxsKTtlbHNlIGlmKFwiJCFcIj09PWguZGF0YSliPXBqKGEsYixjLEVycm9yKHAoNDE5KSkpO2Vsc2UgaWYoZD0wIT09KGMmYS5jaGlsZExhbmVzKSxvZ3x8ZCl7ZD1KO2lmKG51bGwhPT1kKXtzd2l0Y2goYyYtYyl7Y2FzZSA0OmY9MjticmVhaztjYXNlIDE2OmY9ODticmVhaztjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOmNhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6Zj0zMjticmVhaztjYXNlIDUzNjg3MDkxMjpmPVxuMjY4NDM1NDU2O2JyZWFrO2RlZmF1bHQ6Zj0wfWQ9MCE9PShmJihkLnN1c3BlbmRlZExhbmVzfGMpKT8wOmY7MCE9PWQmJmQhPT1lLnJldHJ5TGFuZSYmKGUucmV0cnlMYW5lPWQsRWcoYSxkLC0xKSl9U2koKTtiPXBqKGEsYixjLEVycm9yKHAoNDIxKSkpfWVsc2VcIiQ/XCI9PT1oLmRhdGE/KGIuZmxhZ3N8PTEyOCxiLmNoaWxkPWEuY2hpbGQsYj1xai5iaW5kKG51bGwsYSksaC5fcmVhY3RSZXRyeT1iLGI9bnVsbCk6KGM9ZS50cmVlQ29udGV4dCxZZz1GZihoLm5leHRTaWJsaW5nKSxYZz1iLE49ITAsWmc9bnVsbCxudWxsIT09YyYmKE9nW1BnKytdPVJnLE9nW1BnKytdPVNnLE9nW1BnKytdPVFnLFJnPWMuaWQsU2c9Yy5vdmVyZmxvdyxRZz1iKSxiPW9qKGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4pLGIuZmxhZ3N8PTQwOTYpO3JldHVybiBifWlmKGYpcmV0dXJuIGQ9cmooYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsXG5mLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/bGooYyk6e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjLGNhY2hlUG9vbDpudWxsfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1raixkO2M9c2ooYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD1yaihhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/bGooYyk6e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjLGNhY2hlUG9vbDpudWxsfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1raixkO2M9c2ooYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9XG5mdW5jdGlvbiBvaihhLGIpe2I9bmooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Yn0sYS5tb2RlLDAsbnVsbCk7Yi5yZXR1cm49YTtyZXR1cm4gYS5jaGlsZD1ifWZ1bmN0aW9uIHNqKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1taChlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYxKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGQ9Yi5kZWxldGlvbnMsbnVsbD09PWQ/KGIuZGVsZXRpb25zPVthXSxiLmZsYWdzfD0xNik6ZC5wdXNoKGEpKTtyZXR1cm4gYi5jaGlsZD1jfVxuZnVuY3Rpb24gcmooYSxiLGMsZCxlKXt2YXIgZj1iLm1vZGU7YT1hLmNoaWxkO3ZhciBnPWEuc2libGluZyxoPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Y307MD09PShmJjEpJiZiLmNoaWxkIT09YT8oYz1iLmNoaWxkLGMuY2hpbGRMYW5lcz0wLGMucGVuZGluZ1Byb3BzPWgsYi5kZWxldGlvbnM9bnVsbCk6KGM9bWgoYSxoKSxjLnN1YnRyZWVGbGFncz1hLnN1YnRyZWVGbGFncyYxNDY4MDA2NCk7bnVsbCE9PWc/ZD1taChnLGQpOihkPXFoKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24gcGooYSxiLGMsZCl7bnVsbCE9PWQmJmhoKGQpO3JoKGIsYS5jaGlsZCxudWxsLGMpO2E9b2ooYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbik7YS5mbGFnc3w9MjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRqKGEsYixjKXthLmxhbmVzfD1iO3ZhciBkPWEuYWx0ZXJuYXRlO251bGwhPT1kJiYoZC5sYW5lc3w9Yik7bWcoYS5yZXR1cm4sYixjKX1mdW5jdGlvbiB1aihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zj9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplfTooZi5pc0JhY2t3YXJkcz1iLGYucmVuZGVyaW5nPW51bGwsZi5yZW5kZXJpbmdTdGFydFRpbWU9MCxmLmxhc3Q9ZCxmLnRhaWw9YyxmLnRhaWxNb2RlPWUpfVxuZnVuY3Rpb24gdmooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtYaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD0xMjg7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ0aihhLGMsYik7ZWxzZSBpZigxOT09PWEudGFnKXRqKGEsYyxiKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SChQLGQpO2lmKDA9PT0oYi5tb2RlJjEpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1DaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3VqKGIsITEsZSxjLGYpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09Q2goYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXVqKGIsITAsYyxudWxsLGYpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnVqKGIsITEsbnVsbCxudWxsLHZvaWQgMCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFppKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt6Z3w9Yi5sYW5lcztpZigwPT09KGMmYi5jaGlsZExhbmVzKSlyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IocCgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9bWgoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPW1oKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB3aihhLGIsYyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6aWooYik7Z2goKTticmVhaztjYXNlIDU6QWgoYik7YnJlYWs7Y2FzZSAxOlRmKGIudHlwZSkmJlhmKGIpO2JyZWFrO2Nhc2UgNDp5aChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5tZW1vaXplZFByb3BzLnZhbHVlO0goZ2csZC5fY3VycmVudFZhbHVlKTtkLl9jdXJyZW50VmFsdWU9ZTticmVhaztjYXNlIDEzOmQ9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kKXtpZihudWxsIT09ZC5kZWh5ZHJhdGVkKXJldHVybiBIKFAsUC5jdXJyZW50JjEpLGIuZmxhZ3N8PTEyOCxudWxsO2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiBtaihhLGIsYyk7SChQLFAuY3VycmVudCYxKTthPVppKGEsYixjKTtyZXR1cm4gbnVsbCE9PWE/YS5zaWJsaW5nOm51bGx9SChQLFAuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJlxuYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmMTI4KSl7aWYoZClyZXR1cm4gdmooYSxiLGMpO2IuZmxhZ3N8PTEyOH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0goUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIGIubGFuZXM9MCxkaihhLGIsYyl9cmV0dXJuIFppKGEsYixjKX1cbmZ1bmN0aW9uIHhqKGEsYil7V2coYik7c3dpdGNoKGIudGFnKXtjYXNlIDE6cmV0dXJuIFRmKGIudHlwZSkmJlVmKCksYT1iLmZsYWdzLGEmNjU1MzY/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSAzOnJldHVybiB6aCgpLEcoUWYpLEcoSSksRWgoKSxhPWIuZmxhZ3MsMCE9PShhJjY1NTM2KSYmMD09PShhJjEyOCk/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSA1OnJldHVybiBCaChiKSxudWxsO2Nhc2UgMTM6RyhQKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7aWYobnVsbD09PWIuYWx0ZXJuYXRlKXRocm93IEVycm9yKHAoMzQwKSk7Z2goKX1hPWIuZmxhZ3M7cmV0dXJuIGEmNjU1MzY/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSAxOTpyZXR1cm4gRyhQKSxudWxsO2Nhc2UgNDpyZXR1cm4gemgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIGxnKGIudHlwZS5fY29udGV4dCksbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIFVpKCksXG5udWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19dmFyIHlqPSExLHpqPSExLEFqPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0LFg9bnVsbDtmdW5jdGlvbiBCaihhLGIpe3ZhciBjPWEucmVmO2lmKG51bGwhPT1jKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjKXRyeXtjKG51bGwpfWNhdGNoKGQpe0NqKGEsYixkKX1lbHNlIGMuY3VycmVudD1udWxsfWZ1bmN0aW9uIERqKGEsYixjKXt0cnl7YygpfWNhdGNoKGQpe0NqKGEsYixkKX19dmFyIEVqPSExO1xuZnVuY3Rpb24gRmooYSxiKXthPUhlKCk7aWYoSWUoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGM9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2M9KGM9YS5vd25lckRvY3VtZW50KSYmYy5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBkPWMuZ2V0U2VsZWN0aW9uJiZjLmdldFNlbGVjdGlvbigpO2lmKGQmJjAhPT1kLnJhbmdlQ291bnQpe2M9ZC5hbmNob3JOb2RlO3ZhciBlPWQuYW5jaG9yT2Zmc2V0LGY9ZC5mb2N1c05vZGU7ZD1kLmZvY3VzT2Zmc2V0O3RyeXtjLm5vZGVUeXBlLGYubm9kZVR5cGV9Y2F0Y2goTyl7Yz1udWxsO2JyZWFrIGF9dmFyIGc9MCxoPS0xLGs9LTEsbD0wLG09MCx3PWEsdT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHk7Oyl7dyE9PWN8fDAhPT1lJiYzIT09dy5ub2RlVHlwZXx8KGg9ZytlKTt3IT09Znx8MCE9PWQmJjMhPT13Lm5vZGVUeXBlfHwoaz1nK2QpOzM9PT13Lm5vZGVUeXBlJiYoZys9dy5ub2RlVmFsdWUubGVuZ3RoKTtcbmlmKG51bGw9PT0oeT13LmZpcnN0Q2hpbGQpKWJyZWFrO3U9dzt3PXl9Zm9yKDs7KXtpZih3PT09YSlicmVhayBiO3U9PT1jJiYrK2w9PT1lJiYoaD1nKTt1PT09ZiYmKyttPT09ZCYmKGs9Zyk7aWYobnVsbCE9PSh5PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9dTt1PXcucGFyZW50Tm9kZX13PXl9Yz0tMT09PWh8fC0xPT09az9udWxsOntzdGFydDpoLGVuZDprfX1lbHNlIGM9bnVsbH1jPWN8fHtzdGFydDowLGVuZDowfX1lbHNlIGM9bnVsbDt4Zj17Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpjfTtmb3IoWD1iO251bGwhPT1YOylpZihiPVgsYT1iLmNoaWxkLDAhPT0oYi5zdWJ0cmVlRmxhZ3MmMTAyOCkmJm51bGwhPT1hKWEucmV0dXJuPWIsWD1hO2Vsc2UgZm9yKDtudWxsIT09WDspe2I9WDt0cnl7dmFyIG49Yi5hbHRlcm5hdGU7aWYoMCE9PShiLmZsYWdzJjEwMjQpKXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhaztjYXNlIDE6aWYobnVsbCE9PVxubil7dmFyIHY9bi5tZW1vaXplZFByb3BzLEM9bi5tZW1vaXplZFN0YXRlLHQ9Yi5zdGF0ZU5vZGUscj10LmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/djpmZyhiLnR5cGUsdiksQyk7dC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1yfWJyZWFrO2Nhc2UgMzp2YXIgeD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKDE9PT14Lm5vZGVUeXBlKXgudGV4dENvbnRlbnQ9XCJcIjtlbHNlIGlmKDk9PT14Lm5vZGVUeXBlKXt2YXIgQj14LmJvZHk7bnVsbCE9QiYmKEIudGV4dENvbnRlbnQ9XCJcIil9YnJlYWs7Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fX1jYXRjaChPKXtDaihiLGIucmV0dXJuLE8pfWE9Yi5zaWJsaW5nO2lmKG51bGwhPT1hKXthLnJldHVybj1iLnJldHVybjtYPWE7YnJlYWt9WD1iLnJldHVybn1uPUVqO0VqPSExO3JldHVybiBufVxuZnVuY3Rpb24gR2ooYSxiLGMpe3ZhciBkPWIudXBkYXRlUXVldWU7ZD1udWxsIT09ZD9kLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09ZCl7dmFyIGU9ZD1kLm5leHQ7ZG97aWYoKGUudGFnJmEpPT09YSl7dmFyIGY9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZiYmRGooYixjLGYpfWU9ZS5uZXh0fXdoaWxlKGUhPT1kKX19ZnVuY3Rpb24gSGooYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKXt2YXIgYz1hLnN0YXRlTm9kZTtzd2l0Y2goYS50YWcpe2Nhc2UgNTphPWM7YnJlYWs7ZGVmYXVsdDphPWN9XCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpiLmN1cnJlbnQ9YX19XG5mdW5jdGlvbiBKaihhLGIsYyl7aWYoaWMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBpYy5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7aWMub25Db21taXRGaWJlclVubW91bnQoaGMsYil9Y2F0Y2goZyl7fXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YT1hLm5leHQ7ZG97dmFyIGU9ZCxmPWUuZGVzdHJveTtlPWUudGFnO3ZvaWQgMCE9PWYmJigwIT09KGUmMik/RGooYixjLGYpOjAhPT0oZSY0KSYmRGooYixjLGYpKTtkPWQubmV4dH13aGlsZShkIT09YSl9YnJlYWs7Y2FzZSAxOkJqKGIsYyk7YT1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7YS5wcm9wcz1iLm1lbW9pemVkUHJvcHMsYS5zdGF0ZT1iLm1lbW9pemVkU3RhdGUsYS5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGcpe0NqKGIsXG5jLGcpfWJyZWFrO2Nhc2UgNTpCaihiLGMpO2JyZWFrO2Nhc2UgNDpLaihhLGIsYyl9fWZ1bmN0aW9uIExqKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO251bGwhPT1iJiYoYS5hbHRlcm5hdGU9bnVsbCxMaihiKSk7YS5jaGlsZD1udWxsO2EuZGVsZXRpb25zPW51bGw7YS5zaWJsaW5nPW51bGw7NT09PWEudGFnJiYoYj1hLnN0YXRlTm9kZSxudWxsIT09YiYmKGRlbGV0ZSBiW0lmXSxkZWxldGUgYltKZl0sZGVsZXRlIGJbamZdLGRlbGV0ZSBiW0tmXSxkZWxldGUgYltMZl0pKTthLnN0YXRlTm9kZT1udWxsO2EucmV0dXJuPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIE1qKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gTmooYSl7YTpmb3IoOzspe2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8TWooYS5yZXR1cm4pKXJldHVybiBudWxsO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjtmb3IoYT1hLnNpYmxpbmc7NSE9PWEudGFnJiY2IT09YS50YWcmJjE4IT09YS50YWc7KXtpZihhLmZsYWdzJjIpY29udGludWUgYTtpZihudWxsPT09YS5jaGlsZHx8ND09PWEudGFnKWNvbnRpbnVlIGE7ZWxzZSBhLmNoaWxkLnJldHVybj1hLGE9YS5jaGlsZH1pZighKGEuZmxhZ3MmMikpcmV0dXJuIGEuc3RhdGVOb2RlfX1cbmZ1bmN0aW9uIE9qKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE1qKGIpKWJyZWFrIGE7Yj1iLnJldHVybn10aHJvdyBFcnJvcihwKDE2MCkpO312YXIgYz1iO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7Yy5mbGFncyYzMiYmKGxiKGIsXCJcIiksYy5mbGFncyY9LTMzKTtjPU5qKGEpO1BqKGEsYyxiKTticmVhaztjYXNlIDM6Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztjPU5qKGEpO1FqKGEsYyxiKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYxKSk7fX1cbmZ1bmN0aW9uIFFqKGEsYixjKXt2YXIgZD1hLnRhZztpZig1PT09ZHx8Nj09PWQpYT1hLnN0YXRlTm9kZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz13ZikpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFBqKGEsYixjKXt2YXIgZD1hLnRhZztpZig1PT09ZHx8Nj09PWQpYT1hLnN0YXRlTm9kZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUGooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylQaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBLaihhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHAoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEpqKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDE4PT09ZC50YWcpZz8oaD1mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/RWYoaC5wYXJlbnROb2RlLGspOjE9PT1oLm5vZGVUeXBlJiZFZihoLGspLFljKGgpKTpFZihmLGQuc3RhdGVOb2RlKTtlbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEpqKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiZcbihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFJqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6R2ooMyxiLGIucmV0dXJuKTtIaigzLGIpO0dqKDUsYixiLnJldHVybik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmWWEoYyxkKTtzYihhLGUpO2I9c2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3BiKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9rYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/bGIoYyxoKTpyYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6WmEoYyxcbmQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmZiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/Y2IoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2NiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpjYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX1jW0pmXT1kfX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpudWxsIT09YSYmYS5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmWWMoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6U2ooYik7XG5yZXR1cm47Y2FzZSAxOTpTaihiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IocCgxNjMpKTt9ZnVuY3Rpb24gU2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQWopO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1Uai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIFVqKGEsYil7Zm9yKFg9YjtudWxsIT09WDspe2I9WDt2YXIgYz1iLmRlbGV0aW9ucztpZihudWxsIT09Yylmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTt0cnl7S2ooYSxlLGIpO3ZhciBmPWUuYWx0ZXJuYXRlO251bGwhPT1mJiYoZi5yZXR1cm49bnVsbCk7ZS5yZXR1cm49bnVsbH1jYXRjaChMKXtDaihlLGIsTCl9fWM9Yi5jaGlsZDtpZigwIT09KGIuc3VidHJlZUZsYWdzJjEyODU0KSYmbnVsbCE9PWMpYy5yZXR1cm49YixYPWM7ZWxzZSBmb3IoO251bGwhPT1YOyl7Yj1YO3RyeXt2YXIgZz1iLmZsYWdzO2cmMzImJmxiKGIuc3RhdGVOb2RlLFwiXCIpO2lmKGcmNTEyKXt2YXIgaD1iLmFsdGVybmF0ZTtpZihudWxsIT09aCl7dmFyIGs9aC5yZWY7bnVsbCE9PWsmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygaz9rKG51bGwpOmsuY3VycmVudD1udWxsKX19aWYoZyY4MTkyKXN3aXRjaChiLnRhZyl7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXt2YXIgbD1cbmIuYWx0ZXJuYXRlO2lmKG51bGw9PT1sfHxudWxsPT09bC5tZW1vaXplZFN0YXRlKVZqPUQoKX1icmVhaztjYXNlIDIyOnZhciBtPW51bGwhPT1iLm1lbW9pemVkU3RhdGUsdz1iLmFsdGVybmF0ZSx1PW51bGwhPT13JiZudWxsIT09dy5tZW1vaXplZFN0YXRlO2M9YjthOntkPWM7ZT1tO2Zvcih2YXIgeT1udWxsLG49ZDs7KXtpZig1PT09bi50YWcpe2lmKG51bGw9PT15KXt5PW47dmFyIHY9bi5zdGF0ZU5vZGU7aWYoZSl7dmFyIEM9di5zdHlsZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgQy5zZXRQcm9wZXJ0eT9DLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOkMuZGlzcGxheT1cIm5vbmVcIn1lbHNle3ZhciB0PW4uc3RhdGVOb2RlLHI9bi5tZW1vaXplZFByb3BzLnN0eWxlLHg9dm9pZCAwIT09ciYmbnVsbCE9PXImJnIuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP3IuZGlzcGxheTpudWxsO3Quc3R5bGUuZGlzcGxheT1vYihcImRpc3BsYXlcIix4KX19fWVsc2UgaWYoNj09PVxubi50YWcpbnVsbD09PXkmJihuLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZT9cIlwiOm4ubWVtb2l6ZWRQcm9wcyk7ZWxzZSBpZigoMjIhPT1uLnRhZyYmMjMhPT1uLnRhZ3x8bnVsbD09PW4ubWVtb2l6ZWRTdGF0ZXx8bj09PWQpJiZudWxsIT09bi5jaGlsZCl7bi5jaGlsZC5yZXR1cm49bjtuPW4uY2hpbGQ7Y29udGludWV9aWYobj09PWQpYnJlYWs7Zm9yKDtudWxsPT09bi5zaWJsaW5nOyl7aWYobnVsbD09PW4ucmV0dXJufHxuLnJldHVybj09PWQpYnJlYWsgYTt5PT09biYmKHk9bnVsbCk7bj1uLnJldHVybn15PT09biYmKHk9bnVsbCk7bi5zaWJsaW5nLnJldHVybj1uLnJldHVybjtuPW4uc2libGluZ319aWYobSYmIXUmJjAhPT0oYy5tb2RlJjEpKXtYPWM7Zm9yKHZhciBCPWMuY2hpbGQ7bnVsbCE9PUI7KXtmb3IoYz1YPUI7bnVsbCE9PVg7KXtkPVg7dmFyIE89ZC5jaGlsZDtzd2l0Y2goZC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpHaig0LGQsZC5yZXR1cm4pO2JyZWFrO1xuY2FzZSAxOkJqKGQsZC5yZXR1cm4pO3ZhciBUPWQuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBULmNvbXBvbmVudFdpbGxVbm1vdW50KXt2YXIgemE9ZC5yZXR1cm47dHJ5e1QucHJvcHM9ZC5tZW1vaXplZFByb3BzLFQuc3RhdGU9ZC5tZW1vaXplZFN0YXRlLFQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChMKXtDaihkLHphLEwpfX1icmVhaztjYXNlIDU6QmooZCxkLnJldHVybik7YnJlYWs7Y2FzZSAyMjppZihudWxsIT09ZC5tZW1vaXplZFN0YXRlKXtXaihjKTtjb250aW51ZX19bnVsbCE9PU8/KE8ucmV0dXJuPWQsWD1PKTpXaihjKX1CPUIuc2libGluZ319fXN3aXRjaChnJjQxMDIpe2Nhc2UgMjpPaihiKTtiLmZsYWdzJj0tMzticmVhaztjYXNlIDY6T2ooYik7Yi5mbGFncyY9LTM7UmooYi5hbHRlcm5hdGUsYik7YnJlYWs7Y2FzZSA0MDk2OmIuZmxhZ3MmPS00MDk3O2JyZWFrO2Nhc2UgNDEwMDpiLmZsYWdzJj0tNDA5NztSaihiLmFsdGVybmF0ZSxiKTtcbmJyZWFrO2Nhc2UgNDpSaihiLmFsdGVybmF0ZSxiKX19Y2F0Y2goTCl7Q2ooYixiLnJldHVybixMKX1jPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47WD1jO2JyZWFrfVg9Yi5yZXR1cm59fX1mdW5jdGlvbiBYaihhLGIsYyl7WD1hO1lqKGEsYixjKX1cbmZ1bmN0aW9uIFlqKGEsYixjKXtmb3IodmFyIGQ9MCE9PShhLm1vZGUmMSk7bnVsbCE9PVg7KXt2YXIgZT1YLGY9ZS5jaGlsZDtpZigyMj09PWUudGFnJiZkKXt2YXIgZz1udWxsIT09ZS5tZW1vaXplZFN0YXRlfHx5ajtpZighZyl7dmFyIGg9ZS5hbHRlcm5hdGUsaz1udWxsIT09aCYmbnVsbCE9PWgubWVtb2l6ZWRTdGF0ZXx8emo7aD15ajt2YXIgbD16ajt5aj1nO2lmKCh6aj1rKSYmIWwpZm9yKFg9ZTtudWxsIT09WDspZz1YLGs9Zy5jaGlsZCwyMj09PWcudGFnJiZudWxsIT09Zy5tZW1vaXplZFN0YXRlP1pqKGUpOm51bGwhPT1rPyhrLnJldHVybj1nLFg9ayk6WmooZSk7Zm9yKDtudWxsIT09ZjspWD1mLFlqKGYsYixjKSxmPWYuc2libGluZztYPWU7eWo9aDt6aj1sfWFrKGEsYixjKX1lbHNlIDAhPT0oZS5zdWJ0cmVlRmxhZ3MmODc3MikmJm51bGwhPT1mPyhmLnJldHVybj1lLFg9Zik6YWsoYSxiLGMpfX1cbmZ1bmN0aW9uIGFrKGEpe2Zvcig7bnVsbCE9PVg7KXt2YXIgYj1YO2lmKDAhPT0oYi5mbGFncyY4NzcyKSl7dmFyIGM9Yi5hbHRlcm5hdGU7dHJ5e2lmKDAhPT0oYi5mbGFncyY4NzcyKSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6emp8fEhqKDUsYik7YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKGIuZmxhZ3MmNCYmIXpqKWlmKG51bGw9PT1jKWQuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBlPWIuZWxlbWVudFR5cGU9PT1iLnR5cGU/Yy5tZW1vaXplZFByb3BzOmZnKGIudHlwZSxjLm1lbW9pemVkUHJvcHMpO2QuY29tcG9uZW50RGlkVXBkYXRlKGUsYy5tZW1vaXplZFN0YXRlLGQuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfXZhciBmPWIudXBkYXRlUXVldWU7bnVsbCE9PWYmJkFnKGIsZixkKTticmVhaztjYXNlIDM6dmFyIGc9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09Zyl7Yz1udWxsO2lmKG51bGwhPT1iLmNoaWxkKXN3aXRjaChiLmNoaWxkLnRhZyl7Y2FzZSA1OmM9XG5iLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6Yz1iLmNoaWxkLnN0YXRlTm9kZX1BZyhiLGcsYyl9YnJlYWs7Y2FzZSA1OnZhciBoPWIuc3RhdGVOb2RlO2lmKG51bGw9PT1jJiZiLmZsYWdzJjQpe2M9aDt2YXIgaz1iLm1lbW9pemVkUHJvcHM7c3dpdGNoKGIudHlwZSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjprLmF1dG9Gb2N1cyYmYy5mb2N1cygpO2JyZWFrO2Nhc2UgXCJpbWdcIjprLnNyYyYmKGMuc3JjPWsuc3JjKX19YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PWIubWVtb2l6ZWRTdGF0ZSl7dmFyIGw9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWwpe3ZhciBtPWwubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09bSl7dmFyIHc9bS5kZWh5ZHJhdGVkO251bGwhPT13JiZZYyh3KX19fWJyZWFrO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIxOmNhc2UgMjI6Y2FzZSAyMzpicmVhaztcbmRlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9emp8fGIuZmxhZ3MmNTEyJiZJaihiKX1jYXRjaCh1KXtDaihiLGIucmV0dXJuLHUpfX1pZihiPT09YSl7WD1udWxsO2JyZWFrfWM9Yi5zaWJsaW5nO2lmKG51bGwhPT1jKXtjLnJldHVybj1iLnJldHVybjtYPWM7YnJlYWt9WD1iLnJldHVybn19ZnVuY3Rpb24gV2ooYSl7Zm9yKDtudWxsIT09WDspe3ZhciBiPVg7aWYoYj09PWEpe1g9bnVsbDticmVha312YXIgYz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1g9YzticmVha31YPWIucmV0dXJufX1cbmZ1bmN0aW9uIFpqKGEpe2Zvcig7bnVsbCE9PVg7KXt2YXIgYj1YO3RyeXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dmFyIGM9Yi5yZXR1cm47dHJ5e0hqKDQsYil9Y2F0Y2goayl7Q2ooYixjLGspfWJyZWFrO2Nhc2UgMTp2YXIgZD1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCl7dmFyIGU9Yi5yZXR1cm47dHJ5e2QuY29tcG9uZW50RGlkTW91bnQoKX1jYXRjaChrKXtDaihiLGUsayl9fXZhciBmPWIucmV0dXJuO3RyeXtJaihiKX1jYXRjaChrKXtDaihiLGYsayl9YnJlYWs7Y2FzZSA1OnZhciBnPWIucmV0dXJuO3RyeXtJaihiKX1jYXRjaChrKXtDaihiLGcsayl9fX1jYXRjaChrKXtDaihiLGIucmV0dXJuLGspfWlmKGI9PT1hKXtYPW51bGw7YnJlYWt9dmFyIGg9Yi5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1iLnJldHVybjtYPWg7YnJlYWt9WD1iLnJldHVybn19XG52YXIgYms9TWF0aC5jZWlsLGNrPXNhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGs9c2EuUmVhY3RDdXJyZW50T3duZXIsZWs9c2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsSz0wLEo9bnVsbCxZPW51bGwsWj0wLFZpPTAsZWo9T2YoMCksVz0wLGZrPW51bGwsemc9MCxnaz0wLGhrPTAsaWs9bnVsbCxqaz1udWxsLFZqPTAsVGk9SW5maW5pdHksRGk9ITEsRWk9bnVsbCxHaT1udWxsLGtrPSExLGxrPW51bGwsbWs9MCxuaz0wLG9rPW51bGwscGs9LTEscWs9MDtmdW5jdGlvbiBNKCl7cmV0dXJuIDAhPT0oSyY2KT9EKCk6LTEhPT1waz9wazpwaz1EKCl9XG5mdW5jdGlvbiBEZyhhKXtpZigwPT09KGEubW9kZSYxKSlyZXR1cm4gMTtpZigwIT09KEsmMikmJjAhPT1aKXJldHVybiBaJi1aO2lmKG51bGwhPT1lZy50cmFuc2l0aW9uKXJldHVybiAwPT09cWsmJihhPW9jLG9jPDw9MSwwPT09KG9jJjQxOTQyNDApJiYob2M9NjQpLHFrPWEpLHFrO2E9RTtpZigwIT09YSlyZXR1cm4gYTthPXdpbmRvdy5ldmVudDthPXZvaWQgMD09PWE/MTY6ZWQoYS50eXBlKTtyZXR1cm4gYX1mdW5jdGlvbiBFZyhhLGIsYyl7aWYoNTA8bmspdGhyb3cgbms9MCxvaz1udWxsLEVycm9yKHAoMTg1KSk7dmFyIGQ9cmsoYSxiKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDt3YyhkLGIsYyk7aWYoMD09PShLJjIpfHxkIT09SilkPT09SiYmKDA9PT0oSyYyKSYmKGdrfD1iKSw0PT09VyYmc2soZCxaKSksdGsoZCxjKSwxPT09YiYmMD09PUsmJjA9PT0oYS5tb2RlJjEpJiYoVGk9RCgpKzUwMCwkZiYmZGcoKSk7cmV0dXJuIGR9XG5mdW5jdGlvbiByayhhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiB0ayhhLGIpe3ZhciBjPWEuY2FsbGJhY2tOb2RlO3RjKGEsYik7dmFyIGQ9cmMoYSxhPT09Sj9aOjApO2lmKDA9PT1kKW51bGwhPT1jJiZaYihjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wO2Vsc2UgaWYoYj1kJi1kLGEuY2FsbGJhY2tQcmlvcml0eSE9PWIpe251bGwhPWMmJlpiKGMpO2lmKDE9PT1iKTA9PT1hLnRhZz9jZyh1ay5iaW5kKG51bGwsYSkpOmJnKHVrLmJpbmQobnVsbCxhKSksRGYoZnVuY3Rpb24oKXswPT09SyYmZGcoKX0pLGM9bnVsbDtlbHNle3N3aXRjaCh6YyhkKSl7Y2FzZSAxOmM9Y2M7YnJlYWs7Y2FzZSA0OmM9ZGM7YnJlYWs7Y2FzZSAxNjpjPWVjO2JyZWFrO2Nhc2UgNTM2ODcwOTEyOmM9Z2M7YnJlYWs7ZGVmYXVsdDpjPWVjfWM9dmsoYyx3ay5iaW5kKG51bGwsYSkpfWEuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gd2soYSxiKXtwaz0tMTtxaz0wO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO3ZhciBjPWEuY2FsbGJhY2tOb2RlO2lmKHhrKCkmJmEuY2FsbGJhY2tOb2RlIT09YylyZXR1cm4gbnVsbDt2YXIgZD1yYyhhLGE9PT1KP1o6MCk7aWYoMD09PWQpcmV0dXJuIG51bGw7aWYoMCE9PShkJjMwKXx8MCE9PShkJmEuZXhwaXJlZExhbmVzKXx8YiliPXlrKGEsZCk7ZWxzZXtiPWQ7dmFyIGU9SztLfD0yO3ZhciBmPXprKCk7aWYoSiE9PWF8fFohPT1iKVRpPUQoKSs1MDAsQWsoYSxiKTtkbyB0cnl7QmsoKTticmVha31jYXRjaChoKXtDayhhLGgpfXdoaWxlKDEpO2tnKCk7Y2suY3VycmVudD1mO0s9ZTtudWxsIT09WT9iPTA6KEo9bnVsbCxaPTAsYj1XKX1pZigwIT09Yil7Mj09PWImJihlPXVjKGEpLDAhPT1lJiYoZD1lLGI9RGsoYSxlKSkpO2lmKDE9PT1iKXRocm93IGM9ZmssQWsoYSwwKSxzayhhLGQpLHRrKGEsRCgpKSxjO2lmKDY9PT1iKXNrKGEsZCk7ZWxzZXtlPVxuYS5jdXJyZW50LmFsdGVybmF0ZTtpZigwPT09KGQmMzApJiYhRWsoZSkmJihiPXlrKGEsZCksMj09PWImJihmPXVjKGEpLDAhPT1mJiYoZD1mLGI9RGsoYSxmKSkpLDE9PT1iKSl0aHJvdyBjPWZrLEFrKGEsMCksc2soYSxkKSx0ayhhLEQoKSksYzthLmZpbmlzaGVkV29yaz1lO2EuZmluaXNoZWRMYW5lcz1kO3N3aXRjaChiKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHAoMzQ1KSk7Y2FzZSAyOkZrKGEsamspO2JyZWFrO2Nhc2UgMzpzayhhLGQpO2lmKChkJjEzMDAyMzQyNCk9PT1kJiYoYj1Wais1MDAtRCgpLDEwPGIpKXtpZigwIT09cmMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmZCkhPT1kKXtNKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT16ZihGay5iaW5kKG51bGwsYSxqayksYik7YnJlYWt9RmsoYSxqayk7YnJlYWs7Y2FzZSA0OnNrKGEsZCk7aWYoKGQmNDE5NDI0MCk9PT1kKWJyZWFrO2I9XG5hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxkOyl7dmFyIGc9MzEtbGMoZCk7Zj0xPDxnO2c9YltnXTtnPmUmJihlPWcpO2QmPX5mfWQ9ZTtkPUQoKS1kO2Q9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmsoZC8xOTYwKSktZDtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9emYoRmsuYmluZChudWxsLGEsamspLGQpO2JyZWFrfUZrKGEsamspO2JyZWFrO2Nhc2UgNTpGayhhLGprKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzI5KSk7fX19dGsoYSxEKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWM/d2suYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gRGsoYSxiKXt2YXIgYz1pazthLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJihBayhhLGIpLmZsYWdzfD0yNTYpO2E9eWsoYSxiKTsyIT09YSYmKGI9amssams9YyxudWxsIT09YiYmUmkoYikpO3JldHVybiBhfVxuZnVuY3Rpb24gUmkoYSl7bnVsbD09PWprP2prPWE6amsucHVzaC5hcHBseShqayxhKX1mdW5jdGlvbiBFayhhKXtmb3IodmFyIGI9YTs7KXtpZihiLmZsYWdzJjE2Mzg0KXt2YXIgYz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jJiYoYz1jLnN0b3JlcyxudWxsIT09YykpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF0sZj1lLmdldFNuYXBzaG90O2U9ZS52YWx1ZTt0cnl7aWYoIUNlKGYoKSxlKSlyZXR1cm4hMX1jYXRjaChnKXtyZXR1cm4hMX19fWM9Yi5jaGlsZDtpZihiLnN1YnRyZWVGbGFncyYxNjM4NCYmbnVsbCE9PWMpYy5yZXR1cm49YixiPWM7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4hMDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiEwfVxuZnVuY3Rpb24gc2soYSxiKXtiJj1+aGs7YiY9fmdrO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtbGMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fWZ1bmN0aW9uIHVrKGEpe2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO3hrKCk7dmFyIGI9cmMoYSwwKTtpZigwPT09KGImMSkpcmV0dXJuIHRrKGEsRCgpKSxudWxsO3ZhciBjPXlrKGEsYik7aWYoMCE9PWEudGFnJiYyPT09Yyl7dmFyIGQ9dWMoYSk7MCE9PWQmJihiPWQsYz1EayhhLGQpKX1pZigxPT09Yyl0aHJvdyBjPWZrLEFrKGEsMCksc2soYSxiKSx0ayhhLEQoKSksYztpZig2PT09Yyl0aHJvdyBFcnJvcihwKDM0NSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWI7RmsoYSxqayk7dGsoYSxEKCkpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gR2soYSxiKXt2YXIgYz1LO0t8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Sz1jLDA9PT1LJiYoVGk9RCgpKzUwMCwkZiYmZGcoKSl9fWZ1bmN0aW9uIEhrKGEpe251bGwhPT1sayYmMD09PWxrLnRhZyYmMD09PShLJjYpJiZ4aygpO3ZhciBiPUs7S3w9MTt2YXIgYz1lay50cmFuc2l0aW9uLGQ9RTt0cnl7aWYoZWsudHJhbnNpdGlvbj1udWxsLEU9MSxhKXJldHVybiBhKCl9ZmluYWxseXtFPWQsZWsudHJhbnNpdGlvbj1jLEs9YiwwPT09KEsmNikmJmRnKCl9fWZ1bmN0aW9uIFVpKCl7Vmk9ZWouY3VycmVudDtHKGVqKX1cbmZ1bmN0aW9uIEFrKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLEFmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7V2coZCk7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJlVmKCk7YnJlYWs7Y2FzZSAzOnpoKCk7RyhRZik7RyhJKTtFaCgpO2JyZWFrO2Nhc2UgNTpCaChkKTticmVhaztjYXNlIDQ6emgoKTticmVhaztjYXNlIDEzOkcoUCk7YnJlYWs7Y2FzZSAxOTpHKFApO2JyZWFrO2Nhc2UgMTA6bGcoZC50eXBlLl9jb250ZXh0KTticmVhaztjYXNlIDIyOmNhc2UgMjM6VWkoKX1jPWMucmV0dXJufUo9YTtZPWE9bWgoYS5jdXJyZW50LG51bGwpO1o9Vmk9YjtXPTA7Zms9bnVsbDtoaz1naz16Zz0wO2prPWlrPW51bGw7aWYobnVsbCE9PXFnKXtmb3IoYj1cbjA7YjxxZy5sZW5ndGg7YisrKWlmKGM9cWdbYl0sZD1jLmludGVybGVhdmVkLG51bGwhPT1kKXtjLmludGVybGVhdmVkPW51bGw7dmFyIGU9ZC5uZXh0LGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXt2YXIgZz1mLm5leHQ7Zi5uZXh0PWU7ZC5uZXh0PWd9Yy5wZW5kaW5nPWR9cWc9bnVsbH1yZXR1cm4gYX1cbmZ1bmN0aW9uIENrKGEsYil7ZG97dmFyIGM9WTt0cnl7a2coKTtGaC5jdXJyZW50PVJoO2lmKEloKXtmb3IodmFyIGQ9US5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH1JaD0hMX1IaD0wO1M9Uj1RPW51bGw7Smg9ITE7S2g9MDtkay5jdXJyZW50PW51bGw7aWYobnVsbD09PWN8fG51bGw9PT1jLnJldHVybil7Vz0xO2ZrPWI7WT1udWxsO2JyZWFrfWE6e3ZhciBmPWEsZz1jLnJldHVybixoPWMsaz1iO2I9WjtoLmZsYWdzfD0zMjc2ODtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rLG09aCx3PW0udGFnO2lmKDA9PT0obS5tb2RlJjEpJiYoMD09PXd8fDExPT09d3x8MTU9PT13KSl7dmFyIHU9bS5hbHRlcm5hdGU7dT8obS51cGRhdGVRdWV1ZT11LnVwZGF0ZVF1ZXVlLG0ubWVtb2l6ZWRTdGF0ZT11Lm1lbW9pemVkU3RhdGUsXG5tLmxhbmVzPXUubGFuZXMpOihtLnVwZGF0ZVF1ZXVlPW51bGwsbS5tZW1vaXplZFN0YXRlPW51bGwpfXZhciB5PUppKGcpO2lmKG51bGwhPT15KXt5LmZsYWdzJj0tMjU3O0tpKHksZyxoLGYsYik7eS5tb2RlJjEmJkhpKGYsbCxiKTtiPXk7az1sO3ZhciBuPWIudXBkYXRlUXVldWU7aWYobnVsbD09PW4pe3ZhciB2PW5ldyBTZXQ7di5hZGQoayk7Yi51cGRhdGVRdWV1ZT12fWVsc2Ugbi5hZGQoayk7YnJlYWsgYX1lbHNle2lmKDA9PT0oYiYxKSl7SGkoZixsLGIpO1NpKCk7YnJlYWsgYX1rPUVycm9yKHAoNDI2KSl9fWVsc2UgaWYoTiYmaC5tb2RlJjEpe3ZhciBDPUppKGcpO2lmKG51bGwhPT1DKXswPT09KEMuZmxhZ3MmNjU1MzYpJiYoQy5mbGFnc3w9MjU2KTtLaShDLGcsaCxmLGIpO2hoKGspO2JyZWFrIGF9fWY9azs0IT09VyYmKFc9Mik7bnVsbD09PWlrP2lrPVtmXTppay5wdXNoKGYpO2s9emkoayxoKTtoPWc7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5mbGFnc3w9NjU1MzY7XG5iJj0tYjtoLmxhbmVzfD1iO3ZhciB0PUNpKGgsayxiKTt4ZyhoLHQpO2JyZWFrIGE7Y2FzZSAxOmY9azt2YXIgcj1oLnR5cGUseD1oLnN0YXRlTm9kZTtpZigwPT09KGguZmxhZ3MmMTI4KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiByLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB4LmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUdpfHwhR2kuaGFzKHgpKSkpe2guZmxhZ3N8PTY1NTM2O2ImPS1iO2gubGFuZXN8PWI7dmFyIEI9RmkoaCxmLGIpO3hnKGgsQik7YnJlYWsgYX19aD1oLnJldHVybn13aGlsZShudWxsIT09aCl9SWsoYyl9Y2F0Y2goTyl7Yj1PO1k9PT1jJiZudWxsIT09YyYmKFk9Yz1jLnJldHVybik7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9ZnVuY3Rpb24gemsoKXt2YXIgYT1jay5jdXJyZW50O2NrLmN1cnJlbnQ9Umg7cmV0dXJuIG51bGw9PT1hP1JoOmF9XG5mdW5jdGlvbiBTaSgpe2lmKDA9PT1XfHwzPT09V3x8Mj09PVcpVz00O251bGw9PT1KfHwwPT09KHpnJjI2ODQzNTQ1NSkmJjA9PT0oZ2smMjY4NDM1NDU1KXx8c2soSixaKX1mdW5jdGlvbiB5ayhhLGIpe3ZhciBjPUs7S3w9Mjt2YXIgZD16aygpO0o9PT1hJiZaPT09Ynx8QWsoYSxiKTtkbyB0cnl7SmsoKTticmVha31jYXRjaChlKXtDayhhLGUpfXdoaWxlKDEpO2tnKCk7Sz1jO2NrLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcihwKDI2MSkpO0o9bnVsbDtaPTA7cmV0dXJuIFd9ZnVuY3Rpb24gSmsoKXtmb3IoO251bGwhPT1ZOylLayhZKX1mdW5jdGlvbiBCaygpe2Zvcig7bnVsbCE9PVkmJiEkYigpOylLayhZKX1mdW5jdGlvbiBLayhhKXt2YXIgYj1MayhhLmFsdGVybmF0ZSxhLFZpKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/SWsoYSk6WT1iO2RrLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIElrKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMzI3NjgpKXtpZihjPVFpKGMsYixWaSksbnVsbCE9PWMpe1k9YztyZXR1cm59fWVsc2V7Yz14aihjLGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0zMjc2NztZPWM7cmV0dXJufWlmKG51bGwhPT1hKWEuZmxhZ3N8PTMyNzY4LGEuc3VidHJlZUZsYWdzPTAsYS5kZWxldGlvbnM9bnVsbDtlbHNle1c9NjtZPW51bGw7cmV0dXJufX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVcmJihXPTUpfWZ1bmN0aW9uIEZrKGEsYil7dmFyIGM9RSxkPWVrLnRyYW5zaXRpb247dHJ5e2VrLnRyYW5zaXRpb249bnVsbCxFPTEsTWsoYSxiLGMpfWZpbmFsbHl7ZWsudHJhbnNpdGlvbj1kLEU9Y31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIE1rKGEsYixjKXtkbyB4aygpO3doaWxlKG51bGwhPT1sayk7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7dmFyIGQ9YS5maW5pc2hlZFdvcmssZT1hLmZpbmlzaGVkTGFuZXM7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihkPT09YS5jdXJyZW50KXRocm93IEVycm9yKHAoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrUHJpb3JpdHk9MDt2YXIgZj1kLmxhbmVzfGQuY2hpbGRMYW5lczt4YyhhLGYpO2E9PT1KJiYoWT1KPW51bGwsWj0wKTswPT09KGQuc3VidHJlZUZsYWdzJjIwNjQpJiYwPT09KGQuZmxhZ3MmMjA2NCl8fGtrfHwoa2s9ITAsdmsoZWMsZnVuY3Rpb24oKXt4aygpO3JldHVybiBudWxsfSkpO2Y9MCE9PShkLmZsYWdzJjE1OTkwKTtpZigwIT09KGQuc3VidHJlZUZsYWdzJjE1OTkwKXx8Zil7Zj1lay50cmFuc2l0aW9uO2VrLnRyYW5zaXRpb249bnVsbDt2YXIgZz1cbkU7RT0xO3ZhciBoPUs7S3w9NDtkay5jdXJyZW50PW51bGw7RmooYSxkKTtVaihhLGQsZSk7SmUoeGYpO3hmPW51bGw7YS5jdXJyZW50PWQ7WGooZCxhLGUpO2FjKCk7Sz1oO0U9Zztlay50cmFuc2l0aW9uPWZ9ZWxzZSBhLmN1cnJlbnQ9ZDtrayYmKGtrPSExLGxrPWEsbWs9ZSk7Zj1hLnBlbmRpbmdMYW5lczswPT09ZiYmKEdpPW51bGwpO2pjKGQuc3RhdGVOb2RlLGMpO3RrKGEsRCgpKTtpZihudWxsIT09Yilmb3IoYz1hLm9uUmVjb3ZlcmFibGVFcnJvcixkPTA7ZDxiLmxlbmd0aDtkKyspYyhiW2RdKTtpZihEaSl0aHJvdyBEaT0hMSxhPUVpLEVpPW51bGwsYTswIT09KG1rJjEpJiYwIT09YS50YWcmJnhrKCk7Zj1hLnBlbmRpbmdMYW5lczswIT09KGYmMSk/YT09PW9rP25rKys6KG5rPTAsb2s9YSk6bms9MDtkZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24geGsoKXtpZihudWxsIT09bGspe3ZhciBhPXpjKG1rKSxiPWVrLnRyYW5zaXRpb24sYz1FO3RyeXtlay50cmFuc2l0aW9uPW51bGw7RT0xNj5hPzE2OmE7aWYobnVsbD09PWxrKXZhciBkPSExO2Vsc2V7YT1saztsaz1udWxsO21rPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzMxKSk7dmFyIGU9SztLfD00O2ZvcihYPWEuY3VycmVudDtudWxsIT09WDspe3ZhciBmPVgsZz1mLmNoaWxkO2lmKDAhPT0oWC5mbGFncyYxNikpe3ZhciBoPWYuZGVsZXRpb25zO2lmKG51bGwhPT1oKXtmb3IodmFyIGs9MDtrPGgubGVuZ3RoO2srKyl7dmFyIGw9aFtrXTtmb3IoWD1sO251bGwhPT1YOyl7dmFyIG09WDtzd2l0Y2gobS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6R2ooOCxtLGYpfXZhciB3PW0uY2hpbGQ7aWYobnVsbCE9PXcpdy5yZXR1cm49bSxYPXc7ZWxzZSBmb3IoO251bGwhPT1YOyl7bT1YO3ZhciB1PW0uc2libGluZyx5PW0ucmV0dXJuO0xqKG0pO2lmKG09PT1cbmwpe1g9bnVsbDticmVha31pZihudWxsIT09dSl7dS5yZXR1cm49eTtYPXU7YnJlYWt9WD15fX19dmFyIG49Zi5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe3ZhciB2PW4uY2hpbGQ7aWYobnVsbCE9PXYpe24uY2hpbGQ9bnVsbDtkb3t2YXIgQz12LnNpYmxpbmc7di5zaWJsaW5nPW51bGw7dj1DfXdoaWxlKG51bGwhPT12KX19WD1mfX1pZigwIT09KGYuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09ZylnLnJldHVybj1mLFg9ZztlbHNlIGI6Zm9yKDtudWxsIT09WDspe2Y9WDtpZigwIT09KGYuZmxhZ3MmMjA0OCkpc3dpdGNoKGYudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OkdqKDksZixmLnJldHVybil9dmFyIHQ9Zi5zaWJsaW5nO2lmKG51bGwhPT10KXt0LnJldHVybj1mLnJldHVybjtYPXQ7YnJlYWsgYn1YPWYucmV0dXJufX12YXIgcj1hLmN1cnJlbnQ7Zm9yKFg9cjtudWxsIT09WDspe2c9WDt2YXIgeD1nLmNoaWxkO2lmKDAhPT0oZy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1cbngpeC5yZXR1cm49ZyxYPXg7ZWxzZSBiOmZvcihnPXI7bnVsbCE9PVg7KXtoPVg7aWYoMCE9PShoLmZsYWdzJjIwNDgpKXRyeXtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6SGooOSxoKX19Y2F0Y2goTyl7Q2ooaCxoLnJldHVybixPKX1pZihoPT09Zyl7WD1udWxsO2JyZWFrIGJ9dmFyIEI9aC5zaWJsaW5nO2lmKG51bGwhPT1CKXtCLnJldHVybj1oLnJldHVybjtYPUI7YnJlYWsgYn1YPWgucmV0dXJufX1LPWU7ZGcoKTtpZihpYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGljLm9uUG9zdENvbW1pdEZpYmVyUm9vdCl0cnl7aWMub25Qb3N0Q29tbWl0RmliZXJSb290KGhjLGEpfWNhdGNoKE8pe31kPSEwfXJldHVybiBkfWZpbmFsbHl7RT1jLGVrLnRyYW5zaXRpb249Yn19cmV0dXJuITF9ZnVuY3Rpb24gTmsoYSxiLGMpe2I9emkoYyxiKTtiPUNpKGEsYiwxKTt2ZyhhLGIpO2I9TSgpO2E9cmsoYSwxKTtudWxsIT09YSYmKHdjKGEsMSxiKSx0ayhhLGIpKX1cbmZ1bmN0aW9uIENqKGEsYixjKXtpZigzPT09YS50YWcpTmsoYSxhLGMpO2Vsc2UgZm9yKDtudWxsIT09Yjspe2lmKDM9PT1iLnRhZyl7TmsoYixhLGMpO2JyZWFrfWVsc2UgaWYoMT09PWIudGFnKXt2YXIgZD1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09R2l8fCFHaS5oYXMoZCkpKXthPXppKGMsYSk7YT1GaShiLGEsMSk7dmcoYixhKTthPU0oKTtiPXJrKGIsMSk7bnVsbCE9PWImJih3YyhiLDEsYSksdGsoYixhKSk7YnJlYWt9fWI9Yi5yZXR1cm59fVxuZnVuY3Rpb24gSWkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPU0oKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7Sj09PWEmJihaJmMpPT09YyYmKDQ9PT1XfHwzPT09VyYmKFomMTMwMDIzNDI0KT09PVomJjUwMD5EKCktVmo/QWsoYSwwKTpoa3w9Yyk7dGsoYSxiKX1mdW5jdGlvbiBPayhhLGIpezA9PT1iJiYoMD09PShhLm1vZGUmMSk/Yj0xOihiPXBjLHBjPDw9MSwwPT09KHBjJjEzMDAyMzQyNCkmJihwYz00MTk0MzA0KSkpO3ZhciBjPU0oKTthPXJrKGEsYik7bnVsbCE9PWEmJih3YyhhLGIsYyksdGsoYSxjKSl9ZnVuY3Rpb24gcWooYSl7dmFyIGI9YS5tZW1vaXplZFN0YXRlLGM9MDtudWxsIT09YiYmKGM9Yi5yZXRyeUxhbmUpO09rKGEsYyl9XG5mdW5jdGlvbiBUaihhLGIpe3ZhciBjPTA7c3dpdGNoKGEudGFnKXtjYXNlIDEzOnZhciBkPWEuc3RhdGVOb2RlO3ZhciBlPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGM9ZS5yZXRyeUxhbmUpO2JyZWFrO2Nhc2UgMTk6ZD1hLnN0YXRlTm9kZTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzE0KSk7fW51bGwhPT1kJiZkLmRlbGV0ZShiKTtPayhhLGMpfXZhciBMaztcbkxrPWZ1bmN0aW9uKGEsYixjKXtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8UWYuY3VycmVudClvZz0hMDtlbHNle2lmKDA9PT0oYS5sYW5lcyZjKSYmMD09PShiLmZsYWdzJjEyOCkpcmV0dXJuIG9nPSExLHdqKGEsYixjKTtvZz0wIT09KGEuZmxhZ3MmMTMxMDcyKT8hMDohMX1lbHNlIG9nPSExLE4mJjAhPT0oYi5mbGFncyYxMDQ4NTc2KSYmVWcoYixOZyxiLmluZGV4KTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6dmFyIGQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9U2YoYixJLmN1cnJlbnQpO25nKGIsYyk7ZT1OaChudWxsLGIsZCxhLGUsYyk7dmFyIGY9U2goKTtiLmZsYWdzfD0xO1wib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZj9cbihiLnRhZz0xLGIubWVtb2l6ZWRTdGF0ZT1udWxsLGIudXBkYXRlUXVldWU9bnVsbCxUZihkKT8oZj0hMCxYZihiKSk6Zj0hMSxiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsLHNnKGIpLGUudXBkYXRlcj1GZyxiLnN0YXRlTm9kZT1lLGUuX3JlYWN0SW50ZXJuYWxzPWIsSmcoYixkLGEsYyksYj1oaihudWxsLGIsZCwhMCxmLGMpKTooYi50YWc9MCxOJiZmJiZWZyhiKSxYaShudWxsLGIsZSxjKSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTY6ZD1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1kLl9pbml0O2Q9ZShkLl9wYXlsb2FkKTtiLnR5cGU9ZDtlPWIudGFnPVBrKGQpO2E9ZmcoZCxhKTtzd2l0Y2goZSl7Y2FzZSAwOmI9Y2oobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTpiPWdqKG51bGwsYixcbmQsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1ZaShudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPSRpKG51bGwsYixkLGZnKGQudHlwZSxhKSxjKTticmVhayBhfXRocm93IEVycm9yKHAoMzA2LGQsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmZnKGQsZSksY2ooYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmZnKGQsZSksZ2ooYSxiLGQsZSxjKTtjYXNlIDM6YTp7aWooYik7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IocCgzODcpKTtkPWIucGVuZGluZ1Byb3BzO2Y9Yi5tZW1vaXplZFN0YXRlO2U9Zi5lbGVtZW50O3RnKGEsYik7eWcoYixkLG51bGwsYyk7dmFyIGc9Yi5tZW1vaXplZFN0YXRlO2Q9Zy5lbGVtZW50O2lmKGYuaXNEZWh5ZHJhdGVkKWlmKGY9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6ITEsXG5jYWNoZTpnLmNhY2hlLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9LGIudXBkYXRlUXVldWUuYmFzZVN0YXRlPWYsYi5tZW1vaXplZFN0YXRlPWYsYi5mbGFncyYyNTYpe2U9RXJyb3IocCg0MjMpKTtiPWpqKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGlmKGQhPT1lKXtlPUVycm9yKHAoNDI0KSk7Yj1qaihhLGIsZCxjLGUpO2JyZWFrIGF9ZWxzZSBmb3IoWWc9RmYoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxYZz1iLE49ITAsWmc9bnVsbCxjPXNoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8NDA5NixjPWMuc2libGluZztlbHNle2doKCk7aWYoZD09PWUpe2I9WmkoYSxiLGMpO2JyZWFrIGF9WGkoYSxiLGQsYyl9Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gQWgoYiksbnVsbD09PWEmJmRoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sXG55ZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmeWYoZCxmKSYmKGIuZmxhZ3N8PTMyKSxmaihhLGIpLFhpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmZGgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBtaihhLGIsYyk7Y2FzZSA0OnJldHVybiB5aChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1yaChiLG51bGwsZCxjKTpYaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmZnKGQsZSksWWkoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFhpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gWGkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gWGkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPVxuYi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkUHJvcHM7Zz1lLnZhbHVlO0goZ2csZC5fY3VycmVudFZhbHVlKTtkLl9jdXJyZW50VmFsdWU9ZztpZihudWxsIT09ZilpZihDZShmLnZhbHVlLGcpKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIVFmLmN1cnJlbnQpe2I9WmkoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGY9Yi5jaGlsZCxudWxsIT09ZiYmKGYucmV0dXJuPWIpO251bGwhPT1mOyl7dmFyIGg9Zi5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PWgpe2c9Zi5jaGlsZDtmb3IodmFyIGs9aC5maXJzdENvbnRleHQ7bnVsbCE9PWs7KXtpZihrLmNvbnRleHQ9PT1kKXtpZigxPT09Zi50YWcpe2s9dWcoLTEsYyYtYyk7ay50YWc9Mjt2YXIgbD1mLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1sKXtsPWwuc2hhcmVkO3ZhciBtPWwucGVuZGluZztudWxsPT09bT9rLm5leHQ9azooay5uZXh0PW0ubmV4dCxtLm5leHQ9ayk7bC5wZW5kaW5nPWt9fWYubGFuZXN8PVxuYztrPWYuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5sYW5lc3w9Yyk7bWcoZi5yZXR1cm4sYyxiKTtoLmxhbmVzfD1jO2JyZWFrfWs9ay5uZXh0fX1lbHNlIGlmKDEwPT09Zi50YWcpZz1mLnR5cGU9PT1iLnR5cGU/bnVsbDpmLmNoaWxkO2Vsc2UgaWYoMTg9PT1mLnRhZyl7Zz1mLnJldHVybjtpZihudWxsPT09Zyl0aHJvdyBFcnJvcihwKDM0MSkpO2cubGFuZXN8PWM7aD1nLmFsdGVybmF0ZTtudWxsIT09aCYmKGgubGFuZXN8PWMpO21nKGcsYyxiKTtnPWYuc2libGluZ31lbHNlIGc9Zi5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1mO2Vsc2UgZm9yKGc9ZjtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9Zj1nLnNpYmxpbmc7aWYobnVsbCE9PWYpe2YucmV0dXJuPWcucmV0dXJuO2c9ZjticmVha31nPWcucmV0dXJufWY9Z31YaShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxkPWIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxubmcoYixjKSxlPXBnKGUpLGQ9ZChlKSxiLmZsYWdzfD0xLFhpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZD1iLnR5cGUsZT1mZyhkLGIucGVuZGluZ1Byb3BzKSxlPWZnKGQudHlwZSxlKSwkaShhLGIsZCxlLGMpO2Nhc2UgMTU6cmV0dXJuIGJqKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6ZmcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxiLnRhZz0xLFRmKGQpPyhhPSEwLFhmKGIpKTphPSExLG5nKGIsYyksSGcoYixkLGUpLEpnKGIsZCxlLGMpLGhqKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gdmooYSxiLGMpO2Nhc2UgMjI6cmV0dXJuIGRqKGEsYixjKX10aHJvdyBFcnJvcihwKDE1NixiLnRhZykpO307ZnVuY3Rpb24gdmsoYSxiKXtyZXR1cm4gWWIoYSxiKX1cbmZ1bmN0aW9uIFFrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5zdWJ0cmVlRmxhZ3M9dGhpcy5mbGFncz0wO3RoaXMuZGVsZXRpb25zPW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIGFoKGEsYixjLGQpe3JldHVybiBuZXcgUWsoYSxiLGMsZCl9ZnVuY3Rpb24gYWooYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIFBrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhaihhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09QmEpcmV0dXJuIDExO2lmKGE9PT1FYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPWFoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMuc3VidHJlZUZsYWdzPTAsYy5kZWxldGlvbnM9bnVsbCk7Yy5mbGFncz1hLmZsYWdzJjE0NjgwMDY0O2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYWooYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdmE6cmV0dXJuIHFoKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2Ugd2E6Zz04O2V8PTg7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1haCgxMixjLGIsZXwyKSxhLmVsZW1lbnRUeXBlPXhhLGEubGFuZXM9ZixhO2Nhc2UgQ2E6cmV0dXJuIGE9YWgoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9Q2EsYS5sYW5lcz1mLGE7Y2FzZSBEYTpyZXR1cm4gYT1haCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1EYSxhLmxhbmVzPWYsYTtjYXNlIEdhOnJldHVybiBuaihjLGUsZixiKTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgQWE6Zz05O2JyZWFrIGE7Y2FzZSBCYTpnPTExO1xuYnJlYWsgYTtjYXNlIEVhOmc9MTQ7YnJlYWsgYTtjYXNlIEZhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IocCgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1haChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIHFoKGEsYixjLGQpe2E9YWgoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIG5qKGEsYixjLGQpe2E9YWgoMjIsYSxkLGIpO2EuZWxlbWVudFR5cGU9R2E7YS5sYW5lcz1jO2Euc3RhdGVOb2RlPXt9O3JldHVybiBhfWZ1bmN0aW9uIG5oKGEsYixjKXthPWFoKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIHBoKGEsYixjKXtiPWFoKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gUmsoYSxiLGMsZCxlKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLmNhbGxiYWNrTm9kZT10aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz12YygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz12YygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz12YygwKTt0aGlzLmlkZW50aWZpZXJQcmVmaXg9ZDt0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1lO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1cbm51bGx9ZnVuY3Rpb24gU2soYSxiLGMsZCxlLGYsZyxoLGspe2E9bmV3IFJrKGEsYixjLGgsayk7MT09PWI/KGI9MSwhMD09PWYmJihifD04KSk6Yj0wO2Y9YWgoMyxudWxsLG51bGwsYik7YS5jdXJyZW50PWY7Zi5zdGF0ZU5vZGU9YTtmLm1lbW9pemVkU3RhdGU9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6YyxjYWNoZTpudWxsLHRyYW5zaXRpb25zOm51bGx9O3NnKGYpO3JldHVybiBhfWZ1bmN0aW9uIFRrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6dWEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBVayhhKXtpZighYSlyZXR1cm4gUGY7YT1hLl9yZWFjdEludGVybmFsczthOntpZihTYihhKSE9PWF8fDEhPT1hLnRhZyl0aHJvdyBFcnJvcihwKDE3MCkpO3ZhciBiPWE7ZG97c3dpdGNoKGIudGFnKXtjYXNlIDM6Yj1iLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGE7Y2FzZSAxOmlmKFRmKGIudHlwZSkpe2I9Yi5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYX19Yj1iLnJldHVybn13aGlsZShudWxsIT09Yik7dGhyb3cgRXJyb3IocCgxNzEpKTt9aWYoMT09PWEudGFnKXt2YXIgYz1hLnR5cGU7aWYoVGYoYykpcmV0dXJuIFdmKGEsYyxiKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIFZrKGEsYixjLGQsZSxmLGcsaCxrKXthPVNrKGMsZCwhMCxhLGUsZixnLGgsayk7YS5jb250ZXh0PVVrKG51bGwpO2M9YS5jdXJyZW50O2Q9TSgpO2U9RGcoYyk7Zj11ZyhkLGUpO2YuY2FsbGJhY2s9dm9pZCAwIT09YiYmbnVsbCE9PWI/YjpudWxsO3ZnKGMsZik7YS5jdXJyZW50LmxhbmVzPWU7d2MoYSxlLGQpO3RrKGEsZCk7cmV0dXJuIGF9ZnVuY3Rpb24gV2soYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9TSgpLGc9RGcoZSk7Yz1VayhjKTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXVnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO3ZnKGUsYik7YT1FZyhlLGcsZik7bnVsbCE9PWEmJndnKGEsZSxnKTtyZXR1cm4gZ31cbmZ1bmN0aW9uIFhrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gWWsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIFprKGEsYil7WWsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJllrKGEsYil9ZnVuY3Rpb24gJGsoKXtyZXR1cm4gbnVsbH12YXIgYWw9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcG9ydEVycm9yP3JlcG9ydEVycm9yOmZ1bmN0aW9uKGEpe2NvbnNvbGUuZXJyb3IoYSl9O2Z1bmN0aW9uIGJsKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxuY2wucHJvdG90eXBlLnJlbmRlcj1ibC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDQwOSkpO1drKGEsYixudWxsLG51bGwpfTtjbC5wcm90b3R5cGUudW5tb3VudD1ibC5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsIT09YSl7dGhpcy5faW50ZXJuYWxSb290PW51bGw7dmFyIGI9YS5jb250YWluZXJJbmZvO0hrKGZ1bmN0aW9uKCl7V2sobnVsbCxhLG51bGwsbnVsbCl9KTtiW3BmXT1udWxsfX07ZnVuY3Rpb24gY2woYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5jbC5wcm90b3R5cGUudW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb249ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9RGMoKTthPXtibG9ja2VkT246bnVsbCx0YXJnZXQ6YSxwcmlvcml0eTpifTtmb3IodmFyIGM9MDtjPE1jLmxlbmd0aCYmMCE9PWImJmI8TWNbY10ucHJpb3JpdHk7YysrKTtNYy5zcGxpY2UoYywwLGEpOzA9PT1jJiZSYyhhKX19O2Z1bmN0aW9uIGRsKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlKX1mdW5jdGlvbiBlbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gZmwoKXt9XG5mdW5jdGlvbiBnbChhLGIsYyxkLGUpe2lmKGUpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZj1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1YayhnKTtmLmNhbGwoYSl9fXZhciBnPVZrKGIsZCxhLDAsbnVsbCwhMSwhMSxcIlwiLGZsKTthLl9yZWFjdFJvb3RDb250YWluZXI9ZzthW3BmXT1nLmN1cnJlbnQ7bmYoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO0hrKCk7cmV0dXJuIGd9Zm9yKDtlPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGUpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgaD1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1YayhrKTtoLmNhbGwoYSl9fXZhciBrPVNrKGEsMCwhMSxudWxsLG51bGwsITEsITEsXCJcIixmbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWs7YVtwZl09ay5jdXJyZW50O25mKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtIayhmdW5jdGlvbigpe1drKGIsayxjLGQpfSk7cmV0dXJuIGt9XG5mdW5jdGlvbiBobChhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1YayhnKTtoLmNhbGwoYSl9fVdrKGIsZyxhLGUpfWVsc2UgZz1nbChjLGIsYSxlLGQpO3JldHVybiBYayhnKX1BYz1mdW5jdGlvbihhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMzp2YXIgYj1hLnN0YXRlTm9kZTtpZihiLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe3ZhciBjPXFjKGIucGVuZGluZ0xhbmVzKTswIT09YyYmKHljKGIsY3wxKSx0ayhiLEQoKSksMD09PShLJjYpJiYoVGk9RCgpKzUwMCxkZygpKSl9YnJlYWs7Y2FzZSAxMzp2YXIgZD1NKCk7SGsoZnVuY3Rpb24oKXtyZXR1cm4gRWcoYSwxLGQpfSk7WmsoYSwxKX19O0JjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPU0oKTtFZyhhLDEzNDIxNzcyOCxiKTtaayhhLDEzNDIxNzcyOCl9fTtcbkNjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPU0oKSxjPURnKGEpO0VnKGEsYyxiKTtaayhhLGMpfX07RGM9ZnVuY3Rpb24oKXtyZXR1cm4gRX07RWM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1FO3RyeXtyZXR1cm4gRT1hLGIoKX1maW5hbGx5e0U9Y319O1xudmI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpaYShhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9QWIoZCk7aWYoIWUpdGhyb3cgRXJyb3IocCg5MCkpO1VhKGQpO1phKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpmYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmY2IoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtEYj1HaztFYj1IaztcbnZhciBpbD17dXNpbmdDbGllbnRFbnRyeVBvaW50OiExLEV2ZW50czpbemIscGUsQWIsQmIsQ2IsR2tdfSxqbD17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6U2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxOC4wLjAtZmM0NmRiYTY3LTIwMjIwMzI5XCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciBrbD17YnVuZGxlVHlwZTpqbC5idW5kbGVUeXBlLHZlcnNpb246amwudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOmpsLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6amwucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldEVycm9ySGFuZGxlcjpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6c2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPVdiKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpqbC5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG4kayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsLHJlY29uY2lsZXJWZXJzaW9uOlwiMTguMC4wLWZjNDZkYmE2Ny0yMDIyMDMyOVwifTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIGxsPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighbGwuaXNEaXNhYmxlZCYmbGwuc3VwcG9ydHNGaWJlcil0cnl7aGM9bGwuaW5qZWN0KGtsKSxpYz1sbH1jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9aWw7XG5leHBvcnRzLmNyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFkbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBUayhhLGIsbnVsbCxjKX07ZXhwb3J0cy5jcmVhdGVSb290PWZ1bmN0aW9uKGEsYil7aWYoIWRsKGEpKXRocm93IEVycm9yKHAoMjk5KSk7dmFyIGM9ITEsZD1cIlwiLGU9YWw7bnVsbCE9PWImJnZvaWQgMCE9PWImJighMD09PWIudW5zdGFibGVfc3RyaWN0TW9kZSYmKGM9ITApLHZvaWQgMCE9PWIuaWRlbnRpZmllclByZWZpeCYmKGQ9Yi5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1iLm9uUmVjb3ZlcmFibGVFcnJvciYmKGU9Yi5vblJlY292ZXJhYmxlRXJyb3IpKTtiPVNrKGEsMSwhMSxudWxsLG51bGwsYywhMSxkLGUpO2FbcGZdPWIuY3VycmVudDtuZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7cmV0dXJuIG5ldyBibChiKX07XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHAoMTg4KSk7YT1PYmplY3Qua2V5cyhhKS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihwKDI2OCxhKSk7fWE9V2IoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhKXtyZXR1cm4gSGsoYSl9O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWVsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIGhsKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMuaHlkcmF0ZVJvb3Q9ZnVuY3Rpb24oYSxiLGMpe2lmKCFkbChhKSl0aHJvdyBFcnJvcihwKDQwNSkpO3ZhciBkPW51bGwhPWMmJmMuaHlkcmF0ZWRTb3VyY2VzfHxudWxsLGU9ITEsZj1cIlwiLGc9YWw7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJighMD09PWMudW5zdGFibGVfc3RyaWN0TW9kZSYmKGU9ITApLHZvaWQgMCE9PWMuaWRlbnRpZmllclByZWZpeCYmKGY9Yy5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1jLm9uUmVjb3ZlcmFibGVFcnJvciYmKGc9Yy5vblJlY292ZXJhYmxlRXJyb3IpKTtiPVZrKGIsbnVsbCxhLDEsbnVsbCE9Yz9jOm51bGwsZSwhMSxmLGcpO2FbcGZdPWIuY3VycmVudDtuZihhKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspYz1kW2FdLGU9Yy5fZ2V0VmVyc2lvbixlPWUoYy5fc291cmNlKSxudWxsPT1iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtjLGVdOmIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGMsXG5lKTtyZXR1cm4gbmV3IGNsKGIpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWVsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIGhsKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWVsKGEpKXRocm93IEVycm9yKHAoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhIayhmdW5jdGlvbigpe2hsKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtwZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPUdrO1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZWwoYykpdGhyb3cgRXJyb3IocCgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcihwKDM4KSk7cmV0dXJuIGhsKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxOC4wLjAtZmM0NmRiYTY3LTIwMjIwMzI5XCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksbj1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHA9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHE9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLHI9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLHQ9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLHU9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksdj1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksdz1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIikseD1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSx5PVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLHo9U3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXomJmFbel18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbnZhciBCPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxDPU9iamVjdC5hc3NpZ24sRD17fTtmdW5jdGlvbiBFKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtcbkUucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihcInNldFN0YXRlKC4uLik6IHRha2VzIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMgdG8gdXBkYXRlIG9yIGEgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzLlwiKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO0MoSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST1BcnJheS5pc0FycmF5LEo9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxLPXtjdXJyZW50Om51bGx9LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGUpe3ZhciBkLGM9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihkIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSi5jYWxsKGIsZCkmJiFMLmhhc093blByb3BlcnR5KGQpJiYoY1tkXT1iW2RdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpYy5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtjLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGQgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWNbZF0mJihjW2RdPWdbZF0pO3JldHVybnskJHR5cGVvZjpsLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpjLF9vd25lcjpLLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZztmdW5jdGlvbiBRKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gUihhLGIsZSxkLGMpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBsOmNhc2UgbjpoPSEwfX1pZihoKXJldHVybiBoPWEsYz1jKGgpLGE9XCJcIj09PWQ/XCIuXCIrUShoLDApOmQsSShjKT8oZT1cIlwiLG51bGwhPWEmJihlPWEucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSxSKGMsYixlLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9YyYmKE8oYykmJihjPU4oYyxlKyghYy5rZXl8fGgmJmgua2V5PT09Yy5rZXk/XCJcIjooXCJcIitjLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGMpKSwxO2g9MDtkPVwiXCI9PT1kP1wiLlwiOmQrXCI6XCI7aWYoSShhKSlmb3IodmFyIGc9MDtnPGEubGVuZ3RoO2crKyl7az1cbmFbZ107dmFyIGY9ZCtRKGssZyk7aCs9UihrLGIsZSxmLGMpfWVsc2UgaWYoZj1BKGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1kK1EoayxnKyspLGgrPVIoayxiLGUsZixjKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9U3RyaW5nKGEpLEVycm9yKFwiT2JqZWN0cyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQgKGZvdW5kOiBcIisoXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikrXCIpLiBJZiB5b3UgbWVhbnQgdG8gcmVuZGVyIGEgY29sbGVjdGlvbiBvZiBjaGlsZHJlbiwgdXNlIGFuIGFycmF5IGluc3RlYWQuXCIpO3JldHVybiBofVxuZnVuY3Rpb24gUyhhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZD1bXSxjPTA7UihhLGQsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoZSxhLGMrKyl9KTtyZXR1cm4gZH1mdW5jdGlvbiBUKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1ifSxmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yn0pOy0xPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTAsYS5fcmVzdWx0PWIpfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdC5kZWZhdWx0O3Rocm93IGEuX3Jlc3VsdDt9XG52YXIgVT17Y3VycmVudDpudWxsfSxWPXt0cmFuc2l0aW9uOm51bGx9LFc9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6VSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzpWLFJlYWN0Q3VycmVudE93bmVyOkt9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpTLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe1MoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxlKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtTKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUyhhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKFwiUmVhY3QuQ2hpbGRyZW4ub25seSBleHBlY3RlZCB0byByZWNlaXZlIGEgc2luZ2xlIFJlYWN0IGVsZW1lbnQgY2hpbGQuXCIpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9RTtleHBvcnRzLkZyYWdtZW50PXA7XG5leHBvcnRzLlByb2ZpbGVyPXI7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUc7ZXhwb3J0cy5TdHJpY3RNb2RlPXE7ZXhwb3J0cy5TdXNwZW5zZT13O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VztcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihcIlJlYWN0LmNsb25lRWxlbWVudCguLi4pOiBUaGUgYXJndW1lbnQgbXVzdCBiZSBhIFJlYWN0IGVsZW1lbnQsIGJ1dCB5b3UgcGFzc2VkIFwiK2ErXCIuXCIpO3ZhciBkPUMoe30sYS5wcm9wcyksYz1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGM9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilKLmNhbGwoYixmKSYmIUwuaGFzT3duUHJvcGVydHkoZikmJihkW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO1xuZm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YyxyZWY6ayxwcm9wczpkLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEpe2E9eyQkdHlwZW9mOnUsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLF9kZWZhdWx0VmFsdWU6bnVsbCxfZ2xvYmFsTmFtZTpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp0LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07XG5leHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87ZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6VH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp4LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy5zdGFydFRyYW5zaXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9Vi50cmFuc2l0aW9uO1YudHJhbnNpdGlvbj17fTt0cnl7YSgpfWZpbmFsbHl7Vi50cmFuc2l0aW9uPWJ9fTtleHBvcnRzLnVuc3RhYmxlX2FjdD1mdW5jdGlvbigpe3Rocm93IEVycm9yKFwiYWN0KC4uLikgaXMgbm90IHN1cHBvcnRlZCBpbiBwcm9kdWN0aW9uIGJ1aWxkcyBvZiBSZWFjdC5cIik7fTtcbmV4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNvbnRleHQoYSl9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VEZWZlcnJlZFZhbHVlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlRGVmZXJyZWRWYWx1ZShhKX07ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VJZCgpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZSl9O1xuZXhwb3J0cy51c2VJbnNlcnRpb25FZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUluc2VydGlvbkVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlUmVkdWNlcihhLGIsZSl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlU3RhdGUoYSl9O2V4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlU3luY0V4dGVybmFsU3RvcmUoYSxiLGUpfTtcbmV4cG9ydHMudXNlVHJhbnNpdGlvbj1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlVHJhbnNpdGlvbigpfTtleHBvcnRzLnZlcnNpb249XCIxOC4wLjAtZmM0NmRiYTY3LTIwMjIwMzI5XCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7ZnVuY3Rpb24gZihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7MDxjOyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYoMDxnKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBoKGEpe3JldHVybiAwPT09YS5sZW5ndGg/bnVsbDphWzBdfWZ1bmN0aW9uIGsoYSl7aWYoMD09PWEubGVuZ3RoKXJldHVybiBudWxsO3ZhciBiPWFbMF0sYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoLHc9ZT4+PjE7ZDx3Oyl7dmFyIG09MiooZCsxKS0xLEM9YVttXSxuPW0rMSx4PWFbbl07aWYoMD5nKEMsYykpbjxlJiYwPmcoeCxDKT8oYVtkXT14LGFbbl09YyxkPW4pOihhW2RdPUMsYVttXT1jLGQ9bSk7ZWxzZSBpZihuPGUmJjA+Zyh4LGMpKWFbZF09eCxhW25dPWMsZD1uO2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9XG5mdW5jdGlvbiBnKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfWlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX12YXIgcj1bXSx0PVtdLHU9MSx2PW51bGwseT0zLHo9ITEsQT0hMSxCPSExLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDpudWxsLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6bnVsbCxGPVwidW5kZWZpbmVkXCIhPT10eXBlb2Ygc2V0SW1tZWRpYXRlP3NldEltbWVkaWF0ZTpudWxsO1xuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBuYXZpZ2F0b3ImJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZyYmbmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcuYmluZChuYXZpZ2F0b3Iuc2NoZWR1bGluZyk7ZnVuY3Rpb24gRyhhKXtmb3IodmFyIGI9aCh0KTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKWsodCk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlrKHQpLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsZihyLGIpO2Vsc2UgYnJlYWs7Yj1oKHQpfX1mdW5jdGlvbiBIKGEpe0I9ITE7RyhhKTtpZighQSlpZihudWxsIT09aChyKSlBPSEwLEkoSik7ZWxzZXt2YXIgYj1oKHQpO251bGwhPT1iJiZLKEgsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gSihhLGIpe0E9ITE7QiYmKEI9ITEsRShMKSxMPS0xKTt6PSEwO3ZhciBjPXk7dHJ5e0coYik7Zm9yKHY9aChyKTtudWxsIT09diYmKCEodi5leHBpcmF0aW9uVGltZT5iKXx8YSYmIU0oKSk7KXt2YXIgZD12LmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2LmNhbGxiYWNrPW51bGw7eT12LnByaW9yaXR5TGV2ZWw7dmFyIGU9ZCh2LmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/di5jYWxsYmFjaz1lOnY9PT1oKHIpJiZrKHIpO0coYil9ZWxzZSBrKHIpO3Y9aChyKX1pZihudWxsIT09dil2YXIgdz0hMDtlbHNle3ZhciBtPWgodCk7bnVsbCE9PW0mJksoSCxtLnN0YXJ0VGltZS1iKTt3PSExfXJldHVybiB3fWZpbmFsbHl7dj1udWxsLHk9Yyx6PSExfX12YXIgTj0hMSxPPW51bGwsTD0tMSxQPTUsUT0tMTtcbmZ1bmN0aW9uIE0oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKS1RPFA/ITE6ITB9ZnVuY3Rpb24gUigpe2lmKG51bGwhPT1PKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1E9YTt2YXIgYj0hMDt0cnl7Yj1PKCEwLGEpfWZpbmFsbHl7Yj9TKCk6KE49ITEsTz1udWxsKX19ZWxzZSBOPSExfXZhciBTO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBGKVM9ZnVuY3Rpb24oKXtGKFIpfTtlbHNlIGlmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9UjtTPWZ1bmN0aW9uKCl7VS5wb3N0TWVzc2FnZShudWxsKX19ZWxzZSBTPWZ1bmN0aW9uKCl7RChSLDApfTtmdW5jdGlvbiBJKGEpe089YTtOfHwoTj0hMCxTKCkpfWZ1bmN0aW9uIEsoYSxiKXtMPUQoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX1cbmV4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtBfHx6fHwoQT0hMCxJKEopKX07XG5leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpQPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gaChyKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaCh5KXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj15fXZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7eT1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307XG5leHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz15O3k9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e3k9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDp1KyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxmKHQsYSksbnVsbD09PWgocikmJmE9PT1oKHQpJiYoQj8oRShMKSxMPS0xKTpCPSEwLEsoSCxjLWQpKSk6KGEuc29ydEluZGV4PWUsZihyLGEpLEF8fHp8fChBPSEwLEkoSikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPU07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9eTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7eT1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Db25uZWN0QnV0dG9uLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Db25uZWN0QnV0dG9uLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICcuL0Nvbm5lY3RCdXR0b24uc2NzcydcblxuZXhwb3J0IGludGVyZmFjZSBDb25uZWN0UHJvcHMge1xuICBrdm1zdGF0ZTogbnVtYmVyXG4gIGhhbmRsZUNvbm5lY3RDbGljazogKGU6IGFueSkgPT4gdm9pZFxufVxuXG5leHBvcnQgY2xhc3MgQ29ubmVjdEJ1dHRvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxDb25uZWN0UHJvcHMsIHt9PiB7XG4gIHJlbmRlciAoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLnByb3BzLmhhbmRsZUNvbm5lY3RDbGlja30+XG4gICAgICAgIHt0aGlzLnByb3BzLmt2bXN0YXRlID09PSAxID8gJ0Nvbm5lY3RpbmcgS1ZNJyA6ICh0aGlzLnByb3BzLmt2bXN0YXRlID09PSAyID8gJ0Rpc2Nvbm5lY3QgS1ZNJyA6ICdDb25uZWN0IEtWTScpfVxuICAgICAgPC9idXR0b24+XG4gICAgKVxuICB9XG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0VuY29kaW5nT3B0aW9ucy5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vRW5jb2RpbmdPcHRpb25zLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICcuL0VuY29kaW5nT3B0aW9ucy5zY3NzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIElFbmNvZGluZ09wdGlvbnMge1xuICBjaGFuZ2VFbmNvZGluZzogKGVuY29kaW5nOiBudW1iZXIpID0+IHZvaWRcbiAgZ2V0Q29ubmVjdFN0YXRlOiAoKSA9PiBudW1iZXJcbn1cblxuZXhwb3J0IGNsYXNzIEVuY29kaW5nT3B0aW9ucyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJRW5jb2RpbmdPcHRpb25zLCB7IHZhbHVlOiBudW1iZXIgfT4ge1xuICBjb25zdHJ1Y3RvciAocHJvcHM6IElFbmNvZGluZ09wdGlvbnMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0geyB2YWx1ZTogMSB9XG4gICAgdGhpcy5vbkVuY29kaW5nQ2hhbmdlID0gdGhpcy5vbkVuY29kaW5nQ2hhbmdlLmJpbmQodGhpcylcbiAgfVxuXG4gIG9uRW5jb2RpbmdDaGFuZ2UgKGUpOiB2b2lkIHtcbiAgICAvLyBlLnBlcnNpc3QoKTtcbiAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWU6IGUudGFyZ2V0LnZhbHVlIH0pXG4gICAgdGhpcy5wcm9wcy5jaGFuZ2VFbmNvZGluZyhlLnRhcmdldC52YWx1ZSlcbiAgfVxuXG4gIHJlbmRlciAoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICByZXR1cm4gKFxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZW5jb2RpbmdcIj5cbiAgICAgICAgPGxhYmVsID5FbmNvZGluZzo8L2xhYmVsPlxuICAgICAgICA8c2VsZWN0IHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfSBjbGFzc05hbWU9IHt0aGlzLnByb3BzLmdldENvbm5lY3RTdGF0ZSgpID09PSAyID8gJ3JlbGRpc2FibGVkJyA6ICcnfSBvbkNoYW5nZT17dGhpcy5vbkVuY29kaW5nQ2hhbmdlfSBkaXNhYmxlZD17dGhpcy5wcm9wcy5nZXRDb25uZWN0U3RhdGUoKSA9PT0gMn0+XG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjFcIj5STEUgODwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyXCI+UkxFIDE2PC9vcHRpb24+XG4gICAgICAgIDwvc2VsZWN0PlxuICAgICAgPC9zcGFuPlxuICAgIClcbiAgfVxufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogQ29weXJpZ2h0IChjKSBJbnRlbCBDb3Jwb3JhdGlvbiAyMDE5XG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IEVuY29kaW5nT3B0aW9ucyB9IGZyb20gJy4vRW5jb2RpbmdPcHRpb25zJ1xuXG5leHBvcnQgaW50ZXJmYWNlIElEZXNrdG9wU2V0dGluZ3Mge1xuICBjaGFuZ2VEZXNrdG9wU2V0dGluZ3M6IChzZXR0aW5nczogYW55KSA9PiB2b2lkXG4gIGdldENvbm5lY3RTdGF0ZTogKCkgPT4gbnVtYmVyXG59XG5cbmV4cG9ydCBjbGFzcyBEZXNrdG9wU2V0dGluZ3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8SURlc2t0b3BTZXR0aW5ncz4ge1xuICBkZXNrdG9wc2V0dGluZ3MgPSB7XG4gICAgZW5jb2Rpbmc6IDFcbiAgfVxuXG4gIGNvbnN0cnVjdG9yIChwcm9wczogSURlc2t0b3BTZXR0aW5ncykge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMuY2hhbmdlRW5jb2RpbmcgPSB0aGlzLmNoYW5nZUVuY29kaW5nLmJpbmQodGhpcylcbiAgfVxuXG4gIGNoYW5nZUVuY29kaW5nIChlbmNvZGluZzogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5kZXNrdG9wc2V0dGluZ3MuZW5jb2RpbmcgPSBlbmNvZGluZ1xuICAgIHRoaXMucHJvcHMuY2hhbmdlRGVza3RvcFNldHRpbmdzKHRoaXMuZGVza3RvcHNldHRpbmdzKVxuICB9XG5cbiAgcmVuZGVyICgpOiBSZWFjdC5SZWFjdE5vZGUge1xuICAgIHJldHVybiAoXG4gICAgICA8RW5jb2RpbmdPcHRpb25zIGNoYW5nZUVuY29kaW5nPXt0aGlzLmNoYW5nZUVuY29kaW5nfSBnZXRDb25uZWN0U3RhdGU9e3RoaXMucHJvcHMuZ2V0Q29ubmVjdFN0YXRlfS8+XG4gICAgKVxuICB9XG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0hlYWRlci5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vSGVhZGVyLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ29ubmVjdEJ1dHRvbiB9IGZyb20gJy4vQ29ubmVjdEJ1dHRvbidcbmltcG9ydCB7IERlc2t0b3BTZXR0aW5ncyB9IGZyb20gJy4vRGVza3RvcFNldHRpbmdzJ1xuaW1wb3J0ICcuL0hlYWRlci5zY3NzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIElIZWFkZXJQcm9wcyB7XG4gIGt2bXN0YXRlOiBudW1iZXJcbiAgZGV2aWNlSWQ6IHN0cmluZyB8IG51bGxcbiAgc2VydmVyOiBzdHJpbmcgfCBudWxsXG4gIGhhbmRsZUNvbm5lY3RDbGljazogKGU6IGFueSkgPT4gdm9pZFxuICBjaGFuZ2VEZXNrdG9wU2V0dGluZ3M6IChzZXR0aW5nczogYW55KSA9PiB2b2lkXG4gIGdldENvbm5lY3RTdGF0ZTogKCkgPT4gbnVtYmVyXG59XG5cbmV4cG9ydCBjbGFzcyBIZWFkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8SUhlYWRlclByb3BzPiB7XG4gIHJlbmRlciAoKTogSlNYLkVsZW1lbnQge1xuICAgIHJldHVybiAoXG4gICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyXCI+XG4gICAgICAgICAgPENvbm5lY3RCdXR0b25cbiAgICAgICAgICAgIGhhbmRsZUNvbm5lY3RDbGljaz17dGhpcy5wcm9wcy5oYW5kbGVDb25uZWN0Q2xpY2t9XG4gICAgICAgICAgICBrdm1zdGF0ZT17dGhpcy5wcm9wcy5rdm1zdGF0ZX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxEZXNrdG9wU2V0dGluZ3NcbiAgICAgICAgICAgIGNoYW5nZURlc2t0b3BTZXR0aW5ncz17dGhpcy5wcm9wcy5jaGFuZ2VEZXNrdG9wU2V0dGluZ3N9XG4gICAgICAgICAgICBnZXRDb25uZWN0U3RhdGU9e3RoaXMucHJvcHMuZ2V0Q29ubmVjdFN0YXRlfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApXG4gIH1cbn1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKiogdXRpbGl0eSBmdW5jdGlvbiB0byBqb2luIHRoZSBjc3MgY2xhc3MgbmFtZXMgKi9cbmV4cG9ydCBjb25zdCBqb2luQ2xhc3NlcyA9ICguLi5jbGFzc05hbWVzKTogYW55ID0+XG4gIGNsYXNzTmFtZXNcbiAgICAuZmlsdGVyKChuYW1lKSA9PiAhIWlzRmFsc3kobmFtZSkpXG4gICAgLmpvaW4oJyAnKVxuICAgIC50cmltKClcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVIZWFkZXJzID0gKCk6IGFueSA9PiB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICB9XG4gIHJldHVybiBoZWFkZXJzXG59XG5cbmV4cG9ydCBjb25zdCBpc0ZhbHN5ID0gKHZhbHVlOiBhbnkpOiBib29sZWFuID0+IHZhbHVlICE9PSBudWxsICYmIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09ICcnICYmIHZhbHVlICE9PSBmYWxzZSAmJiB2YWx1ZSAhPT0gMFxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9QdXJlQ2FudmFzLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9QdXJlQ2FudmFzLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKiBBdXRob3IgOiBSYW11IEJhY2hhbGFcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBpc0ZhbHN5IH0gZnJvbSAnLi4vc2hhcmVkL1V0aWxpdGllcydcbmltcG9ydCAnLi9QdXJlQ2FudmFzLnNjc3MnXG5cbmV4cG9ydCBpbnRlcmZhY2UgUHVyZUNhbnZhc1Byb3BzIHtcbiAgY29udGV4dFJlZjogKGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKSA9PiB2b2lkXG4gIG1vdXNlRG93bjogKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50KSA9PiB2b2lkXG4gIG1vdXNlVXA6IChldmVudDogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZFxuICBtb3VzZU1vdmU6IChldmVudDogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZFxuICBjYW52YXNIZWlnaHQ6IHN0cmluZ1xuICBjYW52YXNXaWR0aDogc3RyaW5nXG59XG5cbmV4cG9ydCBjbGFzcyBQdXJlQ2FudmFzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFB1cmVDYW52YXNQcm9wcywge30+IHtcbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlICgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHJlbmRlciAoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICBjb25zdCBjYW52YXNBdHRyaWJ1dGVzOiBSZWFjdC5DYW52YXNIVE1MQXR0cmlidXRlczxIVE1MQ2FudmFzRWxlbWVudD4gPSB7XG4gICAgICB3aWR0aDogJzEzNjYnLFxuICAgICAgaGVpZ2h0OiAnNzY4JyxcbiAgICAgIG9uQ29udGV4dE1lbnU6IChlKSA9PiB7IGUucHJldmVudERlZmF1bHQoKTsgcmV0dXJuIGZhbHNlIH0sXG4gICAgICBvbk1vdXNlRG93bjogdGhpcy5wcm9wcy5tb3VzZURvd24sXG4gICAgICBvbk1vdXNlVXA6IHRoaXMucHJvcHMubW91c2VVcCxcbiAgICAgIG9uTW91c2VNb3ZlOiB0aGlzLnByb3BzLm1vdXNlTW92ZVxuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPGNhbnZhcyB7Li4uY2FudmFzQXR0cmlidXRlc30gY2xhc3NOYW1lPVwiY2FudmFzXCIgcmVmPXsoYzogYW55KSA9PiBpc0ZhbHN5KGMpID8gdGhpcy5wcm9wcy5jb250ZXh0UmVmKGMuZ2V0Q29udGV4dCgnMmQnKSkgOiBudWxsfS8+XG4gICAgKVxuICB9XG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1VJLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9VSS5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogQ29weXJpZ2h0IChjKSBJbnRlbCBDb3Jwb3JhdGlvbiAyMDE5XG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICogQXV0aG9yIDogUmFtdSBCYWNoYWxhXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IHsgSURhdGFQcm9jZXNzb3IsIElLdm1EYXRhQ29tbXVuaWNhdG9yLCBJTG9nZ2VyLCBMb2dMZXZlbCwgRGF0YVByb2Nlc3NvciwgRGVza3RvcCwgQU1US3ZtRGF0YVJlZGlyZWN0b3IsIEFNVERlc2t0b3AsIFByb3RvY29sLCBDb25zb2xlTG9nZ2VyLCBNb3VzZUhlbHBlciwgS2V5Qm9hcmRIZWxwZXIgfSBmcm9tICdAb3Blbi1hbXQtY2xvdWQtdG9vbGtpdC91aS10b29sa2l0L2NvcmUnXG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tICcuL0hlYWRlcidcbmltcG9ydCB7IFB1cmVDYW52YXMgfSBmcm9tICcuL1B1cmVDYW52YXMnXG5pbXBvcnQgeyBpc0ZhbHN5IH0gZnJvbSAnLi4vc2hhcmVkL1V0aWxpdGllcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0ICcuL1VJLnNjc3MnXG5cbmV4cG9ydCBpbnRlcmZhY2UgS1ZNUHJvcHMge1xuICBkZXZpY2VJZDogc3RyaW5nIHwgbnVsbFxuICBtcHNTZXJ2ZXI6IHN0cmluZyB8IG51bGxcbiAgbW91c2VEZWJvdW5jZVRpbWU6IG51bWJlclxuICBjYW52YXNIZWlnaHQ6IHN0cmluZ1xuICBjYW52YXNXaWR0aDogc3RyaW5nXG4gIGF1dG9Db25uZWN0PzogYm9vbGVhblxuICBhdXRoVG9rZW46IHN0cmluZ1xufVxuXG5leHBvcnQgY2xhc3MgS1ZNIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PEtWTVByb3BzLCB7IGt2bXN0YXRlOiBudW1iZXIsIGVuY29kaW5nT3B0aW9uOiBudW1iZXIgfT4ge1xuICBtb2R1bGU6IERlc2t0b3AgfCBhbnlcbiAgZGF0YVByb2Nlc3NvcjogSURhdGFQcm9jZXNzb3IgfCBhbnlcbiAgcmVkaXJlY3RvcjogSUt2bURhdGFDb21tdW5pY2F0b3IgfCBhbnlcbiAgbW91c2VIZWxwZXI6IE1vdXNlSGVscGVyIHwgYW55XG4gIGxvZ2dlcjogSUxvZ2dlclxuICBrZXlib2FyZDogS2V5Qm9hcmRIZWxwZXIgfCBhbnlcbiAgZGVza3RvcFNldHRpbmdzQ2hhbmdlID0gZmFsc2VcbiAgY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkRcbiAgZnI6IEZpbGVSZWFkZXJcbiAgY29uc3RydWN0b3IgKHByb3BzOiBLVk1Qcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMuc3RhdGUgPSB7IGt2bXN0YXRlOiAwLCBlbmNvZGluZ09wdGlvbjogMSB9XG4gICAgdGhpcy5sb2dnZXIgPSBuZXcgQ29uc29sZUxvZ2dlcihMb2dMZXZlbC5FUlJPUilcbiAgICB0aGlzLnNhdmVDb250ZXh0ID0gdGhpcy5zYXZlQ29udGV4dC5iaW5kKHRoaXMpXG4gICAgdGhpcy5zdGFydEtWTSA9IHRoaXMuc3RhcnRLVk0uYmluZCh0aGlzKVxuICAgIHRoaXMuc3RvcEtWTSA9IHRoaXMuc3RvcEtWTS5iaW5kKHRoaXMpXG4gICAgdGhpcy5oYW5kbGVDb25uZWN0Q2xpY2sgPSB0aGlzLmhhbmRsZUNvbm5lY3RDbGljay5iaW5kKHRoaXMpXG4gICAgdGhpcy5nZXRSZW5kZXJTdGF0dXMgPSB0aGlzLmdldFJlbmRlclN0YXR1cy5iaW5kKHRoaXMpXG4gICAgdGhpcy5PbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZSA9IHRoaXMuT25Db25uZWN0aW9uU3RhdGVDaGFuZ2UuYmluZCh0aGlzKVxuICAgIHRoaXMuY2hhbmdlRGVza3RvcFNldHRpbmdzID0gdGhpcy5jaGFuZ2VEZXNrdG9wU2V0dGluZ3MuYmluZCh0aGlzKVxuICB9XG5cbiAgc2F2ZUNvbnRleHQgKGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKTogdm9pZCB7XG4gICAgdGhpcy5sb2dnZXIuZGVidWcoJ3NhdmUgY29udGV4dCBjYWxsZWQnKVxuICAgIHRoaXMuY3R4ID0gY3R4XG4gICAgdGhpcy5pbml0KClcbiAgfVxuXG4gIGluaXQgKCk6IHZvaWQge1xuICAgIGNvbnN0IGRldmljZVV1aWQ6IHN0cmluZyA9IHRoaXMucHJvcHMuZGV2aWNlSWQgIT0gbnVsbCA/IHRoaXMucHJvcHMuZGV2aWNlSWQgOiAnJ1xuICAgIGNvbnN0IHNlcnZlcjogc3RyaW5nID0gdGhpcy5wcm9wcy5tcHNTZXJ2ZXIgIT0gbnVsbCA/IHRoaXMucHJvcHMubXBzU2VydmVyLnJlcGxhY2UoJ2h0dHAnLCAnd3MnKSA6ICcnXG4gICAgdGhpcy5tb2R1bGUgPSBuZXcgQU1URGVza3RvcCh0aGlzLmxvZ2dlciwgdGhpcy5jdHgpXG4gICAgdGhpcy5yZWRpcmVjdG9yID0gbmV3IEFNVEt2bURhdGFSZWRpcmVjdG9yKHRoaXMubG9nZ2VyLCBQcm90b2NvbC5LVk0sIG5ldyBGaWxlUmVhZGVyKCksIGRldmljZVV1aWQsIDE2OTk0LCAnJywgJycsIDAsIDAsIHRoaXMucHJvcHMuYXV0aFRva2VuLCBzZXJ2ZXIpXG4gICAgdGhpcy5kYXRhUHJvY2Vzc29yID0gbmV3IERhdGFQcm9jZXNzb3IodGhpcy5sb2dnZXIsIHRoaXMucmVkaXJlY3RvciwgdGhpcy5tb2R1bGUpXG4gICAgdGhpcy5tb3VzZUhlbHBlciA9IG5ldyBNb3VzZUhlbHBlcih0aGlzLm1vZHVsZSwgdGhpcy5yZWRpcmVjdG9yLCB0aGlzLnByb3BzLm1vdXNlRGVib3VuY2VUaW1lIDwgMjAwID8gMjAwIDogdGhpcy5wcm9wcy5tb3VzZURlYm91bmNlVGltZSkgLy8gYW55dGhpbmcgbGVzcyB0aGFuIDIwMCBtcyBjYXVzZXMgdGltZW91dFxuICAgIHRoaXMua2V5Ym9hcmQgPSBuZXcgS2V5Qm9hcmRIZWxwZXIodGhpcy5tb2R1bGUsIHRoaXMucmVkaXJlY3RvcilcblxuICAgIHRoaXMucmVkaXJlY3Rvci5vblByb2Nlc3NEYXRhID0gdGhpcy5tb2R1bGUucHJvY2Vzc0RhdGEuYmluZCh0aGlzLm1vZHVsZSlcbiAgICB0aGlzLnJlZGlyZWN0b3Iub25TdGFydCA9IHRoaXMubW9kdWxlLnN0YXJ0LmJpbmQodGhpcy5tb2R1bGUpXG4gICAgdGhpcy5yZWRpcmVjdG9yLm9uTmV3U3RhdGUgPSB0aGlzLm1vZHVsZS5vblN0YXRlQ2hhbmdlLmJpbmQodGhpcy5tb2R1bGUpXG4gICAgdGhpcy5yZWRpcmVjdG9yLm9uU2VuZEt2bURhdGEgPSB0aGlzLm1vZHVsZS5vblNlbmRLdm1EYXRhLmJpbmQodGhpcy5tb2R1bGUpXG4gICAgdGhpcy5yZWRpcmVjdG9yLm9uU3RhdGVDaGFuZ2VkID0gdGhpcy5PbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZS5iaW5kKHRoaXMpXG4gICAgdGhpcy5yZWRpcmVjdG9yLm9uRXJyb3IgPSB0aGlzLm9uUmVkaXJlY3RvckVycm9yLmJpbmQodGhpcylcbiAgICB0aGlzLm1vZHVsZS5vblNlbmQgPSB0aGlzLnJlZGlyZWN0b3Iuc2VuZC5iaW5kKHRoaXMucmVkaXJlY3RvcilcbiAgICB0aGlzLm1vZHVsZS5vblByb2Nlc3NEYXRhID0gdGhpcy5kYXRhUHJvY2Vzc29yLnByb2Nlc3NEYXRhLmJpbmQodGhpcy5kYXRhUHJvY2Vzc29yKVxuICAgIHRoaXMubW9kdWxlLmJwcCA9IHRoaXMuc3RhdGUuZW5jb2RpbmdPcHRpb25cbiAgfVxuXG4gIGNsZWFuVXAgKCk6IHZvaWQge1xuICAgIHRoaXMubW9kdWxlID0gbnVsbFxuICAgIHRoaXMucmVkaXJlY3RvciA9IG51bGxcbiAgICB0aGlzLmRhdGFQcm9jZXNzb3IgPSBudWxsXG4gICAgdGhpcy5tb3VzZUhlbHBlciA9IG51bGxcbiAgICB0aGlzLmtleWJvYXJkID0gbnVsbFxuICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmN0eC5jYW52YXMuaGVpZ2h0LCB0aGlzLmN0eC5jYW52YXMud2lkdGgpXG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCAoKTogdm9pZCB7XG4gICAgdGhpcy5zdG9wS1ZNKClcbiAgfVxuXG4gIG9uUmVkaXJlY3RvckVycm9yICgpOiB2b2lkIHtcbiAgICB0aGlzLnJlc2V0KClcbiAgfVxuXG4gIHJlc2V0ICgpOiB2b2lkIHtcbiAgICB0aGlzLmNsZWFuVXAoKVxuICAgIHRoaXMuaW5pdCgpXG4gIH1cblxuICBPbkNvbm5lY3Rpb25TdGF0ZUNoYW5nZSAocmVkaXJlY3RvcjogYW55LCBzdGF0ZTogbnVtYmVyKTogYW55IHtcbiAgICB0aGlzLnNldFN0YXRlKHsga3Ztc3RhdGU6IHN0YXRlIH0pXG4gICAgaWYgKHRoaXMuZGVza3RvcFNldHRpbmdzQ2hhbmdlICYmIHN0YXRlID09PSAwKSB7XG4gICAgICB0aGlzLmRlc2t0b3BTZXR0aW5nc0NoYW5nZSA9IGZhbHNlXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc3RhcnRLVk0oKSwgMjAwMCkgLy8gSW50cm9kdWNlZCBkZWxheSB0byBzdGFydCBLVk1cbiAgICB9XG4gIH1cblxuICBjaGFuZ2VEZXNrdG9wU2V0dGluZ3MgKHNldHRpbmdzOiBhbnkpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5rdm1zdGF0ZSA9PT0gMikge1xuICAgICAgdGhpcy5kZXNrdG9wU2V0dGluZ3NDaGFuZ2UgPSB0cnVlXG4gICAgICB0aGlzLm1vZHVsZS5icHAgPSBzZXR0aW5ncy5lbmNvZGluZ1xuICAgICAgdGhpcy5zdG9wS1ZNKClcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVuY29kaW5nT3B0aW9uOiBwYXJzZUludChzZXR0aW5ncy5lbmNvZGluZylcbiAgICAgIH0pXG4gICAgICB0aGlzLm1vZHVsZS5icHAgPSBwYXJzZUludChzZXR0aW5ncy5lbmNvZGluZylcbiAgICB9XG4gIH1cblxuICBzdGFydEtWTSAoKTogdm9pZCB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLnJlZGlyZWN0b3IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcInN0YXJ0S1ZNXCIpXG4gICAgICB0aGlzLnJlZGlyZWN0b3Iuc3RhcnQoV2ViU29ja2V0KVxuICAgIH1cbiAgICBpZiAodHlwZW9mIHRoaXMua2V5Ym9hcmQgIT09ICd1bmRlZmluZWQnKSB0aGlzLmtleWJvYXJkLkdyYWJLZXlJbnB1dCgpXG4gIH1cblxuICBzdG9wS1ZNICgpOiB2b2lkIHtcbiAgICBpZiAodHlwZW9mIHRoaXMucmVkaXJlY3RvciAhPT0gJ3VuZGVmaW5lZCcpIHRoaXMucmVkaXJlY3Rvci5zdG9wKClcbiAgICBpZiAodHlwZW9mIHRoaXMua2V5Ym9hcmQgIT09ICd1bmRlZmluZWQnKSB0aGlzLmtleWJvYXJkLlVuR3JhYktleUlucHV0KClcbiAgICB0aGlzLnJlc2V0KClcbiAgfVxuXG4gIGdldFJlbmRlclN0YXR1cyAoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5tb2R1bGUuc3RhdGUgLy8gdXNlZCB0byBjaGVjayBpZiBjYW52YXMgaXMgaW4gdGhlIG1pZGRsZSBvZiByZW5kZXJpbmcgYSBjb21wbGV0ZSBmcmFtZS5cbiAgfVxuXG4gIGhhbmRsZUNvbm5lY3RDbGljayAoZSk6IHZvaWQge1xuICAgIGUucGVyc2lzdCgpXG4gICAgaWYgKHRoaXMuc3RhdGUua3Ztc3RhdGUgPT09IDApIHtcbiAgICAgIHRoaXMuc3RhcnRLVk0oKVxuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS5rdm1zdGF0ZSA9PT0gMSkge1xuICAgICAgLy8gVGFrZSBBY3Rpb25cbiAgICB9IGVsc2UgaWYgKHRoaXMuc3RhdGUua3Ztc3RhdGUgPT09IDIpIHtcbiAgICAgIHRoaXMuc3RvcEtWTSgpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFRha2UgQWN0aW9uXG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlIChwcmV2UHJvcHMpOiB2b2lkIHtcbiAgICBpZiAocHJldlByb3BzLmRldmljZUlkICE9PSB0aGlzLnByb3BzLmRldmljZUlkKSB7XG4gICAgICB0aGlzLnN0b3BLVk0oKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciAoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICByZXR1cm4gKFxuICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FudmFzLWNvbnRhaW5lclwiPlxuICAgICAgICAgeyFpc0ZhbHN5KHRoaXMucHJvcHMuYXV0b0Nvbm5lY3QpXG4gICAgICAgICAgID8gPEhlYWRlciBrZXk9XCJrdm1faGVhZGVyXCIgaGFuZGxlQ29ubmVjdENsaWNrPXt0aGlzLmhhbmRsZUNvbm5lY3RDbGlja30gZ2V0Q29ubmVjdFN0YXRlPXsoKSA9PiB0aGlzLnN0YXRlLmt2bXN0YXRlfSBrdm1zdGF0ZT17dGhpcy5zdGF0ZS5rdm1zdGF0ZX0gY2hhbmdlRGVza3RvcFNldHRpbmdzPXt0aGlzLmNoYW5nZURlc2t0b3BTZXR0aW5nc30gZGV2aWNlSWQ9e3RoaXMucHJvcHMuZGV2aWNlSWR9IHNlcnZlcj17dGhpcy5wcm9wcy5tcHNTZXJ2ZXJ9XG4gICAgICAgICAvPlxuICAgICAgICAgICA6ICcnfVxuICAgICAgICAgPFB1cmVDYW52YXMga2V5PVwia3ZtX2NvbXBcIiBjb250ZXh0UmVmPXtjdHggPT4gdGhpcy5zYXZlQ29udGV4dChjdHgpfSBjYW52YXNIZWlnaHQ9e3RoaXMucHJvcHMuY2FudmFzSGVpZ2h0fSBjYW52YXNXaWR0aD17dGhpcy5wcm9wcy5jYW52YXNXaWR0aH1cbiAgICAgICAgICAgbW91c2VNb3ZlPXtldmVudCA9PiB7IGlmICh0eXBlb2YgdGhpcy5tb3VzZUhlbHBlciAhPT0gJ3VuZGVmaW5lZCcpIHRoaXMubW91c2VIZWxwZXIubW91c2Vtb3ZlKGV2ZW50KSB9fVxuICAgICAgICAgICBtb3VzZURvd249e2V2ZW50ID0+IHsgaWYgKHR5cGVvZiB0aGlzLm1vdXNlSGVscGVyICE9PSAndW5kZWZpbmVkJykgdGhpcy5tb3VzZUhlbHBlci5tb3VzZWRvd24oZXZlbnQpIH19XG4gICAgICAgICAgIG1vdXNlVXA9e2V2ZW50ID0+IHsgaWYgKHR5cGVvZiB0aGlzLm1vdXNlSGVscGVyICE9PSAndW5kZWZpbmVkJykgdGhpcy5tb3VzZUhlbHBlci5tb3VzZXVwKGV2ZW50KSB9fVxuICAgICAgICAgLz5cbiAgICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgfSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICB9LCBfdHlwZW9mKG9iaik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn0iLCJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcblxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufSIsImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc3ViQ2xhc3MsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSBcIi4vdHlwZW9mLmpzXCI7XG5pbXBvcnQgYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCIuL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgIHJldHVybiBjYWxsO1xuICB9IGVsc2UgaWYgKGNhbGwgIT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTtcbiAgfVxuXG4gIHJldHVybiBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICB9O1xuICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iLCJpbXBvcnQgX3R5cGVvZiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayc7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzJztcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZCc7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzJztcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YnO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSc7XG5pbXBvcnQgX3RvQXJyYXkgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9BcnJheSc7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHsgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyB9IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxudmFyIGNvbnNvbGVMb2dnZXIgPSB7XG4gIHR5cGU6ICdsb2dnZXInLFxuICBsb2c6IGZ1bmN0aW9uIGxvZyhhcmdzKSB7XG4gICAgdGhpcy5vdXRwdXQoJ2xvZycsIGFyZ3MpO1xuICB9LFxuICB3YXJuOiBmdW5jdGlvbiB3YXJuKGFyZ3MpIHtcbiAgICB0aGlzLm91dHB1dCgnd2FybicsIGFyZ3MpO1xuICB9LFxuICBlcnJvcjogZnVuY3Rpb24gZXJyb3IoYXJncykge1xuICAgIHRoaXMub3V0cHV0KCdlcnJvcicsIGFyZ3MpO1xuICB9LFxuICBvdXRwdXQ6IGZ1bmN0aW9uIG91dHB1dCh0eXBlLCBhcmdzKSB7XG4gICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZVt0eXBlXSkgY29uc29sZVt0eXBlXS5hcHBseShjb25zb2xlLCBhcmdzKTtcbiAgfVxufTtcblxudmFyIExvZ2dlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTG9nZ2VyKGNvbmNyZXRlTG9nZ2VyKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvZ2dlcik7XG5cbiAgICB0aGlzLmluaXQoY29uY3JldGVMb2dnZXIsIG9wdGlvbnMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExvZ2dlciwgW3tcbiAgICBrZXk6IFwiaW5pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KGNvbmNyZXRlTG9nZ2VyKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgICB0aGlzLnByZWZpeCA9IG9wdGlvbnMucHJlZml4IHx8ICdpMThuZXh0Oic7XG4gICAgICB0aGlzLmxvZ2dlciA9IGNvbmNyZXRlTG9nZ2VyIHx8IGNvbnNvbGVMb2dnZXI7XG4gICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgdGhpcy5kZWJ1ZyA9IG9wdGlvbnMuZGVidWc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldERlYnVnXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldERlYnVnKGJvb2wpIHtcbiAgICAgIHRoaXMuZGVidWcgPSBib29sO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2dcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9nKCkge1xuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmZvcndhcmQoYXJncywgJ2xvZycsICcnLCB0cnVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwid2FyblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB3YXJuKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuZm9yd2FyZChhcmdzLCAnd2FybicsICcnLCB0cnVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXJyb3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXJyb3IoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjMpLCBfa2V5MyA9IDA7IF9rZXkzIDwgX2xlbjM7IF9rZXkzKyspIHtcbiAgICAgICAgYXJnc1tfa2V5M10gPSBhcmd1bWVudHNbX2tleTNdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5mb3J3YXJkKGFyZ3MsICdlcnJvcicsICcnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVwcmVjYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlcHJlY2F0ZSgpIHtcbiAgICAgIGZvciAodmFyIF9sZW40ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuNCksIF9rZXk0ID0gMDsgX2tleTQgPCBfbGVuNDsgX2tleTQrKykge1xuICAgICAgICBhcmdzW19rZXk0XSA9IGFyZ3VtZW50c1tfa2V5NF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmZvcndhcmQoYXJncywgJ3dhcm4nLCAnV0FSTklORyBERVBSRUNBVEVEOiAnLCB0cnVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yd2FyZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3J3YXJkKGFyZ3MsIGx2bCwgcHJlZml4LCBkZWJ1Z09ubHkpIHtcbiAgICAgIGlmIChkZWJ1Z09ubHkgJiYgIXRoaXMuZGVidWcpIHJldHVybiBudWxsO1xuICAgICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykgYXJnc1swXSA9IFwiXCIuY29uY2F0KHByZWZpeCkuY29uY2F0KHRoaXMucHJlZml4LCBcIiBcIikuY29uY2F0KGFyZ3NbMF0pO1xuICAgICAgcmV0dXJuIHRoaXMubG9nZ2VyW2x2bF0oYXJncyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNyZWF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUobW9kdWxlTmFtZSkge1xuICAgICAgcmV0dXJuIG5ldyBMb2dnZXIodGhpcy5sb2dnZXIsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwge1xuICAgICAgICBwcmVmaXg6IFwiXCIuY29uY2F0KHRoaXMucHJlZml4LCBcIjpcIikuY29uY2F0KG1vZHVsZU5hbWUsIFwiOlwiKVxuICAgICAgfSksIHRoaXMub3B0aW9ucykpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2dnZXI7XG59KCk7XG5cbnZhciBiYXNlTG9nZ2VyID0gbmV3IExvZ2dlcigpO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV2ZW50RW1pdHRlcik7XG5cbiAgICB0aGlzLm9ic2VydmVycyA9IHt9O1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEV2ZW50RW1pdHRlciwgW3tcbiAgICBrZXk6IFwib25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb24oZXZlbnRzLCBsaXN0ZW5lcikge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgZXZlbnRzLnNwbGl0KCcgJykuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgX3RoaXMub2JzZXJ2ZXJzW2V2ZW50XSA9IF90aGlzLm9ic2VydmVyc1tldmVudF0gfHwgW107XG5cbiAgICAgICAgX3RoaXMub2JzZXJ2ZXJzW2V2ZW50XS5wdXNoKGxpc3RlbmVyKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9mZlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgICBpZiAoIXRoaXMub2JzZXJ2ZXJzW2V2ZW50XSkgcmV0dXJuO1xuXG4gICAgICBpZiAoIWxpc3RlbmVyKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm9ic2VydmVyc1tldmVudF07XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5vYnNlcnZlcnNbZXZlbnRdID0gdGhpcy5vYnNlcnZlcnNbZXZlbnRdLmZpbHRlcihmdW5jdGlvbiAobCkge1xuICAgICAgICByZXR1cm4gbCAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZW1pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbWl0KGV2ZW50KSB7XG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vYnNlcnZlcnNbZXZlbnRdKSB7XG4gICAgICAgIHZhciBjbG9uZWQgPSBbXS5jb25jYXQodGhpcy5vYnNlcnZlcnNbZXZlbnRdKTtcbiAgICAgICAgY2xvbmVkLmZvckVhY2goZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgICAgb2JzZXJ2ZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9ic2VydmVyc1snKiddKSB7XG4gICAgICAgIHZhciBfY2xvbmVkID0gW10uY29uY2F0KHRoaXMub2JzZXJ2ZXJzWycqJ10pO1xuXG4gICAgICAgIF9jbG9uZWQuZm9yRWFjaChmdW5jdGlvbiAob2JzZXJ2ZXIpIHtcbiAgICAgICAgICBvYnNlcnZlci5hcHBseShvYnNlcnZlciwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRXZlbnRFbWl0dGVyO1xufSgpO1xuXG5mdW5jdGlvbiBkZWZlcigpIHtcbiAgdmFyIHJlcztcbiAgdmFyIHJlajtcbiAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgcmVzID0gcmVzb2x2ZTtcbiAgICByZWogPSByZWplY3Q7XG4gIH0pO1xuICBwcm9taXNlLnJlc29sdmUgPSByZXM7XG4gIHByb21pc2UucmVqZWN0ID0gcmVqO1xuICByZXR1cm4gcHJvbWlzZTtcbn1cbmZ1bmN0aW9uIG1ha2VTdHJpbmcob2JqZWN0KSB7XG4gIGlmIChvYmplY3QgPT0gbnVsbCkgcmV0dXJuICcnO1xuICByZXR1cm4gJycgKyBvYmplY3Q7XG59XG5mdW5jdGlvbiBjb3B5KGEsIHMsIHQpIHtcbiAgYS5mb3JFYWNoKGZ1bmN0aW9uIChtKSB7XG4gICAgaWYgKHNbbV0pIHRbbV0gPSBzW21dO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0TGFzdE9mUGF0aChvYmplY3QsIHBhdGgsIEVtcHR5KSB7XG4gIGZ1bmN0aW9uIGNsZWFuS2V5KGtleSkge1xuICAgIHJldHVybiBrZXkgJiYga2V5LmluZGV4T2YoJyMjIycpID4gLTEgPyBrZXkucmVwbGFjZSgvIyMjL2csICcuJykgOiBrZXk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5Ob3RUcmF2ZXJzZURlZXBlcigpIHtcbiAgICByZXR1cm4gIW9iamVjdCB8fCB0eXBlb2Ygb2JqZWN0ID09PSAnc3RyaW5nJztcbiAgfVxuXG4gIHZhciBzdGFjayA9IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJyA/IFtdLmNvbmNhdChwYXRoKSA6IHBhdGguc3BsaXQoJy4nKTtcblxuICB3aGlsZSAoc3RhY2subGVuZ3RoID4gMSkge1xuICAgIGlmIChjYW5Ob3RUcmF2ZXJzZURlZXBlcigpKSByZXR1cm4ge307XG4gICAgdmFyIGtleSA9IGNsZWFuS2V5KHN0YWNrLnNoaWZ0KCkpO1xuICAgIGlmICghb2JqZWN0W2tleV0gJiYgRW1wdHkpIG9iamVjdFtrZXldID0gbmV3IEVtcHR5KCk7XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkge1xuICAgICAgb2JqZWN0ID0gb2JqZWN0W2tleV07XG4gICAgfSBlbHNlIHtcbiAgICAgIG9iamVjdCA9IHt9O1xuICAgIH1cbiAgfVxuXG4gIGlmIChjYW5Ob3RUcmF2ZXJzZURlZXBlcigpKSByZXR1cm4ge307XG4gIHJldHVybiB7XG4gICAgb2JqOiBvYmplY3QsXG4gICAgazogY2xlYW5LZXkoc3RhY2suc2hpZnQoKSlcbiAgfTtcbn1cblxuZnVuY3Rpb24gc2V0UGF0aChvYmplY3QsIHBhdGgsIG5ld1ZhbHVlKSB7XG4gIHZhciBfZ2V0TGFzdE9mUGF0aCA9IGdldExhc3RPZlBhdGgob2JqZWN0LCBwYXRoLCBPYmplY3QpLFxuICAgICAgb2JqID0gX2dldExhc3RPZlBhdGgub2JqLFxuICAgICAgayA9IF9nZXRMYXN0T2ZQYXRoLms7XG5cbiAgb2JqW2tdID0gbmV3VmFsdWU7XG59XG5mdW5jdGlvbiBwdXNoUGF0aChvYmplY3QsIHBhdGgsIG5ld1ZhbHVlLCBjb25jYXQpIHtcbiAgdmFyIF9nZXRMYXN0T2ZQYXRoMiA9IGdldExhc3RPZlBhdGgob2JqZWN0LCBwYXRoLCBPYmplY3QpLFxuICAgICAgb2JqID0gX2dldExhc3RPZlBhdGgyLm9iaixcbiAgICAgIGsgPSBfZ2V0TGFzdE9mUGF0aDIuaztcblxuICBvYmpba10gPSBvYmpba10gfHwgW107XG4gIGlmIChjb25jYXQpIG9ialtrXSA9IG9ialtrXS5jb25jYXQobmV3VmFsdWUpO1xuICBpZiAoIWNvbmNhdCkgb2JqW2tdLnB1c2gobmV3VmFsdWUpO1xufVxuZnVuY3Rpb24gZ2V0UGF0aChvYmplY3QsIHBhdGgpIHtcbiAgdmFyIF9nZXRMYXN0T2ZQYXRoMyA9IGdldExhc3RPZlBhdGgob2JqZWN0LCBwYXRoKSxcbiAgICAgIG9iaiA9IF9nZXRMYXN0T2ZQYXRoMy5vYmosXG4gICAgICBrID0gX2dldExhc3RPZlBhdGgzLms7XG5cbiAgaWYgKCFvYmopIHJldHVybiB1bmRlZmluZWQ7XG4gIHJldHVybiBvYmpba107XG59XG5mdW5jdGlvbiBnZXRQYXRoV2l0aERlZmF1bHRzKGRhdGEsIGRlZmF1bHREYXRhLCBrZXkpIHtcbiAgdmFyIHZhbHVlID0gZ2V0UGF0aChkYXRhLCBrZXkpO1xuXG4gIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIGdldFBhdGgoZGVmYXVsdERhdGEsIGtleSk7XG59XG5mdW5jdGlvbiBkZWVwRXh0ZW5kKHRhcmdldCwgc291cmNlLCBvdmVyd3JpdGUpIHtcbiAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICBpZiAocHJvcCAhPT0gJ19fcHJvdG9fXycgJiYgcHJvcCAhPT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgaWYgKHByb3AgaW4gdGFyZ2V0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0W3Byb3BdID09PSAnc3RyaW5nJyB8fCB0YXJnZXRbcHJvcF0gaW5zdGFuY2VvZiBTdHJpbmcgfHwgdHlwZW9mIHNvdXJjZVtwcm9wXSA9PT0gJ3N0cmluZycgfHwgc291cmNlW3Byb3BdIGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgICAgICAgaWYgKG92ZXJ3cml0ZSkgdGFyZ2V0W3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRlZXBFeHRlbmQodGFyZ2V0W3Byb3BdLCBzb3VyY2VbcHJvcF0sIG92ZXJ3cml0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuZnVuY3Rpb24gcmVnZXhFc2NhcGUoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvW1xcLVxcW1xcXVxcL1xce1xcfVxcKFxcKVxcKlxcK1xcP1xcLlxcXFxcXF5cXCRcXHxdL2csICdcXFxcJCYnKTtcbn1cbnZhciBfZW50aXR5TWFwID0ge1xuICAnJic6ICcmYW1wOycsXG4gICc8JzogJyZsdDsnLFxuICAnPic6ICcmZ3Q7JyxcbiAgJ1wiJzogJyZxdW90OycsXG4gIFwiJ1wiOiAnJiMzOTsnLFxuICAnLyc6ICcmI3gyRjsnXG59O1xuZnVuY3Rpb24gZXNjYXBlKGRhdGEpIHtcbiAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBkYXRhLnJlcGxhY2UoL1smPD5cIidcXC9dL2csIGZ1bmN0aW9uIChzKSB7XG4gICAgICByZXR1cm4gX2VudGl0eU1hcFtzXTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBkYXRhO1xufVxudmFyIGlzSUUxMCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5uYXZpZ2F0b3IgJiYgd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQgJiYgd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTVNJRScpID4gLTE7XG52YXIgY2hhcnMgPSBbJyAnLCAnLCcsICc/JywgJyEnLCAnOyddO1xuZnVuY3Rpb24gbG9va3NMaWtlT2JqZWN0UGF0aChrZXksIG5zU2VwYXJhdG9yLCBrZXlTZXBhcmF0b3IpIHtcbiAgbnNTZXBhcmF0b3IgPSBuc1NlcGFyYXRvciB8fCAnJztcbiAga2V5U2VwYXJhdG9yID0ga2V5U2VwYXJhdG9yIHx8ICcnO1xuICB2YXIgcG9zc2libGVDaGFycyA9IGNoYXJzLmZpbHRlcihmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiBuc1NlcGFyYXRvci5pbmRleE9mKGMpIDwgMCAmJiBrZXlTZXBhcmF0b3IuaW5kZXhPZihjKSA8IDA7XG4gIH0pO1xuICBpZiAocG9zc2libGVDaGFycy5sZW5ndGggPT09IDApIHJldHVybiB0cnVlO1xuICB2YXIgciA9IG5ldyBSZWdFeHAoXCIoXCIuY29uY2F0KHBvc3NpYmxlQ2hhcnMubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIGMgPT09ICc/JyA/ICdcXFxcPycgOiBjO1xuICB9KS5qb2luKCd8JyksIFwiKVwiKSk7XG4gIHZhciBtYXRjaGVkID0gIXIudGVzdChrZXkpO1xuXG4gIGlmICghbWF0Y2hlZCkge1xuICAgIHZhciBraSA9IGtleS5pbmRleE9mKGtleVNlcGFyYXRvcik7XG5cbiAgICBpZiAoa2kgPiAwICYmICFyLnRlc3Qoa2V5LnN1YnN0cmluZygwLCBraSkpKSB7XG4gICAgICBtYXRjaGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlZDtcbn1cblxuZnVuY3Rpb24gb3duS2V5cyQxKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSB7IHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsgfSBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCQxKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMkMShPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzJDEoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5mdW5jdGlvbiBkZWVwRmluZChvYmosIHBhdGgpIHtcbiAgdmFyIGtleVNlcGFyYXRvciA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogJy4nO1xuICBpZiAoIW9iaikgcmV0dXJuIHVuZGVmaW5lZDtcbiAgaWYgKG9ialtwYXRoXSkgcmV0dXJuIG9ialtwYXRoXTtcbiAgdmFyIHBhdGhzID0gcGF0aC5zcGxpdChrZXlTZXBhcmF0b3IpO1xuICB2YXIgY3VycmVudCA9IG9iajtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGhzLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCFjdXJyZW50KSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgaWYgKHR5cGVvZiBjdXJyZW50W3BhdGhzW2ldXSA9PT0gJ3N0cmluZycgJiYgaSArIDEgPCBwYXRocy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKGN1cnJlbnRbcGF0aHNbaV1dID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHZhciBqID0gMjtcbiAgICAgIHZhciBwID0gcGF0aHMuc2xpY2UoaSwgaSArIGopLmpvaW4oa2V5U2VwYXJhdG9yKTtcbiAgICAgIHZhciBtaXggPSBjdXJyZW50W3BdO1xuXG4gICAgICB3aGlsZSAobWl4ID09PSB1bmRlZmluZWQgJiYgcGF0aHMubGVuZ3RoID4gaSArIGopIHtcbiAgICAgICAgaisrO1xuICAgICAgICBwID0gcGF0aHMuc2xpY2UoaSwgaSArIGopLmpvaW4oa2V5U2VwYXJhdG9yKTtcbiAgICAgICAgbWl4ID0gY3VycmVudFtwXTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1peCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgICBpZiAocGF0aC5lbmRzV2l0aChwKSkge1xuICAgICAgICBpZiAodHlwZW9mIG1peCA9PT0gJ3N0cmluZycpIHJldHVybiBtaXg7XG4gICAgICAgIGlmIChwICYmIHR5cGVvZiBtaXhbcF0gPT09ICdzdHJpbmcnKSByZXR1cm4gbWl4W3BdO1xuICAgICAgfVxuXG4gICAgICB2YXIgam9pbmVkUGF0aCA9IHBhdGhzLnNsaWNlKGkgKyBqKS5qb2luKGtleVNlcGFyYXRvcik7XG4gICAgICBpZiAoam9pbmVkUGF0aCkgcmV0dXJuIGRlZXBGaW5kKG1peCwgam9pbmVkUGF0aCwga2V5U2VwYXJhdG9yKTtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgY3VycmVudCA9IGN1cnJlbnRbcGF0aHNbaV1dO1xuICB9XG5cbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG5cbnZhciBSZXNvdXJjZVN0b3JlID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKFJlc291cmNlU3RvcmUsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoUmVzb3VyY2VTdG9yZSk7XG5cbiAgZnVuY3Rpb24gUmVzb3VyY2VTdG9yZShkYXRhKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHtcbiAgICAgIG5zOiBbJ3RyYW5zbGF0aW9uJ10sXG4gICAgICBkZWZhdWx0TlM6ICd0cmFuc2xhdGlvbidcbiAgICB9O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlc291cmNlU3RvcmUpO1xuXG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTtcblxuICAgIGlmIChpc0lFMTApIHtcbiAgICAgIEV2ZW50RW1pdHRlci5jYWxsKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICB9XG5cbiAgICBfdGhpcy5kYXRhID0gZGF0YSB8fCB7fTtcbiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuICAgIGlmIChfdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBfdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvciA9ICcuJztcbiAgICB9XG5cbiAgICBpZiAoX3RoaXMub3B0aW9ucy5pZ25vcmVKU09OU3RydWN0dXJlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIF90aGlzLm9wdGlvbnMuaWdub3JlSlNPTlN0cnVjdHVyZSA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFJlc291cmNlU3RvcmUsIFt7XG4gICAga2V5OiBcImFkZE5hbWVzcGFjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkTmFtZXNwYWNlcyhucykge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5ucy5pbmRleE9mKG5zKSA8IDApIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLm5zLnB1c2gobnMpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW1vdmVOYW1lc3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZU5hbWVzcGFjZXMobnMpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMub3B0aW9ucy5ucy5pbmRleE9mKG5zKTtcblxuICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLm5zLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFJlc291cmNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlc291cmNlKGxuZywgbnMsIGtleSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuICAgICAgdmFyIGtleVNlcGFyYXRvciA9IG9wdGlvbnMua2V5U2VwYXJhdG9yICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmtleVNlcGFyYXRvciA6IHRoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3I7XG4gICAgICB2YXIgaWdub3JlSlNPTlN0cnVjdHVyZSA9IG9wdGlvbnMuaWdub3JlSlNPTlN0cnVjdHVyZSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5pZ25vcmVKU09OU3RydWN0dXJlIDogdGhpcy5vcHRpb25zLmlnbm9yZUpTT05TdHJ1Y3R1cmU7XG4gICAgICB2YXIgcGF0aCA9IFtsbmcsIG5zXTtcbiAgICAgIGlmIChrZXkgJiYgdHlwZW9mIGtleSAhPT0gJ3N0cmluZycpIHBhdGggPSBwYXRoLmNvbmNhdChrZXkpO1xuICAgICAgaWYgKGtleSAmJiB0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykgcGF0aCA9IHBhdGguY29uY2F0KGtleVNlcGFyYXRvciA/IGtleS5zcGxpdChrZXlTZXBhcmF0b3IpIDoga2V5KTtcblxuICAgICAgaWYgKGxuZy5pbmRleE9mKCcuJykgPiAtMSkge1xuICAgICAgICBwYXRoID0gbG5nLnNwbGl0KCcuJyk7XG4gICAgICB9XG5cbiAgICAgIHZhciByZXN1bHQgPSBnZXRQYXRoKHRoaXMuZGF0YSwgcGF0aCk7XG4gICAgICBpZiAocmVzdWx0IHx8ICFpZ25vcmVKU09OU3RydWN0dXJlIHx8IHR5cGVvZiBrZXkgIT09ICdzdHJpbmcnKSByZXR1cm4gcmVzdWx0O1xuICAgICAgcmV0dXJuIGRlZXBGaW5kKHRoaXMuZGF0YSAmJiB0aGlzLmRhdGFbbG5nXSAmJiB0aGlzLmRhdGFbbG5nXVtuc10sIGtleSwga2V5U2VwYXJhdG9yKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkUmVzb3VyY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUmVzb3VyY2UobG5nLCBucywga2V5LCB2YWx1ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcbiAgICAgIHZhciBrZXlTZXBhcmF0b3IgPSB0aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yO1xuICAgICAgaWYgKGtleVNlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSBrZXlTZXBhcmF0b3IgPSAnLic7XG4gICAgICB2YXIgcGF0aCA9IFtsbmcsIG5zXTtcbiAgICAgIGlmIChrZXkpIHBhdGggPSBwYXRoLmNvbmNhdChrZXlTZXBhcmF0b3IgPyBrZXkuc3BsaXQoa2V5U2VwYXJhdG9yKSA6IGtleSk7XG5cbiAgICAgIGlmIChsbmcuaW5kZXhPZignLicpID4gLTEpIHtcbiAgICAgICAgcGF0aCA9IGxuZy5zcGxpdCgnLicpO1xuICAgICAgICB2YWx1ZSA9IG5zO1xuICAgICAgICBucyA9IHBhdGhbMV07XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWRkTmFtZXNwYWNlcyhucyk7XG4gICAgICBzZXRQYXRoKHRoaXMuZGF0YSwgcGF0aCwgdmFsdWUpO1xuICAgICAgaWYgKCFvcHRpb25zLnNpbGVudCkgdGhpcy5lbWl0KCdhZGRlZCcsIGxuZywgbnMsIGtleSwgdmFsdWUpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRSZXNvdXJjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUmVzb3VyY2VzKGxuZywgbnMsIHJlc291cmNlcykge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgbSBpbiByZXNvdXJjZXMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXNvdXJjZXNbbV0gPT09ICdzdHJpbmcnIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkocmVzb3VyY2VzW21dKSA9PT0gJ1tvYmplY3QgQXJyYXldJykgdGhpcy5hZGRSZXNvdXJjZShsbmcsIG5zLCBtLCByZXNvdXJjZXNbbV0sIHtcbiAgICAgICAgICBzaWxlbnQ6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghb3B0aW9ucy5zaWxlbnQpIHRoaXMuZW1pdCgnYWRkZWQnLCBsbmcsIG5zLCByZXNvdXJjZXMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRSZXNvdXJjZUJ1bmRsZShsbmcsIG5zLCByZXNvdXJjZXMsIGRlZXAsIG92ZXJ3cml0ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcbiAgICAgIHZhciBwYXRoID0gW2xuZywgbnNdO1xuXG4gICAgICBpZiAobG5nLmluZGV4T2YoJy4nKSA+IC0xKSB7XG4gICAgICAgIHBhdGggPSBsbmcuc3BsaXQoJy4nKTtcbiAgICAgICAgZGVlcCA9IHJlc291cmNlcztcbiAgICAgICAgcmVzb3VyY2VzID0gbnM7XG4gICAgICAgIG5zID0gcGF0aFsxXTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hZGROYW1lc3BhY2VzKG5zKTtcbiAgICAgIHZhciBwYWNrID0gZ2V0UGF0aCh0aGlzLmRhdGEsIHBhdGgpIHx8IHt9O1xuXG4gICAgICBpZiAoZGVlcCkge1xuICAgICAgICBkZWVwRXh0ZW5kKHBhY2ssIHJlc291cmNlcywgb3ZlcndyaXRlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhY2sgPSBfb2JqZWN0U3ByZWFkJDEoX29iamVjdFNwcmVhZCQxKHt9LCBwYWNrKSwgcmVzb3VyY2VzKTtcbiAgICAgIH1cblxuICAgICAgc2V0UGF0aCh0aGlzLmRhdGEsIHBhdGgsIHBhY2spO1xuICAgICAgaWYgKCFvcHRpb25zLnNpbGVudCkgdGhpcy5lbWl0KCdhZGRlZCcsIGxuZywgbnMsIHJlc291cmNlcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZVJlc291cmNlQnVuZGxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZVJlc291cmNlQnVuZGxlKGxuZywgbnMpIHtcbiAgICAgIGlmICh0aGlzLmhhc1Jlc291cmNlQnVuZGxlKGxuZywgbnMpKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmRhdGFbbG5nXVtuc107XG4gICAgICB9XG5cbiAgICAgIHRoaXMucmVtb3ZlTmFtZXNwYWNlcyhucyk7XG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZWQnLCBsbmcsIG5zKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFzUmVzb3VyY2VCdW5kbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzUmVzb3VyY2VCdW5kbGUobG5nLCBucykge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVzb3VyY2UobG5nLCBucykgIT09IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UmVzb3VyY2VCdW5kbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVzb3VyY2VCdW5kbGUobG5nLCBucykge1xuICAgICAgaWYgKCFucykgbnMgPSB0aGlzLm9wdGlvbnMuZGVmYXVsdE5TO1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5QVBJID09PSAndjEnKSByZXR1cm4gX29iamVjdFNwcmVhZCQxKF9vYmplY3RTcHJlYWQkMSh7fSwge30pLCB0aGlzLmdldFJlc291cmNlKGxuZywgbnMpKTtcbiAgICAgIHJldHVybiB0aGlzLmdldFJlc291cmNlKGxuZywgbnMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXREYXRhQnlMYW5ndWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREYXRhQnlMYW5ndWFnZShsbmcpIHtcbiAgICAgIHJldHVybiB0aGlzLmRhdGFbbG5nXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFzTGFuZ3VhZ2VTb21lVHJhbnNsYXRpb25zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhc0xhbmd1YWdlU29tZVRyYW5zbGF0aW9ucyhsbmcpIHtcbiAgICAgIHZhciBkYXRhID0gdGhpcy5nZXREYXRhQnlMYW5ndWFnZShsbmcpO1xuICAgICAgdmFyIG4gPSBkYXRhICYmIE9iamVjdC5rZXlzKGRhdGEpIHx8IFtdO1xuICAgICAgcmV0dXJuICEhbi5maW5kKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIHJldHVybiBkYXRhW3ZdICYmIE9iamVjdC5rZXlzKGRhdGFbdl0pLmxlbmd0aCA+IDA7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidG9KU09OXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICAgIHJldHVybiB0aGlzLmRhdGE7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFJlc291cmNlU3RvcmU7XG59KEV2ZW50RW1pdHRlcik7XG5cbnZhciBwb3N0UHJvY2Vzc29yID0ge1xuICBwcm9jZXNzb3JzOiB7fSxcbiAgYWRkUG9zdFByb2Nlc3NvcjogZnVuY3Rpb24gYWRkUG9zdFByb2Nlc3Nvcihtb2R1bGUpIHtcbiAgICB0aGlzLnByb2Nlc3NvcnNbbW9kdWxlLm5hbWVdID0gbW9kdWxlO1xuICB9LFxuICBoYW5kbGU6IGZ1bmN0aW9uIGhhbmRsZShwcm9jZXNzb3JzLCB2YWx1ZSwga2V5LCBvcHRpb25zLCB0cmFuc2xhdG9yKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHByb2Nlc3NvcnMuZm9yRWFjaChmdW5jdGlvbiAocHJvY2Vzc29yKSB7XG4gICAgICBpZiAoX3RoaXMucHJvY2Vzc29yc1twcm9jZXNzb3JdKSB2YWx1ZSA9IF90aGlzLnByb2Nlc3NvcnNbcHJvY2Vzc29yXS5wcm9jZXNzKHZhbHVlLCBrZXksIG9wdGlvbnMsIHRyYW5zbGF0b3IpO1xuICAgIH0pO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufTtcblxuZnVuY3Rpb24gb3duS2V5cyQyKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSB7IHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsgfSBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCQyKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMkMihPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzJDIoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlciQxKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0JDEoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0JDEoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxudmFyIGNoZWNrZWRMb2FkZWRGb3IgPSB7fTtcblxudmFyIFRyYW5zbGF0b3IgPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoVHJhbnNsYXRvciwgX0V2ZW50RW1pdHRlcik7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlciQxKFRyYW5zbGF0b3IpO1xuXG4gIGZ1bmN0aW9uIFRyYW5zbGF0b3Ioc2VydmljZXMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhbnNsYXRvcik7XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpO1xuXG4gICAgaWYgKGlzSUUxMCkge1xuICAgICAgRXZlbnRFbWl0dGVyLmNhbGwoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIH1cblxuICAgIGNvcHkoWydyZXNvdXJjZVN0b3JlJywgJ2xhbmd1YWdlVXRpbHMnLCAncGx1cmFsUmVzb2x2ZXInLCAnaW50ZXJwb2xhdG9yJywgJ2JhY2tlbmRDb25uZWN0b3InLCAnaTE4bkZvcm1hdCcsICd1dGlscyddLCBzZXJ2aWNlcywgX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXG4gICAgaWYgKF90aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgIF90aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yID0gJy4nO1xuICAgIH1cblxuICAgIF90aGlzLmxvZ2dlciA9IGJhc2VMb2dnZXIuY3JlYXRlKCd0cmFuc2xhdG9yJyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRyYW5zbGF0b3IsIFt7XG4gICAga2V5OiBcImNoYW5nZUxhbmd1YWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNoYW5nZUxhbmd1YWdlKGxuZykge1xuICAgICAgaWYgKGxuZykgdGhpcy5sYW5ndWFnZSA9IGxuZztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXhpc3RzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGV4aXN0cyhrZXkpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHt9XG4gICAgICB9O1xuXG4gICAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQgfHwga2V5ID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlc29sdmVkID0gdGhpcy5yZXNvbHZlKGtleSwgb3B0aW9ucyk7XG4gICAgICByZXR1cm4gcmVzb2x2ZWQgJiYgcmVzb2x2ZWQucmVzICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImV4dHJhY3RGcm9tS2V5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGV4dHJhY3RGcm9tS2V5KGtleSwgb3B0aW9ucykge1xuICAgICAgdmFyIG5zU2VwYXJhdG9yID0gb3B0aW9ucy5uc1NlcGFyYXRvciAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc1NlcGFyYXRvciA6IHRoaXMub3B0aW9ucy5uc1NlcGFyYXRvcjtcbiAgICAgIGlmIChuc1NlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSBuc1NlcGFyYXRvciA9ICc6JztcbiAgICAgIHZhciBrZXlTZXBhcmF0b3IgPSBvcHRpb25zLmtleVNlcGFyYXRvciAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5rZXlTZXBhcmF0b3IgOiB0aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yO1xuICAgICAgdmFyIG5hbWVzcGFjZXMgPSBvcHRpb25zLm5zIHx8IHRoaXMub3B0aW9ucy5kZWZhdWx0TlMgfHwgW107XG4gICAgICB2YXIgd291bGRDaGVja0Zvck5zSW5LZXkgPSBuc1NlcGFyYXRvciAmJiBrZXkuaW5kZXhPZihuc1NlcGFyYXRvcikgPiAtMTtcbiAgICAgIHZhciBzZWVtc05hdHVyYWxMYW5ndWFnZSA9ICF0aGlzLm9wdGlvbnMudXNlckRlZmluZWRLZXlTZXBhcmF0b3IgJiYgIW9wdGlvbnMua2V5U2VwYXJhdG9yICYmICF0aGlzLm9wdGlvbnMudXNlckRlZmluZWROc1NlcGFyYXRvciAmJiAhb3B0aW9ucy5uc1NlcGFyYXRvciAmJiAhbG9va3NMaWtlT2JqZWN0UGF0aChrZXksIG5zU2VwYXJhdG9yLCBrZXlTZXBhcmF0b3IpO1xuXG4gICAgICBpZiAod291bGRDaGVja0Zvck5zSW5LZXkgJiYgIXNlZW1zTmF0dXJhbExhbmd1YWdlKSB7XG4gICAgICAgIHZhciBtID0ga2V5Lm1hdGNoKHRoaXMuaW50ZXJwb2xhdG9yLm5lc3RpbmdSZWdleHApO1xuXG4gICAgICAgIGlmIChtICYmIG0ubGVuZ3RoID4gMCkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIG5hbWVzcGFjZXM6IG5hbWVzcGFjZXNcbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHBhcnRzID0ga2V5LnNwbGl0KG5zU2VwYXJhdG9yKTtcbiAgICAgICAgaWYgKG5zU2VwYXJhdG9yICE9PSBrZXlTZXBhcmF0b3IgfHwgbnNTZXBhcmF0b3IgPT09IGtleVNlcGFyYXRvciAmJiB0aGlzLm9wdGlvbnMubnMuaW5kZXhPZihwYXJ0c1swXSkgPiAtMSkgbmFtZXNwYWNlcyA9IHBhcnRzLnNoaWZ0KCk7XG4gICAgICAgIGtleSA9IHBhcnRzLmpvaW4oa2V5U2VwYXJhdG9yKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBuYW1lc3BhY2VzID09PSAnc3RyaW5nJykgbmFtZXNwYWNlcyA9IFtuYW1lc3BhY2VzXTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGtleToga2V5LFxuICAgICAgICBuYW1lc3BhY2VzOiBuYW1lc3BhY2VzXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0cmFuc2xhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdHJhbnNsYXRlKGtleXMsIG9wdGlvbnMsIGxhc3RLZXkpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAoX3R5cGVvZihvcHRpb25zKSAhPT0gJ29iamVjdCcgJiYgdGhpcy5vcHRpb25zLm92ZXJsb2FkVHJhbnNsYXRpb25PcHRpb25IYW5kbGVyKSB7XG4gICAgICAgIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMub3ZlcmxvYWRUcmFuc2xhdGlvbk9wdGlvbkhhbmRsZXIoYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFvcHRpb25zKSBvcHRpb25zID0ge307XG4gICAgICBpZiAoa2V5cyA9PT0gdW5kZWZpbmVkIHx8IGtleXMgPT09IG51bGwpIHJldHVybiAnJztcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShrZXlzKSkga2V5cyA9IFtTdHJpbmcoa2V5cyldO1xuICAgICAgdmFyIGtleVNlcGFyYXRvciA9IG9wdGlvbnMua2V5U2VwYXJhdG9yICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmtleVNlcGFyYXRvciA6IHRoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3I7XG5cbiAgICAgIHZhciBfdGhpcyRleHRyYWN0RnJvbUtleSA9IHRoaXMuZXh0cmFjdEZyb21LZXkoa2V5c1trZXlzLmxlbmd0aCAtIDFdLCBvcHRpb25zKSxcbiAgICAgICAgICBrZXkgPSBfdGhpcyRleHRyYWN0RnJvbUtleS5rZXksXG4gICAgICAgICAgbmFtZXNwYWNlcyA9IF90aGlzJGV4dHJhY3RGcm9tS2V5Lm5hbWVzcGFjZXM7XG5cbiAgICAgIHZhciBuYW1lc3BhY2UgPSBuYW1lc3BhY2VzW25hbWVzcGFjZXMubGVuZ3RoIC0gMV07XG4gICAgICB2YXIgbG5nID0gb3B0aW9ucy5sbmcgfHwgdGhpcy5sYW5ndWFnZTtcbiAgICAgIHZhciBhcHBlbmROYW1lc3BhY2VUb0NJTW9kZSA9IG9wdGlvbnMuYXBwZW5kTmFtZXNwYWNlVG9DSU1vZGUgfHwgdGhpcy5vcHRpb25zLmFwcGVuZE5hbWVzcGFjZVRvQ0lNb2RlO1xuXG4gICAgICBpZiAobG5nICYmIGxuZy50b0xvd2VyQ2FzZSgpID09PSAnY2ltb2RlJykge1xuICAgICAgICBpZiAoYXBwZW5kTmFtZXNwYWNlVG9DSU1vZGUpIHtcbiAgICAgICAgICB2YXIgbnNTZXBhcmF0b3IgPSBvcHRpb25zLm5zU2VwYXJhdG9yIHx8IHRoaXMub3B0aW9ucy5uc1NlcGFyYXRvcjtcbiAgICAgICAgICByZXR1cm4gbmFtZXNwYWNlICsgbnNTZXBhcmF0b3IgKyBrZXk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ga2V5O1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVzb2x2ZWQgPSB0aGlzLnJlc29sdmUoa2V5cywgb3B0aW9ucyk7XG4gICAgICB2YXIgcmVzID0gcmVzb2x2ZWQgJiYgcmVzb2x2ZWQucmVzO1xuICAgICAgdmFyIHJlc1VzZWRLZXkgPSByZXNvbHZlZCAmJiByZXNvbHZlZC51c2VkS2V5IHx8IGtleTtcbiAgICAgIHZhciByZXNFeGFjdFVzZWRLZXkgPSByZXNvbHZlZCAmJiByZXNvbHZlZC5leGFjdFVzZWRLZXkgfHwga2V5O1xuICAgICAgdmFyIHJlc1R5cGUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KHJlcyk7XG4gICAgICB2YXIgbm9PYmplY3QgPSBbJ1tvYmplY3QgTnVtYmVyXScsICdbb2JqZWN0IEZ1bmN0aW9uXScsICdbb2JqZWN0IFJlZ0V4cF0nXTtcbiAgICAgIHZhciBqb2luQXJyYXlzID0gb3B0aW9ucy5qb2luQXJyYXlzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmpvaW5BcnJheXMgOiB0aGlzLm9wdGlvbnMuam9pbkFycmF5cztcbiAgICAgIHZhciBoYW5kbGVBc09iamVjdEluSTE4bkZvcm1hdCA9ICF0aGlzLmkxOG5Gb3JtYXQgfHwgdGhpcy5pMThuRm9ybWF0LmhhbmRsZUFzT2JqZWN0O1xuICAgICAgdmFyIGhhbmRsZUFzT2JqZWN0ID0gdHlwZW9mIHJlcyAhPT0gJ3N0cmluZycgJiYgdHlwZW9mIHJlcyAhPT0gJ2Jvb2xlYW4nICYmIHR5cGVvZiByZXMgIT09ICdudW1iZXInO1xuXG4gICAgICBpZiAoaGFuZGxlQXNPYmplY3RJbkkxOG5Gb3JtYXQgJiYgcmVzICYmIGhhbmRsZUFzT2JqZWN0ICYmIG5vT2JqZWN0LmluZGV4T2YocmVzVHlwZSkgPCAwICYmICEodHlwZW9mIGpvaW5BcnJheXMgPT09ICdzdHJpbmcnICYmIHJlc1R5cGUgPT09ICdbb2JqZWN0IEFycmF5XScpKSB7XG4gICAgICAgIGlmICghb3B0aW9ucy5yZXR1cm5PYmplY3RzICYmICF0aGlzLm9wdGlvbnMucmV0dXJuT2JqZWN0cykge1xuICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLnJldHVybmVkT2JqZWN0SGFuZGxlcikge1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIud2FybignYWNjZXNzaW5nIGFuIG9iamVjdCAtIGJ1dCByZXR1cm5PYmplY3RzIG9wdGlvbnMgaXMgbm90IGVuYWJsZWQhJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5yZXR1cm5lZE9iamVjdEhhbmRsZXIgPyB0aGlzLm9wdGlvbnMucmV0dXJuZWRPYmplY3RIYW5kbGVyKHJlc1VzZWRLZXksIHJlcywgX29iamVjdFNwcmVhZCQyKF9vYmplY3RTcHJlYWQkMih7fSwgb3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgICBuczogbmFtZXNwYWNlc1xuICAgICAgICAgIH0pKSA6IFwia2V5ICdcIi5jb25jYXQoa2V5LCBcIiAoXCIpLmNvbmNhdCh0aGlzLmxhbmd1YWdlLCBcIiknIHJldHVybmVkIGFuIG9iamVjdCBpbnN0ZWFkIG9mIHN0cmluZy5cIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoa2V5U2VwYXJhdG9yKSB7XG4gICAgICAgICAgdmFyIHJlc1R5cGVJc0FycmF5ID0gcmVzVHlwZSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbiAgICAgICAgICB2YXIgY29weSA9IHJlc1R5cGVJc0FycmF5ID8gW10gOiB7fTtcbiAgICAgICAgICB2YXIgbmV3S2V5VG9Vc2UgPSByZXNUeXBlSXNBcnJheSA/IHJlc0V4YWN0VXNlZEtleSA6IHJlc1VzZWRLZXk7XG5cbiAgICAgICAgICBmb3IgKHZhciBtIGluIHJlcykge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyZXMsIG0pKSB7XG4gICAgICAgICAgICAgIHZhciBkZWVwS2V5ID0gXCJcIi5jb25jYXQobmV3S2V5VG9Vc2UpLmNvbmNhdChrZXlTZXBhcmF0b3IpLmNvbmNhdChtKTtcbiAgICAgICAgICAgICAgY29weVttXSA9IHRoaXMudHJhbnNsYXRlKGRlZXBLZXksIF9vYmplY3RTcHJlYWQkMihfb2JqZWN0U3ByZWFkJDIoe30sIG9wdGlvbnMpLCB7XG4gICAgICAgICAgICAgICAgam9pbkFycmF5czogZmFsc2UsXG4gICAgICAgICAgICAgICAgbnM6IG5hbWVzcGFjZXNcbiAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICBpZiAoY29weVttXSA9PT0gZGVlcEtleSkgY29weVttXSA9IHJlc1ttXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXMgPSBjb3B5O1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGhhbmRsZUFzT2JqZWN0SW5JMThuRm9ybWF0ICYmIHR5cGVvZiBqb2luQXJyYXlzID09PSAnc3RyaW5nJyAmJiByZXNUeXBlID09PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICAgIHJlcyA9IHJlcy5qb2luKGpvaW5BcnJheXMpO1xuICAgICAgICBpZiAocmVzKSByZXMgPSB0aGlzLmV4dGVuZFRyYW5zbGF0aW9uKHJlcywga2V5cywgb3B0aW9ucywgbGFzdEtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgdXNlZERlZmF1bHQgPSBmYWxzZTtcbiAgICAgICAgdmFyIHVzZWRLZXkgPSBmYWxzZTtcbiAgICAgICAgdmFyIG5lZWRzUGx1cmFsSGFuZGxpbmcgPSBvcHRpb25zLmNvdW50ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIG9wdGlvbnMuY291bnQgIT09ICdzdHJpbmcnO1xuICAgICAgICB2YXIgaGFzRGVmYXVsdFZhbHVlID0gVHJhbnNsYXRvci5oYXNEZWZhdWx0VmFsdWUob3B0aW9ucyk7XG4gICAgICAgIHZhciBkZWZhdWx0VmFsdWVTdWZmaXggPSBuZWVkc1BsdXJhbEhhbmRsaW5nID8gdGhpcy5wbHVyYWxSZXNvbHZlci5nZXRTdWZmaXgobG5nLCBvcHRpb25zLmNvdW50LCBvcHRpb25zKSA6ICcnO1xuICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gb3B0aW9uc1tcImRlZmF1bHRWYWx1ZVwiLmNvbmNhdChkZWZhdWx0VmFsdWVTdWZmaXgpXSB8fCBvcHRpb25zLmRlZmF1bHRWYWx1ZTtcblxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZExvb2t1cChyZXMpICYmIGhhc0RlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgIHVzZWREZWZhdWx0ID0gdHJ1ZTtcbiAgICAgICAgICByZXMgPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZExvb2t1cChyZXMpKSB7XG4gICAgICAgICAgdXNlZEtleSA9IHRydWU7XG4gICAgICAgICAgcmVzID0ga2V5O1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG1pc3NpbmdLZXlOb1ZhbHVlRmFsbGJhY2tUb0tleSA9IG9wdGlvbnMubWlzc2luZ0tleU5vVmFsdWVGYWxsYmFja1RvS2V5IHx8IHRoaXMub3B0aW9ucy5taXNzaW5nS2V5Tm9WYWx1ZUZhbGxiYWNrVG9LZXk7XG4gICAgICAgIHZhciByZXNGb3JNaXNzaW5nID0gbWlzc2luZ0tleU5vVmFsdWVGYWxsYmFja1RvS2V5ICYmIHVzZWRLZXkgPyB1bmRlZmluZWQgOiByZXM7XG4gICAgICAgIHZhciB1cGRhdGVNaXNzaW5nID0gaGFzRGVmYXVsdFZhbHVlICYmIGRlZmF1bHRWYWx1ZSAhPT0gcmVzICYmIHRoaXMub3B0aW9ucy51cGRhdGVNaXNzaW5nO1xuXG4gICAgICAgIGlmICh1c2VkS2V5IHx8IHVzZWREZWZhdWx0IHx8IHVwZGF0ZU1pc3NpbmcpIHtcbiAgICAgICAgICB0aGlzLmxvZ2dlci5sb2codXBkYXRlTWlzc2luZyA/ICd1cGRhdGVLZXknIDogJ21pc3NpbmdLZXknLCBsbmcsIG5hbWVzcGFjZSwga2V5LCB1cGRhdGVNaXNzaW5nID8gZGVmYXVsdFZhbHVlIDogcmVzKTtcblxuICAgICAgICAgIGlmIChrZXlTZXBhcmF0b3IpIHtcbiAgICAgICAgICAgIHZhciBmayA9IHRoaXMucmVzb2x2ZShrZXksIF9vYmplY3RTcHJlYWQkMihfb2JqZWN0U3ByZWFkJDIoe30sIG9wdGlvbnMpLCB7fSwge1xuICAgICAgICAgICAgICBrZXlTZXBhcmF0b3I6IGZhbHNlXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBpZiAoZmsgJiYgZmsucmVzKSB0aGlzLmxvZ2dlci53YXJuKCdTZWVtcyB0aGUgbG9hZGVkIHRyYW5zbGF0aW9ucyB3ZXJlIGluIGZsYXQgSlNPTiBmb3JtYXQgaW5zdGVhZCBvZiBuZXN0ZWQuIEVpdGhlciBzZXQga2V5U2VwYXJhdG9yOiBmYWxzZSBvbiBpbml0IG9yIG1ha2Ugc3VyZSB5b3VyIHRyYW5zbGF0aW9ucyBhcmUgcHVibGlzaGVkIGluIG5lc3RlZCBmb3JtYXQuJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIGxuZ3MgPSBbXTtcbiAgICAgICAgICB2YXIgZmFsbGJhY2tMbmdzID0gdGhpcy5sYW5ndWFnZVV0aWxzLmdldEZhbGxiYWNrQ29kZXModGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nLCBvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlKTtcblxuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2F2ZU1pc3NpbmdUbyA9PT0gJ2ZhbGxiYWNrJyAmJiBmYWxsYmFja0xuZ3MgJiYgZmFsbGJhY2tMbmdzWzBdKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZhbGxiYWNrTG5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBsbmdzLnB1c2goZmFsbGJhY2tMbmdzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZ1RvID09PSAnYWxsJykge1xuICAgICAgICAgICAgbG5ncyA9IHRoaXMubGFuZ3VhZ2VVdGlscy50b1Jlc29sdmVIaWVyYXJjaHkob3B0aW9ucy5sbmcgfHwgdGhpcy5sYW5ndWFnZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxuZ3MucHVzaChvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc2VuZCA9IGZ1bmN0aW9uIHNlbmQobCwgaywgc3BlY2lmaWNEZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBkZWZhdWx0Rm9yTWlzc2luZyA9IGhhc0RlZmF1bHRWYWx1ZSAmJiBzcGVjaWZpY0RlZmF1bHRWYWx1ZSAhPT0gcmVzID8gc3BlY2lmaWNEZWZhdWx0VmFsdWUgOiByZXNGb3JNaXNzaW5nO1xuXG4gICAgICAgICAgICBpZiAoX3RoaXMyLm9wdGlvbnMubWlzc2luZ0tleUhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgX3RoaXMyLm9wdGlvbnMubWlzc2luZ0tleUhhbmRsZXIobCwgbmFtZXNwYWNlLCBrLCBkZWZhdWx0Rm9yTWlzc2luZywgdXBkYXRlTWlzc2luZywgb3B0aW9ucyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzMi5iYWNrZW5kQ29ubmVjdG9yICYmIF90aGlzMi5iYWNrZW5kQ29ubmVjdG9yLnNhdmVNaXNzaW5nKSB7XG4gICAgICAgICAgICAgIF90aGlzMi5iYWNrZW5kQ29ubmVjdG9yLnNhdmVNaXNzaW5nKGwsIG5hbWVzcGFjZSwgaywgZGVmYXVsdEZvck1pc3NpbmcsIHVwZGF0ZU1pc3NpbmcsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfdGhpczIuZW1pdCgnbWlzc2luZ0tleScsIGwsIG5hbWVzcGFjZSwgaywgcmVzKTtcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZykge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZ1BsdXJhbHMgJiYgbmVlZHNQbHVyYWxIYW5kbGluZykge1xuICAgICAgICAgICAgICBsbmdzLmZvckVhY2goZnVuY3Rpb24gKGxhbmd1YWdlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMyLnBsdXJhbFJlc29sdmVyLmdldFN1ZmZpeGVzKGxhbmd1YWdlLCBvcHRpb25zKS5mb3JFYWNoKGZ1bmN0aW9uIChzdWZmaXgpIHtcbiAgICAgICAgICAgICAgICAgIHNlbmQoW2xhbmd1YWdlXSwga2V5ICsgc3VmZml4LCBvcHRpb25zW1wiZGVmYXVsdFZhbHVlXCIuY29uY2F0KHN1ZmZpeCldIHx8IGRlZmF1bHRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2VuZChsbmdzLCBrZXksIGRlZmF1bHRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmVzID0gdGhpcy5leHRlbmRUcmFuc2xhdGlvbihyZXMsIGtleXMsIG9wdGlvbnMsIHJlc29sdmVkLCBsYXN0S2V5KTtcbiAgICAgICAgaWYgKHVzZWRLZXkgJiYgcmVzID09PSBrZXkgJiYgdGhpcy5vcHRpb25zLmFwcGVuZE5hbWVzcGFjZVRvTWlzc2luZ0tleSkgcmVzID0gXCJcIi5jb25jYXQobmFtZXNwYWNlLCBcIjpcIikuY29uY2F0KGtleSk7XG5cbiAgICAgICAgaWYgKCh1c2VkS2V5IHx8IHVzZWREZWZhdWx0KSAmJiB0aGlzLm9wdGlvbnMucGFyc2VNaXNzaW5nS2V5SGFuZGxlcikge1xuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUFQSSAhPT0gJ3YxJykge1xuICAgICAgICAgICAgcmVzID0gdGhpcy5vcHRpb25zLnBhcnNlTWlzc2luZ0tleUhhbmRsZXIoa2V5LCB1c2VkRGVmYXVsdCA/IHJlcyA6IHVuZGVmaW5lZCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcyA9IHRoaXMub3B0aW9ucy5wYXJzZU1pc3NpbmdLZXlIYW5kbGVyKHJlcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImV4dGVuZFRyYW5zbGF0aW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGV4dGVuZFRyYW5zbGF0aW9uKHJlcywga2V5LCBvcHRpb25zLCByZXNvbHZlZCwgbGFzdEtleSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLmkxOG5Gb3JtYXQgJiYgdGhpcy5pMThuRm9ybWF0LnBhcnNlKSB7XG4gICAgICAgIHJlcyA9IHRoaXMuaTE4bkZvcm1hdC5wYXJzZShyZXMsIG9wdGlvbnMsIHJlc29sdmVkLnVzZWRMbmcsIHJlc29sdmVkLnVzZWROUywgcmVzb2x2ZWQudXNlZEtleSwge1xuICAgICAgICAgIHJlc29sdmVkOiByZXNvbHZlZFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoIW9wdGlvbnMuc2tpcEludGVycG9sYXRpb24pIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuaW50ZXJwb2xhdGlvbikgdGhpcy5pbnRlcnBvbGF0b3IuaW5pdChfb2JqZWN0U3ByZWFkJDIoX29iamVjdFNwcmVhZCQyKHt9LCBvcHRpb25zKSwge1xuICAgICAgICAgIGludGVycG9sYXRpb246IF9vYmplY3RTcHJlYWQkMihfb2JqZWN0U3ByZWFkJDIoe30sIHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uKSwgb3B0aW9ucy5pbnRlcnBvbGF0aW9uKVxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciBza2lwT25WYXJpYWJsZXMgPSB0eXBlb2YgcmVzID09PSAnc3RyaW5nJyAmJiAob3B0aW9ucyAmJiBvcHRpb25zLmludGVycG9sYXRpb24gJiYgb3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyA6IHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyk7XG4gICAgICAgIHZhciBuZXN0QmVmO1xuXG4gICAgICAgIGlmIChza2lwT25WYXJpYWJsZXMpIHtcbiAgICAgICAgICB2YXIgbmIgPSByZXMubWF0Y2godGhpcy5pbnRlcnBvbGF0b3IubmVzdGluZ1JlZ2V4cCk7XG4gICAgICAgICAgbmVzdEJlZiA9IG5iICYmIG5iLmxlbmd0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkYXRhID0gb3B0aW9ucy5yZXBsYWNlICYmIHR5cGVvZiBvcHRpb25zLnJlcGxhY2UgIT09ICdzdHJpbmcnID8gb3B0aW9ucy5yZXBsYWNlIDogb3B0aW9ucztcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLmRlZmF1bHRWYXJpYWJsZXMpIGRhdGEgPSBfb2JqZWN0U3ByZWFkJDIoX29iamVjdFNwcmVhZCQyKHt9LCB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5kZWZhdWx0VmFyaWFibGVzKSwgZGF0YSk7XG4gICAgICAgIHJlcyA9IHRoaXMuaW50ZXJwb2xhdG9yLmludGVycG9sYXRlKHJlcywgZGF0YSwgb3B0aW9ucy5sbmcgfHwgdGhpcy5sYW5ndWFnZSwgb3B0aW9ucyk7XG5cbiAgICAgICAgaWYgKHNraXBPblZhcmlhYmxlcykge1xuICAgICAgICAgIHZhciBuYSA9IHJlcy5tYXRjaCh0aGlzLmludGVycG9sYXRvci5uZXN0aW5nUmVnZXhwKTtcbiAgICAgICAgICB2YXIgbmVzdEFmdCA9IG5hICYmIG5hLmxlbmd0aDtcbiAgICAgICAgICBpZiAobmVzdEJlZiA8IG5lc3RBZnQpIG9wdGlvbnMubmVzdCA9IGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMubmVzdCAhPT0gZmFsc2UpIHJlcyA9IHRoaXMuaW50ZXJwb2xhdG9yLm5lc3QocmVzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChsYXN0S2V5ICYmIGxhc3RLZXlbMF0gPT09IGFyZ3NbMF0gJiYgIW9wdGlvbnMuY29udGV4dCkge1xuICAgICAgICAgICAgX3RoaXMzLmxvZ2dlci53YXJuKFwiSXQgc2VlbXMgeW91IGFyZSBuZXN0aW5nIHJlY3Vyc2l2ZWx5IGtleTogXCIuY29uY2F0KGFyZ3NbMF0sIFwiIGluIGtleTogXCIpLmNvbmNhdChrZXlbMF0pKTtcblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIF90aGlzMy50cmFuc2xhdGUuYXBwbHkoX3RoaXMzLCBhcmdzLmNvbmNhdChba2V5XSkpO1xuICAgICAgICB9LCBvcHRpb25zKTtcbiAgICAgICAgaWYgKG9wdGlvbnMuaW50ZXJwb2xhdGlvbikgdGhpcy5pbnRlcnBvbGF0b3IucmVzZXQoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHBvc3RQcm9jZXNzID0gb3B0aW9ucy5wb3N0UHJvY2VzcyB8fCB0aGlzLm9wdGlvbnMucG9zdFByb2Nlc3M7XG4gICAgICB2YXIgcG9zdFByb2Nlc3Nvck5hbWVzID0gdHlwZW9mIHBvc3RQcm9jZXNzID09PSAnc3RyaW5nJyA/IFtwb3N0UHJvY2Vzc10gOiBwb3N0UHJvY2VzcztcblxuICAgICAgaWYgKHJlcyAhPT0gdW5kZWZpbmVkICYmIHJlcyAhPT0gbnVsbCAmJiBwb3N0UHJvY2Vzc29yTmFtZXMgJiYgcG9zdFByb2Nlc3Nvck5hbWVzLmxlbmd0aCAmJiBvcHRpb25zLmFwcGx5UG9zdFByb2Nlc3NvciAhPT0gZmFsc2UpIHtcbiAgICAgICAgcmVzID0gcG9zdFByb2Nlc3Nvci5oYW5kbGUocG9zdFByb2Nlc3Nvck5hbWVzLCByZXMsIGtleSwgdGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5wb3N0UHJvY2Vzc1Bhc3NSZXNvbHZlZCA/IF9vYmplY3RTcHJlYWQkMih7XG4gICAgICAgICAgaTE4blJlc29sdmVkOiByZXNvbHZlZFxuICAgICAgICB9LCBvcHRpb25zKSA6IG9wdGlvbnMsIHRoaXMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNvbHZlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc29sdmUoa2V5cykge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICAgIHZhciBmb3VuZDtcbiAgICAgIHZhciB1c2VkS2V5O1xuICAgICAgdmFyIGV4YWN0VXNlZEtleTtcbiAgICAgIHZhciB1c2VkTG5nO1xuICAgICAgdmFyIHVzZWROUztcbiAgICAgIGlmICh0eXBlb2Yga2V5cyA9PT0gJ3N0cmluZycpIGtleXMgPSBba2V5c107XG4gICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGspIHtcbiAgICAgICAgaWYgKF90aGlzNC5pc1ZhbGlkTG9va3VwKGZvdW5kKSkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBleHRyYWN0ZWQgPSBfdGhpczQuZXh0cmFjdEZyb21LZXkoaywgb3B0aW9ucyk7XG5cbiAgICAgICAgdmFyIGtleSA9IGV4dHJhY3RlZC5rZXk7XG4gICAgICAgIHVzZWRLZXkgPSBrZXk7XG4gICAgICAgIHZhciBuYW1lc3BhY2VzID0gZXh0cmFjdGVkLm5hbWVzcGFjZXM7XG4gICAgICAgIGlmIChfdGhpczQub3B0aW9ucy5mYWxsYmFja05TKSBuYW1lc3BhY2VzID0gbmFtZXNwYWNlcy5jb25jYXQoX3RoaXM0Lm9wdGlvbnMuZmFsbGJhY2tOUyk7XG4gICAgICAgIHZhciBuZWVkc1BsdXJhbEhhbmRsaW5nID0gb3B0aW9ucy5jb3VudCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmNvdW50ICE9PSAnc3RyaW5nJztcblxuICAgICAgICB2YXIgbmVlZHNaZXJvU3VmZml4TG9va3VwID0gbmVlZHNQbHVyYWxIYW5kbGluZyAmJiAhb3B0aW9ucy5vcmRpbmFsICYmIG9wdGlvbnMuY291bnQgPT09IDAgJiYgX3RoaXM0LnBsdXJhbFJlc29sdmVyLnNob3VsZFVzZUludGxBcGkoKTtcblxuICAgICAgICB2YXIgbmVlZHNDb250ZXh0SGFuZGxpbmcgPSBvcHRpb25zLmNvbnRleHQgIT09IHVuZGVmaW5lZCAmJiAodHlwZW9mIG9wdGlvbnMuY29udGV4dCA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG9wdGlvbnMuY29udGV4dCA9PT0gJ251bWJlcicpICYmIG9wdGlvbnMuY29udGV4dCAhPT0gJyc7XG4gICAgICAgIHZhciBjb2RlcyA9IG9wdGlvbnMubG5ncyA/IG9wdGlvbnMubG5ncyA6IF90aGlzNC5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShvcHRpb25zLmxuZyB8fCBfdGhpczQubGFuZ3VhZ2UsIG9wdGlvbnMuZmFsbGJhY2tMbmcpO1xuICAgICAgICBuYW1lc3BhY2VzLmZvckVhY2goZnVuY3Rpb24gKG5zKSB7XG4gICAgICAgICAgaWYgKF90aGlzNC5pc1ZhbGlkTG9va3VwKGZvdW5kKSkgcmV0dXJuO1xuICAgICAgICAgIHVzZWROUyA9IG5zO1xuXG4gICAgICAgICAgaWYgKCFjaGVja2VkTG9hZGVkRm9yW1wiXCIuY29uY2F0KGNvZGVzWzBdLCBcIi1cIikuY29uY2F0KG5zKV0gJiYgX3RoaXM0LnV0aWxzICYmIF90aGlzNC51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UgJiYgIV90aGlzNC51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UodXNlZE5TKSkge1xuICAgICAgICAgICAgY2hlY2tlZExvYWRlZEZvcltcIlwiLmNvbmNhdChjb2Rlc1swXSwgXCItXCIpLmNvbmNhdChucyldID0gdHJ1ZTtcblxuICAgICAgICAgICAgX3RoaXM0LmxvZ2dlci53YXJuKFwia2V5IFxcXCJcIi5jb25jYXQodXNlZEtleSwgXCJcXFwiIGZvciBsYW5ndWFnZXMgXFxcIlwiKS5jb25jYXQoY29kZXMuam9pbignLCAnKSwgXCJcXFwiIHdvbid0IGdldCByZXNvbHZlZCBhcyBuYW1lc3BhY2UgXFxcIlwiKS5jb25jYXQodXNlZE5TLCBcIlxcXCIgd2FzIG5vdCB5ZXQgbG9hZGVkXCIpLCAnVGhpcyBtZWFucyBzb21ldGhpbmcgSVMgV1JPTkcgaW4geW91ciBzZXR1cC4gWW91IGFjY2VzcyB0aGUgdCBmdW5jdGlvbiBiZWZvcmUgaTE4bmV4dC5pbml0IC8gaTE4bmV4dC5sb2FkTmFtZXNwYWNlIC8gaTE4bmV4dC5jaGFuZ2VMYW5ndWFnZSB3YXMgZG9uZS4gV2FpdCBmb3IgdGhlIGNhbGxiYWNrIG9yIFByb21pc2UgdG8gcmVzb2x2ZSBiZWZvcmUgYWNjZXNzaW5nIGl0ISEhJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29kZXMuZm9yRWFjaChmdW5jdGlvbiAoY29kZSkge1xuICAgICAgICAgICAgaWYgKF90aGlzNC5pc1ZhbGlkTG9va3VwKGZvdW5kKSkgcmV0dXJuO1xuICAgICAgICAgICAgdXNlZExuZyA9IGNvZGU7XG4gICAgICAgICAgICB2YXIgZmluYWxLZXlzID0gW2tleV07XG5cbiAgICAgICAgICAgIGlmIChfdGhpczQuaTE4bkZvcm1hdCAmJiBfdGhpczQuaTE4bkZvcm1hdC5hZGRMb29rdXBLZXlzKSB7XG4gICAgICAgICAgICAgIF90aGlzNC5pMThuRm9ybWF0LmFkZExvb2t1cEtleXMoZmluYWxLZXlzLCBrZXksIGNvZGUsIG5zLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBwbHVyYWxTdWZmaXg7XG4gICAgICAgICAgICAgIGlmIChuZWVkc1BsdXJhbEhhbmRsaW5nKSBwbHVyYWxTdWZmaXggPSBfdGhpczQucGx1cmFsUmVzb2x2ZXIuZ2V0U3VmZml4KGNvZGUsIG9wdGlvbnMuY291bnQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICB2YXIgemVyb1N1ZmZpeCA9ICdfemVybyc7XG5cbiAgICAgICAgICAgICAgaWYgKG5lZWRzUGx1cmFsSGFuZGxpbmcpIHtcbiAgICAgICAgICAgICAgICBmaW5hbEtleXMucHVzaChrZXkgKyBwbHVyYWxTdWZmaXgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKG5lZWRzWmVyb1N1ZmZpeExvb2t1cCkge1xuICAgICAgICAgICAgICAgICAgZmluYWxLZXlzLnB1c2goa2V5ICsgemVyb1N1ZmZpeCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKG5lZWRzQ29udGV4dEhhbmRsaW5nKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnRleHRLZXkgPSBcIlwiLmNvbmNhdChrZXkpLmNvbmNhdChfdGhpczQub3B0aW9ucy5jb250ZXh0U2VwYXJhdG9yKS5jb25jYXQob3B0aW9ucy5jb250ZXh0KTtcbiAgICAgICAgICAgICAgICBmaW5hbEtleXMucHVzaChjb250ZXh0S2V5KTtcblxuICAgICAgICAgICAgICAgIGlmIChuZWVkc1BsdXJhbEhhbmRsaW5nKSB7XG4gICAgICAgICAgICAgICAgICBmaW5hbEtleXMucHVzaChjb250ZXh0S2V5ICsgcGx1cmFsU3VmZml4KTtcblxuICAgICAgICAgICAgICAgICAgaWYgKG5lZWRzWmVyb1N1ZmZpeExvb2t1cCkge1xuICAgICAgICAgICAgICAgICAgICBmaW5hbEtleXMucHVzaChjb250ZXh0S2V5ICsgemVyb1N1ZmZpeCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBwb3NzaWJsZUtleTtcblxuICAgICAgICAgICAgd2hpbGUgKHBvc3NpYmxlS2V5ID0gZmluYWxLZXlzLnBvcCgpKSB7XG4gICAgICAgICAgICAgIGlmICghX3RoaXM0LmlzVmFsaWRMb29rdXAoZm91bmQpKSB7XG4gICAgICAgICAgICAgICAgZXhhY3RVc2VkS2V5ID0gcG9zc2libGVLZXk7XG4gICAgICAgICAgICAgICAgZm91bmQgPSBfdGhpczQuZ2V0UmVzb3VyY2UoY29kZSwgbnMsIHBvc3NpYmxlS2V5LCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVzOiBmb3VuZCxcbiAgICAgICAgdXNlZEtleTogdXNlZEtleSxcbiAgICAgICAgZXhhY3RVc2VkS2V5OiBleGFjdFVzZWRLZXksXG4gICAgICAgIHVzZWRMbmc6IHVzZWRMbmcsXG4gICAgICAgIHVzZWROUzogdXNlZE5TXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc1ZhbGlkTG9va3VwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzVmFsaWRMb29rdXAocmVzKSB7XG4gICAgICByZXR1cm4gcmVzICE9PSB1bmRlZmluZWQgJiYgISghdGhpcy5vcHRpb25zLnJldHVybk51bGwgJiYgcmVzID09PSBudWxsKSAmJiAhKCF0aGlzLm9wdGlvbnMucmV0dXJuRW1wdHlTdHJpbmcgJiYgcmVzID09PSAnJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFJlc291cmNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlc291cmNlKGNvZGUsIG5zLCBrZXkpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7fTtcbiAgICAgIGlmICh0aGlzLmkxOG5Gb3JtYXQgJiYgdGhpcy5pMThuRm9ybWF0LmdldFJlc291cmNlKSByZXR1cm4gdGhpcy5pMThuRm9ybWF0LmdldFJlc291cmNlKGNvZGUsIG5zLCBrZXksIG9wdGlvbnMpO1xuICAgICAgcmV0dXJuIHRoaXMucmVzb3VyY2VTdG9yZS5nZXRSZXNvdXJjZShjb2RlLCBucywga2V5LCBvcHRpb25zKTtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogXCJoYXNEZWZhdWx0VmFsdWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzRGVmYXVsdFZhbHVlKG9wdGlvbnMpIHtcbiAgICAgIHZhciBwcmVmaXggPSAnZGVmYXVsdFZhbHVlJztcblxuICAgICAgZm9yICh2YXIgb3B0aW9uIGluIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvcHRpb25zLCBvcHRpb24pICYmIHByZWZpeCA9PT0gb3B0aW9uLnN1YnN0cmluZygwLCBwcmVmaXgubGVuZ3RoKSAmJiB1bmRlZmluZWQgIT09IG9wdGlvbnNbb3B0aW9uXSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVHJhbnNsYXRvcjtcbn0oRXZlbnRFbWl0dGVyKTtcblxuZnVuY3Rpb24gY2FwaXRhbGl6ZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTtcbn1cblxudmFyIExhbmd1YWdlVXRpbCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTGFuZ3VhZ2VVdGlsKG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGFuZ3VhZ2VVdGlsKTtcblxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5zdXBwb3J0ZWRMbmdzID0gdGhpcy5vcHRpb25zLnN1cHBvcnRlZExuZ3MgfHwgZmFsc2U7XG4gICAgdGhpcy5sb2dnZXIgPSBiYXNlTG9nZ2VyLmNyZWF0ZSgnbGFuZ3VhZ2VVdGlscycpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExhbmd1YWdlVXRpbCwgW3tcbiAgICBrZXk6IFwiZ2V0U2NyaXB0UGFydEZyb21Db2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNjcmlwdFBhcnRGcm9tQ29kZShjb2RlKSB7XG4gICAgICBpZiAoIWNvZGUgfHwgY29kZS5pbmRleE9mKCctJykgPCAwKSByZXR1cm4gbnVsbDtcbiAgICAgIHZhciBwID0gY29kZS5zcGxpdCgnLScpO1xuICAgICAgaWYgKHAubGVuZ3RoID09PSAyKSByZXR1cm4gbnVsbDtcbiAgICAgIHAucG9wKCk7XG4gICAgICBpZiAocFtwLmxlbmd0aCAtIDFdLnRvTG93ZXJDYXNlKCkgPT09ICd4JykgcmV0dXJuIG51bGw7XG4gICAgICByZXR1cm4gdGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUocC5qb2luKCctJykpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRMYW5ndWFnZVBhcnRGcm9tQ29kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKSB7XG4gICAgICBpZiAoIWNvZGUgfHwgY29kZS5pbmRleE9mKCctJykgPCAwKSByZXR1cm4gY29kZTtcbiAgICAgIHZhciBwID0gY29kZS5zcGxpdCgnLScpO1xuICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0TGFuZ3VhZ2VDb2RlKHBbMF0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRMYW5ndWFnZUNvZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0TGFuZ3VhZ2VDb2RlKGNvZGUpIHtcbiAgICAgIGlmICh0eXBlb2YgY29kZSA9PT0gJ3N0cmluZycgJiYgY29kZS5pbmRleE9mKCctJykgPiAtMSkge1xuICAgICAgICB2YXIgc3BlY2lhbENhc2VzID0gWydoYW5zJywgJ2hhbnQnLCAnbGF0bicsICdjeXJsJywgJ2NhbnMnLCAnbW9uZycsICdhcmFiJ107XG4gICAgICAgIHZhciBwID0gY29kZS5zcGxpdCgnLScpO1xuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG93ZXJDYXNlTG5nKSB7XG4gICAgICAgICAgcCA9IHAubWFwKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFydC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHAubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgcFswXSA9IHBbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICBwWzFdID0gcFsxXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgIGlmIChzcGVjaWFsQ2FzZXMuaW5kZXhPZihwWzFdLnRvTG93ZXJDYXNlKCkpID4gLTEpIHBbMV0gPSBjYXBpdGFsaXplKHBbMV0udG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIH0gZWxzZSBpZiAocC5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICBwWzBdID0gcFswXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIGlmIChwWzFdLmxlbmd0aCA9PT0gMikgcFsxXSA9IHBbMV0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgICBpZiAocFswXSAhPT0gJ3NnbicgJiYgcFsyXS5sZW5ndGggPT09IDIpIHBbMl0gPSBwWzJdLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgaWYgKHNwZWNpYWxDYXNlcy5pbmRleE9mKHBbMV0udG9Mb3dlckNhc2UoKSkgPiAtMSkgcFsxXSA9IGNhcGl0YWxpemUocFsxXS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICBpZiAoc3BlY2lhbENhc2VzLmluZGV4T2YocFsyXS50b0xvd2VyQ2FzZSgpKSA+IC0xKSBwWzJdID0gY2FwaXRhbGl6ZShwWzJdLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHAuam9pbignLScpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmNsZWFuQ29kZSB8fCB0aGlzLm9wdGlvbnMubG93ZXJDYXNlTG5nID8gY29kZS50b0xvd2VyQ2FzZSgpIDogY29kZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNTdXBwb3J0ZWRDb2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzU3VwcG9ydGVkQ29kZShjb2RlKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmxvYWQgPT09ICdsYW5ndWFnZU9ubHknIHx8IHRoaXMub3B0aW9ucy5ub25FeHBsaWNpdFN1cHBvcnRlZExuZ3MpIHtcbiAgICAgICAgY29kZSA9IHRoaXMuZ2V0TGFuZ3VhZ2VQYXJ0RnJvbUNvZGUoY29kZSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAhdGhpcy5zdXBwb3J0ZWRMbmdzIHx8ICF0aGlzLnN1cHBvcnRlZExuZ3MubGVuZ3RoIHx8IHRoaXMuc3VwcG9ydGVkTG5ncy5pbmRleE9mKGNvZGUpID4gLTE7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEJlc3RNYXRjaEZyb21Db2Rlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCZXN0TWF0Y2hGcm9tQ29kZXMoY29kZXMpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICghY29kZXMpIHJldHVybiBudWxsO1xuICAgICAgdmFyIGZvdW5kO1xuICAgICAgY29kZXMuZm9yRWFjaChmdW5jdGlvbiAoY29kZSkge1xuICAgICAgICBpZiAoZm91bmQpIHJldHVybjtcblxuICAgICAgICB2YXIgY2xlYW5lZExuZyA9IF90aGlzLmZvcm1hdExhbmd1YWdlQ29kZShjb2RlKTtcblxuICAgICAgICBpZiAoIV90aGlzLm9wdGlvbnMuc3VwcG9ydGVkTG5ncyB8fCBfdGhpcy5pc1N1cHBvcnRlZENvZGUoY2xlYW5lZExuZykpIGZvdW5kID0gY2xlYW5lZExuZztcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIWZvdW5kICYmIHRoaXMub3B0aW9ucy5zdXBwb3J0ZWRMbmdzKSB7XG4gICAgICAgIGNvZGVzLmZvckVhY2goZnVuY3Rpb24gKGNvZGUpIHtcbiAgICAgICAgICBpZiAoZm91bmQpIHJldHVybjtcblxuICAgICAgICAgIHZhciBsbmdPbmx5ID0gX3RoaXMuZ2V0TGFuZ3VhZ2VQYXJ0RnJvbUNvZGUoY29kZSk7XG5cbiAgICAgICAgICBpZiAoX3RoaXMuaXNTdXBwb3J0ZWRDb2RlKGxuZ09ubHkpKSByZXR1cm4gZm91bmQgPSBsbmdPbmx5O1xuICAgICAgICAgIGZvdW5kID0gX3RoaXMub3B0aW9ucy5zdXBwb3J0ZWRMbmdzLmZpbmQoZnVuY3Rpb24gKHN1cHBvcnRlZExuZykge1xuICAgICAgICAgICAgaWYgKHN1cHBvcnRlZExuZy5pbmRleE9mKGxuZ09ubHkpID09PSAwKSByZXR1cm4gc3VwcG9ydGVkTG5nO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSB0aGlzLmdldEZhbGxiYWNrQ29kZXModGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nKVswXTtcbiAgICAgIHJldHVybiBmb3VuZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0RmFsbGJhY2tDb2Rlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGYWxsYmFja0NvZGVzKGZhbGxiYWNrcywgY29kZSkge1xuICAgICAgaWYgKCFmYWxsYmFja3MpIHJldHVybiBbXTtcbiAgICAgIGlmICh0eXBlb2YgZmFsbGJhY2tzID09PSAnZnVuY3Rpb24nKSBmYWxsYmFja3MgPSBmYWxsYmFja3MoY29kZSk7XG4gICAgICBpZiAodHlwZW9mIGZhbGxiYWNrcyA9PT0gJ3N0cmluZycpIGZhbGxiYWNrcyA9IFtmYWxsYmFja3NdO1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkoZmFsbGJhY2tzKSA9PT0gJ1tvYmplY3QgQXJyYXldJykgcmV0dXJuIGZhbGxiYWNrcztcbiAgICAgIGlmICghY29kZSkgcmV0dXJuIGZhbGxiYWNrc1tcImRlZmF1bHRcIl0gfHwgW107XG4gICAgICB2YXIgZm91bmQgPSBmYWxsYmFja3NbY29kZV07XG4gICAgICBpZiAoIWZvdW5kKSBmb3VuZCA9IGZhbGxiYWNrc1t0aGlzLmdldFNjcmlwdFBhcnRGcm9tQ29kZShjb2RlKV07XG4gICAgICBpZiAoIWZvdW5kKSBmb3VuZCA9IGZhbGxiYWNrc1t0aGlzLmZvcm1hdExhbmd1YWdlQ29kZShjb2RlKV07XG4gICAgICBpZiAoIWZvdW5kKSBmb3VuZCA9IGZhbGxiYWNrc1t0aGlzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGNvZGUpXTtcbiAgICAgIGlmICghZm91bmQpIGZvdW5kID0gZmFsbGJhY2tzW1wiZGVmYXVsdFwiXTtcbiAgICAgIHJldHVybiBmb3VuZCB8fCBbXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidG9SZXNvbHZlSGllcmFyY2h5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvUmVzb2x2ZUhpZXJhcmNoeShjb2RlLCBmYWxsYmFja0NvZGUpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgZmFsbGJhY2tDb2RlcyA9IHRoaXMuZ2V0RmFsbGJhY2tDb2RlcyhmYWxsYmFja0NvZGUgfHwgdGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nIHx8IFtdLCBjb2RlKTtcbiAgICAgIHZhciBjb2RlcyA9IFtdO1xuXG4gICAgICB2YXIgYWRkQ29kZSA9IGZ1bmN0aW9uIGFkZENvZGUoYykge1xuICAgICAgICBpZiAoIWMpIHJldHVybjtcblxuICAgICAgICBpZiAoX3RoaXMyLmlzU3VwcG9ydGVkQ29kZShjKSkge1xuICAgICAgICAgIGNvZGVzLnB1c2goYyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMyLmxvZ2dlci53YXJuKFwicmVqZWN0aW5nIGxhbmd1YWdlIGNvZGUgbm90IGZvdW5kIGluIHN1cHBvcnRlZExuZ3M6IFwiLmNvbmNhdChjKSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGlmICh0eXBlb2YgY29kZSA9PT0gJ3N0cmluZycgJiYgY29kZS5pbmRleE9mKCctJykgPiAtMSkge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmxvYWQgIT09ICdsYW5ndWFnZU9ubHknKSBhZGRDb2RlKHRoaXMuZm9ybWF0TGFuZ3VhZ2VDb2RlKGNvZGUpKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5sb2FkICE9PSAnbGFuZ3VhZ2VPbmx5JyAmJiB0aGlzLm9wdGlvbnMubG9hZCAhPT0gJ2N1cnJlbnRPbmx5JykgYWRkQ29kZSh0aGlzLmdldFNjcmlwdFBhcnRGcm9tQ29kZShjb2RlKSk7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG9hZCAhPT0gJ2N1cnJlbnRPbmx5JykgYWRkQ29kZSh0aGlzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGNvZGUpKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvZGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGFkZENvZGUodGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUoY29kZSkpO1xuICAgICAgfVxuXG4gICAgICBmYWxsYmFja0NvZGVzLmZvckVhY2goZnVuY3Rpb24gKGZjKSB7XG4gICAgICAgIGlmIChjb2Rlcy5pbmRleE9mKGZjKSA8IDApIGFkZENvZGUoX3RoaXMyLmZvcm1hdExhbmd1YWdlQ29kZShmYykpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY29kZXM7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExhbmd1YWdlVXRpbDtcbn0oKTtcblxudmFyIHNldHMgPSBbe1xuICBsbmdzOiBbJ2FjaCcsICdhaycsICdhbScsICdhcm4nLCAnYnInLCAnZmlsJywgJ2d1bicsICdsbicsICdtZmUnLCAnbWcnLCAnbWknLCAnb2MnLCAncHQnLCAncHQtQlInLCAndGcnLCAndGwnLCAndGknLCAndHInLCAndXonLCAnd2EnXSxcbiAgbnI6IFsxLCAyXSxcbiAgZmM6IDFcbn0sIHtcbiAgbG5nczogWydhZicsICdhbicsICdhc3QnLCAnYXonLCAnYmcnLCAnYm4nLCAnY2EnLCAnZGEnLCAnZGUnLCAnZGV2JywgJ2VsJywgJ2VuJywgJ2VvJywgJ2VzJywgJ2V0JywgJ2V1JywgJ2ZpJywgJ2ZvJywgJ2Z1cicsICdmeScsICdnbCcsICdndScsICdoYScsICdoaScsICdodScsICdoeScsICdpYScsICdpdCcsICdraycsICdrbicsICdrdScsICdsYicsICdtYWknLCAnbWwnLCAnbW4nLCAnbXInLCAnbmFoJywgJ25hcCcsICduYicsICduZScsICdubCcsICdubicsICdubycsICduc28nLCAncGEnLCAncGFwJywgJ3BtcycsICdwcycsICdwdC1QVCcsICdybScsICdzY28nLCAnc2UnLCAnc2knLCAnc28nLCAnc29uJywgJ3NxJywgJ3N2JywgJ3N3JywgJ3RhJywgJ3RlJywgJ3RrJywgJ3VyJywgJ3lvJ10sXG4gIG5yOiBbMSwgMl0sXG4gIGZjOiAyXG59LCB7XG4gIGxuZ3M6IFsnYXknLCAnYm8nLCAnY2dnJywgJ2ZhJywgJ2h0JywgJ2lkJywgJ2phJywgJ2pibycsICdrYScsICdrbScsICdrbycsICdreScsICdsbycsICdtcycsICdzYWgnLCAnc3UnLCAndGgnLCAndHQnLCAndWcnLCAndmknLCAnd28nLCAnemgnXSxcbiAgbnI6IFsxXSxcbiAgZmM6IDNcbn0sIHtcbiAgbG5nczogWydiZScsICdicycsICdjbnInLCAnZHonLCAnaHInLCAncnUnLCAnc3InLCAndWsnXSxcbiAgbnI6IFsxLCAyLCA1XSxcbiAgZmM6IDRcbn0sIHtcbiAgbG5nczogWydhciddLFxuICBucjogWzAsIDEsIDIsIDMsIDExLCAxMDBdLFxuICBmYzogNVxufSwge1xuICBsbmdzOiBbJ2NzJywgJ3NrJ10sXG4gIG5yOiBbMSwgMiwgNV0sXG4gIGZjOiA2XG59LCB7XG4gIGxuZ3M6IFsnY3NiJywgJ3BsJ10sXG4gIG5yOiBbMSwgMiwgNV0sXG4gIGZjOiA3XG59LCB7XG4gIGxuZ3M6IFsnY3knXSxcbiAgbnI6IFsxLCAyLCAzLCA4XSxcbiAgZmM6IDhcbn0sIHtcbiAgbG5nczogWydmciddLFxuICBucjogWzEsIDJdLFxuICBmYzogOVxufSwge1xuICBsbmdzOiBbJ2dhJ10sXG4gIG5yOiBbMSwgMiwgMywgNywgMTFdLFxuICBmYzogMTBcbn0sIHtcbiAgbG5nczogWydnZCddLFxuICBucjogWzEsIDIsIDMsIDIwXSxcbiAgZmM6IDExXG59LCB7XG4gIGxuZ3M6IFsnaXMnXSxcbiAgbnI6IFsxLCAyXSxcbiAgZmM6IDEyXG59LCB7XG4gIGxuZ3M6IFsnanYnXSxcbiAgbnI6IFswLCAxXSxcbiAgZmM6IDEzXG59LCB7XG4gIGxuZ3M6IFsna3cnXSxcbiAgbnI6IFsxLCAyLCAzLCA0XSxcbiAgZmM6IDE0XG59LCB7XG4gIGxuZ3M6IFsnbHQnXSxcbiAgbnI6IFsxLCAyLCAxMF0sXG4gIGZjOiAxNVxufSwge1xuICBsbmdzOiBbJ2x2J10sXG4gIG5yOiBbMSwgMiwgMF0sXG4gIGZjOiAxNlxufSwge1xuICBsbmdzOiBbJ21rJ10sXG4gIG5yOiBbMSwgMl0sXG4gIGZjOiAxN1xufSwge1xuICBsbmdzOiBbJ21uayddLFxuICBucjogWzAsIDEsIDJdLFxuICBmYzogMThcbn0sIHtcbiAgbG5nczogWydtdCddLFxuICBucjogWzEsIDIsIDExLCAyMF0sXG4gIGZjOiAxOVxufSwge1xuICBsbmdzOiBbJ29yJ10sXG4gIG5yOiBbMiwgMV0sXG4gIGZjOiAyXG59LCB7XG4gIGxuZ3M6IFsncm8nXSxcbiAgbnI6IFsxLCAyLCAyMF0sXG4gIGZjOiAyMFxufSwge1xuICBsbmdzOiBbJ3NsJ10sXG4gIG5yOiBbNSwgMSwgMiwgM10sXG4gIGZjOiAyMVxufSwge1xuICBsbmdzOiBbJ2hlJywgJ2l3J10sXG4gIG5yOiBbMSwgMiwgMjAsIDIxXSxcbiAgZmM6IDIyXG59XTtcbnZhciBfcnVsZXNQbHVyYWxzVHlwZXMgPSB7XG4gIDE6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA+IDEpO1xuICB9LFxuICAyOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gIT0gMSk7XG4gIH0sXG4gIDM6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiAwO1xuICB9LFxuICA0OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMCA9PSAxICYmIG4gJSAxMDAgIT0gMTEgPyAwIDogbiAlIDEwID49IDIgJiYgbiAlIDEwIDw9IDQgJiYgKG4gJSAxMDAgPCAxMCB8fCBuICUgMTAwID49IDIwKSA/IDEgOiAyKTtcbiAgfSxcbiAgNTogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDAgPyAwIDogbiA9PSAxID8gMSA6IG4gPT0gMiA/IDIgOiBuICUgMTAwID49IDMgJiYgbiAlIDEwMCA8PSAxMCA/IDMgOiBuICUgMTAwID49IDExID8gNCA6IDUpO1xuICB9LFxuICA2OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSA/IDAgOiBuID49IDIgJiYgbiA8PSA0ID8gMSA6IDIpO1xuICB9LFxuICA3OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSA/IDAgOiBuICUgMTAgPj0gMiAmJiBuICUgMTAgPD0gNCAmJiAobiAlIDEwMCA8IDEwIHx8IG4gJSAxMDAgPj0gMjApID8gMSA6IDIpO1xuICB9LFxuICA4OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSA/IDAgOiBuID09IDIgPyAxIDogbiAhPSA4ICYmIG4gIT0gMTEgPyAyIDogMyk7XG4gIH0sXG4gIDk6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA+PSAyKTtcbiAgfSxcbiAgMTA6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMiA/IDEgOiBuIDwgNyA/IDIgOiBuIDwgMTEgPyAzIDogNCk7XG4gIH0sXG4gIDExOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSB8fCBuID09IDExID8gMCA6IG4gPT0gMiB8fCBuID09IDEyID8gMSA6IG4gPiAyICYmIG4gPCAyMCA/IDIgOiAzKTtcbiAgfSxcbiAgMTI6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiAlIDEwICE9IDEgfHwgbiAlIDEwMCA9PSAxMSk7XG4gIH0sXG4gIDEzOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gIT09IDApO1xuICB9LFxuICAxNDogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA9PSAyID8gMSA6IG4gPT0gMyA/IDIgOiAzKTtcbiAgfSxcbiAgMTU6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiAlIDEwID09IDEgJiYgbiAlIDEwMCAhPSAxMSA/IDAgOiBuICUgMTAgPj0gMiAmJiAobiAlIDEwMCA8IDEwIHx8IG4gJSAxMDAgPj0gMjApID8gMSA6IDIpO1xuICB9LFxuICAxNjogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICUgMTAgPT0gMSAmJiBuICUgMTAwICE9IDExID8gMCA6IG4gIT09IDAgPyAxIDogMik7XG4gIH0sXG4gIDE3OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSB8fCBuICUgMTAgPT0gMSAmJiBuICUgMTAwICE9IDExID8gMCA6IDEpO1xuICB9LFxuICAxODogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDAgPyAwIDogbiA9PSAxID8gMSA6IDIpO1xuICB9LFxuICAxOTogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA9PSAwIHx8IG4gJSAxMDAgPiAxICYmIG4gJSAxMDAgPCAxMSA/IDEgOiBuICUgMTAwID4gMTAgJiYgbiAlIDEwMCA8IDIwID8gMiA6IDMpO1xuICB9LFxuICAyMDogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA9PSAwIHx8IG4gJSAxMDAgPiAwICYmIG4gJSAxMDAgPCAyMCA/IDEgOiAyKTtcbiAgfSxcbiAgMjE6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiAlIDEwMCA9PSAxID8gMSA6IG4gJSAxMDAgPT0gMiA/IDIgOiBuICUgMTAwID09IDMgfHwgbiAlIDEwMCA9PSA0ID8gMyA6IDApO1xuICB9LFxuICAyMjogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA9PSAyID8gMSA6IChuIDwgMCB8fCBuID4gMTApICYmIG4gJSAxMCA9PSAwID8gMiA6IDMpO1xuICB9XG59O1xudmFyIGRlcHJlY2F0ZWRKc29uVmVyc2lvbnMgPSBbJ3YxJywgJ3YyJywgJ3YzJ107XG52YXIgc3VmZml4ZXNPcmRlciA9IHtcbiAgemVybzogMCxcbiAgb25lOiAxLFxuICB0d286IDIsXG4gIGZldzogMyxcbiAgbWFueTogNCxcbiAgb3RoZXI6IDVcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZVJ1bGVzKCkge1xuICB2YXIgcnVsZXMgPSB7fTtcbiAgc2V0cy5mb3JFYWNoKGZ1bmN0aW9uIChzZXQpIHtcbiAgICBzZXQubG5ncy5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XG4gICAgICBydWxlc1tsXSA9IHtcbiAgICAgICAgbnVtYmVyczogc2V0Lm5yLFxuICAgICAgICBwbHVyYWxzOiBfcnVsZXNQbHVyYWxzVHlwZXNbc2V0LmZjXVxuICAgICAgfTtcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBydWxlcztcbn1cblxudmFyIFBsdXJhbFJlc29sdmVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBQbHVyYWxSZXNvbHZlcihsYW5ndWFnZVV0aWxzKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBsdXJhbFJlc29sdmVyKTtcblxuICAgIHRoaXMubGFuZ3VhZ2VVdGlscyA9IGxhbmd1YWdlVXRpbHM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLmxvZ2dlciA9IGJhc2VMb2dnZXIuY3JlYXRlKCdwbHVyYWxSZXNvbHZlcicpO1xuXG4gICAgaWYgKCghdGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlKU09OIHx8IHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9PT0gJ3Y0JykgJiYgKHR5cGVvZiBJbnRsID09PSAndW5kZWZpbmVkJyB8fCAhSW50bC5QbHVyYWxSdWxlcykpIHtcbiAgICAgIHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9ICd2Myc7XG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcignWW91ciBlbnZpcm9ubWVudCBzZWVtcyBub3QgdG8gYmUgSW50bCBBUEkgY29tcGF0aWJsZSwgdXNlIGFuIEludGwuUGx1cmFsUnVsZXMgcG9seWZpbGwuIFdpbGwgZmFsbGJhY2sgdG8gdGhlIGNvbXBhdGliaWxpdHlKU09OIHYzIGZvcm1hdCBoYW5kbGluZy4nKTtcbiAgICB9XG5cbiAgICB0aGlzLnJ1bGVzID0gY3JlYXRlUnVsZXMoKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQbHVyYWxSZXNvbHZlciwgW3tcbiAgICBrZXk6IFwiYWRkUnVsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRSdWxlKGxuZywgb2JqKSB7XG4gICAgICB0aGlzLnJ1bGVzW2xuZ10gPSBvYmo7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFJ1bGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UnVsZShjb2RlKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICAgIGlmICh0aGlzLnNob3VsZFVzZUludGxBcGkoKSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBuZXcgSW50bC5QbHVyYWxSdWxlcyhjb2RlLCB7XG4gICAgICAgICAgICB0eXBlOiBvcHRpb25zLm9yZGluYWwgPyAnb3JkaW5hbCcgOiAnY2FyZGluYWwnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKF91bnVzZWQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucnVsZXNbY29kZV0gfHwgdGhpcy5ydWxlc1t0aGlzLmxhbmd1YWdlVXRpbHMuZ2V0TGFuZ3VhZ2VQYXJ0RnJvbUNvZGUoY29kZSldO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJuZWVkc1BsdXJhbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZWVkc1BsdXJhbChjb2RlKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgICB2YXIgcnVsZSA9IHRoaXMuZ2V0UnVsZShjb2RlLCBvcHRpb25zKTtcblxuICAgICAgaWYgKHRoaXMuc2hvdWxkVXNlSW50bEFwaSgpKSB7XG4gICAgICAgIHJldHVybiBydWxlICYmIHJ1bGUucmVzb2x2ZWRPcHRpb25zKCkucGx1cmFsQ2F0ZWdvcmllcy5sZW5ndGggPiAxO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcnVsZSAmJiBydWxlLm51bWJlcnMubGVuZ3RoID4gMTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UGx1cmFsRm9ybXNPZktleVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQbHVyYWxGb3Jtc09mS2V5KGNvZGUsIGtleSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0U3VmZml4ZXMoY29kZSwgb3B0aW9ucykubWFwKGZ1bmN0aW9uIChzdWZmaXgpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGtleSkuY29uY2F0KHN1ZmZpeCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0U3VmZml4ZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U3VmZml4ZXMoY29kZSkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgICAgdmFyIHJ1bGUgPSB0aGlzLmdldFJ1bGUoY29kZSwgb3B0aW9ucyk7XG5cbiAgICAgIGlmICghcnVsZSkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnNob3VsZFVzZUludGxBcGkoKSkge1xuICAgICAgICByZXR1cm4gcnVsZS5yZXNvbHZlZE9wdGlvbnMoKS5wbHVyYWxDYXRlZ29yaWVzLnNvcnQoZnVuY3Rpb24gKHBsdXJhbENhdGVnb3J5MSwgcGx1cmFsQ2F0ZWdvcnkyKSB7XG4gICAgICAgICAgcmV0dXJuIHN1ZmZpeGVzT3JkZXJbcGx1cmFsQ2F0ZWdvcnkxXSAtIHN1ZmZpeGVzT3JkZXJbcGx1cmFsQ2F0ZWdvcnkyXTtcbiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChwbHVyYWxDYXRlZ29yeSkge1xuICAgICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChfdGhpcy5vcHRpb25zLnByZXBlbmQpLmNvbmNhdChwbHVyYWxDYXRlZ29yeSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcnVsZS5udW1iZXJzLm1hcChmdW5jdGlvbiAobnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5nZXRTdWZmaXgoY29kZSwgbnVtYmVyLCBvcHRpb25zKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRTdWZmaXhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U3VmZml4KGNvZGUsIGNvdW50KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gICAgICB2YXIgcnVsZSA9IHRoaXMuZ2V0UnVsZShjb2RlLCBvcHRpb25zKTtcblxuICAgICAgaWYgKHJ1bGUpIHtcbiAgICAgICAgaWYgKHRoaXMuc2hvdWxkVXNlSW50bEFwaSgpKSB7XG4gICAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHRoaXMub3B0aW9ucy5wcmVwZW5kKS5jb25jYXQocnVsZS5zZWxlY3QoY291bnQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLmdldFN1ZmZpeFJldHJvQ29tcGF0aWJsZShydWxlLCBjb3VudCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMubG9nZ2VyLndhcm4oXCJubyBwbHVyYWwgcnVsZSBmb3VuZCBmb3I6IFwiLmNvbmNhdChjb2RlKSk7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFN1ZmZpeFJldHJvQ29tcGF0aWJsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTdWZmaXhSZXRyb0NvbXBhdGlibGUocnVsZSwgY291bnQpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgaWR4ID0gcnVsZS5ub0FicyA/IHJ1bGUucGx1cmFscyhjb3VudCkgOiBydWxlLnBsdXJhbHMoTWF0aC5hYnMoY291bnQpKTtcbiAgICAgIHZhciBzdWZmaXggPSBydWxlLm51bWJlcnNbaWR4XTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaW1wbGlmeVBsdXJhbFN1ZmZpeCAmJiBydWxlLm51bWJlcnMubGVuZ3RoID09PSAyICYmIHJ1bGUubnVtYmVyc1swXSA9PT0gMSkge1xuICAgICAgICBpZiAoc3VmZml4ID09PSAyKSB7XG4gICAgICAgICAgc3VmZml4ID0gJ3BsdXJhbCc7XG4gICAgICAgIH0gZWxzZSBpZiAoc3VmZml4ID09PSAxKSB7XG4gICAgICAgICAgc3VmZml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIHJldHVyblN1ZmZpeCA9IGZ1bmN0aW9uIHJldHVyblN1ZmZpeCgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzMi5vcHRpb25zLnByZXBlbmQgJiYgc3VmZml4LnRvU3RyaW5nKCkgPyBfdGhpczIub3B0aW9ucy5wcmVwZW5kICsgc3VmZml4LnRvU3RyaW5nKCkgOiBzdWZmaXgudG9TdHJpbmcoKTtcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUpTT04gPT09ICd2MScpIHtcbiAgICAgICAgaWYgKHN1ZmZpeCA9PT0gMSkgcmV0dXJuICcnO1xuICAgICAgICBpZiAodHlwZW9mIHN1ZmZpeCA9PT0gJ251bWJlcicpIHJldHVybiBcIl9wbHVyYWxfXCIuY29uY2F0KHN1ZmZpeC50b1N0cmluZygpKTtcbiAgICAgICAgcmV0dXJuIHJldHVyblN1ZmZpeCgpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUpTT04gPT09ICd2MicpIHtcbiAgICAgICAgcmV0dXJuIHJldHVyblN1ZmZpeCgpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLm9wdGlvbnMuc2ltcGxpZnlQbHVyYWxTdWZmaXggJiYgcnVsZS5udW1iZXJzLmxlbmd0aCA9PT0gMiAmJiBydWxlLm51bWJlcnNbMF0gPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHJldHVyblN1ZmZpeCgpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLnByZXBlbmQgJiYgaWR4LnRvU3RyaW5nKCkgPyB0aGlzLm9wdGlvbnMucHJlcGVuZCArIGlkeC50b1N0cmluZygpIDogaWR4LnRvU3RyaW5nKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNob3VsZFVzZUludGxBcGlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvdWxkVXNlSW50bEFwaSgpIHtcbiAgICAgIHJldHVybiAhZGVwcmVjYXRlZEpzb25WZXJzaW9ucy5pbmNsdWRlcyh0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUpTT04pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQbHVyYWxSZXNvbHZlcjtcbn0oKTtcblxuZnVuY3Rpb24gb3duS2V5cyQzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSB7IHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsgfSBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCQzKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMkMyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzJDMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbnZhciBJbnRlcnBvbGF0b3IgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEludGVycG9sYXRvcigpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW50ZXJwb2xhdG9yKTtcblxuICAgIHRoaXMubG9nZ2VyID0gYmFzZUxvZ2dlci5jcmVhdGUoJ2ludGVycG9sYXRvcicpO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICB0aGlzLmZvcm1hdCA9IG9wdGlvbnMuaW50ZXJwb2xhdGlvbiAmJiBvcHRpb25zLmludGVycG9sYXRpb24uZm9ybWF0IHx8IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG5cbiAgICB0aGlzLmluaXQob3B0aW9ucyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSW50ZXJwb2xhdG9yLCBbe1xuICAgIGtleTogXCJpbml0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICBpZiAoIW9wdGlvbnMuaW50ZXJwb2xhdGlvbikgb3B0aW9ucy5pbnRlcnBvbGF0aW9uID0ge1xuICAgICAgICBlc2NhcGVWYWx1ZTogdHJ1ZVxuICAgICAgfTtcbiAgICAgIHZhciBpT3B0cyA9IG9wdGlvbnMuaW50ZXJwb2xhdGlvbjtcbiAgICAgIHRoaXMuZXNjYXBlID0gaU9wdHMuZXNjYXBlICE9PSB1bmRlZmluZWQgPyBpT3B0cy5lc2NhcGUgOiBlc2NhcGU7XG4gICAgICB0aGlzLmVzY2FwZVZhbHVlID0gaU9wdHMuZXNjYXBlVmFsdWUgIT09IHVuZGVmaW5lZCA/IGlPcHRzLmVzY2FwZVZhbHVlIDogdHJ1ZTtcbiAgICAgIHRoaXMudXNlUmF3VmFsdWVUb0VzY2FwZSA9IGlPcHRzLnVzZVJhd1ZhbHVlVG9Fc2NhcGUgIT09IHVuZGVmaW5lZCA/IGlPcHRzLnVzZVJhd1ZhbHVlVG9Fc2NhcGUgOiBmYWxzZTtcbiAgICAgIHRoaXMucHJlZml4ID0gaU9wdHMucHJlZml4ID8gcmVnZXhFc2NhcGUoaU9wdHMucHJlZml4KSA6IGlPcHRzLnByZWZpeEVzY2FwZWQgfHwgJ3t7JztcbiAgICAgIHRoaXMuc3VmZml4ID0gaU9wdHMuc3VmZml4ID8gcmVnZXhFc2NhcGUoaU9wdHMuc3VmZml4KSA6IGlPcHRzLnN1ZmZpeEVzY2FwZWQgfHwgJ319JztcbiAgICAgIHRoaXMuZm9ybWF0U2VwYXJhdG9yID0gaU9wdHMuZm9ybWF0U2VwYXJhdG9yID8gaU9wdHMuZm9ybWF0U2VwYXJhdG9yIDogaU9wdHMuZm9ybWF0U2VwYXJhdG9yIHx8ICcsJztcbiAgICAgIHRoaXMudW5lc2NhcGVQcmVmaXggPSBpT3B0cy51bmVzY2FwZVN1ZmZpeCA/ICcnIDogaU9wdHMudW5lc2NhcGVQcmVmaXggfHwgJy0nO1xuICAgICAgdGhpcy51bmVzY2FwZVN1ZmZpeCA9IHRoaXMudW5lc2NhcGVQcmVmaXggPyAnJyA6IGlPcHRzLnVuZXNjYXBlU3VmZml4IHx8ICcnO1xuICAgICAgdGhpcy5uZXN0aW5nUHJlZml4ID0gaU9wdHMubmVzdGluZ1ByZWZpeCA/IHJlZ2V4RXNjYXBlKGlPcHRzLm5lc3RpbmdQcmVmaXgpIDogaU9wdHMubmVzdGluZ1ByZWZpeEVzY2FwZWQgfHwgcmVnZXhFc2NhcGUoJyR0KCcpO1xuICAgICAgdGhpcy5uZXN0aW5nU3VmZml4ID0gaU9wdHMubmVzdGluZ1N1ZmZpeCA/IHJlZ2V4RXNjYXBlKGlPcHRzLm5lc3RpbmdTdWZmaXgpIDogaU9wdHMubmVzdGluZ1N1ZmZpeEVzY2FwZWQgfHwgcmVnZXhFc2NhcGUoJyknKTtcbiAgICAgIHRoaXMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3IgPSBpT3B0cy5uZXN0aW5nT3B0aW9uc1NlcGFyYXRvciA/IGlPcHRzLm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yIDogaU9wdHMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3IgfHwgJywnO1xuICAgICAgdGhpcy5tYXhSZXBsYWNlcyA9IGlPcHRzLm1heFJlcGxhY2VzID8gaU9wdHMubWF4UmVwbGFjZXMgOiAxMDAwO1xuICAgICAgdGhpcy5hbHdheXNGb3JtYXQgPSBpT3B0cy5hbHdheXNGb3JtYXQgIT09IHVuZGVmaW5lZCA/IGlPcHRzLmFsd2F5c0Zvcm1hdCA6IGZhbHNlO1xuICAgICAgdGhpcy5yZXNldFJlZ0V4cCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHRoaXMuaW5pdCh0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldFJlZ0V4cFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldFJlZ0V4cCgpIHtcbiAgICAgIHZhciByZWdleHBTdHIgPSBcIlwiLmNvbmNhdCh0aGlzLnByZWZpeCwgXCIoLis/KVwiKS5jb25jYXQodGhpcy5zdWZmaXgpO1xuICAgICAgdGhpcy5yZWdleHAgPSBuZXcgUmVnRXhwKHJlZ2V4cFN0ciwgJ2cnKTtcbiAgICAgIHZhciByZWdleHBVbmVzY2FwZVN0ciA9IFwiXCIuY29uY2F0KHRoaXMucHJlZml4KS5jb25jYXQodGhpcy51bmVzY2FwZVByZWZpeCwgXCIoLis/KVwiKS5jb25jYXQodGhpcy51bmVzY2FwZVN1ZmZpeCkuY29uY2F0KHRoaXMuc3VmZml4KTtcbiAgICAgIHRoaXMucmVnZXhwVW5lc2NhcGUgPSBuZXcgUmVnRXhwKHJlZ2V4cFVuZXNjYXBlU3RyLCAnZycpO1xuICAgICAgdmFyIG5lc3RpbmdSZWdleHBTdHIgPSBcIlwiLmNvbmNhdCh0aGlzLm5lc3RpbmdQcmVmaXgsIFwiKC4rPylcIikuY29uY2F0KHRoaXMubmVzdGluZ1N1ZmZpeCk7XG4gICAgICB0aGlzLm5lc3RpbmdSZWdleHAgPSBuZXcgUmVnRXhwKG5lc3RpbmdSZWdleHBTdHIsICdnJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImludGVycG9sYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGludGVycG9sYXRlKHN0ciwgZGF0YSwgbG5nLCBvcHRpb25zKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgbWF0Y2g7XG4gICAgICB2YXIgdmFsdWU7XG4gICAgICB2YXIgcmVwbGFjZXM7XG4gICAgICB2YXIgZGVmYXVsdERhdGEgPSB0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24gJiYgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZGVmYXVsdFZhcmlhYmxlcyB8fCB7fTtcblxuICAgICAgZnVuY3Rpb24gcmVnZXhTYWZlKHZhbCkge1xuICAgICAgICByZXR1cm4gdmFsLnJlcGxhY2UoL1xcJC9nLCAnJCQkJCcpO1xuICAgICAgfVxuXG4gICAgICB2YXIgaGFuZGxlRm9ybWF0ID0gZnVuY3Rpb24gaGFuZGxlRm9ybWF0KGtleSkge1xuICAgICAgICBpZiAoa2V5LmluZGV4T2YoX3RoaXMuZm9ybWF0U2VwYXJhdG9yKSA8IDApIHtcbiAgICAgICAgICB2YXIgcGF0aCA9IGdldFBhdGhXaXRoRGVmYXVsdHMoZGF0YSwgZGVmYXVsdERhdGEsIGtleSk7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmFsd2F5c0Zvcm1hdCA/IF90aGlzLmZvcm1hdChwYXRoLCB1bmRlZmluZWQsIGxuZywgX29iamVjdFNwcmVhZCQzKF9vYmplY3RTcHJlYWQkMyhfb2JqZWN0U3ByZWFkJDMoe30sIG9wdGlvbnMpLCBkYXRhKSwge30sIHtcbiAgICAgICAgICAgIGludGVycG9sYXRpb25rZXk6IGtleVxuICAgICAgICAgIH0pKSA6IHBhdGg7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcCA9IGtleS5zcGxpdChfdGhpcy5mb3JtYXRTZXBhcmF0b3IpO1xuICAgICAgICB2YXIgayA9IHAuc2hpZnQoKS50cmltKCk7XG4gICAgICAgIHZhciBmID0gcC5qb2luKF90aGlzLmZvcm1hdFNlcGFyYXRvcikudHJpbSgpO1xuICAgICAgICByZXR1cm4gX3RoaXMuZm9ybWF0KGdldFBhdGhXaXRoRGVmYXVsdHMoZGF0YSwgZGVmYXVsdERhdGEsIGspLCBmLCBsbmcsIF9vYmplY3RTcHJlYWQkMyhfb2JqZWN0U3ByZWFkJDMoX29iamVjdFNwcmVhZCQzKHt9LCBvcHRpb25zKSwgZGF0YSksIHt9LCB7XG4gICAgICAgICAgaW50ZXJwb2xhdGlvbmtleToga1xuICAgICAgICB9KSk7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLnJlc2V0UmVnRXhwKCk7XG4gICAgICB2YXIgbWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLm1pc3NpbmdJbnRlcnBvbGF0aW9uSGFuZGxlciB8fCB0aGlzLm9wdGlvbnMubWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyO1xuICAgICAgdmFyIHNraXBPblZhcmlhYmxlcyA9IG9wdGlvbnMgJiYgb3B0aW9ucy5pbnRlcnBvbGF0aW9uICYmIG9wdGlvbnMuaW50ZXJwb2xhdGlvbi5za2lwT25WYXJpYWJsZXMgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuaW50ZXJwb2xhdGlvbi5za2lwT25WYXJpYWJsZXMgOiB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5za2lwT25WYXJpYWJsZXM7XG4gICAgICB2YXIgdG9kb3MgPSBbe1xuICAgICAgICByZWdleDogdGhpcy5yZWdleHBVbmVzY2FwZSxcbiAgICAgICAgc2FmZVZhbHVlOiBmdW5jdGlvbiBzYWZlVmFsdWUodmFsKSB7XG4gICAgICAgICAgcmV0dXJuIHJlZ2V4U2FmZSh2YWwpO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIHJlZ2V4OiB0aGlzLnJlZ2V4cCxcbiAgICAgICAgc2FmZVZhbHVlOiBmdW5jdGlvbiBzYWZlVmFsdWUodmFsKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmVzY2FwZVZhbHVlID8gcmVnZXhTYWZlKF90aGlzLmVzY2FwZSh2YWwpKSA6IHJlZ2V4U2FmZSh2YWwpO1xuICAgICAgICB9XG4gICAgICB9XTtcbiAgICAgIHRvZG9zLmZvckVhY2goZnVuY3Rpb24gKHRvZG8pIHtcbiAgICAgICAgcmVwbGFjZXMgPSAwO1xuXG4gICAgICAgIHdoaWxlIChtYXRjaCA9IHRvZG8ucmVnZXguZXhlYyhzdHIpKSB7XG4gICAgICAgICAgdmFyIG1hdGNoZWRWYXIgPSBtYXRjaFsxXS50cmltKCk7XG4gICAgICAgICAgdmFsdWUgPSBoYW5kbGVGb3JtYXQobWF0Y2hlZFZhcik7XG5cbiAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBtaXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgdmFyIHRlbXAgPSBtaXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXIoc3RyLCBtYXRjaCwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgIHZhbHVlID0gdHlwZW9mIHRlbXAgPT09ICdzdHJpbmcnID8gdGVtcCA6ICcnO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zICYmIG9wdGlvbnMuaGFzT3duUHJvcGVydHkobWF0Y2hlZFZhcikpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSAnJztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2tpcE9uVmFyaWFibGVzKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gbWF0Y2hbMF07XG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX3RoaXMubG9nZ2VyLndhcm4oXCJtaXNzZWQgdG8gcGFzcyBpbiB2YXJpYWJsZSBcIi5jb25jYXQobWF0Y2hlZFZhciwgXCIgZm9yIGludGVycG9sYXRpbmcgXCIpLmNvbmNhdChzdHIpKTtcblxuICAgICAgICAgICAgICB2YWx1ZSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJyAmJiAhX3RoaXMudXNlUmF3VmFsdWVUb0VzY2FwZSkge1xuICAgICAgICAgICAgdmFsdWUgPSBtYWtlU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc2FmZVZhbHVlID0gdG9kby5zYWZlVmFsdWUodmFsdWUpO1xuICAgICAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKG1hdGNoWzBdLCBzYWZlVmFsdWUpO1xuXG4gICAgICAgICAgaWYgKHNraXBPblZhcmlhYmxlcykge1xuICAgICAgICAgICAgdG9kby5yZWdleC5sYXN0SW5kZXggKz0gc2FmZVZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgIHRvZG8ucmVnZXgubGFzdEluZGV4IC09IG1hdGNoWzBdLmxlbmd0aDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdG9kby5yZWdleC5sYXN0SW5kZXggPSAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJlcGxhY2VzKys7XG5cbiAgICAgICAgICBpZiAocmVwbGFjZXMgPj0gX3RoaXMubWF4UmVwbGFjZXMpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJuZXN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG5lc3Qoc3RyLCBmYykge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTtcbiAgICAgIHZhciBtYXRjaDtcbiAgICAgIHZhciB2YWx1ZTtcblxuICAgICAgdmFyIGNsb25lZE9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkJDMoe30sIG9wdGlvbnMpO1xuXG4gICAgICBjbG9uZWRPcHRpb25zLmFwcGx5UG9zdFByb2Nlc3NvciA9IGZhbHNlO1xuICAgICAgZGVsZXRlIGNsb25lZE9wdGlvbnMuZGVmYXVsdFZhbHVlO1xuXG4gICAgICBmdW5jdGlvbiBoYW5kbGVIYXNPcHRpb25zKGtleSwgaW5oZXJpdGVkT3B0aW9ucykge1xuICAgICAgICB2YXIgc2VwID0gdGhpcy5uZXN0aW5nT3B0aW9uc1NlcGFyYXRvcjtcbiAgICAgICAgaWYgKGtleS5pbmRleE9mKHNlcCkgPCAwKSByZXR1cm4ga2V5O1xuICAgICAgICB2YXIgYyA9IGtleS5zcGxpdChuZXcgUmVnRXhwKFwiXCIuY29uY2F0KHNlcCwgXCJbIF0qe1wiKSkpO1xuICAgICAgICB2YXIgb3B0aW9uc1N0cmluZyA9IFwie1wiLmNvbmNhdChjWzFdKTtcbiAgICAgICAga2V5ID0gY1swXTtcbiAgICAgICAgb3B0aW9uc1N0cmluZyA9IHRoaXMuaW50ZXJwb2xhdGUob3B0aW9uc1N0cmluZywgY2xvbmVkT3B0aW9ucyk7XG4gICAgICAgIG9wdGlvbnNTdHJpbmcgPSBvcHRpb25zU3RyaW5nLnJlcGxhY2UoLycvZywgJ1wiJyk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjbG9uZWRPcHRpb25zID0gSlNPTi5wYXJzZShvcHRpb25zU3RyaW5nKTtcbiAgICAgICAgICBpZiAoaW5oZXJpdGVkT3B0aW9ucykgY2xvbmVkT3B0aW9ucyA9IF9vYmplY3RTcHJlYWQkMyhfb2JqZWN0U3ByZWFkJDMoe30sIGluaGVyaXRlZE9wdGlvbnMpLCBjbG9uZWRPcHRpb25zKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLndhcm4oXCJmYWlsZWQgcGFyc2luZyBvcHRpb25zIHN0cmluZyBpbiBuZXN0aW5nIGZvciBrZXkgXCIuY29uY2F0KGtleSksIGUpO1xuICAgICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChrZXkpLmNvbmNhdChzZXApLmNvbmNhdChvcHRpb25zU3RyaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZSBjbG9uZWRPcHRpb25zLmRlZmF1bHRWYWx1ZTtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICAgIH1cblxuICAgICAgd2hpbGUgKG1hdGNoID0gdGhpcy5uZXN0aW5nUmVnZXhwLmV4ZWMoc3RyKSkge1xuICAgICAgICB2YXIgZm9ybWF0dGVycyA9IFtdO1xuICAgICAgICB2YXIgZG9SZWR1Y2UgPSBmYWxzZTtcblxuICAgICAgICBpZiAobWF0Y2hbMF0uaW5kZXhPZih0aGlzLmZvcm1hdFNlcGFyYXRvcikgIT09IC0xICYmICEvey4qfS8udGVzdChtYXRjaFsxXSkpIHtcbiAgICAgICAgICB2YXIgciA9IG1hdGNoWzFdLnNwbGl0KHRoaXMuZm9ybWF0U2VwYXJhdG9yKS5tYXAoZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgICAgICAgIHJldHVybiBlbGVtLnRyaW0oKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBtYXRjaFsxXSA9IHIuc2hpZnQoKTtcbiAgICAgICAgICBmb3JtYXR0ZXJzID0gcjtcbiAgICAgICAgICBkb1JlZHVjZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICB2YWx1ZSA9IGZjKGhhbmRsZUhhc09wdGlvbnMuY2FsbCh0aGlzLCBtYXRjaFsxXS50cmltKCksIGNsb25lZE9wdGlvbnMpLCBjbG9uZWRPcHRpb25zKTtcbiAgICAgICAgaWYgKHZhbHVlICYmIG1hdGNoWzBdID09PSBzdHIgJiYgdHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykgcmV0dXJuIHZhbHVlO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykgdmFsdWUgPSBtYWtlU3RyaW5nKHZhbHVlKTtcblxuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIud2FybihcIm1pc3NlZCB0byByZXNvbHZlIFwiLmNvbmNhdChtYXRjaFsxXSwgXCIgZm9yIG5lc3RpbmcgXCIpLmNvbmNhdChzdHIpKTtcbiAgICAgICAgICB2YWx1ZSA9ICcnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRvUmVkdWNlKSB7XG4gICAgICAgICAgdmFsdWUgPSBmb3JtYXR0ZXJzLnJlZHVjZShmdW5jdGlvbiAodiwgZikge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5mb3JtYXQodiwgZiwgb3B0aW9ucy5sbmcsIF9vYmplY3RTcHJlYWQkMyhfb2JqZWN0U3ByZWFkJDMoe30sIG9wdGlvbnMpLCB7fSwge1xuICAgICAgICAgICAgICBpbnRlcnBvbGF0aW9ua2V5OiBtYXRjaFsxXS50cmltKClcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICB9LCB2YWx1ZS50cmltKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RyID0gc3RyLnJlcGxhY2UobWF0Y2hbMF0sIHZhbHVlKTtcbiAgICAgICAgdGhpcy5yZWdleHAubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSW50ZXJwb2xhdG9yO1xufSgpO1xuXG5mdW5jdGlvbiBvd25LZXlzJDQob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHsgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyB9IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkJDQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyQ0KE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMkNChPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gcGFyc2VGb3JtYXRTdHIoZm9ybWF0U3RyKSB7XG4gIHZhciBmb3JtYXROYW1lID0gZm9ybWF0U3RyLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICB2YXIgZm9ybWF0T3B0aW9ucyA9IHt9O1xuXG4gIGlmIChmb3JtYXRTdHIuaW5kZXhPZignKCcpID4gLTEpIHtcbiAgICB2YXIgcCA9IGZvcm1hdFN0ci5zcGxpdCgnKCcpO1xuICAgIGZvcm1hdE5hbWUgPSBwWzBdLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICAgIHZhciBvcHRTdHIgPSBwWzFdLnN1YnN0cmluZygwLCBwWzFdLmxlbmd0aCAtIDEpO1xuXG4gICAgaWYgKGZvcm1hdE5hbWUgPT09ICdjdXJyZW5jeScgJiYgb3B0U3RyLmluZGV4T2YoJzonKSA8IDApIHtcbiAgICAgIGlmICghZm9ybWF0T3B0aW9ucy5jdXJyZW5jeSkgZm9ybWF0T3B0aW9ucy5jdXJyZW5jeSA9IG9wdFN0ci50cmltKCk7XG4gICAgfSBlbHNlIGlmIChmb3JtYXROYW1lID09PSAncmVsYXRpdmV0aW1lJyAmJiBvcHRTdHIuaW5kZXhPZignOicpIDwgMCkge1xuICAgICAgaWYgKCFmb3JtYXRPcHRpb25zLnJhbmdlKSBmb3JtYXRPcHRpb25zLnJhbmdlID0gb3B0U3RyLnRyaW0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG9wdHMgPSBvcHRTdHIuc3BsaXQoJzsnKTtcbiAgICAgIG9wdHMuZm9yRWFjaChmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgIGlmICghb3B0KSByZXR1cm47XG5cbiAgICAgICAgdmFyIF9vcHQkc3BsaXQgPSBvcHQuc3BsaXQoJzonKSxcbiAgICAgICAgICAgIF9vcHQkc3BsaXQyID0gX3RvQXJyYXkoX29wdCRzcGxpdCksXG4gICAgICAgICAgICBrZXkgPSBfb3B0JHNwbGl0MlswXSxcbiAgICAgICAgICAgIHJlc3QgPSBfb3B0JHNwbGl0Mi5zbGljZSgxKTtcblxuICAgICAgICB2YXIgdmFsID0gcmVzdC5qb2luKCc6Jyk7XG4gICAgICAgIGlmICghZm9ybWF0T3B0aW9uc1trZXkudHJpbSgpXSkgZm9ybWF0T3B0aW9uc1trZXkudHJpbSgpXSA9IHZhbC50cmltKCk7XG4gICAgICAgIGlmICh2YWwudHJpbSgpID09PSAnZmFsc2UnKSBmb3JtYXRPcHRpb25zW2tleS50cmltKCldID0gZmFsc2U7XG4gICAgICAgIGlmICh2YWwudHJpbSgpID09PSAndHJ1ZScpIGZvcm1hdE9wdGlvbnNba2V5LnRyaW0oKV0gPSB0cnVlO1xuICAgICAgICBpZiAoIWlzTmFOKHZhbC50cmltKCkpKSBmb3JtYXRPcHRpb25zW2tleS50cmltKCldID0gcGFyc2VJbnQodmFsLnRyaW0oKSwgMTApO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmb3JtYXROYW1lOiBmb3JtYXROYW1lLFxuICAgIGZvcm1hdE9wdGlvbnM6IGZvcm1hdE9wdGlvbnNcbiAgfTtcbn1cblxudmFyIEZvcm1hdHRlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRm9ybWF0dGVyKCkge1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGb3JtYXR0ZXIpO1xuXG4gICAgdGhpcy5sb2dnZXIgPSBiYXNlTG9nZ2VyLmNyZWF0ZSgnZm9ybWF0dGVyJyk7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLmZvcm1hdHMgPSB7XG4gICAgICBudW1iZXI6IGZ1bmN0aW9uIG51bWJlcih2YWwsIGxuZywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IEludGwuTnVtYmVyRm9ybWF0KGxuZywgb3B0aW9ucykuZm9ybWF0KHZhbCk7XG4gICAgICB9LFxuICAgICAgY3VycmVuY3k6IGZ1bmN0aW9uIGN1cnJlbmN5KHZhbCwgbG5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW50bC5OdW1iZXJGb3JtYXQobG5nLCBfb2JqZWN0U3ByZWFkJDQoX29iamVjdFNwcmVhZCQ0KHt9LCBvcHRpb25zKSwge30sIHtcbiAgICAgICAgICBzdHlsZTogJ2N1cnJlbmN5J1xuICAgICAgICB9KSkuZm9ybWF0KHZhbCk7XG4gICAgICB9LFxuICAgICAgZGF0ZXRpbWU6IGZ1bmN0aW9uIGRhdGV0aW1lKHZhbCwgbG5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChsbmcsIF9vYmplY3RTcHJlYWQkNCh7fSwgb3B0aW9ucykpLmZvcm1hdCh2YWwpO1xuICAgICAgfSxcbiAgICAgIHJlbGF0aXZldGltZTogZnVuY3Rpb24gcmVsYXRpdmV0aW1lKHZhbCwgbG5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXQobG5nLCBfb2JqZWN0U3ByZWFkJDQoe30sIG9wdGlvbnMpKS5mb3JtYXQodmFsLCBvcHRpb25zLnJhbmdlIHx8ICdkYXknKTtcbiAgICAgIH0sXG4gICAgICBsaXN0OiBmdW5jdGlvbiBsaXN0KHZhbCwgbG5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW50bC5MaXN0Rm9ybWF0KGxuZywgX29iamVjdFNwcmVhZCQ0KHt9LCBvcHRpb25zKSkuZm9ybWF0KHZhbCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLmluaXQob3B0aW9ucyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoRm9ybWF0dGVyLCBbe1xuICAgIGtleTogXCJpbml0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoc2VydmljZXMpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHt9XG4gICAgICB9O1xuICAgICAgdmFyIGlPcHRzID0gb3B0aW9ucy5pbnRlcnBvbGF0aW9uO1xuICAgICAgdGhpcy5mb3JtYXRTZXBhcmF0b3IgPSBpT3B0cy5mb3JtYXRTZXBhcmF0b3IgPyBpT3B0cy5mb3JtYXRTZXBhcmF0b3IgOiBpT3B0cy5mb3JtYXRTZXBhcmF0b3IgfHwgJywnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkKG5hbWUsIGZjKSB7XG4gICAgICB0aGlzLmZvcm1hdHNbbmFtZS50b0xvd2VyQ2FzZSgpLnRyaW0oKV0gPSBmYztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9ybWF0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdCh2YWx1ZSwgX2Zvcm1hdCwgbG5nLCBvcHRpb25zKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgZm9ybWF0cyA9IF9mb3JtYXQuc3BsaXQodGhpcy5mb3JtYXRTZXBhcmF0b3IpO1xuXG4gICAgICB2YXIgcmVzdWx0ID0gZm9ybWF0cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbSwgZikge1xuICAgICAgICB2YXIgX3BhcnNlRm9ybWF0U3RyID0gcGFyc2VGb3JtYXRTdHIoZiksXG4gICAgICAgICAgICBmb3JtYXROYW1lID0gX3BhcnNlRm9ybWF0U3RyLmZvcm1hdE5hbWUsXG4gICAgICAgICAgICBmb3JtYXRPcHRpb25zID0gX3BhcnNlRm9ybWF0U3RyLmZvcm1hdE9wdGlvbnM7XG5cbiAgICAgICAgaWYgKF90aGlzLmZvcm1hdHNbZm9ybWF0TmFtZV0pIHtcbiAgICAgICAgICB2YXIgZm9ybWF0dGVkID0gbWVtO1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciB2YWxPcHRpb25zID0gb3B0aW9ucyAmJiBvcHRpb25zLmZvcm1hdFBhcmFtcyAmJiBvcHRpb25zLmZvcm1hdFBhcmFtc1tvcHRpb25zLmludGVycG9sYXRpb25rZXldIHx8IHt9O1xuICAgICAgICAgICAgdmFyIGwgPSB2YWxPcHRpb25zLmxvY2FsZSB8fCB2YWxPcHRpb25zLmxuZyB8fCBvcHRpb25zLmxvY2FsZSB8fCBvcHRpb25zLmxuZyB8fCBsbmc7XG4gICAgICAgICAgICBmb3JtYXR0ZWQgPSBfdGhpcy5mb3JtYXRzW2Zvcm1hdE5hbWVdKG1lbSwgbCwgX29iamVjdFNwcmVhZCQ0KF9vYmplY3RTcHJlYWQkNChfb2JqZWN0U3ByZWFkJDQoe30sIGZvcm1hdE9wdGlvbnMpLCBvcHRpb25zKSwgdmFsT3B0aW9ucykpO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBfdGhpcy5sb2dnZXIud2FybihlcnJvcik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIGZvcm1hdHRlZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5sb2dnZXIud2FybihcInRoZXJlIHdhcyBubyBmb3JtYXQgZnVuY3Rpb24gZm9yIFwiLmNvbmNhdChmb3JtYXROYW1lKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbWVtO1xuICAgICAgfSwgdmFsdWUpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRm9ybWF0dGVyO1xufSgpO1xuXG5mdW5jdGlvbiBvd25LZXlzJDUob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHsgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyB9IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkJDUodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyQ1KE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMkNShPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyJDIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMigpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMigpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIHJlbW92ZShhcnIsIHdoYXQpIHtcbiAgdmFyIGZvdW5kID0gYXJyLmluZGV4T2Yod2hhdCk7XG5cbiAgd2hpbGUgKGZvdW5kICE9PSAtMSkge1xuICAgIGFyci5zcGxpY2UoZm91bmQsIDEpO1xuICAgIGZvdW5kID0gYXJyLmluZGV4T2Yod2hhdCk7XG4gIH1cbn1cblxudmFyIENvbm5lY3RvciA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhDb25uZWN0b3IsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIkMihDb25uZWN0b3IpO1xuXG4gIGZ1bmN0aW9uIENvbm5lY3RvcihiYWNrZW5kLCBzdG9yZSwgc2VydmljZXMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29ubmVjdG9yKTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcyk7XG5cbiAgICBpZiAoaXNJRTEwKSB7XG4gICAgICBFdmVudEVtaXR0ZXIuY2FsbChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgfVxuXG4gICAgX3RoaXMuYmFja2VuZCA9IGJhY2tlbmQ7XG4gICAgX3RoaXMuc3RvcmUgPSBzdG9yZTtcbiAgICBfdGhpcy5zZXJ2aWNlcyA9IHNlcnZpY2VzO1xuICAgIF90aGlzLmxhbmd1YWdlVXRpbHMgPSBzZXJ2aWNlcy5sYW5ndWFnZVV0aWxzO1xuICAgIF90aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIF90aGlzLmxvZ2dlciA9IGJhc2VMb2dnZXIuY3JlYXRlKCdiYWNrZW5kQ29ubmVjdG9yJyk7XG4gICAgX3RoaXMuc3RhdGUgPSB7fTtcbiAgICBfdGhpcy5xdWV1ZSA9IFtdO1xuXG4gICAgaWYgKF90aGlzLmJhY2tlbmQgJiYgX3RoaXMuYmFja2VuZC5pbml0KSB7XG4gICAgICBfdGhpcy5iYWNrZW5kLmluaXQoc2VydmljZXMsIG9wdGlvbnMuYmFja2VuZCwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENvbm5lY3RvciwgW3tcbiAgICBrZXk6IFwicXVldWVMb2FkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHF1ZXVlTG9hZChsYW5ndWFnZXMsIG5hbWVzcGFjZXMsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHRvTG9hZCA9IFtdO1xuICAgICAgdmFyIHBlbmRpbmcgPSBbXTtcbiAgICAgIHZhciB0b0xvYWRMYW5ndWFnZXMgPSBbXTtcbiAgICAgIHZhciB0b0xvYWROYW1lc3BhY2VzID0gW107XG4gICAgICBsYW5ndWFnZXMuZm9yRWFjaChmdW5jdGlvbiAobG5nKSB7XG4gICAgICAgIHZhciBoYXNBbGxOYW1lc3BhY2VzID0gdHJ1ZTtcbiAgICAgICAgbmFtZXNwYWNlcy5mb3JFYWNoKGZ1bmN0aW9uIChucykge1xuICAgICAgICAgIHZhciBuYW1lID0gXCJcIi5jb25jYXQobG5nLCBcInxcIikuY29uY2F0KG5zKTtcblxuICAgICAgICAgIGlmICghb3B0aW9ucy5yZWxvYWQgJiYgX3RoaXMyLnN0b3JlLmhhc1Jlc291cmNlQnVuZGxlKGxuZywgbnMpKSB7XG4gICAgICAgICAgICBfdGhpczIuc3RhdGVbbmFtZV0gPSAyO1xuICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMyLnN0YXRlW25hbWVdIDwgMCkgOyBlbHNlIGlmIChfdGhpczIuc3RhdGVbbmFtZV0gPT09IDEpIHtcbiAgICAgICAgICAgIGlmIChwZW5kaW5nLmluZGV4T2YobmFtZSkgPCAwKSBwZW5kaW5nLnB1c2gobmFtZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF90aGlzMi5zdGF0ZVtuYW1lXSA9IDE7XG4gICAgICAgICAgICBoYXNBbGxOYW1lc3BhY2VzID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAocGVuZGluZy5pbmRleE9mKG5hbWUpIDwgMCkgcGVuZGluZy5wdXNoKG5hbWUpO1xuICAgICAgICAgICAgaWYgKHRvTG9hZC5pbmRleE9mKG5hbWUpIDwgMCkgdG9Mb2FkLnB1c2gobmFtZSk7XG4gICAgICAgICAgICBpZiAodG9Mb2FkTmFtZXNwYWNlcy5pbmRleE9mKG5zKSA8IDApIHRvTG9hZE5hbWVzcGFjZXMucHVzaChucyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFoYXNBbGxOYW1lc3BhY2VzKSB0b0xvYWRMYW5ndWFnZXMucHVzaChsbmcpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmICh0b0xvYWQubGVuZ3RoIHx8IHBlbmRpbmcubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMucXVldWUucHVzaCh7XG4gICAgICAgICAgcGVuZGluZzogcGVuZGluZyxcbiAgICAgICAgICBsb2FkZWQ6IHt9LFxuICAgICAgICAgIGVycm9yczogW10sXG4gICAgICAgICAgY2FsbGJhY2s6IGNhbGxiYWNrXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b0xvYWQ6IHRvTG9hZCxcbiAgICAgICAgcGVuZGluZzogcGVuZGluZyxcbiAgICAgICAgdG9Mb2FkTGFuZ3VhZ2VzOiB0b0xvYWRMYW5ndWFnZXMsXG4gICAgICAgIHRvTG9hZE5hbWVzcGFjZXM6IHRvTG9hZE5hbWVzcGFjZXNcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxvYWRlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkZWQobmFtZSwgZXJyLCBkYXRhKSB7XG4gICAgICB2YXIgcyA9IG5hbWUuc3BsaXQoJ3wnKTtcbiAgICAgIHZhciBsbmcgPSBzWzBdO1xuICAgICAgdmFyIG5zID0gc1sxXTtcbiAgICAgIGlmIChlcnIpIHRoaXMuZW1pdCgnZmFpbGVkTG9hZGluZycsIGxuZywgbnMsIGVycik7XG5cbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHRoaXMuc3RvcmUuYWRkUmVzb3VyY2VCdW5kbGUobG5nLCBucywgZGF0YSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc3RhdGVbbmFtZV0gPSBlcnIgPyAtMSA6IDI7XG4gICAgICB2YXIgbG9hZGVkID0ge307XG4gICAgICB0aGlzLnF1ZXVlLmZvckVhY2goZnVuY3Rpb24gKHEpIHtcbiAgICAgICAgcHVzaFBhdGgocS5sb2FkZWQsIFtsbmddLCBucyk7XG4gICAgICAgIHJlbW92ZShxLnBlbmRpbmcsIG5hbWUpO1xuICAgICAgICBpZiAoZXJyKSBxLmVycm9ycy5wdXNoKGVycik7XG5cbiAgICAgICAgaWYgKHEucGVuZGluZy5sZW5ndGggPT09IDAgJiYgIXEuZG9uZSkge1xuICAgICAgICAgIE9iamVjdC5rZXlzKHEubG9hZGVkKS5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XG4gICAgICAgICAgICBpZiAoIWxvYWRlZFtsXSkgbG9hZGVkW2xdID0gW107XG5cbiAgICAgICAgICAgIGlmIChxLmxvYWRlZFtsXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgcS5sb2FkZWRbbF0uZm9yRWFjaChmdW5jdGlvbiAobnMpIHtcbiAgICAgICAgICAgICAgICBpZiAobG9hZGVkW2xdLmluZGV4T2YobnMpIDwgMCkgbG9hZGVkW2xdLnB1c2gobnMpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICBxLmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgaWYgKHEuZXJyb3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgcS5jYWxsYmFjayhxLmVycm9ycyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHEuY2FsbGJhY2soKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5lbWl0KCdsb2FkZWQnLCBsb2FkZWQpO1xuICAgICAgdGhpcy5xdWV1ZSA9IHRoaXMucXVldWUuZmlsdGVyKGZ1bmN0aW9uIChxKSB7XG4gICAgICAgIHJldHVybiAhcS5kb25lO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlYWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVhZChsbmcsIG5zLCBmY05hbWUpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgdHJpZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IDA7XG4gICAgICB2YXIgd2FpdCA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogMzUwO1xuICAgICAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgPyBhcmd1bWVudHNbNV0gOiB1bmRlZmluZWQ7XG4gICAgICBpZiAoIWxuZy5sZW5ndGgpIHJldHVybiBjYWxsYmFjayhudWxsLCB7fSk7XG4gICAgICByZXR1cm4gdGhpcy5iYWNrZW5kW2ZjTmFtZV0obG5nLCBucywgZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICBpZiAoZXJyICYmIGRhdGEgJiYgdHJpZWQgPCA1KSB7XG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpczMucmVhZC5jYWxsKF90aGlzMywgbG5nLCBucywgZmNOYW1lLCB0cmllZCArIDEsIHdhaXQgKiAyLCBjYWxsYmFjayk7XG4gICAgICAgICAgfSwgd2FpdCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY2FsbGJhY2soZXJyLCBkYXRhKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwcmVwYXJlTG9hZGluZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVwYXJlTG9hZGluZyhsYW5ndWFnZXMsIG5hbWVzcGFjZXMpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMyA/IGFyZ3VtZW50c1szXSA6IHVuZGVmaW5lZDtcblxuICAgICAgaWYgKCF0aGlzLmJhY2tlbmQpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIud2FybignTm8gYmFja2VuZCB3YXMgYWRkZWQgdmlhIGkxOG5leHQudXNlLiBXaWxsIG5vdCBsb2FkIHJlc291cmNlcy4nKTtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGFuZ3VhZ2VzID09PSAnc3RyaW5nJykgbGFuZ3VhZ2VzID0gdGhpcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShsYW5ndWFnZXMpO1xuICAgICAgaWYgKHR5cGVvZiBuYW1lc3BhY2VzID09PSAnc3RyaW5nJykgbmFtZXNwYWNlcyA9IFtuYW1lc3BhY2VzXTtcbiAgICAgIHZhciB0b0xvYWQgPSB0aGlzLnF1ZXVlTG9hZChsYW5ndWFnZXMsIG5hbWVzcGFjZXMsIG9wdGlvbnMsIGNhbGxiYWNrKTtcblxuICAgICAgaWYgKCF0b0xvYWQudG9Mb2FkLmxlbmd0aCkge1xuICAgICAgICBpZiAoIXRvTG9hZC5wZW5kaW5nLmxlbmd0aCkgY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIHRvTG9hZC50b0xvYWQuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICBfdGhpczQubG9hZE9uZShuYW1lKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWQobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCBjYWxsYmFjaykge1xuICAgICAgdGhpcy5wcmVwYXJlTG9hZGluZyhsYW5ndWFnZXMsIG5hbWVzcGFjZXMsIHt9LCBjYWxsYmFjayk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWxvYWQobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCBjYWxsYmFjaykge1xuICAgICAgdGhpcy5wcmVwYXJlTG9hZGluZyhsYW5ndWFnZXMsIG5hbWVzcGFjZXMsIHtcbiAgICAgICAgcmVsb2FkOiB0cnVlXG4gICAgICB9LCBjYWxsYmFjayk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxvYWRPbmVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZE9uZShuYW1lKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgdmFyIHByZWZpeCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG4gICAgICB2YXIgcyA9IG5hbWUuc3BsaXQoJ3wnKTtcbiAgICAgIHZhciBsbmcgPSBzWzBdO1xuICAgICAgdmFyIG5zID0gc1sxXTtcbiAgICAgIHRoaXMucmVhZChsbmcsIG5zLCAncmVhZCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICAgIGlmIChlcnIpIF90aGlzNS5sb2dnZXIud2FybihcIlwiLmNvbmNhdChwcmVmaXgsIFwibG9hZGluZyBuYW1lc3BhY2UgXCIpLmNvbmNhdChucywgXCIgZm9yIGxhbmd1YWdlIFwiKS5jb25jYXQobG5nLCBcIiBmYWlsZWRcIiksIGVycik7XG4gICAgICAgIGlmICghZXJyICYmIGRhdGEpIF90aGlzNS5sb2dnZXIubG9nKFwiXCIuY29uY2F0KHByZWZpeCwgXCJsb2FkZWQgbmFtZXNwYWNlIFwiKS5jb25jYXQobnMsIFwiIGZvciBsYW5ndWFnZSBcIikuY29uY2F0KGxuZyksIGRhdGEpO1xuXG4gICAgICAgIF90aGlzNS5sb2FkZWQobmFtZSwgZXJyLCBkYXRhKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzYXZlTWlzc2luZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzYXZlTWlzc2luZyhsYW5ndWFnZXMsIG5hbWVzcGFjZSwga2V5LCBmYWxsYmFja1ZhbHVlLCBpc1VwZGF0ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IHt9O1xuXG4gICAgICBpZiAodGhpcy5zZXJ2aWNlcy51dGlscyAmJiB0aGlzLnNlcnZpY2VzLnV0aWxzLmhhc0xvYWRlZE5hbWVzcGFjZSAmJiAhdGhpcy5zZXJ2aWNlcy51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UobmFtZXNwYWNlKSkge1xuICAgICAgICB0aGlzLmxvZ2dlci53YXJuKFwiZGlkIG5vdCBzYXZlIGtleSBcXFwiXCIuY29uY2F0KGtleSwgXCJcXFwiIGFzIHRoZSBuYW1lc3BhY2UgXFxcIlwiKS5jb25jYXQobmFtZXNwYWNlLCBcIlxcXCIgd2FzIG5vdCB5ZXQgbG9hZGVkXCIpLCAnVGhpcyBtZWFucyBzb21ldGhpbmcgSVMgV1JPTkcgaW4geW91ciBzZXR1cC4gWW91IGFjY2VzcyB0aGUgdCBmdW5jdGlvbiBiZWZvcmUgaTE4bmV4dC5pbml0IC8gaTE4bmV4dC5sb2FkTmFtZXNwYWNlIC8gaTE4bmV4dC5jaGFuZ2VMYW5ndWFnZSB3YXMgZG9uZS4gV2FpdCBmb3IgdGhlIGNhbGxiYWNrIG9yIFByb21pc2UgdG8gcmVzb2x2ZSBiZWZvcmUgYWNjZXNzaW5nIGl0ISEhJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGtleSA9PT0gdW5kZWZpbmVkIHx8IGtleSA9PT0gbnVsbCB8fCBrZXkgPT09ICcnKSByZXR1cm47XG5cbiAgICAgIGlmICh0aGlzLmJhY2tlbmQgJiYgdGhpcy5iYWNrZW5kLmNyZWF0ZSkge1xuICAgICAgICB0aGlzLmJhY2tlbmQuY3JlYXRlKGxhbmd1YWdlcywgbmFtZXNwYWNlLCBrZXksIGZhbGxiYWNrVmFsdWUsIG51bGwsIF9vYmplY3RTcHJlYWQkNShfb2JqZWN0U3ByZWFkJDUoe30sIG9wdGlvbnMpLCB7fSwge1xuICAgICAgICAgIGlzVXBkYXRlOiBpc1VwZGF0ZVxuICAgICAgICB9KSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghbGFuZ3VhZ2VzIHx8ICFsYW5ndWFnZXNbMF0pIHJldHVybjtcbiAgICAgIHRoaXMuc3RvcmUuYWRkUmVzb3VyY2UobGFuZ3VhZ2VzWzBdLCBuYW1lc3BhY2UsIGtleSwgZmFsbGJhY2tWYWx1ZSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENvbm5lY3Rvcjtcbn0oRXZlbnRFbWl0dGVyKTtcblxuZnVuY3Rpb24gZ2V0KCkge1xuICByZXR1cm4ge1xuICAgIGRlYnVnOiBmYWxzZSxcbiAgICBpbml0SW1tZWRpYXRlOiB0cnVlLFxuICAgIG5zOiBbJ3RyYW5zbGF0aW9uJ10sXG4gICAgZGVmYXVsdE5TOiBbJ3RyYW5zbGF0aW9uJ10sXG4gICAgZmFsbGJhY2tMbmc6IFsnZGV2J10sXG4gICAgZmFsbGJhY2tOUzogZmFsc2UsXG4gICAgc3VwcG9ydGVkTG5nczogZmFsc2UsXG4gICAgbm9uRXhwbGljaXRTdXBwb3J0ZWRMbmdzOiBmYWxzZSxcbiAgICBsb2FkOiAnYWxsJyxcbiAgICBwcmVsb2FkOiBmYWxzZSxcbiAgICBzaW1wbGlmeVBsdXJhbFN1ZmZpeDogdHJ1ZSxcbiAgICBrZXlTZXBhcmF0b3I6ICcuJyxcbiAgICBuc1NlcGFyYXRvcjogJzonLFxuICAgIHBsdXJhbFNlcGFyYXRvcjogJ18nLFxuICAgIGNvbnRleHRTZXBhcmF0b3I6ICdfJyxcbiAgICBwYXJ0aWFsQnVuZGxlZExhbmd1YWdlczogZmFsc2UsXG4gICAgc2F2ZU1pc3Npbmc6IGZhbHNlLFxuICAgIHVwZGF0ZU1pc3Npbmc6IGZhbHNlLFxuICAgIHNhdmVNaXNzaW5nVG86ICdmYWxsYmFjaycsXG4gICAgc2F2ZU1pc3NpbmdQbHVyYWxzOiB0cnVlLFxuICAgIG1pc3NpbmdLZXlIYW5kbGVyOiBmYWxzZSxcbiAgICBtaXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXI6IGZhbHNlLFxuICAgIHBvc3RQcm9jZXNzOiBmYWxzZSxcbiAgICBwb3N0UHJvY2Vzc1Bhc3NSZXNvbHZlZDogZmFsc2UsXG4gICAgcmV0dXJuTnVsbDogdHJ1ZSxcbiAgICByZXR1cm5FbXB0eVN0cmluZzogdHJ1ZSxcbiAgICByZXR1cm5PYmplY3RzOiBmYWxzZSxcbiAgICBqb2luQXJyYXlzOiBmYWxzZSxcbiAgICByZXR1cm5lZE9iamVjdEhhbmRsZXI6IGZhbHNlLFxuICAgIHBhcnNlTWlzc2luZ0tleUhhbmRsZXI6IGZhbHNlLFxuICAgIGFwcGVuZE5hbWVzcGFjZVRvTWlzc2luZ0tleTogZmFsc2UsXG4gICAgYXBwZW5kTmFtZXNwYWNlVG9DSU1vZGU6IGZhbHNlLFxuICAgIG92ZXJsb2FkVHJhbnNsYXRpb25PcHRpb25IYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGUoYXJncykge1xuICAgICAgdmFyIHJldCA9IHt9O1xuICAgICAgaWYgKF90eXBlb2YoYXJnc1sxXSkgPT09ICdvYmplY3QnKSByZXQgPSBhcmdzWzFdO1xuICAgICAgaWYgKHR5cGVvZiBhcmdzWzFdID09PSAnc3RyaW5nJykgcmV0LmRlZmF1bHRWYWx1ZSA9IGFyZ3NbMV07XG4gICAgICBpZiAodHlwZW9mIGFyZ3NbMl0gPT09ICdzdHJpbmcnKSByZXQudERlc2NyaXB0aW9uID0gYXJnc1syXTtcblxuICAgICAgaWYgKF90eXBlb2YoYXJnc1syXSkgPT09ICdvYmplY3QnIHx8IF90eXBlb2YoYXJnc1szXSkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHZhciBvcHRpb25zID0gYXJnc1szXSB8fCBhcmdzWzJdO1xuICAgICAgICBPYmplY3Qua2V5cyhvcHRpb25zKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICByZXRba2V5XSA9IG9wdGlvbnNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfSxcbiAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICBlc2NhcGVWYWx1ZTogdHJ1ZSxcbiAgICAgIGZvcm1hdDogZnVuY3Rpb24gZm9ybWF0KHZhbHVlLCBfZm9ybWF0LCBsbmcsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfSxcbiAgICAgIHByZWZpeDogJ3t7JyxcbiAgICAgIHN1ZmZpeDogJ319JyxcbiAgICAgIGZvcm1hdFNlcGFyYXRvcjogJywnLFxuICAgICAgdW5lc2NhcGVQcmVmaXg6ICctJyxcbiAgICAgIG5lc3RpbmdQcmVmaXg6ICckdCgnLFxuICAgICAgbmVzdGluZ1N1ZmZpeDogJyknLFxuICAgICAgbmVzdGluZ09wdGlvbnNTZXBhcmF0b3I6ICcsJyxcbiAgICAgIG1heFJlcGxhY2VzOiAxMDAwLFxuICAgICAgc2tpcE9uVmFyaWFibGVzOiB0cnVlXG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gdHJhbnNmb3JtT3B0aW9ucyhvcHRpb25zKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5ucyA9PT0gJ3N0cmluZycpIG9wdGlvbnMubnMgPSBbb3B0aW9ucy5uc107XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5mYWxsYmFja0xuZyA9PT0gJ3N0cmluZycpIG9wdGlvbnMuZmFsbGJhY2tMbmcgPSBbb3B0aW9ucy5mYWxsYmFja0xuZ107XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5mYWxsYmFja05TID09PSAnc3RyaW5nJykgb3B0aW9ucy5mYWxsYmFja05TID0gW29wdGlvbnMuZmFsbGJhY2tOU107XG5cbiAgaWYgKG9wdGlvbnMuc3VwcG9ydGVkTG5ncyAmJiBvcHRpb25zLnN1cHBvcnRlZExuZ3MuaW5kZXhPZignY2ltb2RlJykgPCAwKSB7XG4gICAgb3B0aW9ucy5zdXBwb3J0ZWRMbmdzID0gb3B0aW9ucy5zdXBwb3J0ZWRMbmdzLmNvbmNhdChbJ2NpbW9kZSddKTtcbiAgfVxuXG4gIHJldHVybiBvcHRpb25zO1xufVxuXG5mdW5jdGlvbiBvd25LZXlzJDYob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHsgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyB9IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkJDYodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyQ2KE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMkNihPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyJDMoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMygpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMygpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5mdW5jdGlvbiBiaW5kTWVtYmVyRnVuY3Rpb25zKGluc3QpIHtcbiAgdmFyIG1lbXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPYmplY3QuZ2V0UHJvdG90eXBlT2YoaW5zdCkpO1xuICBtZW1zLmZvckVhY2goZnVuY3Rpb24gKG1lbSkge1xuICAgIGlmICh0eXBlb2YgaW5zdFttZW1dID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBpbnN0W21lbV0gPSBpbnN0W21lbV0uYmluZChpbnN0KTtcbiAgICB9XG4gIH0pO1xufVxuXG52YXIgSTE4biA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhJMThuLCBfRXZlbnRFbWl0dGVyKTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyJDMoSTE4bik7XG5cbiAgZnVuY3Rpb24gSTE4bigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSTE4bik7XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpO1xuXG4gICAgaWYgKGlzSUUxMCkge1xuICAgICAgRXZlbnRFbWl0dGVyLmNhbGwoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIH1cblxuICAgIF90aGlzLm9wdGlvbnMgPSB0cmFuc2Zvcm1PcHRpb25zKG9wdGlvbnMpO1xuICAgIF90aGlzLnNlcnZpY2VzID0ge307XG4gICAgX3RoaXMubG9nZ2VyID0gYmFzZUxvZ2dlcjtcbiAgICBfdGhpcy5tb2R1bGVzID0ge1xuICAgICAgZXh0ZXJuYWw6IFtdXG4gICAgfTtcbiAgICBiaW5kTWVtYmVyRnVuY3Rpb25zKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcblxuICAgIGlmIChjYWxsYmFjayAmJiAhX3RoaXMuaXNJbml0aWFsaXplZCAmJiAhb3B0aW9ucy5pc0Nsb25lKSB7XG4gICAgICBpZiAoIV90aGlzLm9wdGlvbnMuaW5pdEltbWVkaWF0ZSkge1xuICAgICAgICBfdGhpcy5pbml0KG9wdGlvbnMsIGNhbGxiYWNrKTtcblxuICAgICAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICAgIH1cblxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLmluaXQob3B0aW9ucywgY2FsbGJhY2spO1xuICAgICAgfSwgMCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEkxOG4sIFt7XG4gICAga2V5OiBcImluaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICAgICAgb3B0aW9ucyA9IHt9O1xuICAgICAgfVxuXG4gICAgICBpZiAoIW9wdGlvbnMuZGVmYXVsdE5TICYmIG9wdGlvbnMubnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm5zID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIG9wdGlvbnMuZGVmYXVsdE5TID0gb3B0aW9ucy5ucztcbiAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLm5zLmluZGV4T2YoJ3RyYW5zbGF0aW9uJykgPCAwKSB7XG4gICAgICAgICAgb3B0aW9ucy5kZWZhdWx0TlMgPSBvcHRpb25zLm5zWzBdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciBkZWZPcHRzID0gZ2V0KCk7XG4gICAgICB0aGlzLm9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkJDYoX29iamVjdFNwcmVhZCQ2KF9vYmplY3RTcHJlYWQkNih7fSwgZGVmT3B0cyksIHRoaXMub3B0aW9ucyksIHRyYW5zZm9ybU9wdGlvbnMob3B0aW9ucykpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlBUEkgIT09ICd2MScpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24gPSBfb2JqZWN0U3ByZWFkJDYoX29iamVjdFNwcmVhZCQ2KHt9LCBkZWZPcHRzLmludGVycG9sYXRpb24pLCB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLmtleVNlcGFyYXRvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy51c2VyRGVmaW5lZEtleVNlcGFyYXRvciA9IG9wdGlvbnMua2V5U2VwYXJhdG9yO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5uc1NlcGFyYXRvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy51c2VyRGVmaW5lZE5zU2VwYXJhdG9yID0gb3B0aW9ucy5uc1NlcGFyYXRvcjtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gY3JlYXRlQ2xhc3NPbkRlbWFuZChDbGFzc09yT2JqZWN0KSB7XG4gICAgICAgIGlmICghQ2xhc3NPck9iamVjdCkgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmICh0eXBlb2YgQ2xhc3NPck9iamVjdCA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIG5ldyBDbGFzc09yT2JqZWN0KCk7XG4gICAgICAgIHJldHVybiBDbGFzc09yT2JqZWN0O1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5pc0Nsb25lKSB7XG4gICAgICAgIGlmICh0aGlzLm1vZHVsZXMubG9nZ2VyKSB7XG4gICAgICAgICAgYmFzZUxvZ2dlci5pbml0KGNyZWF0ZUNsYXNzT25EZW1hbmQodGhpcy5tb2R1bGVzLmxvZ2dlciksIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYmFzZUxvZ2dlci5pbml0KG51bGwsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZm9ybWF0dGVyO1xuXG4gICAgICAgIGlmICh0aGlzLm1vZHVsZXMuZm9ybWF0dGVyKSB7XG4gICAgICAgICAgZm9ybWF0dGVyID0gdGhpcy5tb2R1bGVzLmZvcm1hdHRlcjtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgSW50bCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICBmb3JtYXR0ZXIgPSBGb3JtYXR0ZXI7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbHUgPSBuZXcgTGFuZ3VhZ2VVdGlsKHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHRoaXMuc3RvcmUgPSBuZXcgUmVzb3VyY2VTdG9yZSh0aGlzLm9wdGlvbnMucmVzb3VyY2VzLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB2YXIgcyA9IHRoaXMuc2VydmljZXM7XG4gICAgICAgIHMubG9nZ2VyID0gYmFzZUxvZ2dlcjtcbiAgICAgICAgcy5yZXNvdXJjZVN0b3JlID0gdGhpcy5zdG9yZTtcbiAgICAgICAgcy5sYW5ndWFnZVV0aWxzID0gbHU7XG4gICAgICAgIHMucGx1cmFsUmVzb2x2ZXIgPSBuZXcgUGx1cmFsUmVzb2x2ZXIobHUsIHtcbiAgICAgICAgICBwcmVwZW5kOiB0aGlzLm9wdGlvbnMucGx1cmFsU2VwYXJhdG9yLFxuICAgICAgICAgIGNvbXBhdGliaWxpdHlKU09OOiB0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUpTT04sXG4gICAgICAgICAgc2ltcGxpZnlQbHVyYWxTdWZmaXg6IHRoaXMub3B0aW9ucy5zaW1wbGlmeVBsdXJhbFN1ZmZpeFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZm9ybWF0dGVyICYmICghdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZm9ybWF0IHx8IHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLmZvcm1hdCA9PT0gZGVmT3B0cy5pbnRlcnBvbGF0aW9uLmZvcm1hdCkpIHtcbiAgICAgICAgICBzLmZvcm1hdHRlciA9IGNyZWF0ZUNsYXNzT25EZW1hbmQoZm9ybWF0dGVyKTtcbiAgICAgICAgICBzLmZvcm1hdHRlci5pbml0KHMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgICAgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZm9ybWF0ID0gcy5mb3JtYXR0ZXIuZm9ybWF0LmJpbmQocy5mb3JtYXR0ZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcy5pbnRlcnBvbGF0b3IgPSBuZXcgSW50ZXJwb2xhdG9yKHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHMudXRpbHMgPSB7XG4gICAgICAgICAgaGFzTG9hZGVkTmFtZXNwYWNlOiB0aGlzLmhhc0xvYWRlZE5hbWVzcGFjZS5iaW5kKHRoaXMpXG4gICAgICAgIH07XG4gICAgICAgIHMuYmFja2VuZENvbm5lY3RvciA9IG5ldyBDb25uZWN0b3IoY3JlYXRlQ2xhc3NPbkRlbWFuZCh0aGlzLm1vZHVsZXMuYmFja2VuZCksIHMucmVzb3VyY2VTdG9yZSwgcywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgcy5iYWNrZW5kQ29ubmVjdG9yLm9uKCcqJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXMyLmVtaXQuYXBwbHkoX3RoaXMyLCBbZXZlbnRdLmNvbmNhdChhcmdzKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLm1vZHVsZXMubGFuZ3VhZ2VEZXRlY3Rvcikge1xuICAgICAgICAgIHMubGFuZ3VhZ2VEZXRlY3RvciA9IGNyZWF0ZUNsYXNzT25EZW1hbmQodGhpcy5tb2R1bGVzLmxhbmd1YWdlRGV0ZWN0b3IpO1xuICAgICAgICAgIHMubGFuZ3VhZ2VEZXRlY3Rvci5pbml0KHMsIHRoaXMub3B0aW9ucy5kZXRlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5tb2R1bGVzLmkxOG5Gb3JtYXQpIHtcbiAgICAgICAgICBzLmkxOG5Gb3JtYXQgPSBjcmVhdGVDbGFzc09uRGVtYW5kKHRoaXMubW9kdWxlcy5pMThuRm9ybWF0KTtcbiAgICAgICAgICBpZiAocy5pMThuRm9ybWF0LmluaXQpIHMuaTE4bkZvcm1hdC5pbml0KHRoaXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50cmFuc2xhdG9yID0gbmV3IFRyYW5zbGF0b3IodGhpcy5zZXJ2aWNlcywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgdGhpcy50cmFuc2xhdG9yLm9uKCcqJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yID4gMSA/IF9sZW4yIC0gMSA6IDApLCBfa2V5MiA9IDE7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX3RoaXMyLmVtaXQuYXBwbHkoX3RoaXMyLCBbZXZlbnRdLmNvbmNhdChhcmdzKSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1vZHVsZXMuZXh0ZXJuYWwuZm9yRWFjaChmdW5jdGlvbiAobSkge1xuICAgICAgICAgIGlmIChtLmluaXQpIG0uaW5pdChfdGhpczIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5mb3JtYXQgPSB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5mb3JtYXQ7XG4gICAgICBpZiAoIWNhbGxiYWNrKSBjYWxsYmFjayA9IG5vb3A7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcgJiYgIXRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3RvciAmJiAhdGhpcy5vcHRpb25zLmxuZykge1xuICAgICAgICB2YXIgY29kZXMgPSB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlVXRpbHMuZ2V0RmFsbGJhY2tDb2Rlcyh0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcpO1xuICAgICAgICBpZiAoY29kZXMubGVuZ3RoID4gMCAmJiBjb2Rlc1swXSAhPT0gJ2RldicpIHRoaXMub3B0aW9ucy5sbmcgPSBjb2Rlc1swXTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IgJiYgIXRoaXMub3B0aW9ucy5sbmcpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIud2FybignaW5pdDogbm8gbGFuZ3VhZ2VEZXRlY3RvciBpcyB1c2VkIGFuZCBubyBsbmcgaXMgZGVmaW5lZCcpO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3RvcmVBcGkgPSBbJ2dldFJlc291cmNlJywgJ2hhc1Jlc291cmNlQnVuZGxlJywgJ2dldFJlc291cmNlQnVuZGxlJywgJ2dldERhdGFCeUxhbmd1YWdlJ107XG4gICAgICBzdG9yZUFwaS5mb3JFYWNoKGZ1bmN0aW9uIChmY05hbWUpIHtcbiAgICAgICAgX3RoaXMyW2ZjTmFtZV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIF90aGlzMiRzdG9yZTtcblxuICAgICAgICAgIHJldHVybiAoX3RoaXMyJHN0b3JlID0gX3RoaXMyLnN0b3JlKVtmY05hbWVdLmFwcGx5KF90aGlzMiRzdG9yZSwgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHN0b3JlQXBpQ2hhaW5lZCA9IFsnYWRkUmVzb3VyY2UnLCAnYWRkUmVzb3VyY2VzJywgJ2FkZFJlc291cmNlQnVuZGxlJywgJ3JlbW92ZVJlc291cmNlQnVuZGxlJ107XG4gICAgICBzdG9yZUFwaUNoYWluZWQuZm9yRWFjaChmdW5jdGlvbiAoZmNOYW1lKSB7XG4gICAgICAgIF90aGlzMltmY05hbWVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBfdGhpczIkc3RvcmUyO1xuXG4gICAgICAgICAgKF90aGlzMiRzdG9yZTIgPSBfdGhpczIuc3RvcmUpW2ZjTmFtZV0uYXBwbHkoX3RoaXMyJHN0b3JlMiwgYXJndW1lbnRzKTtcblxuICAgICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG5cbiAgICAgIHZhciBsb2FkID0gZnVuY3Rpb24gbG9hZCgpIHtcbiAgICAgICAgdmFyIGZpbmlzaCA9IGZ1bmN0aW9uIGZpbmlzaChlcnIsIHQpIHtcbiAgICAgICAgICBpZiAoX3RoaXMyLmlzSW5pdGlhbGl6ZWQgJiYgIV90aGlzMi5pbml0aWFsaXplZFN0b3JlT25jZSkgX3RoaXMyLmxvZ2dlci53YXJuKCdpbml0OiBpMThuZXh0IGlzIGFscmVhZHkgaW5pdGlhbGl6ZWQuIFlvdSBzaG91bGQgY2FsbCBpbml0IGp1c3Qgb25jZSEnKTtcbiAgICAgICAgICBfdGhpczIuaXNJbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgICAgaWYgKCFfdGhpczIub3B0aW9ucy5pc0Nsb25lKSBfdGhpczIubG9nZ2VyLmxvZygnaW5pdGlhbGl6ZWQnLCBfdGhpczIub3B0aW9ucyk7XG5cbiAgICAgICAgICBfdGhpczIuZW1pdCgnaW5pdGlhbGl6ZWQnLCBfdGhpczIub3B0aW9ucyk7XG5cbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHQpO1xuICAgICAgICAgIGNhbGxiYWNrKGVyciwgdCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKF90aGlzMi5sYW5ndWFnZXMgJiYgX3RoaXMyLm9wdGlvbnMuY29tcGF0aWJpbGl0eUFQSSAhPT0gJ3YxJyAmJiAhX3RoaXMyLmlzSW5pdGlhbGl6ZWQpIHJldHVybiBmaW5pc2gobnVsbCwgX3RoaXMyLnQuYmluZChfdGhpczIpKTtcblxuICAgICAgICBfdGhpczIuY2hhbmdlTGFuZ3VhZ2UoX3RoaXMyLm9wdGlvbnMubG5nLCBmaW5pc2gpO1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZXNvdXJjZXMgfHwgIXRoaXMub3B0aW9ucy5pbml0SW1tZWRpYXRlKSB7XG4gICAgICAgIGxvYWQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRpbWVvdXQobG9hZCwgMCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9hZFJlc291cmNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkUmVzb3VyY2VzKGxhbmd1YWdlKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBub29wO1xuICAgICAgdmFyIHVzZWRDYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgdmFyIHVzZWRMbmcgPSB0eXBlb2YgbGFuZ3VhZ2UgPT09ICdzdHJpbmcnID8gbGFuZ3VhZ2UgOiB0aGlzLmxhbmd1YWdlO1xuICAgICAgaWYgKHR5cGVvZiBsYW5ndWFnZSA9PT0gJ2Z1bmN0aW9uJykgdXNlZENhbGxiYWNrID0gbGFuZ3VhZ2U7XG5cbiAgICAgIGlmICghdGhpcy5vcHRpb25zLnJlc291cmNlcyB8fCB0aGlzLm9wdGlvbnMucGFydGlhbEJ1bmRsZWRMYW5ndWFnZXMpIHtcbiAgICAgICAgaWYgKHVzZWRMbmcgJiYgdXNlZExuZy50b0xvd2VyQ2FzZSgpID09PSAnY2ltb2RlJykgcmV0dXJuIHVzZWRDYWxsYmFjaygpO1xuICAgICAgICB2YXIgdG9Mb2FkID0gW107XG5cbiAgICAgICAgdmFyIGFwcGVuZCA9IGZ1bmN0aW9uIGFwcGVuZChsbmcpIHtcbiAgICAgICAgICBpZiAoIWxuZykgcmV0dXJuO1xuXG4gICAgICAgICAgdmFyIGxuZ3MgPSBfdGhpczMuc2VydmljZXMubGFuZ3VhZ2VVdGlscy50b1Jlc29sdmVIaWVyYXJjaHkobG5nKTtcblxuICAgICAgICAgIGxuZ3MuZm9yRWFjaChmdW5jdGlvbiAobCkge1xuICAgICAgICAgICAgaWYgKHRvTG9hZC5pbmRleE9mKGwpIDwgMCkgdG9Mb2FkLnB1c2gobCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKCF1c2VkTG5nKSB7XG4gICAgICAgICAgdmFyIGZhbGxiYWNrcyA9IHRoaXMuc2VydmljZXMubGFuZ3VhZ2VVdGlscy5nZXRGYWxsYmFja0NvZGVzKHRoaXMub3B0aW9ucy5mYWxsYmFja0xuZyk7XG4gICAgICAgICAgZmFsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBlbmQobCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXBwZW5kKHVzZWRMbmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5wcmVsb2FkKSB7XG4gICAgICAgICAgdGhpcy5vcHRpb25zLnByZWxvYWQuZm9yRWFjaChmdW5jdGlvbiAobCkge1xuICAgICAgICAgICAgcmV0dXJuIGFwcGVuZChsKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2VydmljZXMuYmFja2VuZENvbm5lY3Rvci5sb2FkKHRvTG9hZCwgdGhpcy5vcHRpb25zLm5zLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGlmICghZSAmJiAhX3RoaXMzLnJlc29sdmVkTGFuZ3VhZ2UgJiYgX3RoaXMzLmxhbmd1YWdlKSBfdGhpczMuc2V0UmVzb2x2ZWRMYW5ndWFnZShfdGhpczMubGFuZ3VhZ2UpO1xuICAgICAgICAgIHVzZWRDYWxsYmFjayhlKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1c2VkQ2FsbGJhY2sobnVsbCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbG9hZFJlc291cmNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWxvYWRSZXNvdXJjZXMobG5ncywgbnMsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgaWYgKCFsbmdzKSBsbmdzID0gdGhpcy5sYW5ndWFnZXM7XG4gICAgICBpZiAoIW5zKSBucyA9IHRoaXMub3B0aW9ucy5ucztcbiAgICAgIGlmICghY2FsbGJhY2spIGNhbGxiYWNrID0gbm9vcDtcbiAgICAgIHRoaXMuc2VydmljZXMuYmFja2VuZENvbm5lY3Rvci5yZWxvYWQobG5ncywgbnMsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1c2UobW9kdWxlKSB7XG4gICAgICBpZiAoIW1vZHVsZSkgdGhyb3cgbmV3IEVycm9yKCdZb3UgYXJlIHBhc3NpbmcgYW4gdW5kZWZpbmVkIG1vZHVsZSEgUGxlYXNlIGNoZWNrIHRoZSBvYmplY3QgeW91IGFyZSBwYXNzaW5nIHRvIGkxOG5leHQudXNlKCknKTtcbiAgICAgIGlmICghbW9kdWxlLnR5cGUpIHRocm93IG5ldyBFcnJvcignWW91IGFyZSBwYXNzaW5nIGEgd3JvbmcgbW9kdWxlISBQbGVhc2UgY2hlY2sgdGhlIG9iamVjdCB5b3UgYXJlIHBhc3NpbmcgdG8gaTE4bmV4dC51c2UoKScpO1xuXG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdiYWNrZW5kJykge1xuICAgICAgICB0aGlzLm1vZHVsZXMuYmFja2VuZCA9IG1vZHVsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vZHVsZS50eXBlID09PSAnbG9nZ2VyJyB8fCBtb2R1bGUubG9nICYmIG1vZHVsZS53YXJuICYmIG1vZHVsZS5lcnJvcikge1xuICAgICAgICB0aGlzLm1vZHVsZXMubG9nZ2VyID0gbW9kdWxlO1xuICAgICAgfVxuXG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdsYW5ndWFnZURldGVjdG9yJykge1xuICAgICAgICB0aGlzLm1vZHVsZXMubGFuZ3VhZ2VEZXRlY3RvciA9IG1vZHVsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vZHVsZS50eXBlID09PSAnaTE4bkZvcm1hdCcpIHtcbiAgICAgICAgdGhpcy5tb2R1bGVzLmkxOG5Gb3JtYXQgPSBtb2R1bGU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb2R1bGUudHlwZSA9PT0gJ3Bvc3RQcm9jZXNzb3InKSB7XG4gICAgICAgIHBvc3RQcm9jZXNzb3IuYWRkUG9zdFByb2Nlc3Nvcihtb2R1bGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdmb3JtYXR0ZXInKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5mb3JtYXR0ZXIgPSBtb2R1bGU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb2R1bGUudHlwZSA9PT0gJzNyZFBhcnR5Jykge1xuICAgICAgICB0aGlzLm1vZHVsZXMuZXh0ZXJuYWwucHVzaChtb2R1bGUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0UmVzb2x2ZWRMYW5ndWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRSZXNvbHZlZExhbmd1YWdlKGwpIHtcbiAgICAgIGlmICghbCB8fCAhdGhpcy5sYW5ndWFnZXMpIHJldHVybjtcbiAgICAgIGlmIChbJ2NpbW9kZScsICdkZXYnXS5pbmRleE9mKGwpID4gLTEpIHJldHVybjtcblxuICAgICAgZm9yICh2YXIgbGkgPSAwOyBsaSA8IHRoaXMubGFuZ3VhZ2VzLmxlbmd0aDsgbGkrKykge1xuICAgICAgICB2YXIgbG5nSW5MbmdzID0gdGhpcy5sYW5ndWFnZXNbbGldO1xuICAgICAgICBpZiAoWydjaW1vZGUnLCAnZGV2J10uaW5kZXhPZihsbmdJbkxuZ3MpID4gLTEpIGNvbnRpbnVlO1xuXG4gICAgICAgIGlmICh0aGlzLnN0b3JlLmhhc0xhbmd1YWdlU29tZVRyYW5zbGF0aW9ucyhsbmdJbkxuZ3MpKSB7XG4gICAgICAgICAgdGhpcy5yZXNvbHZlZExhbmd1YWdlID0gbG5nSW5MbmdzO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNoYW5nZUxhbmd1YWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNoYW5nZUxhbmd1YWdlKGxuZywgY2FsbGJhY2spIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB0aGlzLmlzTGFuZ3VhZ2VDaGFuZ2luZ1RvID0gbG5nO1xuICAgICAgdmFyIGRlZmVycmVkID0gZGVmZXIoKTtcbiAgICAgIHRoaXMuZW1pdCgnbGFuZ3VhZ2VDaGFuZ2luZycsIGxuZyk7XG5cbiAgICAgIHZhciBzZXRMbmdQcm9wcyA9IGZ1bmN0aW9uIHNldExuZ1Byb3BzKGwpIHtcbiAgICAgICAgX3RoaXM0Lmxhbmd1YWdlID0gbDtcbiAgICAgICAgX3RoaXM0Lmxhbmd1YWdlcyA9IF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShsKTtcbiAgICAgICAgX3RoaXM0LnJlc29sdmVkTGFuZ3VhZ2UgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgX3RoaXM0LnNldFJlc29sdmVkTGFuZ3VhZ2UobCk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgZG9uZSA9IGZ1bmN0aW9uIGRvbmUoZXJyLCBsKSB7XG4gICAgICAgIGlmIChsKSB7XG4gICAgICAgICAgc2V0TG5nUHJvcHMobCk7XG5cbiAgICAgICAgICBfdGhpczQudHJhbnNsYXRvci5jaGFuZ2VMYW5ndWFnZShsKTtcblxuICAgICAgICAgIF90aGlzNC5pc0xhbmd1YWdlQ2hhbmdpbmdUbyA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgIF90aGlzNC5lbWl0KCdsYW5ndWFnZUNoYW5nZWQnLCBsKTtcblxuICAgICAgICAgIF90aGlzNC5sb2dnZXIubG9nKCdsYW5ndWFnZUNoYW5nZWQnLCBsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczQuaXNMYW5ndWFnZUNoYW5naW5nVG8gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM0LnQuYXBwbHkoX3RoaXM0LCBhcmd1bWVudHMpO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjayhlcnIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM0LnQuYXBwbHkoX3RoaXM0LCBhcmd1bWVudHMpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBzZXRMbmcgPSBmdW5jdGlvbiBzZXRMbmcobG5ncykge1xuICAgICAgICBpZiAoIWxuZyAmJiAhbG5ncyAmJiBfdGhpczQuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3RvcikgbG5ncyA9IFtdO1xuICAgICAgICB2YXIgbCA9IHR5cGVvZiBsbmdzID09PSAnc3RyaW5nJyA/IGxuZ3MgOiBfdGhpczQuc2VydmljZXMubGFuZ3VhZ2VVdGlscy5nZXRCZXN0TWF0Y2hGcm9tQ29kZXMobG5ncyk7XG5cbiAgICAgICAgaWYgKGwpIHtcbiAgICAgICAgICBpZiAoIV90aGlzNC5sYW5ndWFnZSkge1xuICAgICAgICAgICAgc2V0TG5nUHJvcHMobCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKCFfdGhpczQudHJhbnNsYXRvci5sYW5ndWFnZSkgX3RoaXM0LnRyYW5zbGF0b3IuY2hhbmdlTGFuZ3VhZ2UobCk7XG4gICAgICAgICAgaWYgKF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yKSBfdGhpczQuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5jYWNoZVVzZXJMYW5ndWFnZShsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzNC5sb2FkUmVzb3VyY2VzKGwsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICBkb25lKGVyciwgbCk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgaWYgKCFsbmcgJiYgdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yICYmICF0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IuYXN5bmMpIHtcbiAgICAgICAgc2V0TG5nKHRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5kZXRlY3QoKSk7XG4gICAgICB9IGVsc2UgaWYgKCFsbmcgJiYgdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yICYmIHRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5hc3luYykge1xuICAgICAgICB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IuZGV0ZWN0KHNldExuZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRMbmcobG5nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRlZmVycmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRGaXhlZFRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Rml4ZWRUKGxuZywgbnMsIGtleVByZWZpeCkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHZhciBmaXhlZFQgPSBmdW5jdGlvbiBmaXhlZFQoa2V5LCBvcHRzKSB7XG4gICAgICAgIHZhciBvcHRpb25zO1xuXG4gICAgICAgIGlmIChfdHlwZW9mKG9wdHMpICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgcmVzdCA9IG5ldyBBcnJheShfbGVuMyA+IDIgPyBfbGVuMyAtIDIgOiAwKSwgX2tleTMgPSAyOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7XG4gICAgICAgICAgICByZXN0W19rZXkzIC0gMl0gPSBhcmd1bWVudHNbX2tleTNdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG9wdGlvbnMgPSBfdGhpczUub3B0aW9ucy5vdmVybG9hZFRyYW5zbGF0aW9uT3B0aW9uSGFuZGxlcihba2V5LCBvcHRzXS5jb25jYXQocmVzdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkJDYoe30sIG9wdHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgb3B0aW9ucy5sbmcgPSBvcHRpb25zLmxuZyB8fCBmaXhlZFQubG5nO1xuICAgICAgICBvcHRpb25zLmxuZ3MgPSBvcHRpb25zLmxuZ3MgfHwgZml4ZWRULmxuZ3M7XG4gICAgICAgIG9wdGlvbnMubnMgPSBvcHRpb25zLm5zIHx8IGZpeGVkVC5ucztcbiAgICAgICAgdmFyIGtleVNlcGFyYXRvciA9IF90aGlzNS5vcHRpb25zLmtleVNlcGFyYXRvciB8fCAnLic7XG4gICAgICAgIHZhciByZXN1bHRLZXkgPSBrZXlQcmVmaXggPyBcIlwiLmNvbmNhdChrZXlQcmVmaXgpLmNvbmNhdChrZXlTZXBhcmF0b3IpLmNvbmNhdChrZXkpIDoga2V5O1xuICAgICAgICByZXR1cm4gX3RoaXM1LnQocmVzdWx0S2V5LCBvcHRpb25zKTtcbiAgICAgIH07XG5cbiAgICAgIGlmICh0eXBlb2YgbG5nID09PSAnc3RyaW5nJykge1xuICAgICAgICBmaXhlZFQubG5nID0gbG5nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZml4ZWRULmxuZ3MgPSBsbmc7XG4gICAgICB9XG5cbiAgICAgIGZpeGVkVC5ucyA9IG5zO1xuICAgICAgZml4ZWRULmtleVByZWZpeCA9IGtleVByZWZpeDtcbiAgICAgIHJldHVybiBmaXhlZFQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdCgpIHtcbiAgICAgIHZhciBfdGhpcyR0cmFuc2xhdG9yO1xuXG4gICAgICByZXR1cm4gdGhpcy50cmFuc2xhdG9yICYmIChfdGhpcyR0cmFuc2xhdG9yID0gdGhpcy50cmFuc2xhdG9yKS50cmFuc2xhdGUuYXBwbHkoX3RoaXMkdHJhbnNsYXRvciwgYXJndW1lbnRzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXhpc3RzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGV4aXN0cygpIHtcbiAgICAgIHZhciBfdGhpcyR0cmFuc2xhdG9yMjtcblxuICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRvciAmJiAoX3RoaXMkdHJhbnNsYXRvcjIgPSB0aGlzLnRyYW5zbGF0b3IpLmV4aXN0cy5hcHBseShfdGhpcyR0cmFuc2xhdG9yMiwgYXJndW1lbnRzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0RGVmYXVsdE5hbWVzcGFjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREZWZhdWx0TmFtZXNwYWNlKG5zKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuZGVmYXVsdE5TID0gbnM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhc0xvYWRlZE5hbWVzcGFjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNMb2FkZWROYW1lc3BhY2UobnMpIHtcbiAgICAgIHZhciBfdGhpczYgPSB0aGlzO1xuXG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICAgIGlmICghdGhpcy5pc0luaXRpYWxpemVkKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLndhcm4oJ2hhc0xvYWRlZE5hbWVzcGFjZTogaTE4bmV4dCB3YXMgbm90IGluaXRpYWxpemVkJywgdGhpcy5sYW5ndWFnZXMpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5sYW5ndWFnZXMgfHwgIXRoaXMubGFuZ3VhZ2VzLmxlbmd0aCkge1xuICAgICAgICB0aGlzLmxvZ2dlci53YXJuKCdoYXNMb2FkZWROYW1lc3BhY2U6IGkxOG4ubGFuZ3VhZ2VzIHdlcmUgdW5kZWZpbmVkIG9yIGVtcHR5JywgdGhpcy5sYW5ndWFnZXMpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHZhciBsbmcgPSB0aGlzLnJlc29sdmVkTGFuZ3VhZ2UgfHwgdGhpcy5sYW5ndWFnZXNbMF07XG4gICAgICB2YXIgZmFsbGJhY2tMbmcgPSB0aGlzLm9wdGlvbnMgPyB0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcgOiBmYWxzZTtcbiAgICAgIHZhciBsYXN0TG5nID0gdGhpcy5sYW5ndWFnZXNbdGhpcy5sYW5ndWFnZXMubGVuZ3RoIC0gMV07XG4gICAgICBpZiAobG5nLnRvTG93ZXJDYXNlKCkgPT09ICdjaW1vZGUnKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgdmFyIGxvYWROb3RQZW5kaW5nID0gZnVuY3Rpb24gbG9hZE5vdFBlbmRpbmcobCwgbikge1xuICAgICAgICB2YXIgbG9hZFN0YXRlID0gX3RoaXM2LnNlcnZpY2VzLmJhY2tlbmRDb25uZWN0b3Iuc3RhdGVbXCJcIi5jb25jYXQobCwgXCJ8XCIpLmNvbmNhdChuKV07XG5cbiAgICAgICAgcmV0dXJuIGxvYWRTdGF0ZSA9PT0gLTEgfHwgbG9hZFN0YXRlID09PSAyO1xuICAgICAgfTtcblxuICAgICAgaWYgKG9wdGlvbnMucHJlY2hlY2spIHtcbiAgICAgICAgdmFyIHByZVJlc3VsdCA9IG9wdGlvbnMucHJlY2hlY2sodGhpcywgbG9hZE5vdFBlbmRpbmcpO1xuICAgICAgICBpZiAocHJlUmVzdWx0ICE9PSB1bmRlZmluZWQpIHJldHVybiBwcmVSZXN1bHQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmhhc1Jlc291cmNlQnVuZGxlKGxuZywgbnMpKSByZXR1cm4gdHJ1ZTtcbiAgICAgIGlmICghdGhpcy5zZXJ2aWNlcy5iYWNrZW5kQ29ubmVjdG9yLmJhY2tlbmQgfHwgdGhpcy5vcHRpb25zLnJlc291cmNlcyAmJiAhdGhpcy5vcHRpb25zLnBhcnRpYWxCdW5kbGVkTGFuZ3VhZ2VzKSByZXR1cm4gdHJ1ZTtcbiAgICAgIGlmIChsb2FkTm90UGVuZGluZyhsbmcsIG5zKSAmJiAoIWZhbGxiYWNrTG5nIHx8IGxvYWROb3RQZW5kaW5nKGxhc3RMbmcsIG5zKSkpIHJldHVybiB0cnVlO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkTmFtZXNwYWNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkTmFtZXNwYWNlcyhucywgY2FsbGJhY2spIHtcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuXG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5ucykge1xuICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbnMgPT09ICdzdHJpbmcnKSBucyA9IFtuc107XG4gICAgICBucy5mb3JFYWNoKGZ1bmN0aW9uIChuKSB7XG4gICAgICAgIGlmIChfdGhpczcub3B0aW9ucy5ucy5pbmRleE9mKG4pIDwgMCkgX3RoaXM3Lm9wdGlvbnMubnMucHVzaChuKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5sb2FkUmVzb3VyY2VzKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKGVycik7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9hZExhbmd1YWdlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkTGFuZ3VhZ2VzKGxuZ3MsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgaWYgKHR5cGVvZiBsbmdzID09PSAnc3RyaW5nJykgbG5ncyA9IFtsbmdzXTtcbiAgICAgIHZhciBwcmVsb2FkZWQgPSB0aGlzLm9wdGlvbnMucHJlbG9hZCB8fCBbXTtcbiAgICAgIHZhciBuZXdMbmdzID0gbG5ncy5maWx0ZXIoZnVuY3Rpb24gKGxuZykge1xuICAgICAgICByZXR1cm4gcHJlbG9hZGVkLmluZGV4T2YobG5nKSA8IDA7XG4gICAgICB9KTtcblxuICAgICAgaWYgKCFuZXdMbmdzLmxlbmd0aCkge1xuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5vcHRpb25zLnByZWxvYWQgPSBwcmVsb2FkZWQuY29uY2F0KG5ld0xuZ3MpO1xuICAgICAgdGhpcy5sb2FkUmVzb3VyY2VzKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKGVycik7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGlyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpcihsbmcpIHtcbiAgICAgIGlmICghbG5nKSBsbmcgPSB0aGlzLnJlc29sdmVkTGFuZ3VhZ2UgfHwgKHRoaXMubGFuZ3VhZ2VzICYmIHRoaXMubGFuZ3VhZ2VzLmxlbmd0aCA+IDAgPyB0aGlzLmxhbmd1YWdlc1swXSA6IHRoaXMubGFuZ3VhZ2UpO1xuICAgICAgaWYgKCFsbmcpIHJldHVybiAncnRsJztcbiAgICAgIHZhciBydGxMbmdzID0gWydhcicsICdzaHUnLCAnc3FyJywgJ3NzaCcsICd4YWEnLCAneWhkJywgJ3l1ZCcsICdhYW8nLCAnYWJoJywgJ2FidicsICdhY20nLCAnYWNxJywgJ2FjdycsICdhY3gnLCAnYWN5JywgJ2FkZicsICdhZHMnLCAnYWViJywgJ2FlYycsICdhZmInLCAnYWpwJywgJ2FwYycsICdhcGQnLCAnYXJiJywgJ2FycScsICdhcnMnLCAnYXJ5JywgJ2FyeicsICdhdXonLCAnYXZsJywgJ2F5aCcsICdheWwnLCAnYXluJywgJ2F5cCcsICdiYnonLCAncGdhJywgJ2hlJywgJ2l3JywgJ3BzJywgJ3BidCcsICdwYnUnLCAncHN0JywgJ3BycCcsICdwcmQnLCAndWcnLCAndXInLCAneWRkJywgJ3lkcycsICd5aWgnLCAnamknLCAneWknLCAnaGJvJywgJ21lbicsICd4bW4nLCAnZmEnLCAnanByJywgJ3BlbycsICdwZXMnLCAncHJzJywgJ2R2JywgJ3NhbScsICdja2InXTtcbiAgICAgIHJldHVybiBydGxMbmdzLmluZGV4T2YodGhpcy5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGxuZykpID4gLTEgfHwgbG5nLnRvTG93ZXJDYXNlKCkuaW5kZXhPZignLWFyYWInKSA+IDEgPyAncnRsJyA6ICdsdHInO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9uZUluc3RhbmNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lSW5zdGFuY2UoKSB7XG4gICAgICB2YXIgX3RoaXM4ID0gdGhpcztcblxuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgICAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBub29wO1xuXG4gICAgICB2YXIgbWVyZ2VkT3B0aW9ucyA9IF9vYmplY3RTcHJlYWQkNihfb2JqZWN0U3ByZWFkJDYoX29iamVjdFNwcmVhZCQ2KHt9LCB0aGlzLm9wdGlvbnMpLCBvcHRpb25zKSwge1xuICAgICAgICBpc0Nsb25lOiB0cnVlXG4gICAgICB9KTtcblxuICAgICAgdmFyIGNsb25lID0gbmV3IEkxOG4obWVyZ2VkT3B0aW9ucyk7XG4gICAgICB2YXIgbWVtYmVyc1RvQ29weSA9IFsnc3RvcmUnLCAnc2VydmljZXMnLCAnbGFuZ3VhZ2UnXTtcbiAgICAgIG1lbWJlcnNUb0NvcHkuZm9yRWFjaChmdW5jdGlvbiAobSkge1xuICAgICAgICBjbG9uZVttXSA9IF90aGlzOFttXTtcbiAgICAgIH0pO1xuICAgICAgY2xvbmUuc2VydmljZXMgPSBfb2JqZWN0U3ByZWFkJDYoe30sIHRoaXMuc2VydmljZXMpO1xuICAgICAgY2xvbmUuc2VydmljZXMudXRpbHMgPSB7XG4gICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogY2xvbmUuaGFzTG9hZGVkTmFtZXNwYWNlLmJpbmQoY2xvbmUpXG4gICAgICB9O1xuICAgICAgY2xvbmUudHJhbnNsYXRvciA9IG5ldyBUcmFuc2xhdG9yKGNsb25lLnNlcnZpY2VzLCBjbG9uZS5vcHRpb25zKTtcbiAgICAgIGNsb25lLnRyYW5zbGF0b3Iub24oJyonLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgZm9yICh2YXIgX2xlbjQgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW40ID4gMSA/IF9sZW40IC0gMSA6IDApLCBfa2V5NCA9IDE7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICAgICAgICBhcmdzW19rZXk0IC0gMV0gPSBhcmd1bWVudHNbX2tleTRdO1xuICAgICAgICB9XG5cbiAgICAgICAgY2xvbmUuZW1pdC5hcHBseShjbG9uZSwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgfSk7XG4gICAgICBjbG9uZS5pbml0KG1lcmdlZE9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICAgIGNsb25lLnRyYW5zbGF0b3Iub3B0aW9ucyA9IGNsb25lLm9wdGlvbnM7XG4gICAgICBjbG9uZS50cmFuc2xhdG9yLmJhY2tlbmRDb25uZWN0b3Iuc2VydmljZXMudXRpbHMgPSB7XG4gICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogY2xvbmUuaGFzTG9hZGVkTmFtZXNwYWNlLmJpbmQoY2xvbmUpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b0pTT05cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgb3B0aW9uczogdGhpcy5vcHRpb25zLFxuICAgICAgICBzdG9yZTogdGhpcy5zdG9yZSxcbiAgICAgICAgbGFuZ3VhZ2U6IHRoaXMubGFuZ3VhZ2UsXG4gICAgICAgIGxhbmd1YWdlczogdGhpcy5sYW5ndWFnZXMsXG4gICAgICAgIHJlc29sdmVkTGFuZ3VhZ2U6IHRoaXMucmVzb2x2ZWRMYW5ndWFnZVxuICAgICAgfTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSTE4bjtcbn0oRXZlbnRFbWl0dGVyKTtcblxuX2RlZmluZVByb3BlcnR5KEkxOG4sIFwiY3JlYXRlSW5zdGFuY2VcIiwgZnVuY3Rpb24gKCkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICByZXR1cm4gbmV3IEkxOG4ob3B0aW9ucywgY2FsbGJhY2spO1xufSk7XG5cbnZhciBpbnN0YW5jZSA9IEkxOG4uY3JlYXRlSW5zdGFuY2UoKTtcbmluc3RhbmNlLmNyZWF0ZUluc3RhbmNlID0gSTE4bi5jcmVhdGVJbnN0YW5jZTtcblxudmFyIGNyZWF0ZUluc3RhbmNlID0gaW5zdGFuY2UuY3JlYXRlSW5zdGFuY2U7XG52YXIgaW5pdCA9IGluc3RhbmNlLmluaXQ7XG52YXIgbG9hZFJlc291cmNlcyA9IGluc3RhbmNlLmxvYWRSZXNvdXJjZXM7XG52YXIgcmVsb2FkUmVzb3VyY2VzID0gaW5zdGFuY2UucmVsb2FkUmVzb3VyY2VzO1xudmFyIHVzZSA9IGluc3RhbmNlLnVzZTtcbnZhciBjaGFuZ2VMYW5ndWFnZSA9IGluc3RhbmNlLmNoYW5nZUxhbmd1YWdlO1xudmFyIGdldEZpeGVkVCA9IGluc3RhbmNlLmdldEZpeGVkVDtcbnZhciB0ID0gaW5zdGFuY2UudDtcbnZhciBleGlzdHMgPSBpbnN0YW5jZS5leGlzdHM7XG52YXIgc2V0RGVmYXVsdE5hbWVzcGFjZSA9IGluc3RhbmNlLnNldERlZmF1bHROYW1lc3BhY2U7XG52YXIgaGFzTG9hZGVkTmFtZXNwYWNlID0gaW5zdGFuY2UuaGFzTG9hZGVkTmFtZXNwYWNlO1xudmFyIGxvYWROYW1lc3BhY2VzID0gaW5zdGFuY2UubG9hZE5hbWVzcGFjZXM7XG52YXIgbG9hZExhbmd1YWdlcyA9IGluc3RhbmNlLmxvYWRMYW5ndWFnZXM7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xuZXhwb3J0IHsgY2hhbmdlTGFuZ3VhZ2UsIGNyZWF0ZUluc3RhbmNlLCBleGlzdHMsIGdldEZpeGVkVCwgaGFzTG9hZGVkTmFtZXNwYWNlLCBpbml0LCBsb2FkTGFuZ3VhZ2VzLCBsb2FkTmFtZXNwYWNlcywgbG9hZFJlc291cmNlcywgcmVsb2FkUmVzb3VyY2VzLCBzZXREZWZhdWx0TmFtZXNwYWNlLCB0LCB1c2UgfTtcbiIsImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi9hcnJheVdpdGhIb2xlcy5qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiLi9ub25JdGVyYWJsZVJlc3QuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b0FycmF5KGFycikge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgaXRlcltTeW1ib2wuaXRlcmF0b3JdICE9IG51bGwgfHwgaXRlcltcIkBAaXRlcmF0b3JcIl0gIT0gbnVsbCkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2snO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyc7XG5cbnZhciBhcnIgPSBbXTtcbnZhciBlYWNoID0gYXJyLmZvckVhY2g7XG52YXIgc2xpY2UgPSBhcnIuc2xpY2U7XG5mdW5jdGlvbiBkZWZhdWx0cyhvYmopIHtcbiAgZWFjaC5jYWxsKHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSwgZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgIGlmIChzb3VyY2UpIHtcbiAgICAgIGZvciAodmFyIHByb3AgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChvYmpbcHJvcF0gPT09IHVuZGVmaW5lZCkgb2JqW3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvYmo7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4XG52YXIgZmllbGRDb250ZW50UmVnRXhwID0gL15bXFx1MDAwOVxcdTAwMjAtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl0rJC87XG5cbnZhciBzZXJpYWxpemVDb29raWUgPSBmdW5jdGlvbiBzZXJpYWxpemVDb29raWUobmFtZSwgdmFsLCBvcHRpb25zKSB7XG4gIHZhciBvcHQgPSBvcHRpb25zIHx8IHt9O1xuICBvcHQucGF0aCA9IG9wdC5wYXRoIHx8ICcvJztcbiAgdmFyIHZhbHVlID0gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCk7XG4gIHZhciBzdHIgPSBuYW1lICsgJz0nICsgdmFsdWU7XG5cbiAgaWYgKG9wdC5tYXhBZ2UgPiAwKSB7XG4gICAgdmFyIG1heEFnZSA9IG9wdC5tYXhBZ2UgLSAwO1xuICAgIGlmIChpc05hTihtYXhBZ2UpKSB0aHJvdyBuZXcgRXJyb3IoJ21heEFnZSBzaG91bGQgYmUgYSBOdW1iZXInKTtcbiAgICBzdHIgKz0gJzsgTWF4LUFnZT0nICsgTWF0aC5mbG9vcihtYXhBZ2UpO1xuICB9XG5cbiAgaWYgKG9wdC5kb21haW4pIHtcbiAgICBpZiAoIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KG9wdC5kb21haW4pKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZG9tYWluIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICBzdHIgKz0gJzsgRG9tYWluPScgKyBvcHQuZG9tYWluO1xuICB9XG5cbiAgaWYgKG9wdC5wYXRoKSB7XG4gICAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChvcHQucGF0aCkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBwYXRoIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICBzdHIgKz0gJzsgUGF0aD0nICsgb3B0LnBhdGg7XG4gIH1cblxuICBpZiAob3B0LmV4cGlyZXMpIHtcbiAgICBpZiAodHlwZW9mIG9wdC5leHBpcmVzLnRvVVRDU3RyaW5nICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZXhwaXJlcyBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IEV4cGlyZXM9JyArIG9wdC5leHBpcmVzLnRvVVRDU3RyaW5nKCk7XG4gIH1cblxuICBpZiAob3B0Lmh0dHBPbmx5KSBzdHIgKz0gJzsgSHR0cE9ubHknO1xuICBpZiAob3B0LnNlY3VyZSkgc3RyICs9ICc7IFNlY3VyZSc7XG5cbiAgaWYgKG9wdC5zYW1lU2l0ZSkge1xuICAgIHZhciBzYW1lU2l0ZSA9IHR5cGVvZiBvcHQuc2FtZVNpdGUgPT09ICdzdHJpbmcnID8gb3B0LnNhbWVTaXRlLnRvTG93ZXJDYXNlKCkgOiBvcHQuc2FtZVNpdGU7XG5cbiAgICBzd2l0Y2ggKHNhbWVTaXRlKSB7XG4gICAgICBjYXNlIHRydWU6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1TdHJpY3QnO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnbGF4JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPUxheCc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdzdHJpY3QnOlxuICAgICAgICBzdHIgKz0gJzsgU2FtZVNpdGU9U3RyaWN0JztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ25vbmUnOlxuICAgICAgICBzdHIgKz0gJzsgU2FtZVNpdGU9Tm9uZSc7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHI7XG59O1xuXG52YXIgY29va2llID0ge1xuICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZShuYW1lLCB2YWx1ZSwgbWludXRlcywgZG9tYWluKSB7XG4gICAgdmFyIGNvb2tpZU9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IHtcbiAgICAgIHBhdGg6ICcvJyxcbiAgICAgIHNhbWVTaXRlOiAnc3RyaWN0J1xuICAgIH07XG5cbiAgICBpZiAobWludXRlcykge1xuICAgICAgY29va2llT3B0aW9ucy5leHBpcmVzID0gbmV3IERhdGUoKTtcbiAgICAgIGNvb2tpZU9wdGlvbnMuZXhwaXJlcy5zZXRUaW1lKGNvb2tpZU9wdGlvbnMuZXhwaXJlcy5nZXRUaW1lKCkgKyBtaW51dGVzICogNjAgKiAxMDAwKTtcbiAgICB9XG5cbiAgICBpZiAoZG9tYWluKSBjb29raWVPcHRpb25zLmRvbWFpbiA9IGRvbWFpbjtcbiAgICBkb2N1bWVudC5jb29raWUgPSBzZXJpYWxpemVDb29raWUobmFtZSwgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSwgY29va2llT3B0aW9ucyk7XG4gIH0sXG4gIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgIHZhciBuYW1lRVEgPSBuYW1lICsgJz0nO1xuICAgIHZhciBjYSA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYS5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGMgPSBjYVtpXTtcblxuICAgICAgd2hpbGUgKGMuY2hhckF0KDApID09PSAnICcpIHtcbiAgICAgICAgYyA9IGMuc3Vic3RyaW5nKDEsIGMubGVuZ3RoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGMuaW5kZXhPZihuYW1lRVEpID09PSAwKSByZXR1cm4gYy5zdWJzdHJpbmcobmFtZUVRLmxlbmd0aCwgYy5sZW5ndGgpO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgdGhpcy5jcmVhdGUobmFtZSwgJycsIC0xKTtcbiAgfVxufTtcbnZhciBjb29raWUkMSA9IHtcbiAgbmFtZTogJ2Nvb2tpZScsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG5cbiAgICBpZiAob3B0aW9ucy5sb29rdXBDb29raWUgJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIGMgPSBjb29raWUucmVhZChvcHRpb25zLmxvb2t1cENvb2tpZSk7XG4gICAgICBpZiAoYykgZm91bmQgPSBjO1xuICAgIH1cblxuICAgIHJldHVybiBmb3VuZDtcbiAgfSxcbiAgY2FjaGVVc2VyTGFuZ3VhZ2U6IGZ1bmN0aW9uIGNhY2hlVXNlckxhbmd1YWdlKGxuZywgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLmxvb2t1cENvb2tpZSAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb29raWUuY3JlYXRlKG9wdGlvbnMubG9va3VwQ29va2llLCBsbmcsIG9wdGlvbnMuY29va2llTWludXRlcywgb3B0aW9ucy5jb29raWVEb21haW4sIG9wdGlvbnMuY29va2llT3B0aW9ucyk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgcXVlcnlzdHJpbmcgPSB7XG4gIG5hbWU6ICdxdWVyeXN0cmluZycsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzZWFyY2ggPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoO1xuXG4gICAgICBpZiAoIXdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggJiYgd2luZG93LmxvY2F0aW9uLmhhc2guaW5kZXhPZignPycpID4gLTEpIHtcbiAgICAgICAgc2VhcmNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKHdpbmRvdy5sb2NhdGlvbi5oYXNoLmluZGV4T2YoJz8nKSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBxdWVyeSA9IHNlYXJjaC5zdWJzdHJpbmcoMSk7XG4gICAgICB2YXIgcGFyYW1zID0gcXVlcnkuc3BsaXQoJyYnKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHBvcyA9IHBhcmFtc1tpXS5pbmRleE9mKCc9Jyk7XG5cbiAgICAgICAgaWYgKHBvcyA+IDApIHtcbiAgICAgICAgICB2YXIga2V5ID0gcGFyYW1zW2ldLnN1YnN0cmluZygwLCBwb3MpO1xuXG4gICAgICAgICAgaWYgKGtleSA9PT0gb3B0aW9ucy5sb29rdXBRdWVyeXN0cmluZykge1xuICAgICAgICAgICAgZm91bmQgPSBwYXJhbXNbaV0uc3Vic3RyaW5nKHBvcyArIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmb3VuZDtcbiAgfVxufTtcblxudmFyIGhhc0xvY2FsU3RvcmFnZVN1cHBvcnQgPSBudWxsO1xuXG52YXIgbG9jYWxTdG9yYWdlQXZhaWxhYmxlID0gZnVuY3Rpb24gbG9jYWxTdG9yYWdlQXZhaWxhYmxlKCkge1xuICBpZiAoaGFzTG9jYWxTdG9yYWdlU3VwcG9ydCAhPT0gbnVsbCkgcmV0dXJuIGhhc0xvY2FsU3RvcmFnZVN1cHBvcnQ7XG5cbiAgdHJ5IHtcbiAgICBoYXNMb2NhbFN0b3JhZ2VTdXBwb3J0ID0gd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubG9jYWxTdG9yYWdlICE9PSBudWxsO1xuICAgIHZhciB0ZXN0S2V5ID0gJ2kxOG5leHQudHJhbnNsYXRlLmJvbyc7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRlc3RLZXksICdmb28nKTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGVzdEtleSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBoYXNMb2NhbFN0b3JhZ2VTdXBwb3J0ID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gaGFzTG9jYWxTdG9yYWdlU3VwcG9ydDtcbn07XG5cbnZhciBsb2NhbFN0b3JhZ2UgPSB7XG4gIG5hbWU6ICdsb2NhbFN0b3JhZ2UnLFxuICBsb29rdXA6IGZ1bmN0aW9uIGxvb2t1cChvcHRpb25zKSB7XG4gICAgdmFyIGZvdW5kO1xuXG4gICAgaWYgKG9wdGlvbnMubG9va3VwTG9jYWxTdG9yYWdlICYmIGxvY2FsU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICB2YXIgbG5nID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKG9wdGlvbnMubG9va3VwTG9jYWxTdG9yYWdlKTtcbiAgICAgIGlmIChsbmcpIGZvdW5kID0gbG5nO1xuICAgIH1cblxuICAgIHJldHVybiBmb3VuZDtcbiAgfSxcbiAgY2FjaGVVc2VyTGFuZ3VhZ2U6IGZ1bmN0aW9uIGNhY2hlVXNlckxhbmd1YWdlKGxuZywgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLmxvb2t1cExvY2FsU3RvcmFnZSAmJiBsb2NhbFN0b3JhZ2VBdmFpbGFibGUoKSkge1xuICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKG9wdGlvbnMubG9va3VwTG9jYWxTdG9yYWdlLCBsbmcpO1xuICAgIH1cbiAgfVxufTtcblxudmFyIGhhc1Nlc3Npb25TdG9yYWdlU3VwcG9ydCA9IG51bGw7XG5cbnZhciBzZXNzaW9uU3RvcmFnZUF2YWlsYWJsZSA9IGZ1bmN0aW9uIHNlc3Npb25TdG9yYWdlQXZhaWxhYmxlKCkge1xuICBpZiAoaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0ICE9PSBudWxsKSByZXR1cm4gaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0O1xuXG4gIHRyeSB7XG4gICAgaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0ID0gd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UgIT09IG51bGw7XG4gICAgdmFyIHRlc3RLZXkgPSAnaTE4bmV4dC50cmFuc2xhdGUuYm9vJztcbiAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSh0ZXN0S2V5LCAnZm9vJyk7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0odGVzdEtleSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBoYXNTZXNzaW9uU3RvcmFnZVN1cHBvcnQgPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBoYXNTZXNzaW9uU3RvcmFnZVN1cHBvcnQ7XG59O1xuXG52YXIgc2Vzc2lvblN0b3JhZ2UgPSB7XG4gIG5hbWU6ICdzZXNzaW9uU3RvcmFnZScsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG5cbiAgICBpZiAob3B0aW9ucy5sb29rdXBTZXNzaW9uU3RvcmFnZSAmJiBzZXNzaW9uU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICB2YXIgbG5nID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0ob3B0aW9ucy5sb29rdXBTZXNzaW9uU3RvcmFnZSk7XG4gICAgICBpZiAobG5nKSBmb3VuZCA9IGxuZztcbiAgICB9XG5cbiAgICByZXR1cm4gZm91bmQ7XG4gIH0sXG4gIGNhY2hlVXNlckxhbmd1YWdlOiBmdW5jdGlvbiBjYWNoZVVzZXJMYW5ndWFnZShsbmcsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5sb29rdXBTZXNzaW9uU3RvcmFnZSAmJiBzZXNzaW9uU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShvcHRpb25zLmxvb2t1cFNlc3Npb25TdG9yYWdlLCBsbmcpO1xuICAgIH1cbiAgfVxufTtcblxudmFyIG5hdmlnYXRvciQxID0ge1xuICBuYW1lOiAnbmF2aWdhdG9yJyxcbiAgbG9va3VwOiBmdW5jdGlvbiBsb29rdXAob3B0aW9ucykge1xuICAgIHZhciBmb3VuZCA9IFtdO1xuXG4gICAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBpZiAobmF2aWdhdG9yLmxhbmd1YWdlcykge1xuICAgICAgICAvLyBjaHJvbWUgb25seTsgbm90IGFuIGFycmF5LCBzbyBjYW4ndCB1c2UgLnB1c2guYXBwbHkgaW5zdGVhZCBvZiBpdGVyYXRpbmdcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuYXZpZ2F0b3IubGFuZ3VhZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgZm91bmQucHVzaChuYXZpZ2F0b3IubGFuZ3VhZ2VzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobmF2aWdhdG9yLnVzZXJMYW5ndWFnZSkge1xuICAgICAgICBmb3VuZC5wdXNoKG5hdmlnYXRvci51c2VyTGFuZ3VhZ2UpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmF2aWdhdG9yLmxhbmd1YWdlKSB7XG4gICAgICAgIGZvdW5kLnB1c2gobmF2aWdhdG9yLmxhbmd1YWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZm91bmQubGVuZ3RoID4gMCA/IGZvdW5kIDogdW5kZWZpbmVkO1xuICB9XG59O1xuXG52YXIgaHRtbFRhZyA9IHtcbiAgbmFtZTogJ2h0bWxUYWcnLFxuICBsb29rdXA6IGZ1bmN0aW9uIGxvb2t1cChvcHRpb25zKSB7XG4gICAgdmFyIGZvdW5kO1xuICAgIHZhciBodG1sVGFnID0gb3B0aW9ucy5odG1sVGFnIHx8ICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50IDogbnVsbCk7XG5cbiAgICBpZiAoaHRtbFRhZyAmJiB0eXBlb2YgaHRtbFRhZy5nZXRBdHRyaWJ1dGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGZvdW5kID0gaHRtbFRhZy5nZXRBdHRyaWJ1dGUoJ2xhbmcnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZm91bmQ7XG4gIH1cbn07XG5cbnZhciBwYXRoID0ge1xuICBuYW1lOiAncGF0aCcsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBsYW5ndWFnZSA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5tYXRjaCgvXFwvKFthLXpBLVotXSopL2cpO1xuXG4gICAgICBpZiAobGFuZ3VhZ2UgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9va3VwRnJvbVBhdGhJbmRleCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGxhbmd1YWdlW29wdGlvbnMubG9va3VwRnJvbVBhdGhJbmRleF0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGZvdW5kID0gbGFuZ3VhZ2Vbb3B0aW9ucy5sb29rdXBGcm9tUGF0aEluZGV4XS5yZXBsYWNlKCcvJywgJycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZvdW5kID0gbGFuZ3VhZ2VbMF0ucmVwbGFjZSgnLycsICcnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmb3VuZDtcbiAgfVxufTtcblxudmFyIHN1YmRvbWFpbiA9IHtcbiAgbmFtZTogJ3N1YmRvbWFpbicsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBsYW5ndWFnZSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLm1hdGNoKC8oPzpodHRwW3NdKlxcOlxcL1xcLykqKC4qPylcXC4oPz1bXlxcL10qXFwuLnsyLDV9KS9naSk7XG5cbiAgICAgIGlmIChsYW5ndWFnZSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb29rdXBGcm9tU3ViZG9tYWluSW5kZXggPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgZm91bmQgPSBsYW5ndWFnZVtvcHRpb25zLmxvb2t1cEZyb21TdWJkb21haW5JbmRleF0ucmVwbGFjZSgnaHR0cDovLycsICcnKS5yZXBsYWNlKCdodHRwczovLycsICcnKS5yZXBsYWNlKCcuJywgJycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZvdW5kID0gbGFuZ3VhZ2VbMF0ucmVwbGFjZSgnaHR0cDovLycsICcnKS5yZXBsYWNlKCdodHRwczovLycsICcnKS5yZXBsYWNlKCcuJywgJycpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZvdW5kO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0cygpIHtcbiAgcmV0dXJuIHtcbiAgICBvcmRlcjogWydxdWVyeXN0cmluZycsICdjb29raWUnLCAnbG9jYWxTdG9yYWdlJywgJ3Nlc3Npb25TdG9yYWdlJywgJ25hdmlnYXRvcicsICdodG1sVGFnJ10sXG4gICAgbG9va3VwUXVlcnlzdHJpbmc6ICdsbmcnLFxuICAgIGxvb2t1cENvb2tpZTogJ2kxOG5leHQnLFxuICAgIGxvb2t1cExvY2FsU3RvcmFnZTogJ2kxOG5leHRMbmcnLFxuICAgIGxvb2t1cFNlc3Npb25TdG9yYWdlOiAnaTE4bmV4dExuZycsXG4gICAgLy8gY2FjaGUgdXNlciBsYW5ndWFnZVxuICAgIGNhY2hlczogWydsb2NhbFN0b3JhZ2UnXSxcbiAgICBleGNsdWRlQ2FjaGVGb3I6IFsnY2ltb2RlJ10gLy9jb29raWVNaW51dGVzOiAxMCxcbiAgICAvL2Nvb2tpZURvbWFpbjogJ215RG9tYWluJ1xuXG4gIH07XG59XG5cbnZhciBCcm93c2VyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQnJvd3NlcihzZXJ2aWNlcykge1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCcm93c2VyKTtcblxuICAgIHRoaXMudHlwZSA9ICdsYW5ndWFnZURldGVjdG9yJztcbiAgICB0aGlzLmRldGVjdG9ycyA9IHt9O1xuICAgIHRoaXMuaW5pdChzZXJ2aWNlcywgb3B0aW9ucyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQnJvd3NlciwgW3tcbiAgICBrZXk6IFwiaW5pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KHNlcnZpY2VzKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgICB2YXIgaTE4bk9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuICAgICAgdGhpcy5zZXJ2aWNlcyA9IHNlcnZpY2VzO1xuICAgICAgdGhpcy5vcHRpb25zID0gZGVmYXVsdHMob3B0aW9ucywgdGhpcy5vcHRpb25zIHx8IHt9LCBnZXREZWZhdWx0cygpKTsgLy8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5sb29rdXBGcm9tVXJsSW5kZXgpIHRoaXMub3B0aW9ucy5sb29rdXBGcm9tUGF0aEluZGV4ID0gdGhpcy5vcHRpb25zLmxvb2t1cEZyb21VcmxJbmRleDtcbiAgICAgIHRoaXMuaTE4bk9wdGlvbnMgPSBpMThuT3B0aW9ucztcbiAgICAgIHRoaXMuYWRkRGV0ZWN0b3IoY29va2llJDEpO1xuICAgICAgdGhpcy5hZGREZXRlY3RvcihxdWVyeXN0cmluZyk7XG4gICAgICB0aGlzLmFkZERldGVjdG9yKGxvY2FsU3RvcmFnZSk7XG4gICAgICB0aGlzLmFkZERldGVjdG9yKHNlc3Npb25TdG9yYWdlKTtcbiAgICAgIHRoaXMuYWRkRGV0ZWN0b3IobmF2aWdhdG9yJDEpO1xuICAgICAgdGhpcy5hZGREZXRlY3RvcihodG1sVGFnKTtcbiAgICAgIHRoaXMuYWRkRGV0ZWN0b3IocGF0aCk7XG4gICAgICB0aGlzLmFkZERldGVjdG9yKHN1YmRvbWFpbik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImFkZERldGVjdG9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZERldGVjdG9yKGRldGVjdG9yKSB7XG4gICAgICB0aGlzLmRldGVjdG9yc1tkZXRlY3Rvci5uYW1lXSA9IGRldGVjdG9yO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkZXRlY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGV0ZWN0KGRldGVjdGlvbk9yZGVyKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAoIWRldGVjdGlvbk9yZGVyKSBkZXRlY3Rpb25PcmRlciA9IHRoaXMub3B0aW9ucy5vcmRlcjtcbiAgICAgIHZhciBkZXRlY3RlZCA9IFtdO1xuICAgICAgZGV0ZWN0aW9uT3JkZXIuZm9yRWFjaChmdW5jdGlvbiAoZGV0ZWN0b3JOYW1lKSB7XG4gICAgICAgIGlmIChfdGhpcy5kZXRlY3RvcnNbZGV0ZWN0b3JOYW1lXSkge1xuICAgICAgICAgIHZhciBsb29rdXAgPSBfdGhpcy5kZXRlY3RvcnNbZGV0ZWN0b3JOYW1lXS5sb29rdXAoX3RoaXMub3B0aW9ucyk7XG5cbiAgICAgICAgICBpZiAobG9va3VwICYmIHR5cGVvZiBsb29rdXAgPT09ICdzdHJpbmcnKSBsb29rdXAgPSBbbG9va3VwXTtcbiAgICAgICAgICBpZiAobG9va3VwKSBkZXRlY3RlZCA9IGRldGVjdGVkLmNvbmNhdChsb29rdXApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGlmICh0aGlzLnNlcnZpY2VzLmxhbmd1YWdlVXRpbHMuZ2V0QmVzdE1hdGNoRnJvbUNvZGVzKSByZXR1cm4gZGV0ZWN0ZWQ7IC8vIG5ldyBpMThuZXh0IHYxOS41LjBcblxuICAgICAgcmV0dXJuIGRldGVjdGVkLmxlbmd0aCA+IDAgPyBkZXRlY3RlZFswXSA6IG51bGw7IC8vIGEgbGl0dGxlIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY2FjaGVVc2VyTGFuZ3VhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2FjaGVVc2VyTGFuZ3VhZ2UobG5nLCBjYWNoZXMpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAoIWNhY2hlcykgY2FjaGVzID0gdGhpcy5vcHRpb25zLmNhY2hlcztcbiAgICAgIGlmICghY2FjaGVzKSByZXR1cm47XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmV4Y2x1ZGVDYWNoZUZvciAmJiB0aGlzLm9wdGlvbnMuZXhjbHVkZUNhY2hlRm9yLmluZGV4T2YobG5nKSA+IC0xKSByZXR1cm47XG4gICAgICBjYWNoZXMuZm9yRWFjaChmdW5jdGlvbiAoY2FjaGVOYW1lKSB7XG4gICAgICAgIGlmIChfdGhpczIuZGV0ZWN0b3JzW2NhY2hlTmFtZV0pIF90aGlzMi5kZXRlY3RvcnNbY2FjaGVOYW1lXS5jYWNoZVVzZXJMYW5ndWFnZShsbmcsIF90aGlzMi5vcHRpb25zKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCcm93c2VyO1xufSgpO1xuXG5Ccm93c2VyLnR5cGUgPSAnbGFuZ3VhZ2VEZXRlY3Rvcic7XG5cbmV4cG9ydCB7IEJyb3dzZXIgYXMgZGVmYXVsdCB9O1xuIiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eVwiO1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSB7IHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsgfSBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG52YXIgZGVmYXVsdE9wdGlvbnMgPSB7XG4gIGJpbmRJMThuOiAnbGFuZ3VhZ2VDaGFuZ2VkJyxcbiAgYmluZEkxOG5TdG9yZTogJycsXG4gIHRyYW5zRW1wdHlOb2RlVmFsdWU6ICcnLFxuICB0cmFuc1N1cHBvcnRCYXNpY0h0bWxOb2RlczogdHJ1ZSxcbiAgdHJhbnNXcmFwVGV4dE5vZGVzOiAnJyxcbiAgdHJhbnNLZWVwQmFzaWNIdG1sTm9kZXNGb3I6IFsnYnInLCAnc3Ryb25nJywgJ2knLCAncCddLFxuICB1c2VTdXNwZW5zZTogdHJ1ZVxufTtcbnZhciBpMThuSW5zdGFuY2U7XG5leHBvcnQgdmFyIEkxOG5Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuZXhwb3J0IGZ1bmN0aW9uIHNldERlZmF1bHRzKCkge1xuICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIGRlZmF1bHRPcHRpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBkZWZhdWx0T3B0aW9ucyksIG9wdGlvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRzKCkge1xuICByZXR1cm4gZGVmYXVsdE9wdGlvbnM7XG59XG5leHBvcnQgdmFyIFJlcG9ydE5hbWVzcGFjZXMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFJlcG9ydE5hbWVzcGFjZXMoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlcG9ydE5hbWVzcGFjZXMpO1xuXG4gICAgdGhpcy51c2VkTmFtZXNwYWNlcyA9IHt9O1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFJlcG9ydE5hbWVzcGFjZXMsIFt7XG4gICAga2V5OiBcImFkZFVzZWROYW1lc3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFVzZWROYW1lc3BhY2VzKG5hbWVzcGFjZXMpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIG5hbWVzcGFjZXMuZm9yRWFjaChmdW5jdGlvbiAobnMpIHtcbiAgICAgICAgaWYgKCFfdGhpcy51c2VkTmFtZXNwYWNlc1tuc10pIF90aGlzLnVzZWROYW1lc3BhY2VzW25zXSA9IHRydWU7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0VXNlZE5hbWVzcGFjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VXNlZE5hbWVzcGFjZXMoKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy51c2VkTmFtZXNwYWNlcyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFJlcG9ydE5hbWVzcGFjZXM7XG59KCk7XG5leHBvcnQgZnVuY3Rpb24gc2V0STE4bihpbnN0YW5jZSkge1xuICBpMThuSW5zdGFuY2UgPSBpbnN0YW5jZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRJMThuKCkge1xuICByZXR1cm4gaTE4bkluc3RhbmNlO1xufVxuZXhwb3J0IHZhciBpbml0UmVhY3RJMThuZXh0ID0ge1xuICB0eXBlOiAnM3JkUGFydHknLFxuICBpbml0OiBmdW5jdGlvbiBpbml0KGluc3RhbmNlKSB7XG4gICAgc2V0RGVmYXVsdHMoaW5zdGFuY2Uub3B0aW9ucy5yZWFjdCk7XG4gICAgc2V0STE4bihpbnN0YW5jZSk7XG4gIH1cbn07XG5leHBvcnQgZnVuY3Rpb24gY29tcG9zZUluaXRpYWxQcm9wcyhGb3JDb21wb25lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChjdHgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgIHZhciBpMThuSW5pdGlhbFByb3BzID0gZ2V0SW5pdGlhbFByb3BzKCk7XG5cbiAgICAgIGlmIChGb3JDb21wb25lbnQuZ2V0SW5pdGlhbFByb3BzKSB7XG4gICAgICAgIEZvckNvbXBvbmVudC5nZXRJbml0aWFsUHJvcHMoY3R4KS50aGVuKGZ1bmN0aW9uIChjb21wb25lbnRzSW5pdGlhbFByb3BzKSB7XG4gICAgICAgICAgcmVzb2x2ZShfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNvbXBvbmVudHNJbml0aWFsUHJvcHMpLCBpMThuSW5pdGlhbFByb3BzKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZShpMThuSW5pdGlhbFByb3BzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbml0aWFsUHJvcHMoKSB7XG4gIHZhciBpMThuID0gZ2V0STE4bigpO1xuICB2YXIgbmFtZXNwYWNlcyA9IGkxOG4ucmVwb3J0TmFtZXNwYWNlcyA/IGkxOG4ucmVwb3J0TmFtZXNwYWNlcy5nZXRVc2VkTmFtZXNwYWNlcygpIDogW107XG4gIHZhciByZXQgPSB7fTtcbiAgdmFyIGluaXRpYWxJMThuU3RvcmUgPSB7fTtcbiAgaTE4bi5sYW5ndWFnZXMuZm9yRWFjaChmdW5jdGlvbiAobCkge1xuICAgIGluaXRpYWxJMThuU3RvcmVbbF0gPSB7fTtcbiAgICBuYW1lc3BhY2VzLmZvckVhY2goZnVuY3Rpb24gKG5zKSB7XG4gICAgICBpbml0aWFsSTE4blN0b3JlW2xdW25zXSA9IGkxOG4uZ2V0UmVzb3VyY2VCdW5kbGUobCwgbnMpIHx8IHt9O1xuICAgIH0pO1xuICB9KTtcbiAgcmV0LmluaXRpYWxJMThuU3RvcmUgPSBpbml0aWFsSTE4blN0b3JlO1xuICByZXQuaW5pdGlhbExhbmd1YWdlID0gaTE4bi5sYW5ndWFnZTtcbiAgcmV0dXJuIHJldDtcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxuKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IGkxOG4gZnJvbSAnaTE4bmV4dCdcbmltcG9ydCBMYW5ndWFnZURldGVjdG9yIGZyb20gJ2kxOG5leHQtYnJvd3Nlci1sYW5ndWFnZWRldGVjdG9yJ1xuaW1wb3J0IHsgaW5pdFJlYWN0STE4bmV4dCB9IGZyb20gJ3JlYWN0LWkxOG5leHQnXG5cbmltcG9ydCB0cmFuc2xhdGlvbkVOIGZyb20gJy4vcHVibGljL2xvY2FsZXMvZW4vdHJhbnNsYXRpb24uanNvbidcbmltcG9ydCB0cmFuc2xhdGlvblRFIGZyb20gJy4vcHVibGljL2xvY2FsZXMvdGUvdHJhbnNsYXRpb24uanNvbidcbmltcG9ydCB0cmFuc2xhdGlvbkZSIGZyb20gJy4vcHVibGljL2xvY2FsZXMvZnIvdHJhbnNsYXRpb24uanNvbidcbmltcG9ydCB0cmFuc2xhdGlvbkVTIGZyb20gJy4vcHVibGljL2xvY2FsZXMvZXMvdHJhbnNsYXRpb24uanNvbidcblxuY29uc3QgcmVzb3VyY2VzID0ge1xuICBlbjoge1xuICAgIHRyYW5zbGF0aW9uczogdHJhbnNsYXRpb25FTlxuICB9LFxuICB0ZToge1xuICAgIHRyYW5zbGF0aW9uczogdHJhbnNsYXRpb25URVxuICB9LFxuICBmcjoge1xuICAgIHRyYW5zbGF0aW9uczogdHJhbnNsYXRpb25GUlxuICB9LFxuICBlczoge1xuICAgIHRyYW5zbGF0aW9uczogdHJhbnNsYXRpb25FU1xuICB9XG59XG5cbmkxOG5cbiAgLnVzZShpbml0UmVhY3RJMThuZXh0KVxuICAudXNlKExhbmd1YWdlRGV0ZWN0b3IpXG4gIC5pbml0KHtcbiAgICByZXNvdXJjZXMsXG4gICAgbnM6IFsndHJhbnNsYXRpb25zJ10sXG4gICAgZGVmYXVsdE5TOiAndHJhbnNsYXRpb25zJyxcbiAgICBkZWJ1ZzogZmFsc2UsXG4gICAgZmFsbGJhY2tMbmc6ICdlbicsXG5cbiAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICBlc2NhcGVWYWx1ZTogZmFsc2UsXG4gICAgICBmb3JtYXRTZXBhcmF0b3I6ICcsJ1xuICAgIH1cbiAgfSkuY2F0Y2goKCkgPT4gY29uc29sZS5pbmZvKCdlcnJvciBvY2N1cmVkJykpXG5cbmV4cG9ydCBkZWZhdWx0IGkxOG5cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQ29weXJpZ2h0IChjKSBJbnRlbCBDb3Jwb3JhdGlvbiAyMDE5XG4qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IHsgS1ZNIH0gZnJvbSAnLi9VSSdcbmltcG9ydCBpMThuIGZyb20gJy4uLy4uL2kxOG4nXG4vLyBHZXQgYnJvd3NlciBsYW5ndWFnZVxuaTE4bi5jaGFuZ2VMYW5ndWFnZShuYXZpZ2F0b3IubGFuZ3VhZ2UpLmNhdGNoKCgpID0+IGNvbnNvbGUuaW5mbygnZXJyb3Igb2NjdXJlZCcpKVxuXG5jb25zdCB1cmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKVxuY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh1cmwuc2VhcmNoKVxuXG5yZW5kZXIoPEtWTSBhdXRvQ29ubmVjdD17ZmFsc2V9IGRldmljZUlkPXtwYXJhbXMuZ2V0KCdkZXZpY2VJZCcpfSBtcHNTZXJ2ZXI9e3BhcmFtcy5nZXQoJ21wc1NlcnZlcicpICsgJy9yZWxheSd9IGF1dGhUb2tlbj1cImF1dGhvcml6YXRpb25cIiBtb3VzZURlYm91bmNlVGltZT17MjAwfSBjYW52YXNIZWlnaHQ9eycxMDAlJ30gY2FudmFzV2lkdGg9eycxMDAlJ30gLz4sIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNrdm0nKSlcbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwiZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJ0IiwidXRmOCIsInN0cmluZ1RvQnl0ZXMiLCJiaW4iLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImJ5dGVzVG9TdHJpbmciLCJkZWNvZGVVUklDb21wb25lbnQiLCJlc2NhcGUiLCJhIiwibGVuZ3RoIiwicHVzaCIsImNoYXJDb2RlQXQiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJqb2luIiwicm90bCIsInJvdHIiLCJlbmRpYW4iLCJjb25zdHJ1Y3RvciIsIk51bWJlciIsInJhbmRvbUJ5dGVzIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYnl0ZXNUb1dvcmRzIiwicyIsIndvcmRzVG9CeXRlcyIsImJ5dGVzVG9IZXgiLCJ0b1N0cmluZyIsImhleFRvQnl0ZXMiLCJwYXJzZUludCIsInN1YnN0ciIsImJ5dGVzVG9CYXNlNjQiLCJvIiwiaSIsImNoYXJBdCIsImJhc2U2NFRvQnl0ZXMiLCJyZXBsYWNlIiwiaW5kZXhPZiIsInBvdyIsImlzQnVmZmVyIiwicmVhZEZsb2F0TEUiLCJzbGljZSIsIl9pc0J1ZmZlciIsInIiLCJuIiwiZW5jb2RpbmciLCJBcnJheSIsInByb3RvdHlwZSIsImNhbGwiLCJpc0FycmF5IiwiVWludDhBcnJheSIsImwiLCJoIiwiYyIsInAiLCJkIiwidiIsImIiLCJfZmYiLCJ1IiwiX2dnIiwiZiIsIl9oaCIsImciLCJfaWkiLCJTIiwibSIsIl8iLCJDIiwiX2Jsb2Nrc2l6ZSIsIl9kaWdlc3RzaXplIiwiRXJyb3IiLCJhc0J5dGVzIiwiYXNTdHJpbmciLCJIIiwic3VwZXIiLCJ0aGlzIiwicHJvdG9jb2wiLCJpbmZsYXRlIiwiaW5mbGF0ZUluaXQiLCJicHAiLCJzdGF0ZSIsImZvY3VzTW9kZSIsInVzZVpSTEUiLCJmcmFtZVJhdGVEZWxheSIsImNhbnZhc0N0eCIsInNwYXJlY2FjaGUiLCJidXR0b25tYXNrIiwiY2FudmFzQ29udHJvbCIsImNhbnZhcyIsImxhc3RNb3VzZU1vdmVUaW1lIiwiRGF0ZSIsImdldFRpbWUiLCJsb2dnZXIiLCJzZXREZXNrRm9jdXMiLCJnZXREZXNrRm9jdXMiLCJwcm9jZXNzRGF0YSIsIm9uUHJvY2Vzc0RhdGEiLCJvblN0YXRlQ2hhbmdlIiwidmVyYm9zZSIsImZpbGxTdHlsZSIsImZpbGxSZWN0Iiwid2lkdGgiLCJzdGFydCIsImluZmxhdGVSZXNldCIsIm9uS3ZtRGF0YVBlbmRpbmciLCJvbkt2bURhdGFBY2siLCJrdm1EYXRhU3VwcG9ydGVkIiwib25TZW5kS3ZtRGF0YSIsInVybHZhcnMiLCJrdm1kYXRhdHJhY2UiLCJjb25zb2xlIiwibG9nIiwib25TZW5kIiwiSW50VG9TdHIiLCJOIiwiSyIsIlNPTCIsIktWTSIsIklERVIiLCJmaWxlUmVhZGVyIiwicmFuZG9tTm9uY2VDaGFycyIsImhvc3QiLCJwb3J0IiwidXNlciIsInBhc3MiLCJ0bHMiLCJ0bHN2MW9ubHkiLCJSZWRpcmVjdFN0YXJ0U29sIiwiUmVkaXJlY3RTdGFydEt2bSIsIlJlZGlyZWN0U3RhcnRJZGVyIiwic2VydmVyIiwiYW10QWNjdW11bGF0b3IiLCJhdXRoVXJpIiwiYXV0aFRva2VuIiwiZ2V0V3NMb2NhdGlvbiIsImlzQnJvd3NlciIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsImRlYnVnIiwiY29ubmVjdFN0YXRlIiwic29ja2V0Iiwib25vcGVuIiwib25Tb2NrZXRDb25uZWN0ZWQiLCJiaW5kIiwib25tZXNzYWdlIiwib25NZXNzYWdlIiwib25jbG9zZSIsIm9uU29ja2V0Q2xvc2VkIiwicmVhZEFzQmluYXJ5U3RyaW5nIiwib25sb2FkIiwib25Tb2NrZXREYXRhIiwidGFyZ2V0IiwicmVzdWx0IiwiZmlsZVJlYWRlckFjYyIsImZpbGVSZWFkZXJJblVzZSIsIkJsb2IiLCJzaGlmdCIsInJlYWRBc0FycmF5QnVmZmVyIiwib25sb2FkZW5kIiwicmVkaXJ0cmFjZSIsImluZm8iLCJzb2NrZXRTZW5kIiwiaW5EYXRhQ291bnQiLCJkYXRhIiwiYnl0ZUxlbmd0aCIsImVycm9yIiwic3RvcCIsIm9uRXJyb3IiLCJSZWFkSW50WCIsImluY2x1ZGVzIiwiSW50VG9TdHJYIiwid2FybiIsImFtdFNlcXVlbmNlIiwiU2hvcnRUb1N0clgiLCJnZW5lcmF0ZVJhbmRvbU5vbmNlIiwiaGV4X21kNSIsImFtdEtlZXBBbGl2ZVRpbWVyIiwic2V0SW50ZXJ2YWwiLCJzZW5kQW10S2VlcEFsaXZlIiwib25TdGFydCIsInJzdHIyaGV4IiwicmVhZHlTdGF0ZSIsInNlbmQiLCJidWZmZXIiLCJvbk5ld1N0YXRlIiwib25TdGF0ZUNoYW5nZWQiLCJjbG9zZSIsImNsZWFySW50ZXJ2YWwiLCJ0ZXJtaW5hbEVtdWxhdGlvbiIsImZ4RW11bGF0aW9uIiwiZnhMaW5lQnJlYWsiLCJBc2NpaVRvVW5pY29kZSIsIkFzY2lpVG9Vbmljb2RlSW50ZWwiLCJTdGF0ZUNoYW5nZSIsIlRlcm1TZW5kS2V5cyIsImsiLCJtaW5MZXZlbCIsIlZFUkJPU0UiLCJJTkZPIiwiREVCVUciLCJXQVJOSU5HIiwiRVJST1IiLCJSZWFkU2hvcnQiLCJSZWFkU2hvcnRYIiwiUmVhZEludCIsIlJlYWRTSW50IiwiU2hvcnRUb1N0ciIsIlNwbGl0QXJyYXkiLCJzcGxpdCIsIkNsb25lIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiRXNjYXBlSHRtbCIsIkFycmF5RWxlbWVudE1vdmUiLCJzcGxpY2UiLCJPYmplY3RUb1N0cmluZ0V4IiwiZ2FwIiwiT2JqZWN0IiwiT2JqZWN0VG9TdHJpbmdFeDIiLCJnYXAyIiwiT2JqZWN0VG9TdHJpbmciLCJPYmplY3RUb1N0cmluZzIiLCJjaGFyMmhleCIsInRvVXBwZXJDYXNlIiwiZW5jb2RlX3V0ZjgiLCJkZWNvZGVfdXRmOCIsImRhdGEyYmxvYiIsInRyYWRlbWFya3MiLCIkIiwiYWNjIiwic3RhdGVQcm9jZXNzb3JGYWMiLCJ1cGRhdGVSRkJTdGF0ZSIsInBhcmVudCIsImdldFByb2Nlc3NvciIsInByb2Nlc3NTdGF0ZSIsIlgiLCJEZWNvZGUiLCJqIiwic2V0UGl4ZWwiLCJwdXRJbWFnZSIsImZpeENvbG9yIiwicm90WCIsInJvdFkiLCJ3c1NvY2tldCIsInJsZURlY29kZXIiLCJzcGFyZXciLCJzcGFyZWgiLCJzcGFyZXcyIiwic3BhcmVoMiIsInJvdGF0aW9uIiwic3BhcmUiLCJmUSIsImNyZWF0ZUltYWdlRGF0YSIsIlNjcmVlbldpZHRoIiwicndpZHRoIiwiaGVpZ2h0IiwiU2NyZWVuSGVpZ2h0IiwicmhlaWdodCIsIm9uU2NyZWVuU2l6ZUNoYW5nZSIsImp3IiwiWG4iLCJzZW5kUmVmcmVzaCIsInNldFRpbWVvdXQiLCJVIiwic2VydmVyQ3V0VGV4dEhhbmRsZXIiLCJoYW5kbGVTZXJ2ZXJDdXRUZXh0IiwidyIsIkkiLCJvbkt2bURhdGEiLCJ1cGRhdGVTY3JlZW5EaW1lbnNpb25zIiwib2xkTW91c2VYIiwiQ3UiLCJVdCIsImV6IiwibGwiLCJtQyIsIndXIiwic3RhdGVQcm9jZXNzb3JzIiwiUSIsInRlcm1pbmFsIiwiY2FwdHVyZSIsImNsZWFyVGVybWluYWwiLCJwcm9jZXNzRGF0YVRvWHRlcm0iLCJxIiwiY29udmVydEFNVEtleUNvZGUiLCJjb2RlIiwic3RhcnRzV2l0aCIsInNoaWZ0S2V5IiwiWiIsIlBhdXNlIiwiQ2Fwc0xvY2siLCJTcGFjZSIsIlF1b3RlIiwiTWludXMiLCJOdW1wYWRNdWx0aXBseSIsIk51bXBhZEFkZCIsIlByaW50U2NyZWVuIiwiQ29tbWEiLCJOdW1wYWRTdWJ0cmFjdCIsIk51bXBhZERlY2ltYWwiLCJQZXJpb2QiLCJTbGFzaCIsIk51bXBhZERpdmlkZSIsIlNlbWljb2xvbiIsIkVxdWFsIiwiT1NMZWZ0IiwiQnJhY2tldExlZnQiLCJPU1JpZ2h0IiwiQmFja3NsYXNoIiwiQnJhY2tldFJpZ2h0IiwiQ29udGV4dE1lbnUiLCJCYWNrcXVvdGUiLCJOdW1Mb2NrIiwiU2Nyb2xsTG9jayIsIkJhY2tzcGFjZSIsIlRhYiIsIkVudGVyIiwiTnVtcGFkRW50ZXIiLCJFc2NhcGUiLCJEZWxldGUiLCJIb21lIiwiUGFnZVVwIiwiUGFnZURvd24iLCJBcnJvd0xlZnQiLCJBcnJvd1VwIiwiQXJyb3dSaWdodCIsIkFycm93RG93biIsIkVuZCIsIkluc2VydCIsIkYxIiwiRjIiLCJGMyIsIkY0IiwiRjUiLCJGNiIsIkY3IiwiRjgiLCJGOSIsIkYxMCIsIkYxMSIsIkYxMiIsIlNoaWZ0TGVmdCIsIlNoaWZ0UmlnaHQiLCJDb250cm9sTGVmdCIsIkNvbnRyb2xSaWdodCIsIkFsdExlZnQiLCJBbHRSaWdodCIsIk1ldGFMZWZ0IiwiTWV0YVJpZ2h0IiwiaG9sZGluZyIsIm1heCIsIm1pbiIsImxhc3RNb3VzZVgiLCJvbGRNb3VzZVkiLCJsYXN0TW91c2VZIiwiYWJzIiwic2VuZEtleSIsInNlbmRLdm1EYXRhIiwic2VuZEtlZXBBbGl2ZSIsImxhc3RLZWVwQWxpdmUiLCJub3ciLCJzZW5kQ3RybEFsdERlbE1zZyIsInNlbmRDYWQiLCJhcm90WCIsImFyb3RZIiwicHV0SW1hZ2VEYXRhIiwiY3JvdFgiLCJjcm90WSIsInNldFJvdGF0aW9uIiwidGNhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImdldENvbnRleHQiLCJzZXRUcmFuc2Zvcm0iLCJyb3RhdGUiLCJQSSIsImRyYXdJbWFnZSIsIm9uU2NyZWVuUmVzaXplIiwiY2FudmFzSWQiLCJFIiwiVXAiLCJEb3duIiwiQ29tbXMiLCJHcmFiS2V5SW5wdXQiLCJLZXlJbnB1dEdyYWIiLCJvbmtleXVwIiwiaGFuZGxlS2V5VXAiLCJvbmtleWRvd24iLCJoYW5kbGVLZXlEb3duIiwib25rZXlwcmVzcyIsImhhbmRsZUtleXMiLCJVbkdyYWJLZXlJbnB1dCIsImhhbHRFdmVudCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiaGFuZGxlS2V5RXZlbnQiLCJldmVudCIsImtleUNvZGUiLCJ4IiwiY29tbSIsImRlYm91bmNlVGltZSIsIm1vdXNlQ2xpY2tDb21wbGV0ZWQiLCJsYXN0RXZlbnQiLCJHcmFiTW91c2VJbnB1dCIsIk1vdXNlSW5wdXRHcmFiIiwiVW5HcmFiTW91c2VJbnB1dCIsIm9ubW91c2Vtb3ZlIiwib25tb3VzZXVwIiwib25tb3VzZWRvd24iLCJtb3VzZWRvd24iLCJidXR0b24iLCJtb3VzZW1vdmUiLCJtb3VzZXVwIiwiZ2V0UG9zaXRpb25PZkNvbnRyb2wiLCJwYWdlWCIsIm9mZnNldEhlaWdodCIsInBhZ2VZIiwic2Nyb2xsZGl2Iiwic2Nyb2xsVG9wIiwib2Zmc2V0V2lkdGgiLCJub01vdXNlUm90YXRlIiwibGFzdE1vdXNlWDIiLCJwYXJlbnRFbGVtZW50IiwibGVmdCIsInRvcCIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJvZmZzZXRQYXJlbnQiLCJFQiIsInFEIiwieHgiLCJaTElCIiwiQkFTRSIsIk5NQVgiLCJjb21tb25faW5pdGlhbGl6ZWQiLCJaX05PX0ZMVVNIIiwiWl9QQVJUSUFMX0ZMVVNIIiwiWl9TWU5DX0ZMVVNIIiwiWl9GVUxMX0ZMVVNIIiwiWl9GSU5JU0giLCJaX0JMT0NLIiwiWl9UUkVFUyIsIlpfT0siLCJaX1NUUkVBTV9FTkQiLCJaX05FRURfRElDVCIsIlpfRVJSTk8iLCJaX1NUUkVBTV9FUlJPUiIsIlpfREFUQV9FUlJPUiIsIlpfTUVNX0VSUk9SIiwiWl9CVUZfRVJST1IiLCJaX1ZFUlNJT05fRVJST1IiLCJaX0RFRkxBVEVEIiwiel9zdHJlYW0iLCJuZXh0X2luIiwiYXZhaWxfaW4iLCJ0b3RhbF9pbiIsIm5leHRfb3V0IiwiYXZhaWxfb3V0IiwidG90YWxfb3V0IiwibXNnIiwiZGF0YV90eXBlIiwiYWRsZXIiLCJpbnB1dF9kYXRhIiwib3V0cHV0X2RhdGEiLCJjaGVja3N1bV9mdW5jdGlvbiIsImd6X2hlYWRlciIsInRleHQiLCJ0aW1lIiwieGZsYWdzIiwib3MiLCJleHRyYSIsImV4dHJhX2xlbiIsImV4dHJhX21heCIsIm5hbWUiLCJuYW1lX21heCIsImNvbW1lbnQiLCJjb21tX21heCIsImhjcmMiLCJkb25lIiwiYWxlcnQiLCJERUZfV0JJVFMiLCJIRUFEIiwiRkxBR1MiLCJUSU1FIiwiT1MiLCJFWExFTiIsIkVYVFJBIiwiTkFNRSIsIkNPTU1FTlQiLCJIQ1JDIiwiRElDVElEIiwiRElDVCIsIlRZUEUiLCJUWVBFRE8iLCJTVE9SRUQiLCJDT1BZXyIsIkNPUFkiLCJUQUJMRSIsIkxFTkxFTlMiLCJDT0RFTEVOUyIsIkxFTl8iLCJMRU4iLCJMRU5FWFQiLCJESVNUIiwiRElTVEVYVCIsIk1BVENIIiwiTElUIiwiQ0hFQ0siLCJMRU5HVEgiLCJET05FIiwiQkFEIiwiTUVNIiwiU1lOQyIsIkVOT1VHSF9MRU5TIiwiRU5PVUdIX0RJU1RTIiwiRU5PVUdIIiwiQ09ERVMiLCJMRU5TIiwiRElTVFMiLCJpbmZsYXRlX3RhYmxlX2xiYXNlIiwiaW5mbGF0ZV90YWJsZV9sZXh0IiwiaW5mbGF0ZV90YWJsZV9kYmFzZSIsImluZmxhdGVfdGFibGVfZGV4dCIsImluZmxhdGVfdGFibGUiLCJBIiwibmV4dCIsImRpc3RiaXRzIiwibGVuYml0cyIsIlQiLCJ3b3JrIiwibGVucyIsIkIiLCJubGVuIiwiUiIsImNvZGVzIiwibmRpc3QiLCJEIiwib3AiLCJiaXRzIiwidmFsIiwiaW5mbGF0ZV9mYXN0Iiwid3NpemUiLCJ3aGF2ZSIsInduZXh0IiwiaG9sZCIsImxlbmNvZGUiLCJkaXN0Y29kZSIsIm1vZGUiLCJzYW5lIiwibmV3X2FycmF5IiwiZ2V0YXJnIiwiY2hlY2tzdW1fbm9uZSIsImluZmxhdGVfc3RhdGUiLCJsYXN0Iiwid3JhcCIsImhhdmVkaWN0IiwiZmxhZ3MiLCJkbWF4IiwiY2hlY2siLCJ0b3RhbCIsImhlYWQiLCJ3Yml0cyIsIm9mZnNldCIsIm5jb2RlIiwiaGF2ZSIsImJhY2siLCJ3YXMiLCJpbmZsYXRlX2NvcHlyaWdodCIsImluZmxhdGVSZXNldEtlZXAiLCJhZGxlcjMyIiwiY3JjMzIiLCJpbmZsYXRlUHJpbWUiLCJsZW5maXhfYXJ5IiwibGVuZml4X2RlZiIsImRpc3RmaXhfYXJ5IiwiZGlzdGZpeF9kZWYiLCJmaXhlZHRhYmxlcyIsImV2YWwiLCJ1cGRhdGV3aW5kb3ciLCJDUkMyIiwiQ1JDNCIsIkxPQUQiLCJzdHJtIiwiUkVTVE9SRSIsIklOSVRCSVRTIiwiUFVMTEJZVEUiLCJORUVEQklUUyIsIkJJVFMiLCJEUk9QQklUUyIsIkJZVEVCSVRTIiwiUkVWRVJTRSIsImluZmxhdGVfb3JkZXIiLCJpbmZsYXRlRW5kIiwiYWRsZXIzMl9jb21iaW5lIiwiY3JjMzJfY29tYmluZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiaGFzT3duUHJvcGVydHkiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIkFNVERlc2t0b3AiLCJBTVRLZXlDb2RlQ29udmVydGVyIiwiQU1US3ZtRGF0YVJlZGlyZWN0b3IiLCJBTVRSZWRpcmVjdG9yIiwiQW10VGVybWluYWwiLCJDb21tc0hlbHBlciIsIkNvbnNvbGVMb2dnZXIiLCJEYXRhUHJvY2Vzc29yIiwiRGVza3RvcCIsIkVuY29kaW5nIiwiRnJhbWVCdWZmZXJCZWxsU2VydmVyQ3V0VGV4dCIsIkhhbmRzaGFrZVN0YXRlIiwiSW1hZ2VIZWxwZXIiLCJLZXlCb2FyZEhlbHBlciIsIkxvZ0xldmVsIiwiTW91c2VIZWxwZXIiLCJQcm90b2NvbCIsIlJMRURlY29kZXIiLCJTZWN1cml0eU9wdGlvbnMiLCJTZWN1cml0eVJlc3BvbnNlIiwiU2VydmVySW5pdCIsIlN0YXRlUHJvY2Vzc29yRmFjdG9yeSIsIlRlcm1pbmFsRGF0YVByb2Nlc3NvciIsIlR5cGVDb252ZXJ0ZXIiLCJpc1RydXRoeSIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaWQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0Iiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsImFhIiwiYmEiLCJhcmd1bWVudHMiLCJjYSIsIlNldCIsImRhIiwiZWEiLCJmYSIsImFkZCIsImhhIiwiaWEiLCJqYSIsImthIiwibGEiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidHlwZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJ6IiwiZm9yRWFjaCIsInRvTG93ZXJDYXNlIiwicGEiLCJxYSIsInJhIiwibmEiLCJpc05hTiIsIm9hIiwidGVzdCIsIm1hIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJzYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwidGEiLCJmb3IiLCJ1YSIsInZhIiwid2EiLCJ4YSIsInlhIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIml0ZXJhdG9yIiwiSWEiLCJKYSIsImFzc2lnbiIsIkthIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJMYSIsIk1hIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiZGlzcGxheU5hbWUiLCJOYSIsInRhZyIsInJlbmRlciIsIk9hIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJQYSIsIlFhIiwiUmEiLCJub2RlTmFtZSIsIlRhIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJTYSIsIlVhIiwiY2hlY2tlZCIsIlZhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJXYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWGEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJvd25lckRvY3VtZW50IiwiYmIiLCJjYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZGIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNoaWxkcmVuIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwiamIiLCJrYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJsYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwibWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImFzcGVjdFJhdGlvIiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwibmIiLCJvYiIsInBiIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsImtleXMiLCJxYiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInJiIiwic2IiLCJpcyIsInRiIiwidWIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwidmIiLCJ3YiIsInhiIiwieWIiLCJ6YiIsInN0YXRlTm9kZSIsIkFiIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJLYiIsImFwcGx5IiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJQYiIsIlFiIiwiU2IiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJUYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiVWIiLCJXYiIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJWYiIsIlhiIiwiWWIiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiWmIiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIiRiIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJhYyIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsInVuc3RhYmxlX25vdyIsImJjIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJjYyIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiZGMiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVjIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJnYyIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiaGMiLCJpYyIsImxjIiwiY2x6MzIiLCJtYyIsIm5jIiwiTE4yIiwib2MiLCJwYyIsInFjIiwicmMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwic2MiLCJ1YyIsInZjIiwid2MiLCJldmVudFRpbWVzIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiS2MiLCJNYXAiLCJMYyIsIk1jIiwiTmMiLCJPYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIlBjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlJjIiwiU2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJUYyIsIlVjIiwiZGlzcGF0Y2hFdmVudCIsIlZjIiwiV2MiLCJYYyIsIlljIiwiWmMiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsIiRjIiwidHJhbnNpdGlvbiIsImFkIiwiYmQiLCJjZCIsImRkIiwiUWMiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImpkIiwiY2hhckNvZGUiLCJrZCIsImxkIiwibWQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50IiwicmQiLCJzZCIsInRkIiwibmQiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJpc1RydXN0ZWQiLCJvZCIsInBkIiwidmlldyIsImRldGFpbCIsInFkIiwidmQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwidWQiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwid2QiLCJ5ZCIsImRhdGFUcmFuc2ZlciIsIkFkIiwiQ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiRGQiLCJjbGlwYm9hcmREYXRhIiwiRWQiLCJHZCIsIkhkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiUmlnaHQiLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIklkIiwiSmQiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiS2QiLCJMZCIsImtleSIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiTWQiLCJPZCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJRZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJTZCIsIlRkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJVZCIsIlZkIiwiV2QiLCJYZCIsImRvY3VtZW50TW9kZSIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsImRlIiwiZ2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidXJsIiwid2VlayIsImhlIiwiaWUiLCJqZSIsImxpc3RlbmVycyIsImtlIiwibGUiLCJtZSIsIm5lIiwib2UiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJvbmlucHV0IiwidmUiLCJkZXRhY2hFdmVudCIsIndlIiwieGUiLCJhdHRhY2hFdmVudCIsInllIiwiemUiLCJBZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwibm9kZSIsIm5leHRTaWJsaW5nIiwiR2UiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiSGUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiSWUiLCJjb250ZW50RWRpdGFibGUiLCJKZSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJkb2N1bWVudEVsZW1lbnQiLCJlbmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiZXh0ZW5kIiwicmFuZ2VDb3VudCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImVsZW1lbnQiLCJzY3JvbGxMZWZ0IiwiZm9jdXMiLCJLZSIsIkxlIiwiTWUiLCJOZSIsIk9lIiwiUGUiLCJRZSIsIlJlIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiU2UiLCJUZSIsIlVlIiwiYW5pbWF0aW9uIiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJaZSIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZmYiLCJnZiIsImhmIiwiUmIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRiIsImpmIiwiaGFzIiwia2YiLCJsZiIsIm1mIiwibmYiLCJwYXNzaXZlIiwib2YiLCJwZiIsInBhcmVudFdpbmRvdyIsInFmIiwicmYiLCJPIiwiemEiLCJMIiwiZWUiLCJjaGFyIiwiZmUiLCJ1bnNoaWZ0Iiwic2YiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJfX2h0bWwiLCJ6ZiIsIkFmIiwiY2xlYXJUaW1lb3V0IiwiQmYiLCJQcm9taXNlIiwiRGYiLCJxdWV1ZU1pY3JvdGFzayIsInJlc29sdmUiLCJ0aGVuIiwiY2F0Y2giLCJDZiIsIkVmIiwiRmYiLCJHZiIsInByZXZpb3VzU2libGluZyIsIkhmIiwiSWYiLCJKZiIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJHIiwiUGYiLCJRZiIsIlJmIiwiU2YiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJUZiIsImNoaWxkQ29udGV4dFR5cGVzIiwiVWYiLCJWZiIsIldmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiWGYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJkZyIsImVnIiwiZmciLCJkZWZhdWx0UHJvcHMiLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJfY3VycmVudFZhbHVlIiwibWciLCJjaGlsZExhbmVzIiwibmciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsIm9nIiwicGciLCJjb250ZXh0IiwibWVtb2l6ZWRWYWx1ZSIsInFnIiwicmciLCJzZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiaW50ZXJsZWF2ZWQiLCJlZmZlY3RzIiwidGciLCJ1ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJ2ZyIsIkoiLCJ3ZyIsInhnIiwieWciLCJ5IiwiemciLCJBZyIsIkJnIiwiQ29tcG9uZW50IiwicmVmcyIsIkNnIiwiRmciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJNIiwiRGciLCJFZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJHZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSGciLCJjb250ZXh0VHlwZSIsInVwZGF0ZXIiLCJJZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIkpnIiwicHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlFnIiwiUmciLCJTZyIsIlRnIiwiVWciLCJWZyIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImVsZW1lbnRUeXBlIiwiZGVsZXRpb25zIiwiYmgiLCJwZW5kaW5nUHJvcHMiLCJvdmVyZmxvdyIsInRyZWVDb250ZXh0IiwicmV0cnlMYW5lIiwiY2giLCJkaCIsImVoIiwiZmgiLCJtZW1vaXplZFByb3BzIiwiZ2giLCJoaCIsImloIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsImpoIiwia2giLCJsaCIsImluZGV4IiwibWgiLCJuaCIsIm9oIiwiaW1wbGVtZW50YXRpb24iLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInRhZ05hbWUiLCJ6aCIsIkFoIiwiQmgiLCJQIiwiQ2giLCJyZXZlYWxPcmRlciIsIkRoIiwiRWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsIkZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJiYXNlUXVldWUiLCJxdWV1ZSIsIlVoIiwiVmgiLCJXaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJoYXNFYWdlclN0YXRlIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiZ2V0U25hcHNob3QiLCJiaSIsImNpIiwiZGkiLCJsYXN0RWZmZWN0Iiwic3RvcmVzIiwiZWkiLCJmaSIsImdpIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VJbnNlcnRpb25FZmZlY3QiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZVN5bmNFeHRlcm5hbFN0b3JlIiwidXNlSWQiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJpZGVudGlmaWVyUHJlZml4IiwiemkiLCJtZXNzYWdlIiwiQWkiLCJMaSIsIk5pIiwiT2kiLCJCaSIsIldlYWtNYXAiLCJDaSIsIkRpIiwiRWkiLCJGaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImNvbXBvbmVudERpZENhdGNoIiwiR2kiLCJjb21wb25lbnRTdGFjayIsIkhpIiwicGluZ0NhY2hlIiwiSWkiLCJKaSIsIktpIiwiUGkiLCJ0YWlsTW9kZSIsInRhaWwiLCJWIiwic3VidHJlZUZsYWdzIiwiUWkiLCJwZW5kaW5nQ29udGV4dCIsIlJpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImF1dG9Gb2N1cyIsImNyZWF0ZVRleHROb2RlIiwiVyIsIlNpIiwicmVuZGVyaW5nIiwiVGkiLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJpc0JhY2t3YXJkcyIsIlVpIiwiVmkiLCJXaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiWGkiLCJZaSIsIlppIiwiJGkiLCJhaiIsImNvbXBhcmUiLCJiaiIsImNqIiwiZGoiLCJiYXNlTGFuZXMiLCJjYWNoZVBvb2wiLCJlaiIsImZqIiwiZ2oiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJoaiIsImlqIiwiamoiLCJraiIsImxqIiwibWoiLCJmYWxsYmFjayIsIm5qIiwib2oiLCJwaiIsInFqIiwiX3JlYWN0UmV0cnkiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJXZWFrU2V0IiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJLaiIsIkxqIiwiTWoiLCJOaiIsIk9qIiwiUGoiLCJRaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJSaiIsIlRqIiwiU2oiLCJYaiIsIllqIiwiWmoiLCJhayIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwic3JjIiwiV2oiLCJMayIsImJrIiwiY2VpbCIsImNrIiwiZGsiLCJlayIsIlkiLCJmayIsImdrIiwiaGsiLCJpayIsImprIiwiVmoiLCJJbmZpbml0eSIsImtrIiwibGsiLCJtayIsIm5rIiwib2siLCJwayIsInFrIiwicmsiLCJzayIsInRrIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiZXhwaXJlZExhbmVzIiwidGMiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2ciLCJ1ayIsInZrIiwid2siLCJ4ayIsInlrIiwiemsiLCJBayIsIkJrIiwiQ2siLCJEayIsIkVrIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIkZrIiwidGltZW91dEhhbmRsZSIsIkdrIiwiSGsiLCJJayIsIkprIiwiS2siLCJtdXRhYmxlUmVhZExhbmVzIiwieGMiLCJGaiIsImRpc3BsYXkiLCJVaiIsIm9uQ29tbWl0RmliZXJSb290IiwiamMiLCJvblJlY292ZXJhYmxlRXJyb3IiLCJNayIsIm9uUG9zdENvbW1pdEZpYmVyUm9vdCIsIk5rIiwiT2siLCJRayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJSayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJTayIsImNhY2hlIiwidHJhbnNpdGlvbnMiLCJVayIsIldrIiwiWGsiLCJZayIsIlprIiwid2oiLCJQayIsInJlcG9ydEVycm9yIiwiYmwiLCJfaW50ZXJuYWxSb290IiwiY2wiLCJmbCIsImhsIiwiVmsiLCJnbCIsInVubW91bnQiLCJ1bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiamwiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImtsIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0RXJyb3JIYW5kbGVyIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJyZWNvbmNpbGVyVmVyc2lvbiIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiZWwiLCJjaGVja0RDRSIsImVyciIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiQ2hpbGRyZW4iLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2RlZmF1bHRWYWx1ZSIsIl9nbG9iYWxOYW1lIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwic3RhcnRUcmFuc2l0aW9uIiwidW5zdGFibGVfYWN0IiwicG9wIiwic29ydEluZGV4IiwicGVyZm9ybWFuY2UiLCJzZXRJbW1lZGlhdGUiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJuYXZpZ2F0b3IiLCJzY2hlZHVsaW5nIiwiaXNJbnB1dFBlbmRpbmciLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4IiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwiaW5zZXJ0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudERvY3VtZW50IiwiZ2V0VGFyZ2V0Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJnZXR0ZXIiLCJkZWZpbml0aW9uIiwicHJvcCIsImNsYXNzTmFtZSIsImhhbmRsZUNvbm5lY3RDbGljayIsImt2bXN0YXRlIiwib25FbmNvZGluZ0NoYW5nZSIsImNoYW5nZUVuY29kaW5nIiwiZ2V0Q29ubmVjdFN0YXRlIiwib25DaGFuZ2UiLCJEZXNrdG9wU2V0dGluZ3MiLCJkZXNrdG9wc2V0dGluZ3MiLCJjaGFuZ2VEZXNrdG9wU2V0dGluZ3MiLCJpc0ZhbHN5IiwiY2FudmFzQXR0cmlidXRlcyIsIm9uQ29udGV4dE1lbnUiLCJvbk1vdXNlRG93biIsIm1vdXNlRG93biIsIm9uTW91c2VVcCIsIm1vdXNlVXAiLCJvbk1vdXNlTW92ZSIsIm1vdXNlTW92ZSIsImNvbnRleHRSZWYiLCJkZXNrdG9wU2V0dGluZ3NDaGFuZ2UiLCJlbmNvZGluZ09wdGlvbiIsInNhdmVDb250ZXh0Iiwic3RhcnRLVk0iLCJzdG9wS1ZNIiwiZ2V0UmVuZGVyU3RhdHVzIiwiT25Db25uZWN0aW9uU3RhdGVDaGFuZ2UiLCJjdHgiLCJpbml0IiwiZGV2aWNlVXVpZCIsImRldmljZUlkIiwibXBzU2VydmVyIiwicmVkaXJlY3RvciIsIkZpbGVSZWFkZXIiLCJkYXRhUHJvY2Vzc29yIiwibW91c2VIZWxwZXIiLCJtb3VzZURlYm91bmNlVGltZSIsImtleWJvYXJkIiwib25SZWRpcmVjdG9yRXJyb3IiLCJjbGVhblVwIiwiY2xlYXJSZWN0IiwicmVzZXQiLCJzZXR0aW5ncyIsIldlYlNvY2tldCIsInByZXZQcm9wcyIsImF1dG9Db25uZWN0IiwiY2FudmFzSGVpZ2h0IiwiY2FudmFzV2lkdGgiLCJfdHlwZW9mIiwiX2NsYXNzQ2FsbENoZWNrIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsImRlc2NyaXB0b3IiLCJ3cml0YWJsZSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJSZWZlcmVuY2VFcnJvciIsIl9zZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfZ2V0UHJvdG90eXBlT2YiLCJnZXRQcm90b3R5cGVPZiIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiYXJyMiIsIm93bktleXMiLCJvYmplY3QiLCJlbnVtZXJhYmxlT25seSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJfb2JqZWN0U3ByZWFkIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJjb25zb2xlTG9nZ2VyIiwiYXJncyIsIm91dHB1dCIsIkxvZ2dlciIsImNvbmNyZXRlTG9nZ2VyIiwicHJlZml4IiwiYm9vbCIsIl9sZW4iLCJfa2V5IiwiZm9yd2FyZCIsIl9sZW4yIiwiX2tleTIiLCJfbGVuMyIsIl9rZXkzIiwiX2xlbjQiLCJfa2V5NCIsImx2bCIsImRlYnVnT25seSIsIm1vZHVsZU5hbWUiLCJiYXNlTG9nZ2VyIiwiRXZlbnRFbWl0dGVyIiwib2JzZXJ2ZXJzIiwiZXZlbnRzIiwiX3RoaXMiLCJjbG9uZWQiLCJvYnNlcnZlciIsIl9jbG9uZWQiLCJkZWZlciIsInJlcyIsInJlaiIsInByb21pc2UiLCJyZWplY3QiLCJtYWtlU3RyaW5nIiwiY29weSIsImdldExhc3RPZlBhdGgiLCJwYXRoIiwiRW1wdHkiLCJjbGVhbktleSIsImNhbk5vdFRyYXZlcnNlRGVlcGVyIiwic2V0UGF0aCIsIm5ld1ZhbHVlIiwiX2dldExhc3RPZlBhdGgiLCJnZXRQYXRoIiwiX2dldExhc3RPZlBhdGgzIiwiZ2V0UGF0aFdpdGhEZWZhdWx0cyIsImRlZmF1bHREYXRhIiwiZGVlcEV4dGVuZCIsIm92ZXJ3cml0ZSIsInJlZ2V4RXNjYXBlIiwic3RyIiwiX2VudGl0eU1hcCIsImlzSUUxMCIsInVzZXJBZ2VudCIsImNoYXJzIiwib3duS2V5cyQxIiwiX29iamVjdFNwcmVhZCQxIiwiZGVlcEZpbmQiLCJrZXlTZXBhcmF0b3IiLCJwYXRocyIsIm1peCIsImVuZHNXaXRoIiwiam9pbmVkUGF0aCIsIlJlc291cmNlU3RvcmUiLCJfRXZlbnRFbWl0dGVyIiwiRGVyaXZlZCIsImhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfc3VwZXIiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlN1cGVyIiwiTmV3VGFyZ2V0IiwibnMiLCJkZWZhdWx0TlMiLCJpZ25vcmVKU09OU3RydWN0dXJlIiwibG5nIiwic2lsZW50IiwiYWRkTmFtZXNwYWNlcyIsImVtaXQiLCJyZXNvdXJjZXMiLCJhZGRSZXNvdXJjZSIsImRlZXAiLCJwYWNrIiwiaGFzUmVzb3VyY2VCdW5kbGUiLCJyZW1vdmVOYW1lc3BhY2VzIiwiZ2V0UmVzb3VyY2UiLCJjb21wYXRpYmlsaXR5QVBJIiwiZ2V0RGF0YUJ5TGFuZ3VhZ2UiLCJmaW5kIiwicG9zdFByb2Nlc3NvciIsInByb2Nlc3NvcnMiLCJhZGRQb3N0UHJvY2Vzc29yIiwiaGFuZGxlIiwidHJhbnNsYXRvciIsInByb2Nlc3NvciIsInByb2Nlc3MiLCJvd25LZXlzJDIiLCJfb2JqZWN0U3ByZWFkJDIiLCJjaGVja2VkTG9hZGVkRm9yIiwiVHJhbnNsYXRvciIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMSIsInNlcnZpY2VzIiwibGFuZ3VhZ2UiLCJpbnRlcnBvbGF0aW9uIiwicmVzb2x2ZWQiLCJuc1NlcGFyYXRvciIsIm5hbWVzcGFjZXMiLCJ3b3VsZENoZWNrRm9yTnNJbktleSIsInNlZW1zTmF0dXJhbExhbmd1YWdlIiwidXNlckRlZmluZWRLZXlTZXBhcmF0b3IiLCJ1c2VyRGVmaW5lZE5zU2VwYXJhdG9yIiwicG9zc2libGVDaGFycyIsIlJlZ0V4cCIsIm1hdGNoZWQiLCJsb29rc0xpa2VPYmplY3RQYXRoIiwiaW50ZXJwb2xhdG9yIiwibmVzdGluZ1JlZ2V4cCIsInBhcnRzIiwibGFzdEtleSIsIl90aGlzMiIsIm92ZXJsb2FkVHJhbnNsYXRpb25PcHRpb25IYW5kbGVyIiwiX3RoaXMkZXh0cmFjdEZyb21LZXkiLCJleHRyYWN0RnJvbUtleSIsIm5hbWVzcGFjZSIsImFwcGVuZE5hbWVzcGFjZVRvQ0lNb2RlIiwicmVzVXNlZEtleSIsInVzZWRLZXkiLCJyZXNFeGFjdFVzZWRLZXkiLCJleGFjdFVzZWRLZXkiLCJyZXNUeXBlIiwibm9PYmplY3QiLCJqb2luQXJyYXlzIiwiaGFuZGxlQXNPYmplY3RJbkkxOG5Gb3JtYXQiLCJpMThuRm9ybWF0IiwiaGFuZGxlQXNPYmplY3QiLCJyZXR1cm5PYmplY3RzIiwicmV0dXJuZWRPYmplY3RIYW5kbGVyIiwicmVzVHlwZUlzQXJyYXkiLCJuZXdLZXlUb1VzZSIsImRlZXBLZXkiLCJ0cmFuc2xhdGUiLCJleHRlbmRUcmFuc2xhdGlvbiIsInVzZWREZWZhdWx0IiwibmVlZHNQbHVyYWxIYW5kbGluZyIsImhhc0RlZmF1bHRWYWx1ZSIsImRlZmF1bHRWYWx1ZVN1ZmZpeCIsInBsdXJhbFJlc29sdmVyIiwiZ2V0U3VmZml4IiwiaXNWYWxpZExvb2t1cCIsIm1pc3NpbmdLZXlOb1ZhbHVlRmFsbGJhY2tUb0tleSIsInJlc0Zvck1pc3NpbmciLCJ1cGRhdGVNaXNzaW5nIiwibG5ncyIsImZhbGxiYWNrTG5ncyIsImxhbmd1YWdlVXRpbHMiLCJnZXRGYWxsYmFja0NvZGVzIiwiZmFsbGJhY2tMbmciLCJzYXZlTWlzc2luZ1RvIiwidG9SZXNvbHZlSGllcmFyY2h5Iiwic3BlY2lmaWNEZWZhdWx0VmFsdWUiLCJkZWZhdWx0Rm9yTWlzc2luZyIsIm1pc3NpbmdLZXlIYW5kbGVyIiwiYmFja2VuZENvbm5lY3RvciIsInNhdmVNaXNzaW5nIiwic2F2ZU1pc3NpbmdQbHVyYWxzIiwiZ2V0U3VmZml4ZXMiLCJzdWZmaXgiLCJhcHBlbmROYW1lc3BhY2VUb01pc3NpbmdLZXkiLCJwYXJzZU1pc3NpbmdLZXlIYW5kbGVyIiwiX3RoaXMzIiwidXNlZExuZyIsInVzZWROUyIsInNraXBJbnRlcnBvbGF0aW9uIiwibmVzdEJlZiIsInNraXBPblZhcmlhYmxlcyIsImRlZmF1bHRWYXJpYWJsZXMiLCJpbnRlcnBvbGF0ZSIsIm5lc3QiLCJwb3N0UHJvY2VzcyIsInBvc3RQcm9jZXNzb3JOYW1lcyIsImFwcGx5UG9zdFByb2Nlc3NvciIsInBvc3RQcm9jZXNzUGFzc1Jlc29sdmVkIiwiaTE4blJlc29sdmVkIiwiZm91bmQiLCJfdGhpczQiLCJleHRyYWN0ZWQiLCJmYWxsYmFja05TIiwibmVlZHNaZXJvU3VmZml4TG9va3VwIiwib3JkaW5hbCIsInNob3VsZFVzZUludGxBcGkiLCJuZWVkc0NvbnRleHRIYW5kbGluZyIsInV0aWxzIiwiaGFzTG9hZGVkTmFtZXNwYWNlIiwicG9zc2libGVLZXkiLCJmaW5hbEtleXMiLCJhZGRMb29rdXBLZXlzIiwicGx1cmFsU3VmZml4IiwiemVyb1N1ZmZpeCIsImNvbnRleHRLZXkiLCJjb250ZXh0U2VwYXJhdG9yIiwicmV0dXJuTnVsbCIsInJldHVybkVtcHR5U3RyaW5nIiwicmVzb3VyY2VTdG9yZSIsIm9wdGlvbiIsImNhcGl0YWxpemUiLCJzdHJpbmciLCJMYW5ndWFnZVV0aWwiLCJzdXBwb3J0ZWRMbmdzIiwiZm9ybWF0TGFuZ3VhZ2VDb2RlIiwic3BlY2lhbENhc2VzIiwibG93ZXJDYXNlTG5nIiwicGFydCIsImNsZWFuQ29kZSIsImxvYWQiLCJub25FeHBsaWNpdFN1cHBvcnRlZExuZ3MiLCJnZXRMYW5ndWFnZVBhcnRGcm9tQ29kZSIsImNsZWFuZWRMbmciLCJpc1N1cHBvcnRlZENvZGUiLCJsbmdPbmx5Iiwic3VwcG9ydGVkTG5nIiwiZmFsbGJhY2tzIiwiZ2V0U2NyaXB0UGFydEZyb21Db2RlIiwiZmFsbGJhY2tDb2RlIiwiZmFsbGJhY2tDb2RlcyIsImFkZENvZGUiLCJmYyIsInNldHMiLCJuciIsIl9ydWxlc1BsdXJhbHNUeXBlcyIsImRlcHJlY2F0ZWRKc29uVmVyc2lvbnMiLCJzdWZmaXhlc09yZGVyIiwiemVybyIsIm9uZSIsInR3byIsImZldyIsIm1hbnkiLCJvdGhlciIsImNyZWF0ZVJ1bGVzIiwicnVsZXMiLCJudW1iZXJzIiwicGx1cmFscyIsIlBsdXJhbFJlc29sdmVyIiwiY29tcGF0aWJpbGl0eUpTT04iLCJJbnRsIiwiUGx1cmFsUnVsZXMiLCJfdW51c2VkIiwicnVsZSIsImdldFJ1bGUiLCJyZXNvbHZlZE9wdGlvbnMiLCJwbHVyYWxDYXRlZ29yaWVzIiwic29ydCIsInBsdXJhbENhdGVnb3J5MSIsInBsdXJhbENhdGVnb3J5MiIsInBsdXJhbENhdGVnb3J5IiwicHJlcGVuZCIsInNlbGVjdCIsImdldFN1ZmZpeFJldHJvQ29tcGF0aWJsZSIsImlkeCIsIm5vQWJzIiwic2ltcGxpZnlQbHVyYWxTdWZmaXgiLCJyZXR1cm5TdWZmaXgiLCJvd25LZXlzJDMiLCJfb2JqZWN0U3ByZWFkJDMiLCJJbnRlcnBvbGF0b3IiLCJmb3JtYXQiLCJlc2NhcGVWYWx1ZSIsImlPcHRzIiwidXNlUmF3VmFsdWVUb0VzY2FwZSIsInByZWZpeEVzY2FwZWQiLCJzdWZmaXhFc2NhcGVkIiwiZm9ybWF0U2VwYXJhdG9yIiwidW5lc2NhcGVQcmVmaXgiLCJ1bmVzY2FwZVN1ZmZpeCIsIm5lc3RpbmdQcmVmaXgiLCJuZXN0aW5nUHJlZml4RXNjYXBlZCIsIm5lc3RpbmdTdWZmaXgiLCJuZXN0aW5nU3VmZml4RXNjYXBlZCIsIm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yIiwibWF4UmVwbGFjZXMiLCJhbHdheXNGb3JtYXQiLCJyZXNldFJlZ0V4cCIsInJlZ2V4cFN0ciIsInJlZ2V4cCIsInJlZ2V4cFVuZXNjYXBlU3RyIiwicmVnZXhwVW5lc2NhcGUiLCJuZXN0aW5nUmVnZXhwU3RyIiwicmVwbGFjZXMiLCJyZWdleFNhZmUiLCJoYW5kbGVGb3JtYXQiLCJpbnRlcnBvbGF0aW9ua2V5IiwibWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyIiwicmVnZXgiLCJzYWZlVmFsdWUiLCJ0b2RvIiwiZXhlYyIsIm1hdGNoZWRWYXIiLCJ0ZW1wIiwibGFzdEluZGV4IiwiY2xvbmVkT3B0aW9ucyIsImhhbmRsZUhhc09wdGlvbnMiLCJpbmhlcml0ZWRPcHRpb25zIiwic2VwIiwib3B0aW9uc1N0cmluZyIsImZvcm1hdHRlcnMiLCJkb1JlZHVjZSIsImVsZW0iLCJyZWR1Y2UiLCJvd25LZXlzJDQiLCJfb2JqZWN0U3ByZWFkJDQiLCJGb3JtYXR0ZXIiLCJmb3JtYXRzIiwiTnVtYmVyRm9ybWF0IiwiY3VycmVuY3kiLCJEYXRlVGltZUZvcm1hdCIsInJlbGF0aXZldGltZSIsIlJlbGF0aXZlVGltZUZvcm1hdCIsIkxpc3RGb3JtYXQiLCJfZm9ybWF0IiwibWVtIiwiX3BhcnNlRm9ybWF0U3RyIiwiZm9ybWF0U3RyIiwiZm9ybWF0TmFtZSIsImZvcm1hdE9wdGlvbnMiLCJvcHRTdHIiLCJvcHQiLCJfb3B0JHNwbGl0MiIsIml0ZXIiLCJmcm9tIiwibWluTGVuIiwiX3RvQXJyYXkiLCJwYXJzZUZvcm1hdFN0ciIsImZvcm1hdHRlZCIsInZhbE9wdGlvbnMiLCJmb3JtYXRQYXJhbXMiLCJvd25LZXlzJDUiLCJfb2JqZWN0U3ByZWFkJDUiLCJDb25uZWN0b3IiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0JDIiLCJiYWNrZW5kIiwic3RvcmUiLCJsYW5ndWFnZXMiLCJ0b0xvYWQiLCJ0b0xvYWRMYW5ndWFnZXMiLCJ0b0xvYWROYW1lc3BhY2VzIiwiaGFzQWxsTmFtZXNwYWNlcyIsInJlbG9hZCIsImxvYWRlZCIsImVycm9ycyIsImFkZFJlc291cmNlQnVuZGxlIiwiX2dldExhc3RPZlBhdGgyIiwicHVzaFBhdGgiLCJ3aGF0IiwiZmNOYW1lIiwidHJpZWQiLCJ3YWl0IiwicmVhZCIsInF1ZXVlTG9hZCIsImxvYWRPbmUiLCJwcmVwYXJlTG9hZGluZyIsIl90aGlzNSIsImZhbGxiYWNrVmFsdWUiLCJpc1VwZGF0ZSIsImluaXRJbW1lZGlhdGUiLCJwcmVsb2FkIiwicGx1cmFsU2VwYXJhdG9yIiwicGFydGlhbEJ1bmRsZWRMYW5ndWFnZXMiLCJyZXQiLCJ0RGVzY3JpcHRpb24iLCJ0cmFuc2Zvcm1PcHRpb25zIiwib3duS2V5cyQ2IiwiX29iamVjdFNwcmVhZCQ2Iiwibm9vcCIsImJpbmRNZW1iZXJGdW5jdGlvbnMiLCJpbnN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsIkkxOG4iLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0JDMiLCJleHRlcm5hbCIsImlzSW5pdGlhbGl6ZWQiLCJpc0Nsb25lIiwiZGVmT3B0cyIsImNyZWF0ZUNsYXNzT25EZW1hbmQiLCJDbGFzc09yT2JqZWN0IiwiZm9ybWF0dGVyIiwibHUiLCJvbiIsImxhbmd1YWdlRGV0ZWN0b3IiLCJkZXRlY3Rpb24iLCJzdG9yZUFwaSIsIl90aGlzMiRzdG9yZSIsInN0b3JlQXBpQ2hhaW5lZCIsIl90aGlzMiRzdG9yZTIiLCJkZWZlcnJlZCIsImZpbmlzaCIsImluaXRpYWxpemVkU3RvcmVPbmNlIiwiY2hhbmdlTGFuZ3VhZ2UiLCJ1c2VkQ2FsbGJhY2siLCJhcHBlbmQiLCJyZXNvbHZlZExhbmd1YWdlIiwic2V0UmVzb2x2ZWRMYW5ndWFnZSIsImxuZ0luTG5ncyIsImhhc0xhbmd1YWdlU29tZVRyYW5zbGF0aW9ucyIsImlzTGFuZ3VhZ2VDaGFuZ2luZ1RvIiwic2V0TG5nUHJvcHMiLCJzZXRMbmciLCJnZXRCZXN0TWF0Y2hGcm9tQ29kZXMiLCJjYWNoZVVzZXJMYW5ndWFnZSIsImxvYWRSZXNvdXJjZXMiLCJhc3luYyIsImRldGVjdCIsImtleVByZWZpeCIsImZpeGVkVCIsIm9wdHMiLCJyZXN0IiwicmVzdWx0S2V5IiwiX3RoaXMkdHJhbnNsYXRvciIsIl90aGlzJHRyYW5zbGF0b3IyIiwiZXhpc3RzIiwiX3RoaXM2IiwibGFzdExuZyIsImxvYWROb3RQZW5kaW5nIiwibG9hZFN0YXRlIiwicHJlY2hlY2siLCJwcmVSZXN1bHQiLCJfdGhpczciLCJwcmVsb2FkZWQiLCJuZXdMbmdzIiwiX3RoaXM4IiwibWVyZ2VkT3B0aW9ucyIsImNsb25lIiwibWVtYmVyc1RvQ29weSIsImNyZWF0ZUluc3RhbmNlIiwicmVsb2FkUmVzb3VyY2VzIiwidXNlIiwiZ2V0Rml4ZWRUIiwic2V0RGVmYXVsdE5hbWVzcGFjZSIsImxvYWROYW1lc3BhY2VzIiwibG9hZExhbmd1YWdlcyIsImVhY2giLCJkZWZhdWx0cyIsImZpZWxkQ29udGVudFJlZ0V4cCIsInNlcmlhbGl6ZUNvb2tpZSIsIm1heEFnZSIsImRvbWFpbiIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsImh0dHBPbmx5Iiwic2VjdXJlIiwic2FtZVNpdGUiLCJjb29raWUkMSIsImxvb2t1cCIsImxvb2t1cENvb2tpZSIsIm5hbWVFUSIsImNvb2tpZSIsIm1pbnV0ZXMiLCJjb29raWVPcHRpb25zIiwic2V0VGltZSIsImNvb2tpZU1pbnV0ZXMiLCJjb29raWVEb21haW4iLCJxdWVyeXN0cmluZyIsImhhc2giLCJwYXJhbXMiLCJwb3MiLCJsb29rdXBRdWVyeXN0cmluZyIsImhhc0xvY2FsU3RvcmFnZVN1cHBvcnQiLCJsb2NhbFN0b3JhZ2VBdmFpbGFibGUiLCJsb2NhbFN0b3JhZ2UiLCJ0ZXN0S2V5Iiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJsb29rdXBMb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0Iiwic2Vzc2lvblN0b3JhZ2VBdmFpbGFibGUiLCJzZXNzaW9uU3RvcmFnZSIsImxvb2t1cFNlc3Npb25TdG9yYWdlIiwibmF2aWdhdG9yJDEiLCJ1c2VyTGFuZ3VhZ2UiLCJodG1sVGFnIiwiZ2V0QXR0cmlidXRlIiwibG9va3VwRnJvbVBhdGhJbmRleCIsInN1YmRvbWFpbiIsImxvb2t1cEZyb21TdWJkb21haW5JbmRleCIsIkJyb3dzZXIiLCJkZXRlY3RvcnMiLCJpMThuT3B0aW9ucyIsImNhY2hlcyIsImV4Y2x1ZGVDYWNoZUZvciIsImxvb2t1cEZyb21VcmxJbmRleCIsImFkZERldGVjdG9yIiwiZGV0ZWN0b3IiLCJkZXRlY3Rpb25PcmRlciIsImRldGVjdGVkIiwiZGV0ZWN0b3JOYW1lIiwiY2FjaGVOYW1lIiwiZGVmYXVsdE9wdGlvbnMiLCJiaW5kSTE4biIsImJpbmRJMThuU3RvcmUiLCJ0cmFuc0VtcHR5Tm9kZVZhbHVlIiwidHJhbnNTdXBwb3J0QmFzaWNIdG1sTm9kZXMiLCJ0cmFuc1dyYXBUZXh0Tm9kZXMiLCJ0cmFuc0tlZXBCYXNpY0h0bWxOb2Rlc0ZvciIsInVzZVN1c3BlbnNlIiwiUmVwb3J0TmFtZXNwYWNlcyIsInVzZWROYW1lc3BhY2VzIiwiaW5pdFJlYWN0STE4bmV4dCIsInNldERlZmF1bHRzIiwicmVhY3QiLCJlbiIsInRyYW5zbGF0aW9ucyIsImZyIiwiZXMiLCJVUkwiLCJVUkxTZWFyY2hQYXJhbXMiXSwic291cmNlUm9vdCI6IiJ9