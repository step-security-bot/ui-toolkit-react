/*! For license information please see sol.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["ui-toolkit"]=t():e["ui-toolkit"]=t()}(self,(()=>(()=>{var __webpack_modules__={869:module=>{var e;self,e=()=>(()=>{var __webpack_modules__={487:e=>{var t={utf8:{stringToBytes:function(e){return t.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(t.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],r=0;r<e.length;r++)t.push(255&e.charCodeAt(r));return t},bytesToString:function(e){for(var t=[],r=0;r<e.length;r++)t.push(String.fromCharCode(e[r]));return t.join("")}}};e.exports=t},12:e=>{var t,r;t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&r.rotl(e,8)|4278255360&r.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=r.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],r=0,i=0;r<e.length;r++,i+=8)t[i>>>5]|=e[r]<<24-i%32;return t},wordsToBytes:function(e){for(var t=[],r=0;r<32*e.length;r+=8)t.push(e[r>>>5]>>>24-r%32&255);return t},bytesToHex:function(e){for(var t=[],r=0;r<e.length;r++)t.push((e[r]>>>4).toString(16)),t.push((15&e[r]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},bytesToBase64:function(e){for(var r=[],i=0;i<e.length;i+=3)for(var n=e[i]<<16|e[i+1]<<8|e[i+2],s=0;s<4;s++)8*i+6*s<=8*e.length?r.push(t.charAt(n>>>6*(3-s)&63)):r.push("=");return r.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var r=[],i=0,n=0;i<e.length;n=++i%4)0!=n&&r.push((t.indexOf(e.charAt(i-1))&Math.pow(2,-2*n+8)-1)<<2*n|t.indexOf(e.charAt(i))>>>6-2*n);return r}},e.exports=r},738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},568:(e,t,r)=>{var i,n,s,o,a;i=r(12),n=r(487).utf8,s=r(738),o=r(487).bin,(a=function(e,t){e.constructor==String?e=t&&"binary"===t.encoding?o.stringToBytes(e):n.stringToBytes(e):s(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||e.constructor===Uint8Array||(e=e.toString());for(var r=i.bytesToWords(e),l=8*e.length,c=1732584193,u=-271733879,h=-1732584194,d=271733878,f=0;f<r.length;f++)r[f]=16711935&(r[f]<<8|r[f]>>>24)|4278255360&(r[f]<<24|r[f]>>>8);r[l>>>5]|=128<<l%32,r[14+(l+64>>>9<<4)]=l;var p=a._ff,v=a._gg,g=a._hh,_=a._ii;for(f=0;f<r.length;f+=16){var m=c,b=u,y=h,S=d;c=p(c,u,h,d,r[f+0],7,-680876936),d=p(d,c,u,h,r[f+1],12,-389564586),h=p(h,d,c,u,r[f+2],17,606105819),u=p(u,h,d,c,r[f+3],22,-1044525330),c=p(c,u,h,d,r[f+4],7,-176418897),d=p(d,c,u,h,r[f+5],12,1200080426),h=p(h,d,c,u,r[f+6],17,-1473231341),u=p(u,h,d,c,r[f+7],22,-45705983),c=p(c,u,h,d,r[f+8],7,1770035416),d=p(d,c,u,h,r[f+9],12,-1958414417),h=p(h,d,c,u,r[f+10],17,-42063),u=p(u,h,d,c,r[f+11],22,-1990404162),c=p(c,u,h,d,r[f+12],7,1804603682),d=p(d,c,u,h,r[f+13],12,-40341101),h=p(h,d,c,u,r[f+14],17,-1502002290),c=v(c,u=p(u,h,d,c,r[f+15],22,1236535329),h,d,r[f+1],5,-165796510),d=v(d,c,u,h,r[f+6],9,-1069501632),h=v(h,d,c,u,r[f+11],14,643717713),u=v(u,h,d,c,r[f+0],20,-373897302),c=v(c,u,h,d,r[f+5],5,-701558691),d=v(d,c,u,h,r[f+10],9,38016083),h=v(h,d,c,u,r[f+15],14,-660478335),u=v(u,h,d,c,r[f+4],20,-405537848),c=v(c,u,h,d,r[f+9],5,568446438),d=v(d,c,u,h,r[f+14],9,-1019803690),h=v(h,d,c,u,r[f+3],14,-187363961),u=v(u,h,d,c,r[f+8],20,1163531501),c=v(c,u,h,d,r[f+13],5,-1444681467),d=v(d,c,u,h,r[f+2],9,-51403784),h=v(h,d,c,u,r[f+7],14,1735328473),c=g(c,u=v(u,h,d,c,r[f+12],20,-1926607734),h,d,r[f+5],4,-378558),d=g(d,c,u,h,r[f+8],11,-2022574463),h=g(h,d,c,u,r[f+11],16,1839030562),u=g(u,h,d,c,r[f+14],23,-35309556),c=g(c,u,h,d,r[f+1],4,-1530992060),d=g(d,c,u,h,r[f+4],11,1272893353),h=g(h,d,c,u,r[f+7],16,-155497632),u=g(u,h,d,c,r[f+10],23,-1094730640),c=g(c,u,h,d,r[f+13],4,681279174),d=g(d,c,u,h,r[f+0],11,-358537222),h=g(h,d,c,u,r[f+3],16,-722521979),u=g(u,h,d,c,r[f+6],23,76029189),c=g(c,u,h,d,r[f+9],4,-640364487),d=g(d,c,u,h,r[f+12],11,-421815835),h=g(h,d,c,u,r[f+15],16,530742520),c=_(c,u=g(u,h,d,c,r[f+2],23,-995338651),h,d,r[f+0],6,-198630844),d=_(d,c,u,h,r[f+7],10,1126891415),h=_(h,d,c,u,r[f+14],15,-1416354905),u=_(u,h,d,c,r[f+5],21,-57434055),c=_(c,u,h,d,r[f+12],6,1700485571),d=_(d,c,u,h,r[f+3],10,-1894986606),h=_(h,d,c,u,r[f+10],15,-1051523),u=_(u,h,d,c,r[f+1],21,-2054922799),c=_(c,u,h,d,r[f+8],6,1873313359),d=_(d,c,u,h,r[f+15],10,-30611744),h=_(h,d,c,u,r[f+6],15,-1560198380),u=_(u,h,d,c,r[f+13],21,1309151649),c=_(c,u,h,d,r[f+4],6,-145523070),d=_(d,c,u,h,r[f+11],10,-1120210379),h=_(h,d,c,u,r[f+2],15,718787259),u=_(u,h,d,c,r[f+9],21,-343485551),c=c+m>>>0,u=u+b>>>0,h=h+y>>>0,d=d+S>>>0}return i.endian([c,u,h,d])})._ff=function(e,t,r,i,n,s,o){var a=e+(t&r|~t&i)+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._gg=function(e,t,r,i,n,s,o){var a=e+(t&i|r&~i)+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._hh=function(e,t,r,i,n,s,o){var a=e+(t^r^i)+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._ii=function(e,t,r,i,n,s,o){var a=e+(r^(t|~i))+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._blocksize=16,a._digestsize=16,e.exports=function(e,t){if(null==e)throw new Error("Illegal argument "+e);var r=i.wordsToBytes(a(e,t));return t&&t.asBytes?r:t&&t.asString?o.bytesToString(r):i.bytesToHex(r)}},166:(e,t,r)=>{"use strict";r.d(t,{r:()=>l});var i=r(46),n=r(565),s=r(611),o=r(305),a=r.n(o);class l extends i.H{constructor(e,t){super(),this.protocol=2,this.inflate=a().inflateInit(15),this.bpp=1,this.state=0,this.focusMode=0,this.useZRLE=!0,this.frameRateDelay=2,this.canvasCtx=t,this.sparecache={},this.buttonmask=0,this.canvasControl=this.canvasCtx.canvas,this.lastMouseMoveTime=(new Date).getTime(),this.logger=e,this.setDeskFocus=(e,t)=>{},this.getDeskFocus=e=>{}}processData(e){this.onProcessData(e)}onStateChange(e){this.logger.verbose(`state change in AMTDesktop: ${e}`),0===e&&(this.canvasCtx.fillStyle="#FFFFFF",this.canvasCtx.fillRect(0,0,this.canvasCtx.canvas.width,this.canvasCtx.canvas.width))}start(){this.logger.verbose("Starting desktop here"),this.state=0,this.inflate.inflateReset(),this.onKvmDataPending=[],this.onKvmDataAck=-1,this.kvmDataSupported=!1;for(const e in this.sparecache)delete this.sparecache[e]}onSendKvmData(e){!0!==this.onKvmDataAck?this.onKvmDataPending.push(e):((0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.kvmdatatrace)&&console.log(`KVM-Send (${e.length}) data`),e="\0KvmDataChannel\0"+e,this.onSend(String.fromCharCode(6,0,0,0)+n.r.IntToStr(e.length)+e),this.onKvmDataAck=!1)}}},59:(e,t,r)=>{"use strict";r.d(t,{N:()=>n});var i=r(503);class n extends i.K{constructor(e,t,r,i,n,s,o,a,l,c,u){super(e,t,r,i,n,s,o,a,l,c,u)}}},503:(e,t,r)=>{"use strict";r.d(t,{K:()=>l,b:()=>i});var i,n=r(565),s=r(568),o=r.n(s),a=r(611);!function(e){e[e.SOL=1]="SOL",e[e.KVM=2]="KVM",e[e.IDER=3]="IDER"}(i||(i={}));class l{constructor(e,t,r,i,n,s,o,a,l,c,u){this.fileReader=r,this.fileReaderInUse=!1,this.fileReaderAcc=[],this.randomNonceChars="abcdef0123456789",this.host=i,this.port=n,this.user=s,this.pass=o,this.tls=a,this.tlsv1only=l,this.protocol=t,this.RedirectStartSol=String.fromCharCode(16,0,0,0,83,79,76,32),this.RedirectStartKvm=String.fromCharCode(16,1,0,0,75,86,77,82),this.RedirectStartIder=String.fromCharCode(16,0,0,0,73,68,69,82),this.urlvars={},this.server=u,this.amtAccumulator="",this.authUri="",this.logger=e,this.authToken=c}getWsLocation(){return this.isBrowser()&&!(0,a.f)(this.server)?`${window.location.protocol.replace("http","ws")}//\n      ${window.location.host}\n      ${window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/"))}\n      /webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`:`${String(this.server)}/webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`}isBrowser(){try{const e="undefined"!=typeof window;return e&&this.logger.debug("!!!!!BROWSER!!!!!"),e}catch(e){return!1}}start(e){this.connectState=0,this.socket=new e(this.getWsLocation(),this.authToken),this.socket.onopen=this.onSocketConnected.bind(this),this.socket.onmessage=this.onMessage.bind(this),this.socket.onclose=this.onSocketClosed.bind(this),(0,a.f)(this.fileReader)&&(0,a.f)(this.fileReader.readAsBinaryString)?this.fileReader.onload=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsBinaryString(new Blob([this.fileReaderAcc.shift()]))}).bind(this):(0,a.f)(this.fileReader)&&(0,a.f)(this.fileReader.readAsArrayBuffer)&&(this.fileReader.onloadend=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsArrayBuffer(this.fileReaderAcc.shift())}).bind(this)),this.logger.verbose("Connecting to websocket"),this.onStateChange(1)}onSocketConnected(){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&console.log("REDIR-CONNECT"),this.onStateChange(2),this.logger.verbose(`Connected to websocket server. With protocol ${this.protocol} (2 = KVM)`),this.logger.info(`Start Redirect Session for protocol. ${this.protocol}`),this.protocol===i.SOL&&this.socketSend(this.RedirectStartSol),this.protocol===i.KVM&&this.socketSend(this.RedirectStartKvm),this.protocol===i.IDER&&this.socketSend(this.RedirectStartIder)}onMessage(e){try{if(this.inDataCount++,"object"==typeof e.data){if(this.fileReaderInUse)return void this.fileReaderAcc.push(e.data);if(null!=this.fileReader.readAsBinaryString)this.fileReaderInUse=!0,this.fileReader.readAsBinaryString(new Blob([e.data]));else if(null!=this.fileReader.readAsArrayBuffer)this.fileReaderInUse=!0,this.fileReader.readAsArrayBuffer(e.data);else{let t="";const r=new Uint8Array(e.data),i=r.byteLength;for(let e=0;e<i;e++)t+=String.fromCharCode(r[e]);this.onSocketData(t)}}else this.onSocketData(e.data)}catch(e){this.logger.error(e),this.stop(),this.onError()}}onSocketData(e){if((0,a.f)(e)&&-1!==this.connectState){if("object"==typeof e){let t="";const r=new Uint8Array(e),i=r.byteLength;for(let e=0;e<i;e++)t+=String.fromCharCode(r[e]);e=t}else if("string"!=typeof e)return;if((this.protocol===i.KVM||this.protocol===i.IDER)&&1===this.connectState)return this.onProcessData(e);for(this.amtAccumulator+=e;this.amtAccumulator.length>=1;){let e=0;switch(this.amtAccumulator.charCodeAt(0)){case 17:if(this.logger.verbose(`Start Redirection Session reply received for  ${this.protocol}`),this.amtAccumulator.length<4)return;switch(this.amtAccumulator.charCodeAt(1)){case 0:{if(this.logger.verbose("Session status success. Start handshake"),this.amtAccumulator.length<13)return;const t=this.amtAccumulator.charCodeAt(12);if(this.amtAccumulator.length<13+t)return;this.logger.verbose("Query for available authentication"),this.socketSend(String.fromCharCode(19,0,0,0,0,0,0,0,0)),e=13+t;break}default:this.stop()}break;case 20:{if(this.logger.verbose("Available Authentications reply received."),this.amtAccumulator.length<9)return;const t=n.r.ReadIntX(this.amtAccumulator,5);if(this.amtAccumulator.length<9+t)return;const r=this.amtAccumulator.charCodeAt(1),i=this.amtAccumulator.charCodeAt(4),s=[];for(let e=0;e<t;e++)s.push(this.amtAccumulator.charCodeAt(9+e));const o=this.amtAccumulator.substring(9,9+t);if(e=9+t,0===i)(0,a.f)(s.includes(4))?(this.logger.verbose("Good Digest Auth (With cnonce and all)"),this.socketSend(String.fromCharCode(19,0,0,0,4)+n.r.IntToStrX(this.user.length+this.authUri.length+8)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0,0))):(0,a.f)(s.includes(3))?(this.logger.warn("Bad Digest Auth"),this.socketSend(String.fromCharCode(19,0,0,0,3)+n.r.IntToStrX(this.user.length+this.authUri.length+7)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0))):(0,a.f)(s.includes(1))?(this.logger.verbose("Basic Auth"),this.socketSend(String.fromCharCode(19,0,0,0,1)+n.r.IntToStrX(this.user.length+this.pass.length+2)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(this.pass.length)+this.pass)):(this.logger.error("Auth Type not recognized. Stopping."),this.stop());else if(3!==i&&4!==i||1!==r)if(0===r){if(1===this.protocol){const e=1e4,t=100,r=0,i=1e4,s=100,o=0;this.socketSend(String.fromCharCode(32,0,0,0)+n.r.IntToStrX(this.amtSequence++)+n.r.ShortToStrX(e)+n.r.ShortToStrX(t)+n.r.ShortToStrX(r)+n.r.ShortToStrX(i)+n.r.ShortToStrX(s)+n.r.ShortToStrX(o)+n.r.IntToStrX(0))}2===this.protocol&&this.socketSend(String.fromCharCode(64,0,0,0,0,0,0,0)),3===this.protocol&&(this.connectState=1,this.onStateChange(3))}else this.stop();else{let e=0;const t=o.charCodeAt(e),r=o.substring(e+1,e+1+t);e+=t+1;const s=o.charCodeAt(e),a=o.substring(e+1,e+1+s);e+=s+1;let l=0,c=null;const u=this.generateRandomNonce(32),h="00000002";let d="";4===i&&(l=o.charCodeAt(e),c=o.substring(e+1,e+1+l),e+=l+1,d=`${h}:${u}:${String(c)} :`);const f=this.hex_md5(this.hex_md5(this.user+":"+r+":"+this.pass)+":"+a+":"+d+this.hex_md5("POST:"+this.authUri));let p=this.user.length+r.length+a.length+this.authUri.length+u.length+h.length+f.length+7;4===i&&(p+=parseInt(c.length)+1);let v=String.fromCharCode(19,0,0,0,i)+n.r.IntToStrX(p)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(r.length)+r+String.fromCharCode(a.length)+a+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(u.length)+u+String.fromCharCode(h.length)+h+String.fromCharCode(f.length)+f;4===i&&(v=String(v)+(String.fromCharCode(c.length)+String(c))),this.socketSend(v)}break}case 33:if(this.amtAccumulator.length<23)break;this.logger.verbose("Response to settings"),e=23,this.socketSend(String.fromCharCode(39,0,0,0)+n.r.IntToStrX(this.amtSequence++)+String.fromCharCode(0,0,27,0,0,0)),1===this.protocol&&(this.amtKeepAliveTimer=setInterval(this.sendAmtKeepAlive.bind(this),2e3)),this.connectState=1,this.onStateChange(3);break;case 41:if(this.amtAccumulator.length<10)break;this.logger.verbose("Serial Settings"),e=10;break;case 42:{if(this.amtAccumulator.length<10)break;this.logger.verbose("Incoming display data");const t=10+((255&this.amtAccumulator.charCodeAt(9))<<8)+(255&this.amtAccumulator.charCodeAt(8));if(this.amtAccumulator.length<t)break;this.onProcessData(this.amtAccumulator.substring(10,t)),e=t;break}case 43:if(this.amtAccumulator.length<8)break;this.logger.verbose("Keep Alve message"),e=8;break;case 65:if(this.amtAccumulator.length<8)break;this.logger.verbose("KVM traffic. Call onStart handler. And forward rest of acc directly."),this.connectState=1,this.onStart(),this.amtAccumulator.length>8&&this.onProcessData(this.amtAccumulator.substring(8)),e=this.amtAccumulator.length;break;default:return this.logger.error(`Unknown Intel AMT command:  ${this.amtAccumulator.charCodeAt(0)}  acclen=${this.amtAccumulator.length}`),void this.stop()}if(0===e)return;this.amtAccumulator=this.amtAccumulator.substring(e)}}}hex_md5(e){return this.logger.verbose("MD5 the string"),o()(e)}socketSend(e){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&this.logger.verbose(`REDIR-SEND(${e.length}): ${n.r.rstr2hex(e)}`);try{if(null!=this.socket&&1===this.socket.readyState){const t=new Uint8Array(e.length);this.logger.verbose(`Redir Send( ${e.length}): ${n.r.rstr2hex(e)}`);for(let r=0;r<e.length;++r)t[r]=e.charCodeAt(r);this.socket.send(t.buffer)}}catch(e){this.logger.error(`Socket send error: ${String(e)}`)}}send(e){this.logger.verbose("Send called "+e),null!=this.socket&&1===this.connectState&&(this.protocol===i.SOL?this.socketSend(String.fromCharCode(40,0,0,0)+n.r.IntToStrX(this.amtSequence++)+n.r.ShortToStrX(e.length)+e):this.socketSend(e))}sendAmtKeepAlive(){null!=this.socket&&this.socketSend(String.fromCharCode(43,0,0,0)+n.r.IntToStrX(this.amtSequence++))}generateRandomNonce(e){let t="";for(let r=0;r<e;r++)t+=this.randomNonceChars.charAt(Math.floor(Math.random()*this.randomNonceChars.length));return t}onSocketClosed(e){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&console.log("REDIR-CLOSED"),this.logger.warn("Redir Socket Closed"),this.stop()}onStateChange(e){console.info("onstatechange",e),this.state!==e&&(this.state=e,this.onNewState(this.state),null!=this.onStateChanged&&this.onStateChanged(this,this.state))}stop(){this.logger.warn("Stop called on Redirector. Change state to 0 and close Socket."),this.onStateChange(0),this.connectState=-1,this.amtAccumulator="",null!=this.socket&&(this.socket.close(),this.socket=null),null!=this.amtKeepAliveTimer&&(clearInterval(this.amtKeepAliveTimer),this.amtKeepAliveTimer=null)}}},277:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});class i{constructor(){this.terminalEmulation=1,this.fxEmulation=0,this.fxLineBreak=0,this.AsciiToUnicode=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,171,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.AsciiToUnicodeIntel=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,174,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.StateChange=e=>{},this.TermSendKeys=e=>this.onSend(e)}}},237:(e,t,r)=>{"use strict";r.d(t,{k:()=>n});var i=r(201);class n{constructor(e){this.minLevel=e}log(e,t){switch(e){case i.i.VERBOSE:this.verbose(t);break;case i.i.INFO:this.info(t);break;case i.i.DEBUG:this.debug(t);break;case i.i.WARNING:this.warn(t);break;case i.i.ERROR:this.error(t)}}debug(e){this.minLevel>=i.i.DEBUG&&console.debug(e)}info(e){this.minLevel>=i.i.INFO&&console.info(e)}error(e){this.minLevel>=i.i.ERROR&&console.error(e)}warn(e){this.minLevel>=i.i.WARNING&&console.warn(e)}verbose(e){this.minLevel>=i.i.VERBOSE&&console.log(e)}}},565:(e,t,r)=>{"use strict";r.d(t,{r:()=>n});var i=r(611);const n={ReadShort:(e,t)=>(e.charCodeAt(t)<<8)+e.charCodeAt(t+1),ReadShortX:(e,t)=>(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ReadInt:(e,t)=>16777216*e.charCodeAt(t)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadSInt:(e,t)=>(e.charCodeAt(t)<<24)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadIntX:(e,t)=>16777216*e.charCodeAt(t+3)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ShortToStr:e=>String.fromCharCode(e>>8&255,255&e),ShortToStrX:e=>String.fromCharCode(255&e,e>>8&255),IntToStr:e=>String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e),IntToStrX:e=>String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255),SplitArray:e=>e.split(","),Clone:e=>JSON.parse(JSON.stringify(e)),EscapeHtml:e=>"string"==typeof e?e.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"boolean"==typeof e||"number"==typeof e?e:void 0,ArrayElementMove(e,t,r){e.splice(r,0,e.splice(t,1)[0])},ObjectToStringEx(e,t){let r="";if(0!==e&&(!(0,i.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const i in e)r=r+"<br />"+String(this.gap(t))+"Item #"+String(i)+": "+String(this.ObjectToStringEx(e[i],t+1));else if(e instanceof Object)for(const i in e)r=r+"<br />"+String(this.gap(t))+String(i)+" = "+String(this.ObjectToStringEx(e[i],t+1));else r+=String(this.EscapeHtml(e));return r},ObjectToStringEx2(e,t){let r="";if(0!==e&&(!(0,i.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const i in e)r=r+"\r\n"+String(this.gap2(t))+"Item #"+String(i)+": "+String(this.ObjectToStringEx2(e[i],t+1));else if(e instanceof Object)for(const i in e)r=r+"\r\n"+String(this.gap2(t))+String(i)+" = "+String(this.ObjectToStringEx2(e[i],t+1));else r+=String(this.EscapeHtml(e));return r},gap(e){let t="";for(let r=0;r<4*e;r++)t+="&nbsp;";return t},gap2(e){let t="";for(let r=0;r<4*e;r++)t+=" ";return t},ObjectToString(e){return this.ObjectToStringEx(e,0)},ObjectToString2(e){return this.ObjectToStringEx2(e,0)},char2hex:e=>(e+256).toString(16).substr(-2).toUpperCase(),rstr2hex(e){let t,r="";for(t=0;t<e.length;t++)r+=String(this.char2hex(e.charCodeAt(t)));return r},encode_utf8:e=>unescape(encodeURIComponent(e)),decode_utf8:e=>decodeURIComponent(escape(e)),data2blob(e){const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return new Blob([new Uint8Array(t)])},random:e=>Math.floor(Math.random()*e),trademarks:e=>e.replace(/\(R\)/g,"&reg;").replace(/\(TM\)/g,"&trade;")}},46:(e,t,r)=>{"use strict";r.d(t,{H:()=>i});class i{processData(e){}onStateChange(e){}start(){}onSendKvmData(e){}}},784:(e,t,r)=>{"use strict";r.d(t,{$:()=>s});var i=r(989),n=r(611);class s{constructor(e,t,r){this.acc="",this.stateProcessorFac=new i.v(t,r,this.updateRFBState.bind(this)),this.parent=r,this.logger=e}processData(e){if(!(0,n.f)(e))return;this.acc+=e;let t=0;for(this.logger.verbose(`Process Data ACC length:  ${this.acc.length}`);this.acc.length>0;){const e=this.stateProcessorFac.getProcessor(this.parent.state),r=this.parent.state;if(t=e.processState(this.acc),this.logger.verbose(`State  ${r}  Processed. cmdSize returned ${t}`),0===t)return;this.acc=this.acc.substring(t),this.logger.verbose(`remaining acc  ${this.acc.length} command size: ${t} new parent state: ${this.parent.state}`)}}updateRFBState(e){this.parent.state=e}}},679:(e,t,r)=>{"use strict";r.d(t,{X:()=>n});var i=r(644);class n{constructor(e){this.parent=e}Decode(e,t,r,n,s,o,a,l){const c=e.charCodeAt(t++);let u,h,d;const f={};let p,v=0,g=0;if(0===c){for(this.parent.logger.verbose("Raw encoding"),p=0;p<a;p++)i.j.setPixel(this.parent,e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),p);i.j.putImage(this.parent,r,n)}else if(1===c){h=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),this.parent.canvasCtx.fillStyle="rgb("+(1===this.parent.bpp?`${224&h}, ${(28&h)<<3}, ${i.j.fixColor((3&h)<<6)}`:`${h>>8&248}, ${h>>3&252},${(31&h)<<3}`)+")",this.parent.logger.verbose("fillstyle: "+this.parent.canvasCtx.fillStyle);const a=i.j.rotX(this.parent,r,n);n=i.j.rotY(this.parent,r,n),r=a,this.parent.canvasCtx.fillRect(r,n,s,o)}else if(c>1&&c<17){this.parent.logger.verbose("Read the packed palette");let s=4,o=15;for(p=0;p<c;p++)f[p]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(2===c?(s=1,o=1):c<=4&&(s=2,o=3);v<a&&t<e.length;)for(h=e.charCodeAt(t++),p=8-s;p>=0;p-=s)i.j.setPixel(this.parent,f[h>>p&o],v++);i.j.putImage(this.parent,r,n)}else if(128===c){for(this.parent.logger.verbose("RLE encoded tile");v<a&&t<e.length;){h=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),g=1;do{g+=d=e.charCodeAt(t++)}while(255===d);for(;--g>=0;)i.j.setPixel(this.parent,h,v++)}i.j.putImage(this.parent,r,n)}else if(c>129){for(this.parent.logger.verbose("Read the RLE palette"),p=0;p<c-128;p++)f[p]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(this.parent.logger.verbose("Decode RLE on palette");v<a&&t<e.length;){if(g=1,u=e.charCodeAt(t++),h=f[u%128],u>127)do{g+=d=e.charCodeAt(t++)}while(255===d);for(;--g>=0;)i.j.setPixel(this.parent,h,v++)}i.j.putImage(this.parent,r,n)}}}},646:(e,t,r)=>{"use strict";r.d(t,{$:()=>i.$,X:()=>n.X});var i=r(784),n=r(679)},663:(e,t,r)=>{"use strict";var i;r.d(t,{i:()=>i}),function(e){e[e.VERBOSE=5]="VERBOSE",e[e.INFO=4]="INFO",e[e.DEBUG=3]="DEBUG",e[e.WARNING=2]="WARNING",e[e.ERROR=1]="ERROR"}(i||(i={}))},201:(e,t,r)=>{"use strict";r.d(t,{i:()=>i.i});var i=r(663)},725:(e,t,r)=>{"use strict";r.d(t,{e:()=>s});var i=r(565),n=r(8);class s{constructor(e,t,r,i){this.wsSocket=e,this.parent=t,this.rleDecoder=r,this.updateRFBState=i}processState(e){let t=0;if(e.length>=12){const r=i.r.ReadShort(e,0),s=i.r.ReadShort(e,2),o=i.r.ReadShort(e,4),a=i.r.ReadShort(e,6),l=o*a,c=i.r.ReadInt(e,8);if(c<17){if(o<1||o>64||a<1||a>64)throw this.parent.logger.error(`Invalid tile size (${o},${a}), disconnecting.`),new Error("Invalid tile size");if(this.parent.sparew!==o||this.parent.spareh!==a){this.parent.sparew=this.parent.sparew2=o,this.parent.spareh=this.parent.spareh2=a,1!==this.parent.rotation&&3!==this.parent.rotation||(this.parent.sparew2=a,this.parent.spareh2=o);const e=`${this.parent.sparew2}x${this.parent.spareh2}`;this.parent.spare=this.parent.sparecache[e],(0,n.fQ)(this.parent.spare)||(this.parent.sparecache[e]=this.parent.spare=this.parent.canvasCtx.createImageData(this.parent.sparew2,this.parent.spareh2))}}if(4294967073===c)this.parent.logger.verbose("Desktop size"),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=o,this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=a,this.wsSocket.send(String.fromCharCode(3,0,0,0,0,0)+i.r.ShortToStr(this.parent.width)+i.r.ShortToStr(this.parent.height)),t=12,null!=this.parent.onScreenSizeChange&&this.parent.onScreenSizeChange(this.parent.ScreenWidth,this.parent.ScreenHeight);else if(0===c){let i=12;const o=12+l*this.parent.bpp;if(e.length<o)return 0;t=o;for(let t=0;t<l;t++)n.jw.setPixel(this.parent,e.charCodeAt(i++)+(2===this.parent.bpp?e.charCodeAt(i++)<<8:0),t);n.jw.putImage(this.parent,r,s)}else{if(16!==c)throw this.parent.logger.error(`Unknown Encoding: ${c} , HEX: ${i.r.rstr2hex(e)}`),new Error(`Unknown Encoding: ${c}`);{if(e.length<16)return 0;const n=i.r.ReadInt(e,12);if(e.length<16+n)return 0;const c=16,u=5,h=0;if(n>5&&0===e.charCodeAt(c)&&i.r.ReadShortX(e,c+1)===n-u)this.rleDecoder.Decode(e,c+5,r,s,o,a,l,n);else{const t=e.substring(c,c+n-h),i=this.parent.inflate.inflate(t);if(!(i.length>0))throw this.parent.logger.error("Invalid deflate data."),new Error("invalid deflate data");this.rleDecoder.Decode(i,0,r,s,o,a,l,i.length)}t=16+n}}if(100==--this.parent.state){this.parent.logger.debug("Frame completed. Update state and request new frame"),this.updateRFBState(4);const e=()=>n.Xn.sendRefresh(this.parent,this.wsSocket);0===this.parent.frameRateDelay?n.Xn.sendRefresh(this.parent,this.wsSocket):setTimeout(e,this.parent.frameRateDelay)}}return t}}},70:(e,t,r)=>{"use strict";r.d(t,{U:()=>n});var i=r(565);class n{constructor(e,t,r){this.wsSocket=e,this.serverCutTextHandler=t,this.updateRFBState=r}processState(e){let t=0,r=0;switch(e.charCodeAt(0)){case 0:if(e.length<4)return 0;this.updateRFBState(100+i.r.ReadShort(e,2)),t=4;break;case 2:t=1;break;case 3:if(e.length<8)return 0;if(r=i.r.ReadInt(e,4)+8,e.length<r)return 0;t=this.serverCutTextHandler.handleServerCutText(e)}return t}}},212:(e,t,r)=>{"use strict";r.d(t,{w:()=>i});class i{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=12?(t=12,this.updateRFBState(1),this.wsSocket.send("RFB 003.008\n"),t):0}}},26:(e,t,r)=>{"use strict";r.d(t,{l:()=>i});class i{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=1?(t=e.charCodeAt(0)+1,this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(2),t):0}}},724:(e,t,r)=>{"use strict";r.d(t,{m:()=>n});var i=r(565);class n{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;if(e.length>=4){if(t=4,0!==i.r.ReadInt(e,0))throw new Error("Error. Stopping. Security response not None.");return this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(3),t}return 0}}},256:(e,t,r)=>{"use strict";r.d(t,{I:()=>s});var i=r(565),n=r(611);class s{constructor(e,t){this.wsSocket=e,this.parent=t}handleServerCutText(e){if(e.length<8)return 0;const t=i.r.ReadInt(e,4)+8;if(e.length<t)return 0;if(null!=this.parent.onKvmData){const r=e.substring(8,t);r.length>=16&&"\0KvmDataChannel"===r.substring(0,15)&&(this.parent.kvmDataSupported||(this.parent.kvmDataSupported=!0,console.log("KVM Data Channel Supported.")),(-1===this.parent.onKvmDataAck&&16===r.length||0!==r.charCodeAt(15))&&(this.parent.onKvmDataAck=!0),(0,n.f)(this.parent.urlvars)&&(0,n.f)(this.parent.urlvars.kvmdatatrace)&&console.log(`KVM-Recv((${r.length-16})):  ${r.substring(16)}`),r.length>16&&this.parent.onKvmData(r.substring(16)),!0===this.parent.onKvmDataAck&&this.parent.onKvmDataPending.length>0&&this.wsSocket.onSendKvmData(this.parent.onKvmDataPending.shift()))}return t}}},946:(e,t,r)=>{"use strict";r.d(t,{C:()=>s});var i=r(565),n=r(173);class s{constructor(e,t,r){this.wsSocket=e,this.parent=t,this.updateRFBState=r}processState(e){let t=0;if(e.length>=24){this.parent.rotation=0;const r=i.r.ReadInt(e,20);if(e.length<24+r)return 0;t=24+r,null!=this.parent.updateScreenDimensions&&this.parent.updateScreenDimensions(i.r.ReadShort(e,0),i.r.ReadShort(e,2)),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=i.r.ReadShort(e,0),this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=i.r.ReadShort(e,2);let s="";return this.parent.useZRLE&&(s+=i.r.IntToStr(16)),s+=i.r.IntToStr(0),s+=i.r.IntToStr(1092),this.parent.logger.verbose("Send supported encodings"),this.wsSocket.send(String.fromCharCode(2,0)+i.r.ShortToStr(s.length/4+1)+s+i.r.IntToStr(-223)),1===this.parent.bpp&&this.wsSocket.send(String.fromCharCode(0,0,0,0,8,8,0,1)+i.r.ShortToStr(7)+i.r.ShortToStr(7)+i.r.ShortToStr(3)+String.fromCharCode(5,2,0,0,0,0)),this.updateRFBState(4),this.parent.onStateChange(3),this.parent.logger.info("Start new frame."),n.X.sendRefresh(this.parent,this.wsSocket),this.parent.oldMouseX=-1,t}return 0}}},389:(e,t,r)=>{"use strict";r.d(t,{Cu:()=>l.C,Ut:()=>s.U,ez:()=>i.e,ll:()=>o.l,mC:()=>a.m,wW:()=>n.w});var i=r(725),n=r(212),s=r(70),o=r(26),a=r(724),l=r(946)},989:(e,t,r)=>{"use strict";r.d(t,{v:()=>o});var i=r(389),n=r(256),s=r(679);class o{constructor(e,t,r){this.stateProcessors={},this.stateProcessors[0]=new i.wW(e,r),this.stateProcessors[1]=new i.ll(e,r),this.stateProcessors[2]=new i.mC(e,r),this.stateProcessors[3]=new i.Cu(e,t,r);const o=new n.I(e,t);this.stateProcessors[4]=new i.Ut(e,o,r),this.stateProcessors["100plus"]=new i.ez(e,t,new s.X(t),r)}getProcessor(e){return e<=100?this.stateProcessors[e]:this.stateProcessors["100plus"]}}},155:(e,t,r)=>{"use strict";r.d(t,{Q:()=>i});class i{constructor(e){this.processData=e=>{null!=this.terminal.capture&&(this.terminal.capture=String(this.terminal.capture)+e);let t="";for(let r=0;r<e.length;r++){const i=e.charCodeAt(r);"J"===e[r]?this.clearTerminal():t+=0!=(128&i)?String.fromCharCode(this.terminal.AsciiToUnicode[127&i]):`${e[r]}`}this.processDataToXterm(t)},this.terminal=e}}},38:(e,t,r)=>{"use strict";r.d(t,{q:()=>s});var i=r(923),n=r(611);const s={convertAMTKeyCode:e=>(0,n.f)(e.code.startsWith("Key"))&&4===e.code.length?e.code.charCodeAt(3)+(!1===e.shiftKey?32:0):(0,n.f)(e.code.startsWith("Digit"))&&6===e.code.length?e.code.charCodeAt(5):(0,n.f)(e.code.startsWith("Numpad"))&&7===e.code.length?e.code.charCodeAt(6):i.Z[e.code]}},923:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});const i={Pause:19,CapsLock:20,Space:32,Quote:39,Minus:45,NumpadMultiply:42,NumpadAdd:43,PrintScreen:44,Comma:44,NumpadSubtract:45,NumpadDecimal:46,Period:46,Slash:47,NumpadDivide:47,Semicolon:59,Equal:61,OSLeft:91,BracketLeft:91,OSRight:91,Backslash:92,BracketRight:93,ContextMenu:93,Backquote:96,NumLock:144,ScrollLock:145,Backspace:65288,Tab:65289,Enter:65293,NumpadEnter:65293,Escape:65307,Delete:65535,Home:65360,PageUp:65365,PageDown:65366,ArrowLeft:65361,ArrowUp:65362,ArrowRight:65363,ArrowDown:65364,End:65367,Insert:65379,F1:65470,F2:65471,F3:65472,F4:65473,F5:65474,F6:65475,F7:65476,F8:65477,F9:65478,F10:65479,F11:65480,F12:65481,ShiftLeft:65505,ShiftRight:65506,ControlLeft:65507,ControlRight:65508,AltLeft:65513,AltRight:65514,MetaLeft:65511,MetaRight:65512}},173:(e,t,r)=>{"use strict";r.d(t,{X:()=>s});var i=r(565),n=r(611);const s={sendRefresh(e,t){if(!e.holding)if(e.focusMode>0){const r=2*e.focusMode;t.send(String.fromCharCode(3,1)+i.r.ShortToStr(Math.max(Math.min(e.oldMouseX,e.lastMouseX)-e.focusMode,0))+i.r.ShortToStr(Math.max(Math.min(e.oldMouseY,e.lastMouseY)-e.focusMode,0))+i.r.ShortToStr(r+Math.abs(e.oldMouseX-e.lastMouseX))+i.r.ShortToStr(r+Math.abs(e.oldMouseY-e.lastMouseY))),e.oldMouseX=e.lastMouseX,e.oldMouseY=e.lastMouseY}else t.send(String.fromCharCode(3,1,0,0,0,0)+i.r.ShortToStr(e.rwidth)+i.r.ShortToStr(e.rheight))},sendKey(e,t,r){if("object"==typeof t)for(const r in t)this.sendKey(e,t[r][0],t[r][1]);else e.send(String.fromCharCode(4,r,0,0)+i.r.IntToStr(t))},sendKvmData(e,t,r){!0!==e.onKvmDataAck?e.onKvmDataPending.push(r):((0,n.f)(e.urlvars)&&(0,n.f)(e.urlvars.kvmdatatrace)&&console.log(`KVM-Send(${String(r.length)}): ${String(r)}`),r="\0KvmDataChannel\0"+String(r),t.send(`${String.fromCharCode(6,0,0,0)}${i.r.IntToStr(r.length)}${String(r)}`),e.onKvmDataAck=!1)},sendKeepAlive(e,t){e.lastKeepAlive<Date.now()-5e3&&(e.lastKeepAlive=Date.now(),t.send(String.fromCharCode(6,0,0,0)+i.r.IntToStr(16)+"\0KvmDataChannel\0"))},sendCtrlAltDelMsg(e){this.sendCad(e)},sendCad(e){this.sendKey(e,65507,1),this.sendKey(e,65513,1),this.sendKey(e,65535,1),this.sendKey(e,65535,0),this.sendKey(e,65513,0),this.sendKey(e,65507,0)}}},644:(e,t,r)=>{"use strict";r.d(t,{j:()=>i});const i={putImage(e,t,r){if(e.holding)return;const n=i.arotX(e,t,r);r=i.arotY(e,t,r),t=n,e.canvasCtx.putImageData(e.spare,t,r)},setPixel(e,t,r){let n,s,o=4*r;e.rotation>0&&(1===e.rotation?(n=r%e.sparew,s=Math.floor(r/e.sparew),o=4*(r=n*e.sparew2+(e.sparew2-1-s))):2===e.rotation?o=e.sparew*e.spareh*4-4-o:3===e.rotation&&(n=r%e.sparew,s=Math.floor(r/e.sparew),o=4*(r=(e.sparew2-1-n)*e.sparew2+s))),1===e.bpp?(e.spare.data[o++]=224&t,e.spare.data[o++]=(28&t)<<3,e.spare.data[o++]=i.fixColor((3&t)<<6)):(e.spare.data[o++]=t>>8&248,e.spare.data[o++]=t>>3&252,e.spare.data[o++]=(31&t)<<3),e.spare.data[o]=255},arotX:(e,t,r)=>0===e.rotation?t:1===e.rotation?e.canvasCtx.canvas.width-e.sparew2-r:2===e.rotation?e.canvasCtx.canvas.width-e.sparew2-t:3===e.rotation?r:0,arotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?t:2===e.rotation?e.canvasCtx.canvas.height-e.spareh2-r:3===e.rotation?e.canvasCtx.canvas.height-e.spareh-t:0,crotX:(e,t,r)=>0===e.rotation?t:1===e.rotation?r:2===e.rotation?e.canvasCtx.canvas.width-t:3===e.rotation?e.canvasCtx.canvas.height-r:0,crotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?e.canvasCtx.canvas.width-t:2===e.rotation?e.canvasCtx.canvas.height-r:3===e.rotation?t:0,rotX:(e,t,r)=>0===e.rotation||1===e.rotation?t:2===e.rotation?t-e.canvasCtx.canvas.width:3===e.rotation?t-e.canvasCtx.canvas.height:0,rotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?r-e.canvasCtx.canvas.width:2===e.rotation?r-e.canvasCtx.canvas.height:3===e.rotation?r:0,setRotation(e,t){for(;t<0;)t+=4;const r=t%4;if(e.holding)return e.rotation=r,!1;if(r===e.rotation)return!0;let n=e.canvasCtx.canvas.width,s=e.canvasCtx.canvas.height;1!==e.rotation&&3!==e.rotation||(n=e.canvasCtx.canvas.height,s=e.canvasCtx.canvas.width),null==e.tcanvas&&(e.tcanvas=document.createElement("canvas"));const o=e.tcanvas.getContext("2d");return o.setTransform(1,0,0,1,0,0),o.canvas.width=n,o.canvas.height=s,o.rotate(-90*e.rotation*Math.PI/180),0===e.rotation&&o.drawImage(e.canvasCtx.canvas,0,0),1===e.rotation&&o.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,0),2===e.rotation&&o.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,-e.canvasCtx.canvas.height),3===e.rotation&&o.drawImage(e.canvasCtx.canvas,0,-e.canvasCtx.canvas.height),0!==e.rotation&&2!==e.rotation||(e.canvasCtx.canvas.height=n,e.canvasCtx.canvas.width=s),1!==e.rotation&&3!==e.rotation||(e.canvasCtx.canvas.height=s,e.canvasCtx.canvas.width=n),e.canvasCtx.setTransform(1,0,0,1,0,0),e.canvasCtx.rotate(90*r*Math.PI/180),e.rotation=r,e.canvasCtx.drawImage(e.tcanvas,i.rotX(e,0,0),i.rotY(e,0,0)),e.width=e.canvasCtx.canvas.width,e.height=e.canvasCtx.canvas.height,null!=e.onScreenResize&&e.onScreenResize(e.width,e.height,e.canvasId),!0},fixColor:e=>e>127?e+32:e}},717:(e,t,r)=>{"use strict";r.d(t,{E:()=>a});var i,n=r(38),s=r(173),o=r(611);!function(e){e[e.Up=0]="Up",e[e.Down=1]="Down"}(i||(i={}));class a{constructor(e,t){this.Comms=t,this.parent=e}GrabKeyInput(){this.KeyInputGrab||(document.onkeyup=this.handleKeyUp.bind(this),document.onkeydown=this.handleKeyDown.bind(this),document.onkeypress=this.handleKeys.bind(this),this.KeyInputGrab=!0)}UnGrabKeyInput(){this.KeyInputGrab&&(document.onkeyup=null,document.onkeydown=null,document.onkeypress=null,this.KeyInputGrab=!1)}handleKeys(e){return this.haltEvent(e)}haltEvent(e){return(0,o.f)(e.preventDefault)&&e.preventDefault(),(0,o.f)(e.stopPropagation)&&e.stopPropagation(),!1}handleKeyUp(e){return this.handleKeyEvent(i.Up,e)}handleKeyDown(e){return this.handleKeyEvent(i.Down,e)}handleKeyEvent(e,t){let r=t;if((0,o.f)(r)||(r=window.event),(0,o.f)(r.code)){const t=n.q.convertAMTKeyCode(r);this.parent.logger.verbose(`Key ${e} : ${String(t)}`),null!=t&&s.X.sendKey(this.Comms,t,e)}else{let t=r.keyCode;173===t&&(t=189),61===t&&(t=187);let i=t;!1===r.shiftKey&&t>=65&&t<=90&&(i=t+32),t>=112&&t<=124&&(i=t+65358),8===t&&(i=65288),9===t&&(i=65289),13===t&&(i=65293),16===t&&(i=65505),17===t&&(i=65507),18===t&&(i=65513),27===t&&(i=65307),33===t&&(i=65365),34===t&&(i=65366),35===t&&(i=65367),36===t&&(i=65360),37===t&&(i=65361),38===t&&(i=65362),39===t&&(i=65363),40===t&&(i=65364),45===t&&(i=65379),46===t&&(i=65535),t>=96&&t<=105&&(i=t-48),106===t&&(i=42),107===t&&(i=43),109===t&&(i=45),110===t&&(i=46),111===t&&(i=47),186===t&&(i=59),187===t&&(i=61),188===t&&(i=44),189===t&&(i=45),190===t&&(i=46),191===t&&(i=47),192===t&&(i=96),219===t&&(i=91),220===t&&(i=92),221===t&&(i=93),222===t&&(i=39),this.parent.logger.verbose(`Key ${e}: ${t}  = ${i}`),s.X.sendKey(this.Comms,i,e)}return this.haltEvent(r)}}},33:(e,t,r)=>{"use strict";r.d(t,{x:()=>o});var i=r(565),n=r(644),s=r(611);class o{constructor(e,t,r){this.topposition=0,this.leftposition=0,this.parent=e,this.comm=t,this.debounceTime=r,this.mouseClickCompleted=!0,this.lastEvent=null}GrabMouseInput(){this.MouseInputGrab||(this.MouseInputGrab=!0)}UnGrabMouseInput(){if(!this.MouseInputGrab)return;const e=this.parent.canvasCtx.canvas;e.onmousemove=null,e.onmouseup=null,e.onmousedown=null,this.MouseInputGrab=!1}mousedown(e){return this.parent.buttonmask|=1<<e.button,this.mousemove(e)}mouseup(e){return this.parent.buttonmask&=65535-(1<<e.button),this.mousemove(e)}mousemove(e){if(4!==this.parent.state)return!0;const t=this.getPositionOfControl(this.parent.canvasControl),r=this.parent.canvasControl.getBoundingClientRect();(0===this.topposition||r.top>this.topposition)&&(this.topposition=r.top),(0===this.leftposition||r.left>this.leftposition)&&(this.leftposition=r.left);const o=this.topposition-r.top,a=this.leftposition-r.left;if(this.parent.lastMouseX=(e.pageX-t[0]+a)*(this.parent.canvasControl.height/this.parent.canvasControl.offsetHeight),this.parent.lastMouseY=(e.pageY-t[1]+o)*(this.parent.canvasControl.width/this.parent.canvasControl.offsetWidth),(0,s.f)(this.parent.noMouseRotate)||(this.parent.lastMouseX2=n.j.crotX(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseY=n.j.crotY(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseX=this.parent.lastMouseX2),this.comm.send(String.fromCharCode(5,this.parent.buttonmask)+i.r.ShortToStr(this.parent.lastMouseX)+i.r.ShortToStr(this.parent.lastMouseY)),this.parent.setDeskFocus("DeskFocus",this.parent.focusMode),0!==this.parent.focusMode){const e=Math.min(this.parent.lastMouseX,this.parent.canvasControl.width-this.parent.focusMode),r=Math.min(this.parent.lastMouseY,this.parent.canvasControl.height-this.parent.focusMode),i=2*this.parent.focusMode,n=this.parent.canvasControl,s=n.offsetHeight/this.parent.canvasControl.height,o=n.offsetWidth/this.parent.canvasControl.width,a=this.parent.getDeskFocus("DeskFocus"),l=this.getPositionOfControl(this.parent.canvasControl.parentElement);a.left=`${Math.max((e-this.parent.focusMode)*s,0)+(t[0]-l[0])}px`,a.top=`${Math.max((r-this.parent.focusMode)*o,0)+(t[1]-l[1])}px`,a.width=i*s-6+"px",a.height=i*s-6+"px"}return this.haltEvent(e)}haltEvent(e){return(0,s.f)(e.preventDefault)&&e.preventDefault(),(0,s.f)(e.stopPropagation)&&e.stopPropagation(),!1}getPositionOfControl(e){const t=[0,0];let r=e;for(;null!=r;)t[0]=Number(t[0])+Number(r.offsetLeft),t[1]=Number(t[1])+Number(r.offsetTop),r=r.offsetParent;return t}}},611:(e,t,r)=>{"use strict";r.d(t,{f:()=>i});const i=e=>null!=e&&""!==e&&!1!==e&&0!==e},8:(e,t,r)=>{"use strict";r.d(t,{EB:()=>o.E,Xn:()=>n.X,fQ:()=>l.f,jw:()=>s.j,qD:()=>i.q,xx:()=>a.x});var i=r(38),n=r(173),s=r(644),o=r(717),a=r(33),l=r(611)},305:module=>{var ZLIB=ZLIB||{},BASE,NMAX;void 0===ZLIB.common_initialized&&(ZLIB.Z_NO_FLUSH=0,ZLIB.Z_PARTIAL_FLUSH=1,ZLIB.Z_SYNC_FLUSH=2,ZLIB.Z_FULL_FLUSH=3,ZLIB.Z_FINISH=4,ZLIB.Z_BLOCK=5,ZLIB.Z_TREES=6,ZLIB.Z_OK=0,ZLIB.Z_STREAM_END=1,ZLIB.Z_NEED_DICT=2,ZLIB.Z_ERRNO=-1,ZLIB.Z_STREAM_ERROR=-2,ZLIB.Z_DATA_ERROR=-3,ZLIB.Z_MEM_ERROR=-4,ZLIB.Z_BUF_ERROR=-5,ZLIB.Z_VERSION_ERROR=-6,ZLIB.Z_DEFLATED=8,ZLIB.z_stream=function(){this.next_in=0,this.avail_in=0,this.total_in=0,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=null,this.state=null,this.data_type=0,this.adler=0,this.input_data="",this.output_data="",this.error=0,this.checksum_function=null},ZLIB.gz_header=function(){this.text=0,this.time=0,this.xflags=0,this.os=255,this.extra=null,this.extra_len=0,this.extra_max=0,this.name=null,this.name_max=0,this.comment=null,this.comm_max=0,this.hcrc=0,this.done=0},ZLIB.common_initialized=!0),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-inflate.js"),function(){var DEF_WBITS=15,HEAD=0,FLAGS=1,TIME=2,OS=3,EXLEN=4,EXTRA=5,NAME=6,COMMENT=7,HCRC=8,DICTID=9,DICT=10,TYPE=11,TYPEDO=12,STORED=13,COPY_=14,COPY=15,TABLE=16,LENLENS=17,CODELENS=18,LEN_=19,LEN=20,LENEXT=21,DIST=22,DISTEXT=23,MATCH=24,LIT=25,CHECK=26,LENGTH=27,DONE=28,BAD=29,MEM=30,SYNC=31,ENOUGH_LENS=852,ENOUGH_DISTS=592,ENOUGH=ENOUGH_LENS+ENOUGH_DISTS,CODES=0,LENS=1,DISTS=2,inflate_table_lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],inflate_table_lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,203,69],inflate_table_dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],inflate_table_dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];function inflate_table(e,t){var r,i,n,s,o,a,l,c,u,h,d,f,p,v,g,_,m,b,y,S,C,w,k=e.next,E=t==DISTS?e.distbits:e.lenbits,A=e.work,x=e.lens,L=t==DISTS?e.nlen:0,R=e.codes;r=t==LENS?e.nlen:t==DISTS?e.ndist:19;var T=new Array(16),D=new Array(16);for(i=0;i<=15;i++)T[i]=0;for(n=0;n<r;n++)T[x[L+n]]++;for(a=E,o=15;o>=1&&0==T[o];o--);if(a>o&&(a=o),0==o)return _={op:64,bits:1,val:0},R[k++]=_,R[k++]=_,t==DISTS?e.distbits=1:e.lenbits=1,e.next=k,0;for(s=1;s<o&&0==T[s];s++);for(a<s&&(a=s),u=1,i=1;i<=15;i++)if(u<<=1,(u-=T[i])<0)return-1;if(u>0&&(t==CODES||1!=o))return e.next=k,-1;for(D[1]=0,i=1;i<15;i++)D[i+1]=D[i]+T[i];for(n=0;n<r;n++)0!=x[L+n]&&(A[D[x[L+n]]++]=n);switch(t){case CODES:b=S=A,y=0,C=0,w=19;break;case LENS:b=inflate_table_lbase,y=-257,S=inflate_table_lext,C=-257,w=256;break;default:b=inflate_table_dbase,S=inflate_table_dext,y=0,C=0,w=-1}if(d=0,n=0,i=s,m=k,l=a,c=0,v=-1,g=(h=1<<a)-1,t==LENS&&h>=ENOUGH_LENS||t==DISTS&&h>=ENOUGH_DISTS)return e.next=k,1;for(;;){_={op:0,bits:i-c,val:0},A[n]<w?_.val=A[n]:A[n]>w?(_.op=S[C+A[n]],_.val=b[y+A[n]]):_.op=96,f=1<<i-c,s=p=1<<l;do{R[m+(d>>>c)+(p-=f)]=_}while(0!=p);for(f=1<<i-1;d&f;)f>>>=1;if(0!=f?(d&=f-1,d+=f):d=0,n++,0==--T[i]){if(i==o)break;i=x[L+A[n]]}if(i>a&&(d&g)!=v){for(0==c&&(c=a),m+=s,u=1<<(l=i-c);l+c<o&&!((u-=T[l+c])<=0);)l++,u<<=1;if(h+=1<<l,t==LENS&&h>=ENOUGH_LENS||t==DISTS&&h>=ENOUGH_DISTS)return e.next=k,1;R[k+(v=d&g)]={op:l,bits:a,val:m-k}}}return 0!=d&&(R[m+d]={op:64,bits:i-c,val:0}),e.next=k+h,t==DISTS?e.distbits=a:e.lenbits=a,0}function inflate_fast(e,t){var r,i,n,s,o,a,l,c,u,h,d,f,p,v,g,_,m,b,y,S,C,w,k=-1,E=-1;r=e.state,i=e.input_data,s=(n=e.next_in)+e.avail_in-5,a=(o=e.next_out)-(t-e.avail_out),l=o+(e.avail_out-257),c=r.wsize,u=r.whave,h=r.wnext,d=r.window,f=r.hold,p=r.bits,v=r.codes,g=r.lencode,_=r.distcode,m=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(f+=(255&i.charCodeAt(n++))<<p,p+=8,f+=(255&i.charCodeAt(n++))<<p,p+=8),y=v[g+(f&m)];t:for(;;){if(f>>>=S=y.bits,p-=S,0==(S=y.op))e.output_data+=String.fromCharCode(y.val),o++;else{if(!(16&S)){if(0==(64&S)){y=v[g+(y.val+(f&(1<<S)-1))];continue t}if(32&S){r.mode=TYPE;break e}e.msg="invalid literal/length code",r.mode=BAD;break e}C=y.val,(S&=15)&&(p<S&&(f+=(255&i.charCodeAt(n++))<<p,p+=8),C+=f&(1<<S)-1,f>>>=S,p-=S),p<15&&(f+=(255&i.charCodeAt(n++))<<p,p+=8,f+=(255&i.charCodeAt(n++))<<p,p+=8),y=v[_+(f&b)];r:for(;;){if(f>>>=S=y.bits,p-=S,!(16&(S=y.op))){if(0==(64&S)){y=v[_+(y.val+(f&(1<<S)-1))];continue r}e.msg="invalid distance code",r.mode=BAD;break e}if(w=y.val,p<(S&=15)&&(f+=(255&i.charCodeAt(n++))<<p,(p+=8)<S&&(f+=(255&i.charCodeAt(n++))<<p,p+=8)),w+=f&(1<<S)-1,f>>>=S,p-=S,w>(S=o-a)){if((S=w-S)>u&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break e}k=0,E=-1,0==h?(k+=c-S,S<C&&(C-=S,e.output_data+=d.substring(k,k+S),o+=S,S=0,k=-1,E=o-w)):(k+=h-S,S<C&&(C-=S,e.output_data+=d.substring(k,k+S),k=-1,E=(o+=S)-w))}else k=-1,E=o-w;if(k>=0)e.output_data+=d.substring(k,k+C),o+=C,k+=C;else{var A=C;for(A>o-E&&(A=o-E),e.output_data+=e.output_data.substring(E,E+A),o+=A,E+=A,o+=C-=A;C>2;)e.output_data+=e.output_data.charAt(E++),e.output_data+=e.output_data.charAt(E++),e.output_data+=e.output_data.charAt(E++),C-=3;C&&(e.output_data+=e.output_data.charAt(E++),C>1&&(e.output_data+=e.output_data.charAt(E++)))}break r}}break t}}while(n<s&&o<l);n-=C=p>>>3,f&=(1<<(p-=C<<3))-1,e.next_in=n,e.next_out=o,e.avail_in=n<s?s-n+5:5-(n-s),e.avail_out=o<l?l-o+257:257-(o-l),r.hold=f,r.bits=p}function new_array(e){var t,r=new Array(e);for(t=0;t<e;t++)r[t]=0;return r}function getarg(e,t,r){return e&&t in e?e[t]:r}function checksum_none(){return 0}function inflate_state(){var e;this.mode=0,this.last=0,this.wrap=0,this.havedict=0,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=0,this.distcode=0,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=0,this.lens=new_array(320),this.work=new_array(288),this.codes=new Array(ENOUGH);var t={op:0,bits:0,val:0};for(e=0;e<ENOUGH;e++)this.codes[e]=t;this.sane=0,this.back=0,this.was=0}ZLIB.inflate_copyright=" inflate 1.2.6 Copyright 1995-2012 Mark Adler ",ZLIB.inflateResetKeep=function(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=null,t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=0,t.distcode=0,t.next=0,t.sane=1,t.back=-1,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.inflateReset=function(e,t){var r,i;return e&&e.state?(i=e.state,void 0===t&&(t=DEF_WBITS),t<0?(r=0,t=-t):(r=1+(t>>>4),t<48&&(t&=15)),1==r&&"function"==typeof ZLIB.adler32?e.checksum_function=ZLIB.adler32:2==r&&"function"==typeof ZLIB.crc32?e.checksum_function=ZLIB.crc32:e.checksum_function=checksum_none,t&&(t<8||t>15)?ZLIB.Z_STREAM_ERROR:(i.window&&i.wbits!=t&&(i.window=null),i.wrap=r,i.wbits=t,i.wsize=0,i.whave=0,i.wnext=0,ZLIB.inflateResetKeep(e))):ZLIB.Z_STREAM_ERROR},ZLIB.inflateInit=function(e){var t=new ZLIB.z_stream;return t.state=new inflate_state,ZLIB.inflateReset(t,e),t},ZLIB.inflatePrime=function(e,t,r){var i;return e&&e.state?(i=e.state,t<0?(i.hold=0,i.bits=0,ZLIB.Z_OK):t>16||i.bits+t>32?ZLIB.Z_STREAM_ERROR:(r&=(1<<t)-1,i.hold+=r<<i.bits,i.bits+=t,ZLIB.Z_OK)):ZLIB.Z_STREAM_ERROR};var lenfix_ary=null,lenfix_def="([    {op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},{op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},    {op:0,bits:9,val:192},{op:16,bits:7,val:10},{op:0,bits:8,val:96},{op:0,bits:8,val:32},{op:0,bits:9,val:160},{op:0,bits:8,val:0},{op:0,bits:8,val:128},    {op:0,bits:8,val:64},{op:0,bits:9,val:224},{op:16,bits:7,val:6},{op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:144},{op:19,bits:7,val:59},    {op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:208},{op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:176},    {op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},{op:0,bits:9,val:240},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},    {op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},{op:0,bits:8,val:52},{op:0,bits:9,val:200},{op:17,bits:7,val:13},{op:0,bits:8,val:100},    {op:0,bits:8,val:36},{op:0,bits:9,val:168},{op:0,bits:8,val:4},{op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:232},{op:16,bits:7,val:8},    {op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:152},{op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:216},    {op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},{op:0,bits:9,val:184},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},    {op:0,bits:9,val:248},{op:16,bits:7,val:3},{op:0,bits:8,val:82},{op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},    {op:0,bits:8,val:50},{op:0,bits:9,val:196},{op:17,bits:7,val:11},{op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:164},{op:0,bits:8,val:2},    {op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:228},{op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:148},    {op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},{op:0,bits:9,val:212},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},    {op:0,bits:9,val:180},{op:0,bits:8,val:10},{op:0,bits:8,val:138},{op:0,bits:8,val:74},{op:0,bits:9,val:244},{op:16,bits:7,val:5},{op:0,bits:8,val:86},    {op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:204},{op:17,bits:7,val:15},    {op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:172},{op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:236},    {op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},{op:0,bits:9,val:156},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},    {op:0,bits:9,val:220},{op:18,bits:7,val:27},{op:0,bits:8,val:110},{op:0,bits:8,val:46},{op:0,bits:9,val:188},{op:0,bits:8,val:14},{op:0,bits:8,val:142},    {op:0,bits:8,val:78},{op:0,bits:9,val:252},{op:96,bits:7,val:0},{op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},    {op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:194},{op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:162},    {op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},{op:0,bits:9,val:226},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},    {op:0,bits:9,val:146},{op:19,bits:7,val:59},{op:0,bits:8,val:121},{op:0,bits:8,val:57},{op:0,bits:9,val:210},{op:17,bits:7,val:17},{op:0,bits:8,val:105},    {op:0,bits:8,val:41},{op:0,bits:9,val:178},{op:0,bits:8,val:9},{op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:242},{op:16,bits:7,val:4},    {op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},{op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:202},    {op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},{op:0,bits:9,val:170},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},    {op:0,bits:9,val:234},{op:16,bits:7,val:8},{op:0,bits:8,val:93},{op:0,bits:8,val:29},{op:0,bits:9,val:154},{op:20,bits:7,val:83},{op:0,bits:8,val:125},    {op:0,bits:8,val:61},{op:0,bits:9,val:218},{op:18,bits:7,val:23},{op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:186},{op:0,bits:8,val:13},    {op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:250},{op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},    {op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},{op:0,bits:9,val:198},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},    {op:0,bits:9,val:166},{op:0,bits:8,val:3},{op:0,bits:8,val:131},{op:0,bits:8,val:67},{op:0,bits:9,val:230},{op:16,bits:7,val:7},{op:0,bits:8,val:91},    {op:0,bits:8,val:27},{op:0,bits:9,val:150},{op:20,bits:7,val:67},{op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:214},{op:18,bits:7,val:19},    {op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:182},{op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:246},    {op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},    {op:0,bits:9,val:206},{op:17,bits:7,val:15},{op:0,bits:8,val:103},{op:0,bits:8,val:39},{op:0,bits:9,val:174},{op:0,bits:8,val:7},{op:0,bits:8,val:135},    {op:0,bits:8,val:71},{op:0,bits:9,val:238},{op:16,bits:7,val:9},{op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:158},{op:20,bits:7,val:99},    {op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:222},{op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:190},    {op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},{op:0,bits:9,val:254},{op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},    {op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},{op:0,bits:9,val:193},{op:16,bits:7,val:10},{op:0,bits:8,val:96},    {op:0,bits:8,val:32},{op:0,bits:9,val:161},{op:0,bits:8,val:0},{op:0,bits:8,val:128},{op:0,bits:8,val:64},{op:0,bits:9,val:225},{op:16,bits:7,val:6},    {op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:145},{op:19,bits:7,val:59},{op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:209},    {op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:177},{op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},    {op:0,bits:9,val:241},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},{op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},    {op:0,bits:8,val:52},{op:0,bits:9,val:201},{op:17,bits:7,val:13},{op:0,bits:8,val:100},{op:0,bits:8,val:36},{op:0,bits:9,val:169},{op:0,bits:8,val:4},    {op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:233},{op:16,bits:7,val:8},{op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:153},    {op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:217},{op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},    {op:0,bits:9,val:185},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},{op:0,bits:9,val:249},{op:16,bits:7,val:3},{op:0,bits:8,val:82},    {op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},{op:0,bits:8,val:50},{op:0,bits:9,val:197},{op:17,bits:7,val:11},    {op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:165},{op:0,bits:8,val:2},{op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:229},    {op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:149},{op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},    {op:0,bits:9,val:213},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},{op:0,bits:9,val:181},{op:0,bits:8,val:10},{op:0,bits:8,val:138},    {op:0,bits:8,val:74},{op:0,bits:9,val:245},{op:16,bits:7,val:5},{op:0,bits:8,val:86},{op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},    {op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:205},{op:17,bits:7,val:15},{op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:173},    {op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:237},{op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},    {op:0,bits:9,val:157},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},{op:0,bits:9,val:221},{op:18,bits:7,val:27},{op:0,bits:8,val:110},    {op:0,bits:8,val:46},{op:0,bits:9,val:189},{op:0,bits:8,val:14},{op:0,bits:8,val:142},{op:0,bits:8,val:78},{op:0,bits:9,val:253},{op:96,bits:7,val:0},    {op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},{op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:195},    {op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:163},{op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},    {op:0,bits:9,val:227},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},{op:0,bits:9,val:147},{op:19,bits:7,val:59},{op:0,bits:8,val:121},    {op:0,bits:8,val:57},{op:0,bits:9,val:211},{op:17,bits:7,val:17},{op:0,bits:8,val:105},{op:0,bits:8,val:41},{op:0,bits:9,val:179},{op:0,bits:8,val:9},    {op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:243},{op:16,bits:7,val:4},{op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},    {op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:203},{op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},    {op:0,bits:9,val:171},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},{op:0,bits:9,val:235},{op:16,bits:7,val:8},{op:0,bits:8,val:93},    {op:0,bits:8,val:29},{op:0,bits:9,val:155},{op:20,bits:7,val:83},{op:0,bits:8,val:125},{op:0,bits:8,val:61},{op:0,bits:9,val:219},{op:18,bits:7,val:23},    {op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:187},{op:0,bits:8,val:13},{op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:251},    {op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},{op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},    {op:0,bits:9,val:199},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},{op:0,bits:9,val:167},{op:0,bits:8,val:3},{op:0,bits:8,val:131},    {op:0,bits:8,val:67},{op:0,bits:9,val:231},{op:16,bits:7,val:7},{op:0,bits:8,val:91},{op:0,bits:8,val:27},{op:0,bits:9,val:151},{op:20,bits:7,val:67},    {op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:215},{op:18,bits:7,val:19},{op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:183},    {op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:247},{op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},    {op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},{op:0,bits:9,val:207},{op:17,bits:7,val:15},{op:0,bits:8,val:103},    {op:0,bits:8,val:39},{op:0,bits:9,val:175},{op:0,bits:8,val:7},{op:0,bits:8,val:135},{op:0,bits:8,val:71},{op:0,bits:9,val:239},{op:16,bits:7,val:9},    {op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:159},{op:20,bits:7,val:99},{op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:223},    {op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:191},{op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},    {op:0,bits:9,val:255}])",distfix_ary=null,distfix_def="([    {op:16,bits:5,val:1},{op:23,bits:5,val:257},{op:19,bits:5,val:17},{op:27,bits:5,val:4097},{op:17,bits:5,val:5},{op:25,bits:5,val:1025},    {op:21,bits:5,val:65},{op:29,bits:5,val:16385},{op:16,bits:5,val:3},{op:24,bits:5,val:513},{op:20,bits:5,val:33},{op:28,bits:5,val:8193},    {op:18,bits:5,val:9},{op:26,bits:5,val:2049},{op:22,bits:5,val:129},{op:64,bits:5,val:0},{op:16,bits:5,val:2},{op:23,bits:5,val:385},    {op:19,bits:5,val:25},{op:27,bits:5,val:6145},{op:17,bits:5,val:7},{op:25,bits:5,val:1537},{op:21,bits:5,val:97},{op:29,bits:5,val:24577},    {op:16,bits:5,val:4},{op:24,bits:5,val:769},{op:20,bits:5,val:49},{op:28,bits:5,val:12289},{op:18,bits:5,val:13},{op:26,bits:5,val:3073},    {op:22,bits:5,val:193},{op:64,bits:5,val:0}])";function fixedtables(state){var i;for(lenfix_ary||(lenfix_ary=eval(lenfix_def)),distfix_ary||(distfix_ary=eval(distfix_def)),state.lencode=0,state.distcode=512,i=0;i<512;i++)state.codes[i]=lenfix_ary[i];for(i=0;i<32;i++)state.codes[i+512]=distfix_ary[i];state.lenbits=9,state.distbits=5}function updatewindow(e){var t=e.state,r=e.output_data.length;return null===t.window&&(t.window=""),0==t.wsize&&(t.wsize=1<<t.wbits),r>=t.wsize?t.window=e.output_data.substring(r-t.wsize):t.whave+r<t.wsize?t.window+=e.output_data:t.window=t.window.substring(t.whave-(t.wsize-r))+e.output_data,t.whave=t.window.length,t.whave<t.wsize?t.wnext=t.whave:t.wnext=0,0}function CRC2(e,t){var r=[255&t,t>>>8&255];e.state.check=e.checksum_function(e.state.check,r,0,2)}function CRC4(e,t){var r=[255&t,t>>>8&255,t>>>16&255,t>>>24&255];e.state.check=e.checksum_function(e.state.check,r,0,4)}function LOAD(e,t){return t.strm=e,t.left=e.avail_out,t.next=e.next_in,t.have=e.avail_in,t.hold=e.state.hold,t.bits=e.state.bits,t}function RESTORE(e){var t=e.strm;t.next_in=e.next,t.avail_out=e.left,t.avail_in=e.have,t.state.hold=e.hold,t.state.bits=e.bits}function INITBITS(e){e.hold=0,e.bits=0}function PULLBYTE(e){return 0!=e.have&&(e.have--,e.hold+=(255&e.strm.input_data.charCodeAt(e.next++))<<e.bits,e.bits+=8,!0)}function NEEDBITS(e,t){for(;e.bits<t;)if(!PULLBYTE(e))return!1;return!0}function BITS(e,t){return e.hold&(1<<t)-1}function DROPBITS(e,t){e.hold>>>=t,e.bits-=t}function BYTEBITS(e){e.hold>>>=7&e.bits,e.bits-=7&e.bits}function REVERSE(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}var inflate_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];ZLIB.inflate=function(e,t){var r,i,n,s,o,a,l,c,u,h=-1,d=-1;if(!e||!e.state||!e.input_data&&0!=e.avail_in)return ZLIB.Z_STREAM_ERROR;(r=e.state).mode==TYPE&&(r.mode=TYPEDO),LOAD(e,i={}),n=i.have,s=i.left,u=ZLIB.Z_OK;e:for(;;)switch(r.mode){case HEAD:if(0==r.wrap){r.mode=TYPEDO;break}if(!NEEDBITS(i,16))break e;if(2&r.wrap&&35615==i.hold){r.check=e.checksum_function(0,null,0,0),CRC2(e,i.hold),INITBITS(i),r.mode=FLAGS;break}if(r.flags=0,null!==r.head&&(r.head.done=-1),!(1&r.wrap)||((BITS(i,8)<<8)+(i.hold>>>8))%31){e.msg="incorrect header check",r.mode=BAD;break}if(BITS(i,4)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",r.mode=BAD;break}if(DROPBITS(i,4),c=BITS(i,4)+8,0==r.wbits)r.wbits=c;else if(c>r.wbits){e.msg="invalid window size",r.mode=BAD;break}r.dmax=1<<c,e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=512&i.hold?DICTID:TYPE,INITBITS(i);break;case FLAGS:if(!NEEDBITS(i,16))break e;if(r.flags=i.hold,(255&r.flags)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",r.mode=BAD;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=BAD;break}null!==r.head&&(r.head.text=i.hold>>>8&1),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.mode=TIME;case TIME:if(!NEEDBITS(i,32))break e;null!==r.head&&(r.head.time=i.hold),512&r.flags&&CRC4(e,i.hold),INITBITS(i),r.mode=OS;case OS:if(!NEEDBITS(i,16))break e;null!==r.head&&(r.head.xflags=255&i.hold,r.head.os=i.hold>>>8),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.mode=EXLEN;case EXLEN:if(1024&r.flags){if(!NEEDBITS(i,16))break e;r.length=i.hold,null!==r.head&&(r.head.extra_len=i.hold),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.head.extra=""}else null!==r.head&&(r.head.extra=null);r.mode=EXTRA;case EXTRA:if(1024&r.flags&&((o=r.length)>i.have&&(o=i.have),o&&(null!==r.head&&null!==r.head.extra&&(c=r.head.extra_len-r.length,r.head.extra+=e.input_data.substring(i.next,i.next+(c+o>r.head.extra_max?r.head.extra_max-c:o))),512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,r.length-=o),r.length))break e;r.length=0,r.mode=NAME;case NAME:if(2048&r.flags){if(0==i.have)break e;null!==r.head&&null===r.head.name&&(r.head.name=""),o=0;do{if(c=e.input_data.charAt(i.next+o),o++,"\0"===c)break;null!==r.head&&r.length<r.head.name_max&&(r.head.name+=c,r.length++)}while(o<i.have);if(512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,"\0"!==c)break e}else null!==r.head&&(r.head.name=null);r.length=0,r.mode=COMMENT;case COMMENT:if(4096&r.flags){if(0==i.have)break e;o=0,null!==r.head&&null===r.head.comment&&(r.head.comment="");do{if(c=e.input_data.charAt(i.next+o),o++,"\0"===c)break;null!==r.head&&r.length<r.head.comm_max&&(r.head.comment+=c,r.length++)}while(o<i.have);if(512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,"\0"!==c)break e}else null!==r.head&&(r.head.comment=null);r.mode=HCRC;case HCRC:if(512&r.flags){if(!NEEDBITS(i,16))break e;if(i.hold!=(65535&r.check)){e.msg="header crc mismatch",r.mode=BAD;break}INITBITS(i)}null!==r.head&&(r.head.hcrc=r.flags>>>9&1,r.head.done=1),e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=TYPE;break;case DICTID:if(!NEEDBITS(i,32))break e;e.adler=r.check=REVERSE(i.hold),INITBITS(i),r.mode=DICT;case DICT:if(0==r.havedict)return RESTORE(i),ZLIB.Z_NEED_DICT;e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=TYPE;case TYPE:if(t==ZLIB.Z_BLOCK||t==ZLIB.Z_TREES)break e;case TYPEDO:if(r.last){BYTEBITS(i),r.mode=CHECK;break}if(!NEEDBITS(i,3))break e;switch(r.last=BITS(i,1),DROPBITS(i,1),BITS(i,2)){case 0:r.mode=STORED;break;case 1:if(fixedtables(r),r.mode=LEN_,t==ZLIB.Z_TREES){DROPBITS(i,2);break e}break;case 2:r.mode=TABLE;break;case 3:e.msg="invalid block type",r.mode=BAD}DROPBITS(i,2);break;case STORED:if(BYTEBITS(i),!NEEDBITS(i,32))break e;if((65535&i.hold)!=(i.hold>>>16&65535^65535)){e.msg="invalid stored block lengths",r.mode=BAD;break}if(r.length=65535&i.hold,INITBITS(i),r.mode=COPY_,t==ZLIB.Z_TREES)break e;case COPY_:r.mode=COPY;case COPY:if(o=r.length){if(o>i.have&&(o=i.have),o>i.left&&(o=i.left),0==o)break e;e.output_data+=e.input_data.substring(i.next,i.next+o),e.next_out+=o,i.have-=o,i.next+=o,i.left-=o,r.length-=o;break}r.mode=TYPE;break;case TABLE:if(!NEEDBITS(i,14))break e;if(r.nlen=BITS(i,5)+257,DROPBITS(i,5),r.ndist=BITS(i,5)+1,DROPBITS(i,5),r.ncode=BITS(i,4)+4,DROPBITS(i,4),r.nlen>286||r.ndist>30){e.msg="too many length or distance symbols",r.mode=BAD;break}r.have=0,r.mode=LENLENS;case LENLENS:for(;r.have<r.ncode;){if(!NEEDBITS(i,3))break e;var f=BITS(i,3);r.lens[inflate_order[r.have++]]=f,DROPBITS(i,3)}for(;r.have<19;)r.lens[inflate_order[r.have++]]=0;if(r.next=0,r.lencode=0,r.lenbits=7,u=inflate_table(r,CODES)){e.msg="invalid code lengths set",r.mode=BAD;break}r.have=0,r.mode=CODELENS;case CODELENS:for(;r.have<r.nlen+r.ndist;){for(;!((a=r.codes[r.lencode+BITS(i,r.lenbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(a.val<16)DROPBITS(i,a.bits),r.lens[r.have++]=a.val;else{if(16==a.val){if(!NEEDBITS(i,a.bits+2))break e;if(DROPBITS(i,a.bits),0==r.have){e.msg="invalid bit length repeat",r.mode=BAD;break}c=r.lens[r.have-1],o=3+BITS(i,2),DROPBITS(i,2)}else if(17==a.val){if(!NEEDBITS(i,a.bits+3))break e;DROPBITS(i,a.bits),c=0,o=3+BITS(i,3),DROPBITS(i,3)}else{if(!NEEDBITS(i,a.bits+7))break e;DROPBITS(i,a.bits),c=0,o=11+BITS(i,7),DROPBITS(i,7)}if(r.have+o>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=BAD;break}for(;o--;)r.lens[r.have++]=c}}if(r.mode==BAD)break;if(0==r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=BAD;break}if(r.next=0,r.lencode=r.next,r.lenbits=9,u=inflate_table(r,LENS)){e.msg="invalid literal/lengths set",r.mode=BAD;break}if(r.distcode=r.next,r.distbits=6,u=inflate_table(r,DISTS)){e.msg="invalid distances set",r.mode=BAD;break}if(r.mode=LEN_,t==ZLIB.Z_TREES)break e;case LEN_:r.mode=LEN;case LEN:if(i.have>=6&&i.left>=258){RESTORE(i),inflate_fast(e,s),LOAD(e,i),r.mode==TYPE&&(r.back=-1);break}for(r.back=0;!((a=r.codes[r.lencode+BITS(i,r.lenbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(a.op&&0==(240&a.op)){for(l=a;a=r.codes[r.lencode+l.val+(BITS(i,l.bits+l.op)>>>l.bits)],!(l.bits+a.bits<=i.bits);)if(!PULLBYTE(i))break e;DROPBITS(i,l.bits),r.back+=l.bits}if(DROPBITS(i,a.bits),r.back+=a.bits,r.length=a.val,0==a.op){r.mode=LIT;break}if(32&a.op){r.back=-1,r.mode=TYPE;break}if(64&a.op){e.msg="invalid literal/length code",r.mode=BAD;break}r.extra=15&a.op,r.mode=LENEXT;case LENEXT:if(r.extra){if(!NEEDBITS(i,r.extra))break e;r.length+=BITS(i,r.extra),DROPBITS(i,r.extra),r.back+=r.extra}r.was=r.length,r.mode=DIST;case DIST:for(;!((a=r.codes[r.distcode+BITS(i,r.distbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(0==(240&a.op)){for(l=a;a=r.codes[r.distcode+l.val+(BITS(i,l.bits+l.op)>>>l.bits)],!(l.bits+a.bits<=i.bits);)if(!PULLBYTE(i))break e;DROPBITS(i,l.bits),r.back+=l.bits}if(DROPBITS(i,a.bits),r.back+=a.bits,64&a.op){e.msg="invalid distance code",r.mode=BAD;break}r.offset=a.val,r.extra=15&a.op,r.mode=DISTEXT;case DISTEXT:if(r.extra){if(!NEEDBITS(i,r.extra))break e;r.offset+=BITS(i,r.extra),DROPBITS(i,r.extra),r.back+=r.extra}r.mode=MATCH;case MATCH:if(0==i.left)break e;if(o=s-i.left,r.offset>o){if((o=r.offset-o)>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break}o>r.wnext?(o-=r.wnext,h=r.wsize-o,d=-1):(h=r.wnext-o,d=-1),o>r.length&&(o=r.length)}else h=-1,d=e.next_out-r.offset,o=r.length;if(o>i.left&&(o=i.left),i.left-=o,r.length-=o,h>=0)e.output_data+=r.window.substring(h,h+o),e.next_out+=o,o=0;else{e.next_out+=o;do{e.output_data+=e.output_data.charAt(d++)}while(--o)}0==r.length&&(r.mode=LEN);break;case LIT:if(0==i.left)break e;e.output_data+=String.fromCharCode(r.length),e.next_out++,i.left--,r.mode=LEN;break;case CHECK:if(r.wrap){if(!NEEDBITS(i,32))break e;if(s-=i.left,e.total_out+=s,r.total+=s,s&&(e.adler=r.check=e.checksum_function(r.check,e.output_data,e.output_data.length-s,s)),s=i.left,(r.flags?i.hold:REVERSE(i.hold))!=r.check){e.msg="incorrect data check",r.mode=BAD;break}INITBITS(i)}r.mode=LENGTH;case LENGTH:if(r.wrap&&r.flags){if(!NEEDBITS(i,32))break e;if(i.hold!=(4294967295&r.total)){e.msg="incorrect length check",r.mode=BAD;break}INITBITS(i)}r.mode=DONE;case DONE:u=ZLIB.Z_STREAM_END;break e;case BAD:u=ZLIB.Z_DATA_ERROR;break e;case MEM:return ZLIB.Z_MEM_ERROR;default:return ZLIB.Z_STREAM_ERROR}return RESTORE(i),(r.wsize||s!=e.avail_out&&r.mode<BAD&&(r.mode<CHECK||t!=ZLIB.Z_FINISH))&&updatewindow(e)?(r.mode=MEM,ZLIB.Z_MEM_ERROR):(n-=e.avail_in,s-=e.avail_out,e.total_in+=n,e.total_out+=s,r.total+=s,r.wrap&&s&&(e.adler=r.check=e.checksum_function(r.check,e.output_data,0,e.output_data.length)),e.data_type=r.bits+(r.last?64:0)+(r.mode==TYPE?128:0)+(r.mode==LEN_||r.mode==COPY_?256:0),(0==n&&0==s||t==ZLIB.Z_FINISH)&&u==ZLIB.Z_OK&&(u=ZLIB.Z_BUF_ERROR),u)},ZLIB.inflateEnd=function(e){return e&&e.state?(e.state.window=null,e.state=null,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.z_stream.prototype.inflate=function(e,t){var r,i;this.input_data=e,this.next_in=getarg(t,"next_in",0),this.avail_in=getarg(t,"avail_in",e.length-this.next_in),r=getarg(t,"flush",ZLIB.Z_SYNC_FLUSH),i=getarg(t,"avail_out",-1);var n="";do{if(this.avail_out=i>=0?i:16384,this.output_data="",this.next_out=0,this.error=ZLIB.inflate(this,r),0!=this.error&&console.log("zlib error",this.error),i>=0)return this.output_data;if(n+=this.output_data,this.avail_out>0)break}while(this.error==ZLIB.Z_OK);return n},ZLIB.z_stream.prototype.inflateReset=function(e){return ZLIB.inflateReset(this,e)}}(),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-adler32.js"),BASE=65521,NMAX=5552,ZLIB.adler32=function(e,t,r,i){return"string"==typeof t?function(e,t,r,i){var n,s;if(n=e>>>16&65535,e&=65535,1==i)return(e+=255&t.charCodeAt(r))>=BASE&&(e-=BASE),(n+=e)>=BASE&&(n-=BASE),e|n<<16;if(null===t)return 1;if(i<16){for(;i--;)n+=e+=255&t.charCodeAt(r++);return e>=BASE&&(e-=BASE),e|(n%=BASE)<<16}for(;i>=NMAX;){i-=NMAX,s=347;do{n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++)}while(--s);e%=BASE,n%=BASE}if(i){for(;i>=16;)i-=16,n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++);for(;i--;)n+=e+=255&t.charCodeAt(r++);e%=BASE,n%=BASE}return e|n<<16}(e,t,r,i):function(e,t,r,i){var n,s;if(n=e>>>16&65535,e&=65535,1==i)return(e+=t[r])>=BASE&&(e-=BASE),(n+=e)>=BASE&&(n-=BASE),e|n<<16;if(null===t)return 1;if(i<16){for(;i--;)n+=e+=t[r++];return e>=BASE&&(e-=BASE),e|(n%=BASE)<<16}for(;i>=NMAX;){i-=NMAX,s=347;do{n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++]}while(--s);e%=BASE,n%=BASE}if(i){for(;i>=16;)i-=16,n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++];for(;i--;)n+=e+=t[r++];e%=BASE,n%=BASE}return e|n<<16}(e,t,r,i)},ZLIB.adler32_combine=function(e,t,r){var i,n,s;return r<0?4294967295:(n=(s=r%=BASE)*(i=65535&e),n%=BASE,(i+=(65535&t)+BASE-1)>=BASE&&(i-=BASE),i>=BASE&&(i-=BASE),(n+=(e>>16&65535)+(t>>16&65535)+BASE-s)>=131042&&(n-=131042),n>=BASE&&(n-=BASE),i|n<<16)},void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-crc32.js"),function(){var e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function t(e,t){var r,i=0;for(r=0;t;)1&t&&(r^=e[i]),t>>=1,i++;return r}function r(e,r){var i;for(i=0;i<32;i++)e[i]=t(r,r[i])}ZLIB.crc32=function(t,r,i,n){return"string"==typeof r?function(t,r,i,n){if(null==r)return 0;for(t^=4294967295;n>=8;)t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,n-=8;if(n)do{t=e[255&(t^r.charCodeAt(i++))]^t>>>8}while(--n);return 4294967295^t}(t,r,i,n):function(t,r,i,n){if(null==r)return 0;for(t^=4294967295;n>=8;)t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,n-=8;if(n)do{t=e[255&(t^r[i++])]^t>>>8}while(--n);return 4294967295^t}(t,r,i,n)},ZLIB.crc32_combine=function(e,i,n){var s,o,a,l;if(n<=0)return e;for(a=new Array(32),(l=new Array(32))[0]=3988292384,o=1,s=1;s<32;s++)l[s]=o,o<<=1;r(a,l),r(l,a);do{if(r(a,l),1&n&&(e=t(a,e)),0==(n>>=1))break;r(l,a),1&n&&(e=t(l,e)),n>>=1}while(0!=n);return e^i}}(),module.exports=ZLIB}},__webpack_module_cache__={};function __nested_webpack_require_78642__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__nested_webpack_require_78642__),r.exports}__nested_webpack_require_78642__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_78642__.d(t,{a:t}),t},__nested_webpack_require_78642__.d=(e,t)=>{for(var r in t)__nested_webpack_require_78642__.o(t,r)&&!__nested_webpack_require_78642__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_78642__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_78642__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_78642__.r(__webpack_exports__),__nested_webpack_require_78642__.d(__webpack_exports__,{AMTDesktop:()=>e.r,AMTKeyCodeConverter:()=>d.qD,AMTKvmDataRedirector:()=>t.N,AMTRedirector:()=>r.K,AmtTerminal:()=>i.r,CommsHelper:()=>d.Xn,ConsoleLogger:()=>n.k,DataProcessor:()=>u.$,Desktop:()=>o.H,Encoding:()=>h.ez,FrameBufferBellServerCutText:()=>h.Ut,HandshakeState:()=>h.wW,ImageHelper:()=>d.jw,KeyBoardHelper:()=>d.EB,LogLevel:()=>c.i,MouseHelper:()=>d.xx,Protocol:()=>r.b,RLEDecoder:()=>u.X,SecurityOptions:()=>h.ll,SecurityResponse:()=>h.mC,ServerInit:()=>h.Cu,StateProcessorFactory:()=>a.v,TerminalDataProcessor:()=>l.Q,TypeConverter:()=>s.r,isTruthy:()=>d.fQ});var e=__nested_webpack_require_78642__(166),t=__nested_webpack_require_78642__(59),r=__nested_webpack_require_78642__(503),i=__nested_webpack_require_78642__(277),n=__nested_webpack_require_78642__(237),s=__nested_webpack_require_78642__(565),o=__nested_webpack_require_78642__(46),a=__nested_webpack_require_78642__(989),l=__nested_webpack_require_78642__(155),c=__nested_webpack_require_78642__(201),u=__nested_webpack_require_78642__(646),h=__nested_webpack_require_78642__(389),d=__nested_webpack_require_78642__(8)})(),__webpack_exports__})(),module.exports=e()},14:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var i=r(537),n=r.n(i),s=r(645),o=r.n(s)()(n());o.push([e.id,".xterm{cursor:text;position:relative;user-select:none;-ms-user-select:none;-webkit-user-select:none}.xterm.focus,.xterm:focus{outline:none}.xterm .xterm-helpers{position:absolute;top:0;z-index:5}.xterm .xterm-helper-textarea{padding:0;border:0;margin:0;position:absolute;opacity:0;left:-9999em;top:0;width:0;height:0;z-index:-5;white-space:nowrap;overflow:hidden;resize:none}.xterm .composition-view{background:#000;color:#fff;display:none;position:absolute;white-space:nowrap;z-index:1}.xterm .composition-view.active{display:block}.xterm .xterm-viewport{background-color:#000;overflow-y:scroll;cursor:default;position:absolute;right:0;left:0;top:0;bottom:0}.xterm .xterm-screen{position:relative}.xterm .xterm-screen canvas{position:absolute;left:0;top:0}.xterm .xterm-scroll-area{visibility:hidden}.xterm-char-measure-element{display:inline-block;visibility:hidden;position:absolute;top:0;left:-9999em;line-height:normal}.xterm.enable-mouse-events{cursor:default}.xterm.xterm-cursor-pointer,.xterm .xterm-cursor-pointer{cursor:pointer}.xterm.column-select.focus{cursor:crosshair}.xterm .xterm-accessibility,.xterm .xterm-message{position:absolute;left:0;top:0;bottom:0;right:0;z-index:10;color:rgba(0,0,0,0)}.xterm .live-region{position:absolute;left:-9999px;width:1px;height:1px;overflow:hidden}.xterm-dim{opacity:.5}.xterm-underline-1{text-decoration:underline}.xterm-underline-2{text-decoration:double underline}.xterm-underline-3{text-decoration:wavy underline}.xterm-underline-4{text-decoration:dotted underline}.xterm-underline-5{text-decoration:dashed underline}.xterm-strikethrough{text-decoration:line-through}.xterm-screen .xterm-decoration-container .xterm-decoration{z-index:6;position:absolute}.xterm-decoration-overview-ruler{z-index:7;position:absolute;top:0;right:0;pointer-events:none}.xterm-decoration-top{z-index:2;position:relative}","",{version:3,sources:["webpack://./node_modules/xterm/css/xterm.css"],names:[],mappings:"AAqCA,OACI,WAAA,CACA,iBAAA,CACA,gBAAA,CACA,oBAAA,CACA,wBAAA,CAGJ,0BAEI,YAAA,CAGJ,sBACI,iBAAA,CACA,KAAA,CAKA,SAAA,CAGJ,8BACI,SAAA,CACA,QAAA,CACA,QAAA,CAEA,iBAAA,CACA,SAAA,CACA,YAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CAEA,kBAAA,CACA,eAAA,CACA,WAAA,CAGJ,yBAEI,eAAA,CACA,UAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,gCACI,aAAA,CAGJ,uBAEI,qBAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,OAAA,CACA,MAAA,CACA,KAAA,CACA,QAAA,CAGJ,qBACI,iBAAA,CAGJ,4BACI,iBAAA,CACA,MAAA,CACA,KAAA,CAGJ,0BACI,iBAAA,CAGJ,4BACI,oBAAA,CACA,iBAAA,CACA,iBAAA,CACA,KAAA,CACA,YAAA,CACA,kBAAA,CAGJ,2BAEI,cAAA,CAGJ,yDAEI,cAAA,CAGJ,2BAEI,gBAAA,CAGJ,kDAEI,iBAAA,CACA,MAAA,CACA,KAAA,CACA,QAAA,CACA,OAAA,CACA,UAAA,CACA,mBAAA,CAGJ,oBACI,iBAAA,CACA,YAAA,CACA,SAAA,CACA,UAAA,CACA,eAAA,CAGJ,WACI,UAAA,CAGJ,mBAAA,yBAAA,CACA,mBAAA,gCAAA,CACA,mBAAA,8BAAA,CACA,mBAAA,gCAAA,CACA,mBAAA,gCAAA,CAEA,qBACI,4BAAA,CAGJ,4DACC,SAAA,CACA,iBAAA,CAGD,iCACI,SAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,mBAAA,CAGJ,sBACI,SAAA,CACA,iBAAA",sourcesContent:['/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n * @license MIT\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author\'s permission):\n *   Fabrice Bellard\'s javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */\n\n/**\n *  Default styles for xterm.js\n */\n\n.xterm {\n    cursor: text;\n    position: relative;\n    user-select: none;\n    -ms-user-select: none;\n    -webkit-user-select: none;\n}\n\n.xterm.focus,\n.xterm:focus {\n    outline: none;\n}\n\n.xterm .xterm-helpers {\n    position: absolute;\n    top: 0;\n    /**\n     * The z-index of the helpers must be higher than the canvases in order for\n     * IMEs to appear on top.\n     */\n    z-index: 5;\n}\n\n.xterm .xterm-helper-textarea {\n    padding: 0;\n    border: 0;\n    margin: 0;\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\n    position: absolute;\n    opacity: 0;\n    left: -9999em;\n    top: 0;\n    width: 0;\n    height: 0;\n    z-index: -5;\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\n    white-space: nowrap;\n    overflow: hidden;\n    resize: none;\n}\n\n.xterm .composition-view {\n    /* TODO: Composition position got messed up somewhere */\n    background: #000;\n    color: #FFF;\n    display: none;\n    position: absolute;\n    white-space: nowrap;\n    z-index: 1;\n}\n\n.xterm .composition-view.active {\n    display: block;\n}\n\n.xterm .xterm-viewport {\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\n    background-color: #000;\n    overflow-y: scroll;\n    cursor: default;\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n}\n\n.xterm .xterm-screen {\n    position: relative;\n}\n\n.xterm .xterm-screen canvas {\n    position: absolute;\n    left: 0;\n    top: 0;\n}\n\n.xterm .xterm-scroll-area {\n    visibility: hidden;\n}\n\n.xterm-char-measure-element {\n    display: inline-block;\n    visibility: hidden;\n    position: absolute;\n    top: 0;\n    left: -9999em;\n    line-height: normal;\n}\n\n.xterm.enable-mouse-events {\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\n    cursor: default;\n}\n\n.xterm.xterm-cursor-pointer,\n.xterm .xterm-cursor-pointer {\n    cursor: pointer;\n}\n\n.xterm.column-select.focus {\n    /* Column selection mode */\n    cursor: crosshair;\n}\n\n.xterm .xterm-accessibility,\n.xterm .xterm-message {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 10;\n    color: transparent;\n}\n\n.xterm .live-region {\n    position: absolute;\n    left: -9999px;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n.xterm-dim {\n    opacity: 0.5;\n}\n\n.xterm-underline-1 { text-decoration: underline; }\n.xterm-underline-2 { text-decoration: double underline; }\n.xterm-underline-3 { text-decoration: wavy underline; }\n.xterm-underline-4 { text-decoration: dotted underline; }\n.xterm-underline-5 { text-decoration: dashed underline; }\n\n.xterm-strikethrough {\n    text-decoration: line-through;\n}\n\n.xterm-screen .xterm-decoration-container .xterm-decoration {\n\tz-index: 6;\n\tposition: absolute;\n}\n\n.xterm-decoration-overview-ruler {\n    z-index: 7;\n    position: absolute;\n    top: 0;\n    right: 0;\n    pointer-events: none;\n}\n\n.xterm-decoration-top {\n    z-index: 2;\n    position: relative;\n}\n'],sourceRoot:""}]);const a=o},20:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var i=r(537),n=r.n(i),s=r(645),o=r.n(s)()(n());o.push([e.id,".sol-header{display:flex}.power-options{display:block;position:absolute;right:1%}.terminal{text-align:left;display:block}.terminal_xterm{display:inline-block}","",{version:3,sources:["webpack://./src/reactjs/SerialOverLAN/sol.scss"],names:[],mappings:"AAIA,YACC,YAAA,CAED,eACC,aAAA,CACA,iBAAA,CACA,QAAA,CAED,UACC,eAAA,CACA,aAAA,CAED,gBACC,oBAAA",sourcesContent:["/*********************************************************************\n* Copyright (c) Intel Corporation 2019\n* SPDX-License-Identifier: Apache-2.0\n**********************************************************************/\n.sol-header {\n\tdisplay: flex;\n}\n.power-options {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 1%;\n}\n.terminal {\n\ttext-align: left;\n\tdisplay:block;\n}\n.terminal_xterm{\n\tdisplay:inline-block;\n}"],sourceRoot:""}]);const a=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",i=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),i&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),i&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,i,n,s){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);i&&o[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),n&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=n):u[4]="".concat(n)),t.push(u))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(n," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},679:(e,t,r)=>{"use strict";var i=r(296),n={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},s={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function l(e){return i.isMemo(e)?o:a[e.$$typeof]||n}a[i.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[i.Memo]=o;var c=Object.defineProperty,u=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,p=Object.prototype;e.exports=function e(t,r,i){if("string"!=typeof r){if(p){var n=f(r);n&&n!==p&&e(t,n,i)}var o=u(r);h&&(o=o.concat(h(r)));for(var a=l(t),v=l(r),g=0;g<o.length;++g){var _=o[g];if(!(s[_]||i&&i[_]||v&&v[_]||a&&a[_])){var m=d(r,_);try{c(t,_,m)}catch(e){}}}}return t}},103:(e,t)=>{"use strict";var r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,n=r?Symbol.for("react.portal"):60106,s=r?Symbol.for("react.fragment"):60107,o=r?Symbol.for("react.strict_mode"):60108,a=r?Symbol.for("react.profiler"):60114,l=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,u=r?Symbol.for("react.async_mode"):60111,h=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,f=r?Symbol.for("react.suspense"):60113,p=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,_=r?Symbol.for("react.block"):60121,m=r?Symbol.for("react.fundamental"):60117,b=r?Symbol.for("react.responder"):60118,y=r?Symbol.for("react.scope"):60119;function S(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case u:case h:case s:case a:case o:case f:return e;default:switch(e=e&&e.$$typeof){case c:case d:case g:case v:case l:return e;default:return t}}case n:return t}}}function C(e){return S(e)===h}t.AsyncMode=u,t.ConcurrentMode=h,t.ContextConsumer=c,t.ContextProvider=l,t.Element=i,t.ForwardRef=d,t.Fragment=s,t.Lazy=g,t.Memo=v,t.Portal=n,t.Profiler=a,t.StrictMode=o,t.Suspense=f,t.isAsyncMode=function(e){return C(e)||S(e)===u},t.isConcurrentMode=C,t.isContextConsumer=function(e){return S(e)===c},t.isContextProvider=function(e){return S(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return S(e)===d},t.isFragment=function(e){return S(e)===s},t.isLazy=function(e){return S(e)===g},t.isMemo=function(e){return S(e)===v},t.isPortal=function(e){return S(e)===n},t.isProfiler=function(e){return S(e)===a},t.isStrictMode=function(e){return S(e)===o},t.isSuspense=function(e){return S(e)===f},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===s||e===h||e===a||e===o||e===f||e===p||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===l||e.$$typeof===c||e.$$typeof===d||e.$$typeof===m||e.$$typeof===b||e.$$typeof===y||e.$$typeof===_)},t.typeOf=S},296:(e,t,r)=>{"use strict";e.exports=r(103)},448:(e,t,r)=>{"use strict";var i=r(294),n=r(840);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,a={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(a[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},p={};function v(e,t,r,i,n,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=n,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var _=/[\-:]([a-z])/g;function m(e){return e[1].toUpperCase()}function b(e,t,r,i){var n=g.hasOwnProperty(t)?g[t]:null;(null!==n?0!==n.type:i||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,r,i){if(null==t||function(e,t,r,i){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,i))return!0;if(i)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,n,i)&&(r=null),i||null===n?function(e){return!!h.call(p,e)||!h.call(f,e)&&(d.test(e)?p[e]=!0:(f[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):n.mustUseProperty?e[n.propertyName]=null===r?3!==n.type&&"":r:(t=n.attributeName,i=n.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(n=n.type)||4===n&&!0===r?"":""+r,i?e.setAttributeNS(i,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(_,m);g[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(_,m);g[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(_,m);g[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=Symbol.for("react.element"),C=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),k=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),x=Symbol.for("react.context"),L=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),D=Symbol.for("react.memo"),I=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var P=Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=P&&e[P]||e["@@iterator"])?e:null}var M,N=Object.assign;function H(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var F=!1;function U(e,t){if(!e||F)return"";F=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var i=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){i=e}e.call(t.prototype)}else{try{throw Error()}catch(e){i=e}e()}}catch(t){if(t&&i&&"string"==typeof t.stack){for(var n=t.stack.split("\n"),s=i.stack.split("\n"),o=n.length-1,a=s.length-1;1<=o&&0<=a&&n[o]!==s[a];)a--;for(;1<=o&&0<=a;o--,a--)if(n[o]!==s[a]){if(1!==o||1!==a)do{if(o--,0>--a||n[o]!==s[a]){var l="\n"+n[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=o&&0<=a);break}}}finally{F=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?H(e):""}function j(e){switch(e.tag){case 5:return H(e.type);case 16:return H("Lazy");case 13:return H("Suspense");case 19:return H("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function z(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case C:return"Portal";case E:return"Profiler";case k:return"StrictMode";case R:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case x:return(e.displayName||"Context")+".Consumer";case A:return(e._context.displayName||"Context")+".Provider";case L:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case D:return null!==(t=e.displayName||null)?t:z(e.type)||"Memo";case I:t=e._payload,e=e._init;try{return z(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return z(t);case 8:return t===k?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function $(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var n=r.get,s=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return n.call(this)},set:function(e){i=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),i="";return e&&(i=K(e)?e.checked?"true":"false":e.value),(e=i)!==r&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function G(e,t){var r=t.checked;return N({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function X(e,t){var r=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;r=$(null!=t.value?t.value:r),e._wrapperState={initialChecked:i,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Y(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function J(e,t){Y(e,t);var r=$(t.value),i=t.type;if(null!=r)"number"===i?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,r):t.hasOwnProperty("defaultValue")&&ee(e,t.type,$(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Q(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function ee(e,t,r){"number"===t&&Z(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var te=Array.isArray;function re(e,t,r,i){if(e=e.options,t){t={};for(var n=0;n<r.length;n++)t["$"+r[n]]=!0;for(r=0;r<e.length;r++)n=t.hasOwnProperty("$"+e[r].value),e[r].selected!==n&&(e[r].selected=n),n&&i&&(e[r].defaultSelected=!0)}else{for(r=""+$(r),t=null,n=0;n<e.length;n++){if(e[n].value===r)return e[n].selected=!0,void(i&&(e[n].defaultSelected=!0));null!==t||e[n].disabled||(t=e[n])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return N({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ne(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(s(92));if(te(r)){if(1<r.length)throw Error(s(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:$(r)}}function se(e,t){var r=$(t.value),i=$(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=i&&(e.defaultValue=""+i)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue,he=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,i){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function de(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function ve(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var i=0===r.indexOf("--"),n=ve(r,t[r],i);"float"===r&&(r="cssFloat"),i?e.setProperty(r,n):e[r]=n}}Object.keys(fe).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var _e=N({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function me(e,t){if(t){if(_e[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(s(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,we=null,ke=null;function Ee(e){if(e=bn(e)){if("function"!=typeof Ce)throw Error(s(280));var t=e.stateNode;t&&(t=Sn(t),Ce(e.stateNode,e.type,t))}}function Ae(e){we?ke?ke.push(e):ke=[e]:we=e}function xe(){if(we){var e=we,t=ke;if(ke=we=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function Le(e,t){return e(t)}function Re(){}var Te=!1;function De(e,t,r){if(Te)return e(t,r);Te=!0;try{return Le(e,t,r)}finally{Te=!1,(null!==we||null!==ke)&&(Re(),xe())}}function Ie(e,t){var r=e.stateNode;if(null===r)return null;var i=Sn(r);if(null===i)return null;r=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(s(231,t,typeof r));return r}var Oe=!1;if(u)try{var Pe={};Object.defineProperty(Pe,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",Pe,Pe),window.removeEventListener("test",Pe,Pe)}catch(ue){Oe=!1}function Be(e,t,r,i,n,s,o,a,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var Me=!1,Ne=null,He=!1,Fe=null,Ue={onError:function(e){Me=!0,Ne=e}};function je(e,t,r,i,n,s,o,a,l){Me=!1,Ne=null,Be.apply(Ue,arguments)}function ze(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function $e(e){if(ze(e)!==e)throw Error(s(188))}function Ke(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=ze(e)))throw Error(s(188));return t!==e?null:e}for(var r=e,i=t;;){var n=r.return;if(null===n)break;var o=n.alternate;if(null===o){if(null!==(i=n.return)){r=i;continue}break}if(n.child===o.child){for(o=n.child;o;){if(o===r)return $e(n),e;if(o===i)return $e(n),t;o=o.sibling}throw Error(s(188))}if(r.return!==i.return)r=n,i=o;else{for(var a=!1,l=n.child;l;){if(l===r){a=!0,r=n,i=o;break}if(l===i){a=!0,i=n,r=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===r){a=!0,r=o,i=n;break}if(l===i){a=!0,i=o,r=n;break}l=l.sibling}if(!a)throw Error(s(189))}}if(r.alternate!==i)throw Error(s(190))}if(3!==r.tag)throw Error(s(188));return r.stateNode.current===r?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var qe=n.unstable_scheduleCallback,Ze=n.unstable_cancelCallback,Ge=n.unstable_shouldYield,Xe=n.unstable_requestPaint,Ye=n.unstable_now,Je=n.unstable_getCurrentPriorityLevel,Qe=n.unstable_ImmediatePriority,et=n.unstable_UserBlockingPriority,tt=n.unstable_NormalPriority,rt=n.unstable_LowPriority,it=n.unstable_IdlePriority,nt=null,st=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(at(e)/lt|0)|0},at=Math.log,lt=Math.LN2,ct=64,ut=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var r=e.pendingLanes;if(0===r)return 0;var i=0,n=e.suspendedLanes,s=e.pingedLanes,o=268435455&r;if(0!==o){var a=o&~n;0!==a?i=ht(a):0!=(s&=o)&&(i=ht(s))}else 0!=(o=r&~n)?i=ht(o):0!==s&&(i=ht(s));if(0===i)return 0;if(0!==t&&t!==i&&0==(t&n)&&((n=i&-i)>=(s=t&-t)||16===n&&0!=(4194240&s)))return t;if(0!=(4&i)&&(i|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=i;0<t;)n=1<<(r=31-ot(t)),i|=e[r],t&=~n;return i}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function _t(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=r}function mt(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var i=31-ot(r),n=1<<i;n&t|e[i]&t&&(e[i]|=t),r&=~n}}var bt=0;function yt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var St,Ct,wt,kt,Et,At=!1,xt=[],Lt=null,Rt=null,Tt=null,Dt=new Map,It=new Map,Ot=[],Pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Bt(e,t){switch(e){case"focusin":case"focusout":Lt=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":Dt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":It.delete(t.pointerId)}}function Mt(e,t,r,i,n,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:r,eventSystemFlags:i,nativeEvent:s,targetContainers:[n]},null!==t&&null!==(t=bn(t))&&Ct(t),e):(e.eventSystemFlags|=i,t=e.targetContainers,null!==n&&-1===t.indexOf(n)&&t.push(n),e)}function Nt(e){var t=mn(e.target);if(null!==t){var r=ze(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=We(r)))return e.blockedOn=t,void Et(e.priority,(function(){wt(r)}))}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Ht(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=bn(r))&&Ct(t),e.blockedOn=r,!1;var i=new(r=e.nativeEvent).constructor(r.type,r);ye=i,r.target.dispatchEvent(i),ye=null,t.shift()}return!0}function Ft(e,t,r){Ht(e)&&r.delete(t)}function Ut(){At=!1,null!==Lt&&Ht(Lt)&&(Lt=null),null!==Rt&&Ht(Rt)&&(Rt=null),null!==Tt&&Ht(Tt)&&(Tt=null),Dt.forEach(Ft),It.forEach(Ft)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,At||(At=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,Ut)))}function zt(e){function t(t){return jt(t,e)}if(0<xt.length){jt(xt[0],e);for(var r=1;r<xt.length;r++){var i=xt[r];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==Lt&&jt(Lt,e),null!==Rt&&jt(Rt,e),null!==Tt&&jt(Tt,e),Dt.forEach(t),It.forEach(t),r=0;r<Ot.length;r++)(i=Ot[r]).blockedOn===e&&(i.blockedOn=null);for(;0<Ot.length&&null===(r=Ot[0]).blockedOn;)Nt(r),null===r.blockedOn&&Ot.shift()}var Wt=y.ReactCurrentBatchConfig,$t=!0;function Kt(e,t,r,i){var n=bt,s=Wt.transition;Wt.transition=null;try{bt=1,qt(e,t,r,i)}finally{bt=n,Wt.transition=s}}function Vt(e,t,r,i){var n=bt,s=Wt.transition;Wt.transition=null;try{bt=4,qt(e,t,r,i)}finally{bt=n,Wt.transition=s}}function qt(e,t,r,i){if($t){var n=Gt(e,t,r,i);if(null===n)Wi(e,t,i,Zt,r),Bt(e,i);else if(function(e,t,r,i,n){switch(t){case"focusin":return Lt=Mt(Lt,e,t,r,i,n),!0;case"dragenter":return Rt=Mt(Rt,e,t,r,i,n),!0;case"mouseover":return Tt=Mt(Tt,e,t,r,i,n),!0;case"pointerover":var s=n.pointerId;return Dt.set(s,Mt(Dt.get(s)||null,e,t,r,i,n)),!0;case"gotpointercapture":return s=n.pointerId,It.set(s,Mt(It.get(s)||null,e,t,r,i,n)),!0}return!1}(n,e,t,r,i))i.stopPropagation();else if(Bt(e,i),4&t&&-1<Pt.indexOf(e)){for(;null!==n;){var s=bn(n);if(null!==s&&St(s),null===(s=Gt(e,t,r,i))&&Wi(e,t,i,Zt,r),s===n)break;n=s}null!==n&&i.stopPropagation()}else Wi(e,t,i,null,r)}}var Zt=null;function Gt(e,t,r,i){if(Zt=null,null!==(e=mn(e=Se(i))))if(null===(t=ze(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Zt=e,null}function Xt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Qe:return 1;case et:return 4;case tt:case rt:return 16;case it:return 536870912;default:return 16}default:return 16}}var Yt=null,Jt=null,Qt=null;function er(){if(Qt)return Qt;var e,t,r=Jt,i=r.length,n="value"in Yt?Yt.value:Yt.textContent,s=n.length;for(e=0;e<i&&r[e]===n[e];e++);var o=i-e;for(t=1;t<=o&&r[i-t]===n[s-t];t++);return Qt=n.slice(e,1<t?1-t:void 0)}function tr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rr(){return!0}function ir(){return!1}function nr(e){function t(t,r,i,n,s){for(var o in this._reactName=t,this._targetInst=i,this.type=r,this.nativeEvent=n,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(n):n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?rr:ir,this.isPropagationStopped=ir,this}return N(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rr)},persist:function(){},isPersistent:rr}),t}var sr,or,ar,lr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cr=nr(lr),ur=N({},lr,{view:0,detail:0}),hr=nr(ur),dr=N({},ur,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ar&&(ar&&"mousemove"===e.type?(sr=e.screenX-ar.screenX,or=e.screenY-ar.screenY):or=sr=0,ar=e),sr)},movementY:function(e){return"movementY"in e?e.movementY:or}}),fr=nr(dr),pr=nr(N({},dr,{dataTransfer:0})),vr=nr(N({},ur,{relatedTarget:0})),gr=nr(N({},lr,{animationName:0,elapsedTime:0,pseudoElement:0})),_r=N({},lr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),mr=nr(_r),br=nr(N({},lr,{data:0})),yr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function kr(){return wr}var Er=N({},ur,{key:function(e){if(e.key){var t=yr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kr,charCode:function(e){return"keypress"===e.type?tr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ar=nr(Er),xr=nr(N({},dr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Lr=nr(N({},ur,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kr})),Rr=nr(N({},lr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tr=N({},dr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dr=nr(Tr),Ir=[9,13,27,32],Or=u&&"CompositionEvent"in window,Pr=null;u&&"documentMode"in document&&(Pr=document.documentMode);var Br=u&&"TextEvent"in window&&!Pr,Mr=u&&(!Or||Pr&&8<Pr&&11>=Pr),Nr=String.fromCharCode(32),Hr=!1;function Fr(e,t){switch(e){case"keyup":return-1!==Ir.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ur(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jr=!1,zr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!zr[e.type]:"textarea"===t}function $r(e,t,r,i){Ae(i),0<(t=Ki(t,"onChange")).length&&(r=new cr("onChange","change",null,r,i),e.push({event:r,listeners:t}))}var Kr=null,Vr=null;function qr(e){Ni(e,0)}function Zr(e){if(q(yn(e)))return e}function Gr(e,t){if("change"===e)return t}var Xr=!1;if(u){var Yr;if(u){var Jr="oninput"in document;if(!Jr){var Qr=document.createElement("div");Qr.setAttribute("oninput","return;"),Jr="function"==typeof Qr.oninput}Yr=Jr}else Yr=!1;Xr=Yr&&(!document.documentMode||9<document.documentMode)}function ei(){Kr&&(Kr.detachEvent("onpropertychange",ti),Vr=Kr=null)}function ti(e){if("value"===e.propertyName&&Zr(Vr)){var t=[];$r(t,Vr,e,Se(e)),De(qr,t)}}function ri(e,t,r){"focusin"===e?(ei(),Vr=r,(Kr=t).attachEvent("onpropertychange",ti)):"focusout"===e&&ei()}function ii(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zr(Vr)}function ni(e,t){if("click"===e)return Zr(t)}function si(e,t){if("input"===e||"change"===e)return Zr(t)}var oi="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ai(e,t){if(oi(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),i=Object.keys(t);if(r.length!==i.length)return!1;for(i=0;i<r.length;i++){var n=r[i];if(!h.call(t,n)||!oi(e[n],t[n]))return!1}return!0}function li(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ci(e,t){var r,i=li(e);for(e=0;i;){if(3===i.nodeType){if(r=e+i.textContent.length,e<=t&&r>=t)return{node:i,offset:t-e};e=r}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=li(i)}}function ui(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ui(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hi(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=Z((e=t.contentWindow).document)}return t}function di(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fi(e){var t=hi(),r=e.focusedElem,i=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&ui(r.ownerDocument.documentElement,r)){if(null!==i&&di(r))if(t=i.start,void 0===(e=i.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var n=r.textContent.length,s=Math.min(i.start,n);i=void 0===i.end?s:Math.min(i.end,n),!e.extend&&s>i&&(n=i,i=s,s=n),n=ci(r,s);var o=ci(r,i);n&&o&&(1!==e.rangeCount||e.anchorNode!==n.node||e.anchorOffset!==n.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(n.node,n.offset),e.removeAllRanges(),s>i?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var pi=u&&"documentMode"in document&&11>=document.documentMode,vi=null,gi=null,_i=null,mi=!1;function bi(e,t,r){var i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;mi||null==vi||vi!==Z(i)||(i="selectionStart"in(i=vi)&&di(i)?{start:i.selectionStart,end:i.selectionEnd}:{anchorNode:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset},_i&&ai(_i,i)||(_i=i,0<(i=Ki(gi,"onSelect")).length&&(t=new cr("onSelect","select",null,t,r),e.push({event:t,listeners:i}),t.target=vi)))}function yi(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var Si={animationend:yi("Animation","AnimationEnd"),animationiteration:yi("Animation","AnimationIteration"),animationstart:yi("Animation","AnimationStart"),transitionend:yi("Transition","TransitionEnd")},Ci={},wi={};function ki(e){if(Ci[e])return Ci[e];if(!Si[e])return e;var t,r=Si[e];for(t in r)if(r.hasOwnProperty(t)&&t in wi)return Ci[e]=r[t];return e}u&&(wi=document.createElement("div").style,"AnimationEvent"in window||(delete Si.animationend.animation,delete Si.animationiteration.animation,delete Si.animationstart.animation),"TransitionEvent"in window||delete Si.transitionend.transition);var Ei=ki("animationend"),Ai=ki("animationiteration"),xi=ki("animationstart"),Li=ki("transitionend"),Ri=new Map,Ti="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Di(e,t){Ri.set(e,t),l(t,[e])}for(var Ii=0;Ii<Ti.length;Ii++){var Oi=Ti[Ii];Di(Oi.toLowerCase(),"on"+(Oi[0].toUpperCase()+Oi.slice(1)))}Di(Ei,"onAnimationEnd"),Di(Ai,"onAnimationIteration"),Di(xi,"onAnimationStart"),Di("dblclick","onDoubleClick"),Di("focusin","onFocus"),Di("focusout","onBlur"),Di(Li,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Pi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Bi=new Set("cancel close invalid load scroll toggle".split(" ").concat(Pi));function Mi(e,t,r){var i=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,i,n,o,a,l,c){if(je.apply(this,arguments),Me){if(!Me)throw Error(s(198));var u=Ne;Me=!1,Ne=null,He||(He=!0,Fe=u)}}(i,t,void 0,e),e.currentTarget=null}function Ni(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var i=e[r],n=i.event;i=i.listeners;e:{var s=void 0;if(t)for(var o=i.length-1;0<=o;o--){var a=i[o],l=a.instance,c=a.currentTarget;if(a=a.listener,l!==s&&n.isPropagationStopped())break e;Mi(n,a,c),s=l}else for(o=0;o<i.length;o++){if(l=(a=i[o]).instance,c=a.currentTarget,a=a.listener,l!==s&&n.isPropagationStopped())break e;Mi(n,a,c),s=l}}}if(He)throw e=Fe,He=!1,Fe=null,e}function Hi(e,t){var r=t[vn];void 0===r&&(r=t[vn]=new Set);var i=e+"__bubble";r.has(i)||(zi(t,e,2,!1),r.add(i))}function Fi(e,t,r){var i=0;t&&(i|=4),zi(r,e,i,t)}var Ui="_reactListening"+Math.random().toString(36).slice(2);function ji(e){if(!e[Ui]){e[Ui]=!0,o.forEach((function(t){"selectionchange"!==t&&(Bi.has(t)||Fi(t,!1,e),Fi(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ui]||(t[Ui]=!0,Fi("selectionchange",!1,t))}}function zi(e,t,r,i){switch(Xt(t)){case 1:var n=Kt;break;case 4:n=Vt;break;default:n=qt}r=n.bind(null,t,r,e),n=void 0,!Oe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(n=!0),i?void 0!==n?e.addEventListener(t,r,{capture:!0,passive:n}):e.addEventListener(t,r,!0):void 0!==n?e.addEventListener(t,r,{passive:n}):e.addEventListener(t,r,!1)}function Wi(e,t,r,i,n){var s=i;if(0==(1&t)&&0==(2&t)&&null!==i)e:for(;;){if(null===i)return;var o=i.tag;if(3===o||4===o){var a=i.stateNode.containerInfo;if(a===n||8===a.nodeType&&a.parentNode===n)break;if(4===o)for(o=i.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===n||8===l.nodeType&&l.parentNode===n))return;o=o.return}for(;null!==a;){if(null===(o=mn(a)))return;if(5===(l=o.tag)||6===l){i=s=o;continue e}a=a.parentNode}}i=i.return}De((function(){var i=s,n=Se(r),o=[];e:{var a=Ri.get(e);if(void 0!==a){var l=cr,c=e;switch(e){case"keypress":if(0===tr(r))break e;case"keydown":case"keyup":l=Ar;break;case"focusin":c="focus",l=vr;break;case"focusout":c="blur",l=vr;break;case"beforeblur":case"afterblur":l=vr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=pr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Lr;break;case Ei:case Ai:case xi:l=gr;break;case Li:l=Rr;break;case"scroll":l=hr;break;case"wheel":l=Dr;break;case"copy":case"cut":case"paste":l=mr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=xr}var u=0!=(4&t),h=!u&&"scroll"===e,d=u?null!==a?a+"Capture":null:a;u=[];for(var f,p=i;null!==p;){var v=(f=p).stateNode;if(5===f.tag&&null!==v&&(f=v,null!==d&&null!=(v=Ie(p,d))&&u.push($i(p,v,f))),h)break;p=p.return}0<u.length&&(a=new l(a,c,null,r,n),o.push({event:a,listeners:u}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(a="mouseover"===e||"pointerover"===e)||r===ye||!(c=r.relatedTarget||r.fromElement)||!mn(c)&&!c[pn])&&(l||a)&&(a=n.window===n?n:(a=n.ownerDocument)?a.defaultView||a.parentWindow:window,l?(l=i,null!==(c=(c=r.relatedTarget||r.toElement)?mn(c):null)&&(c!==(h=ze(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=i),l!==c)){if(u=fr,v="onMouseLeave",d="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(u=xr,v="onPointerLeave",d="onPointerEnter",p="pointer"),h=null==l?a:yn(l),f=null==c?a:yn(c),(a=new u(v,p+"leave",l,r,n)).target=h,a.relatedTarget=f,v=null,mn(n)===i&&((u=new u(d,p+"enter",c,r,n)).target=f,u.relatedTarget=h,v=u),h=v,l&&c)e:{for(d=c,p=0,f=u=l;f;f=Vi(f))p++;for(f=0,v=d;v;v=Vi(v))f++;for(;0<p-f;)u=Vi(u),p--;for(;0<f-p;)d=Vi(d),f--;for(;p--;){if(u===d||null!==d&&u===d.alternate)break e;u=Vi(u),d=Vi(d)}u=null}else u=null;null!==l&&qi(o,a,l,u,!1),null!==c&&null!==h&&qi(o,h,c,u,!0)}if("select"===(l=(a=i?yn(i):window).nodeName&&a.nodeName.toLowerCase())||"input"===l&&"file"===a.type)var g=Gr;else if(Wr(a))if(Xr)g=si;else{g=ii;var _=ri}else(l=a.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(g=ni);switch(g&&(g=g(e,i))?$r(o,g,r,n):(_&&_(e,a,i),"focusout"===e&&(_=a._wrapperState)&&_.controlled&&"number"===a.type&&ee(a,"number",a.value)),_=i?yn(i):window,e){case"focusin":(Wr(_)||"true"===_.contentEditable)&&(vi=_,gi=i,_i=null);break;case"focusout":_i=gi=vi=null;break;case"mousedown":mi=!0;break;case"contextmenu":case"mouseup":case"dragend":mi=!1,bi(o,r,n);break;case"selectionchange":if(pi)break;case"keydown":case"keyup":bi(o,r,n)}var m;if(Or)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else jr?Fr(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Mr&&"ko"!==r.locale&&(jr||"onCompositionStart"!==b?"onCompositionEnd"===b&&jr&&(m=er()):(Jt="value"in(Yt=n)?Yt.value:Yt.textContent,jr=!0)),0<(_=Ki(i,b)).length&&(b=new br(b,e,null,r,n),o.push({event:b,listeners:_}),(m||null!==(m=Ur(r)))&&(b.data=m))),(m=Br?function(e,t){switch(e){case"compositionend":return Ur(t);case"keypress":return 32!==t.which?null:(Hr=!0,Nr);case"textInput":return(e=t.data)===Nr&&Hr?null:e;default:return null}}(e,r):function(e,t){if(jr)return"compositionend"===e||!Or&&Fr(e,t)?(e=er(),Qt=Jt=Yt=null,jr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mr&&"ko"!==t.locale?null:t.data}}(e,r))&&0<(i=Ki(i,"onBeforeInput")).length&&(n=new br("onBeforeInput","beforeinput",null,r,n),o.push({event:n,listeners:i}),n.data=m)}Ni(o,t)}))}function $i(e,t,r){return{instance:e,listener:t,currentTarget:r}}function Ki(e,t){for(var r=t+"Capture",i=[];null!==e;){var n=e,s=n.stateNode;5===n.tag&&null!==s&&(n=s,null!=(s=Ie(e,r))&&i.unshift($i(e,s,n)),null!=(s=Ie(e,t))&&i.push($i(e,s,n))),e=e.return}return i}function Vi(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qi(e,t,r,i,n){for(var s=t._reactName,o=[];null!==r&&r!==i;){var a=r,l=a.alternate,c=a.stateNode;if(null!==l&&l===i)break;5===a.tag&&null!==c&&(a=c,n?null!=(l=Ie(r,s))&&o.unshift($i(r,l,a)):n||null!=(l=Ie(r,s))&&o.push($i(r,l,a))),r=r.return}0!==o.length&&e.push({event:t,listeners:o})}var Zi=/\r\n?/g,Gi=/\u0000|\uFFFD/g;function Xi(e){return("string"==typeof e?e:""+e).replace(Zi,"\n").replace(Gi,"")}function Yi(e,t,r){if(t=Xi(t),Xi(e)!==t&&r)throw Error(s(425))}function Ji(){}var Qi=null,en=null;function tn(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rn="function"==typeof setTimeout?setTimeout:void 0,nn="function"==typeof clearTimeout?clearTimeout:void 0,sn="function"==typeof Promise?Promise:void 0,on="function"==typeof queueMicrotask?queueMicrotask:void 0!==sn?function(e){return sn.resolve(null).then(e).catch(an)}:rn;function an(e){setTimeout((function(){throw e}))}function ln(e,t){var r=t,i=0;do{var n=r.nextSibling;if(e.removeChild(r),n&&8===n.nodeType)if("/$"===(r=n.data)){if(0===i)return e.removeChild(n),void zt(t);i--}else"$"!==r&&"$?"!==r&&"$!"!==r||i++;r=n}while(r);zt(t)}function cn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function un(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var hn=Math.random().toString(36).slice(2),dn="__reactFiber$"+hn,fn="__reactProps$"+hn,pn="__reactContainer$"+hn,vn="__reactEvents$"+hn,gn="__reactListeners$"+hn,_n="__reactHandles$"+hn;function mn(e){var t=e[dn];if(t)return t;for(var r=e.parentNode;r;){if(t=r[pn]||r[dn]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=un(e);null!==e;){if(r=e[dn])return r;e=un(e)}return t}r=(e=r).parentNode}return null}function bn(e){return!(e=e[dn]||e[pn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function yn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function Sn(e){return e[fn]||null}var Cn=[],wn=-1;function kn(e){return{current:e}}function En(e){0>wn||(e.current=Cn[wn],Cn[wn]=null,wn--)}function An(e,t){wn++,Cn[wn]=e.current,e.current=t}var xn={},Ln=kn(xn),Rn=kn(!1),Tn=xn;function Dn(e,t){var r=e.type.contextTypes;if(!r)return xn;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var n,s={};for(n in r)s[n]=t[n];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function In(e){return null!=e.childContextTypes}function On(){En(Rn),En(Ln)}function Pn(e,t,r){if(Ln.current!==xn)throw Error(s(168));An(Ln,t),An(Rn,r)}function Bn(e,t,r){var i=e.stateNode;if(t=t.childContextTypes,"function"!=typeof i.getChildContext)return r;for(var n in i=i.getChildContext())if(!(n in t))throw Error(s(108,W(e)||"Unknown",n));return N({},r,i)}function Mn(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||xn,Tn=Ln.current,An(Ln,e),An(Rn,Rn.current),!0}function Nn(e,t,r){var i=e.stateNode;if(!i)throw Error(s(169));r?(e=Bn(e,t,Tn),i.__reactInternalMemoizedMergedChildContext=e,En(Rn),En(Ln),An(Ln,e)):En(Rn),An(Rn,r)}var Hn=null,Fn=!1,Un=!1;function jn(e){null===Hn?Hn=[e]:Hn.push(e)}function zn(){if(!Un&&null!==Hn){Un=!0;var e=0,t=bt;try{var r=Hn;for(bt=1;e<r.length;e++){var i=r[e];do{i=i(!0)}while(null!==i)}Hn=null,Fn=!1}catch(t){throw null!==Hn&&(Hn=Hn.slice(e+1)),qe(Qe,zn),t}finally{bt=t,Un=!1}}return null}var Wn=[],$n=0,Kn=null,Vn=0,qn=[],Zn=0,Gn=null,Xn=1,Yn="";function Jn(e,t){Wn[$n++]=Vn,Wn[$n++]=Kn,Kn=e,Vn=t}function Qn(e,t,r){qn[Zn++]=Xn,qn[Zn++]=Yn,qn[Zn++]=Gn,Gn=e;var i=Xn;e=Yn;var n=32-ot(i)-1;i&=~(1<<n),r+=1;var s=32-ot(t)+n;if(30<s){var o=n-n%5;s=(i&(1<<o)-1).toString(32),i>>=o,n-=o,Xn=1<<32-ot(t)+n|r<<n|i,Yn=s+e}else Xn=1<<s|r<<n|i,Yn=e}function es(e){null!==e.return&&(Jn(e,1),Qn(e,1,0))}function ts(e){for(;e===Kn;)Kn=Wn[--$n],Wn[$n]=null,Vn=Wn[--$n],Wn[$n]=null;for(;e===Gn;)Gn=qn[--Zn],qn[Zn]=null,Yn=qn[--Zn],qn[Zn]=null,Xn=qn[--Zn],qn[Zn]=null}var rs=null,is=null,ns=!1,ss=null;function os(e,t){var r=Dc(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function as(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,rs=e,is=cn(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,rs=e,is=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==Gn?{id:Xn,overflow:Yn}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=Dc(18,null,null,0)).stateNode=t,r.return=e,e.child=r,rs=e,is=null,!0);default:return!1}}function ls(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function cs(e){if(ns){var t=is;if(t){var r=t;if(!as(e,t)){if(ls(e))throw Error(s(418));t=cn(r.nextSibling);var i=rs;t&&as(e,t)?os(i,r):(e.flags=-4097&e.flags|2,ns=!1,rs=e)}}else{if(ls(e))throw Error(s(418));e.flags=-4097&e.flags|2,ns=!1,rs=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;rs=e}function hs(e){if(e!==rs)return!1;if(!ns)return us(e),ns=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!tn(e.type,e.memoizedProps)),t&&(t=is)){if(ls(e))throw ds(),Error(s(418));for(;t;)os(e,t),t=cn(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){is=cn(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}is=null}}else is=rs?cn(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=is;e;)e=cn(e.nextSibling)}function fs(){is=rs=null,ns=!1}function ps(e){null===ss?ss=[e]:ss.push(e)}var vs=y.ReactCurrentBatchConfig;function gs(e,t){if(e&&e.defaultProps){for(var r in t=N({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var _s=kn(null),ms=null,bs=null,ys=null;function Ss(){ys=bs=ms=null}function Cs(e){var t=_s.current;En(_s),e._currentValue=t}function ws(e,t,r){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==i&&(i.childLanes|=t)):null!==i&&(i.childLanes&t)!==t&&(i.childLanes|=t),e===r)break;e=e.return}}function ks(e,t){ms=e,ys=bs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(ya=!0),e.firstContext=null)}function Es(e){var t=e._currentValue;if(ys!==e)if(e={context:e,memoizedValue:t,next:null},null===bs){if(null===ms)throw Error(s(308));bs=e,ms.dependencies={lanes:0,firstContext:e}}else bs=bs.next=e;return t}var As=null;function xs(e){null===As?As=[e]:As.push(e)}function Ls(e,t,r,i){var n=t.interleaved;return null===n?(r.next=r,xs(t)):(r.next=n.next,n.next=r),t.interleaved=r,Rs(e,i)}function Rs(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var Ts=!1;function Ds(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Is(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Os(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ps(e,t,r){var i=e.updateQueue;if(null===i)return null;if(i=i.shared,0!=(2&Ll)){var n=i.pending;return null===n?t.next=t:(t.next=n.next,n.next=t),i.pending=t,Rs(e,r)}return null===(n=i.interleaved)?(t.next=t,xs(i)):(t.next=n.next,n.next=t),i.interleaved=t,Rs(e,r)}function Bs(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&r))){var i=t.lanes;r|=i&=e.pendingLanes,t.lanes=r,mt(e,r)}}function Ms(e,t){var r=e.updateQueue,i=e.alternate;if(null!==i&&r===(i=i.updateQueue)){var n=null,s=null;if(null!==(r=r.firstBaseUpdate)){do{var o={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===s?n=s=o:s=s.next=o,r=r.next}while(null!==r);null===s?n=s=t:s=s.next=t}else n=s=t;return r={baseState:i.baseState,firstBaseUpdate:n,lastBaseUpdate:s,shared:i.shared,effects:i.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Ns(e,t,r,i){var n=e.updateQueue;Ts=!1;var s=n.firstBaseUpdate,o=n.lastBaseUpdate,a=n.shared.pending;if(null!==a){n.shared.pending=null;var l=a,c=l.next;l.next=null,null===o?s=c:o.next=c,o=l;var u=e.alternate;null!==u&&(a=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===a?u.firstBaseUpdate=c:a.next=c,u.lastBaseUpdate=l)}if(null!==s){var h=n.baseState;for(o=0,u=c=l=null,a=s;;){var d=a.lane,f=a.eventTime;if((i&d)===d){null!==u&&(u=u.next={eventTime:f,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var p=e,v=a;switch(d=t,f=r,v.tag){case 1:if("function"==typeof(p=v.payload)){h=p.call(f,h,d);break e}h=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null==(d="function"==typeof(p=v.payload)?p.call(f,h,d):p))break e;h=N({},h,d);break e;case 2:Ts=!0}}null!==a.callback&&0!==a.lane&&(e.flags|=64,null===(d=n.effects)?n.effects=[a]:d.push(a))}else f={eventTime:f,lane:d,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===u?(c=u=f,l=h):u=u.next=f,o|=d;if(null===(a=a.next)){if(null===(a=n.shared.pending))break;a=(d=a).next,d.next=null,n.lastBaseUpdate=d,n.shared.pending=null}}if(null===u&&(l=h),n.baseState=l,n.firstBaseUpdate=c,n.lastBaseUpdate=u,null!==(t=n.shared.interleaved)){n=t;do{o|=n.lane,n=n.next}while(n!==t)}else null===s&&(n.shared.lanes=0);Ml|=o,e.lanes=o,e.memoizedState=h}}function Hs(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],n=i.callback;if(null!==n){if(i.callback=null,i=r,"function"!=typeof n)throw Error(s(191,n));n.call(i)}}}var Fs=(new i.Component).refs;function Us(e,t,r,i){r=null==(r=r(i,t=e.memoizedState))?t:N({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var js={isMounted:function(e){return!!(e=e._reactInternals)&&ze(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var i=ec(),n=tc(e),s=Os(i,n);s.payload=t,null!=r&&(s.callback=r),null!==(t=Ps(e,s,n))&&(rc(t,e,n,i),Bs(t,e,n))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var i=ec(),n=tc(e),s=Os(i,n);s.tag=1,s.payload=t,null!=r&&(s.callback=r),null!==(t=Ps(e,s,n))&&(rc(t,e,n,i),Bs(t,e,n))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=ec(),i=tc(e),n=Os(r,i);n.tag=2,null!=t&&(n.callback=t),null!==(t=Ps(e,n,i))&&(rc(t,e,i,r),Bs(t,e,i))}};function zs(e,t,r,i,n,s,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,s,o):!(t.prototype&&t.prototype.isPureReactComponent&&ai(r,i)&&ai(n,s))}function Ws(e,t,r){var i=!1,n=xn,s=t.contextType;return"object"==typeof s&&null!==s?s=Es(s):(n=In(t)?Tn:Ln.current,s=(i=null!=(i=t.contextTypes))?Dn(e,n):xn),t=new t(r,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=js,e.stateNode=t,t._reactInternals=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=s),t}function $s(e,t,r,i){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,i),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,i),t.state!==e&&js.enqueueReplaceState(t,t.state,null)}function Ks(e,t,r,i){var n=e.stateNode;n.props=r,n.state=e.memoizedState,n.refs=Fs,Ds(e);var s=t.contextType;"object"==typeof s&&null!==s?n.context=Es(s):(s=In(t)?Tn:Ln.current,n.context=Dn(e,s)),n.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(Us(e,t,s,r),n.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof n.getSnapshotBeforeUpdate||"function"!=typeof n.UNSAFE_componentWillMount&&"function"!=typeof n.componentWillMount||(t=n.state,"function"==typeof n.componentWillMount&&n.componentWillMount(),"function"==typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount(),t!==n.state&&js.enqueueReplaceState(n,n.state,null),Ns(e,r,n,i),n.state=e.memoizedState),"function"==typeof n.componentDidMount&&(e.flags|=4194308)}function Vs(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(s(309));var i=r.stateNode}if(!i)throw Error(s(147,e));var n=i,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=n.refs;t===Fs&&(t=n.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(s(284));if(!r._owner)throw Error(s(290,e))}return e}function qs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Zs(e){return(0,e._init)(e._payload)}function Gs(e){function t(t,r){if(e){var i=t.deletions;null===i?(t.deletions=[r],t.flags|=16):i.push(r)}}function r(r,i){if(!e)return null;for(;null!==i;)t(r,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function n(e,t){return(e=Oc(e,t)).index=0,e.sibling=null,e}function o(t,r,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<r?(t.flags|=2,r):i:(t.flags|=2,r):(t.flags|=1048576,r)}function a(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,r,i){return null===t||6!==t.tag?((t=Nc(r,e.mode,i)).return=e,t):((t=n(t,r)).return=e,t)}function c(e,t,r,i){var s=r.type;return s===w?h(e,t,r.props.children,i,r.key):null!==t&&(t.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===I&&Zs(s)===t.type)?((i=n(t,r.props)).ref=Vs(e,t,r),i.return=e,i):((i=Pc(r.type,r.key,r.props,null,e.mode,i)).ref=Vs(e,t,r),i.return=e,i)}function u(e,t,r,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Hc(r,e.mode,i)).return=e,t):((t=n(t,r.children||[])).return=e,t)}function h(e,t,r,i,s){return null===t||7!==t.tag?((t=Bc(r,e.mode,i,s)).return=e,t):((t=n(t,r)).return=e,t)}function d(e,t,r){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Nc(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(r=Pc(t.type,t.key,t.props,null,e.mode,r)).ref=Vs(e,null,t),r.return=e,r;case C:return(t=Hc(t,e.mode,r)).return=e,t;case I:return d(e,(0,t._init)(t._payload),r)}if(te(t)||B(t))return(t=Bc(t,e.mode,r,null)).return=e,t;qs(e,t)}return null}function f(e,t,r,i){var n=null!==t?t.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==n?null:l(e,t,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return r.key===n?c(e,t,r,i):null;case C:return r.key===n?u(e,t,r,i):null;case I:return f(e,t,(n=r._init)(r._payload),i)}if(te(r)||B(r))return null!==n?null:h(e,t,r,i,null);qs(e,r)}return null}function p(e,t,r,i,n){if("string"==typeof i&&""!==i||"number"==typeof i)return l(t,e=e.get(r)||null,""+i,n);if("object"==typeof i&&null!==i){switch(i.$$typeof){case S:return c(t,e=e.get(null===i.key?r:i.key)||null,i,n);case C:return u(t,e=e.get(null===i.key?r:i.key)||null,i,n);case I:return p(e,t,r,(0,i._init)(i._payload),n)}if(te(i)||B(i))return h(t,e=e.get(r)||null,i,n,null);qs(t,i)}return null}function v(n,s,a,l){for(var c=null,u=null,h=s,v=s=0,g=null;null!==h&&v<a.length;v++){h.index>v?(g=h,h=null):g=h.sibling;var _=f(n,h,a[v],l);if(null===_){null===h&&(h=g);break}e&&h&&null===_.alternate&&t(n,h),s=o(_,s,v),null===u?c=_:u.sibling=_,u=_,h=g}if(v===a.length)return r(n,h),ns&&Jn(n,v),c;if(null===h){for(;v<a.length;v++)null!==(h=d(n,a[v],l))&&(s=o(h,s,v),null===u?c=h:u.sibling=h,u=h);return ns&&Jn(n,v),c}for(h=i(n,h);v<a.length;v++)null!==(g=p(h,n,v,a[v],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),s=o(g,s,v),null===u?c=g:u.sibling=g,u=g);return e&&h.forEach((function(e){return t(n,e)})),ns&&Jn(n,v),c}function g(n,a,l,c){var u=B(l);if("function"!=typeof u)throw Error(s(150));if(null==(l=u.call(l)))throw Error(s(151));for(var h=u=null,v=a,g=a=0,_=null,m=l.next();null!==v&&!m.done;g++,m=l.next()){v.index>g?(_=v,v=null):_=v.sibling;var b=f(n,v,m.value,c);if(null===b){null===v&&(v=_);break}e&&v&&null===b.alternate&&t(n,v),a=o(b,a,g),null===h?u=b:h.sibling=b,h=b,v=_}if(m.done)return r(n,v),ns&&Jn(n,g),u;if(null===v){for(;!m.done;g++,m=l.next())null!==(m=d(n,m.value,c))&&(a=o(m,a,g),null===h?u=m:h.sibling=m,h=m);return ns&&Jn(n,g),u}for(v=i(n,v);!m.done;g++,m=l.next())null!==(m=p(v,n,g,m.value,c))&&(e&&null!==m.alternate&&v.delete(null===m.key?g:m.key),a=o(m,a,g),null===h?u=m:h.sibling=m,h=m);return e&&v.forEach((function(e){return t(n,e)})),ns&&Jn(n,g),u}return function e(i,s,o,l){if("object"==typeof o&&null!==o&&o.type===w&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case S:e:{for(var c=o.key,u=s;null!==u;){if(u.key===c){if((c=o.type)===w){if(7===u.tag){r(i,u.sibling),(s=n(u,o.props.children)).return=i,i=s;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===I&&Zs(c)===u.type){r(i,u.sibling),(s=n(u,o.props)).ref=Vs(i,u,o),s.return=i,i=s;break e}r(i,u);break}t(i,u),u=u.sibling}o.type===w?((s=Bc(o.props.children,i.mode,l,o.key)).return=i,i=s):((l=Pc(o.type,o.key,o.props,null,i.mode,l)).ref=Vs(i,s,o),l.return=i,i=l)}return a(i);case C:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){r(i,s.sibling),(s=n(s,o.children||[])).return=i,i=s;break e}r(i,s);break}t(i,s),s=s.sibling}(s=Hc(o,i.mode,l)).return=i,i=s}return a(i);case I:return e(i,s,(u=o._init)(o._payload),l)}if(te(o))return v(i,s,o,l);if(B(o))return g(i,s,o,l);qs(i,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==s&&6===s.tag?(r(i,s.sibling),(s=n(s,o)).return=i,i=s):(r(i,s),(s=Nc(o,i.mode,l)).return=i,i=s),a(i)):r(i,s)}}var Xs=Gs(!0),Ys=Gs(!1),Js={},Qs=kn(Js),eo=kn(Js),to=kn(Js);function ro(e){if(e===Js)throw Error(s(174));return e}function io(e,t){switch(An(to,t),An(eo,e),An(Qs,Js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}En(Qs),An(Qs,t)}function no(){En(Qs),En(eo),En(to)}function so(e){ro(to.current);var t=ro(Qs.current),r=le(t,e.type);t!==r&&(An(eo,e),An(Qs,r))}function oo(e){eo.current===e&&(En(Qs),En(eo))}var ao=kn(0);function lo(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var co=[];function uo(){for(var e=0;e<co.length;e++)co[e]._workInProgressVersionPrimary=null;co.length=0}var ho=y.ReactCurrentDispatcher,fo=y.ReactCurrentBatchConfig,po=0,vo=null,go=null,_o=null,mo=!1,bo=!1,yo=0,So=0;function Co(){throw Error(s(321))}function wo(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!oi(e[r],t[r]))return!1;return!0}function ko(e,t,r,i,n,o){if(po=o,vo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ho.current=null===e||null===e.memoizedState?aa:la,e=r(i,n),bo){o=0;do{if(bo=!1,yo=0,25<=o)throw Error(s(301));o+=1,_o=go=null,t.updateQueue=null,ho.current=ca,e=r(i,n)}while(bo)}if(ho.current=oa,t=null!==go&&null!==go.next,po=0,_o=go=vo=null,mo=!1,t)throw Error(s(300));return e}function Eo(){var e=0!==yo;return yo=0,e}function Ao(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===_o?vo.memoizedState=_o=e:_o=_o.next=e,_o}function xo(){if(null===go){var e=vo.alternate;e=null!==e?e.memoizedState:null}else e=go.next;var t=null===_o?vo.memoizedState:_o.next;if(null!==t)_o=t,go=e;else{if(null===e)throw Error(s(310));e={memoizedState:(go=e).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===_o?vo.memoizedState=_o=e:_o=_o.next=e}return _o}function Lo(e,t){return"function"==typeof t?t(e):t}function Ro(e){var t=xo(),r=t.queue;if(null===r)throw Error(s(311));r.lastRenderedReducer=e;var i=go,n=i.baseQueue,o=r.pending;if(null!==o){if(null!==n){var a=n.next;n.next=o.next,o.next=a}i.baseQueue=n=o,r.pending=null}if(null!==n){o=n.next,i=i.baseState;var l=a=null,c=null,u=o;do{var h=u.lane;if((po&h)===h)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),i=u.hasEagerState?u.eagerState:e(i,u.action);else{var d={lane:h,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=d,a=i):c=c.next=d,vo.lanes|=h,Ml|=h}u=u.next}while(null!==u&&u!==o);null===c?a=i:c.next=l,oi(i,t.memoizedState)||(ya=!0),t.memoizedState=i,t.baseState=a,t.baseQueue=c,r.lastRenderedState=i}if(null!==(e=r.interleaved)){n=e;do{o=n.lane,vo.lanes|=o,Ml|=o,n=n.next}while(n!==e)}else null===n&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function To(e){var t=xo(),r=t.queue;if(null===r)throw Error(s(311));r.lastRenderedReducer=e;var i=r.dispatch,n=r.pending,o=t.memoizedState;if(null!==n){r.pending=null;var a=n=n.next;do{o=e(o,a.action),a=a.next}while(a!==n);oi(o,t.memoizedState)||(ya=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),r.lastRenderedState=o}return[o,i]}function Do(){}function Io(e,t){var r=vo,i=xo(),n=t(),o=!oi(i.memoizedState,n);if(o&&(i.memoizedState=n,ya=!0),i=i.queue,$o(Bo.bind(null,r,i,e),[e]),i.getSnapshot!==t||o||null!==_o&&1&_o.memoizedState.tag){if(r.flags|=2048,Fo(9,Po.bind(null,r,i,n,t),void 0,null),null===Rl)throw Error(s(349));0!=(30&po)||Oo(r,t,n)}return n}function Oo(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=vo.updateQueue)?(t={lastEffect:null,stores:null},vo.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function Po(e,t,r,i){t.value=r,t.getSnapshot=i,Mo(t)&&No(e)}function Bo(e,t,r){return r((function(){Mo(t)&&No(e)}))}function Mo(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!oi(e,r)}catch(e){return!0}}function No(e){var t=Rs(e,1);null!==t&&rc(t,e,1,-1)}function Ho(e){var t=Ao();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Lo,lastRenderedState:e},t.queue=e,e=e.dispatch=ra.bind(null,vo,e),[t.memoizedState,e]}function Fo(e,t,r,i){return e={tag:e,create:t,destroy:r,deps:i,next:null},null===(t=vo.updateQueue)?(t={lastEffect:null,stores:null},vo.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(i=r.next,r.next=e,e.next=i,t.lastEffect=e),e}function Uo(){return xo().memoizedState}function jo(e,t,r,i){var n=Ao();vo.flags|=e,n.memoizedState=Fo(1|t,r,void 0,void 0===i?null:i)}function zo(e,t,r,i){var n=xo();i=void 0===i?null:i;var s=void 0;if(null!==go){var o=go.memoizedState;if(s=o.destroy,null!==i&&wo(i,o.deps))return void(n.memoizedState=Fo(t,r,s,i))}vo.flags|=e,n.memoizedState=Fo(1|t,r,s,i)}function Wo(e,t){return jo(8390656,8,e,t)}function $o(e,t){return zo(2048,8,e,t)}function Ko(e,t){return zo(4,2,e,t)}function Vo(e,t){return zo(4,4,e,t)}function qo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Zo(e,t,r){return r=null!=r?r.concat([e]):null,zo(4,4,qo.bind(null,t,e),r)}function Go(){}function Xo(e,t){var r=xo();t=void 0===t?null:t;var i=r.memoizedState;return null!==i&&null!==t&&wo(t,i[1])?i[0]:(r.memoizedState=[e,t],e)}function Yo(e,t){var r=xo();t=void 0===t?null:t;var i=r.memoizedState;return null!==i&&null!==t&&wo(t,i[1])?i[0]:(e=e(),r.memoizedState=[e,t],e)}function Jo(e,t,r){return 0==(21&po)?(e.baseState&&(e.baseState=!1,ya=!0),e.memoizedState=r):(oi(r,t)||(r=vt(),vo.lanes|=r,Ml|=r,e.baseState=!0),t)}function Qo(e,t){var r=bt;bt=0!==r&&4>r?r:4,e(!0);var i=fo.transition;fo.transition={};try{e(!1),t()}finally{bt=r,fo.transition=i}}function ea(){return xo().memoizedState}function ta(e,t,r){var i=tc(e);r={lane:i,action:r,hasEagerState:!1,eagerState:null,next:null},ia(e)?na(t,r):null!==(r=Ls(e,t,r,i))&&(rc(r,e,i,ec()),sa(r,t,i))}function ra(e,t,r){var i=tc(e),n={lane:i,action:r,hasEagerState:!1,eagerState:null,next:null};if(ia(e))na(t,n);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,a=s(o,r);if(n.hasEagerState=!0,n.eagerState=a,oi(a,o)){var l=t.interleaved;return null===l?(n.next=n,xs(t)):(n.next=l.next,l.next=n),void(t.interleaved=n)}}catch(e){}null!==(r=Ls(e,t,n,i))&&(rc(r,e,i,n=ec()),sa(r,t,i))}}function ia(e){var t=e.alternate;return e===vo||null!==t&&t===vo}function na(e,t){bo=mo=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function sa(e,t,r){if(0!=(4194240&r)){var i=t.lanes;r|=i&=e.pendingLanes,t.lanes=r,mt(e,r)}}var oa={readContext:Es,useCallback:Co,useContext:Co,useEffect:Co,useImperativeHandle:Co,useInsertionEffect:Co,useLayoutEffect:Co,useMemo:Co,useReducer:Co,useRef:Co,useState:Co,useDebugValue:Co,useDeferredValue:Co,useTransition:Co,useMutableSource:Co,useSyncExternalStore:Co,useId:Co,unstable_isNewReconciler:!1},aa={readContext:Es,useCallback:function(e,t){return Ao().memoizedState=[e,void 0===t?null:t],e},useContext:Es,useEffect:Wo,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,jo(4194308,4,qo.bind(null,t,e),r)},useLayoutEffect:function(e,t){return jo(4194308,4,e,t)},useInsertionEffect:function(e,t){return jo(4,2,e,t)},useMemo:function(e,t){var r=Ao();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var i=Ao();return t=void 0!==r?r(t):t,i.memoizedState=i.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},i.queue=e,e=e.dispatch=ta.bind(null,vo,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Ao().memoizedState=e},useState:Ho,useDebugValue:Go,useDeferredValue:function(e){return Ao().memoizedState=e},useTransition:function(){var e=Ho(!1),t=e[0];return e=Qo.bind(null,e[1]),Ao().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var i=vo,n=Ao();if(ns){if(void 0===r)throw Error(s(407));r=r()}else{if(r=t(),null===Rl)throw Error(s(349));0!=(30&po)||Oo(i,t,r)}n.memoizedState=r;var o={value:r,getSnapshot:t};return n.queue=o,Wo(Bo.bind(null,i,o,e),[e]),i.flags|=2048,Fo(9,Po.bind(null,i,o,r,t),void 0,null),r},useId:function(){var e=Ao(),t=Rl.identifierPrefix;if(ns){var r=Yn;t=":"+t+"R"+(r=(Xn&~(1<<32-ot(Xn)-1)).toString(32)+r),0<(r=yo++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=So++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},la={readContext:Es,useCallback:Xo,useContext:Es,useEffect:$o,useImperativeHandle:Zo,useInsertionEffect:Ko,useLayoutEffect:Vo,useMemo:Yo,useReducer:Ro,useRef:Uo,useState:function(){return Ro(Lo)},useDebugValue:Go,useDeferredValue:function(e){return Jo(xo(),go.memoizedState,e)},useTransition:function(){return[Ro(Lo)[0],xo().memoizedState]},useMutableSource:Do,useSyncExternalStore:Io,useId:ea,unstable_isNewReconciler:!1},ca={readContext:Es,useCallback:Xo,useContext:Es,useEffect:$o,useImperativeHandle:Zo,useInsertionEffect:Ko,useLayoutEffect:Vo,useMemo:Yo,useReducer:To,useRef:Uo,useState:function(){return To(Lo)},useDebugValue:Go,useDeferredValue:function(e){var t=xo();return null===go?t.memoizedState=e:Jo(t,go.memoizedState,e)},useTransition:function(){return[To(Lo)[0],xo().memoizedState]},useMutableSource:Do,useSyncExternalStore:Io,useId:ea,unstable_isNewReconciler:!1};function ua(e,t){try{var r="",i=t;do{r+=j(i),i=i.return}while(i);var n=r}catch(e){n="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:n,digest:null}}function ha(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function da(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var fa="function"==typeof WeakMap?WeakMap:Map;function pa(e,t,r){(r=Os(-1,r)).tag=3,r.payload={element:null};var i=t.value;return r.callback=function(){$l||($l=!0,Kl=i),da(0,t)},r}function va(e,t,r){(r=Os(-1,r)).tag=3;var i=e.type.getDerivedStateFromError;if("function"==typeof i){var n=t.value;r.payload=function(){return i(n)},r.callback=function(){da(0,t)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(r.callback=function(){da(0,t),"function"!=typeof i&&(null===Vl?Vl=new Set([this]):Vl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}function ga(e,t,r){var i=e.pingCache;if(null===i){i=e.pingCache=new fa;var n=new Set;i.set(t,n)}else void 0===(n=i.get(t))&&(n=new Set,i.set(t,n));n.has(r)||(n.add(r),e=Ec.bind(null,e,t,r),t.then(e,e))}function _a(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ma(e,t,r,i,n){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=Os(-1,1)).tag=2,Ps(r,t,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=n,e)}var ba=y.ReactCurrentOwner,ya=!1;function Sa(e,t,r,i){t.child=null===e?Ys(t,null,r,i):Xs(t,e.child,r,i)}function Ca(e,t,r,i,n){r=r.render;var s=t.ref;return ks(t,n),i=ko(e,t,r,i,s,n),r=Eo(),null===e||ya?(ns&&r&&es(t),t.flags|=1,Sa(e,t,i,n),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n,$a(e,t,n))}function wa(e,t,r,i,n){if(null===e){var s=r.type;return"function"!=typeof s||Ic(s)||void 0!==s.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Pc(r.type,null,i,t,t.mode,n)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,ka(e,t,s,i,n))}if(s=e.child,0==(e.lanes&n)){var o=s.memoizedProps;if((r=null!==(r=r.compare)?r:ai)(o,i)&&e.ref===t.ref)return $a(e,t,n)}return t.flags|=1,(e=Oc(s,i)).ref=t.ref,e.return=t,t.child=e}function ka(e,t,r,i,n){if(null!==e){var s=e.memoizedProps;if(ai(s,i)&&e.ref===t.ref){if(ya=!1,t.pendingProps=i=s,0==(e.lanes&n))return t.lanes=e.lanes,$a(e,t,n);0!=(131072&e.flags)&&(ya=!0)}}return xa(e,t,r,i,n)}function Ea(e,t,r){var i=t.pendingProps,n=i.children,s=null!==e?e.memoizedState:null;if("hidden"===i.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},An(Ol,Il),Il|=r;else{if(0==(1073741824&r))return e=null!==s?s.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,An(Ol,Il),Il|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=null!==s?s.baseLanes:r,An(Ol,Il),Il|=i}else null!==s?(i=s.baseLanes|r,t.memoizedState=null):i=r,An(Ol,Il),Il|=i;return Sa(e,t,n,r),t.child}function Aa(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function xa(e,t,r,i,n){var s=In(r)?Tn:Ln.current;return s=Dn(t,s),ks(t,n),r=ko(e,t,r,i,s,n),i=Eo(),null===e||ya?(ns&&i&&es(t),t.flags|=1,Sa(e,t,r,n),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n,$a(e,t,n))}function La(e,t,r,i,n){if(In(r)){var s=!0;Mn(t)}else s=!1;if(ks(t,n),null===t.stateNode)Wa(e,t),Ws(t,r,i),Ks(t,r,i,n),i=!0;else if(null===e){var o=t.stateNode,a=t.memoizedProps;o.props=a;var l=o.context,c=r.contextType;c="object"==typeof c&&null!==c?Es(c):Dn(t,c=In(r)?Tn:Ln.current);var u=r.getDerivedStateFromProps,h="function"==typeof u||"function"==typeof o.getSnapshotBeforeUpdate;h||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(a!==i||l!==c)&&$s(t,o,i,c),Ts=!1;var d=t.memoizedState;o.state=d,Ns(t,i,o,n),l=t.memoizedState,a!==i||d!==l||Rn.current||Ts?("function"==typeof u&&(Us(t,r,u,i),l=t.memoizedState),(a=Ts||zs(t,r,a,i,d,l,c))?(h||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=i,t.memoizedState=l),o.props=i,o.state=l,o.context=c,i=a):("function"==typeof o.componentDidMount&&(t.flags|=4194308),i=!1)}else{o=t.stateNode,Is(e,t),a=t.memoizedProps,c=t.type===t.elementType?a:gs(t.type,a),o.props=c,h=t.pendingProps,d=o.context,l="object"==typeof(l=r.contextType)&&null!==l?Es(l):Dn(t,l=In(r)?Tn:Ln.current);var f=r.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(a!==h||d!==l)&&$s(t,o,i,l),Ts=!1,d=t.memoizedState,o.state=d,Ns(t,i,o,n);var p=t.memoizedState;a!==h||d!==p||Rn.current||Ts?("function"==typeof f&&(Us(t,r,f,i),p=t.memoizedState),(c=Ts||zs(t,r,c,i,d,p,l)||!1)?(u||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(i,p,l),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(i,p,l)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=i,t.memoizedState=p),o.props=i,o.state=p,o.context=l,i=c):("function"!=typeof o.componentDidUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),i=!1)}return Ra(e,t,r,i,s,n)}function Ra(e,t,r,i,n,s){Aa(e,t);var o=0!=(128&t.flags);if(!i&&!o)return n&&Nn(t,r,!1),$a(e,t,s);i=t.stateNode,ba.current=t;var a=o&&"function"!=typeof r.getDerivedStateFromError?null:i.render();return t.flags|=1,null!==e&&o?(t.child=Xs(t,e.child,null,s),t.child=Xs(t,null,a,s)):Sa(e,t,a,s),t.memoizedState=i.state,n&&Nn(t,r,!0),t.child}function Ta(e){var t=e.stateNode;t.pendingContext?Pn(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Pn(0,t.context,!1),io(e,t.containerInfo)}function Da(e,t,r,i,n){return fs(),ps(n),t.flags|=256,Sa(e,t,r,i),t.child}var Ia,Oa,Pa,Ba={dehydrated:null,treeContext:null,retryLane:0};function Ma(e){return{baseLanes:e,cachePool:null,transitions:null}}function Na(e,t,r){var i,n=t.pendingProps,o=ao.current,a=!1,l=0!=(128&t.flags);if((i=l)||(i=(null===e||null!==e.memoizedState)&&0!=(2&o)),i?(a=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),An(ao,1&o),null===e)return cs(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=n.children,e=n.fallback,a?(n=t.mode,a=t.child,l={mode:"hidden",children:l},0==(1&n)&&null!==a?(a.childLanes=0,a.pendingProps=l):a=Mc(l,n,0,null),e=Bc(e,n,r,null),a.return=t,e.return=t,a.sibling=e,t.child=a,t.child.memoizedState=Ma(r),t.memoizedState=Ba,e):Ha(t,l));if(null!==(o=e.memoizedState)&&null!==(i=o.dehydrated))return function(e,t,r,i,n,o,a){if(r)return 256&t.flags?(t.flags&=-257,Fa(e,t,a,i=ha(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=i.fallback,n=t.mode,i=Mc({mode:"visible",children:i.children},n,0,null),(o=Bc(o,n,a,null)).flags|=2,i.return=t,o.return=t,i.sibling=o,t.child=i,0!=(1&t.mode)&&Xs(t,e.child,null,a),t.child.memoizedState=Ma(a),t.memoizedState=Ba,o);if(0==(1&t.mode))return Fa(e,t,a,null);if("$!"===n.data){if(i=n.nextSibling&&n.nextSibling.dataset)var l=i.dgst;return i=l,Fa(e,t,a,i=ha(o=Error(s(419)),i,void 0))}if(l=0!=(a&e.childLanes),ya||l){if(null!==(i=Rl)){switch(a&-a){case 4:n=2;break;case 16:n=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:n=32;break;case 536870912:n=268435456;break;default:n=0}0!==(n=0!=(n&(i.suspendedLanes|a))?0:n)&&n!==o.retryLane&&(o.retryLane=n,Rs(e,n),rc(i,e,n,-1))}return vc(),Fa(e,t,a,i=ha(Error(s(421))))}return"$?"===n.data?(t.flags|=128,t.child=e.child,t=xc.bind(null,e),n._reactRetry=t,null):(e=o.treeContext,is=cn(n.nextSibling),rs=t,ns=!0,ss=null,null!==e&&(qn[Zn++]=Xn,qn[Zn++]=Yn,qn[Zn++]=Gn,Xn=e.id,Yn=e.overflow,Gn=t),(t=Ha(t,i.children)).flags|=4096,t)}(e,t,l,n,i,o,r);if(a){a=n.fallback,l=t.mode,i=(o=e.child).sibling;var c={mode:"hidden",children:n.children};return 0==(1&l)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=c,t.deletions=null):(n=Oc(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==i?a=Oc(i,a):(a=Bc(a,l,r,null)).flags|=2,a.return=t,n.return=t,n.sibling=a,t.child=n,n=a,a=t.child,l=null===(l=e.child.memoizedState)?Ma(r):{baseLanes:l.baseLanes|r,cachePool:null,transitions:l.transitions},a.memoizedState=l,a.childLanes=e.childLanes&~r,t.memoizedState=Ba,n}return e=(a=e.child).sibling,n=Oc(a,{mode:"visible",children:n.children}),0==(1&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n,t.memoizedState=null,n}function Ha(e,t){return(t=Mc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Fa(e,t,r,i){return null!==i&&ps(i),Xs(t,e.child,null,r),(e=Ha(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ua(e,t,r){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),ws(e.return,t,r)}function ja(e,t,r,i,n){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:r,tailMode:n}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=i,s.tail=r,s.tailMode=n)}function za(e,t,r){var i=t.pendingProps,n=i.revealOrder,s=i.tail;if(Sa(e,t,i.children,r),0!=(2&(i=ao.current)))i=1&i|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ua(e,r,t);else if(19===e.tag)Ua(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(An(ao,i),0==(1&t.mode))t.memoizedState=null;else switch(n){case"forwards":for(r=t.child,n=null;null!==r;)null!==(e=r.alternate)&&null===lo(e)&&(n=r),r=r.sibling;null===(r=n)?(n=t.child,t.child=null):(n=r.sibling,r.sibling=null),ja(t,!1,n,r,s);break;case"backwards":for(r=null,n=t.child,t.child=null;null!==n;){if(null!==(e=n.alternate)&&null===lo(e)){t.child=n;break}e=n.sibling,n.sibling=r,r=n,n=e}ja(t,!0,r,null,s);break;case"together":ja(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Wa(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function $a(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0==(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(r=Oc(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Oc(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function Ka(e,t){if(!ns)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var i=null;null!==r;)null!==r.alternate&&(i=r),r=r.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Va(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,i=0;if(t)for(var n=e.child;null!==n;)r|=n.lanes|n.childLanes,i|=14680064&n.subtreeFlags,i|=14680064&n.flags,n.return=e,n=n.sibling;else for(n=e.child;null!==n;)r|=n.lanes|n.childLanes,i|=n.subtreeFlags,i|=n.flags,n.return=e,n=n.sibling;return e.subtreeFlags|=i,e.childLanes=r,t}function qa(e,t,r){var i=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Va(t),null;case 1:case 17:return In(t.type)&&On(),Va(t),null;case 3:return i=t.stateNode,no(),En(Rn),En(Ln),uo(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),null!==e&&null!==e.child||(hs(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==ss&&(oc(ss),ss=null))),Va(t),null;case 5:oo(t);var n=ro(to.current);if(r=t.type,null!==e&&null!=t.stateNode)Oa(e,t,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!i){if(null===t.stateNode)throw Error(s(166));return Va(t),null}if(e=ro(Qs.current),hs(t)){i=t.stateNode,r=t.type;var o=t.memoizedProps;switch(i[dn]=t,i[fn]=o,e=0!=(1&t.mode),r){case"dialog":Hi("cancel",i),Hi("close",i);break;case"iframe":case"object":case"embed":Hi("load",i);break;case"video":case"audio":for(n=0;n<Pi.length;n++)Hi(Pi[n],i);break;case"source":Hi("error",i);break;case"img":case"image":case"link":Hi("error",i),Hi("load",i);break;case"details":Hi("toggle",i);break;case"input":X(i,o),Hi("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!o.multiple},Hi("invalid",i);break;case"textarea":ne(i,o),Hi("invalid",i)}for(var l in me(r,o),n=null,o)if(o.hasOwnProperty(l)){var c=o[l];"children"===l?"string"==typeof c?i.textContent!==c&&(!0!==o.suppressHydrationWarning&&Yi(i.textContent,c,e),n=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Yi(i.textContent,c,e),n=["children",""+c]):a.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Hi("scroll",i)}switch(r){case"input":V(i),Q(i,o,!0);break;case"textarea":V(i),oe(i);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(i.onclick=Ji)}i=n,t.updateQueue=i,null!==i&&(t.flags|=4)}else{l=9===n.nodeType?n:n.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ae(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof i.is?e=l.createElement(r,{is:i.is}):(e=l.createElement(r),"select"===r&&(l=e,i.multiple?l.multiple=!0:i.size&&(l.size=i.size))):e=l.createElementNS(e,r),e[dn]=t,e[fn]=i,Ia(e,t),t.stateNode=e;e:{switch(l=be(r,i),r){case"dialog":Hi("cancel",e),Hi("close",e),n=i;break;case"iframe":case"object":case"embed":Hi("load",e),n=i;break;case"video":case"audio":for(n=0;n<Pi.length;n++)Hi(Pi[n],e);n=i;break;case"source":Hi("error",e),n=i;break;case"img":case"image":case"link":Hi("error",e),Hi("load",e),n=i;break;case"details":Hi("toggle",e),n=i;break;case"input":X(e,i),n=G(e,i),Hi("invalid",e);break;case"option":default:n=i;break;case"select":e._wrapperState={wasMultiple:!!i.multiple},n=N({},i,{value:void 0}),Hi("invalid",e);break;case"textarea":ne(e,i),n=ie(e,i),Hi("invalid",e)}for(o in me(r,n),c=n)if(c.hasOwnProperty(o)){var u=c[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&he(e,u):"children"===o?"string"==typeof u?("textarea"!==r||""!==u)&&de(e,u):"number"==typeof u&&de(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(a.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Hi("scroll",e):null!=u&&b(e,o,u,l))}switch(r){case"input":V(e),Q(e,i,!1);break;case"textarea":V(e),oe(e);break;case"option":null!=i.value&&e.setAttribute("value",""+$(i.value));break;case"select":e.multiple=!!i.multiple,null!=(o=i.value)?re(e,!!i.multiple,o,!1):null!=i.defaultValue&&re(e,!!i.multiple,i.defaultValue,!0);break;default:"function"==typeof n.onClick&&(e.onclick=Ji)}switch(r){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Va(t),null;case 6:if(e&&null!=t.stateNode)Pa(0,t,e.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw Error(s(166));if(r=ro(to.current),ro(Qs.current),hs(t)){if(i=t.stateNode,r=t.memoizedProps,i[dn]=t,(o=i.nodeValue!==r)&&null!==(e=rs))switch(e.tag){case 3:Yi(i.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Yi(i.nodeValue,r,0!=(1&e.mode))}o&&(t.flags|=4)}else(i=(9===r.nodeType?r:r.ownerDocument).createTextNode(i))[dn]=t,t.stateNode=i}return Va(t),null;case 13:if(En(ao),i=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ns&&null!==is&&0!=(1&t.mode)&&0==(128&t.flags))ds(),fs(),t.flags|=98560,o=!1;else if(o=hs(t),null!==i&&null!==i.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[dn]=t}else fs(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Va(t),o=!1}else null!==ss&&(oc(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=r,t):((i=null!==i)!=(null!==e&&null!==e.memoizedState)&&i&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ao.current)?0===Pl&&(Pl=3):vc())),null!==t.updateQueue&&(t.flags|=4),Va(t),null);case 4:return no(),null===e&&ji(t.stateNode.containerInfo),Va(t),null;case 10:return Cs(t.type._context),Va(t),null;case 19:if(En(ao),null===(o=t.memoizedState))return Va(t),null;if(i=0!=(128&t.flags),null===(l=o.rendering))if(i)Ka(o,!1);else{if(0!==Pl||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=lo(e))){for(t.flags|=128,Ka(o,!1),null!==(i=l.updateQueue)&&(t.updateQueue=i,t.flags|=4),t.subtreeFlags=0,i=r,r=t.child;null!==r;)e=i,(o=r).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return An(ao,1&ao.current|2),t.child}e=e.sibling}null!==o.tail&&Ye()>zl&&(t.flags|=128,i=!0,Ka(o,!1),t.lanes=4194304)}else{if(!i)if(null!==(e=lo(l))){if(t.flags|=128,i=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),Ka(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ns)return Va(t),null}else 2*Ye()-o.renderingStartTime>zl&&1073741824!==r&&(t.flags|=128,i=!0,Ka(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(r=o.last)?r.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ye(),t.sibling=null,r=ao.current,An(ao,i?1&r|2:1&r),t):(Va(t),null);case 22:case 23:return hc(),i=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==i&&(t.flags|=8192),i&&0!=(1&t.mode)?0!=(1073741824&Il)&&(Va(t),6&t.subtreeFlags&&(t.flags|=8192)):Va(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Za(e,t){switch(ts(t),t.tag){case 1:return In(t.type)&&On(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return no(),En(Rn),En(Ln),uo(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(En(ao),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));fs()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return En(ao),null;case 4:return no(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return hc(),null;default:return null}}Ia=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Oa=function(e,t,r,i){var n=e.memoizedProps;if(n!==i){e=t.stateNode,ro(Qs.current);var s,o=null;switch(r){case"input":n=G(e,n),i=G(e,i),o=[];break;case"select":n=N({},n,{value:void 0}),i=N({},i,{value:void 0}),o=[];break;case"textarea":n=ie(e,n),i=ie(e,i),o=[];break;default:"function"!=typeof n.onClick&&"function"==typeof i.onClick&&(e.onclick=Ji)}for(u in me(r,i),r=null,n)if(!i.hasOwnProperty(u)&&n.hasOwnProperty(u)&&null!=n[u])if("style"===u){var l=n[u];for(s in l)l.hasOwnProperty(s)&&(r||(r={}),r[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(a.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in i){var c=i[u];if(l=null!=n?n[u]:void 0,i.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(s in l)!l.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(r||(r={}),r[s]="");for(s in c)c.hasOwnProperty(s)&&l[s]!==c[s]&&(r||(r={}),r[s]=c[s])}else r||(o||(o=[]),o.push(u,r)),r=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(o=o||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(a.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Hi("scroll",e),o||l===c||(o=[])):(o=o||[]).push(u,c))}r&&(o=o||[]).push("style",r);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Pa=function(e,t,r,i){r!==i&&(t.flags|=4)};var Ga=!1,Xa=!1,Ya="function"==typeof WeakSet?WeakSet:Set,Ja=null;function Qa(e,t){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){kc(e,t,r)}else r.current=null}function el(e,t,r){try{r()}catch(r){kc(e,t,r)}}var tl=!1;function rl(e,t,r){var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var n=i=i.next;do{if((n.tag&e)===e){var s=n.destroy;n.destroy=void 0,void 0!==s&&el(t,r,s)}n=n.next}while(n!==i)}}function il(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var i=r.create;r.destroy=i()}r=r.next}while(r!==t)}}function nl(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"==typeof t?t(e):t.current=e}}function sl(e){var t=e.alternate;null!==t&&(e.alternate=null,sl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[dn],delete t[fn],delete t[vn],delete t[gn],delete t[_n]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ol(e){return 5===e.tag||3===e.tag||4===e.tag}function al(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ol(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,r){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=Ji));else if(4!==i&&null!==(e=e.child))for(ll(e,t,r),e=e.sibling;null!==e;)ll(e,t,r),e=e.sibling}function cl(e,t,r){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==i&&null!==(e=e.child))for(cl(e,t,r),e=e.sibling;null!==e;)cl(e,t,r),e=e.sibling}var ul=null,hl=!1;function dl(e,t,r){for(r=r.child;null!==r;)fl(e,t,r),r=r.sibling}function fl(e,t,r){if(st&&"function"==typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(nt,r)}catch(e){}switch(r.tag){case 5:Xa||Qa(r,t);case 6:var i=ul,n=hl;ul=null,dl(e,t,r),hl=n,null!==(ul=i)&&(hl?(e=ul,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):ul.removeChild(r.stateNode));break;case 18:null!==ul&&(hl?(e=ul,r=r.stateNode,8===e.nodeType?ln(e.parentNode,r):1===e.nodeType&&ln(e,r),zt(e)):ln(ul,r.stateNode));break;case 4:i=ul,n=hl,ul=r.stateNode.containerInfo,hl=!0,dl(e,t,r),ul=i,hl=n;break;case 0:case 11:case 14:case 15:if(!Xa&&null!==(i=r.updateQueue)&&null!==(i=i.lastEffect)){n=i=i.next;do{var s=n,o=s.destroy;s=s.tag,void 0!==o&&(0!=(2&s)||0!=(4&s))&&el(r,t,o),n=n.next}while(n!==i)}dl(e,t,r);break;case 1:if(!Xa&&(Qa(r,t),"function"==typeof(i=r.stateNode).componentWillUnmount))try{i.props=r.memoizedProps,i.state=r.memoizedState,i.componentWillUnmount()}catch(e){kc(r,t,e)}dl(e,t,r);break;case 21:dl(e,t,r);break;case 22:1&r.mode?(Xa=(i=Xa)||null!==r.memoizedState,dl(e,t,r),Xa=i):dl(e,t,r);break;default:dl(e,t,r)}}function pl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new Ya),t.forEach((function(t){var i=Lc.bind(null,e,t);r.has(t)||(r.add(t),t.then(i,i))}))}}function vl(e,t){var r=t.deletions;if(null!==r)for(var i=0;i<r.length;i++){var n=r[i];try{var o=e,a=t,l=a;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,hl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,hl=!0;break e}l=l.return}if(null===ul)throw Error(s(160));fl(o,a,n),ul=null,hl=!1;var c=n.alternate;null!==c&&(c.return=null),n.return=null}catch(e){kc(n,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var r=e.alternate,i=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(vl(t,e),_l(e),4&i){try{rl(3,e,e.return),il(3,e)}catch(t){kc(e,e.return,t)}try{rl(5,e,e.return)}catch(t){kc(e,e.return,t)}}break;case 1:vl(t,e),_l(e),512&i&&null!==r&&Qa(r,r.return);break;case 5:if(vl(t,e),_l(e),512&i&&null!==r&&Qa(r,r.return),32&e.flags){var n=e.stateNode;try{de(n,"")}catch(t){kc(e,e.return,t)}}if(4&i&&null!=(n=e.stateNode)){var o=e.memoizedProps,a=null!==r?r.memoizedProps:o,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===o.type&&null!=o.name&&Y(n,o),be(l,a);var u=be(l,o);for(a=0;a<c.length;a+=2){var h=c[a],d=c[a+1];"style"===h?ge(n,d):"dangerouslySetInnerHTML"===h?he(n,d):"children"===h?de(n,d):b(n,h,d,u)}switch(l){case"input":J(n,o);break;case"textarea":se(n,o);break;case"select":var f=n._wrapperState.wasMultiple;n._wrapperState.wasMultiple=!!o.multiple;var p=o.value;null!=p?re(n,!!o.multiple,p,!1):f!==!!o.multiple&&(null!=o.defaultValue?re(n,!!o.multiple,o.defaultValue,!0):re(n,!!o.multiple,o.multiple?[]:"",!1))}n[fn]=o}catch(t){kc(e,e.return,t)}}break;case 6:if(vl(t,e),_l(e),4&i){if(null===e.stateNode)throw Error(s(162));n=e.stateNode,o=e.memoizedProps;try{n.nodeValue=o}catch(t){kc(e,e.return,t)}}break;case 3:if(vl(t,e),_l(e),4&i&&null!==r&&r.memoizedState.isDehydrated)try{zt(t.containerInfo)}catch(t){kc(e,e.return,t)}break;case 4:default:vl(t,e),_l(e);break;case 13:vl(t,e),_l(e),8192&(n=e.child).flags&&(o=null!==n.memoizedState,n.stateNode.isHidden=o,!o||null!==n.alternate&&null!==n.alternate.memoizedState||(jl=Ye())),4&i&&pl(e);break;case 22:if(h=null!==r&&null!==r.memoizedState,1&e.mode?(Xa=(u=Xa)||h,vl(t,e),Xa=u):vl(t,e),_l(e),8192&i){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!h&&0!=(1&e.mode))for(Ja=e,h=e.child;null!==h;){for(d=Ja=h;null!==Ja;){switch(p=(f=Ja).child,f.tag){case 0:case 11:case 14:case 15:rl(4,f,f.return);break;case 1:Qa(f,f.return);var v=f.stateNode;if("function"==typeof v.componentWillUnmount){i=f,r=f.return;try{t=i,v.props=t.memoizedProps,v.state=t.memoizedState,v.componentWillUnmount()}catch(e){kc(i,r,e)}}break;case 5:Qa(f,f.return);break;case 22:if(null!==f.memoizedState){Sl(d);continue}}null!==p?(p.return=f,Ja=p):Sl(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{n=d.stateNode,u?"function"==typeof(o=n.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=d.stateNode,a=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=ve("display",a))}catch(t){kc(e,e.return,t)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(t){kc(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:vl(t,e),_l(e),4&i&&pl(e);case 21:}}function _l(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(ol(r)){var i=r;break e}r=r.return}throw Error(s(160))}switch(i.tag){case 5:var n=i.stateNode;32&i.flags&&(de(n,""),i.flags&=-33),cl(e,al(e),n);break;case 3:case 4:var o=i.stateNode.containerInfo;ll(e,al(e),o);break;default:throw Error(s(161))}}catch(t){kc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ml(e,t,r){Ja=e,bl(e,t,r)}function bl(e,t,r){for(var i=0!=(1&e.mode);null!==Ja;){var n=Ja,s=n.child;if(22===n.tag&&i){var o=null!==n.memoizedState||Ga;if(!o){var a=n.alternate,l=null!==a&&null!==a.memoizedState||Xa;a=Ga;var c=Xa;if(Ga=o,(Xa=l)&&!c)for(Ja=n;null!==Ja;)l=(o=Ja).child,22===o.tag&&null!==o.memoizedState?Cl(n):null!==l?(l.return=o,Ja=l):Cl(n);for(;null!==s;)Ja=s,bl(s,t,r),s=s.sibling;Ja=n,Ga=a,Xa=c}yl(e)}else 0!=(8772&n.subtreeFlags)&&null!==s?(s.return=n,Ja=s):yl(e)}}function yl(e){for(;null!==Ja;){var t=Ja;if(0!=(8772&t.flags)){var r=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xa||il(5,t);break;case 1:var i=t.stateNode;if(4&t.flags&&!Xa)if(null===r)i.componentDidMount();else{var n=t.elementType===t.type?r.memoizedProps:gs(t.type,r.memoizedProps);i.componentDidUpdate(n,r.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Hs(t,o,i);break;case 3:var a=t.updateQueue;if(null!==a){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}Hs(t,a,r)}break;case 5:var l=t.stateNode;if(null===r&&4&t.flags){r=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var h=u.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&zt(d)}}}break;default:throw Error(s(163))}Xa||512&t.flags&&nl(t)}catch(e){kc(t,t.return,e)}}if(t===e){Ja=null;break}if(null!==(r=t.sibling)){r.return=t.return,Ja=r;break}Ja=t.return}}function Sl(e){for(;null!==Ja;){var t=Ja;if(t===e){Ja=null;break}var r=t.sibling;if(null!==r){r.return=t.return,Ja=r;break}Ja=t.return}}function Cl(e){for(;null!==Ja;){var t=Ja;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{il(4,t)}catch(e){kc(t,r,e)}break;case 1:var i=t.stateNode;if("function"==typeof i.componentDidMount){var n=t.return;try{i.componentDidMount()}catch(e){kc(t,n,e)}}var s=t.return;try{nl(t)}catch(e){kc(t,s,e)}break;case 5:var o=t.return;try{nl(t)}catch(e){kc(t,o,e)}}}catch(e){kc(t,t.return,e)}if(t===e){Ja=null;break}var a=t.sibling;if(null!==a){a.return=t.return,Ja=a;break}Ja=t.return}}var wl,kl=Math.ceil,El=y.ReactCurrentDispatcher,Al=y.ReactCurrentOwner,xl=y.ReactCurrentBatchConfig,Ll=0,Rl=null,Tl=null,Dl=0,Il=0,Ol=kn(0),Pl=0,Bl=null,Ml=0,Nl=0,Hl=0,Fl=null,Ul=null,jl=0,zl=1/0,Wl=null,$l=!1,Kl=null,Vl=null,ql=!1,Zl=null,Gl=0,Xl=0,Yl=null,Jl=-1,Ql=0;function ec(){return 0!=(6&Ll)?Ye():-1!==Jl?Jl:Jl=Ye()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Ll)&&0!==Dl?Dl&-Dl:null!==vs.transition?(0===Ql&&(Ql=vt()),Ql):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Xt(e.type)}function rc(e,t,r,i){if(50<Xl)throw Xl=0,Yl=null,Error(s(185));_t(e,r,i),0!=(2&Ll)&&e===Rl||(e===Rl&&(0==(2&Ll)&&(Nl|=r),4===Pl&&ac(e,Dl)),ic(e,i),1===r&&0===Ll&&0==(1&t.mode)&&(zl=Ye()+500,Fn&&zn()))}function ic(e,t){var r=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,i=e.pingedLanes,n=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),a=1<<o,l=n[o];-1===l?0!=(a&r)&&0==(a&i)||(n[o]=ft(a,t)):l<=t&&(e.expiredLanes|=a),s&=~a}}(e,t);var i=dt(e,e===Rl?Dl:0);if(0===i)null!==r&&Ze(r),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=r&&Ze(r),1===t)0===e.tag?function(e){Fn=!0,jn(e)}(lc.bind(null,e)):jn(lc.bind(null,e)),on((function(){0==(6&Ll)&&zn()})),r=null;else{switch(yt(i)){case 1:r=Qe;break;case 4:r=et;break;case 16:default:r=tt;break;case 536870912:r=it}r=Rc(r,nc.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function nc(e,t){if(Jl=-1,Ql=0,0!=(6&Ll))throw Error(s(327));var r=e.callbackNode;if(Cc()&&e.callbackNode!==r)return null;var i=dt(e,e===Rl?Dl:0);if(0===i)return null;if(0!=(30&i)||0!=(i&e.expiredLanes)||t)t=gc(e,i);else{t=i;var n=Ll;Ll|=2;var o=pc();for(Rl===e&&Dl===t||(Wl=null,zl=Ye()+500,dc(e,t));;)try{mc();break}catch(t){fc(e,t)}Ss(),El.current=o,Ll=n,null!==Tl?t=0:(Rl=null,Dl=0,t=Pl)}if(0!==t){if(2===t&&0!==(n=pt(e))&&(i=n,t=sc(e,n)),1===t)throw r=Bl,dc(e,0),ac(e,i),ic(e,Ye()),r;if(6===t)ac(e,i);else{if(n=e.current.alternate,0==(30&i)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var i=0;i<r.length;i++){var n=r[i],s=n.getSnapshot;n=n.value;try{if(!oi(s(),n))return!1}catch(e){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(n)&&(2===(t=gc(e,i))&&0!==(o=pt(e))&&(i=o,t=sc(e,o)),1===t))throw r=Bl,dc(e,0),ac(e,i),ic(e,Ye()),r;switch(e.finishedWork=n,e.finishedLanes=i,t){case 0:case 1:throw Error(s(345));case 2:case 5:Sc(e,Ul,Wl);break;case 3:if(ac(e,i),(130023424&i)===i&&10<(t=jl+500-Ye())){if(0!==dt(e,0))break;if(((n=e.suspendedLanes)&i)!==i){ec(),e.pingedLanes|=e.suspendedLanes&n;break}e.timeoutHandle=rn(Sc.bind(null,e,Ul,Wl),t);break}Sc(e,Ul,Wl);break;case 4:if(ac(e,i),(4194240&i)===i)break;for(t=e.eventTimes,n=-1;0<i;){var a=31-ot(i);o=1<<a,(a=t[a])>n&&(n=a),i&=~o}if(i=n,10<(i=(120>(i=Ye()-i)?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*kl(i/1960))-i)){e.timeoutHandle=rn(Sc.bind(null,e,Ul,Wl),i);break}Sc(e,Ul,Wl);break;default:throw Error(s(329))}}}return ic(e,Ye()),e.callbackNode===r?nc.bind(null,e):null}function sc(e,t){var r=Fl;return e.current.memoizedState.isDehydrated&&(dc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=Ul,Ul=r,null!==t&&oc(t)),e}function oc(e){null===Ul?Ul=e:Ul.push.apply(Ul,e)}function ac(e,t){for(t&=~Hl,t&=~Nl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-ot(t),i=1<<r;e[r]=-1,t&=~i}}function lc(e){if(0!=(6&Ll))throw Error(s(327));Cc();var t=dt(e,0);if(0==(1&t))return ic(e,Ye()),null;var r=gc(e,t);if(0!==e.tag&&2===r){var i=pt(e);0!==i&&(t=i,r=sc(e,i))}if(1===r)throw r=Bl,dc(e,0),ac(e,t),ic(e,Ye()),r;if(6===r)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Sc(e,Ul,Wl),ic(e,Ye()),null}function cc(e,t){var r=Ll;Ll|=1;try{return e(t)}finally{0===(Ll=r)&&(zl=Ye()+500,Fn&&zn())}}function uc(e){null!==Zl&&0===Zl.tag&&0==(6&Ll)&&Cc();var t=Ll;Ll|=1;var r=xl.transition,i=bt;try{if(xl.transition=null,bt=1,e)return e()}finally{bt=i,xl.transition=r,0==(6&(Ll=t))&&zn()}}function hc(){Il=Ol.current,En(Ol)}function dc(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,nn(r)),null!==Tl)for(r=Tl.return;null!==r;){var i=r;switch(ts(i),i.tag){case 1:null!=(i=i.type.childContextTypes)&&On();break;case 3:no(),En(Rn),En(Ln),uo();break;case 5:oo(i);break;case 4:no();break;case 13:case 19:En(ao);break;case 10:Cs(i.type._context);break;case 22:case 23:hc()}r=r.return}if(Rl=e,Tl=e=Oc(e.current,null),Dl=Il=t,Pl=0,Bl=null,Hl=Nl=Ml=0,Ul=Fl=null,null!==As){for(t=0;t<As.length;t++)if(null!==(i=(r=As[t]).interleaved)){r.interleaved=null;var n=i.next,s=r.pending;if(null!==s){var o=s.next;s.next=n,i.next=o}r.pending=i}As=null}return e}function fc(e,t){for(;;){var r=Tl;try{if(Ss(),ho.current=oa,mo){for(var i=vo.memoizedState;null!==i;){var n=i.queue;null!==n&&(n.pending=null),i=i.next}mo=!1}if(po=0,_o=go=vo=null,bo=!1,yo=0,Al.current=null,null===r||null===r.return){Pl=1,Bl=t,Tl=null;break}e:{var o=e,a=r.return,l=r,c=t;if(t=Dl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,h=l,d=h.tag;if(0==(1&h.mode)&&(0===d||11===d||15===d)){var f=h.alternate;f?(h.updateQueue=f.updateQueue,h.memoizedState=f.memoizedState,h.lanes=f.lanes):(h.updateQueue=null,h.memoizedState=null)}var p=_a(a);if(null!==p){p.flags&=-257,ma(p,a,l,0,t),1&p.mode&&ga(o,u,t),c=u;var v=(t=p).updateQueue;if(null===v){var g=new Set;g.add(c),t.updateQueue=g}else v.add(c);break e}if(0==(1&t)){ga(o,u,t),vc();break e}c=Error(s(426))}else if(ns&&1&l.mode){var _=_a(a);if(null!==_){0==(65536&_.flags)&&(_.flags|=256),ma(_,a,l,0,t),ps(ua(c,l));break e}}o=c=ua(c,l),4!==Pl&&(Pl=2),null===Fl?Fl=[o]:Fl.push(o),o=a;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Ms(o,pa(0,c,t));break e;case 1:l=c;var m=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof m.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===Vl||!Vl.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,Ms(o,va(o,l,t));break e}}o=o.return}while(null!==o)}yc(r)}catch(e){t=e,Tl===r&&null!==r&&(Tl=r=r.return);continue}break}}function pc(){var e=El.current;return El.current=oa,null===e?oa:e}function vc(){0!==Pl&&3!==Pl&&2!==Pl||(Pl=4),null===Rl||0==(268435455&Ml)&&0==(268435455&Nl)||ac(Rl,Dl)}function gc(e,t){var r=Ll;Ll|=2;var i=pc();for(Rl===e&&Dl===t||(Wl=null,dc(e,t));;)try{_c();break}catch(t){fc(e,t)}if(Ss(),Ll=r,El.current=i,null!==Tl)throw Error(s(261));return Rl=null,Dl=0,Pl}function _c(){for(;null!==Tl;)bc(Tl)}function mc(){for(;null!==Tl&&!Ge();)bc(Tl)}function bc(e){var t=wl(e.alternate,e,Il);e.memoizedProps=e.pendingProps,null===t?yc(e):Tl=t,Al.current=null}function yc(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(r=qa(r,t,Il)))return void(Tl=r)}else{if(null!==(r=Za(r,t)))return r.flags&=32767,void(Tl=r);if(null===e)return Pl=6,void(Tl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Tl=t);Tl=t=e}while(null!==t);0===Pl&&(Pl=5)}function Sc(e,t,r){var i=bt,n=xl.transition;try{xl.transition=null,bt=1,function(e,t,r,i){do{Cc()}while(null!==Zl);if(0!=(6&Ll))throw Error(s(327));r=e.finishedWork;var n=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var i=e.eventTimes;for(e=e.expirationTimes;0<r;){var n=31-ot(r),s=1<<n;t[n]=0,i[n]=-1,e[n]=-1,r&=~s}}(e,o),e===Rl&&(Tl=Rl=null,Dl=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||ql||(ql=!0,Rc(tt,(function(){return Cc(),null}))),o=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||o){o=xl.transition,xl.transition=null;var a=bt;bt=1;var l=Ll;Ll|=4,Al.current=null,function(e,t){if(Qi=$t,di(e=hi())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var i=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(i&&0!==i.rangeCount){r=i.anchorNode;var n=i.anchorOffset,o=i.focusNode;i=i.focusOffset;try{r.nodeType,o.nodeType}catch(e){r=null;break e}var a=0,l=-1,c=-1,u=0,h=0,d=e,f=null;t:for(;;){for(var p;d!==r||0!==n&&3!==d.nodeType||(l=a+n),d!==o||0!==i&&3!==d.nodeType||(c=a+i),3===d.nodeType&&(a+=d.nodeValue.length),null!==(p=d.firstChild);)f=d,d=p;for(;;){if(d===e)break t;if(f===r&&++u===n&&(l=a),f===o&&++h===i&&(c=a),null!==(p=d.nextSibling))break;f=(d=f).parentNode}d=p}r=-1===l||-1===c?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(en={focusedElem:e,selectionRange:r},$t=!1,Ja=t;null!==Ja;)if(e=(t=Ja).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Ja=e;else for(;null!==Ja;){t=Ja;try{var v=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==v){var g=v.memoizedProps,_=v.memoizedState,m=t.stateNode,b=m.getSnapshotBeforeUpdate(t.elementType===t.type?g:gs(t.type,g),_);m.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var y=t.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(s(163))}}catch(e){kc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Ja=e;break}Ja=t.return}v=tl,tl=!1}(e,r),gl(r,e),fi(en),$t=!!Qi,en=Qi=null,e.current=r,ml(r,e,n),Xe(),Ll=l,bt=a,xl.transition=o}else e.current=r;if(ql&&(ql=!1,Zl=e,Gl=n),0===(o=e.pendingLanes)&&(Vl=null),function(e){if(st&&"function"==typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(nt,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),ic(e,Ye()),null!==t)for(i=e.onRecoverableError,r=0;r<t.length;r++)i((n=t[r]).value,{componentStack:n.stack,digest:n.digest});if($l)throw $l=!1,e=Kl,Kl=null,e;0!=(1&Gl)&&0!==e.tag&&Cc(),0!=(1&(o=e.pendingLanes))?e===Yl?Xl++:(Xl=0,Yl=e):Xl=0,zn()}(e,t,r,i)}finally{xl.transition=n,bt=i}return null}function Cc(){if(null!==Zl){var e=yt(Gl),t=xl.transition,r=bt;try{if(xl.transition=null,bt=16>e?16:e,null===Zl)var i=!1;else{if(e=Zl,Zl=null,Gl=0,0!=(6&Ll))throw Error(s(331));var n=Ll;for(Ll|=4,Ja=e.current;null!==Ja;){var o=Ja,a=o.child;if(0!=(16&Ja.flags)){var l=o.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(Ja=u;null!==Ja;){var h=Ja;switch(h.tag){case 0:case 11:case 15:rl(8,h,o)}var d=h.child;if(null!==d)d.return=h,Ja=d;else for(;null!==Ja;){var f=(h=Ja).sibling,p=h.return;if(sl(h),h===u){Ja=null;break}if(null!==f){f.return=p,Ja=f;break}Ja=p}}}var v=o.alternate;if(null!==v){var g=v.child;if(null!==g){v.child=null;do{var _=g.sibling;g.sibling=null,g=_}while(null!==g)}}Ja=o}}if(0!=(2064&o.subtreeFlags)&&null!==a)a.return=o,Ja=a;else e:for(;null!==Ja;){if(0!=(2048&(o=Ja).flags))switch(o.tag){case 0:case 11:case 15:rl(9,o,o.return)}var m=o.sibling;if(null!==m){m.return=o.return,Ja=m;break e}Ja=o.return}}var b=e.current;for(Ja=b;null!==Ja;){var y=(a=Ja).child;if(0!=(2064&a.subtreeFlags)&&null!==y)y.return=a,Ja=y;else e:for(a=b;null!==Ja;){if(0!=(2048&(l=Ja).flags))try{switch(l.tag){case 0:case 11:case 15:il(9,l)}}catch(e){kc(l,l.return,e)}if(l===a){Ja=null;break e}var S=l.sibling;if(null!==S){S.return=l.return,Ja=S;break e}Ja=l.return}}if(Ll=n,zn(),st&&"function"==typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(nt,e)}catch(e){}i=!0}return i}finally{bt=r,xl.transition=t}}return!1}function wc(e,t,r){e=Ps(e,t=pa(0,t=ua(r,t),1),1),t=ec(),null!==e&&(_t(e,1,t),ic(e,t))}function kc(e,t,r){if(3===e.tag)wc(e,e,r);else for(;null!==t;){if(3===t.tag){wc(t,e,r);break}if(1===t.tag){var i=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===Vl||!Vl.has(i))){t=Ps(t,e=va(t,e=ua(r,e),1),1),e=ec(),null!==t&&(_t(t,1,e),ic(t,e));break}}t=t.return}}function Ec(e,t,r){var i=e.pingCache;null!==i&&i.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&r,Rl===e&&(Dl&r)===r&&(4===Pl||3===Pl&&(130023424&Dl)===Dl&&500>Ye()-jl?dc(e,0):Hl|=r),ic(e,t)}function Ac(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ut,0==(130023424&(ut<<=1))&&(ut=4194304)));var r=ec();null!==(e=Rs(e,t))&&(_t(e,t,r),ic(e,r))}function xc(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),Ac(e,r)}function Lc(e,t){var r=0;switch(e.tag){case 13:var i=e.stateNode,n=e.memoizedState;null!==n&&(r=n.retryLane);break;case 19:i=e.stateNode;break;default:throw Error(s(314))}null!==i&&i.delete(t),Ac(e,r)}function Rc(e,t){return qe(e,t)}function Tc(e,t,r,i){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Dc(e,t,r,i){return new Tc(e,t,r,i)}function Ic(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Oc(e,t){var r=e.alternate;return null===r?((r=Dc(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Pc(e,t,r,i,n,o){var a=2;if(i=e,"function"==typeof e)Ic(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case w:return Bc(r.children,n,o,t);case k:a=8,n|=8;break;case E:return(e=Dc(12,r,t,2|n)).elementType=E,e.lanes=o,e;case R:return(e=Dc(13,r,t,n)).elementType=R,e.lanes=o,e;case T:return(e=Dc(19,r,t,n)).elementType=T,e.lanes=o,e;case O:return Mc(r,n,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:a=10;break e;case x:a=9;break e;case L:a=11;break e;case D:a=14;break e;case I:a=16,i=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Dc(a,r,t,n)).elementType=e,t.type=i,t.lanes=o,t}function Bc(e,t,r,i){return(e=Dc(7,e,i,t)).lanes=r,e}function Mc(e,t,r,i){return(e=Dc(22,e,i,t)).elementType=O,e.lanes=r,e.stateNode={isHidden:!1},e}function Nc(e,t,r){return(e=Dc(6,e,null,t)).lanes=r,e}function Hc(e,t,r){return(t=Dc(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Fc(e,t,r,i,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=i,this.onRecoverableError=n,this.mutableSourceEagerHydrationData=null}function Uc(e,t,r,i,n,s,o,a,l){return e=new Fc(e,t,r,a,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Dc(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:i,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ds(s),e}function jc(e,t,r){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:C,key:null==i?null:""+i,children:e,containerInfo:t,implementation:r}}function zc(e){if(!e)return xn;e:{if(ze(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(In(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var r=e.type;if(In(r))return Bn(e,r,t)}return t}function Wc(e,t,r,i,n,s,o,a,l){return(e=Uc(r,i,!0,e,0,s,0,a,l)).context=zc(null),r=e.current,(s=Os(i=ec(),n=tc(r))).callback=null!=t?t:null,Ps(r,s,n),e.current.lanes=n,_t(e,n,i),ic(e,i),e}function $c(e,t,r,i){var n=t.current,s=ec(),o=tc(n);return r=zc(r),null===t.context?t.context=r:t.pendingContext=r,(t=Os(s,o)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),null!==(e=Ps(n,t,o))&&(rc(e,n,o,s),Bs(e,n,o)),o}function Kc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function qc(e,t){Vc(e,t),(e=e.alternate)&&Vc(e,t)}wl=function(e,t,r){if(null!==e)if(e.memoizedProps!==t.pendingProps||Rn.current)ya=!0;else{if(0==(e.lanes&r)&&0==(128&t.flags))return ya=!1,function(e,t,r){switch(t.tag){case 3:Ta(t),fs();break;case 5:so(t);break;case 1:In(t.type)&&Mn(t);break;case 4:io(t,t.stateNode.containerInfo);break;case 10:var i=t.type._context,n=t.memoizedProps.value;An(_s,i._currentValue),i._currentValue=n;break;case 13:if(null!==(i=t.memoizedState))return null!==i.dehydrated?(An(ao,1&ao.current),t.flags|=128,null):0!=(r&t.child.childLanes)?Na(e,t,r):(An(ao,1&ao.current),null!==(e=$a(e,t,r))?e.sibling:null);An(ao,1&ao.current);break;case 19:if(i=0!=(r&t.childLanes),0!=(128&e.flags)){if(i)return za(e,t,r);t.flags|=128}if(null!==(n=t.memoizedState)&&(n.rendering=null,n.tail=null,n.lastEffect=null),An(ao,ao.current),i)break;return null;case 22:case 23:return t.lanes=0,Ea(e,t,r)}return $a(e,t,r)}(e,t,r);ya=0!=(131072&e.flags)}else ya=!1,ns&&0!=(1048576&t.flags)&&Qn(t,Vn,t.index);switch(t.lanes=0,t.tag){case 2:var i=t.type;Wa(e,t),e=t.pendingProps;var n=Dn(t,Ln.current);ks(t,r),n=ko(null,t,i,e,n,r);var o=Eo();return t.flags|=1,"object"==typeof n&&null!==n&&"function"==typeof n.render&&void 0===n.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,In(i)?(o=!0,Mn(t)):o=!1,t.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,Ds(t),n.updater=js,t.stateNode=n,n._reactInternals=t,Ks(t,i,e,r),t=Ra(null,t,i,!0,o,r)):(t.tag=0,ns&&o&&es(t),Sa(null,t,n,r),t=t.child),t;case 16:i=t.elementType;e:{switch(Wa(e,t),e=t.pendingProps,i=(n=i._init)(i._payload),t.type=i,n=t.tag=function(e){if("function"==typeof e)return Ic(e)?1:0;if(null!=e){if((e=e.$$typeof)===L)return 11;if(e===D)return 14}return 2}(i),e=gs(i,e),n){case 0:t=xa(null,t,i,e,r);break e;case 1:t=La(null,t,i,e,r);break e;case 11:t=Ca(null,t,i,e,r);break e;case 14:t=wa(null,t,i,gs(i.type,e),r);break e}throw Error(s(306,i,""))}return t;case 0:return i=t.type,n=t.pendingProps,xa(e,t,i,n=t.elementType===i?n:gs(i,n),r);case 1:return i=t.type,n=t.pendingProps,La(e,t,i,n=t.elementType===i?n:gs(i,n),r);case 3:e:{if(Ta(t),null===e)throw Error(s(387));i=t.pendingProps,n=(o=t.memoizedState).element,Is(e,t),Ns(t,i,null,r);var a=t.memoizedState;if(i=a.element,o.isDehydrated){if(o={element:i,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Da(e,t,i,r,n=ua(Error(s(423)),t));break e}if(i!==n){t=Da(e,t,i,r,n=ua(Error(s(424)),t));break e}for(is=cn(t.stateNode.containerInfo.firstChild),rs=t,ns=!0,ss=null,r=Ys(t,null,i,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(fs(),i===n){t=$a(e,t,r);break e}Sa(e,t,i,r)}t=t.child}return t;case 5:return so(t),null===e&&cs(t),i=t.type,n=t.pendingProps,o=null!==e?e.memoizedProps:null,a=n.children,tn(i,n)?a=null:null!==o&&tn(i,o)&&(t.flags|=32),Aa(e,t),Sa(e,t,a,r),t.child;case 6:return null===e&&cs(t),null;case 13:return Na(e,t,r);case 4:return io(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=Xs(t,null,i,r):Sa(e,t,i,r),t.child;case 11:return i=t.type,n=t.pendingProps,Ca(e,t,i,n=t.elementType===i?n:gs(i,n),r);case 7:return Sa(e,t,t.pendingProps,r),t.child;case 8:case 12:return Sa(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(i=t.type._context,n=t.pendingProps,o=t.memoizedProps,a=n.value,An(_s,i._currentValue),i._currentValue=a,null!==o)if(oi(o.value,a)){if(o.children===n.children&&!Rn.current){t=$a(e,t,r);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var l=o.dependencies;if(null!==l){a=o.child;for(var c=l.firstContext;null!==c;){if(c.context===i){if(1===o.tag){(c=Os(-1,r&-r)).tag=2;var u=o.updateQueue;if(null!==u){var h=(u=u.shared).pending;null===h?c.next=c:(c.next=h.next,h.next=c),u.pending=c}}o.lanes|=r,null!==(c=o.alternate)&&(c.lanes|=r),ws(o.return,r,t),l.lanes|=r;break}c=c.next}}else if(10===o.tag)a=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(a=o.return))throw Error(s(341));a.lanes|=r,null!==(l=a.alternate)&&(l.lanes|=r),ws(a,r,t),a=o.sibling}else a=o.child;if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===t){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}Sa(e,t,n.children,r),t=t.child}return t;case 9:return n=t.type,i=t.pendingProps.children,ks(t,r),i=i(n=Es(n)),t.flags|=1,Sa(e,t,i,r),t.child;case 14:return n=gs(i=t.type,t.pendingProps),wa(e,t,i,n=gs(i.type,n),r);case 15:return ka(e,t,t.type,t.pendingProps,r);case 17:return i=t.type,n=t.pendingProps,n=t.elementType===i?n:gs(i,n),Wa(e,t),t.tag=1,In(i)?(e=!0,Mn(t)):e=!1,ks(t,r),Ws(t,i,n),Ks(t,i,n,r),Ra(null,t,i,!0,e,r);case 19:return za(e,t,r);case 22:return Ea(e,t,r)}throw Error(s(156,t.tag))};var Zc="function"==typeof reportError?reportError:function(e){console.error(e)};function Gc(e){this._internalRoot=e}function Xc(e){this._internalRoot=e}function Yc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Qc(){}function eu(e,t,r,i,n){var s=r._reactRootContainer;if(s){var o=s;if("function"==typeof n){var a=n;n=function(){var e=Kc(o);a.call(e)}}$c(t,o,e,n)}else o=function(e,t,r,i,n){if(n){if("function"==typeof i){var s=i;i=function(){var e=Kc(o);s.call(e)}}var o=Wc(t,i,e,0,null,!1,0,"",Qc);return e._reactRootContainer=o,e[pn]=o.current,ji(8===e.nodeType?e.parentNode:e),uc(),o}for(;n=e.lastChild;)e.removeChild(n);if("function"==typeof i){var a=i;i=function(){var e=Kc(l);a.call(e)}}var l=Uc(e,0,!1,null,0,!1,0,"",Qc);return e._reactRootContainer=l,e[pn]=l.current,ji(8===e.nodeType?e.parentNode:e),uc((function(){$c(t,l,r,i)})),l}(r,t,e,n,i);return Kc(o)}Xc.prototype.render=Gc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));$c(e,t,null,null)},Xc.prototype.unmount=Gc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){$c(null,e,null,null)})),t[pn]=null}},Xc.prototype.unstable_scheduleHydration=function(e){if(e){var t=kt();e={blockedOn:null,target:e,priority:t};for(var r=0;r<Ot.length&&0!==t&&t<Ot[r].priority;r++);Ot.splice(r,0,e),0===r&&Nt(e)}},St=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=ht(t.pendingLanes);0!==r&&(mt(t,1|r),ic(t,Ye()),0==(6&Ll)&&(zl=Ye()+500,zn()))}break;case 13:uc((function(){var t=Rs(e,1);if(null!==t){var r=ec();rc(t,e,1,r)}})),qc(e,1)}},Ct=function(e){if(13===e.tag){var t=Rs(e,134217728);null!==t&&rc(t,e,134217728,ec()),qc(e,134217728)}},wt=function(e){if(13===e.tag){var t=tc(e),r=Rs(e,t);null!==r&&rc(r,e,t,ec()),qc(e,t)}},kt=function(){return bt},Et=function(e,t){var r=bt;try{return bt=e,t()}finally{bt=r}},Ce=function(e,t,r){switch(t){case"input":if(J(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var i=r[t];if(i!==e&&i.form===e.form){var n=Sn(i);if(!n)throw Error(s(90));q(i),J(i,n)}}}break;case"textarea":se(e,r);break;case"select":null!=(t=r.value)&&re(e,!!r.multiple,t,!1)}},Le=cc,Re=uc;var tu={usingClientEntryPoint:!1,Events:[bn,yn,Sn,Ae,xe,cc]},ru={findFiberByHostInstance:mn,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},iu={bundleType:ru.bundleType,version:ru.version,rendererPackageName:ru.rendererPackageName,rendererConfig:ru.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ke(e))?null:e.stateNode},findFiberByHostInstance:ru.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var nu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!nu.isDisabled&&nu.supportsFiber)try{nt=nu.inject(iu),st=nu}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tu,t.createPortal=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yc(t))throw Error(s(200));return jc(e,t,null,r)},t.createRoot=function(e,t){if(!Yc(e))throw Error(s(299));var r=!1,i="",n=Zc;return null!=t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(n=t.onRecoverableError)),t=Uc(e,1,!1,null,0,r,0,i,n),e[pn]=t.current,ji(8===e.nodeType?e.parentNode:e),new Gc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return null===(e=Ke(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,r){if(!Jc(t))throw Error(s(200));return eu(null,e,t,!0,r)},t.hydrateRoot=function(e,t,r){if(!Yc(e))throw Error(s(405));var i=null!=r&&r.hydratedSources||null,n=!1,o="",a=Zc;if(null!=r&&(!0===r.unstable_strictMode&&(n=!0),void 0!==r.identifierPrefix&&(o=r.identifierPrefix),void 0!==r.onRecoverableError&&(a=r.onRecoverableError)),t=Wc(t,null,e,1,null!=r?r:null,n,0,o,a),e[pn]=t.current,ji(e),i)for(e=0;e<i.length;e++)n=(n=(r=i[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,n]:t.mutableSourceEagerHydrationData.push(r,n);return new Xc(t)},t.render=function(e,t,r){if(!Jc(t))throw Error(s(200));return eu(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!Jc(e))throw Error(s(40));return!!e._reactRootContainer&&(uc((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[pn]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,r,i){if(!Jc(r))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return eu(e,t,r,!1,i)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,r)=>{"use strict";var i=r(935);t.s=i.createRoot,i.hydrateRoot},935:(e,t,r)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(448)},921:(e,t)=>{"use strict";var r,i=Symbol.for("react.element"),n=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.server_context"),h=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),f=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),v=Symbol.for("react.lazy"),g=Symbol.for("react.offscreen");r=Symbol.for("react.module.reference"),t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===s||e===a||e===o||e===d||e===f||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===p||e.$$typeof===l||e.$$typeof===c||e.$$typeof===h||e.$$typeof===r||void 0!==e.getModuleId)},t.typeOf=function(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case s:case a:case o:case d:case f:return e;default:switch(e=e&&e.$$typeof){case u:case c:case h:case v:case p:case l:return e;default:return t}}case n:return t}}}},864:(e,t,r)=>{"use strict";e.exports=r(921)},408:(e,t)=>{"use strict";var r=Symbol.for("react.element"),i=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),f=Symbol.iterator,p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v=Object.assign,g={};function _(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||p}function m(){}function b(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||p}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=_.prototype;var y=b.prototype=new m;y.constructor=b,v(y,_.prototype),y.isPureReactComponent=!0;var S=Array.isArray,C=Object.prototype.hasOwnProperty,w={current:null},k={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,i){var n,s={},o=null,a=null;if(null!=t)for(n in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(o=""+t.key),t)C.call(t,n)&&!k.hasOwnProperty(n)&&(s[n]=t[n]);var l=arguments.length-2;if(1===l)s.children=i;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];s.children=c}if(e&&e.defaultProps)for(n in l=e.defaultProps)void 0===s[n]&&(s[n]=l[n]);return{$$typeof:r,type:e,key:o,ref:a,props:s,_owner:w.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var x=/\/+/g;function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,n,s,o){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var l=!1;if(null===e)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case r:case i:l=!0}}if(l)return o=o(l=e),e=""===s?"."+L(l,0):s,S(o)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),R(o,t,n,"",(function(e){return e}))):null!=o&&(A(o)&&(o=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(x,"$&/")+"/")+e)),t.push(o)),1;if(l=0,s=""===s?".":s+":",S(e))for(var c=0;c<e.length;c++){var u=s+L(a=e[c],c);l+=R(a,t,n,u,o)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(a=e.next()).done;)l+=R(a=a.value,t,n,u=s+L(a,c++),o);else if("object"===a)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function T(e,t,r){if(null==e)return e;var i=[],n=0;return R(e,i,"","",(function(e){return t.call(r,e,n++)})),i}function D(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var I={current:null},O={transition:null},P={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:O,ReactCurrentOwner:w};t.Children={map:T,forEach:function(e,t,r){T(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!A(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=_,t.Fragment=n,t.Profiler=o,t.PureComponent=b,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P,t.cloneElement=function(e,t,i){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=v({},e.props),s=e.key,o=e.ref,a=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,a=w.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)C.call(t,c)&&!k.hasOwnProperty(c)&&(n[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)n.children=i;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];n.children=l}return{$$typeof:r,type:e.type,key:s,ref:o,props:n,_owner:a}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=A,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:D}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=O.transition;O.transition={};try{e()}finally{O.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return I.current.useCallback(e,t)},t.useContext=function(e){return I.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return I.current.useDeferredValue(e)},t.useEffect=function(e,t){return I.current.useEffect(e,t)},t.useId=function(){return I.current.useId()},t.useImperativeHandle=function(e,t,r){return I.current.useImperativeHandle(e,t,r)},t.useInsertionEffect=function(e,t){return I.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return I.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return I.current.useMemo(e,t)},t.useReducer=function(e,t,r){return I.current.useReducer(e,t,r)},t.useRef=function(e){return I.current.useRef(e)},t.useState=function(e){return I.current.useState(e)},t.useSyncExternalStore=function(e,t,r){return I.current.useSyncExternalStore(e,t,r)},t.useTransition=function(){return I.current.useTransition()},t.version="18.2.0"},294:(e,t,r)=>{"use strict";e.exports=r(408)},53:(e,t)=>{"use strict";function r(e,t){var r=e.length;e.push(t);e:for(;0<r;){var i=r-1>>>1,n=e[i];if(!(0<s(n,t)))break e;e[i]=t,e[r]=n,r=i}}function i(e){return 0===e.length?null:e[0]}function n(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;e:for(var i=0,n=e.length,o=n>>>1;i<o;){var a=2*(i+1)-1,l=e[a],c=a+1,u=e[c];if(0>s(l,r))c<n&&0>s(u,l)?(e[i]=u,e[c]=r,i=c):(e[i]=l,e[a]=r,i=a);else{if(!(c<n&&0>s(u,r)))break e;e[i]=u,e[c]=r,i=c}}}return t}function s(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var a=Date,l=a.now();t.unstable_now=function(){return a.now()-l}}var c=[],u=[],h=1,d=null,f=3,p=!1,v=!1,g=!1,_="function"==typeof setTimeout?setTimeout:null,m="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var t=i(u);null!==t;){if(null===t.callback)n(u);else{if(!(t.startTime<=e))break;n(u),t.sortIndex=t.expirationTime,r(c,t)}t=i(u)}}function S(e){if(g=!1,y(e),!v)if(null!==i(c))v=!0,O(C);else{var t=i(u);null!==t&&P(S,t.startTime-e)}}function C(e,r){v=!1,g&&(g=!1,m(A),A=-1),p=!0;var s=f;try{for(y(r),d=i(c);null!==d&&(!(d.expirationTime>r)||e&&!R());){var o=d.callback;if("function"==typeof o){d.callback=null,f=d.priorityLevel;var a=o(d.expirationTime<=r);r=t.unstable_now(),"function"==typeof a?d.callback=a:d===i(c)&&n(c),y(r)}else n(c);d=i(c)}if(null!==d)var l=!0;else{var h=i(u);null!==h&&P(S,h.startTime-r),l=!1}return l}finally{d=null,f=s,p=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,k=!1,E=null,A=-1,x=5,L=-1;function R(){return!(t.unstable_now()-L<x)}function T(){if(null!==E){var e=t.unstable_now();L=e;var r=!0;try{r=E(!0,e)}finally{r?w():(k=!1,E=null)}}else k=!1}if("function"==typeof b)w=function(){b(T)};else if("undefined"!=typeof MessageChannel){var D=new MessageChannel,I=D.port2;D.port1.onmessage=T,w=function(){I.postMessage(null)}}else w=function(){_(T,0)};function O(e){E=e,k||(k=!0,w())}function P(e,r){A=_((function(){e(t.unstable_now())}),r)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){v||p||(v=!0,O(C))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):x=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return i(c)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var r=f;f=t;try{return e()}finally{f=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=f;f=e;try{return t()}finally{f=r}},t.unstable_scheduleCallback=function(e,n,s){var o=t.unstable_now();switch(s="object"==typeof s&&null!==s&&"number"==typeof(s=s.delay)&&0<s?o+s:o,e){case 1:var a=-1;break;case 2:a=250;break;case 5:a=1073741823;break;case 4:a=1e4;break;default:a=5e3}return e={id:h++,callback:n,priorityLevel:e,startTime:s,expirationTime:a=s+a,sortIndex:-1},s>o?(e.sortIndex=s,r(u,e),null===i(c)&&e===i(u)&&(g?(m(A),A=-1):g=!0,P(S,s-o))):(e.sortIndex=a,r(c,e),v||p||(v=!0,O(C))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=f;return function(){var r=f;f=t;try{return e.apply(this,arguments)}finally{f=r}}}},840:(e,t,r)=>{"use strict";e.exports=r(53)},774:e=>{e.exports=function(e,t,r,i){var n=r?r.call(i,e,t):void 0;if(void 0!==n)return!!n;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var s=Object.keys(e),o=Object.keys(t);if(s.length!==o.length)return!1;for(var a=Object.prototype.hasOwnProperty.bind(t),l=0;l<s.length;l++){var c=s[l];if(!a(c))return!1;var u=e[c],h=t[c];if(!1===(n=r?r.call(i,u,h,c):void 0)||void 0===n&&u!==h)return!1}return!0}},379:e=>{"use strict";var t=[];function r(e){for(var r=-1,i=0;i<t.length;i++)if(t[i].identifier===e){r=i;break}return r}function i(e,i){for(var s={},o=[],a=0;a<e.length;a++){var l=e[a],c=i.base?l[0]+i.base:l[0],u=s[c]||0,h="".concat(c," ").concat(u);s[c]=u+1;var d=r(h),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(f);else{var p=n(f,i);i.byIndex=a,t.splice(a,0,{identifier:h,updater:p,references:1})}o.push(h)}return o}function n(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,n){var s=i(e=e||[],n=n||{});return function(e){e=e||[];for(var o=0;o<s.length;o++){var a=r(s[o]);t[a].references--}for(var l=i(e,n),c=0;c<s.length;c++){var u=r(s[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=l}}},569:e=>{"use strict";var t={};e.exports=function(e,r){var i=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(r)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,r)=>{"use strict";e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var i="";r.supports&&(i+="@supports (".concat(r.supports,") {")),r.media&&(i+="@media ".concat(r.media," {"));var n=void 0!==r.layer;n&&(i+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),i+=r.css,n&&(i+="}"),r.media&&(i+="}"),r.supports&&(i+="}");var s=r.sourceMap;s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},739:e=>{e.exports={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}},320:e=>{self,e.exports=(()=>{"use strict";var e={4567:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AccessibilityManager=void 0;const i=r(9042),n=r(6114),s=r(9924),o=r(3656),a=r(844),l=r(5596),c=r(9631);class u extends a.Disposable{constructor(e,t){super(),this._terminal=e,this._renderService=t,this._liveRegionLineCount=0,this._charsToConsume=[],this._charsToAnnounce="",this._accessibilityTreeRoot=document.createElement("div"),this._accessibilityTreeRoot.classList.add("xterm-accessibility"),this._accessibilityTreeRoot.tabIndex=0,this._rowContainer=document.createElement("div"),this._rowContainer.setAttribute("role","list"),this._rowContainer.classList.add("xterm-accessibility-tree"),this._rowElements=[];for(let e=0;e<this._terminal.rows;e++)this._rowElements[e]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[e]);if(this._topBoundaryFocusListener=e=>this._onBoundaryFocus(e,0),this._bottomBoundaryFocusListener=e=>this._onBoundaryFocus(e,1),this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions(),this._accessibilityTreeRoot.appendChild(this._rowContainer),this._renderRowsDebouncer=new s.TimeBasedDebouncer(this._renderRows.bind(this)),this._refreshRows(),this._liveRegion=document.createElement("div"),this._liveRegion.classList.add("live-region"),this._liveRegion.setAttribute("aria-live","assertive"),this._accessibilityTreeRoot.appendChild(this._liveRegion),!this._terminal.element)throw new Error("Cannot enable accessibility before Terminal.open");this._terminal.element.insertAdjacentElement("afterbegin",this._accessibilityTreeRoot),this.register(this._renderRowsDebouncer),this.register(this._terminal.onResize((e=>this._onResize(e.rows)))),this.register(this._terminal.onRender((e=>this._refreshRows(e.start,e.end)))),this.register(this._terminal.onScroll((()=>this._refreshRows()))),this.register(this._terminal.onA11yChar((e=>this._onChar(e)))),this.register(this._terminal.onLineFeed((()=>this._onChar("\n")))),this.register(this._terminal.onA11yTab((e=>this._onTab(e)))),this.register(this._terminal.onKey((e=>this._onKey(e.key)))),this.register(this._terminal.onBlur((()=>this._clearLiveRegion()))),this.register(this._renderService.onDimensionsChange((()=>this._refreshRowsDimensions()))),this._screenDprMonitor=new l.ScreenDprMonitor(window),this.register(this._screenDprMonitor),this._screenDprMonitor.setListener((()=>this._refreshRowsDimensions())),this.register((0,o.addDisposableDomListener)(window,"resize",(()=>this._refreshRowsDimensions())))}dispose(){super.dispose(),(0,c.removeElementFromParent)(this._accessibilityTreeRoot),this._rowElements.length=0}_onBoundaryFocus(e,t){const r=e.target,i=this._rowElements[0===t?1:this._rowElements.length-2];if(r.getAttribute("aria-posinset")===(0===t?"1":`${this._terminal.buffer.lines.length}`))return;if(e.relatedTarget!==i)return;let n,s;if(0===t?(n=r,s=this._rowElements.pop(),this._rowContainer.removeChild(s)):(n=this._rowElements.shift(),s=r,this._rowContainer.removeChild(n)),n.removeEventListener("focus",this._topBoundaryFocusListener),s.removeEventListener("focus",this._bottomBoundaryFocusListener),0===t){const e=this._createAccessibilityTreeNode();this._rowElements.unshift(e),this._rowContainer.insertAdjacentElement("afterbegin",e)}else{const e=this._createAccessibilityTreeNode();this._rowElements.push(e),this._rowContainer.appendChild(e)}this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._terminal.scrollLines(0===t?-1:1),this._rowElements[0===t?1:this._rowElements.length-2].focus(),e.preventDefault(),e.stopImmediatePropagation()}_onResize(e){this._rowElements[this._rowElements.length-1].removeEventListener("focus",this._bottomBoundaryFocusListener);for(let e=this._rowContainer.children.length;e<this._terminal.rows;e++)this._rowElements[e]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[e]);for(;this._rowElements.length>e;)this._rowContainer.removeChild(this._rowElements.pop());this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions()}_createAccessibilityTreeNode(){const e=document.createElement("div");return e.setAttribute("role","listitem"),e.tabIndex=-1,this._refreshRowDimensions(e),e}_onTab(e){for(let t=0;t<e;t++)this._onChar(" ")}_onChar(e){this._liveRegionLineCount<21&&(this._charsToConsume.length>0?this._charsToConsume.shift()!==e&&(this._charsToAnnounce+=e):this._charsToAnnounce+=e,"\n"===e&&(this._liveRegionLineCount++,21===this._liveRegionLineCount&&(this._liveRegion.textContent+=i.tooMuchOutput)),n.isMac&&this._liveRegion.textContent&&this._liveRegion.textContent.length>0&&!this._liveRegion.parentNode&&setTimeout((()=>{this._accessibilityTreeRoot.appendChild(this._liveRegion)}),0))}_clearLiveRegion(){this._liveRegion.textContent="",this._liveRegionLineCount=0,n.isMac&&(0,c.removeElementFromParent)(this._liveRegion)}_onKey(e){this._clearLiveRegion(),this._charsToConsume.push(e)}_refreshRows(e,t){this._renderRowsDebouncer.refresh(e,t,this._terminal.rows)}_renderRows(e,t){const r=this._terminal.buffer,i=r.lines.length.toString();for(let n=e;n<=t;n++){const e=r.translateBufferLineToString(r.ydisp+n,!0),t=(r.ydisp+n+1).toString(),s=this._rowElements[n];s&&(0===e.length?s.innerText=" ":s.textContent=e,s.setAttribute("aria-posinset",t),s.setAttribute("aria-setsize",i))}this._announceCharacters()}_refreshRowsDimensions(){if(this._renderService.dimensions.actualCellHeight){this._rowElements.length!==this._terminal.rows&&this._onResize(this._terminal.rows);for(let e=0;e<this._terminal.rows;e++)this._refreshRowDimensions(this._rowElements[e])}}_refreshRowDimensions(e){e.style.height=`${this._renderService.dimensions.actualCellHeight}px`}_announceCharacters(){0!==this._charsToAnnounce.length&&(this._liveRegion.textContent+=this._charsToAnnounce,this._charsToAnnounce="")}}t.AccessibilityManager=u},3614:(e,t)=>{function r(e){return e.replace(/\r?\n/g,"\r")}function i(e,t){return t?"[200~"+e+"[201~":e}function n(e,t,n){e=i(e=r(e),n.decPrivateModes.bracketedPasteMode),n.triggerDataEvent(e,!0),t.value=""}function s(e,t,r){const i=r.getBoundingClientRect(),n=e.clientX-i.left-10,s=e.clientY-i.top-10;t.style.width="20px",t.style.height="20px",t.style.left=`${n}px`,t.style.top=`${s}px`,t.style.zIndex="1000",t.focus()}Object.defineProperty(t,"__esModule",{value:!0}),t.rightClickHandler=t.moveTextAreaUnderMouseCursor=t.paste=t.handlePasteEvent=t.copyHandler=t.bracketTextForPaste=t.prepareTextForTerminal=void 0,t.prepareTextForTerminal=r,t.bracketTextForPaste=i,t.copyHandler=function(e,t){e.clipboardData&&e.clipboardData.setData("text/plain",t.selectionText),e.preventDefault()},t.handlePasteEvent=function(e,t,r){e.stopPropagation(),e.clipboardData&&n(e.clipboardData.getData("text/plain"),t,r)},t.paste=n,t.moveTextAreaUnderMouseCursor=s,t.rightClickHandler=function(e,t,r,i,n){s(e,t,r),n&&i.rightClickSelect(e),t.value=i.selectionText,t.select()}},7239:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorContrastCache=void 0;const i=r(1505);t.ColorContrastCache=class{constructor(){this._color=new i.TwoKeyMap,this._css=new i.TwoKeyMap}setCss(e,t,r){this._css.set(e,t,r)}getCss(e,t){return this._css.get(e,t)}setColor(e,t,r){this._color.set(e,t,r)}getColor(e,t){return this._color.get(e,t)}clear(){this._color.clear(),this._css.clear()}}},5680:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorManager=t.DEFAULT_ANSI_COLORS=void 0;const i=r(8055),n=r(7239),s=i.css.toColor("#ffffff"),o=i.css.toColor("#000000"),a=i.css.toColor("#ffffff"),l=i.css.toColor("#000000"),c={css:"rgba(255, 255, 255, 0.3)",rgba:4294967117};t.DEFAULT_ANSI_COLORS=Object.freeze((()=>{const e=[i.css.toColor("#2e3436"),i.css.toColor("#cc0000"),i.css.toColor("#4e9a06"),i.css.toColor("#c4a000"),i.css.toColor("#3465a4"),i.css.toColor("#75507b"),i.css.toColor("#06989a"),i.css.toColor("#d3d7cf"),i.css.toColor("#555753"),i.css.toColor("#ef2929"),i.css.toColor("#8ae234"),i.css.toColor("#fce94f"),i.css.toColor("#729fcf"),i.css.toColor("#ad7fa8"),i.css.toColor("#34e2e2"),i.css.toColor("#eeeeec")],t=[0,95,135,175,215,255];for(let r=0;r<216;r++){const n=t[r/36%6|0],s=t[r/6%6|0],o=t[r%6];e.push({css:i.channels.toCss(n,s,o),rgba:i.channels.toRgba(n,s,o)})}for(let t=0;t<24;t++){const r=8+10*t;e.push({css:i.channels.toCss(r,r,r),rgba:i.channels.toRgba(r,r,r)})}return e})()),t.ColorManager=class{constructor(e,r){this.allowTransparency=r;const u=e.createElement("canvas");u.width=1,u.height=1;const h=u.getContext("2d");if(!h)throw new Error("Could not get rendering context");this._ctx=h,this._ctx.globalCompositeOperation="copy",this._litmusColor=this._ctx.createLinearGradient(0,0,1,1),this._contrastCache=new n.ColorContrastCache,this.colors={foreground:s,background:o,cursor:a,cursorAccent:l,selectionForeground:void 0,selectionBackgroundTransparent:c,selectionBackgroundOpaque:i.color.blend(o,c),selectionInactiveBackgroundTransparent:c,selectionInactiveBackgroundOpaque:i.color.blend(o,c),ansi:t.DEFAULT_ANSI_COLORS.slice(),contrastCache:this._contrastCache},this._updateRestoreColors()}onOptionsChange(e,t){switch(e){case"minimumContrastRatio":this._contrastCache.clear();break;case"allowTransparency":this.allowTransparency=t}}setTheme(e={}){this.colors.foreground=this._parseColor(e.foreground,s),this.colors.background=this._parseColor(e.background,o),this.colors.cursor=this._parseColor(e.cursor,a,!0),this.colors.cursorAccent=this._parseColor(e.cursorAccent,l,!0),this.colors.selectionBackgroundTransparent=this._parseColor(e.selectionBackground,c,!0),this.colors.selectionBackgroundOpaque=i.color.blend(this.colors.background,this.colors.selectionBackgroundTransparent),this.colors.selectionInactiveBackgroundTransparent=this._parseColor(e.selectionInactiveBackground,this.colors.selectionBackgroundTransparent,!0),this.colors.selectionInactiveBackgroundOpaque=i.color.blend(this.colors.background,this.colors.selectionInactiveBackgroundTransparent);const r={css:"",rgba:0};if(this.colors.selectionForeground=e.selectionForeground?this._parseColor(e.selectionForeground,r):void 0,this.colors.selectionForeground===r&&(this.colors.selectionForeground=void 0),i.color.isOpaque(this.colors.selectionBackgroundTransparent)){const e=.3;this.colors.selectionBackgroundTransparent=i.color.opacity(this.colors.selectionBackgroundTransparent,e)}if(i.color.isOpaque(this.colors.selectionInactiveBackgroundTransparent)){const e=.3;this.colors.selectionInactiveBackgroundTransparent=i.color.opacity(this.colors.selectionInactiveBackgroundTransparent,e)}if(this.colors.ansi=t.DEFAULT_ANSI_COLORS.slice(),this.colors.ansi[0]=this._parseColor(e.black,t.DEFAULT_ANSI_COLORS[0]),this.colors.ansi[1]=this._parseColor(e.red,t.DEFAULT_ANSI_COLORS[1]),this.colors.ansi[2]=this._parseColor(e.green,t.DEFAULT_ANSI_COLORS[2]),this.colors.ansi[3]=this._parseColor(e.yellow,t.DEFAULT_ANSI_COLORS[3]),this.colors.ansi[4]=this._parseColor(e.blue,t.DEFAULT_ANSI_COLORS[4]),this.colors.ansi[5]=this._parseColor(e.magenta,t.DEFAULT_ANSI_COLORS[5]),this.colors.ansi[6]=this._parseColor(e.cyan,t.DEFAULT_ANSI_COLORS[6]),this.colors.ansi[7]=this._parseColor(e.white,t.DEFAULT_ANSI_COLORS[7]),this.colors.ansi[8]=this._parseColor(e.brightBlack,t.DEFAULT_ANSI_COLORS[8]),this.colors.ansi[9]=this._parseColor(e.brightRed,t.DEFAULT_ANSI_COLORS[9]),this.colors.ansi[10]=this._parseColor(e.brightGreen,t.DEFAULT_ANSI_COLORS[10]),this.colors.ansi[11]=this._parseColor(e.brightYellow,t.DEFAULT_ANSI_COLORS[11]),this.colors.ansi[12]=this._parseColor(e.brightBlue,t.DEFAULT_ANSI_COLORS[12]),this.colors.ansi[13]=this._parseColor(e.brightMagenta,t.DEFAULT_ANSI_COLORS[13]),this.colors.ansi[14]=this._parseColor(e.brightCyan,t.DEFAULT_ANSI_COLORS[14]),this.colors.ansi[15]=this._parseColor(e.brightWhite,t.DEFAULT_ANSI_COLORS[15]),e.extendedAnsi){const r=Math.min(this.colors.ansi.length-16,e.extendedAnsi.length);for(let i=0;i<r;i++)this.colors.ansi[i+16]=this._parseColor(e.extendedAnsi[i],t.DEFAULT_ANSI_COLORS[i+16])}this._contrastCache.clear(),this._updateRestoreColors()}restoreColor(e){if(void 0!==e)switch(e){case 256:this.colors.foreground=this._restoreColors.foreground;break;case 257:this.colors.background=this._restoreColors.background;break;case 258:this.colors.cursor=this._restoreColors.cursor;break;default:this.colors.ansi[e]=this._restoreColors.ansi[e]}else for(let e=0;e<this._restoreColors.ansi.length;++e)this.colors.ansi[e]=this._restoreColors.ansi[e]}_updateRestoreColors(){this._restoreColors={foreground:this.colors.foreground,background:this.colors.background,cursor:this.colors.cursor,ansi:this.colors.ansi.slice()}}_parseColor(e,t,r=this.allowTransparency){if(void 0===e)return t;if(this._ctx.fillStyle=this._litmusColor,this._ctx.fillStyle=e,"string"!=typeof this._ctx.fillStyle)return console.warn(`Color: ${e} is invalid using fallback ${t.css}`),t;this._ctx.fillRect(0,0,1,1);const n=this._ctx.getImageData(0,0,1,1).data;if(255!==n[3]){if(!r)return console.warn(`Color: ${e} is using transparency, but allowTransparency is false. Using fallback ${t.css}.`),t;const[n,s,o,a]=this._ctx.fillStyle.substring(5,this._ctx.fillStyle.length-1).split(",").map((e=>Number(e))),l=Math.round(255*a);return{rgba:i.channels.toRgba(n,s,o,l),css:e}}return{css:this._ctx.fillStyle,rgba:i.channels.toRgba(n[0],n[1],n[2],n[3])}}}},9631:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.removeElementFromParent=void 0,t.removeElementFromParent=function(...e){var t;for(const r of e)null===(t=null==r?void 0:r.parentElement)||void 0===t||t.removeChild(r)}},3656:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.addDisposableDomListener=void 0,t.addDisposableDomListener=function(e,t,r,i){e.addEventListener(t,r,i);let n=!1;return{dispose:()=>{n||(n=!0,e.removeEventListener(t,r,i))}}}},6465:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.Linkifier2=void 0;const s=r(2585),o=r(8460),a=r(844),l=r(3656);let c=class extends a.Disposable{constructor(e){super(),this._bufferService=e,this._linkProviders=[],this._linkCacheDisposables=[],this._isMouseOut=!0,this._activeLine=-1,this._onShowLinkUnderline=this.register(new o.EventEmitter),this._onHideLinkUnderline=this.register(new o.EventEmitter),this.register((0,a.getDisposeArrayDisposable)(this._linkCacheDisposables))}get currentLink(){return this._currentLink}get onShowLinkUnderline(){return this._onShowLinkUnderline.event}get onHideLinkUnderline(){return this._onHideLinkUnderline.event}dispose(){super.dispose(),this._lastMouseEvent=void 0}registerLinkProvider(e){return this._linkProviders.push(e),{dispose:()=>{const t=this._linkProviders.indexOf(e);-1!==t&&this._linkProviders.splice(t,1)}}}attachToDom(e,t,r){this._element=e,this._mouseService=t,this._renderService=r,this.register((0,l.addDisposableDomListener)(this._element,"mouseleave",(()=>{this._isMouseOut=!0,this._clearCurrentLink()}))),this.register((0,l.addDisposableDomListener)(this._element,"mousemove",this._onMouseMove.bind(this))),this.register((0,l.addDisposableDomListener)(this._element,"mousedown",this._handleMouseDown.bind(this))),this.register((0,l.addDisposableDomListener)(this._element,"mouseup",this._handleMouseUp.bind(this)))}_onMouseMove(e){if(this._lastMouseEvent=e,!this._element||!this._mouseService)return;const t=this._positionFromMouseEvent(e,this._element,this._mouseService);if(!t)return;this._isMouseOut=!1;const r=e.composedPath();for(let e=0;e<r.length;e++){const t=r[e];if(t.classList.contains("xterm"))break;if(t.classList.contains("xterm-hover"))return}this._lastBufferCell&&t.x===this._lastBufferCell.x&&t.y===this._lastBufferCell.y||(this._onHover(t),this._lastBufferCell=t)}_onHover(e){if(this._activeLine!==e.y)return this._clearCurrentLink(),void this._askForLink(e,!1);this._currentLink&&this._linkAtPosition(this._currentLink.link,e)||(this._clearCurrentLink(),this._askForLink(e,!0))}_askForLink(e,t){var r,i;this._activeProviderReplies&&t||(null===(r=this._activeProviderReplies)||void 0===r||r.forEach((e=>{null==e||e.forEach((e=>{e.link.dispose&&e.link.dispose()}))})),this._activeProviderReplies=new Map,this._activeLine=e.y);let n=!1;for(const[r,s]of this._linkProviders.entries())t?(null===(i=this._activeProviderReplies)||void 0===i?void 0:i.get(r))&&(n=this._checkLinkProviderResult(r,e,n)):s.provideLinks(e.y,(t=>{var i,s;if(this._isMouseOut)return;const o=null==t?void 0:t.map((e=>({link:e})));null===(i=this._activeProviderReplies)||void 0===i||i.set(r,o),n=this._checkLinkProviderResult(r,e,n),(null===(s=this._activeProviderReplies)||void 0===s?void 0:s.size)===this._linkProviders.length&&this._removeIntersectingLinks(e.y,this._activeProviderReplies)}))}_removeIntersectingLinks(e,t){const r=new Set;for(let i=0;i<t.size;i++){const n=t.get(i);if(n)for(let t=0;t<n.length;t++){const i=n[t],s=i.link.range.start.y<e?0:i.link.range.start.x,o=i.link.range.end.y>e?this._bufferService.cols:i.link.range.end.x;for(let e=s;e<=o;e++){if(r.has(e)){n.splice(t--,1);break}r.add(e)}}}}_checkLinkProviderResult(e,t,r){var i;if(!this._activeProviderReplies)return r;const n=this._activeProviderReplies.get(e);let s=!1;for(let t=0;t<e;t++)this._activeProviderReplies.has(t)&&!this._activeProviderReplies.get(t)||(s=!0);if(!s&&n){const e=n.find((e=>this._linkAtPosition(e.link,t)));e&&(r=!0,this._handleNewLink(e))}if(this._activeProviderReplies.size===this._linkProviders.length&&!r)for(let e=0;e<this._activeProviderReplies.size;e++){const n=null===(i=this._activeProviderReplies.get(e))||void 0===i?void 0:i.find((e=>this._linkAtPosition(e.link,t)));if(n){r=!0,this._handleNewLink(n);break}}return r}_handleMouseDown(){this._mouseDownLink=this._currentLink}_handleMouseUp(e){if(!this._element||!this._mouseService||!this._currentLink)return;const t=this._positionFromMouseEvent(e,this._element,this._mouseService);t&&this._mouseDownLink===this._currentLink&&this._linkAtPosition(this._currentLink.link,t)&&this._currentLink.link.activate(e,this._currentLink.link.text)}_clearCurrentLink(e,t){this._element&&this._currentLink&&this._lastMouseEvent&&(!e||!t||this._currentLink.link.range.start.y>=e&&this._currentLink.link.range.end.y<=t)&&(this._linkLeave(this._element,this._currentLink.link,this._lastMouseEvent),this._currentLink=void 0,(0,a.disposeArray)(this._linkCacheDisposables))}_handleNewLink(e){if(!this._element||!this._lastMouseEvent||!this._mouseService)return;const t=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);t&&this._linkAtPosition(e.link,t)&&(this._currentLink=e,this._currentLink.state={decorations:{underline:void 0===e.link.decorations||e.link.decorations.underline,pointerCursor:void 0===e.link.decorations||e.link.decorations.pointerCursor},isHovered:!0},this._linkHover(this._element,e.link,this._lastMouseEvent),e.link.decorations={},Object.defineProperties(e.link.decorations,{pointerCursor:{get:()=>{var e,t;return null===(t=null===(e=this._currentLink)||void 0===e?void 0:e.state)||void 0===t?void 0:t.decorations.pointerCursor},set:e=>{var t,r;(null===(t=this._currentLink)||void 0===t?void 0:t.state)&&this._currentLink.state.decorations.pointerCursor!==e&&(this._currentLink.state.decorations.pointerCursor=e,this._currentLink.state.isHovered&&(null===(r=this._element)||void 0===r||r.classList.toggle("xterm-cursor-pointer",e)))}},underline:{get:()=>{var e,t;return null===(t=null===(e=this._currentLink)||void 0===e?void 0:e.state)||void 0===t?void 0:t.decorations.underline},set:t=>{var r,i,n;(null===(r=this._currentLink)||void 0===r?void 0:r.state)&&(null===(n=null===(i=this._currentLink)||void 0===i?void 0:i.state)||void 0===n?void 0:n.decorations.underline)!==t&&(this._currentLink.state.decorations.underline=t,this._currentLink.state.isHovered&&this._fireUnderlineEvent(e.link,t))}}}),this._renderService&&this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange((e=>{const t=0===e.start?0:e.start+1+this._bufferService.buffer.ydisp;this._clearCurrentLink(t,e.end+1+this._bufferService.buffer.ydisp)}))))}_linkHover(e,t,r){var i;(null===(i=this._currentLink)||void 0===i?void 0:i.state)&&(this._currentLink.state.isHovered=!0,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(t,!0),this._currentLink.state.decorations.pointerCursor&&e.classList.add("xterm-cursor-pointer")),t.hover&&t.hover(r,t.text)}_fireUnderlineEvent(e,t){const r=e.range,i=this._bufferService.buffer.ydisp,n=this._createLinkUnderlineEvent(r.start.x-1,r.start.y-i-1,r.end.x,r.end.y-i-1,void 0);(t?this._onShowLinkUnderline:this._onHideLinkUnderline).fire(n)}_linkLeave(e,t,r){var i;(null===(i=this._currentLink)||void 0===i?void 0:i.state)&&(this._currentLink.state.isHovered=!1,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(t,!1),this._currentLink.state.decorations.pointerCursor&&e.classList.remove("xterm-cursor-pointer")),t.leave&&t.leave(r,t.text)}_linkAtPosition(e,t){const r=e.range.start.y===e.range.end.y,i=e.range.start.y<t.y,n=e.range.end.y>t.y;return(r&&e.range.start.x<=t.x&&e.range.end.x>=t.x||i&&e.range.end.x>=t.x||n&&e.range.start.x<=t.x||i&&n)&&e.range.start.y<=t.y&&e.range.end.y>=t.y}_positionFromMouseEvent(e,t,r){const i=r.getCoords(e,t,this._bufferService.cols,this._bufferService.rows);if(i)return{x:i[0],y:i[1]+this._bufferService.buffer.ydisp}}_createLinkUnderlineEvent(e,t,r,i,n){return{x1:e,y1:t,x2:r,y2:i,cols:this._bufferService.cols,fg:n}}};c=i([n(0,s.IBufferService)],c),t.Linkifier2=c},9042:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tooMuchOutput=t.promptLabel=void 0,t.promptLabel="Terminal input",t.tooMuchOutput="Too much output to announce, navigate to rows manually to read"},2962:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OscLinkProvider=void 0;const s=r(511),o=r(2585);let a=class{constructor(e,t,r){this._bufferService=e,this._optionsService=t,this._oscLinkService=r}provideLinks(e,t){var r;const i=this._bufferService.buffer.lines.get(e-1);if(!i)return void t(void 0);const n=[],o=this._optionsService.rawOptions.linkHandler,a=new s.CellData,c=i.getTrimmedLength();let u=-1,h=-1,d=!1;for(let t=0;t<c;t++)if(-1!==h||i.hasContent(t)){if(i.loadCell(t,a),a.hasExtendedAttrs()&&a.extended.urlId){if(-1===h){h=t,u=a.extended.urlId;continue}d=a.extended.urlId!==u}else-1!==h&&(d=!0);if(d||-1!==h&&t===c-1){const i=null===(r=this._oscLinkService.getLinkData(u))||void 0===r?void 0:r.uri;if(i){const r={start:{x:h+1,y:e},end:{x:t+(d||t!==c-1?0:1),y:e}};n.push({text:i,range:r,activate:(e,t)=>o?o.activate(e,t,r):l(0,t),hover:(e,t)=>{var i;return null===(i=null==o?void 0:o.hover)||void 0===i?void 0:i.call(o,e,t,r)},leave:(e,t)=>{var i;return null===(i=null==o?void 0:o.leave)||void 0===i?void 0:i.call(o,e,t,r)}})}d=!1,a.hasExtendedAttrs()&&a.extended.urlId?(h=t,u=a.extended.urlId):(h=-1,u=-1)}}t(n)}};function l(e,t){if(confirm(`Do you want to navigate to ${t}?`)){const r=window.open();if(r){try{r.opener=null}catch(e){}r.location.href=t}else console.warn("Opening link blocked as opener could not be cleared")}}a=i([n(0,o.IBufferService),n(1,o.IOptionsService),n(2,o.IOscLinkService)],a),t.OscLinkProvider=a},6193:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RenderDebouncer=void 0,t.RenderDebouncer=class{constructor(e,t){this._parentWindow=e,this._renderCallback=t,this._refreshCallbacks=[]}dispose(){this._animationFrame&&(this._parentWindow.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)}addRefreshCallback(e){return this._refreshCallbacks.push(e),this._animationFrame||(this._animationFrame=this._parentWindow.requestAnimationFrame((()=>this._innerRefresh()))),this._animationFrame}refresh(e,t,r){this._rowCount=r,e=void 0!==e?e:0,t=void 0!==t?t:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,e):e,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,t):t,this._animationFrame||(this._animationFrame=this._parentWindow.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._animationFrame=void 0,void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return void this._runRefreshCallbacks();const e=Math.max(this._rowStart,0),t=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,t),this._runRefreshCallbacks()}_runRefreshCallbacks(){for(const e of this._refreshCallbacks)e(0);this._refreshCallbacks=[]}}},5596:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ScreenDprMonitor=void 0;const i=r(844);class n extends i.Disposable{constructor(e){super(),this._parentWindow=e,this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio}setListener(e){this._listener&&this.clearListener(),this._listener=e,this._outerListener=()=>{this._listener&&(this._listener(this._parentWindow.devicePixelRatio,this._currentDevicePixelRatio),this._updateDpr())},this._updateDpr()}dispose(){super.dispose(),this.clearListener()}_updateDpr(){var e;this._outerListener&&(null===(e=this._resolutionMediaMatchList)||void 0===e||e.removeListener(this._outerListener),this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio,this._resolutionMediaMatchList=this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`),this._resolutionMediaMatchList.addListener(this._outerListener))}clearListener(){this._resolutionMediaMatchList&&this._listener&&this._outerListener&&(this._resolutionMediaMatchList.removeListener(this._outerListener),this._resolutionMediaMatchList=void 0,this._listener=void 0,this._outerListener=void 0)}}t.ScreenDprMonitor=n},3236:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Terminal=void 0;const i=r(2950),n=r(1680),s=r(3614),o=r(2584),a=r(5435),l=r(9312),c=r(6114),u=r(3656),h=r(9042),d=r(4567),f=r(1296),p=r(7399),v=r(8460),g=r(8437),_=r(5680),m=r(3230),b=r(4725),y=r(428),S=r(8934),C=r(6465),w=r(5114),k=r(8969),E=r(8055),A=r(4269),x=r(5941),L=r(3107),R=r(5744),T=r(9074),D=r(2585),I=r(2962),O="undefined"!=typeof window?window.document:null;class P extends k.CoreTerminal{constructor(e={}){super(e),this.browser=c,this._keyDownHandled=!1,this._keyDownSeen=!1,this._keyPressHandled=!1,this._unprocessedDeadKey=!1,this._onCursorMove=new v.EventEmitter,this._onKey=new v.EventEmitter,this._onRender=new v.EventEmitter,this._onSelectionChange=new v.EventEmitter,this._onTitleChange=new v.EventEmitter,this._onBell=new v.EventEmitter,this._onFocus=new v.EventEmitter,this._onBlur=new v.EventEmitter,this._onA11yCharEmitter=new v.EventEmitter,this._onA11yTabEmitter=new v.EventEmitter,this._setup(),this.linkifier2=this.register(this._instantiationService.createInstance(C.Linkifier2)),this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(I.OscLinkProvider)),this._decorationService=this._instantiationService.createInstance(T.DecorationService),this._instantiationService.setService(D.IDecorationService,this._decorationService),this.register(this._inputHandler.onRequestBell((()=>this._onBell.fire()))),this.register(this._inputHandler.onRequestRefreshRows(((e,t)=>this.refresh(e,t)))),this.register(this._inputHandler.onRequestSendFocus((()=>this._reportFocus()))),this.register(this._inputHandler.onRequestReset((()=>this.reset()))),this.register(this._inputHandler.onRequestWindowsOptionsReport((e=>this._reportWindowsOptions(e)))),this.register(this._inputHandler.onColor((e=>this._handleColorEvent(e)))),this.register((0,v.forwardEvent)(this._inputHandler.onCursorMove,this._onCursorMove)),this.register((0,v.forwardEvent)(this._inputHandler.onTitleChange,this._onTitleChange)),this.register((0,v.forwardEvent)(this._inputHandler.onA11yChar,this._onA11yCharEmitter)),this.register((0,v.forwardEvent)(this._inputHandler.onA11yTab,this._onA11yTabEmitter)),this.register(this._bufferService.onResize((e=>this._afterResize(e.cols,e.rows))))}get onCursorMove(){return this._onCursorMove.event}get onKey(){return this._onKey.event}get onRender(){return this._onRender.event}get onSelectionChange(){return this._onSelectionChange.event}get onTitleChange(){return this._onTitleChange.event}get onBell(){return this._onBell.event}get onFocus(){return this._onFocus.event}get onBlur(){return this._onBlur.event}get onA11yChar(){return this._onA11yCharEmitter.event}get onA11yTab(){return this._onA11yTabEmitter.event}_handleColorEvent(e){var t,r;if(this._colorManager){for(const t of e){let e,r="";switch(t.index){case 256:e="foreground",r="10";break;case 257:e="background",r="11";break;case 258:e="cursor",r="12";break;default:e="ansi",r="4;"+t.index}switch(t.type){case 0:const i=E.color.toColorRGB("ansi"===e?this._colorManager.colors.ansi[t.index]:this._colorManager.colors[e]);this.coreService.triggerDataEvent(`${o.C0.ESC}]${r};${(0,x.toRgbString)(i)}${o.C1_ESCAPED.ST}`);break;case 1:"ansi"===e?this._colorManager.colors.ansi[t.index]=E.rgba.toColor(...t.color):this._colorManager.colors[e]=E.rgba.toColor(...t.color);break;case 2:this._colorManager.restoreColor(t.index)}}null===(t=this._renderService)||void 0===t||t.setColors(this._colorManager.colors),null===(r=this.viewport)||void 0===r||r.onThemeChange(this._colorManager.colors)}}dispose(){var e,t,r;this._isDisposed||(super.dispose(),null===(e=this._renderService)||void 0===e||e.dispose(),this._customKeyEventHandler=void 0,this.write=()=>{},null===(r=null===(t=this.element)||void 0===t?void 0:t.parentNode)||void 0===r||r.removeChild(this.element))}_setup(){super._setup(),this._customKeyEventHandler=void 0}get buffer(){return this.buffers.active}focus(){this.textarea&&this.textarea.focus({preventScroll:!0})}_updateOptions(e){var t,r,i,n;switch(super._updateOptions(e),e){case"fontFamily":case"fontSize":null===(t=this._renderService)||void 0===t||t.clear(),null===(r=this._charSizeService)||void 0===r||r.measure();break;case"cursorBlink":case"cursorStyle":this.refresh(this.buffer.y,this.buffer.y);break;case"customGlyphs":case"drawBoldTextInBrightColors":case"letterSpacing":case"lineHeight":case"fontWeight":case"fontWeightBold":case"minimumContrastRatio":this._renderService&&(this._renderService.clear(),this._renderService.onResize(this.cols,this.rows),this.refresh(0,this.rows-1));break;case"scrollback":null===(i=this.viewport)||void 0===i||i.syncScrollArea();break;case"screenReaderMode":this.optionsService.rawOptions.screenReaderMode?!this._accessibilityManager&&this._renderService&&(this._accessibilityManager=new d.AccessibilityManager(this,this._renderService)):(null===(n=this._accessibilityManager)||void 0===n||n.dispose(),this._accessibilityManager=void 0);break;case"tabStopWidth":this.buffers.setupTabStops();break;case"theme":this._setTheme(this.optionsService.rawOptions.theme)}}_onTextAreaFocus(e){this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(o.C0.ESC+"[I"),this.updateCursorStyle(e),this.element.classList.add("focus"),this._showCursor(),this._onFocus.fire()}blur(){var e;return null===(e=this.textarea)||void 0===e?void 0:e.blur()}_onTextAreaBlur(){this.textarea.value="",this.refresh(this.buffer.y,this.buffer.y),this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(o.C0.ESC+"[O"),this.element.classList.remove("focus"),this._onBlur.fire()}_syncTextArea(){if(!this.textarea||!this.buffer.isCursorInViewport||this._compositionHelper.isComposing||!this._renderService)return;const e=this.buffer.ybase+this.buffer.y,t=this.buffer.lines.get(e);if(!t)return;const r=Math.min(this.buffer.x,this.cols-1),i=this._renderService.dimensions.actualCellHeight,n=t.getWidth(r),s=this._renderService.dimensions.actualCellWidth*n,o=this.buffer.y*this._renderService.dimensions.actualCellHeight,a=r*this._renderService.dimensions.actualCellWidth;this.textarea.style.left=a+"px",this.textarea.style.top=o+"px",this.textarea.style.width=s+"px",this.textarea.style.height=i+"px",this.textarea.style.lineHeight=i+"px",this.textarea.style.zIndex="-5"}_initGlobal(){this._bindKeys(),this.register((0,u.addDisposableDomListener)(this.element,"copy",(e=>{this.hasSelection()&&(0,s.copyHandler)(e,this._selectionService)})));const e=e=>(0,s.handlePasteEvent)(e,this.textarea,this.coreService);this.register((0,u.addDisposableDomListener)(this.textarea,"paste",e)),this.register((0,u.addDisposableDomListener)(this.element,"paste",e)),c.isFirefox?this.register((0,u.addDisposableDomListener)(this.element,"mousedown",(e=>{2===e.button&&(0,s.rightClickHandler)(e,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))):this.register((0,u.addDisposableDomListener)(this.element,"contextmenu",(e=>{(0,s.rightClickHandler)(e,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))),c.isLinux&&this.register((0,u.addDisposableDomListener)(this.element,"auxclick",(e=>{1===e.button&&(0,s.moveTextAreaUnderMouseCursor)(e,this.textarea,this.screenElement)})))}_bindKeys(){this.register((0,u.addDisposableDomListener)(this.textarea,"keyup",(e=>this._keyUp(e)),!0)),this.register((0,u.addDisposableDomListener)(this.textarea,"keydown",(e=>this._keyDown(e)),!0)),this.register((0,u.addDisposableDomListener)(this.textarea,"keypress",(e=>this._keyPress(e)),!0)),this.register((0,u.addDisposableDomListener)(this.textarea,"compositionstart",(()=>this._compositionHelper.compositionstart()))),this.register((0,u.addDisposableDomListener)(this.textarea,"compositionupdate",(e=>this._compositionHelper.compositionupdate(e)))),this.register((0,u.addDisposableDomListener)(this.textarea,"compositionend",(()=>this._compositionHelper.compositionend()))),this.register((0,u.addDisposableDomListener)(this.textarea,"input",(e=>this._inputEvent(e)),!0)),this.register(this.onRender((()=>this._compositionHelper.updateCompositionElements())))}open(e){var t;if(!e)throw new Error("Terminal requires a parent element.");e.isConnected||this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"),this._document=e.ownerDocument,this.element=this._document.createElement("div"),this.element.dir="ltr",this.element.classList.add("terminal"),this.element.classList.add("xterm"),this.element.setAttribute("tabindex","0"),e.appendChild(this.element);const r=O.createDocumentFragment();this._viewportElement=O.createElement("div"),this._viewportElement.classList.add("xterm-viewport"),r.appendChild(this._viewportElement),this._viewportScrollArea=O.createElement("div"),this._viewportScrollArea.classList.add("xterm-scroll-area"),this._viewportElement.appendChild(this._viewportScrollArea),this.screenElement=O.createElement("div"),this.screenElement.classList.add("xterm-screen"),this._helperContainer=O.createElement("div"),this._helperContainer.classList.add("xterm-helpers"),this.screenElement.appendChild(this._helperContainer),r.appendChild(this.screenElement),this.textarea=O.createElement("textarea"),this.textarea.classList.add("xterm-helper-textarea"),this.textarea.setAttribute("aria-label",h.promptLabel),this.textarea.setAttribute("aria-multiline","false"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.tabIndex=0,this.register((0,u.addDisposableDomListener)(this.textarea,"focus",(e=>this._onTextAreaFocus(e)))),this.register((0,u.addDisposableDomListener)(this.textarea,"blur",(()=>this._onTextAreaBlur()))),this._helperContainer.appendChild(this.textarea),this._coreBrowserService=this._instantiationService.createInstance(w.CoreBrowserService,this.textarea,null!==(t=this._document.defaultView)&&void 0!==t?t:window),this._instantiationService.setService(b.ICoreBrowserService,this._coreBrowserService),this._charSizeService=this._instantiationService.createInstance(y.CharSizeService,this._document,this._helperContainer),this._instantiationService.setService(b.ICharSizeService,this._charSizeService),this._theme=this.options.theme||this._theme,this._colorManager=new _.ColorManager(O,this.options.allowTransparency),this.register(this.optionsService.onOptionChange((e=>this._colorManager.onOptionsChange(e,this.optionsService.rawOptions[e])))),this._colorManager.setTheme(this._theme),this._characterJoinerService=this._instantiationService.createInstance(A.CharacterJoinerService),this._instantiationService.setService(b.ICharacterJoinerService,this._characterJoinerService);const s=this._createRenderer();this._renderService=this.register(this._instantiationService.createInstance(m.RenderService,s,this.rows,this.screenElement)),this._instantiationService.setService(b.IRenderService,this._renderService),this.register(this._renderService.onRenderedViewportChange((e=>this._onRender.fire(e)))),this.onResize((e=>this._renderService.resize(e.cols,e.rows))),this._compositionView=O.createElement("div"),this._compositionView.classList.add("composition-view"),this._compositionHelper=this._instantiationService.createInstance(i.CompositionHelper,this.textarea,this._compositionView),this._helperContainer.appendChild(this._compositionView),this.element.appendChild(r),this._mouseService=this._instantiationService.createInstance(S.MouseService),this._instantiationService.setService(b.IMouseService,this._mouseService),this.viewport=this._instantiationService.createInstance(n.Viewport,(e=>this.scrollLines(e,!0,1)),this._viewportElement,this._viewportScrollArea,this.element),this.viewport.onThemeChange(this._colorManager.colors),this.register(this._inputHandler.onRequestSyncScrollBar((()=>this.viewport.syncScrollArea()))),this.register(this.viewport),this.register(this.onCursorMove((()=>{this._renderService.onCursorMove(),this._syncTextArea()}))),this.register(this.onResize((()=>this._renderService.onResize(this.cols,this.rows)))),this.register(this.onBlur((()=>this._renderService.onBlur()))),this.register(this.onFocus((()=>this._renderService.onFocus()))),this.register(this._renderService.onDimensionsChange((()=>this.viewport.syncScrollArea()))),this._selectionService=this.register(this._instantiationService.createInstance(l.SelectionService,this.element,this.screenElement,this.linkifier2)),this._instantiationService.setService(b.ISelectionService,this._selectionService),this.register(this._selectionService.onRequestScrollLines((e=>this.scrollLines(e.amount,e.suppressScrollEvent)))),this.register(this._selectionService.onSelectionChange((()=>this._onSelectionChange.fire()))),this.register(this._selectionService.onRequestRedraw((e=>this._renderService.onSelectionChanged(e.start,e.end,e.columnSelectMode)))),this.register(this._selectionService.onLinuxMouseSelection((e=>{this.textarea.value=e,this.textarea.focus(),this.textarea.select()}))),this.register(this._onScroll.event((e=>{this.viewport.syncScrollArea(),this._selectionService.refresh()}))),this.register((0,u.addDisposableDomListener)(this._viewportElement,"scroll",(()=>this._selectionService.refresh()))),this.linkifier2.attachToDom(this.screenElement,this._mouseService,this._renderService),this.register(this._instantiationService.createInstance(L.BufferDecorationRenderer,this.screenElement)),this.register((0,u.addDisposableDomListener)(this.element,"mousedown",(e=>this._selectionService.onMouseDown(e)))),this.coreMouseService.areMouseEventsActive?(this._selectionService.disable(),this.element.classList.add("enable-mouse-events")):this._selectionService.enable(),this.options.screenReaderMode&&(this._accessibilityManager=new d.AccessibilityManager(this,this._renderService)),this.options.overviewRulerWidth&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(R.OverviewRulerRenderer,this._viewportElement,this.screenElement))),this.optionsService.onOptionChange((()=>{!this._overviewRulerRenderer&&this.options.overviewRulerWidth&&this._viewportElement&&this.screenElement&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(R.OverviewRulerRenderer,this._viewportElement,this.screenElement)))})),this._charSizeService.measure(),this.refresh(0,this.rows-1),this._initGlobal(),this.bindMouse()}_createRenderer(){return this._instantiationService.createInstance(f.DomRenderer,this._colorManager.colors,this.element,this.screenElement,this._viewportElement,this.linkifier2)}_setTheme(e){var t,r,i;this._theme=e,null===(t=this._colorManager)||void 0===t||t.setTheme(e),null===(r=this._renderService)||void 0===r||r.setColors(this._colorManager.colors),null===(i=this.viewport)||void 0===i||i.onThemeChange(this._colorManager.colors)}bindMouse(){const e=this,t=this.element;function r(t){const r=e._mouseService.getMouseReportCoords(t,e.screenElement);if(!r)return!1;let i,n;switch(t.overrideType||t.type){case"mousemove":n=32,void 0===t.buttons?(i=3,void 0!==t.button&&(i=t.button<3?t.button:3)):i=1&t.buttons?0:4&t.buttons?1:2&t.buttons?2:3;break;case"mouseup":n=0,i=t.button<3?t.button:3;break;case"mousedown":n=1,i=t.button<3?t.button:3;break;case"wheel":if(0===e.viewport.getLinesScrolled(t))return!1;n=t.deltaY<0?0:1,i=4;break;default:return!1}return!(void 0===n||void 0===i||i>4)&&e.coreMouseService.triggerMouseEvent({col:r.col,row:r.row,x:r.x,y:r.y,button:i,action:n,ctrl:t.ctrlKey,alt:t.altKey,shift:t.shiftKey})}const i={mouseup:null,wheel:null,mousedrag:null,mousemove:null},n={mouseup:e=>(r(e),e.buttons||(this._document.removeEventListener("mouseup",i.mouseup),i.mousedrag&&this._document.removeEventListener("mousemove",i.mousedrag)),this.cancel(e)),wheel:e=>(r(e),this.cancel(e,!0)),mousedrag:e=>{e.buttons&&r(e)},mousemove:e=>{e.buttons||r(e)}};this.register(this.coreMouseService.onProtocolChange((e=>{e?("debug"===this.optionsService.rawOptions.logLevel&&this._logService.debug("Binding to mouse events:",this.coreMouseService.explainEvents(e)),this.element.classList.add("enable-mouse-events"),this._selectionService.disable()):(this._logService.debug("Unbinding from mouse events."),this.element.classList.remove("enable-mouse-events"),this._selectionService.enable()),8&e?i.mousemove||(t.addEventListener("mousemove",n.mousemove),i.mousemove=n.mousemove):(t.removeEventListener("mousemove",i.mousemove),i.mousemove=null),16&e?i.wheel||(t.addEventListener("wheel",n.wheel,{passive:!1}),i.wheel=n.wheel):(t.removeEventListener("wheel",i.wheel),i.wheel=null),2&e?i.mouseup||(i.mouseup=n.mouseup):(this._document.removeEventListener("mouseup",i.mouseup),i.mouseup=null),4&e?i.mousedrag||(i.mousedrag=n.mousedrag):(this._document.removeEventListener("mousemove",i.mousedrag),i.mousedrag=null)}))),this.coreMouseService.activeProtocol=this.coreMouseService.activeProtocol,this.register((0,u.addDisposableDomListener)(t,"mousedown",(e=>{if(e.preventDefault(),this.focus(),this.coreMouseService.areMouseEventsActive&&!this._selectionService.shouldForceSelection(e))return r(e),i.mouseup&&this._document.addEventListener("mouseup",i.mouseup),i.mousedrag&&this._document.addEventListener("mousemove",i.mousedrag),this.cancel(e)}))),this.register((0,u.addDisposableDomListener)(t,"wheel",(e=>{if(!i.wheel){if(!this.buffer.hasScrollback){const t=this.viewport.getLinesScrolled(e);if(0===t)return;const r=o.C0.ESC+(this.coreService.decPrivateModes.applicationCursorKeys?"O":"[")+(e.deltaY<0?"A":"B");let i="";for(let e=0;e<Math.abs(t);e++)i+=r;return this.coreService.triggerDataEvent(i,!0),this.cancel(e,!0)}return this.viewport.onWheel(e)?this.cancel(e):void 0}}),{passive:!1})),this.register((0,u.addDisposableDomListener)(t,"touchstart",(e=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.onTouchStart(e),this.cancel(e)}),{passive:!0})),this.register((0,u.addDisposableDomListener)(t,"touchmove",(e=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.onTouchMove(e)?void 0:this.cancel(e)}),{passive:!1}))}refresh(e,t){var r;null===(r=this._renderService)||void 0===r||r.refreshRows(e,t)}updateCursorStyle(e){var t;(null===(t=this._selectionService)||void 0===t?void 0:t.shouldColumnSelect(e))?this.element.classList.add("column-select"):this.element.classList.remove("column-select")}_showCursor(){this.coreService.isCursorInitialized||(this.coreService.isCursorInitialized=!0,this.refresh(this.buffer.y,this.buffer.y))}scrollLines(e,t,r=0){super.scrollLines(e,t,r),this.refresh(0,this.rows-1)}paste(e){(0,s.paste)(e,this.textarea,this.coreService)}attachCustomKeyEventHandler(e){this._customKeyEventHandler=e}registerLinkProvider(e){return this.linkifier2.registerLinkProvider(e)}registerCharacterJoiner(e){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");const t=this._characterJoinerService.register(e);return this.refresh(0,this.rows-1),t}deregisterCharacterJoiner(e){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");this._characterJoinerService.deregister(e)&&this.refresh(0,this.rows-1)}get markers(){return this.buffer.markers}addMarker(e){return this.buffer.addMarker(this.buffer.ybase+this.buffer.y+e)}registerDecoration(e){return this._decorationService.registerDecoration(e)}hasSelection(){return!!this._selectionService&&this._selectionService.hasSelection}select(e,t,r){this._selectionService.setSelection(e,t,r)}getSelection(){return this._selectionService?this._selectionService.selectionText:""}getSelectionPosition(){if(this._selectionService&&this._selectionService.hasSelection)return{start:{x:this._selectionService.selectionStart[0],y:this._selectionService.selectionStart[1]},end:{x:this._selectionService.selectionEnd[0],y:this._selectionService.selectionEnd[1]}}}clearSelection(){var e;null===(e=this._selectionService)||void 0===e||e.clearSelection()}selectAll(){var e;null===(e=this._selectionService)||void 0===e||e.selectAll()}selectLines(e,t){var r;null===(r=this._selectionService)||void 0===r||r.selectLines(e,t)}_keyDown(e){if(this._keyDownHandled=!1,this._keyDownSeen=!0,this._customKeyEventHandler&&!1===this._customKeyEventHandler(e))return!1;const t=this.browser.isMac&&this.options.macOptionIsMeta&&e.altKey;if(!t&&!this._compositionHelper.keydown(e))return this.buffer.ybase!==this.buffer.ydisp&&this._bufferService.scrollToBottom(),!1;t||"Dead"!==e.key&&"AltGraph"!==e.key||(this._unprocessedDeadKey=!0);const r=(0,p.evaluateKeyboardEvent)(e,this.coreService.decPrivateModes.applicationCursorKeys,this.browser.isMac,this.options.macOptionIsMeta);if(this.updateCursorStyle(e),3===r.type||2===r.type){const t=this.rows-1;return this.scrollLines(2===r.type?-t:t),this.cancel(e,!0)}return 1===r.type&&this.selectAll(),!!this._isThirdLevelShift(this.browser,e)||(r.cancel&&this.cancel(e,!0),!r.key||!!(e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&1===e.key.length&&e.key.charCodeAt(0)>=65&&e.key.charCodeAt(0)<=90)||(this._unprocessedDeadKey?(this._unprocessedDeadKey=!1,!0):(r.key!==o.C0.ETX&&r.key!==o.C0.CR||(this.textarea.value=""),this._onKey.fire({key:r.key,domEvent:e}),this._showCursor(),this.coreService.triggerDataEvent(r.key,!0),this.optionsService.rawOptions.screenReaderMode?void(this._keyDownHandled=!0):this.cancel(e,!0))))}_isThirdLevelShift(e,t){const r=e.isMac&&!this.options.macOptionIsMeta&&t.altKey&&!t.ctrlKey&&!t.metaKey||e.isWindows&&t.altKey&&t.ctrlKey&&!t.metaKey||e.isWindows&&t.getModifierState("AltGraph");return"keypress"===t.type?r:r&&(!t.keyCode||t.keyCode>47)}_keyUp(e){this._keyDownSeen=!1,this._customKeyEventHandler&&!1===this._customKeyEventHandler(e)||(function(e){return 16===e.keyCode||17===e.keyCode||18===e.keyCode}(e)||this.focus(),this.updateCursorStyle(e),this._keyPressHandled=!1)}_keyPress(e){let t;if(this._keyPressHandled=!1,this._keyDownHandled)return!1;if(this._customKeyEventHandler&&!1===this._customKeyEventHandler(e))return!1;if(this.cancel(e),e.charCode)t=e.charCode;else if(null===e.which||void 0===e.which)t=e.keyCode;else{if(0===e.which||0===e.charCode)return!1;t=e.which}return!(!t||(e.altKey||e.ctrlKey||e.metaKey)&&!this._isThirdLevelShift(this.browser,e)||(t=String.fromCharCode(t),this._onKey.fire({key:t,domEvent:e}),this._showCursor(),this.coreService.triggerDataEvent(t,!0),this._keyPressHandled=!0,this._unprocessedDeadKey=!1,0))}_inputEvent(e){if(e.data&&"insertText"===e.inputType&&(!e.composed||!this._keyDownSeen)&&!this.optionsService.rawOptions.screenReaderMode){if(this._keyPressHandled)return!1;this._unprocessedDeadKey=!1;const t=e.data;return this.coreService.triggerDataEvent(t,!0),this.cancel(e),!0}return!1}resize(e,t){e!==this.cols||t!==this.rows?super.resize(e,t):this._charSizeService&&!this._charSizeService.hasValidSize&&this._charSizeService.measure()}_afterResize(e,t){var r,i;null===(r=this._charSizeService)||void 0===r||r.measure(),null===(i=this.viewport)||void 0===i||i.syncScrollArea(!0)}clear(){if(0!==this.buffer.ybase||0!==this.buffer.y){this.buffer.clearAllMarkers(),this.buffer.lines.set(0,this.buffer.lines.get(this.buffer.ybase+this.buffer.y)),this.buffer.lines.length=1,this.buffer.ydisp=0,this.buffer.ybase=0,this.buffer.y=0;for(let e=1;e<this.rows;e++)this.buffer.lines.push(this.buffer.getBlankLine(g.DEFAULT_ATTR_DATA));this.refresh(0,this.rows-1),this._onScroll.fire({position:this.buffer.ydisp,source:0})}}reset(){var e,t;this.options.rows=this.rows,this.options.cols=this.cols;const r=this._customKeyEventHandler;this._setup(),super.reset(),null===(e=this._selectionService)||void 0===e||e.reset(),this._decorationService.reset(),this._customKeyEventHandler=r,this.refresh(0,this.rows-1),null===(t=this.viewport)||void 0===t||t.syncScrollArea()}clearTextureAtlas(){var e;null===(e=this._renderService)||void 0===e||e.clearTextureAtlas()}_reportFocus(){var e;(null===(e=this.element)||void 0===e?void 0:e.classList.contains("focus"))?this.coreService.triggerDataEvent(o.C0.ESC+"[I"):this.coreService.triggerDataEvent(o.C0.ESC+"[O")}_reportWindowsOptions(e){if(this._renderService)switch(e){case a.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:const e=this._renderService.dimensions.canvasWidth.toFixed(0),t=this._renderService.dimensions.canvasHeight.toFixed(0);this.coreService.triggerDataEvent(`${o.C0.ESC}[4;${t};${e}t`);break;case a.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:const r=this._renderService.dimensions.actualCellWidth.toFixed(0),i=this._renderService.dimensions.actualCellHeight.toFixed(0);this.coreService.triggerDataEvent(`${o.C0.ESC}[6;${i};${r}t`)}}cancel(e,t){if(this.options.cancelEvents||t)return e.preventDefault(),e.stopPropagation(),!1}}t.Terminal=P},9924:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TimeBasedDebouncer=void 0,t.TimeBasedDebouncer=class{constructor(e,t=1e3){this._renderCallback=e,this._debounceThresholdMS=t,this._lastRefreshMs=0,this._additionalRefreshRequested=!1}dispose(){this._refreshTimeoutID&&clearTimeout(this._refreshTimeoutID)}refresh(e,t,r){this._rowCount=r,e=void 0!==e?e:0,t=void 0!==t?t:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,e):e,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,t):t;const i=Date.now();if(i-this._lastRefreshMs>=this._debounceThresholdMS)this._lastRefreshMs=i,this._innerRefresh();else if(!this._additionalRefreshRequested){const e=i-this._lastRefreshMs,t=this._debounceThresholdMS-e;this._additionalRefreshRequested=!0,this._refreshTimeoutID=window.setTimeout((()=>{this._lastRefreshMs=Date.now(),this._innerRefresh(),this._additionalRefreshRequested=!1,this._refreshTimeoutID=void 0}),t)}}_innerRefresh(){if(void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return;const e=Math.max(this._rowStart,0),t=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,t)}}},1680:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.Viewport=void 0;const s=r(844),o=r(3656),a=r(4725),l=r(2585);let c=class extends s.Disposable{constructor(e,t,r,i,n,s,a,l,c){super(),this._scrollLines=e,this._viewportElement=t,this._scrollArea=r,this._element=i,this._bufferService=n,this._optionsService=s,this._charSizeService=a,this._renderService=l,this._coreBrowserService=c,this.scrollBarWidth=0,this._currentRowHeight=0,this._currentScaledCellHeight=0,this._lastRecordedBufferLength=0,this._lastRecordedViewportHeight=0,this._lastRecordedBufferHeight=0,this._lastTouchY=0,this._lastScrollTop=0,this._wheelPartialScroll=0,this._refreshAnimationFrame=null,this._ignoreNextScrollEvent=!1,this._smoothScrollState={startTime:0,origin:-1,target:-1},this.scrollBarWidth=this._viewportElement.offsetWidth-this._scrollArea.offsetWidth||15,this.register((0,o.addDisposableDomListener)(this._viewportElement,"scroll",this._onScroll.bind(this))),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((e=>this._activeBuffer=e.activeBuffer))),this._renderDimensions=this._renderService.dimensions,this.register(this._renderService.onDimensionsChange((e=>this._renderDimensions=e))),setTimeout((()=>this.syncScrollArea()),0)}onThemeChange(e){this._viewportElement.style.backgroundColor=e.background.css}_refresh(e){if(e)return this._innerRefresh(),void(null!==this._refreshAnimationFrame&&this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));null===this._refreshAnimationFrame&&(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._charSizeService.height>0){this._currentRowHeight=this._renderService.dimensions.scaledCellHeight/this._coreBrowserService.dpr,this._currentScaledCellHeight=this._renderService.dimensions.scaledCellHeight,this._lastRecordedViewportHeight=this._viewportElement.offsetHeight;const e=Math.round(this._currentRowHeight*this._lastRecordedBufferLength)+(this._lastRecordedViewportHeight-this._renderService.dimensions.canvasHeight);this._lastRecordedBufferHeight!==e&&(this._lastRecordedBufferHeight=e,this._scrollArea.style.height=this._lastRecordedBufferHeight+"px")}const e=this._bufferService.buffer.ydisp*this._currentRowHeight;this._viewportElement.scrollTop!==e&&(this._ignoreNextScrollEvent=!0,this._viewportElement.scrollTop=e),this._refreshAnimationFrame=null}syncScrollArea(e=!1){if(this._lastRecordedBufferLength!==this._bufferService.buffer.lines.length)return this._lastRecordedBufferLength=this._bufferService.buffer.lines.length,void this._refresh(e);this._lastRecordedViewportHeight===this._renderService.dimensions.canvasHeight&&this._lastScrollTop===this._activeBuffer.ydisp*this._currentRowHeight&&this._renderDimensions.scaledCellHeight===this._currentScaledCellHeight||this._refresh(e)}_onScroll(e){if(this._lastScrollTop=this._viewportElement.scrollTop,!this._viewportElement.offsetParent)return;if(this._ignoreNextScrollEvent)return this._ignoreNextScrollEvent=!1,void this._scrollLines(0);const t=Math.round(this._lastScrollTop/this._currentRowHeight)-this._bufferService.buffer.ydisp;this._scrollLines(t)}_smoothScroll(){if(this._isDisposed||-1===this._smoothScrollState.origin||-1===this._smoothScrollState.target)return;const e=this._smoothScrollPercent();this._viewportElement.scrollTop=this._smoothScrollState.origin+Math.round(e*(this._smoothScrollState.target-this._smoothScrollState.origin)),e<1?this._coreBrowserService.window.requestAnimationFrame((()=>this._smoothScroll())):this._clearSmoothScrollState()}_smoothScrollPercent(){return this._optionsService.rawOptions.smoothScrollDuration&&this._smoothScrollState.startTime?Math.max(Math.min((Date.now()-this._smoothScrollState.startTime)/this._optionsService.rawOptions.smoothScrollDuration,1),0):1}_clearSmoothScrollState(){this._smoothScrollState.startTime=0,this._smoothScrollState.origin=-1,this._smoothScrollState.target=-1}_bubbleScroll(e,t){const r=this._viewportElement.scrollTop+this._lastRecordedViewportHeight;return!(t<0&&0!==this._viewportElement.scrollTop||t>0&&r<this._lastRecordedBufferHeight)||(e.cancelable&&e.preventDefault(),!1)}onWheel(e){const t=this._getPixelsScrolled(e);return 0!==t&&(this._optionsService.rawOptions.smoothScrollDuration?(this._smoothScrollState.startTime=Date.now(),this._smoothScrollPercent()<1?(this._smoothScrollState.origin=this._viewportElement.scrollTop,-1===this._smoothScrollState.target?this._smoothScrollState.target=this._viewportElement.scrollTop+t:this._smoothScrollState.target+=t,this._smoothScrollState.target=Math.max(Math.min(this._smoothScrollState.target,this._viewportElement.scrollHeight),0),this._smoothScroll()):this._clearSmoothScrollState()):this._viewportElement.scrollTop+=t,this._bubbleScroll(e,t))}_getPixelsScrolled(e){if(0===e.deltaY||e.shiftKey)return 0;let t=this._applyScrollModifier(e.deltaY,e);return e.deltaMode===WheelEvent.DOM_DELTA_LINE?t*=this._currentRowHeight:e.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(t*=this._currentRowHeight*this._bufferService.rows),t}getLinesScrolled(e){if(0===e.deltaY||e.shiftKey)return 0;let t=this._applyScrollModifier(e.deltaY,e);return e.deltaMode===WheelEvent.DOM_DELTA_PIXEL?(t/=this._currentRowHeight+0,this._wheelPartialScroll+=t,t=Math.floor(Math.abs(this._wheelPartialScroll))*(this._wheelPartialScroll>0?1:-1),this._wheelPartialScroll%=1):e.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(t*=this._bufferService.rows),t}_applyScrollModifier(e,t){const r=this._optionsService.rawOptions.fastScrollModifier;return"alt"===r&&t.altKey||"ctrl"===r&&t.ctrlKey||"shift"===r&&t.shiftKey?e*this._optionsService.rawOptions.fastScrollSensitivity*this._optionsService.rawOptions.scrollSensitivity:e*this._optionsService.rawOptions.scrollSensitivity}onTouchStart(e){this._lastTouchY=e.touches[0].pageY}onTouchMove(e){const t=this._lastTouchY-e.touches[0].pageY;return this._lastTouchY=e.touches[0].pageY,0!==t&&(this._viewportElement.scrollTop+=t,this._bubbleScroll(e,t))}};c=i([n(4,l.IBufferService),n(5,l.IOptionsService),n(6,a.ICharSizeService),n(7,a.IRenderService),n(8,a.ICoreBrowserService)],c),t.Viewport=c},3107:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.BufferDecorationRenderer=void 0;const s=r(3656),o=r(4725),a=r(844),l=r(2585);let c=class extends a.Disposable{constructor(e,t,r,i){super(),this._screenElement=e,this._bufferService=t,this._decorationService=r,this._renderService=i,this._decorationElements=new Map,this._altBufferIsActive=!1,this._dimensionsChanged=!1,this._container=document.createElement("div"),this._container.classList.add("xterm-decoration-container"),this._screenElement.appendChild(this._container),this.register(this._renderService.onRenderedViewportChange((()=>this._queueRefresh()))),this.register(this._renderService.onDimensionsChange((()=>{this._dimensionsChanged=!0,this._queueRefresh()}))),this.register((0,s.addDisposableDomListener)(window,"resize",(()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._altBufferIsActive=this._bufferService.buffer===this._bufferService.buffers.alt}))),this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh()))),this.register(this._decorationService.onDecorationRemoved((e=>this._removeDecoration(e))))}dispose(){this._container.remove(),this._decorationElements.clear(),super.dispose()}_queueRefresh(){void 0===this._animationFrame&&(this._animationFrame=this._renderService.addRefreshCallback((()=>{this.refreshDecorations(),this._animationFrame=void 0})))}refreshDecorations(){for(const e of this._decorationService.decorations)this._renderDecoration(e);this._dimensionsChanged=!1}_renderDecoration(e){this._refreshStyle(e),this._dimensionsChanged&&this._refreshXPosition(e)}_createElement(e){var t;const r=document.createElement("div");r.classList.add("xterm-decoration"),r.style.width=`${Math.round((e.options.width||1)*this._renderService.dimensions.actualCellWidth)}px`,r.style.height=(e.options.height||1)*this._renderService.dimensions.actualCellHeight+"px",r.style.top=(e.marker.line-this._bufferService.buffers.active.ydisp)*this._renderService.dimensions.actualCellHeight+"px",r.style.lineHeight=`${this._renderService.dimensions.actualCellHeight}px`;const i=null!==(t=e.options.x)&&void 0!==t?t:0;return i&&i>this._bufferService.cols&&(r.style.display="none"),this._refreshXPosition(e,r),r}_refreshStyle(e){const t=e.marker.line-this._bufferService.buffers.active.ydisp;if(t<0||t>=this._bufferService.rows)e.element&&(e.element.style.display="none",e.onRenderEmitter.fire(e.element));else{let r=this._decorationElements.get(e);r||(e.onDispose((()=>this._removeDecoration(e))),r=this._createElement(e),e.element=r,this._decorationElements.set(e,r),this._container.appendChild(r)),r.style.top=t*this._renderService.dimensions.actualCellHeight+"px",r.style.display=this._altBufferIsActive?"none":"block",e.onRenderEmitter.fire(r)}}_refreshXPosition(e,t=e.element){var r;if(!t)return;const i=null!==(r=e.options.x)&&void 0!==r?r:0;"right"===(e.options.anchor||"left")?t.style.right=i?i*this._renderService.dimensions.actualCellWidth+"px":"":t.style.left=i?i*this._renderService.dimensions.actualCellWidth+"px":""}_removeDecoration(e){var t;null===(t=this._decorationElements.get(e))||void 0===t||t.remove(),this._decorationElements.delete(e)}};c=i([n(1,l.IBufferService),n(2,l.IDecorationService),n(3,o.IRenderService)],c),t.BufferDecorationRenderer=c},5871:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorZoneStore=void 0,t.ColorZoneStore=class{constructor(){this._zones=[],this._zonePool=[],this._zonePoolIndex=0,this._linePadding={full:0,left:0,center:0,right:0}}get zones(){return this._zonePool.length=Math.min(this._zonePool.length,this._zones.length),this._zones}clear(){this._zones.length=0,this._zonePoolIndex=0}addDecoration(e){if(e.options.overviewRulerOptions){for(const t of this._zones)if(t.color===e.options.overviewRulerOptions.color&&t.position===e.options.overviewRulerOptions.position){if(this._lineIntersectsZone(t,e.marker.line))return;if(this._lineAdjacentToZone(t,e.marker.line,e.options.overviewRulerOptions.position))return void this._addLineToZone(t,e.marker.line)}if(this._zonePoolIndex<this._zonePool.length)return this._zonePool[this._zonePoolIndex].color=e.options.overviewRulerOptions.color,this._zonePool[this._zonePoolIndex].position=e.options.overviewRulerOptions.position,this._zonePool[this._zonePoolIndex].startBufferLine=e.marker.line,this._zonePool[this._zonePoolIndex].endBufferLine=e.marker.line,void this._zones.push(this._zonePool[this._zonePoolIndex++]);this._zones.push({color:e.options.overviewRulerOptions.color,position:e.options.overviewRulerOptions.position,startBufferLine:e.marker.line,endBufferLine:e.marker.line}),this._zonePool.push(this._zones[this._zones.length-1]),this._zonePoolIndex++}}setPadding(e){this._linePadding=e}_lineIntersectsZone(e,t){return t>=e.startBufferLine&&t<=e.endBufferLine}_lineAdjacentToZone(e,t,r){return t>=e.startBufferLine-this._linePadding[r||"full"]&&t<=e.endBufferLine+this._linePadding[r||"full"]}_addLineToZone(e,t){e.startBufferLine=Math.min(e.startBufferLine,t),e.endBufferLine=Math.max(e.endBufferLine,t)}}},5744:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OverviewRulerRenderer=void 0;const s=r(5871),o=r(3656),a=r(4725),l=r(844),c=r(2585),u={full:0,left:0,center:0,right:0},h={full:0,left:0,center:0,right:0},d={full:0,left:0,center:0,right:0};let f=class extends l.Disposable{constructor(e,t,r,i,n,o,a){var l;super(),this._viewportElement=e,this._screenElement=t,this._bufferService=r,this._decorationService=i,this._renderService=n,this._optionsService=o,this._coreBrowseService=a,this._colorZoneStore=new s.ColorZoneStore,this._shouldUpdateDimensions=!0,this._shouldUpdateAnchor=!0,this._lastKnownBufferLength=0,this._canvas=document.createElement("canvas"),this._canvas.classList.add("xterm-decoration-overview-ruler"),this._refreshCanvasDimensions(),null===(l=this._viewportElement.parentElement)||void 0===l||l.insertBefore(this._canvas,this._viewportElement);const c=this._canvas.getContext("2d");if(!c)throw new Error("Ctx cannot be null");this._ctx=c,this._registerDecorationListeners(),this._registerBufferChangeListeners(),this._registerDimensionChangeListeners()}get _width(){return this._optionsService.options.overviewRulerWidth||0}_registerDecorationListeners(){this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh(void 0,!0)))),this.register(this._decorationService.onDecorationRemoved((()=>this._queueRefresh(void 0,!0))))}_registerBufferChangeListeners(){this.register(this._renderService.onRenderedViewportChange((()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._canvas.style.display=this._bufferService.buffer===this._bufferService.buffers.alt?"none":"block"}))),this.register(this._bufferService.onScroll((()=>{this._lastKnownBufferLength!==this._bufferService.buffers.normal.lines.length&&(this._refreshDrawHeightConstants(),this._refreshColorZonePadding())})))}_registerDimensionChangeListeners(){this.register(this._renderService.onRender((()=>{this._containerHeight&&this._containerHeight===this._screenElement.clientHeight||(this._queueRefresh(!0),this._containerHeight=this._screenElement.clientHeight)}))),this.register(this._optionsService.onOptionChange((e=>{"overviewRulerWidth"===e&&this._queueRefresh(!0)}))),this.register((0,o.addDisposableDomListener)(this._coreBrowseService.window,"resize",(()=>{this._queueRefresh(!0)}))),this._queueRefresh(!0)}dispose(){var e;null===(e=this._canvas)||void 0===e||e.remove(),super.dispose()}_refreshDrawConstants(){const e=Math.floor(this._canvas.width/3),t=Math.ceil(this._canvas.width/3);h.full=this._canvas.width,h.left=e,h.center=t,h.right=e,this._refreshDrawHeightConstants(),d.full=0,d.left=0,d.center=h.left,d.right=h.left+h.center}_refreshDrawHeightConstants(){u.full=Math.round(2*this._coreBrowseService.dpr);const e=this._canvas.height/this._bufferService.buffer.lines.length,t=Math.round(Math.max(Math.min(e,12),6)*this._coreBrowseService.dpr);u.left=t,u.center=t,u.right=t}_refreshColorZonePadding(){this._colorZoneStore.setPadding({full:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.full),left:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.left),center:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.center),right:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.right)}),this._lastKnownBufferLength=this._bufferService.buffers.normal.lines.length}_refreshCanvasDimensions(){this._canvas.style.width=`${this._width}px`,this._canvas.width=Math.round(this._width*this._coreBrowseService.dpr),this._canvas.style.height=`${this._screenElement.clientHeight}px`,this._canvas.height=Math.round(this._screenElement.clientHeight*this._coreBrowseService.dpr),this._refreshDrawConstants(),this._refreshColorZonePadding()}_refreshDecorations(){this._shouldUpdateDimensions&&this._refreshCanvasDimensions(),this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height),this._colorZoneStore.clear();for(const e of this._decorationService.decorations)this._colorZoneStore.addDecoration(e);this._ctx.lineWidth=1;const e=this._colorZoneStore.zones;for(const t of e)"full"!==t.position&&this._renderColorZone(t);for(const t of e)"full"===t.position&&this._renderColorZone(t);this._shouldUpdateDimensions=!1,this._shouldUpdateAnchor=!1}_renderColorZone(e){this._ctx.fillStyle=e.color,this._ctx.fillRect(d[e.position||"full"],Math.round((this._canvas.height-1)*(e.startBufferLine/this._bufferService.buffers.active.lines.length)-u[e.position||"full"]/2),h[e.position||"full"],Math.round((this._canvas.height-1)*((e.endBufferLine-e.startBufferLine)/this._bufferService.buffers.active.lines.length)+u[e.position||"full"]))}_queueRefresh(e,t){this._shouldUpdateDimensions=e||this._shouldUpdateDimensions,this._shouldUpdateAnchor=t||this._shouldUpdateAnchor,void 0===this._animationFrame&&(this._animationFrame=this._coreBrowseService.window.requestAnimationFrame((()=>{this._refreshDecorations(),this._animationFrame=void 0})))}};f=i([n(2,c.IBufferService),n(3,c.IDecorationService),n(4,a.IRenderService),n(5,c.IOptionsService),n(6,a.ICoreBrowserService)],f),t.OverviewRulerRenderer=f},2950:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CompositionHelper=void 0;const s=r(4725),o=r(2585),a=r(2584);let l=class{constructor(e,t,r,i,n,s){this._textarea=e,this._compositionView=t,this._bufferService=r,this._optionsService=i,this._coreService=n,this._renderService=s,this._isComposing=!1,this._isSendingComposition=!1,this._compositionPosition={start:0,end:0},this._dataAlreadySent=""}get isComposing(){return this._isComposing}compositionstart(){this._isComposing=!0,this._compositionPosition.start=this._textarea.value.length,this._compositionView.textContent="",this._dataAlreadySent="",this._compositionView.classList.add("active")}compositionupdate(e){this._compositionView.textContent=e.data,this.updateCompositionElements(),setTimeout((()=>{this._compositionPosition.end=this._textarea.value.length}),0)}compositionend(){this._finalizeComposition(!0)}keydown(e){if(this._isComposing||this._isSendingComposition){if(229===e.keyCode)return!1;if(16===e.keyCode||17===e.keyCode||18===e.keyCode)return!1;this._finalizeComposition(!1)}return 229!==e.keyCode||(this._handleAnyTextareaChanges(),!1)}_finalizeComposition(e){if(this._compositionView.classList.remove("active"),this._isComposing=!1,e){const e={start:this._compositionPosition.start,end:this._compositionPosition.end};this._isSendingComposition=!0,setTimeout((()=>{if(this._isSendingComposition){let t;this._isSendingComposition=!1,e.start+=this._dataAlreadySent.length,t=this._isComposing?this._textarea.value.substring(e.start,e.end):this._textarea.value.substring(e.start),t.length>0&&this._coreService.triggerDataEvent(t,!0)}}),0)}else{this._isSendingComposition=!1;const e=this._textarea.value.substring(this._compositionPosition.start,this._compositionPosition.end);this._coreService.triggerDataEvent(e,!0)}}_handleAnyTextareaChanges(){const e=this._textarea.value;setTimeout((()=>{if(!this._isComposing){const t=this._textarea.value,r=t.replace(e,"");this._dataAlreadySent=r,t.length>e.length?this._coreService.triggerDataEvent(r,!0):t.length<e.length?this._coreService.triggerDataEvent(`${a.C0.DEL}`,!0):t.length===e.length&&t!==e&&this._coreService.triggerDataEvent(t,!0)}}),0)}updateCompositionElements(e){if(this._isComposing){if(this._bufferService.buffer.isCursorInViewport){const e=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),t=this._renderService.dimensions.actualCellHeight,r=this._bufferService.buffer.y*this._renderService.dimensions.actualCellHeight,i=e*this._renderService.dimensions.actualCellWidth;this._compositionView.style.left=i+"px",this._compositionView.style.top=r+"px",this._compositionView.style.height=t+"px",this._compositionView.style.lineHeight=t+"px",this._compositionView.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._compositionView.style.fontSize=this._optionsService.rawOptions.fontSize+"px";const n=this._compositionView.getBoundingClientRect();this._textarea.style.left=i+"px",this._textarea.style.top=r+"px",this._textarea.style.width=Math.max(n.width,1)+"px",this._textarea.style.height=Math.max(n.height,1)+"px",this._textarea.style.lineHeight=n.height+"px"}e||setTimeout((()=>this.updateCompositionElements(!0)),0)}}};l=i([n(2,o.IBufferService),n(3,o.IOptionsService),n(4,o.ICoreService),n(5,s.IRenderService)],l),t.CompositionHelper=l},9806:(e,t)=>{function r(e,t,r){const i=r.getBoundingClientRect(),n=e.getComputedStyle(r),s=parseInt(n.getPropertyValue("padding-left")),o=parseInt(n.getPropertyValue("padding-top"));return[t.clientX-i.left-s,t.clientY-i.top-o]}Object.defineProperty(t,"__esModule",{value:!0}),t.getCoords=t.getCoordsRelativeToElement=void 0,t.getCoordsRelativeToElement=r,t.getCoords=function(e,t,i,n,s,o,a,l,c){if(!o)return;const u=r(e,t,i);return u?(u[0]=Math.ceil((u[0]+(c?a/2:0))/a),u[1]=Math.ceil(u[1]/l),u[0]=Math.min(Math.max(u[0],1),n+(c?1:0)),u[1]=Math.min(Math.max(u[1],1),s),u):void 0}},9504:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.moveToCellSequence=void 0;const i=r(2584);function n(e,t,r,i){const n=e-s(r,e),a=t-s(r,t),u=Math.abs(n-a)-function(e,t,r){let i=0;const n=e-s(r,e),a=t-s(r,t);for(let s=0;s<Math.abs(n-a);s++){const a="A"===o(e,t)?-1:1,l=r.buffer.lines.get(n+a*s);(null==l?void 0:l.isWrapped)&&i++}return i}(e,t,r);return c(u,l(o(e,t),i))}function s(e,t){let r=0,i=e.buffer.lines.get(t),n=null==i?void 0:i.isWrapped;for(;n&&t>=0&&t<e.rows;)r++,i=e.buffer.lines.get(--t),n=null==i?void 0:i.isWrapped;return r}function o(e,t){return e>t?"A":"B"}function a(e,t,r,i,n,s){let o=e,a=t,l="";for(;o!==r||a!==i;)o+=n?1:-1,n&&o>s.cols-1?(l+=s.buffer.translateBufferLineToString(a,!1,e,o),o=0,e=0,a++):!n&&o<0&&(l+=s.buffer.translateBufferLineToString(a,!1,0,e+1),o=s.cols-1,e=o,a--);return l+s.buffer.translateBufferLineToString(a,!1,e,o)}function l(e,t){const r=t?"O":"[";return i.C0.ESC+r+e}function c(e,t){e=Math.floor(e);let r="";for(let i=0;i<e;i++)r+=t;return r}t.moveToCellSequence=function(e,t,r,i){const o=r.buffer.x,u=r.buffer.y;if(!r.buffer.hasScrollback)return function(e,t,r,i,o,u){return 0===n(t,i,o,u).length?"":c(a(e,t,e,t-s(o,t),!1,o).length,l("D",u))}(o,u,0,t,r,i)+n(u,t,r,i)+function(e,t,r,i,o,u){let h;h=n(t,i,o,u).length>0?i-s(o,i):t;const d=i,f=function(e,t,r,i,o,a){let l;return l=n(r,i,o,a).length>0?i-s(o,i):t,e<r&&l<=i||e>=r&&l<i?"C":"D"}(e,t,r,i,o,u);return c(a(e,h,r,d,"C"===f,o).length,l(f,u))}(o,u,e,t,r,i);let h;if(u===t)return h=o>e?"D":"C",c(Math.abs(o-e),l(h,i));h=u>t?"D":"C";const d=Math.abs(u-t);return c(function(e,t){return t.cols-e}(u>t?e:o,r)+(d-1)*r.cols+1+((u>t?o:e)-1),l(h,i))}},8036:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TEXT_BASELINE=t.DIM_OPACITY=t.INVERTED_DEFAULT_COLOR=void 0;const i=r(6114);t.INVERTED_DEFAULT_COLOR=257,t.DIM_OPACITY=.5,t.TEXT_BASELINE=i.isFirefox||i.isLegacyEdge?"bottom":"ideographic"},1752:(e,t)=>{function r(e){return 57508<=e&&e<=57558}Object.defineProperty(t,"__esModule",{value:!0}),t.excludeFromContrastRatioDemands=t.isRestrictedPowerlineGlyph=t.isPowerlineGlyph=t.throwIfFalsy=void 0,t.throwIfFalsy=function(e){if(!e)throw new Error("value must not be falsy");return e},t.isPowerlineGlyph=r,t.isRestrictedPowerlineGlyph=function(e){return 57520<=e&&e<=57527},t.excludeFromContrastRatioDemands=function(e){return r(e)||function(e){return 9472<=e&&e<=9631}(e)}},1296:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomRenderer=void 0;const s=r(3787),o=r(8036),a=r(844),l=r(4725),c=r(2585),u=r(8460),h=r(8055),d=r(9631),f="xterm-dom-renderer-owner-",p="xterm-focus";let v=1,g=class extends a.Disposable{constructor(e,t,r,i,n,o,a,l,c,u){super(),this._colors=e,this._element=t,this._screenElement=r,this._viewportElement=i,this._linkifier2=n,this._charSizeService=a,this._optionsService=l,this._bufferService=c,this._coreBrowserService=u,this._terminalClass=v++,this._rowElements=[],this._rowContainer=document.createElement("div"),this._rowContainer.classList.add("xterm-rows"),this._rowContainer.style.lineHeight="normal",this._rowContainer.setAttribute("aria-hidden","true"),this._refreshRowElements(this._bufferService.cols,this._bufferService.rows),this._selectionContainer=document.createElement("div"),this._selectionContainer.classList.add("xterm-selection"),this._selectionContainer.setAttribute("aria-hidden","true"),this.dimensions={scaledCharWidth:0,scaledCharHeight:0,scaledCellWidth:0,scaledCellHeight:0,scaledCharLeft:0,scaledCharTop:0,scaledCanvasWidth:0,scaledCanvasHeight:0,canvasWidth:0,canvasHeight:0,actualCellWidth:0,actualCellHeight:0},this._updateDimensions(),this._injectCss(),this._rowFactory=o.createInstance(s.DomRendererRowFactory,document,this._colors),this._element.classList.add(f+this._terminalClass),this._screenElement.appendChild(this._rowContainer),this._screenElement.appendChild(this._selectionContainer),this.register(this._linkifier2.onShowLinkUnderline((e=>this._onLinkHover(e)))),this.register(this._linkifier2.onHideLinkUnderline((e=>this._onLinkLeave(e))))}get onRequestRedraw(){return(new u.EventEmitter).event}dispose(){this._element.classList.remove(f+this._terminalClass),(0,d.removeElementFromParent)(this._rowContainer,this._selectionContainer,this._themeStyleElement,this._dimensionsStyleElement),super.dispose()}_updateDimensions(){const e=this._coreBrowserService.dpr;this.dimensions.scaledCharWidth=this._charSizeService.width*e,this.dimensions.scaledCharHeight=Math.ceil(this._charSizeService.height*e),this.dimensions.scaledCellWidth=this.dimensions.scaledCharWidth+Math.round(this._optionsService.rawOptions.letterSpacing),this.dimensions.scaledCellHeight=Math.floor(this.dimensions.scaledCharHeight*this._optionsService.rawOptions.lineHeight),this.dimensions.scaledCharLeft=0,this.dimensions.scaledCharTop=0,this.dimensions.scaledCanvasWidth=this.dimensions.scaledCellWidth*this._bufferService.cols,this.dimensions.scaledCanvasHeight=this.dimensions.scaledCellHeight*this._bufferService.rows,this.dimensions.canvasWidth=Math.round(this.dimensions.scaledCanvasWidth/e),this.dimensions.canvasHeight=Math.round(this.dimensions.scaledCanvasHeight/e),this.dimensions.actualCellWidth=this.dimensions.canvasWidth/this._bufferService.cols,this.dimensions.actualCellHeight=this.dimensions.canvasHeight/this._bufferService.rows;for(const e of this._rowElements)e.style.width=`${this.dimensions.canvasWidth}px`,e.style.height=`${this.dimensions.actualCellHeight}px`,e.style.lineHeight=`${this.dimensions.actualCellHeight}px`,e.style.overflow="hidden";this._dimensionsStyleElement||(this._dimensionsStyleElement=document.createElement("style"),this._screenElement.appendChild(this._dimensionsStyleElement));const t=`${this._terminalSelector} .xterm-rows span { display: inline-block; height: 100%; vertical-align: top; width: ${this.dimensions.actualCellWidth}px}`;this._dimensionsStyleElement.textContent=t,this._selectionContainer.style.height=this._viewportElement.style.height,this._screenElement.style.width=`${this.dimensions.canvasWidth}px`,this._screenElement.style.height=`${this.dimensions.canvasHeight}px`}setColors(e){this._colors=e,this._injectCss()}_injectCss(){this._themeStyleElement||(this._themeStyleElement=document.createElement("style"),this._screenElement.appendChild(this._themeStyleElement));let e=`${this._terminalSelector} .xterm-rows { color: ${this._colors.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px;}`;e+=`${this._terminalSelector} span:not(.${s.BOLD_CLASS}) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.${s.BOLD_CLASS} { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.${s.ITALIC_CLASS} { font-style: italic;}`,e+="@keyframes blink_box_shadow_"+this._terminalClass+" { 50% {  box-shadow: none; }}",e+="@keyframes blink_block_"+this._terminalClass+" { 0% {"+`  background-color: ${this._colors.cursor.css};`+`  color: ${this._colors.cursorAccent.css}; } 50% {`+`  background-color: ${this._colors.cursorAccent.css};`+`  color: ${this._colors.cursor.css}; }}`,e+=`${this._terminalSelector} .xterm-rows:not(.xterm-focus) .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_BLOCK_CLASS} { outline: 1px solid ${this._colors.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .xterm-rows.xterm-focus .${s.CURSOR_CLASS}.${s.CURSOR_BLINK_CLASS}:not(.${s.CURSOR_STYLE_BLOCK_CLASS}) { animation: blink_box_shadow_`+this._terminalClass+" 1s step-end infinite;}"+`${this._terminalSelector} .xterm-rows.xterm-focus .${s.CURSOR_CLASS}.${s.CURSOR_BLINK_CLASS}.${s.CURSOR_STYLE_BLOCK_CLASS} { animation: blink_block_`+this._terminalClass+" 1s step-end infinite;}"+`${this._terminalSelector} .xterm-rows.xterm-focus .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_BLOCK_CLASS} {`+` background-color: ${this._colors.cursor.css};`+` color: ${this._colors.cursorAccent.css};}`+`${this._terminalSelector} .xterm-rows .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_BAR_CLASS} {`+` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;}`+`${this._terminalSelector} .xterm-rows .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_UNDERLINE_CLASS} {`+` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;}`,e+=`${this._terminalSelector} .xterm-selection { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .xterm-selection div { position: absolute; background-color: ${this._colors.selectionBackgroundOpaque.css};}${this._terminalSelector} .xterm-selection div { position: absolute; background-color: ${this._colors.selectionInactiveBackgroundOpaque.css};}`,this._colors.ansi.forEach(((t,r)=>{e+=`${this._terminalSelector} .xterm-fg-${r} { color: ${t.css}; }${this._terminalSelector} .xterm-bg-${r} { background-color: ${t.css}; }`})),e+=`${this._terminalSelector} .xterm-fg-${o.INVERTED_DEFAULT_COLOR} { color: ${h.color.opaque(this._colors.background).css}; }${this._terminalSelector} .xterm-bg-${o.INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`,this._themeStyleElement.textContent=e}onDevicePixelRatioChange(){this._updateDimensions()}_refreshRowElements(e,t){for(let e=this._rowElements.length;e<=t;e++){const e=document.createElement("div");this._rowContainer.appendChild(e),this._rowElements.push(e)}for(;this._rowElements.length>t;)this._rowContainer.removeChild(this._rowElements.pop())}onResize(e,t){this._refreshRowElements(e,t),this._updateDimensions()}onCharSizeChanged(){this._updateDimensions()}onBlur(){this._rowContainer.classList.remove(p)}onFocus(){this._rowContainer.classList.add(p)}onSelectionChanged(e,t,r){for(;this._selectionContainer.children.length;)this._selectionContainer.removeChild(this._selectionContainer.children[0]);if(this._rowFactory.onSelectionChanged(e,t,r),this.renderRows(0,this._bufferService.rows-1),!e||!t)return;const i=e[1]-this._bufferService.buffer.ydisp,n=t[1]-this._bufferService.buffer.ydisp,s=Math.max(i,0),o=Math.min(n,this._bufferService.rows-1);if(s>=this._bufferService.rows||o<0)return;const a=document.createDocumentFragment();if(r){const r=e[0]>t[0];a.appendChild(this._createSelectionElement(s,r?t[0]:e[0],r?e[0]:t[0],o-s+1))}else{const r=i===s?e[0]:0,l=s===n?t[0]:this._bufferService.cols;a.appendChild(this._createSelectionElement(s,r,l));const c=o-s-1;if(a.appendChild(this._createSelectionElement(s+1,0,this._bufferService.cols,c)),s!==o){const e=n===o?t[0]:this._bufferService.cols;a.appendChild(this._createSelectionElement(o,0,e))}}this._selectionContainer.appendChild(a)}_createSelectionElement(e,t,r,i=1){const n=document.createElement("div");return n.style.height=i*this.dimensions.actualCellHeight+"px",n.style.top=e*this.dimensions.actualCellHeight+"px",n.style.left=t*this.dimensions.actualCellWidth+"px",n.style.width=this.dimensions.actualCellWidth*(r-t)+"px",n}onCursorMove(){}onOptionsChanged(){this._updateDimensions(),this._injectCss()}clear(){for(const e of this._rowElements)e.innerText=""}renderRows(e,t){const r=this._bufferService.buffer.ybase+this._bufferService.buffer.y,i=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),n=this._optionsService.rawOptions.cursorBlink;for(let s=e;s<=t;s++){const e=this._rowElements[s];e.innerText="";const t=s+this._bufferService.buffer.ydisp,o=this._bufferService.buffer.lines.get(t),a=this._optionsService.rawOptions.cursorStyle;e.appendChild(this._rowFactory.createRow(o,t,t===r,a,i,n,this.dimensions.actualCellWidth,this._bufferService.cols))}}get _terminalSelector(){return`.${f}${this._terminalClass}`}_onLinkHover(e){this._setCellUnderline(e.x1,e.x2,e.y1,e.y2,e.cols,!0)}_onLinkLeave(e){this._setCellUnderline(e.x1,e.x2,e.y1,e.y2,e.cols,!1)}_setCellUnderline(e,t,r,i,n,s){for(;e!==t||r!==i;){const t=this._rowElements[r];if(!t)return;const i=t.children[e];i&&(i.style.textDecoration=s?"underline":"none"),++e>=n&&(e=0,r++)}}};g=i([n(5,c.IInstantiationService),n(6,l.ICharSizeService),n(7,c.IOptionsService),n(8,c.IBufferService),n(9,l.ICoreBrowserService)],g),t.DomRenderer=g},3787:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomRendererRowFactory=t.CURSOR_STYLE_UNDERLINE_CLASS=t.CURSOR_STYLE_BAR_CLASS=t.CURSOR_STYLE_BLOCK_CLASS=t.CURSOR_BLINK_CLASS=t.CURSOR_CLASS=t.STRIKETHROUGH_CLASS=t.UNDERLINE_CLASS=t.ITALIC_CLASS=t.DIM_CLASS=t.BOLD_CLASS=void 0;const s=r(8036),o=r(643),a=r(511),l=r(2585),c=r(8055),u=r(4725),h=r(4269),d=r(1752),f=r(3734);t.BOLD_CLASS="xterm-bold",t.DIM_CLASS="xterm-dim",t.ITALIC_CLASS="xterm-italic",t.UNDERLINE_CLASS="xterm-underline",t.STRIKETHROUGH_CLASS="xterm-strikethrough",t.CURSOR_CLASS="xterm-cursor",t.CURSOR_BLINK_CLASS="xterm-cursor-blink",t.CURSOR_STYLE_BLOCK_CLASS="xterm-cursor-block",t.CURSOR_STYLE_BAR_CLASS="xterm-cursor-bar",t.CURSOR_STYLE_UNDERLINE_CLASS="xterm-cursor-underline";let p=class{constructor(e,t,r,i,n,s,o){this._document=e,this._colors=t,this._characterJoinerService=r,this._optionsService=i,this._coreBrowserService=n,this._coreService=s,this._decorationService=o,this._workCell=new a.CellData,this._columnSelectMode=!1}setColors(e){this._colors=e}onSelectionChanged(e,t,r){this._selectionStart=e,this._selectionEnd=t,this._columnSelectMode=r}createRow(e,r,i,n,a,l,u,d){const p=this._document.createDocumentFragment(),g=this._characterJoinerService.getJoinedCharacters(r);let _=0;for(let t=Math.min(e.length,d)-1;t>=0;t--)if(e.loadCell(t,this._workCell).getCode()!==o.NULL_CELL_CODE||i&&t===a){_=t+1;break}for(let d=0;d<_;d++){e.loadCell(d,this._workCell);let _=this._workCell.getWidth();if(0===_)continue;let m=!1,b=d,y=this._workCell;if(g.length>0&&d===g[0][0]){m=!0;const t=g.shift();y=new h.JoinedCellData(this._workCell,e.translateToString(!0,t[0],t[1]),t[1]-t[0]),b=t[1]-1,_=y.getWidth()}const S=this._document.createElement("span");if(_>1&&(S.style.width=u*_+"px"),m&&(S.style.display="inline",a>=d&&a<=b&&(a=d)),!this._coreService.isCursorHidden&&i&&d===a)switch(S.classList.add(t.CURSOR_CLASS),l&&S.classList.add(t.CURSOR_BLINK_CLASS),n){case"bar":S.classList.add(t.CURSOR_STYLE_BAR_CLASS);break;case"underline":S.classList.add(t.CURSOR_STYLE_UNDERLINE_CLASS);break;default:S.classList.add(t.CURSOR_STYLE_BLOCK_CLASS)}if(y.isBold()&&S.classList.add(t.BOLD_CLASS),y.isItalic()&&S.classList.add(t.ITALIC_CLASS),y.isDim()&&S.classList.add(t.DIM_CLASS),y.isInvisible()?S.textContent=o.WHITESPACE_CELL_CHAR:S.textContent=y.getChars()||o.WHITESPACE_CELL_CHAR,y.isUnderline()&&(S.classList.add(`${t.UNDERLINE_CLASS}-${y.extended.underlineStyle}`)," "===S.textContent&&(S.innerHTML="&nbsp;"),!y.isUnderlineColorDefault()))if(y.isUnderlineColorRGB())S.style.textDecorationColor=`rgb(${f.AttributeData.toColorRGB(y.getUnderlineColor()).join(",")})`;else{let e=y.getUnderlineColor();this._optionsService.rawOptions.drawBoldTextInBrightColors&&y.isBold()&&e<8&&(e+=8),S.style.textDecorationColor=this._colors.ansi[e].css}y.isStrikethrough()&&S.classList.add(t.STRIKETHROUGH_CLASS);let C=y.getFgColor(),w=y.getFgColorMode(),k=y.getBgColor(),E=y.getBgColorMode();const A=!!y.isInverse();if(A){const e=C;C=k,k=e;const t=w;w=E,E=t}let x,L,R=!1;this._decorationService.forEachDecorationAtCell(d,r,void 0,(e=>{"top"!==e.options.layer&&R||(e.backgroundColorRGB&&(E=50331648,k=e.backgroundColorRGB.rgba>>8&16777215,x=e.backgroundColorRGB),e.foregroundColorRGB&&(w=50331648,C=e.foregroundColorRGB.rgba>>8&16777215,L=e.foregroundColorRGB),R="top"===e.options.layer)}));const T=this._isCellInSelection(d,r);let D;switch(R||this._colors.selectionForeground&&T&&(w=50331648,C=this._colors.selectionForeground.rgba>>8&16777215,L=this._colors.selectionForeground),T&&(x=this._coreBrowserService.isFocused?this._colors.selectionBackgroundOpaque:this._colors.selectionInactiveBackgroundOpaque,R=!0),R&&S.classList.add("xterm-decoration-top"),E){case 16777216:case 33554432:D=this._colors.ansi[k],S.classList.add(`xterm-bg-${k}`);break;case 50331648:D=c.rgba.toColor(k>>16,k>>8&255,255&k),this._addStyle(S,`background-color:#${v((k>>>0).toString(16),"0",6)}`);break;default:A?(D=this._colors.foreground,S.classList.add(`xterm-bg-${s.INVERTED_DEFAULT_COLOR}`)):D=this._colors.background}switch(x||y.isDim()&&(x=c.color.multiplyOpacity(D,.5)),w){case 16777216:case 33554432:y.isBold()&&C<8&&this._optionsService.rawOptions.drawBoldTextInBrightColors&&(C+=8),this._applyMinimumContrast(S,D,this._colors.ansi[C],y,x,void 0)||S.classList.add(`xterm-fg-${C}`);break;case 50331648:const e=c.rgba.toColor(C>>16&255,C>>8&255,255&C);this._applyMinimumContrast(S,D,e,y,x,L)||this._addStyle(S,`color:#${v(C.toString(16),"0",6)}`);break;default:this._applyMinimumContrast(S,D,this._colors.foreground,y,x,void 0)||A&&S.classList.add(`xterm-fg-${s.INVERTED_DEFAULT_COLOR}`)}p.appendChild(S),d=b}return p}_applyMinimumContrast(e,t,r,i,n,s){if(1===this._optionsService.rawOptions.minimumContrastRatio||(0,d.excludeFromContrastRatioDemands)(i.getCode()))return!1;let o;return n||s||(o=this._colors.contrastCache.getColor(t.rgba,r.rgba)),void 0===o&&(o=c.color.ensureContrastRatio(n||t,s||r,this._optionsService.rawOptions.minimumContrastRatio),this._colors.contrastCache.setColor((n||t).rgba,(s||r).rgba,null!=o?o:null)),!!o&&(this._addStyle(e,`color:${o.css}`),!0)}_addStyle(e,t){e.setAttribute("style",`${e.getAttribute("style")||""}${t};`)}_isCellInSelection(e,t){const r=this._selectionStart,i=this._selectionEnd;return!(!r||!i)&&(this._columnSelectMode?r[0]<=i[0]?e>=r[0]&&t>=r[1]&&e<i[0]&&t<=i[1]:e<r[0]&&t>=r[1]&&e>=i[0]&&t<=i[1]:t>r[1]&&t<i[1]||r[1]===i[1]&&t===r[1]&&e>=r[0]&&e<i[0]||r[1]<i[1]&&t===i[1]&&e<i[0]||r[1]<i[1]&&t===r[1]&&e>=r[0])}};function v(e,t,r){for(;e.length<r;)e=t+e;return e}p=i([n(2,u.ICharacterJoinerService),n(3,l.IOptionsService),n(4,u.ICoreBrowserService),n(5,l.ICoreService),n(6,l.IDecorationService)],p),t.DomRendererRowFactory=p},456:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionModel=void 0,t.SelectionModel=class{constructor(e){this._bufferService=e,this.isSelectAllActive=!1,this.selectionStartLength=0}clearSelection(){this.selectionStart=void 0,this.selectionEnd=void 0,this.isSelectAllActive=!1,this.selectionStartLength=0}get finalSelectionStart(){return this.isSelectAllActive?[0,0]:this.selectionEnd&&this.selectionStart&&this.areSelectionValuesReversed()?this.selectionEnd:this.selectionStart}get finalSelectionEnd(){if(this.isSelectAllActive)return[this._bufferService.cols,this._bufferService.buffer.ybase+this._bufferService.rows-1];if(this.selectionStart){if(!this.selectionEnd||this.areSelectionValuesReversed()){const e=this.selectionStart[0]+this.selectionStartLength;return e>this._bufferService.cols?e%this._bufferService.cols==0?[this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)-1]:[e%this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)]:[e,this.selectionStart[1]]}if(this.selectionStartLength&&this.selectionEnd[1]===this.selectionStart[1]){const e=this.selectionStart[0]+this.selectionStartLength;return e>this._bufferService.cols?[e%this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)]:[Math.max(e,this.selectionEnd[0]),this.selectionEnd[1]]}return this.selectionEnd}}areSelectionValuesReversed(){const e=this.selectionStart,t=this.selectionEnd;return!(!e||!t)&&(e[1]>t[1]||e[1]===t[1]&&e[0]>t[0])}onTrim(e){return this.selectionStart&&(this.selectionStart[1]-=e),this.selectionEnd&&(this.selectionEnd[1]-=e),this.selectionEnd&&this.selectionEnd[1]<0?(this.clearSelection(),!0):(this.selectionStart&&this.selectionStart[1]<0&&(this.selectionStart[1]=0),!1)}}},428:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CharSizeService=void 0;const s=r(2585),o=r(8460);let a=class{constructor(e,t,r){this._optionsService=r,this.width=0,this.height=0,this._onCharSizeChange=new o.EventEmitter,this._measureStrategy=new l(e,t,this._optionsService)}get hasValidSize(){return this.width>0&&this.height>0}get onCharSizeChange(){return this._onCharSizeChange.event}measure(){const e=this._measureStrategy.measure();e.width===this.width&&e.height===this.height||(this.width=e.width,this.height=e.height,this._onCharSizeChange.fire())}};a=i([n(2,s.IOptionsService)],a),t.CharSizeService=a;class l{constructor(e,t,r){this._document=e,this._parentElement=t,this._optionsService=r,this._result={width:0,height:0},this._measureElement=this._document.createElement("span"),this._measureElement.classList.add("xterm-char-measure-element"),this._measureElement.textContent="W",this._measureElement.setAttribute("aria-hidden","true"),this._parentElement.appendChild(this._measureElement)}measure(){this._measureElement.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._measureElement.style.fontSize=`${this._optionsService.rawOptions.fontSize}px`;const e=this._measureElement.getBoundingClientRect();return 0!==e.width&&0!==e.height&&(this._result.width=e.width,this._result.height=Math.ceil(e.height)),this._result}}},4269:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CharacterJoinerService=t.JoinedCellData=void 0;const s=r(3734),o=r(643),a=r(511),l=r(2585);class c extends s.AttributeData{constructor(e,t,r){super(),this.content=0,this.combinedData="",this.fg=e.fg,this.bg=e.bg,this.combinedData=t,this._width=r}isCombined(){return 2097152}getWidth(){return this._width}getChars(){return this.combinedData}getCode(){return 2097151}setFromCharData(e){throw new Error("not implemented")}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}t.JoinedCellData=c;let u=class e{constructor(e){this._bufferService=e,this._characterJoiners=[],this._nextCharacterJoinerId=0,this._workCell=new a.CellData}register(e){const t={id:this._nextCharacterJoinerId++,handler:e};return this._characterJoiners.push(t),t.id}deregister(e){for(let t=0;t<this._characterJoiners.length;t++)if(this._characterJoiners[t].id===e)return this._characterJoiners.splice(t,1),!0;return!1}getJoinedCharacters(e){if(0===this._characterJoiners.length)return[];const t=this._bufferService.buffer.lines.get(e);if(!t||0===t.length)return[];const r=[],i=t.translateToString(!0);let n=0,s=0,a=0,l=t.getFg(0),c=t.getBg(0);for(let e=0;e<t.getTrimmedLength();e++)if(t.loadCell(e,this._workCell),0!==this._workCell.getWidth()){if(this._workCell.fg!==l||this._workCell.bg!==c){if(e-n>1){const e=this._getJoinedRanges(i,a,s,t,n);for(let t=0;t<e.length;t++)r.push(e[t])}n=e,a=s,l=this._workCell.fg,c=this._workCell.bg}s+=this._workCell.getChars().length||o.WHITESPACE_CELL_CHAR.length}if(this._bufferService.cols-n>1){const e=this._getJoinedRanges(i,a,s,t,n);for(let t=0;t<e.length;t++)r.push(e[t])}return r}_getJoinedRanges(t,r,i,n,s){const o=t.substring(r,i);let a=[];try{a=this._characterJoiners[0].handler(o)}catch(e){console.error(e)}for(let t=1;t<this._characterJoiners.length;t++)try{const r=this._characterJoiners[t].handler(o);for(let t=0;t<r.length;t++)e._mergeRanges(a,r[t])}catch(e){console.error(e)}return this._stringRangesToCellRanges(a,n,s),a}_stringRangesToCellRanges(e,t,r){let i=0,n=!1,s=0,a=e[i];if(a){for(let l=r;l<this._bufferService.cols;l++){const r=t.getWidth(l),c=t.getString(l).length||o.WHITESPACE_CELL_CHAR.length;if(0!==r){if(!n&&a[0]<=s&&(a[0]=l,n=!0),a[1]<=s){if(a[1]=l,a=e[++i],!a)break;a[0]<=s?(a[0]=l,n=!0):n=!1}s+=c}}a&&(a[1]=this._bufferService.cols)}}static _mergeRanges(e,t){let r=!1;for(let i=0;i<e.length;i++){const n=e[i];if(r){if(t[1]<=n[0])return e[i-1][1]=t[1],e;if(t[1]<=n[1])return e[i-1][1]=Math.max(t[1],n[1]),e.splice(i,1),e;e.splice(i,1),i--}else{if(t[1]<=n[0])return e.splice(i,0,t),e;if(t[1]<=n[1])return n[0]=Math.min(t[0],n[0]),e;t[0]<n[1]&&(n[0]=Math.min(t[0],n[0]),r=!0)}}return r?e[e.length-1][1]=t[1]:e.push(t),e}};u=i([n(0,l.IBufferService)],u),t.CharacterJoinerService=u},5114:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreBrowserService=void 0,t.CoreBrowserService=class{constructor(e,t){this._textarea=e,this.window=t}get dpr(){return this.window.devicePixelRatio}get isFocused(){return(this._textarea.getRootNode?this._textarea.getRootNode():this._textarea.ownerDocument).activeElement===this._textarea&&this._textarea.ownerDocument.hasFocus()}}},8934:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.MouseService=void 0;const s=r(4725),o=r(9806);let a=class{constructor(e,t){this._renderService=e,this._charSizeService=t}getCoords(e,t,r,i,n){return(0,o.getCoords)(window,e,t,r,i,this._charSizeService.hasValidSize,this._renderService.dimensions.actualCellWidth,this._renderService.dimensions.actualCellHeight,n)}getMouseReportCoords(e,t){const r=(0,o.getCoordsRelativeToElement)(window,e,t);if(!(!this._charSizeService.hasValidSize||r[0]<0||r[1]<0||r[0]>=this._renderService.dimensions.canvasWidth||r[1]>=this._renderService.dimensions.canvasHeight))return{col:Math.floor(r[0]/this._renderService.dimensions.actualCellWidth),row:Math.floor(r[1]/this._renderService.dimensions.actualCellHeight),x:Math.floor(r[0]),y:Math.floor(r[1])}}};a=i([n(0,s.IRenderService),n(1,s.ICharSizeService)],a),t.MouseService=a},3230:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.RenderService=void 0;const s=r(6193),o=r(8460),a=r(844),l=r(5596),c=r(3656),u=r(2585),h=r(4725);let d=class extends a.Disposable{constructor(e,t,r,i,n,a,u,h){if(super(),this._renderer=e,this._rowCount=t,this._charSizeService=n,this._isPaused=!1,this._needsFullRefresh=!1,this._isNextRenderRedrawOnly=!0,this._needsSelectionRefresh=!1,this._canvasWidth=0,this._canvasHeight=0,this._selectionState={start:void 0,end:void 0,columnSelectMode:!1},this._onDimensionsChange=new o.EventEmitter,this._onRenderedViewportChange=new o.EventEmitter,this._onRender=new o.EventEmitter,this._onRefreshRequest=new o.EventEmitter,this.register({dispose:()=>this._renderer.dispose()}),this._renderDebouncer=new s.RenderDebouncer(h.window,((e,t)=>this._renderRows(e,t))),this.register(this._renderDebouncer),this._screenDprMonitor=new l.ScreenDprMonitor(h.window),this._screenDprMonitor.setListener((()=>this.onDevicePixelRatioChange())),this.register(this._screenDprMonitor),this.register(u.onResize((()=>this._fullRefresh()))),this.register(u.buffers.onBufferActivate((()=>{var e;return null===(e=this._renderer)||void 0===e?void 0:e.clear()}))),this.register(i.onOptionChange((()=>this._handleOptionsChanged()))),this.register(this._charSizeService.onCharSizeChange((()=>this.onCharSizeChanged()))),this.register(a.onDecorationRegistered((()=>this._fullRefresh()))),this.register(a.onDecorationRemoved((()=>this._fullRefresh()))),this._renderer.onRequestRedraw((e=>this.refreshRows(e.start,e.end,!0))),this.register((0,c.addDisposableDomListener)(h.window,"resize",(()=>this.onDevicePixelRatioChange()))),"IntersectionObserver"in h.window){const e=new h.window.IntersectionObserver((e=>this._onIntersectionChange(e[e.length-1])),{threshold:0});e.observe(r),this.register({dispose:()=>e.disconnect()})}}get onDimensionsChange(){return this._onDimensionsChange.event}get onRenderedViewportChange(){return this._onRenderedViewportChange.event}get onRender(){return this._onRender.event}get onRefreshRequest(){return this._onRefreshRequest.event}get dimensions(){return this._renderer.dimensions}_onIntersectionChange(e){this._isPaused=void 0===e.isIntersecting?0===e.intersectionRatio:!e.isIntersecting,this._isPaused||this._charSizeService.hasValidSize||this._charSizeService.measure(),!this._isPaused&&this._needsFullRefresh&&(this.refreshRows(0,this._rowCount-1),this._needsFullRefresh=!1)}refreshRows(e,t,r=!1){this._isPaused?this._needsFullRefresh=!0:(r||(this._isNextRenderRedrawOnly=!1),this._renderDebouncer.refresh(e,t,this._rowCount))}_renderRows(e,t){this._renderer.renderRows(e,t),this._needsSelectionRefresh&&(this._renderer.onSelectionChanged(this._selectionState.start,this._selectionState.end,this._selectionState.columnSelectMode),this._needsSelectionRefresh=!1),this._isNextRenderRedrawOnly||this._onRenderedViewportChange.fire({start:e,end:t}),this._onRender.fire({start:e,end:t}),this._isNextRenderRedrawOnly=!0}resize(e,t){this._rowCount=t,this._fireOnCanvasResize()}_handleOptionsChanged(){this._renderer.onOptionsChanged(),this.refreshRows(0,this._rowCount-1),this._fireOnCanvasResize()}_fireOnCanvasResize(){this._renderer.dimensions.canvasWidth===this._canvasWidth&&this._renderer.dimensions.canvasHeight===this._canvasHeight||this._onDimensionsChange.fire(this._renderer.dimensions)}dispose(){super.dispose()}setRenderer(e){this._renderer.dispose(),this._renderer=e,this._renderer.onRequestRedraw((e=>this.refreshRows(e.start,e.end,!0))),this._needsSelectionRefresh=!0,this._fullRefresh()}addRefreshCallback(e){return this._renderDebouncer.addRefreshCallback(e)}_fullRefresh(){this._isPaused?this._needsFullRefresh=!0:this.refreshRows(0,this._rowCount-1)}clearTextureAtlas(){var e,t;null===(t=null===(e=this._renderer)||void 0===e?void 0:e.clearTextureAtlas)||void 0===t||t.call(e),this._fullRefresh()}setColors(e){this._renderer.setColors(e),this._fullRefresh()}onDevicePixelRatioChange(){this._charSizeService.measure(),this._renderer.onDevicePixelRatioChange(),this.refreshRows(0,this._rowCount-1)}onResize(e,t){this._renderer.onResize(e,t),this._fullRefresh()}onCharSizeChanged(){this._renderer.onCharSizeChanged()}onBlur(){this._renderer.onBlur()}onFocus(){this._renderer.onFocus()}onSelectionChanged(e,t,r){this._selectionState.start=e,this._selectionState.end=t,this._selectionState.columnSelectMode=r,this._renderer.onSelectionChanged(e,t,r)}onCursorMove(){this._renderer.onCursorMove()}clear(){this._renderer.clear()}};d=i([n(3,u.IOptionsService),n(4,h.ICharSizeService),n(5,u.IDecorationService),n(6,u.IBufferService),n(7,h.ICoreBrowserService)],d),t.RenderService=d},9312:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionService=void 0;const s=r(6114),o=r(456),a=r(511),l=r(8460),c=r(4725),u=r(2585),h=r(9806),d=r(9504),f=r(844),p=r(4841),v=String.fromCharCode(160),g=new RegExp(v,"g");let _=class extends f.Disposable{constructor(e,t,r,i,n,s,c,u,h){super(),this._element=e,this._screenElement=t,this._linkifier=r,this._bufferService=i,this._coreService=n,this._mouseService=s,this._optionsService=c,this._renderService=u,this._coreBrowserService=h,this._dragScrollAmount=0,this._enabled=!0,this._workCell=new a.CellData,this._mouseDownTimeStamp=0,this._oldHasSelection=!1,this._oldSelectionStart=void 0,this._oldSelectionEnd=void 0,this._onLinuxMouseSelection=this.register(new l.EventEmitter),this._onRedrawRequest=this.register(new l.EventEmitter),this._onSelectionChange=this.register(new l.EventEmitter),this._onRequestScrollLines=this.register(new l.EventEmitter),this._mouseMoveListener=e=>this._onMouseMove(e),this._mouseUpListener=e=>this._onMouseUp(e),this._coreService.onUserInput((()=>{this.hasSelection&&this.clearSelection()})),this._trimListener=this._bufferService.buffer.lines.onTrim((e=>this._onTrim(e))),this.register(this._bufferService.buffers.onBufferActivate((e=>this._onBufferActivate(e)))),this.enable(),this._model=new o.SelectionModel(this._bufferService),this._activeSelectionMode=0}get onLinuxMouseSelection(){return this._onLinuxMouseSelection.event}get onRequestRedraw(){return this._onRedrawRequest.event}get onSelectionChange(){return this._onSelectionChange.event}get onRequestScrollLines(){return this._onRequestScrollLines.event}dispose(){this._removeMouseDownListeners()}reset(){this.clearSelection()}disable(){this.clearSelection(),this._enabled=!1}enable(){this._enabled=!0}get selectionStart(){return this._model.finalSelectionStart}get selectionEnd(){return this._model.finalSelectionEnd}get hasSelection(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;return!(!e||!t||e[0]===t[0]&&e[1]===t[1])}get selectionText(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;if(!e||!t)return"";const r=this._bufferService.buffer,i=[];if(3===this._activeSelectionMode){if(e[0]===t[0])return"";const n=e[0]<t[0]?e[0]:t[0],s=e[0]<t[0]?t[0]:e[0];for(let o=e[1];o<=t[1];o++){const e=r.translateBufferLineToString(o,!0,n,s);i.push(e)}}else{const n=e[1]===t[1]?t[0]:void 0;i.push(r.translateBufferLineToString(e[1],!0,e[0],n));for(let n=e[1]+1;n<=t[1]-1;n++){const e=r.lines.get(n),t=r.translateBufferLineToString(n,!0);(null==e?void 0:e.isWrapped)?i[i.length-1]+=t:i.push(t)}if(e[1]!==t[1]){const e=r.lines.get(t[1]),n=r.translateBufferLineToString(t[1],!0,0,t[0]);e&&e.isWrapped?i[i.length-1]+=n:i.push(n)}}return i.map((e=>e.replace(g," "))).join(s.isWindows?"\r\n":"\n")}clearSelection(){this._model.clearSelection(),this._removeMouseDownListeners(),this.refresh(),this._onSelectionChange.fire()}refresh(e){this._refreshAnimationFrame||(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._refresh()))),s.isLinux&&e&&this.selectionText.length&&this._onLinuxMouseSelection.fire(this.selectionText)}_refresh(){this._refreshAnimationFrame=void 0,this._onRedrawRequest.fire({start:this._model.finalSelectionStart,end:this._model.finalSelectionEnd,columnSelectMode:3===this._activeSelectionMode})}_isClickInSelection(e){const t=this._getMouseBufferCoords(e),r=this._model.finalSelectionStart,i=this._model.finalSelectionEnd;return!!(r&&i&&t)&&this._areCoordsInSelection(t,r,i)}isCellInSelection(e,t){const r=this._model.finalSelectionStart,i=this._model.finalSelectionEnd;return!(!r||!i)&&this._areCoordsInSelection([e,t],r,i)}_areCoordsInSelection(e,t,r){return e[1]>t[1]&&e[1]<r[1]||t[1]===r[1]&&e[1]===t[1]&&e[0]>=t[0]&&e[0]<r[0]||t[1]<r[1]&&e[1]===r[1]&&e[0]<r[0]||t[1]<r[1]&&e[1]===t[1]&&e[0]>=t[0]}_selectWordAtCursor(e,t){var r,i;const n=null===(i=null===(r=this._linkifier.currentLink)||void 0===r?void 0:r.link)||void 0===i?void 0:i.range;if(n)return this._model.selectionStart=[n.start.x-1,n.start.y-1],this._model.selectionStartLength=(0,p.getRangeLength)(n,this._bufferService.cols),this._model.selectionEnd=void 0,!0;const s=this._getMouseBufferCoords(e);return!!s&&(this._selectWordAt(s,t),this._model.selectionEnd=void 0,!0)}selectAll(){this._model.isSelectAllActive=!0,this.refresh(),this._onSelectionChange.fire()}selectLines(e,t){this._model.clearSelection(),e=Math.max(e,0),t=Math.min(t,this._bufferService.buffer.lines.length-1),this._model.selectionStart=[0,e],this._model.selectionEnd=[this._bufferService.cols,t],this.refresh(),this._onSelectionChange.fire()}_onTrim(e){this._model.onTrim(e)&&this.refresh()}_getMouseBufferCoords(e){const t=this._mouseService.getCoords(e,this._screenElement,this._bufferService.cols,this._bufferService.rows,!0);if(t)return t[0]--,t[1]--,t[1]+=this._bufferService.buffer.ydisp,t}_getMouseEventScrollAmount(e){let t=(0,h.getCoordsRelativeToElement)(this._coreBrowserService.window,e,this._screenElement)[1];const r=this._renderService.dimensions.canvasHeight;return t>=0&&t<=r?0:(t>r&&(t-=r),t=Math.min(Math.max(t,-50),50),t/=50,t/Math.abs(t)+Math.round(14*t))}shouldForceSelection(e){return s.isMac?e.altKey&&this._optionsService.rawOptions.macOptionClickForcesSelection:e.shiftKey}onMouseDown(e){if(this._mouseDownTimeStamp=e.timeStamp,(2!==e.button||!this.hasSelection)&&0===e.button){if(!this._enabled){if(!this.shouldForceSelection(e))return;e.stopPropagation()}e.preventDefault(),this._dragScrollAmount=0,this._enabled&&e.shiftKey?this._onIncrementalClick(e):1===e.detail?this._onSingleClick(e):2===e.detail?this._onDoubleClick(e):3===e.detail&&this._onTripleClick(e),this._addMouseDownListeners(),this.refresh(!0)}}_addMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.addEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.addEventListener("mouseup",this._mouseUpListener)),this._dragScrollIntervalTimer=this._coreBrowserService.window.setInterval((()=>this._dragScroll()),50)}_removeMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.removeEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.removeEventListener("mouseup",this._mouseUpListener)),this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer),this._dragScrollIntervalTimer=void 0}_onIncrementalClick(e){this._model.selectionStart&&(this._model.selectionEnd=this._getMouseBufferCoords(e))}_onSingleClick(e){if(this._model.selectionStartLength=0,this._model.isSelectAllActive=!1,this._activeSelectionMode=this.shouldColumnSelect(e)?3:0,this._model.selectionStart=this._getMouseBufferCoords(e),!this._model.selectionStart)return;this._model.selectionEnd=void 0;const t=this._bufferService.buffer.lines.get(this._model.selectionStart[1]);t&&t.length!==this._model.selectionStart[0]&&0===t.hasWidth(this._model.selectionStart[0])&&this._model.selectionStart[0]++}_onDoubleClick(e){this._selectWordAtCursor(e,!0)&&(this._activeSelectionMode=1)}_onTripleClick(e){const t=this._getMouseBufferCoords(e);t&&(this._activeSelectionMode=2,this._selectLineAt(t[1]))}shouldColumnSelect(e){return e.altKey&&!(s.isMac&&this._optionsService.rawOptions.macOptionClickForcesSelection)}_onMouseMove(e){if(e.stopImmediatePropagation(),!this._model.selectionStart)return;const t=this._model.selectionEnd?[this._model.selectionEnd[0],this._model.selectionEnd[1]]:null;if(this._model.selectionEnd=this._getMouseBufferCoords(e),!this._model.selectionEnd)return void this.refresh(!0);2===this._activeSelectionMode?this._model.selectionEnd[1]<this._model.selectionStart[1]?this._model.selectionEnd[0]=0:this._model.selectionEnd[0]=this._bufferService.cols:1===this._activeSelectionMode&&this._selectToWordAt(this._model.selectionEnd),this._dragScrollAmount=this._getMouseEventScrollAmount(e),3!==this._activeSelectionMode&&(this._dragScrollAmount>0?this._model.selectionEnd[0]=this._bufferService.cols:this._dragScrollAmount<0&&(this._model.selectionEnd[0]=0));const r=this._bufferService.buffer;if(this._model.selectionEnd[1]<r.lines.length){const e=r.lines.get(this._model.selectionEnd[1]);e&&0===e.hasWidth(this._model.selectionEnd[0])&&this._model.selectionEnd[0]++}t&&t[0]===this._model.selectionEnd[0]&&t[1]===this._model.selectionEnd[1]||this.refresh(!0)}_dragScroll(){if(this._model.selectionEnd&&this._model.selectionStart&&this._dragScrollAmount){this._onRequestScrollLines.fire({amount:this._dragScrollAmount,suppressScrollEvent:!1});const e=this._bufferService.buffer;this._dragScrollAmount>0?(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=this._bufferService.cols),this._model.selectionEnd[1]=Math.min(e.ydisp+this._bufferService.rows,e.lines.length-1)):(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=0),this._model.selectionEnd[1]=e.ydisp),this.refresh()}}_onMouseUp(e){const t=e.timeStamp-this._mouseDownTimeStamp;if(this._removeMouseDownListeners(),this.selectionText.length<=1&&t<500&&e.altKey&&this._optionsService.rawOptions.altClickMovesCursor){if(this._bufferService.buffer.ybase===this._bufferService.buffer.ydisp){const t=this._mouseService.getCoords(e,this._element,this._bufferService.cols,this._bufferService.rows,!1);if(t&&void 0!==t[0]&&void 0!==t[1]){const e=(0,d.moveToCellSequence)(t[0]-1,t[1]-1,this._bufferService,this._coreService.decPrivateModes.applicationCursorKeys);this._coreService.triggerDataEvent(e,!0)}}}else this._fireEventIfSelectionChanged()}_fireEventIfSelectionChanged(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd,r=!(!e||!t||e[0]===t[0]&&e[1]===t[1]);r?e&&t&&(this._oldSelectionStart&&this._oldSelectionEnd&&e[0]===this._oldSelectionStart[0]&&e[1]===this._oldSelectionStart[1]&&t[0]===this._oldSelectionEnd[0]&&t[1]===this._oldSelectionEnd[1]||this._fireOnSelectionChange(e,t,r)):this._oldHasSelection&&this._fireOnSelectionChange(e,t,r)}_fireOnSelectionChange(e,t,r){this._oldSelectionStart=e,this._oldSelectionEnd=t,this._oldHasSelection=r,this._onSelectionChange.fire()}_onBufferActivate(e){this.clearSelection(),this._trimListener.dispose(),this._trimListener=e.activeBuffer.lines.onTrim((e=>this._onTrim(e)))}_convertViewportColToCharacterIndex(e,t){let r=t[0];for(let i=0;t[0]>=i;i++){const n=e.loadCell(i,this._workCell).getChars().length;0===this._workCell.getWidth()?r--:n>1&&t[0]!==i&&(r+=n-1)}return r}setSelection(e,t,r){this._model.clearSelection(),this._removeMouseDownListeners(),this._model.selectionStart=[e,t],this._model.selectionStartLength=r,this.refresh(),this._fireEventIfSelectionChanged()}rightClickSelect(e){this._isClickInSelection(e)||(this._selectWordAtCursor(e,!1)&&this.refresh(!0),this._fireEventIfSelectionChanged())}_getWordAt(e,t,r=!0,i=!0){if(e[0]>=this._bufferService.cols)return;const n=this._bufferService.buffer,s=n.lines.get(e[1]);if(!s)return;const o=n.translateBufferLineToString(e[1],!1);let a=this._convertViewportColToCharacterIndex(s,e),l=a;const c=e[0]-a;let u=0,h=0,d=0,f=0;if(" "===o.charAt(a)){for(;a>0&&" "===o.charAt(a-1);)a--;for(;l<o.length&&" "===o.charAt(l+1);)l++}else{let t=e[0],r=e[0];0===s.getWidth(t)&&(u++,t--),2===s.getWidth(r)&&(h++,r++);const i=s.getString(r).length;for(i>1&&(f+=i-1,l+=i-1);t>0&&a>0&&!this._isCharWordSeparator(s.loadCell(t-1,this._workCell));){s.loadCell(t-1,this._workCell);const e=this._workCell.getChars().length;0===this._workCell.getWidth()?(u++,t--):e>1&&(d+=e-1,a-=e-1),a--,t--}for(;r<s.length&&l+1<o.length&&!this._isCharWordSeparator(s.loadCell(r+1,this._workCell));){s.loadCell(r+1,this._workCell);const e=this._workCell.getChars().length;2===this._workCell.getWidth()?(h++,r++):e>1&&(f+=e-1,l+=e-1),l++,r++}}l++;let p=a+c-u+d,v=Math.min(this._bufferService.cols,l-a+u+h-d-f);if(t||""!==o.slice(a,l).trim()){if(r&&0===p&&32!==s.getCodePoint(0)){const t=n.lines.get(e[1]-1);if(t&&s.isWrapped&&32!==t.getCodePoint(this._bufferService.cols-1)){const t=this._getWordAt([this._bufferService.cols-1,e[1]-1],!1,!0,!1);if(t){const e=this._bufferService.cols-t.start;p-=e,v+=e}}}if(i&&p+v===this._bufferService.cols&&32!==s.getCodePoint(this._bufferService.cols-1)){const t=n.lines.get(e[1]+1);if((null==t?void 0:t.isWrapped)&&32!==t.getCodePoint(0)){const t=this._getWordAt([0,e[1]+1],!1,!1,!0);t&&(v+=t.length)}}return{start:p,length:v}}}_selectWordAt(e,t){const r=this._getWordAt(e,t);if(r){for(;r.start<0;)r.start+=this._bufferService.cols,e[1]--;this._model.selectionStart=[r.start,e[1]],this._model.selectionStartLength=r.length}}_selectToWordAt(e){const t=this._getWordAt(e,!0);if(t){let r=e[1];for(;t.start<0;)t.start+=this._bufferService.cols,r--;if(!this._model.areSelectionValuesReversed())for(;t.start+t.length>this._bufferService.cols;)t.length-=this._bufferService.cols,r++;this._model.selectionEnd=[this._model.areSelectionValuesReversed()?t.start:t.start+t.length,r]}}_isCharWordSeparator(e){return 0!==e.getWidth()&&this._optionsService.rawOptions.wordSeparator.indexOf(e.getChars())>=0}_selectLineAt(e){const t=this._bufferService.buffer.getWrappedRangeForLine(e),r={start:{x:0,y:t.first},end:{x:this._bufferService.cols-1,y:t.last}};this._model.selectionStart=[0,t.first],this._model.selectionEnd=void 0,this._model.selectionStartLength=(0,p.getRangeLength)(r,this._bufferService.cols)}};_=i([n(3,u.IBufferService),n(4,u.ICoreService),n(5,c.IMouseService),n(6,u.IOptionsService),n(7,c.IRenderService),n(8,c.ICoreBrowserService)],_),t.SelectionService=_},4725:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ICharacterJoinerService=t.ISelectionService=t.IRenderService=t.IMouseService=t.ICoreBrowserService=t.ICharSizeService=void 0;const i=r(8343);t.ICharSizeService=(0,i.createDecorator)("CharSizeService"),t.ICoreBrowserService=(0,i.createDecorator)("CoreBrowserService"),t.IMouseService=(0,i.createDecorator)("MouseService"),t.IRenderService=(0,i.createDecorator)("RenderService"),t.ISelectionService=(0,i.createDecorator)("SelectionService"),t.ICharacterJoinerService=(0,i.createDecorator)("CharacterJoinerService")},6349:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CircularList=void 0;const i=r(8460);t.CircularList=class{constructor(e){this._maxLength=e,this.onDeleteEmitter=new i.EventEmitter,this.onInsertEmitter=new i.EventEmitter,this.onTrimEmitter=new i.EventEmitter,this._array=new Array(this._maxLength),this._startIndex=0,this._length=0}get onDelete(){return this.onDeleteEmitter.event}get onInsert(){return this.onInsertEmitter.event}get onTrim(){return this.onTrimEmitter.event}get maxLength(){return this._maxLength}set maxLength(e){if(this._maxLength===e)return;const t=new Array(e);for(let r=0;r<Math.min(e,this.length);r++)t[r]=this._array[this._getCyclicIndex(r)];this._array=t,this._maxLength=e,this._startIndex=0}get length(){return this._length}set length(e){if(e>this._length)for(let t=this._length;t<e;t++)this._array[t]=void 0;this._length=e}get(e){return this._array[this._getCyclicIndex(e)]}set(e,t){this._array[this._getCyclicIndex(e)]=t}push(e){this._array[this._getCyclicIndex(this._length)]=e,this._length===this._maxLength?(this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1)):this._length++}recycle(){if(this._length!==this._maxLength)throw new Error("Can only recycle when the buffer is full");return this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1),this._array[this._getCyclicIndex(this._length-1)]}get isFull(){return this._length===this._maxLength}pop(){return this._array[this._getCyclicIndex(this._length---1)]}splice(e,t,...r){if(t){for(let r=e;r<this._length-t;r++)this._array[this._getCyclicIndex(r)]=this._array[this._getCyclicIndex(r+t)];this._length-=t,this.onDeleteEmitter.fire({index:e,amount:t})}for(let t=this._length-1;t>=e;t--)this._array[this._getCyclicIndex(t+r.length)]=this._array[this._getCyclicIndex(t)];for(let t=0;t<r.length;t++)this._array[this._getCyclicIndex(e+t)]=r[t];if(r.length&&this.onInsertEmitter.fire({index:e,amount:r.length}),this._length+r.length>this._maxLength){const e=this._length+r.length-this._maxLength;this._startIndex+=e,this._length=this._maxLength,this.onTrimEmitter.fire(e)}else this._length+=r.length}trimStart(e){e>this._length&&(e=this._length),this._startIndex+=e,this._length-=e,this.onTrimEmitter.fire(e)}shiftElements(e,t,r){if(!(t<=0)){if(e<0||e>=this._length)throw new Error("start argument out of range");if(e+r<0)throw new Error("Cannot shift elements in list beyond index 0");if(r>0){for(let i=t-1;i>=0;i--)this.set(e+i+r,this.get(e+i));const i=e+t+r-this._length;if(i>0)for(this._length+=i;this._length>this._maxLength;)this._length--,this._startIndex++,this.onTrimEmitter.fire(1)}else for(let i=0;i<t;i++)this.set(e+i+r,this.get(e+i))}}_getCyclicIndex(e){return(this._startIndex+e)%this._maxLength}}},1439:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.clone=void 0,t.clone=function e(t,r=5){if("object"!=typeof t)return t;const i=Array.isArray(t)?[]:{};for(const n in t)i[n]=r<=1?t[n]:t[n]&&e(t[n],r-1);return i}},8055:(e,t)=>{var r,i,n;function s(e){const t=e.toString(16);return t.length<2?"0"+t:t}function o(e,t){return e<t?(t+.05)/(e+.05):(e+.05)/(t+.05)}Object.defineProperty(t,"__esModule",{value:!0}),t.contrastRatio=t.toPaddedHex=t.rgba=t.rgb=t.css=t.color=t.channels=void 0,function(e){e.toCss=function(e,t,r,i){return void 0!==i?`#${s(e)}${s(t)}${s(r)}${s(i)}`:`#${s(e)}${s(t)}${s(r)}`},e.toRgba=function(e,t,r,i=255){return(e<<24|t<<16|r<<8|i)>>>0}}(r=t.channels||(t.channels={})),function(e){function t(e,t){const i=Math.round(255*t),[s,o,a]=n.toChannels(e.rgba);return{css:r.toCss(s,o,a,i),rgba:r.toRgba(s,o,a,i)}}e.blend=function(e,t){const i=(255&t.rgba)/255;if(1===i)return{css:t.css,rgba:t.rgba};const n=t.rgba>>24&255,s=t.rgba>>16&255,o=t.rgba>>8&255,a=e.rgba>>24&255,l=e.rgba>>16&255,c=e.rgba>>8&255,u=a+Math.round((n-a)*i),h=l+Math.round((s-l)*i),d=c+Math.round((o-c)*i);return{css:r.toCss(u,h,d),rgba:r.toRgba(u,h,d)}},e.isOpaque=function(e){return 255==(255&e.rgba)},e.ensureContrastRatio=function(e,t,r){const i=n.ensureContrastRatio(e.rgba,t.rgba,r);if(i)return n.toColor(i>>24&255,i>>16&255,i>>8&255)},e.opaque=function(e){const t=(255|e.rgba)>>>0,[i,s,o]=n.toChannels(t);return{css:r.toCss(i,s,o),rgba:t}},e.opacity=t,e.multiplyOpacity=function(e,r){return t(e,(255&e.rgba)*r/255)},e.toColorRGB=function(e){return[e.rgba>>24&255,e.rgba>>16&255,e.rgba>>8&255]}}(t.color||(t.color={})),(t.css||(t.css={})).toColor=function(e){if(e.match(/#[0-9a-f]{3,8}/i))switch(e.length){case 4:{const t=parseInt(e.slice(1,2).repeat(2),16),r=parseInt(e.slice(2,3).repeat(2),16),i=parseInt(e.slice(3,4).repeat(2),16);return n.toColor(t,r,i)}case 5:{const t=parseInt(e.slice(1,2).repeat(2),16),r=parseInt(e.slice(2,3).repeat(2),16),i=parseInt(e.slice(3,4).repeat(2),16),s=parseInt(e.slice(4,5).repeat(2),16);return n.toColor(t,r,i,s)}case 7:return{css:e,rgba:(parseInt(e.slice(1),16)<<8|255)>>>0};case 9:return{css:e,rgba:parseInt(e.slice(1),16)>>>0}}const t=e.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);if(t){const e=parseInt(t[1]),r=parseInt(t[2]),i=parseInt(t[3]),s=Math.round(255*(void 0===t[5]?1:parseFloat(t[5])));return n.toColor(e,r,i,s)}throw new Error("css.toColor: Unsupported css format")},function(e){function t(e,t,r){const i=e/255,n=t/255,s=r/255;return.2126*(i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4))+.7152*(n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))+.0722*(s<=.03928?s/12.92:Math.pow((s+.055)/1.055,2.4))}e.relativeLuminance=function(e){return t(e>>16&255,e>>8&255,255&e)},e.relativeLuminance2=t}(i=t.rgb||(t.rgb={})),function(e){function t(e,t,r){const n=e>>24&255,s=e>>16&255,a=e>>8&255;let l=t>>24&255,c=t>>16&255,u=t>>8&255,h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));for(;h<r&&(l>0||c>0||u>0);)l-=Math.max(0,Math.ceil(.1*l)),c-=Math.max(0,Math.ceil(.1*c)),u-=Math.max(0,Math.ceil(.1*u)),h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));return(l<<24|c<<16|u<<8|255)>>>0}function n(e,t,r){const n=e>>24&255,s=e>>16&255,a=e>>8&255;let l=t>>24&255,c=t>>16&255,u=t>>8&255,h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));for(;h<r&&(l<255||c<255||u<255);)l=Math.min(255,l+Math.ceil(.1*(255-l))),c=Math.min(255,c+Math.ceil(.1*(255-c))),u=Math.min(255,u+Math.ceil(.1*(255-u))),h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));return(l<<24|c<<16|u<<8|255)>>>0}e.ensureContrastRatio=function(e,r,s){const a=i.relativeLuminance(e>>8),l=i.relativeLuminance(r>>8);if(o(a,l)<s){if(l<a){const l=t(e,r,s),c=o(a,i.relativeLuminance(l>>8));if(c<s){const t=n(e,r,s);return c>o(a,i.relativeLuminance(t>>8))?l:t}return l}const c=n(e,r,s),u=o(a,i.relativeLuminance(c>>8));if(u<s){const n=t(e,r,s);return u>o(a,i.relativeLuminance(n>>8))?c:n}return c}},e.reduceLuminance=t,e.increaseLuminance=n,e.toChannels=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},e.toColor=function(e,t,i,n){return{css:r.toCss(e,t,i,n),rgba:r.toRgba(e,t,i,n)}}}(n=t.rgba||(t.rgba={})),t.toPaddedHex=s,t.contrastRatio=o},8969:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreTerminal=void 0;const i=r(844),n=r(2585),s=r(4348),o=r(7866),a=r(744),l=r(7302),c=r(6975),u=r(8460),h=r(1753),d=r(3730),f=r(1480),p=r(7994),v=r(9282),g=r(5435),_=r(5981),m=r(2660);let b=!1;class y extends i.Disposable{constructor(e){super(),this._onBinary=new u.EventEmitter,this._onData=new u.EventEmitter,this._onLineFeed=new u.EventEmitter,this._onResize=new u.EventEmitter,this._onScroll=new u.EventEmitter,this._onWriteParsed=new u.EventEmitter,this._instantiationService=new s.InstantiationService,this.optionsService=new l.OptionsService(e),this._instantiationService.setService(n.IOptionsService,this.optionsService),this._bufferService=this.register(this._instantiationService.createInstance(a.BufferService)),this._instantiationService.setService(n.IBufferService,this._bufferService),this._logService=this._instantiationService.createInstance(o.LogService),this._instantiationService.setService(n.ILogService,this._logService),this.coreService=this.register(this._instantiationService.createInstance(c.CoreService,(()=>this.scrollToBottom()))),this._instantiationService.setService(n.ICoreService,this.coreService),this.coreMouseService=this._instantiationService.createInstance(h.CoreMouseService),this._instantiationService.setService(n.ICoreMouseService,this.coreMouseService),this._dirtyRowService=this._instantiationService.createInstance(d.DirtyRowService),this._instantiationService.setService(n.IDirtyRowService,this._dirtyRowService),this.unicodeService=this._instantiationService.createInstance(f.UnicodeService),this._instantiationService.setService(n.IUnicodeService,this.unicodeService),this._charsetService=this._instantiationService.createInstance(p.CharsetService),this._instantiationService.setService(n.ICharsetService,this._charsetService),this._oscLinkService=this._instantiationService.createInstance(m.OscLinkService),this._instantiationService.setService(n.IOscLinkService,this._oscLinkService),this._inputHandler=new g.InputHandler(this._bufferService,this._charsetService,this.coreService,this._dirtyRowService,this._logService,this.optionsService,this._oscLinkService,this.coreMouseService,this.unicodeService),this.register((0,u.forwardEvent)(this._inputHandler.onLineFeed,this._onLineFeed)),this.register(this._inputHandler),this.register((0,u.forwardEvent)(this._bufferService.onResize,this._onResize)),this.register((0,u.forwardEvent)(this.coreService.onData,this._onData)),this.register((0,u.forwardEvent)(this.coreService.onBinary,this._onBinary)),this.register(this.optionsService.onOptionChange((e=>this._updateOptions(e)))),this.register(this._bufferService.onScroll((e=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this.register(this._inputHandler.onScroll((e=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this._writeBuffer=new _.WriteBuffer(((e,t)=>this._inputHandler.parse(e,t))),this.register((0,u.forwardEvent)(this._writeBuffer.onWriteParsed,this._onWriteParsed))}get onBinary(){return this._onBinary.event}get onData(){return this._onData.event}get onLineFeed(){return this._onLineFeed.event}get onResize(){return this._onResize.event}get onWriteParsed(){return this._onWriteParsed.event}get onScroll(){return this._onScrollApi||(this._onScrollApi=new u.EventEmitter,this.register(this._onScroll.event((e=>{var t;null===(t=this._onScrollApi)||void 0===t||t.fire(e.position)})))),this._onScrollApi.event}get cols(){return this._bufferService.cols}get rows(){return this._bufferService.rows}get buffers(){return this._bufferService.buffers}get options(){return this.optionsService.options}set options(e){for(const t in e)this.optionsService.options[t]=e[t]}dispose(){var e;this._isDisposed||(super.dispose(),null===(e=this._windowsMode)||void 0===e||e.dispose(),this._windowsMode=void 0)}write(e,t){this._writeBuffer.write(e,t)}writeSync(e,t){this._logService.logLevel<=n.LogLevelEnum.WARN&&!b&&(this._logService.warn("writeSync is unreliable and will be removed soon."),b=!0),this._writeBuffer.writeSync(e,t)}resize(e,t){isNaN(e)||isNaN(t)||(e=Math.max(e,a.MINIMUM_COLS),t=Math.max(t,a.MINIMUM_ROWS),this._bufferService.resize(e,t))}scroll(e,t=!1){this._bufferService.scroll(e,t)}scrollLines(e,t,r){this._bufferService.scrollLines(e,t,r)}scrollPages(e){this._bufferService.scrollPages(e)}scrollToTop(){this._bufferService.scrollToTop()}scrollToBottom(){this._bufferService.scrollToBottom()}scrollToLine(e){this._bufferService.scrollToLine(e)}registerEscHandler(e,t){return this._inputHandler.registerEscHandler(e,t)}registerDcsHandler(e,t){return this._inputHandler.registerDcsHandler(e,t)}registerCsiHandler(e,t){return this._inputHandler.registerCsiHandler(e,t)}registerOscHandler(e,t){return this._inputHandler.registerOscHandler(e,t)}_setup(){this.optionsService.rawOptions.windowsMode&&this._enableWindowsMode()}reset(){this._inputHandler.reset(),this._bufferService.reset(),this._charsetService.reset(),this.coreService.reset(),this.coreMouseService.reset()}_updateOptions(e){var t;switch(e){case"scrollback":this.buffers.resize(this.cols,this.rows);break;case"windowsMode":this.optionsService.rawOptions.windowsMode?this._enableWindowsMode():(null===(t=this._windowsMode)||void 0===t||t.dispose(),this._windowsMode=void 0)}}_enableWindowsMode(){if(!this._windowsMode){const e=[];e.push(this.onLineFeed(v.updateWindowsModeWrappedState.bind(null,this._bufferService))),e.push(this.registerCsiHandler({final:"H"},(()=>((0,v.updateWindowsModeWrappedState)(this._bufferService),!1)))),this._windowsMode={dispose:()=>{for(const t of e)t.dispose()}}}}}t.CoreTerminal=y},8460:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.forwardEvent=t.EventEmitter=void 0,t.EventEmitter=class{constructor(){this._listeners=[],this._disposed=!1}get event(){return this._event||(this._event=e=>(this._listeners.push(e),{dispose:()=>{if(!this._disposed)for(let t=0;t<this._listeners.length;t++)if(this._listeners[t]===e)return void this._listeners.splice(t,1)}})),this._event}fire(e,t){const r=[];for(let e=0;e<this._listeners.length;e++)r.push(this._listeners[e]);for(let i=0;i<r.length;i++)r[i].call(void 0,e,t)}dispose(){this._listeners&&(this._listeners.length=0),this._disposed=!0}},t.forwardEvent=function(e,t){return e((e=>t.fire(e)))}},5435:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InputHandler=t.WindowsOptionsReportType=void 0;const i=r(2584),n=r(7116),s=r(2015),o=r(844),a=r(482),l=r(8437),c=r(8460),u=r(643),h=r(511),d=r(3734),f=r(2585),p=r(6242),v=r(6351),g=r(5941),_={"(":0,")":1,"*":2,"+":3,"-":1,".":2},m=131072;function b(e,t){if(e>24)return t.setWinLines||!1;switch(e){case 1:return!!t.restoreWin;case 2:return!!t.minimizeWin;case 3:return!!t.setWinPosition;case 4:return!!t.setWinSizePixels;case 5:return!!t.raiseWin;case 6:return!!t.lowerWin;case 7:return!!t.refreshWin;case 8:return!!t.setWinSizeChars;case 9:return!!t.maximizeWin;case 10:return!!t.fullscreenWin;case 11:return!!t.getWinState;case 13:return!!t.getWinPosition;case 14:return!!t.getWinSizePixels;case 15:return!!t.getScreenSizePixels;case 16:return!!t.getCellSizePixels;case 18:return!!t.getWinSizeChars;case 19:return!!t.getScreenSizeChars;case 20:return!!t.getIconTitle;case 21:return!!t.getWinTitle;case 22:return!!t.pushTitle;case 23:return!!t.popTitle;case 24:return!!t.setWinLines}return!1}var y;!function(e){e[e.GET_WIN_SIZE_PIXELS=0]="GET_WIN_SIZE_PIXELS",e[e.GET_CELL_SIZE_PIXELS=1]="GET_CELL_SIZE_PIXELS"}(y=t.WindowsOptionsReportType||(t.WindowsOptionsReportType={}));class S extends o.Disposable{constructor(e,t,r,o,u,d,f,g,_,m=new s.EscapeSequenceParser){super(),this._bufferService=e,this._charsetService=t,this._coreService=r,this._dirtyRowService=o,this._logService=u,this._optionsService=d,this._oscLinkService=f,this._coreMouseService=g,this._unicodeService=_,this._parser=m,this._parseBuffer=new Uint32Array(4096),this._stringDecoder=new a.StringToUtf32,this._utf8Decoder=new a.Utf8ToUtf32,this._workCell=new h.CellData,this._windowTitle="",this._iconName="",this._windowTitleStack=[],this._iconNameStack=[],this._curAttrData=l.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=l.DEFAULT_ATTR_DATA.clone(),this._onRequestBell=new c.EventEmitter,this._onRequestRefreshRows=new c.EventEmitter,this._onRequestReset=new c.EventEmitter,this._onRequestSendFocus=new c.EventEmitter,this._onRequestSyncScrollBar=new c.EventEmitter,this._onRequestWindowsOptionsReport=new c.EventEmitter,this._onA11yChar=new c.EventEmitter,this._onA11yTab=new c.EventEmitter,this._onCursorMove=new c.EventEmitter,this._onLineFeed=new c.EventEmitter,this._onScroll=new c.EventEmitter,this._onTitleChange=new c.EventEmitter,this._onColor=new c.EventEmitter,this._parseStack={paused:!1,cursorStartX:0,cursorStartY:0,decodedLength:0,position:0},this._specialColors=[256,257,258],this.register(this._parser),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((e=>this._activeBuffer=e.activeBuffer))),this._parser.setCsiHandlerFallback(((e,t)=>{this._logService.debug("Unknown CSI code: ",{identifier:this._parser.identToString(e),params:t.toArray()})})),this._parser.setEscHandlerFallback((e=>{this._logService.debug("Unknown ESC code: ",{identifier:this._parser.identToString(e)})})),this._parser.setExecuteHandlerFallback((e=>{this._logService.debug("Unknown EXECUTE code: ",{code:e})})),this._parser.setOscHandlerFallback(((e,t,r)=>{this._logService.debug("Unknown OSC code: ",{identifier:e,action:t,data:r})})),this._parser.setDcsHandlerFallback(((e,t,r)=>{"HOOK"===t&&(r=r.toArray()),this._logService.debug("Unknown DCS code: ",{identifier:this._parser.identToString(e),action:t,payload:r})})),this._parser.setPrintHandler(((e,t,r)=>this.print(e,t,r))),this._parser.registerCsiHandler({final:"@"},(e=>this.insertChars(e))),this._parser.registerCsiHandler({intermediates:" ",final:"@"},(e=>this.scrollLeft(e))),this._parser.registerCsiHandler({final:"A"},(e=>this.cursorUp(e))),this._parser.registerCsiHandler({intermediates:" ",final:"A"},(e=>this.scrollRight(e))),this._parser.registerCsiHandler({final:"B"},(e=>this.cursorDown(e))),this._parser.registerCsiHandler({final:"C"},(e=>this.cursorForward(e))),this._parser.registerCsiHandler({final:"D"},(e=>this.cursorBackward(e))),this._parser.registerCsiHandler({final:"E"},(e=>this.cursorNextLine(e))),this._parser.registerCsiHandler({final:"F"},(e=>this.cursorPrecedingLine(e))),this._parser.registerCsiHandler({final:"G"},(e=>this.cursorCharAbsolute(e))),this._parser.registerCsiHandler({final:"H"},(e=>this.cursorPosition(e))),this._parser.registerCsiHandler({final:"I"},(e=>this.cursorForwardTab(e))),this._parser.registerCsiHandler({final:"J"},(e=>this.eraseInDisplay(e,!1))),this._parser.registerCsiHandler({prefix:"?",final:"J"},(e=>this.eraseInDisplay(e,!0))),this._parser.registerCsiHandler({final:"K"},(e=>this.eraseInLine(e,!1))),this._parser.registerCsiHandler({prefix:"?",final:"K"},(e=>this.eraseInLine(e,!0))),this._parser.registerCsiHandler({final:"L"},(e=>this.insertLines(e))),this._parser.registerCsiHandler({final:"M"},(e=>this.deleteLines(e))),this._parser.registerCsiHandler({final:"P"},(e=>this.deleteChars(e))),this._parser.registerCsiHandler({final:"S"},(e=>this.scrollUp(e))),this._parser.registerCsiHandler({final:"T"},(e=>this.scrollDown(e))),this._parser.registerCsiHandler({final:"X"},(e=>this.eraseChars(e))),this._parser.registerCsiHandler({final:"Z"},(e=>this.cursorBackwardTab(e))),this._parser.registerCsiHandler({final:"`"},(e=>this.charPosAbsolute(e))),this._parser.registerCsiHandler({final:"a"},(e=>this.hPositionRelative(e))),this._parser.registerCsiHandler({final:"b"},(e=>this.repeatPrecedingCharacter(e))),this._parser.registerCsiHandler({final:"c"},(e=>this.sendDeviceAttributesPrimary(e))),this._parser.registerCsiHandler({prefix:">",final:"c"},(e=>this.sendDeviceAttributesSecondary(e))),this._parser.registerCsiHandler({final:"d"},(e=>this.linePosAbsolute(e))),this._parser.registerCsiHandler({final:"e"},(e=>this.vPositionRelative(e))),this._parser.registerCsiHandler({final:"f"},(e=>this.hVPosition(e))),this._parser.registerCsiHandler({final:"g"},(e=>this.tabClear(e))),this._parser.registerCsiHandler({final:"h"},(e=>this.setMode(e))),this._parser.registerCsiHandler({prefix:"?",final:"h"},(e=>this.setModePrivate(e))),this._parser.registerCsiHandler({final:"l"},(e=>this.resetMode(e))),this._parser.registerCsiHandler({prefix:"?",final:"l"},(e=>this.resetModePrivate(e))),this._parser.registerCsiHandler({final:"m"},(e=>this.charAttributes(e))),this._parser.registerCsiHandler({final:"n"},(e=>this.deviceStatus(e))),this._parser.registerCsiHandler({prefix:"?",final:"n"},(e=>this.deviceStatusPrivate(e))),this._parser.registerCsiHandler({intermediates:"!",final:"p"},(e=>this.softReset(e))),this._parser.registerCsiHandler({intermediates:" ",final:"q"},(e=>this.setCursorStyle(e))),this._parser.registerCsiHandler({final:"r"},(e=>this.setScrollRegion(e))),this._parser.registerCsiHandler({final:"s"},(e=>this.saveCursor(e))),this._parser.registerCsiHandler({final:"t"},(e=>this.windowOptions(e))),this._parser.registerCsiHandler({final:"u"},(e=>this.restoreCursor(e))),this._parser.registerCsiHandler({intermediates:"'",final:"}"},(e=>this.insertColumns(e))),this._parser.registerCsiHandler({intermediates:"'",final:"~"},(e=>this.deleteColumns(e))),this._parser.registerCsiHandler({intermediates:'"',final:"q"},(e=>this.selectProtected(e))),this._parser.registerCsiHandler({intermediates:"$",final:"p"},(e=>this.requestMode(e,!0))),this._parser.registerCsiHandler({prefix:"?",intermediates:"$",final:"p"},(e=>this.requestMode(e,!1))),this._parser.setExecuteHandler(i.C0.BEL,(()=>this.bell())),this._parser.setExecuteHandler(i.C0.LF,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.VT,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.FF,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.CR,(()=>this.carriageReturn())),this._parser.setExecuteHandler(i.C0.BS,(()=>this.backspace())),this._parser.setExecuteHandler(i.C0.HT,(()=>this.tab())),this._parser.setExecuteHandler(i.C0.SO,(()=>this.shiftOut())),this._parser.setExecuteHandler(i.C0.SI,(()=>this.shiftIn())),this._parser.setExecuteHandler(i.C1.IND,(()=>this.index())),this._parser.setExecuteHandler(i.C1.NEL,(()=>this.nextLine())),this._parser.setExecuteHandler(i.C1.HTS,(()=>this.tabSet())),this._parser.registerOscHandler(0,new p.OscHandler((e=>(this.setTitle(e),this.setIconName(e),!0)))),this._parser.registerOscHandler(1,new p.OscHandler((e=>this.setIconName(e)))),this._parser.registerOscHandler(2,new p.OscHandler((e=>this.setTitle(e)))),this._parser.registerOscHandler(4,new p.OscHandler((e=>this.setOrReportIndexedColor(e)))),this._parser.registerOscHandler(8,new p.OscHandler((e=>this.setHyperlink(e)))),this._parser.registerOscHandler(10,new p.OscHandler((e=>this.setOrReportFgColor(e)))),this._parser.registerOscHandler(11,new p.OscHandler((e=>this.setOrReportBgColor(e)))),this._parser.registerOscHandler(12,new p.OscHandler((e=>this.setOrReportCursorColor(e)))),this._parser.registerOscHandler(104,new p.OscHandler((e=>this.restoreIndexedColor(e)))),this._parser.registerOscHandler(110,new p.OscHandler((e=>this.restoreFgColor(e)))),this._parser.registerOscHandler(111,new p.OscHandler((e=>this.restoreBgColor(e)))),this._parser.registerOscHandler(112,new p.OscHandler((e=>this.restoreCursorColor(e)))),this._parser.registerEscHandler({final:"7"},(()=>this.saveCursor())),this._parser.registerEscHandler({final:"8"},(()=>this.restoreCursor())),this._parser.registerEscHandler({final:"D"},(()=>this.index())),this._parser.registerEscHandler({final:"E"},(()=>this.nextLine())),this._parser.registerEscHandler({final:"H"},(()=>this.tabSet())),this._parser.registerEscHandler({final:"M"},(()=>this.reverseIndex())),this._parser.registerEscHandler({final:"="},(()=>this.keypadApplicationMode())),this._parser.registerEscHandler({final:">"},(()=>this.keypadNumericMode())),this._parser.registerEscHandler({final:"c"},(()=>this.fullReset())),this._parser.registerEscHandler({final:"n"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"o"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"|"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"}"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"~"},(()=>this.setgLevel(1))),this._parser.registerEscHandler({intermediates:"%",final:"@"},(()=>this.selectDefaultCharset())),this._parser.registerEscHandler({intermediates:"%",final:"G"},(()=>this.selectDefaultCharset()));for(const e in n.CHARSETS)this._parser.registerEscHandler({intermediates:"(",final:e},(()=>this.selectCharset("("+e))),this._parser.registerEscHandler({intermediates:")",final:e},(()=>this.selectCharset(")"+e))),this._parser.registerEscHandler({intermediates:"*",final:e},(()=>this.selectCharset("*"+e))),this._parser.registerEscHandler({intermediates:"+",final:e},(()=>this.selectCharset("+"+e))),this._parser.registerEscHandler({intermediates:"-",final:e},(()=>this.selectCharset("-"+e))),this._parser.registerEscHandler({intermediates:".",final:e},(()=>this.selectCharset("."+e))),this._parser.registerEscHandler({intermediates:"/",final:e},(()=>this.selectCharset("/"+e)));this._parser.registerEscHandler({intermediates:"#",final:"8"},(()=>this.screenAlignmentPattern())),this._parser.setErrorHandler((e=>(this._logService.error("Parsing error: ",e),e))),this._parser.registerDcsHandler({intermediates:"$",final:"q"},new v.DcsHandler(((e,t)=>this.requestStatusString(e,t))))}getAttrData(){return this._curAttrData}get onRequestBell(){return this._onRequestBell.event}get onRequestRefreshRows(){return this._onRequestRefreshRows.event}get onRequestReset(){return this._onRequestReset.event}get onRequestSendFocus(){return this._onRequestSendFocus.event}get onRequestSyncScrollBar(){return this._onRequestSyncScrollBar.event}get onRequestWindowsOptionsReport(){return this._onRequestWindowsOptionsReport.event}get onA11yChar(){return this._onA11yChar.event}get onA11yTab(){return this._onA11yTab.event}get onCursorMove(){return this._onCursorMove.event}get onLineFeed(){return this._onLineFeed.event}get onScroll(){return this._onScroll.event}get onTitleChange(){return this._onTitleChange.event}get onColor(){return this._onColor.event}dispose(){super.dispose()}_preserveStack(e,t,r,i){this._parseStack.paused=!0,this._parseStack.cursorStartX=e,this._parseStack.cursorStartY=t,this._parseStack.decodedLength=r,this._parseStack.position=i}_logSlowResolvingAsync(e){this._logService.logLevel<=f.LogLevelEnum.WARN&&Promise.race([e,new Promise(((e,t)=>setTimeout((()=>t("#SLOW_TIMEOUT")),5e3)))]).catch((e=>{if("#SLOW_TIMEOUT"!==e)throw e;console.warn("async parser handler taking longer than 5000 ms")}))}parse(e,t){let r,i=this._activeBuffer.x,n=this._activeBuffer.y,s=0;const o=this._parseStack.paused;if(o){if(r=this._parser.parse(this._parseBuffer,this._parseStack.decodedLength,t))return this._logSlowResolvingAsync(r),r;i=this._parseStack.cursorStartX,n=this._parseStack.cursorStartY,this._parseStack.paused=!1,e.length>m&&(s=this._parseStack.position+m)}if(this._logService.logLevel<=f.LogLevelEnum.DEBUG&&this._logService.debug("parsing data"+("string"==typeof e?` "${e}"`:` "${Array.prototype.map.call(e,(e=>String.fromCharCode(e))).join("")}"`),"string"==typeof e?e.split("").map((e=>e.charCodeAt(0))):e),this._parseBuffer.length<e.length&&this._parseBuffer.length<m&&(this._parseBuffer=new Uint32Array(Math.min(e.length,m))),o||this._dirtyRowService.clearRange(),e.length>m)for(let t=s;t<e.length;t+=m){const s=t+m<e.length?t+m:e.length,o="string"==typeof e?this._stringDecoder.decode(e.substring(t,s),this._parseBuffer):this._utf8Decoder.decode(e.subarray(t,s),this._parseBuffer);if(r=this._parser.parse(this._parseBuffer,o))return this._preserveStack(i,n,o,t),this._logSlowResolvingAsync(r),r}else if(!o){const t="string"==typeof e?this._stringDecoder.decode(e,this._parseBuffer):this._utf8Decoder.decode(e,this._parseBuffer);if(r=this._parser.parse(this._parseBuffer,t))return this._preserveStack(i,n,t,0),this._logSlowResolvingAsync(r),r}this._activeBuffer.x===i&&this._activeBuffer.y===n||this._onCursorMove.fire(),this._onRequestRefreshRows.fire(this._dirtyRowService.start,this._dirtyRowService.end)}print(e,t,r){let i,n;const s=this._charsetService.charset,o=this._optionsService.rawOptions.screenReaderMode,l=this._bufferService.cols,c=this._coreService.decPrivateModes.wraparound,h=this._coreService.modes.insertMode,d=this._curAttrData;let f=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);this._dirtyRowService.markDirty(this._activeBuffer.y),this._activeBuffer.x&&r-t>0&&2===f.getWidth(this._activeBuffer.x-1)&&f.setCellFromCodePoint(this._activeBuffer.x-1,0,1,d.fg,d.bg,d.extended);for(let p=t;p<r;++p){if(i=e[p],n=this._unicodeService.wcwidth(i),i<127&&s){const e=s[String.fromCharCode(i)];e&&(i=e.charCodeAt(0))}if(o&&this._onA11yChar.fire((0,a.stringFromCodePoint)(i)),void 0!==this._currentLinkId&&this._oscLinkService.addLineToLink(this._currentLinkId,this._activeBuffer.ybase+this._activeBuffer.y),n||!this._activeBuffer.x){if(this._activeBuffer.x+n-1>=l)if(c){for(;this._activeBuffer.x<l;)f.setCellFromCodePoint(this._activeBuffer.x++,0,1,d.fg,d.bg,d.extended);this._activeBuffer.x=0,this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData(),!0)):(this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!0),f=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y)}else if(this._activeBuffer.x=l-1,2===n)continue;if(h&&(f.insertCells(this._activeBuffer.x,n,this._activeBuffer.getNullCell(d),d),2===f.getWidth(l-1)&&f.setCellFromCodePoint(l-1,u.NULL_CELL_CODE,u.NULL_CELL_WIDTH,d.fg,d.bg,d.extended)),f.setCellFromCodePoint(this._activeBuffer.x++,i,n,d.fg,d.bg,d.extended),n>0)for(;--n;)f.setCellFromCodePoint(this._activeBuffer.x++,0,0,d.fg,d.bg,d.extended)}else f.getWidth(this._activeBuffer.x-1)?f.addCodepointToCell(this._activeBuffer.x-1,i):f.addCodepointToCell(this._activeBuffer.x-2,i)}r-t>0&&(f.loadCell(this._activeBuffer.x-1,this._workCell),2===this._workCell.getWidth()||this._workCell.getCode()>65535?this._parser.precedingCodepoint=0:this._workCell.isCombined()?this._parser.precedingCodepoint=this._workCell.getChars().charCodeAt(0):this._parser.precedingCodepoint=this._workCell.content),this._activeBuffer.x<l&&r-t>0&&0===f.getWidth(this._activeBuffer.x)&&!f.hasContent(this._activeBuffer.x)&&f.setCellFromCodePoint(this._activeBuffer.x,0,1,d.fg,d.bg,d.extended),this._dirtyRowService.markDirty(this._activeBuffer.y)}registerCsiHandler(e,t){return"t"!==e.final||e.prefix||e.intermediates?this._parser.registerCsiHandler(e,t):this._parser.registerCsiHandler(e,(e=>!b(e.params[0],this._optionsService.rawOptions.windowOptions)||t(e)))}registerDcsHandler(e,t){return this._parser.registerDcsHandler(e,new v.DcsHandler(t))}registerEscHandler(e,t){return this._parser.registerEscHandler(e,t)}registerOscHandler(e,t){return this._parser.registerOscHandler(e,new p.OscHandler(t))}bell(){return this._onRequestBell.fire(),!0}lineFeed(){return this._dirtyRowService.markDirty(this._activeBuffer.y),this._optionsService.rawOptions.convertEol&&(this._activeBuffer.x=0),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.x>=this._bufferService.cols&&this._activeBuffer.x--,this._dirtyRowService.markDirty(this._activeBuffer.y),this._onLineFeed.fire(),!0}carriageReturn(){return this._activeBuffer.x=0,!0}backspace(){var e;if(!this._coreService.decPrivateModes.reverseWraparound)return this._restrictCursor(),this._activeBuffer.x>0&&this._activeBuffer.x--,!0;if(this._restrictCursor(this._bufferService.cols),this._activeBuffer.x>0)this._activeBuffer.x--;else if(0===this._activeBuffer.x&&this._activeBuffer.y>this._activeBuffer.scrollTop&&this._activeBuffer.y<=this._activeBuffer.scrollBottom&&(null===(e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y))||void 0===e?void 0:e.isWrapped)){this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.y--,this._activeBuffer.x=this._bufferService.cols-1;const e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);e.hasWidth(this._activeBuffer.x)&&!e.hasContent(this._activeBuffer.x)&&this._activeBuffer.x--}return this._restrictCursor(),!0}tab(){if(this._activeBuffer.x>=this._bufferService.cols)return!0;const e=this._activeBuffer.x;return this._activeBuffer.x=this._activeBuffer.nextStop(),this._optionsService.rawOptions.screenReaderMode&&this._onA11yTab.fire(this._activeBuffer.x-e),!0}shiftOut(){return this._charsetService.setgLevel(1),!0}shiftIn(){return this._charsetService.setgLevel(0),!0}_restrictCursor(e=this._bufferService.cols-1){this._activeBuffer.x=Math.min(e,Math.max(0,this._activeBuffer.x)),this._activeBuffer.y=this._coreService.decPrivateModes.origin?Math.min(this._activeBuffer.scrollBottom,Math.max(this._activeBuffer.scrollTop,this._activeBuffer.y)):Math.min(this._bufferService.rows-1,Math.max(0,this._activeBuffer.y)),this._dirtyRowService.markDirty(this._activeBuffer.y)}_setCursor(e,t){this._dirtyRowService.markDirty(this._activeBuffer.y),this._coreService.decPrivateModes.origin?(this._activeBuffer.x=e,this._activeBuffer.y=this._activeBuffer.scrollTop+t):(this._activeBuffer.x=e,this._activeBuffer.y=t),this._restrictCursor(),this._dirtyRowService.markDirty(this._activeBuffer.y)}_moveCursor(e,t){this._restrictCursor(),this._setCursor(this._activeBuffer.x+e,this._activeBuffer.y+t)}cursorUp(e){const t=this._activeBuffer.y-this._activeBuffer.scrollTop;return t>=0?this._moveCursor(0,-Math.min(t,e.params[0]||1)):this._moveCursor(0,-(e.params[0]||1)),!0}cursorDown(e){const t=this._activeBuffer.scrollBottom-this._activeBuffer.y;return t>=0?this._moveCursor(0,Math.min(t,e.params[0]||1)):this._moveCursor(0,e.params[0]||1),!0}cursorForward(e){return this._moveCursor(e.params[0]||1,0),!0}cursorBackward(e){return this._moveCursor(-(e.params[0]||1),0),!0}cursorNextLine(e){return this.cursorDown(e),this._activeBuffer.x=0,!0}cursorPrecedingLine(e){return this.cursorUp(e),this._activeBuffer.x=0,!0}cursorCharAbsolute(e){return this._setCursor((e.params[0]||1)-1,this._activeBuffer.y),!0}cursorPosition(e){return this._setCursor(e.length>=2?(e.params[1]||1)-1:0,(e.params[0]||1)-1),!0}charPosAbsolute(e){return this._setCursor((e.params[0]||1)-1,this._activeBuffer.y),!0}hPositionRelative(e){return this._moveCursor(e.params[0]||1,0),!0}linePosAbsolute(e){return this._setCursor(this._activeBuffer.x,(e.params[0]||1)-1),!0}vPositionRelative(e){return this._moveCursor(0,e.params[0]||1),!0}hVPosition(e){return this.cursorPosition(e),!0}tabClear(e){const t=e.params[0];return 0===t?delete this._activeBuffer.tabs[this._activeBuffer.x]:3===t&&(this._activeBuffer.tabs={}),!0}cursorForwardTab(e){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let t=e.params[0]||1;for(;t--;)this._activeBuffer.x=this._activeBuffer.nextStop();return!0}cursorBackwardTab(e){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let t=e.params[0]||1;for(;t--;)this._activeBuffer.x=this._activeBuffer.prevStop();return!0}selectProtected(e){const t=e.params[0];return 1===t&&(this._curAttrData.bg|=536870912),2!==t&&0!==t||(this._curAttrData.bg&=-536870913),!0}_eraseInBufferLine(e,t,r,i=!1,n=!1){const s=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);s.replaceCells(t,r,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData(),n),i&&(s.isWrapped=!1)}_resetBufferLine(e,t=!1){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.fill(this._activeBuffer.getNullCell(this._eraseAttrData()),t),this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase+e),r.isWrapped=!1}eraseInDisplay(e,t=!1){let r;switch(this._restrictCursor(this._bufferService.cols),e.params[0]){case 0:for(r=this._activeBuffer.y,this._dirtyRowService.markDirty(r),this._eraseInBufferLine(r++,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,t);r<this._bufferService.rows;r++)this._resetBufferLine(r,t);this._dirtyRowService.markDirty(r);break;case 1:for(r=this._activeBuffer.y,this._dirtyRowService.markDirty(r),this._eraseInBufferLine(r,0,this._activeBuffer.x+1,!0,t),this._activeBuffer.x+1>=this._bufferService.cols&&(this._activeBuffer.lines.get(r+1).isWrapped=!1);r--;)this._resetBufferLine(r,t);this._dirtyRowService.markDirty(0);break;case 2:for(r=this._bufferService.rows,this._dirtyRowService.markDirty(r-1);r--;)this._resetBufferLine(r,t);this._dirtyRowService.markDirty(0);break;case 3:const e=this._activeBuffer.lines.length-this._bufferService.rows;e>0&&(this._activeBuffer.lines.trimStart(e),this._activeBuffer.ybase=Math.max(this._activeBuffer.ybase-e,0),this._activeBuffer.ydisp=Math.max(this._activeBuffer.ydisp-e,0),this._onScroll.fire(0))}return!0}eraseInLine(e,t=!1){switch(this._restrictCursor(this._bufferService.cols),e.params[0]){case 0:this._eraseInBufferLine(this._activeBuffer.y,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,t);break;case 1:this._eraseInBufferLine(this._activeBuffer.y,0,this._activeBuffer.x+1,!1,t);break;case 2:this._eraseInBufferLine(this._activeBuffer.y,0,this._bufferService.cols,!0,t)}return this._dirtyRowService.markDirty(this._activeBuffer.y),!0}insertLines(e){this._restrictCursor();let t=e.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const r=this._activeBuffer.ybase+this._activeBuffer.y,i=this._bufferService.rows-1-this._activeBuffer.scrollBottom,n=this._bufferService.rows-1+this._activeBuffer.ybase-i+1;for(;t--;)this._activeBuffer.lines.splice(n-1,1),this._activeBuffer.lines.splice(r,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}deleteLines(e){this._restrictCursor();let t=e.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const r=this._activeBuffer.ybase+this._activeBuffer.y;let i;for(i=this._bufferService.rows-1-this._activeBuffer.scrollBottom,i=this._bufferService.rows-1+this._activeBuffer.ybase-i;t--;)this._activeBuffer.lines.splice(r,1),this._activeBuffer.lines.splice(i,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}insertChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.insertCells(this._activeBuffer.x,e.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0}deleteChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.deleteCells(this._activeBuffer.x,e.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0}scrollUp(e){let t=e.params[0]||1;for(;t--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollDown(e){let t=e.params[0]||1;for(;t--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,0,this._activeBuffer.getBlankLine(l.DEFAULT_ATTR_DATA));return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollLeft(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.deleteCells(0,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollRight(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.insertCells(0,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}insertColumns(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.insertCells(this._activeBuffer.x,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}deleteColumns(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.deleteCells(this._activeBuffer.x,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}eraseChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.replaceCells(this._activeBuffer.x,this._activeBuffer.x+(e.params[0]||1),this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0}repeatPrecedingCharacter(e){if(!this._parser.precedingCodepoint)return!0;const t=e.params[0]||1,r=new Uint32Array(t);for(let e=0;e<t;++e)r[e]=this._parser.precedingCodepoint;return this.print(r,0,r.length),!0}sendDeviceAttributesPrimary(e){return e.params[0]>0||(this._is("xterm")||this._is("rxvt-unicode")||this._is("screen")?this._coreService.triggerDataEvent(i.C0.ESC+"[?1;2c"):this._is("linux")&&this._coreService.triggerDataEvent(i.C0.ESC+"[?6c")),!0}sendDeviceAttributesSecondary(e){return e.params[0]>0||(this._is("xterm")?this._coreService.triggerDataEvent(i.C0.ESC+"[>0;276;0c"):this._is("rxvt-unicode")?this._coreService.triggerDataEvent(i.C0.ESC+"[>85;95;0c"):this._is("linux")?this._coreService.triggerDataEvent(e.params[0]+"c"):this._is("screen")&&this._coreService.triggerDataEvent(i.C0.ESC+"[>83;40003;0c")),!0}_is(e){return 0===(this._optionsService.rawOptions.termName+"").indexOf(e)}setMode(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 4:this._coreService.modes.insertMode=!0;break;case 20:this._optionsService.options.convertEol=!0}return!0}setModePrivate(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!0;break;case 2:this._charsetService.setgCharset(0,n.DEFAULT_CHARSET),this._charsetService.setgCharset(1,n.DEFAULT_CHARSET),this._charsetService.setgCharset(2,n.DEFAULT_CHARSET),this._charsetService.setgCharset(3,n.DEFAULT_CHARSET);break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(132,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!0,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!0;break;case 12:this._optionsService.options.cursorBlink=!0;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!0;break;case 66:this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire();break;case 9:this._coreMouseService.activeProtocol="X10";break;case 1e3:this._coreMouseService.activeProtocol="VT200";break;case 1002:this._coreMouseService.activeProtocol="DRAG";break;case 1003:this._coreMouseService.activeProtocol="ANY";break;case 1004:this._coreService.decPrivateModes.sendFocus=!0,this._onRequestSendFocus.fire();break;case 1005:this._logService.debug("DECSET 1005 not supported (see #2507)");break;case 1006:this._coreMouseService.activeEncoding="SGR";break;case 1015:this._logService.debug("DECSET 1015 not supported (see #2507)");break;case 1016:this._coreMouseService.activeEncoding="SGR_PIXELS";break;case 25:this._coreService.isCursorHidden=!1;break;case 1048:this.saveCursor();break;case 1049:this.saveCursor();case 47:case 1047:this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!0}return!0}resetMode(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 4:this._coreService.modes.insertMode=!1;break;case 20:this._optionsService.options.convertEol=!1}return!0}resetModePrivate(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!1;break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(80,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!1,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!1;break;case 12:this._optionsService.options.cursorBlink=!1;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!1;break;case 66:this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire();break;case 9:case 1e3:case 1002:case 1003:this._coreMouseService.activeProtocol="NONE";break;case 1004:this._coreService.decPrivateModes.sendFocus=!1;break;case 1005:this._logService.debug("DECRST 1005 not supported (see #2507)");break;case 1006:case 1016:this._coreMouseService.activeEncoding="DEFAULT";break;case 1015:this._logService.debug("DECRST 1015 not supported (see #2507)");break;case 25:this._coreService.isCursorHidden=!0;break;case 1048:this.restoreCursor();break;case 1049:case 47:case 1047:this._bufferService.buffers.activateNormalBuffer(),1049===e.params[t]&&this.restoreCursor(),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!1}return!0}requestMode(e,t){const r=this._coreService.decPrivateModes,{activeProtocol:n,activeEncoding:s}=this._coreMouseService,o=this._coreService,{buffers:a,cols:l}=this._bufferService,{active:c,alt:u}=a,h=this._optionsService.rawOptions,d=e=>e?1:2,f=e.params[0];return p=f,v=t?2===f?3:4===f?d(o.modes.insertMode):12===f?4:20===f?d(h.convertEol):0:1===f?d(r.applicationCursorKeys):3===f?h.windowOptions.setWinLines?80===l?2:132===l?1:0:0:6===f?d(r.origin):7===f?d(r.wraparound):8===f?3:9===f?d("X10"===n):12===f?d(h.cursorBlink):25===f?d(!o.isCursorHidden):45===f?d(r.reverseWraparound):66===f?d(r.applicationKeypad):1e3===f?d("VT200"===n):1002===f?d("DRAG"===n):1003===f?d("ANY"===n):1004===f?d(r.sendFocus):1005===f?4:1006===f?d("SGR"===s):1015===f?4:1016===f?d("SGR_PIXELS"===s):1048===f?1:47===f||1047===f||1049===f?d(c===u):2004===f?d(r.bracketedPasteMode):0,o.triggerDataEvent(`${i.C0.ESC}[${t?"":"?"}${p};${v}$y`),!0;var p,v}_updateAttrColor(e,t,r,i,n){return 2===t?(e|=50331648,e&=-16777216,e|=d.AttributeData.fromColorRGB([r,i,n])):5===t&&(e&=-50331904,e|=33554432|255&r),e}_extractColor(e,t,r){const i=[0,0,-1,0,0,0];let n=0,s=0;do{if(i[s+n]=e.params[t+s],e.hasSubParams(t+s)){const r=e.getSubParams(t+s);let o=0;do{5===i[1]&&(n=1),i[s+o+1+n]=r[o]}while(++o<r.length&&o+s+1+n<i.length);break}if(5===i[1]&&s+n>=2||2===i[1]&&s+n>=5)break;i[1]&&(n=1)}while(++s+t<e.length&&s+n<i.length);for(let e=2;e<i.length;++e)-1===i[e]&&(i[e]=0);switch(i[0]){case 38:r.fg=this._updateAttrColor(r.fg,i[1],i[3],i[4],i[5]);break;case 48:r.bg=this._updateAttrColor(r.bg,i[1],i[3],i[4],i[5]);break;case 58:r.extended=r.extended.clone(),r.extended.underlineColor=this._updateAttrColor(r.extended.underlineColor,i[1],i[3],i[4],i[5])}return s}_processUnderline(e,t){t.extended=t.extended.clone(),(!~e||e>5)&&(e=1),t.extended.underlineStyle=e,t.fg|=268435456,0===e&&(t.fg&=-268435457),t.updateExtended()}charAttributes(e){if(1===e.length&&0===e.params[0])return this._curAttrData.fg=l.DEFAULT_ATTR_DATA.fg,this._curAttrData.bg=l.DEFAULT_ATTR_DATA.bg,!0;const t=e.length;let r;const i=this._curAttrData;for(let n=0;n<t;n++)r=e.params[n],r>=30&&r<=37?(i.fg&=-50331904,i.fg|=16777216|r-30):r>=40&&r<=47?(i.bg&=-50331904,i.bg|=16777216|r-40):r>=90&&r<=97?(i.fg&=-50331904,i.fg|=16777224|r-90):r>=100&&r<=107?(i.bg&=-50331904,i.bg|=16777224|r-100):0===r?(i.fg=l.DEFAULT_ATTR_DATA.fg,i.bg=l.DEFAULT_ATTR_DATA.bg):1===r?i.fg|=134217728:3===r?i.bg|=67108864:4===r?(i.fg|=268435456,this._processUnderline(e.hasSubParams(n)?e.getSubParams(n)[0]:1,i)):5===r?i.fg|=536870912:7===r?i.fg|=67108864:8===r?i.fg|=1073741824:9===r?i.fg|=2147483648:2===r?i.bg|=134217728:21===r?this._processUnderline(2,i):22===r?(i.fg&=-134217729,i.bg&=-134217729):23===r?i.bg&=-67108865:24===r?(i.fg&=-268435457,this._processUnderline(0,i)):25===r?i.fg&=-536870913:27===r?i.fg&=-67108865:28===r?i.fg&=-1073741825:29===r?i.fg&=2147483647:39===r?(i.fg&=-67108864,i.fg|=16777215&l.DEFAULT_ATTR_DATA.fg):49===r?(i.bg&=-67108864,i.bg|=16777215&l.DEFAULT_ATTR_DATA.bg):38===r||48===r||58===r?n+=this._extractColor(e,n,i):59===r?(i.extended=i.extended.clone(),i.extended.underlineColor=-1,i.updateExtended()):100===r?(i.fg&=-67108864,i.fg|=16777215&l.DEFAULT_ATTR_DATA.fg,i.bg&=-67108864,i.bg|=16777215&l.DEFAULT_ATTR_DATA.bg):this._logService.debug("Unknown SGR attribute: %d.",r);return!0}deviceStatus(e){switch(e.params[0]){case 5:this._coreService.triggerDataEvent(`${i.C0.ESC}[0n`);break;case 6:const e=this._activeBuffer.y+1,t=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${i.C0.ESC}[${e};${t}R`)}return!0}deviceStatusPrivate(e){if(6===e.params[0]){const e=this._activeBuffer.y+1,t=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${i.C0.ESC}[?${e};${t}R`)}return!0}softReset(e){return this._coreService.isCursorHidden=!1,this._onRequestSyncScrollBar.fire(),this._activeBuffer.scrollTop=0,this._activeBuffer.scrollBottom=this._bufferService.rows-1,this._curAttrData=l.DEFAULT_ATTR_DATA.clone(),this._coreService.reset(),this._charsetService.reset(),this._activeBuffer.savedX=0,this._activeBuffer.savedY=this._activeBuffer.ybase,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,this._coreService.decPrivateModes.origin=!1,!0}setCursorStyle(e){const t=e.params[0]||1;switch(t){case 1:case 2:this._optionsService.options.cursorStyle="block";break;case 3:case 4:this._optionsService.options.cursorStyle="underline";break;case 5:case 6:this._optionsService.options.cursorStyle="bar"}const r=t%2==1;return this._optionsService.options.cursorBlink=r,!0}setScrollRegion(e){const t=e.params[0]||1;let r;return(e.length<2||(r=e.params[1])>this._bufferService.rows||0===r)&&(r=this._bufferService.rows),r>t&&(this._activeBuffer.scrollTop=t-1,this._activeBuffer.scrollBottom=r-1,this._setCursor(0,0)),!0}windowOptions(e){if(!b(e.params[0],this._optionsService.rawOptions.windowOptions))return!0;const t=e.length>1?e.params[1]:0;switch(e.params[0]){case 14:2!==t&&this._onRequestWindowsOptionsReport.fire(y.GET_WIN_SIZE_PIXELS);break;case 16:this._onRequestWindowsOptionsReport.fire(y.GET_CELL_SIZE_PIXELS);break;case 18:this._bufferService&&this._coreService.triggerDataEvent(`${i.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);break;case 22:0!==t&&2!==t||(this._windowTitleStack.push(this._windowTitle),this._windowTitleStack.length>10&&this._windowTitleStack.shift()),0!==t&&1!==t||(this._iconNameStack.push(this._iconName),this._iconNameStack.length>10&&this._iconNameStack.shift());break;case 23:0!==t&&2!==t||this._windowTitleStack.length&&this.setTitle(this._windowTitleStack.pop()),0!==t&&1!==t||this._iconNameStack.length&&this.setIconName(this._iconNameStack.pop())}return!0}saveCursor(e){return this._activeBuffer.savedX=this._activeBuffer.x,this._activeBuffer.savedY=this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,!0}restoreCursor(e){return this._activeBuffer.x=this._activeBuffer.savedX||0,this._activeBuffer.y=Math.max(this._activeBuffer.savedY-this._activeBuffer.ybase,0),this._curAttrData.fg=this._activeBuffer.savedCurAttrData.fg,this._curAttrData.bg=this._activeBuffer.savedCurAttrData.bg,this._charsetService.charset=this._savedCharset,this._activeBuffer.savedCharset&&(this._charsetService.charset=this._activeBuffer.savedCharset),this._restrictCursor(),!0}setTitle(e){return this._windowTitle=e,this._onTitleChange.fire(e),!0}setIconName(e){return this._iconName=e,!0}setOrReportIndexedColor(e){const t=[],r=e.split(";");for(;r.length>1;){const e=r.shift(),i=r.shift();if(/^\d+$/.exec(e)){const r=parseInt(e);if(0<=r&&r<256)if("?"===i)t.push({type:0,index:r});else{const e=(0,g.parseColor)(i);e&&t.push({type:1,index:r,color:e})}}}return t.length&&this._onColor.fire(t),!0}setHyperlink(e){const t=e.split(";");return!(t.length<2)&&(t[1]?this._createHyperlink(t[0],t[1]):!t[0]&&this._finishHyperlink())}_createHyperlink(e,t){void 0!==this._currentLinkId&&this._finishHyperlink();const r=e.split(":");let i;const n=r.findIndex((e=>e.startsWith("id=")));return-1!==n&&(i=r[n].slice(3)||void 0),this._curAttrData.extended=this._curAttrData.extended.clone(),this._currentLinkId=this._oscLinkService.registerLink({id:i,uri:t}),this._curAttrData.extended.urlId=this._currentLinkId,this._curAttrData.updateExtended(),!0}_finishHyperlink(){return this._curAttrData.extended=this._curAttrData.extended.clone(),this._curAttrData.extended.urlId=0,this._curAttrData.updateExtended(),this._currentLinkId=void 0,!0}_setOrReportSpecialColor(e,t){const r=e.split(";");for(let e=0;e<r.length&&!(t>=this._specialColors.length);++e,++t)if("?"===r[e])this._onColor.fire([{type:0,index:this._specialColors[t]}]);else{const i=(0,g.parseColor)(r[e]);i&&this._onColor.fire([{type:1,index:this._specialColors[t],color:i}])}return!0}setOrReportFgColor(e){return this._setOrReportSpecialColor(e,0)}setOrReportBgColor(e){return this._setOrReportSpecialColor(e,1)}setOrReportCursorColor(e){return this._setOrReportSpecialColor(e,2)}restoreIndexedColor(e){if(!e)return this._onColor.fire([{type:2}]),!0;const t=[],r=e.split(";");for(let e=0;e<r.length;++e)if(/^\d+$/.exec(r[e])){const i=parseInt(r[e]);0<=i&&i<256&&t.push({type:2,index:i})}return t.length&&this._onColor.fire(t),!0}restoreFgColor(e){return this._onColor.fire([{type:2,index:256}]),!0}restoreBgColor(e){return this._onColor.fire([{type:2,index:257}]),!0}restoreCursorColor(e){return this._onColor.fire([{type:2,index:258}]),!0}nextLine(){return this._activeBuffer.x=0,this.index(),!0}keypadApplicationMode(){return this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire(),!0}keypadNumericMode(){return this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire(),!0}selectDefaultCharset(){return this._charsetService.setgLevel(0),this._charsetService.setgCharset(0,n.DEFAULT_CHARSET),!0}selectCharset(e){return 2!==e.length?(this.selectDefaultCharset(),!0):("/"===e[0]||this._charsetService.setgCharset(_[e[0]],n.CHARSETS[e[1]]||n.DEFAULT_CHARSET),!0)}index(){return this._restrictCursor(),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._restrictCursor(),!0}tabSet(){return this._activeBuffer.tabs[this._activeBuffer.x]=!0,!0}reverseIndex(){if(this._restrictCursor(),this._activeBuffer.y===this._activeBuffer.scrollTop){const e=this._activeBuffer.scrollBottom-this._activeBuffer.scrollTop;this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase+this._activeBuffer.y,e,1),this._activeBuffer.lines.set(this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.getBlankLine(this._eraseAttrData())),this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom)}else this._activeBuffer.y--,this._restrictCursor();return!0}fullReset(){return this._parser.reset(),this._onRequestReset.fire(),!0}reset(){this._curAttrData=l.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=l.DEFAULT_ATTR_DATA.clone()}_eraseAttrData(){return this._eraseAttrDataInternal.bg&=-67108864,this._eraseAttrDataInternal.bg|=67108863&this._curAttrData.bg,this._eraseAttrDataInternal}setgLevel(e){return this._charsetService.setgLevel(e),!0}screenAlignmentPattern(){const e=new h.CellData;e.content=1<<22|"E".charCodeAt(0),e.fg=this._curAttrData.fg,e.bg=this._curAttrData.bg,this._setCursor(0,0);for(let t=0;t<this._bufferService.rows;++t){const r=this._activeBuffer.ybase+this._activeBuffer.y+t,i=this._activeBuffer.lines.get(r);i&&(i.fill(e),i.isWrapped=!1)}return this._dirtyRowService.markAllDirty(),this._setCursor(0,0),!0}requestStatusString(e,t){const r=this._bufferService.buffer,n=this._optionsService.rawOptions;return(e=>(this._coreService.triggerDataEvent(`${i.C0.ESC}${e}${i.C0.ESC}\\`),!0))('"q'===e?`P1$r${this._curAttrData.isProtected()?1:0}"q`:'"p'===e?'P1$r61;1"p':"r"===e?`P1$r${r.scrollTop+1};${r.scrollBottom+1}r`:"m"===e?"P1$r0m":" q"===e?`P1$r${{block:2,underline:4,bar:6}[n.cursorStyle]-(n.cursorBlink?1:0)} q`:"P0$r")}}t.InputHandler=S},844:(e,t)=>{function r(e){for(const t of e)t.dispose();e.length=0}Object.defineProperty(t,"__esModule",{value:!0}),t.getDisposeArrayDisposable=t.disposeArray=t.toDisposable=t.Disposable=void 0,t.Disposable=class{constructor(){this._disposables=[],this._isDisposed=!1}dispose(){this._isDisposed=!0;for(const e of this._disposables)e.dispose();this._disposables.length=0}register(e){return this._disposables.push(e),e}unregister(e){const t=this._disposables.indexOf(e);-1!==t&&this._disposables.splice(t,1)}},t.toDisposable=function(e){return{dispose:e}},t.disposeArray=r,t.getDisposeArrayDisposable=function(e){return{dispose:()=>r(e)}}},1505:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FourKeyMap=t.TwoKeyMap=void 0;class r{constructor(){this._data={}}set(e,t,r){this._data[e]||(this._data[e]={}),this._data[e][t]=r}get(e,t){return this._data[e]?this._data[e][t]:void 0}clear(){this._data={}}}t.TwoKeyMap=r,t.FourKeyMap=class{constructor(){this._data=new r}set(e,t,i,n,s){this._data.get(e,t)||this._data.set(e,t,new r),this._data.get(e,t).set(i,n,s)}get(e,t,r,i){var n;return null===(n=this._data.get(e,t))||void 0===n?void 0:n.get(r,i)}clear(){this._data.clear()}}},6114:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isLinux=t.isWindows=t.isIphone=t.isIpad=t.isMac=t.isSafari=t.isLegacyEdge=t.isFirefox=void 0;const r="undefined"==typeof navigator,i=r?"node":navigator.userAgent,n=r?"node":navigator.platform;t.isFirefox=i.includes("Firefox"),t.isLegacyEdge=i.includes("Edge"),t.isSafari=/^((?!chrome|android).)*safari/i.test(i),t.isMac=["Macintosh","MacIntel","MacPPC","Mac68K"].includes(n),t.isIpad="iPad"===n,t.isIphone="iPhone"===n,t.isWindows=["Windows","Win16","Win32","WinCE"].includes(n),t.isLinux=n.indexOf("Linux")>=0},6106:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SortedList=void 0;let r=0;t.SortedList=class{constructor(e){this._getKey=e,this._array=[]}clear(){this._array.length=0}insert(e){0!==this._array.length?(r=this._search(this._getKey(e),0,this._array.length-1),this._array.splice(r,0,e)):this._array.push(e)}delete(e){if(0===this._array.length)return!1;const t=this._getKey(e);if(void 0===t)return!1;if(r=this._search(t,0,this._array.length-1),-1===r)return!1;if(this._getKey(this._array[r])!==t)return!1;do{if(this._array[r]===e)return this._array.splice(r,1),!0}while(++r<this._array.length&&this._getKey(this._array[r])===t);return!1}*getKeyIterator(e){if(0!==this._array.length&&(r=this._search(e,0,this._array.length-1),!(r<0||r>=this._array.length)&&this._getKey(this._array[r])===e))do{yield this._array[r]}while(++r<this._array.length&&this._getKey(this._array[r])===e)}forEachByKey(e,t){if(0!==this._array.length&&(r=this._search(e,0,this._array.length-1),!(r<0||r>=this._array.length)&&this._getKey(this._array[r])===e))do{t(this._array[r])}while(++r<this._array.length&&this._getKey(this._array[r])===e)}values(){return this._array.values()}_search(e,t,r){if(r<t)return t;let i=Math.floor((t+r)/2);const n=this._getKey(this._array[i]);if(n>e)return this._search(e,t,i-1);if(n<e)return this._search(e,i+1,r);for(;i>0&&this._getKey(this._array[i-1])===e;)i--;return i}}},8273:(e,t)=>{function r(e,t,r=0,i=e.length){if(r>=e.length)return e;r=(e.length+r)%e.length,i=i>=e.length?e.length:(e.length+i)%e.length;for(let n=r;n<i;++n)e[n]=t;return e}Object.defineProperty(t,"__esModule",{value:!0}),t.concat=t.fillFallback=t.fill=void 0,t.fill=function(e,t,i,n){return e.fill?e.fill(t,i,n):r(e,t,i,n)},t.fillFallback=r,t.concat=function(e,t){const r=new e.constructor(e.length+t.length);return r.set(e),r.set(t,e.length),r}},9282:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateWindowsModeWrappedState=void 0;const i=r(643);t.updateWindowsModeWrappedState=function(e){const t=e.buffer.lines.get(e.buffer.ybase+e.buffer.y-1),r=null==t?void 0:t.get(e.cols-1),n=e.buffer.lines.get(e.buffer.ybase+e.buffer.y);n&&r&&(n.isWrapped=r[i.CHAR_DATA_CODE_INDEX]!==i.NULL_CELL_CODE&&r[i.CHAR_DATA_CODE_INDEX]!==i.WHITESPACE_CELL_CODE)}},3734:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExtendedAttrs=t.AttributeData=void 0;class r{constructor(){this.fg=0,this.bg=0,this.extended=new i}static toColorRGB(e){return[e>>>16&255,e>>>8&255,255&e]}static fromColorRGB(e){return(255&e[0])<<16|(255&e[1])<<8|255&e[2]}clone(){const e=new r;return e.fg=this.fg,e.bg=this.bg,e.extended=this.extended.clone(),e}isInverse(){return 67108864&this.fg}isBold(){return 134217728&this.fg}isUnderline(){return this.hasExtendedAttrs()&&0!==this.extended.underlineStyle?1:268435456&this.fg}isBlink(){return 536870912&this.fg}isInvisible(){return 1073741824&this.fg}isItalic(){return 67108864&this.bg}isDim(){return 134217728&this.bg}isStrikethrough(){return 2147483648&this.fg}isProtected(){return 536870912&this.bg}getFgColorMode(){return 50331648&this.fg}getBgColorMode(){return 50331648&this.bg}isFgRGB(){return 50331648==(50331648&this.fg)}isBgRGB(){return 50331648==(50331648&this.bg)}isFgPalette(){return 16777216==(50331648&this.fg)||33554432==(50331648&this.fg)}isBgPalette(){return 16777216==(50331648&this.bg)||33554432==(50331648&this.bg)}isFgDefault(){return 0==(50331648&this.fg)}isBgDefault(){return 0==(50331648&this.bg)}isAttributeDefault(){return 0===this.fg&&0===this.bg}getFgColor(){switch(50331648&this.fg){case 16777216:case 33554432:return 255&this.fg;case 50331648:return 16777215&this.fg;default:return-1}}getBgColor(){switch(50331648&this.bg){case 16777216:case 33554432:return 255&this.bg;case 50331648:return 16777215&this.bg;default:return-1}}hasExtendedAttrs(){return 268435456&this.bg}updateExtended(){this.extended.isEmpty()?this.bg&=-268435457:this.bg|=268435456}getUnderlineColor(){if(268435456&this.bg&&~this.extended.underlineColor)switch(50331648&this.extended.underlineColor){case 16777216:case 33554432:return 255&this.extended.underlineColor;case 50331648:return 16777215&this.extended.underlineColor;default:return this.getFgColor()}return this.getFgColor()}getUnderlineColorMode(){return 268435456&this.bg&&~this.extended.underlineColor?50331648&this.extended.underlineColor:this.getFgColorMode()}isUnderlineColorRGB(){return 268435456&this.bg&&~this.extended.underlineColor?50331648==(50331648&this.extended.underlineColor):this.isFgRGB()}isUnderlineColorPalette(){return 268435456&this.bg&&~this.extended.underlineColor?16777216==(50331648&this.extended.underlineColor)||33554432==(50331648&this.extended.underlineColor):this.isFgPalette()}isUnderlineColorDefault(){return 268435456&this.bg&&~this.extended.underlineColor?0==(50331648&this.extended.underlineColor):this.isFgDefault()}getUnderlineStyle(){return 268435456&this.fg?268435456&this.bg?this.extended.underlineStyle:1:0}}t.AttributeData=r;class i{constructor(e=0,t=0){this._ext=0,this._urlId=0,this._ext=e,this._urlId=t}get ext(){return this._urlId?-469762049&this._ext|this.underlineStyle<<26:this._ext}set ext(e){this._ext=e}get underlineStyle(){return this._urlId?5:(469762048&this._ext)>>26}set underlineStyle(e){this._ext&=-469762049,this._ext|=e<<26&469762048}get underlineColor(){return 67108863&this._ext}set underlineColor(e){this._ext&=-67108864,this._ext|=67108863&e}get urlId(){return this._urlId}set urlId(e){this._urlId=e}clone(){return new i(this._ext,this._urlId)}isEmpty(){return 0===this.underlineStyle&&0===this._urlId}}t.ExtendedAttrs=i},9092:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferStringIterator=t.Buffer=t.MAX_BUFFER_SIZE=void 0;const i=r(6349),n=r(8437),s=r(511),o=r(643),a=r(4634),l=r(4863),c=r(7116),u=r(3734);t.MAX_BUFFER_SIZE=4294967295,t.Buffer=class{constructor(e,t,r){this._hasScrollback=e,this._optionsService=t,this._bufferService=r,this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.savedY=0,this.savedX=0,this.savedCurAttrData=n.DEFAULT_ATTR_DATA.clone(),this.savedCharset=c.DEFAULT_CHARSET,this.markers=[],this._nullCell=s.CellData.fromCharData([0,o.NULL_CELL_CHAR,o.NULL_CELL_WIDTH,o.NULL_CELL_CODE]),this._whitespaceCell=s.CellData.fromCharData([0,o.WHITESPACE_CELL_CHAR,o.WHITESPACE_CELL_WIDTH,o.WHITESPACE_CELL_CODE]),this._isClearing=!1,this._cols=this._bufferService.cols,this._rows=this._bufferService.rows,this.lines=new i.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}getNullCell(e){return e?(this._nullCell.fg=e.fg,this._nullCell.bg=e.bg,this._nullCell.extended=e.extended):(this._nullCell.fg=0,this._nullCell.bg=0,this._nullCell.extended=new u.ExtendedAttrs),this._nullCell}getWhitespaceCell(e){return e?(this._whitespaceCell.fg=e.fg,this._whitespaceCell.bg=e.bg,this._whitespaceCell.extended=e.extended):(this._whitespaceCell.fg=0,this._whitespaceCell.bg=0,this._whitespaceCell.extended=new u.ExtendedAttrs),this._whitespaceCell}getBlankLine(e,t){return new n.BufferLine(this._bufferService.cols,this.getNullCell(e),t)}get hasScrollback(){return this._hasScrollback&&this.lines.maxLength>this._rows}get isCursorInViewport(){const e=this.ybase+this.y-this.ydisp;return e>=0&&e<this._rows}_getCorrectBufferLength(e){if(!this._hasScrollback)return e;const r=e+this._optionsService.rawOptions.scrollback;return r>t.MAX_BUFFER_SIZE?t.MAX_BUFFER_SIZE:r}fillViewportRows(e){if(0===this.lines.length){void 0===e&&(e=n.DEFAULT_ATTR_DATA);let t=this._rows;for(;t--;)this.lines.push(this.getBlankLine(e))}}clear(){this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.lines=new i.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}resize(e,t){const r=this.getNullCell(n.DEFAULT_ATTR_DATA),i=this._getCorrectBufferLength(t);if(i>this.lines.maxLength&&(this.lines.maxLength=i),this.lines.length>0){if(this._cols<e)for(let t=0;t<this.lines.length;t++)this.lines.get(t).resize(e,r);let s=0;if(this._rows<t)for(let i=this._rows;i<t;i++)this.lines.length<t+this.ybase&&(this._optionsService.rawOptions.windowsMode?this.lines.push(new n.BufferLine(e,r)):this.ybase>0&&this.lines.length<=this.ybase+this.y+s+1?(this.ybase--,s++,this.ydisp>0&&this.ydisp--):this.lines.push(new n.BufferLine(e,r)));else for(let e=this._rows;e>t;e--)this.lines.length>t+this.ybase&&(this.lines.length>this.ybase+this.y+1?this.lines.pop():(this.ybase++,this.ydisp++));if(i<this.lines.maxLength){const e=this.lines.length-i;e>0&&(this.lines.trimStart(e),this.ybase=Math.max(this.ybase-e,0),this.ydisp=Math.max(this.ydisp-e,0),this.savedY=Math.max(this.savedY-e,0)),this.lines.maxLength=i}this.x=Math.min(this.x,e-1),this.y=Math.min(this.y,t-1),s&&(this.y+=s),this.savedX=Math.min(this.savedX,e-1),this.scrollTop=0}if(this.scrollBottom=t-1,this._isReflowEnabled&&(this._reflow(e,t),this._cols>e))for(let t=0;t<this.lines.length;t++)this.lines.get(t).resize(e,r);this._cols=e,this._rows=t}get _isReflowEnabled(){return this._hasScrollback&&!this._optionsService.rawOptions.windowsMode}_reflow(e,t){this._cols!==e&&(e>this._cols?this._reflowLarger(e,t):this._reflowSmaller(e,t))}_reflowLarger(e,t){const r=(0,a.reflowLargerGetLinesToRemove)(this.lines,this._cols,e,this.ybase+this.y,this.getNullCell(n.DEFAULT_ATTR_DATA));if(r.length>0){const i=(0,a.reflowLargerCreateNewLayout)(this.lines,r);(0,a.reflowLargerApplyNewLayout)(this.lines,i.layout),this._reflowLargerAdjustViewport(e,t,i.countRemoved)}}_reflowLargerAdjustViewport(e,t,r){const i=this.getNullCell(n.DEFAULT_ATTR_DATA);let s=r;for(;s-- >0;)0===this.ybase?(this.y>0&&this.y--,this.lines.length<t&&this.lines.push(new n.BufferLine(e,i))):(this.ydisp===this.ybase&&this.ydisp--,this.ybase--);this.savedY=Math.max(this.savedY-r,0)}_reflowSmaller(e,t){const r=this.getNullCell(n.DEFAULT_ATTR_DATA),i=[];let s=0;for(let o=this.lines.length-1;o>=0;o--){let l=this.lines.get(o);if(!l||!l.isWrapped&&l.getTrimmedLength()<=e)continue;const c=[l];for(;l.isWrapped&&o>0;)l=this.lines.get(--o),c.unshift(l);const u=this.ybase+this.y;if(u>=o&&u<o+c.length)continue;const h=c[c.length-1].getTrimmedLength(),d=(0,a.reflowSmallerGetNewLineLengths)(c,this._cols,e),f=d.length-c.length;let p;p=0===this.ybase&&this.y!==this.lines.length-1?Math.max(0,this.y-this.lines.maxLength+f):Math.max(0,this.lines.length-this.lines.maxLength+f);const v=[];for(let e=0;e<f;e++){const e=this.getBlankLine(n.DEFAULT_ATTR_DATA,!0);v.push(e)}v.length>0&&(i.push({start:o+c.length+s,newLines:v}),s+=v.length),c.push(...v);let g=d.length-1,_=d[g];0===_&&(g--,_=d[g]);let m=c.length-f-1,b=h;for(;m>=0;){const e=Math.min(b,_);if(void 0===c[g])break;if(c[g].copyCellsFrom(c[m],b-e,_-e,e,!0),_-=e,0===_&&(g--,_=d[g]),b-=e,0===b){m--;const e=Math.max(m,0);b=(0,a.getWrappedLineTrimmedLength)(c,e,this._cols)}}for(let t=0;t<c.length;t++)d[t]<e&&c[t].setCell(d[t],r);let y=f-p;for(;y-- >0;)0===this.ybase?this.y<t-1?(this.y++,this.lines.pop()):(this.ybase++,this.ydisp++):this.ybase<Math.min(this.lines.maxLength,this.lines.length+s)-t&&(this.ybase===this.ydisp&&this.ydisp++,this.ybase++);this.savedY=Math.min(this.savedY+f,this.ybase+t-1)}if(i.length>0){const e=[],t=[];for(let e=0;e<this.lines.length;e++)t.push(this.lines.get(e));const r=this.lines.length;let n=r-1,o=0,a=i[o];this.lines.length=Math.min(this.lines.maxLength,this.lines.length+s);let l=0;for(let c=Math.min(this.lines.maxLength-1,r+s-1);c>=0;c--)if(a&&a.start>n+l){for(let e=a.newLines.length-1;e>=0;e--)this.lines.set(c--,a.newLines[e]);c++,e.push({index:n+1,amount:a.newLines.length}),l+=a.newLines.length,a=i[++o]}else this.lines.set(c,t[n--]);let c=0;for(let t=e.length-1;t>=0;t--)e[t].index+=c,this.lines.onInsertEmitter.fire(e[t]),c+=e[t].amount;const u=Math.max(0,r+s-this.lines.maxLength);u>0&&this.lines.onTrimEmitter.fire(u)}}stringIndexToBufferIndex(e,t,r=!1){for(;t;){const i=this.lines.get(e);if(!i)return[-1,-1];const n=r?i.getTrimmedLength():i.length;for(let r=0;r<n;++r)if(i.get(r)[o.CHAR_DATA_WIDTH_INDEX]&&(t-=i.get(r)[o.CHAR_DATA_CHAR_INDEX].length||1),t<0)return[e,r];e++}return[e,0]}translateBufferLineToString(e,t,r=0,i){const n=this.lines.get(e);return n?n.translateToString(t,r,i):""}getWrappedRangeForLine(e){let t=e,r=e;for(;t>0&&this.lines.get(t).isWrapped;)t--;for(;r+1<this.lines.length&&this.lines.get(r+1).isWrapped;)r++;return{first:t,last:r}}setupTabStops(e){for(null!=e?this.tabs[e]||(e=this.prevStop(e)):(this.tabs={},e=0);e<this._cols;e+=this._optionsService.rawOptions.tabStopWidth)this.tabs[e]=!0}prevStop(e){for(null==e&&(e=this.x);!this.tabs[--e]&&e>0;);return e>=this._cols?this._cols-1:e<0?0:e}nextStop(e){for(null==e&&(e=this.x);!this.tabs[++e]&&e<this._cols;);return e>=this._cols?this._cols-1:e<0?0:e}clearMarkers(e){this._isClearing=!0;for(let t=0;t<this.markers.length;t++)this.markers[t].line===e&&(this.markers[t].dispose(),this.markers.splice(t--,1));this._isClearing=!1}clearAllMarkers(){this._isClearing=!0;for(let e=0;e<this.markers.length;e++)this.markers[e].dispose(),this.markers.splice(e--,1);this._isClearing=!1}addMarker(e){const t=new l.Marker(e);return this.markers.push(t),t.register(this.lines.onTrim((e=>{t.line-=e,t.line<0&&t.dispose()}))),t.register(this.lines.onInsert((e=>{t.line>=e.index&&(t.line+=e.amount)}))),t.register(this.lines.onDelete((e=>{t.line>=e.index&&t.line<e.index+e.amount&&t.dispose(),t.line>e.index&&(t.line-=e.amount)}))),t.register(t.onDispose((()=>this._removeMarker(t)))),t}_removeMarker(e){this._isClearing||this.markers.splice(this.markers.indexOf(e),1)}iterator(e,t,r,i,n){return new h(this,e,t,r,i,n)}};class h{constructor(e,t,r=0,i=e.lines.length,n=0,s=0){this._buffer=e,this._trimRight=t,this._startIndex=r,this._endIndex=i,this._startOverscan=n,this._endOverscan=s,this._startIndex<0&&(this._startIndex=0),this._endIndex>this._buffer.lines.length&&(this._endIndex=this._buffer.lines.length),this._current=this._startIndex}hasNext(){return this._current<this._endIndex}next(){const e=this._buffer.getWrappedRangeForLine(this._current);e.first<this._startIndex-this._startOverscan&&(e.first=this._startIndex-this._startOverscan),e.last>this._endIndex+this._endOverscan&&(e.last=this._endIndex+this._endOverscan),e.first=Math.max(e.first,0),e.last=Math.min(e.last,this._buffer.lines.length);let t="";for(let r=e.first;r<=e.last;++r)t+=this._buffer.translateBufferLineToString(r,this._trimRight);return this._current=e.last+1,{range:e,content:t}}}t.BufferStringIterator=h},8437:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferLine=t.DEFAULT_ATTR_DATA=void 0;const i=r(482),n=r(643),s=r(511),o=r(3734);t.DEFAULT_ATTR_DATA=Object.freeze(new o.AttributeData);const a={startIndex:0};class l{constructor(e,t,r=!1){this.isWrapped=r,this._combined={},this._extendedAttrs={},this._data=new Uint32Array(3*e);const i=t||s.CellData.fromCharData([0,n.NULL_CELL_CHAR,n.NULL_CELL_WIDTH,n.NULL_CELL_CODE]);for(let t=0;t<e;++t)this.setCell(t,i);this.length=e}get(e){const t=this._data[3*e+0],r=2097151&t;return[this._data[3*e+1],2097152&t?this._combined[e]:r?(0,i.stringFromCodePoint)(r):"",t>>22,2097152&t?this._combined[e].charCodeAt(this._combined[e].length-1):r]}set(e,t){this._data[3*e+1]=t[n.CHAR_DATA_ATTR_INDEX],t[n.CHAR_DATA_CHAR_INDEX].length>1?(this._combined[e]=t[1],this._data[3*e+0]=2097152|e|t[n.CHAR_DATA_WIDTH_INDEX]<<22):this._data[3*e+0]=t[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|t[n.CHAR_DATA_WIDTH_INDEX]<<22}getWidth(e){return this._data[3*e+0]>>22}hasWidth(e){return 12582912&this._data[3*e+0]}getFg(e){return this._data[3*e+1]}getBg(e){return this._data[3*e+2]}hasContent(e){return 4194303&this._data[3*e+0]}getCodePoint(e){const t=this._data[3*e+0];return 2097152&t?this._combined[e].charCodeAt(this._combined[e].length-1):2097151&t}isCombined(e){return 2097152&this._data[3*e+0]}getString(e){const t=this._data[3*e+0];return 2097152&t?this._combined[e]:2097151&t?(0,i.stringFromCodePoint)(2097151&t):""}isProtected(e){return 536870912&this._data[3*e+2]}loadCell(e,t){return a.startIndex=3*e,t.content=this._data[a.startIndex+0],t.fg=this._data[a.startIndex+1],t.bg=this._data[a.startIndex+2],2097152&t.content&&(t.combinedData=this._combined[e]),268435456&t.bg&&(t.extended=this._extendedAttrs[e]),t}setCell(e,t){2097152&t.content&&(this._combined[e]=t.combinedData),268435456&t.bg&&(this._extendedAttrs[e]=t.extended),this._data[3*e+0]=t.content,this._data[3*e+1]=t.fg,this._data[3*e+2]=t.bg}setCellFromCodePoint(e,t,r,i,n,s){268435456&n&&(this._extendedAttrs[e]=s),this._data[3*e+0]=t|r<<22,this._data[3*e+1]=i,this._data[3*e+2]=n}addCodepointToCell(e,t){let r=this._data[3*e+0];2097152&r?this._combined[e]+=(0,i.stringFromCodePoint)(t):(2097151&r?(this._combined[e]=(0,i.stringFromCodePoint)(2097151&r)+(0,i.stringFromCodePoint)(t),r&=-2097152,r|=2097152):r=t|1<<22,this._data[3*e+0]=r)}insertCells(e,t,r,i){if((e%=this.length)&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length-e){const i=new s.CellData;for(let r=this.length-e-t-1;r>=0;--r)this.setCell(e+t+r,this.loadCell(e+r,i));for(let i=0;i<t;++i)this.setCell(e+i,r)}else for(let t=e;t<this.length;++t)this.setCell(t,r);2===this.getWidth(this.length-1)&&this.setCellFromCodePoint(this.length-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs)}deleteCells(e,t,r,i){if(e%=this.length,t<this.length-e){const i=new s.CellData;for(let r=0;r<this.length-e-t;++r)this.setCell(e+r,this.loadCell(e+t+r,i));for(let e=this.length-t;e<this.length;++e)this.setCell(e,r)}else for(let t=e;t<this.length;++t)this.setCell(t,r);e&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),0!==this.getWidth(e)||this.hasContent(e)||this.setCellFromCodePoint(e,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs)}replaceCells(e,t,r,i,n=!1){if(n)for(e&&2===this.getWidth(e-1)&&!this.isProtected(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length&&2===this.getWidth(t-1)&&!this.isProtected(t)&&this.setCellFromCodePoint(t,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs);e<t&&e<this.length;)this.isProtected(e)||this.setCell(e,r),e++;else for(e&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length&&2===this.getWidth(t-1)&&this.setCellFromCodePoint(t,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs);e<t&&e<this.length;)this.setCell(e++,r)}resize(e,t){if(e!==this.length){if(e>this.length){const r=new Uint32Array(3*e);this.length&&(3*e<this._data.length?r.set(this._data.subarray(0,3*e)):r.set(this._data)),this._data=r;for(let r=this.length;r<e;++r)this.setCell(r,t)}else if(e){const t=new Uint32Array(3*e);t.set(this._data.subarray(0,3*e)),this._data=t;const r=Object.keys(this._combined);for(let t=0;t<r.length;t++){const i=parseInt(r[t],10);i>=e&&delete this._combined[i]}}else this._data=new Uint32Array(0),this._combined={};this.length=e}}fill(e,t=!1){if(t)for(let t=0;t<this.length;++t)this.isProtected(t)||this.setCell(t,e);else{this._combined={},this._extendedAttrs={};for(let t=0;t<this.length;++t)this.setCell(t,e)}}copyFrom(e){this.length!==e.length?this._data=new Uint32Array(e._data):this._data.set(e._data),this.length=e.length,this._combined={};for(const t in e._combined)this._combined[t]=e._combined[t];this._extendedAttrs={};for(const t in e._extendedAttrs)this._extendedAttrs[t]=e._extendedAttrs[t];this.isWrapped=e.isWrapped}clone(){const e=new l(0);e._data=new Uint32Array(this._data),e.length=this.length;for(const t in this._combined)e._combined[t]=this._combined[t];for(const t in this._extendedAttrs)e._extendedAttrs[t]=this._extendedAttrs[t];return e.isWrapped=this.isWrapped,e}getTrimmedLength(){for(let e=this.length-1;e>=0;--e)if(4194303&this._data[3*e+0])return e+(this._data[3*e+0]>>22);return 0}copyCellsFrom(e,t,r,i,n){const s=e._data;if(n)for(let n=i-1;n>=0;n--){for(let e=0;e<3;e++)this._data[3*(r+n)+e]=s[3*(t+n)+e];268435456&s[3*(t+n)+2]&&(this._extendedAttrs[r+n]=e._extendedAttrs[t+n])}else for(let n=0;n<i;n++){for(let e=0;e<3;e++)this._data[3*(r+n)+e]=s[3*(t+n)+e];268435456&s[3*(t+n)+2]&&(this._extendedAttrs[r+n]=e._extendedAttrs[t+n])}const o=Object.keys(e._combined);for(let i=0;i<o.length;i++){const n=parseInt(o[i],10);n>=t&&(this._combined[n-t+r]=e._combined[n])}}translateToString(e=!1,t=0,r=this.length){e&&(r=Math.min(r,this.getTrimmedLength()));let s="";for(;t<r;){const e=this._data[3*t+0],r=2097151&e;s+=2097152&e?this._combined[t]:r?(0,i.stringFromCodePoint)(r):n.WHITESPACE_CELL_CHAR,t+=e>>22||1}return s}}t.BufferLine=l},4841:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getRangeLength=void 0,t.getRangeLength=function(e,t){if(e.start.y>e.end.y)throw new Error(`Buffer range end (${e.end.x}, ${e.end.y}) cannot be before start (${e.start.x}, ${e.start.y})`);return t*(e.end.y-e.start.y)+(e.end.x-e.start.x+1)}},4634:(e,t)=>{function r(e,t,r){if(t===e.length-1)return e[t].getTrimmedLength();const i=!e[t].hasContent(r-1)&&1===e[t].getWidth(r-1),n=2===e[t+1].getWidth(0);return i&&n?r-1:r}Object.defineProperty(t,"__esModule",{value:!0}),t.getWrappedLineTrimmedLength=t.reflowSmallerGetNewLineLengths=t.reflowLargerApplyNewLayout=t.reflowLargerCreateNewLayout=t.reflowLargerGetLinesToRemove=void 0,t.reflowLargerGetLinesToRemove=function(e,t,i,n,s){const o=[];for(let a=0;a<e.length-1;a++){let l=a,c=e.get(++l);if(!c.isWrapped)continue;const u=[e.get(a)];for(;l<e.length&&c.isWrapped;)u.push(c),c=e.get(++l);if(n>=a&&n<l){a+=u.length-1;continue}let h=0,d=r(u,h,t),f=1,p=0;for(;f<u.length;){const e=r(u,f,t),n=e-p,o=i-d,a=Math.min(n,o);u[h].copyCellsFrom(u[f],p,d,a,!1),d+=a,d===i&&(h++,d=0),p+=a,p===e&&(f++,p=0),0===d&&0!==h&&2===u[h-1].getWidth(i-1)&&(u[h].copyCellsFrom(u[h-1],i-1,d++,1,!1),u[h-1].setCell(i-1,s))}u[h].replaceCells(d,i,s);let v=0;for(let e=u.length-1;e>0&&(e>h||0===u[e].getTrimmedLength());e--)v++;v>0&&(o.push(a+u.length-v),o.push(v)),a+=u.length-1}return o},t.reflowLargerCreateNewLayout=function(e,t){const r=[];let i=0,n=t[i],s=0;for(let o=0;o<e.length;o++)if(n===o){const r=t[++i];e.onDeleteEmitter.fire({index:o-s,amount:r}),o+=r-1,s+=r,n=t[++i]}else r.push(o);return{layout:r,countRemoved:s}},t.reflowLargerApplyNewLayout=function(e,t){const r=[];for(let i=0;i<t.length;i++)r.push(e.get(t[i]));for(let t=0;t<r.length;t++)e.set(t,r[t]);e.length=t.length},t.reflowSmallerGetNewLineLengths=function(e,t,i){const n=[],s=e.map(((i,n)=>r(e,n,t))).reduce(((e,t)=>e+t));let o=0,a=0,l=0;for(;l<s;){if(s-l<i){n.push(s-l);break}o+=i;const c=r(e,a,t);o>c&&(o-=c,a++);const u=2===e[a].getWidth(o-1);u&&o--;const h=u?i-1:i;n.push(h),l+=h}return n},t.getWrappedLineTrimmedLength=r},5295:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferSet=void 0;const i=r(9092),n=r(8460),s=r(844);class o extends s.Disposable{constructor(e,t){super(),this._optionsService=e,this._bufferService=t,this._onBufferActivate=this.register(new n.EventEmitter),this.reset()}get onBufferActivate(){return this._onBufferActivate.event}reset(){this._normal=new i.Buffer(!0,this._optionsService,this._bufferService),this._normal.fillViewportRows(),this._alt=new i.Buffer(!1,this._optionsService,this._bufferService),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}),this.setupTabStops()}get alt(){return this._alt}get active(){return this._activeBuffer}get normal(){return this._normal}activateNormalBuffer(){this._activeBuffer!==this._normal&&(this._normal.x=this._alt.x,this._normal.y=this._alt.y,this._alt.clearAllMarkers(),this._alt.clear(),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}))}activateAltBuffer(e){this._activeBuffer!==this._alt&&(this._alt.fillViewportRows(e),this._alt.x=this._normal.x,this._alt.y=this._normal.y,this._activeBuffer=this._alt,this._onBufferActivate.fire({activeBuffer:this._alt,inactiveBuffer:this._normal}))}resize(e,t){this._normal.resize(e,t),this._alt.resize(e,t)}setupTabStops(e){this._normal.setupTabStops(e),this._alt.setupTabStops(e)}}t.BufferSet=o},511:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CellData=void 0;const i=r(482),n=r(643),s=r(3734);class o extends s.AttributeData{constructor(){super(...arguments),this.content=0,this.fg=0,this.bg=0,this.extended=new s.ExtendedAttrs,this.combinedData=""}static fromCharData(e){const t=new o;return t.setFromCharData(e),t}isCombined(){return 2097152&this.content}getWidth(){return this.content>>22}getChars(){return 2097152&this.content?this.combinedData:2097151&this.content?(0,i.stringFromCodePoint)(2097151&this.content):""}getCode(){return this.isCombined()?this.combinedData.charCodeAt(this.combinedData.length-1):2097151&this.content}setFromCharData(e){this.fg=e[n.CHAR_DATA_ATTR_INDEX],this.bg=0;let t=!1;if(e[n.CHAR_DATA_CHAR_INDEX].length>2)t=!0;else if(2===e[n.CHAR_DATA_CHAR_INDEX].length){const r=e[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0);if(55296<=r&&r<=56319){const i=e[n.CHAR_DATA_CHAR_INDEX].charCodeAt(1);56320<=i&&i<=57343?this.content=1024*(r-55296)+i-56320+65536|e[n.CHAR_DATA_WIDTH_INDEX]<<22:t=!0}else t=!0}else this.content=e[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|e[n.CHAR_DATA_WIDTH_INDEX]<<22;t&&(this.combinedData=e[n.CHAR_DATA_CHAR_INDEX],this.content=2097152|e[n.CHAR_DATA_WIDTH_INDEX]<<22)}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}t.CellData=o},643:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WHITESPACE_CELL_CODE=t.WHITESPACE_CELL_WIDTH=t.WHITESPACE_CELL_CHAR=t.NULL_CELL_CODE=t.NULL_CELL_WIDTH=t.NULL_CELL_CHAR=t.CHAR_DATA_CODE_INDEX=t.CHAR_DATA_WIDTH_INDEX=t.CHAR_DATA_CHAR_INDEX=t.CHAR_DATA_ATTR_INDEX=t.DEFAULT_EXT=t.DEFAULT_ATTR=t.DEFAULT_COLOR=void 0,t.DEFAULT_COLOR=256,t.DEFAULT_ATTR=256|t.DEFAULT_COLOR<<9,t.DEFAULT_EXT=0,t.CHAR_DATA_ATTR_INDEX=0,t.CHAR_DATA_CHAR_INDEX=1,t.CHAR_DATA_WIDTH_INDEX=2,t.CHAR_DATA_CODE_INDEX=3,t.NULL_CELL_CHAR="",t.NULL_CELL_WIDTH=1,t.NULL_CELL_CODE=0,t.WHITESPACE_CELL_CHAR=" ",t.WHITESPACE_CELL_WIDTH=1,t.WHITESPACE_CELL_CODE=32},4863:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Marker=void 0;const i=r(8460),n=r(844);class s extends n.Disposable{constructor(e){super(),this.line=e,this._id=s._nextId++,this.isDisposed=!1,this._onDispose=new i.EventEmitter}get id(){return this._id}get onDispose(){return this._onDispose.event}dispose(){this.isDisposed||(this.isDisposed=!0,this.line=-1,this._onDispose.fire(),super.dispose())}}t.Marker=s,s._nextId=1},7116:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_CHARSET=t.CHARSETS=void 0,t.CHARSETS={},t.DEFAULT_CHARSET=t.CHARSETS.B,t.CHARSETS[0]={"`":"◆",a:"▒",b:"␉",c:"␌",d:"␍",e:"␊",f:"°",g:"±",h:"␤",i:"␋",j:"┘",k:"┐",l:"┌",m:"└",n:"┼",o:"⎺",p:"⎻",q:"─",r:"⎼",s:"⎽",t:"├",u:"┤",v:"┴",w:"┬",x:"│",y:"≤",z:"≥","{":"π","|":"≠","}":"£","~":"·"},t.CHARSETS.A={"#":"£"},t.CHARSETS.B=void 0,t.CHARSETS[4]={"#":"£","@":"¾","[":"ij","\\":"½","]":"|","{":"¨","|":"f","}":"¼","~":"´"},t.CHARSETS.C=t.CHARSETS[5]={"[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},t.CHARSETS.R={"#":"£","@":"à","[":"°","\\":"ç","]":"§","{":"é","|":"ù","}":"è","~":"¨"},t.CHARSETS.Q={"@":"à","[":"â","\\":"ç","]":"ê","^":"î","`":"ô","{":"é","|":"ù","}":"è","~":"û"},t.CHARSETS.K={"@":"§","[":"Ä","\\":"Ö","]":"Ü","{":"ä","|":"ö","}":"ü","~":"ß"},t.CHARSETS.Y={"#":"£","@":"§","[":"°","\\":"ç","]":"é","`":"ù","{":"à","|":"ò","}":"è","~":"ì"},t.CHARSETS.E=t.CHARSETS[6]={"@":"Ä","[":"Æ","\\":"Ø","]":"Å","^":"Ü","`":"ä","{":"æ","|":"ø","}":"å","~":"ü"},t.CHARSETS.Z={"#":"£","@":"§","[":"¡","\\":"Ñ","]":"¿","{":"°","|":"ñ","}":"ç"},t.CHARSETS.H=t.CHARSETS[7]={"@":"É","[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},t.CHARSETS["="]={"#":"ù","@":"à","[":"é","\\":"ç","]":"ê","^":"î",_:"è","`":"ô","{":"ä","|":"ö","}":"ü","~":"û"}},2584:(e,t)=>{var r,i;Object.defineProperty(t,"__esModule",{value:!0}),t.C1_ESCAPED=t.C1=t.C0=void 0,function(e){e.NUL="\0",e.SOH="",e.STX="",e.ETX="",e.EOT="",e.ENQ="",e.ACK="",e.BEL="",e.BS="\b",e.HT="\t",e.LF="\n",e.VT="\v",e.FF="\f",e.CR="\r",e.SO="",e.SI="",e.DLE="",e.DC1="",e.DC2="",e.DC3="",e.DC4="",e.NAK="",e.SYN="",e.ETB="",e.CAN="",e.EM="",e.SUB="",e.ESC="",e.FS="",e.GS="",e.RS="",e.US="",e.SP=" ",e.DEL=""}(r=t.C0||(t.C0={})),(i=t.C1||(t.C1={})).PAD="",i.HOP="",i.BPH="",i.NBH="",i.IND="",i.NEL="",i.SSA="",i.ESA="",i.HTS="",i.HTJ="",i.VTS="",i.PLD="",i.PLU="",i.RI="",i.SS2="",i.SS3="",i.DCS="",i.PU1="",i.PU2="",i.STS="",i.CCH="",i.MW="",i.SPA="",i.EPA="",i.SOS="",i.SGCI="",i.SCI="",i.CSI="",i.ST="",i.OSC="",i.PM="",i.APC="",(t.C1_ESCAPED||(t.C1_ESCAPED={})).ST=`${r.ESC}\\`},7399:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.evaluateKeyboardEvent=void 0;const i=r(2584),n={48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"']};t.evaluateKeyboardEvent=function(e,t,r,s){const o={type:0,cancel:!1,key:void 0},a=(e.shiftKey?1:0)|(e.altKey?2:0)|(e.ctrlKey?4:0)|(e.metaKey?8:0);switch(e.keyCode){case 0:"UIKeyInputUpArrow"===e.key?o.key=t?i.C0.ESC+"OA":i.C0.ESC+"[A":"UIKeyInputLeftArrow"===e.key?o.key=t?i.C0.ESC+"OD":i.C0.ESC+"[D":"UIKeyInputRightArrow"===e.key?o.key=t?i.C0.ESC+"OC":i.C0.ESC+"[C":"UIKeyInputDownArrow"===e.key&&(o.key=t?i.C0.ESC+"OB":i.C0.ESC+"[B");break;case 8:if(e.altKey){o.key=i.C0.ESC+i.C0.DEL;break}o.key=i.C0.DEL;break;case 9:if(e.shiftKey){o.key=i.C0.ESC+"[Z";break}o.key=i.C0.HT,o.cancel=!0;break;case 13:o.key=e.altKey?i.C0.ESC+i.C0.CR:i.C0.CR,o.cancel=!0;break;case 27:o.key=i.C0.ESC,e.altKey&&(o.key=i.C0.ESC+i.C0.ESC),o.cancel=!0;break;case 37:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"D",o.key===i.C0.ESC+"[1;3D"&&(o.key=i.C0.ESC+(r?"b":"[1;5D"))):o.key=t?i.C0.ESC+"OD":i.C0.ESC+"[D";break;case 39:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"C",o.key===i.C0.ESC+"[1;3C"&&(o.key=i.C0.ESC+(r?"f":"[1;5C"))):o.key=t?i.C0.ESC+"OC":i.C0.ESC+"[C";break;case 38:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"A",r||o.key!==i.C0.ESC+"[1;3A"||(o.key=i.C0.ESC+"[1;5A")):o.key=t?i.C0.ESC+"OA":i.C0.ESC+"[A";break;case 40:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"B",r||o.key!==i.C0.ESC+"[1;3B"||(o.key=i.C0.ESC+"[1;5B")):o.key=t?i.C0.ESC+"OB":i.C0.ESC+"[B";break;case 45:e.shiftKey||e.ctrlKey||(o.key=i.C0.ESC+"[2~");break;case 46:o.key=a?i.C0.ESC+"[3;"+(a+1)+"~":i.C0.ESC+"[3~";break;case 36:o.key=a?i.C0.ESC+"[1;"+(a+1)+"H":t?i.C0.ESC+"OH":i.C0.ESC+"[H";break;case 35:o.key=a?i.C0.ESC+"[1;"+(a+1)+"F":t?i.C0.ESC+"OF":i.C0.ESC+"[F";break;case 33:e.shiftKey?o.type=2:e.ctrlKey?o.key=i.C0.ESC+"[5;"+(a+1)+"~":o.key=i.C0.ESC+"[5~";break;case 34:e.shiftKey?o.type=3:e.ctrlKey?o.key=i.C0.ESC+"[6;"+(a+1)+"~":o.key=i.C0.ESC+"[6~";break;case 112:o.key=a?i.C0.ESC+"[1;"+(a+1)+"P":i.C0.ESC+"OP";break;case 113:o.key=a?i.C0.ESC+"[1;"+(a+1)+"Q":i.C0.ESC+"OQ";break;case 114:o.key=a?i.C0.ESC+"[1;"+(a+1)+"R":i.C0.ESC+"OR";break;case 115:o.key=a?i.C0.ESC+"[1;"+(a+1)+"S":i.C0.ESC+"OS";break;case 116:o.key=a?i.C0.ESC+"[15;"+(a+1)+"~":i.C0.ESC+"[15~";break;case 117:o.key=a?i.C0.ESC+"[17;"+(a+1)+"~":i.C0.ESC+"[17~";break;case 118:o.key=a?i.C0.ESC+"[18;"+(a+1)+"~":i.C0.ESC+"[18~";break;case 119:o.key=a?i.C0.ESC+"[19;"+(a+1)+"~":i.C0.ESC+"[19~";break;case 120:o.key=a?i.C0.ESC+"[20;"+(a+1)+"~":i.C0.ESC+"[20~";break;case 121:o.key=a?i.C0.ESC+"[21;"+(a+1)+"~":i.C0.ESC+"[21~";break;case 122:o.key=a?i.C0.ESC+"[23;"+(a+1)+"~":i.C0.ESC+"[23~";break;case 123:o.key=a?i.C0.ESC+"[24;"+(a+1)+"~":i.C0.ESC+"[24~";break;default:if(!e.ctrlKey||e.shiftKey||e.altKey||e.metaKey)if(r&&!s||!e.altKey||e.metaKey)!r||e.altKey||e.ctrlKey||e.shiftKey||!e.metaKey?e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&e.keyCode>=48&&1===e.key.length?o.key=e.key:e.key&&e.ctrlKey&&("_"===e.key&&(o.key=i.C0.US),"@"===e.key&&(o.key=i.C0.NUL)):65===e.keyCode&&(o.type=1);else{const t=n[e.keyCode],r=null==t?void 0:t[e.shiftKey?1:0];if(r)o.key=i.C0.ESC+r;else if(e.keyCode>=65&&e.keyCode<=90){const t=e.ctrlKey?e.keyCode-64:e.keyCode+32;let r=String.fromCharCode(t);e.shiftKey&&(r=r.toUpperCase()),o.key=i.C0.ESC+r}else if("Dead"===e.key&&e.code.startsWith("Key")){let t=e.code.slice(3,4);e.shiftKey||(t=t.toLowerCase()),o.key=i.C0.ESC+t,o.cancel=!0}}else e.keyCode>=65&&e.keyCode<=90?o.key=String.fromCharCode(e.keyCode-64):32===e.keyCode?o.key=i.C0.NUL:e.keyCode>=51&&e.keyCode<=55?o.key=String.fromCharCode(e.keyCode-51+27):56===e.keyCode?o.key=i.C0.DEL:219===e.keyCode?o.key=i.C0.ESC:220===e.keyCode?o.key=i.C0.FS:221===e.keyCode&&(o.key=i.C0.GS)}return o}},482:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Utf8ToUtf32=t.StringToUtf32=t.utf32ToString=t.stringFromCodePoint=void 0,t.stringFromCodePoint=function(e){return e>65535?(e-=65536,String.fromCharCode(55296+(e>>10))+String.fromCharCode(e%1024+56320)):String.fromCharCode(e)},t.utf32ToString=function(e,t=0,r=e.length){let i="";for(let n=t;n<r;++n){let t=e[n];t>65535?(t-=65536,i+=String.fromCharCode(55296+(t>>10))+String.fromCharCode(t%1024+56320)):i+=String.fromCharCode(t)}return i},t.StringToUtf32=class{constructor(){this._interim=0}clear(){this._interim=0}decode(e,t){const r=e.length;if(!r)return 0;let i=0,n=0;if(this._interim){const r=e.charCodeAt(n++);56320<=r&&r<=57343?t[i++]=1024*(this._interim-55296)+r-56320+65536:(t[i++]=this._interim,t[i++]=r),this._interim=0}for(let s=n;s<r;++s){const n=e.charCodeAt(s);if(55296<=n&&n<=56319){if(++s>=r)return this._interim=n,i;const o=e.charCodeAt(s);56320<=o&&o<=57343?t[i++]=1024*(n-55296)+o-56320+65536:(t[i++]=n,t[i++]=o)}else 65279!==n&&(t[i++]=n)}return i}},t.Utf8ToUtf32=class{constructor(){this.interim=new Uint8Array(3)}clear(){this.interim.fill(0)}decode(e,t){const r=e.length;if(!r)return 0;let i,n,s,o,a=0,l=0,c=0;if(this.interim[0]){let i=!1,n=this.interim[0];n&=192==(224&n)?31:224==(240&n)?15:7;let s,o=0;for(;(s=63&this.interim[++o])&&o<4;)n<<=6,n|=s;const l=192==(224&this.interim[0])?2:224==(240&this.interim[0])?3:4,u=l-o;for(;c<u;){if(c>=r)return 0;if(s=e[c++],128!=(192&s)){c--,i=!0;break}this.interim[o++]=s,n<<=6,n|=63&s}i||(2===l?n<128?c--:t[a++]=n:3===l?n<2048||n>=55296&&n<=57343||65279===n||(t[a++]=n):n<65536||n>1114111||(t[a++]=n)),this.interim.fill(0)}const u=r-4;let h=c;for(;h<r;){for(;!(!(h<u)||128&(i=e[h])||128&(n=e[h+1])||128&(s=e[h+2])||128&(o=e[h+3]));)t[a++]=i,t[a++]=n,t[a++]=s,t[a++]=o,h+=4;if(i=e[h++],i<128)t[a++]=i;else if(192==(224&i)){if(h>=r)return this.interim[0]=i,a;if(n=e[h++],128!=(192&n)){h--;continue}if(l=(31&i)<<6|63&n,l<128){h--;continue}t[a++]=l}else if(224==(240&i)){if(h>=r)return this.interim[0]=i,a;if(n=e[h++],128!=(192&n)){h--;continue}if(h>=r)return this.interim[0]=i,this.interim[1]=n,a;if(s=e[h++],128!=(192&s)){h--;continue}if(l=(15&i)<<12|(63&n)<<6|63&s,l<2048||l>=55296&&l<=57343||65279===l)continue;t[a++]=l}else if(240==(248&i)){if(h>=r)return this.interim[0]=i,a;if(n=e[h++],128!=(192&n)){h--;continue}if(h>=r)return this.interim[0]=i,this.interim[1]=n,a;if(s=e[h++],128!=(192&s)){h--;continue}if(h>=r)return this.interim[0]=i,this.interim[1]=n,this.interim[2]=s,a;if(o=e[h++],128!=(192&o)){h--;continue}if(l=(7&i)<<18|(63&n)<<12|(63&s)<<6|63&o,l<65536||l>1114111)continue;t[a++]=l}}return a}}},225:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeV6=void 0;const i=r(8273),n=[[768,879],[1155,1158],[1160,1161],[1425,1469],[1471,1471],[1473,1474],[1476,1477],[1479,1479],[1536,1539],[1552,1557],[1611,1630],[1648,1648],[1750,1764],[1767,1768],[1770,1773],[1807,1807],[1809,1809],[1840,1866],[1958,1968],[2027,2035],[2305,2306],[2364,2364],[2369,2376],[2381,2381],[2385,2388],[2402,2403],[2433,2433],[2492,2492],[2497,2500],[2509,2509],[2530,2531],[2561,2562],[2620,2620],[2625,2626],[2631,2632],[2635,2637],[2672,2673],[2689,2690],[2748,2748],[2753,2757],[2759,2760],[2765,2765],[2786,2787],[2817,2817],[2876,2876],[2879,2879],[2881,2883],[2893,2893],[2902,2902],[2946,2946],[3008,3008],[3021,3021],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3260,3260],[3263,3263],[3270,3270],[3276,3277],[3298,3299],[3393,3395],[3405,3405],[3530,3530],[3538,3540],[3542,3542],[3633,3633],[3636,3642],[3655,3662],[3761,3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893,3893],[3895,3895],[3897,3897],[3953,3966],[3968,3972],[3974,3975],[3984,3991],[3993,4028],[4038,4038],[4141,4144],[4146,4146],[4150,4151],[4153,4153],[4184,4185],[4448,4607],[4959,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086,6086],[6089,6099],[6109,6109],[6155,6157],[6313,6313],[6432,6434],[6439,6440],[6450,6450],[6457,6459],[6679,6680],[6912,6915],[6964,6964],[6966,6970],[6972,6972],[6978,6978],[7019,7027],[7616,7626],[7678,7679],[8203,8207],[8234,8238],[8288,8291],[8298,8303],[8400,8431],[12330,12335],[12441,12442],[43014,43014],[43019,43019],[43045,43046],[64286,64286],[65024,65039],[65056,65059],[65279,65279],[65529,65531]],s=[[68097,68099],[68101,68102],[68108,68111],[68152,68154],[68159,68159],[119143,119145],[119155,119170],[119173,119179],[119210,119213],[119362,119364],[917505,917505],[917536,917631],[917760,917999]];let o;t.UnicodeV6=class{constructor(){if(this.version="6",!o){o=new Uint8Array(65536),(0,i.fill)(o,1),o[0]=0,(0,i.fill)(o,0,1,32),(0,i.fill)(o,0,127,160),(0,i.fill)(o,2,4352,4448),o[9001]=2,o[9002]=2,(0,i.fill)(o,2,11904,42192),o[12351]=1,(0,i.fill)(o,2,44032,55204),(0,i.fill)(o,2,63744,64256),(0,i.fill)(o,2,65040,65050),(0,i.fill)(o,2,65072,65136),(0,i.fill)(o,2,65280,65377),(0,i.fill)(o,2,65504,65511);for(let e=0;e<n.length;++e)(0,i.fill)(o,0,n[e][0],n[e][1]+1)}}wcwidth(e){return e<32?0:e<127?1:e<65536?o[e]:function(e,t){let r,i=0,n=t.length-1;if(e<t[0][0]||e>t[n][1])return!1;for(;n>=i;)if(r=i+n>>1,e>t[r][1])i=r+1;else{if(!(e<t[r][0]))return!0;n=r-1}return!1}(e,s)?0:e>=131072&&e<=196605||e>=196608&&e<=262141?2:1}}},5981:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WriteBuffer=void 0;const i=r(8460),n="undefined"==typeof queueMicrotask?e=>{Promise.resolve().then(e)}:queueMicrotask;t.WriteBuffer=class{constructor(e){this._action=e,this._writeBuffer=[],this._callbacks=[],this._pendingData=0,this._bufferOffset=0,this._isSyncWriting=!1,this._syncCalls=0,this._onWriteParsed=new i.EventEmitter}get onWriteParsed(){return this._onWriteParsed.event}writeSync(e,t){if(void 0!==t&&this._syncCalls>t)return void(this._syncCalls=0);if(this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(void 0),this._syncCalls++,this._isSyncWriting)return;let r;for(this._isSyncWriting=!0;r=this._writeBuffer.shift();){this._action(r);const e=this._callbacks.shift();e&&e()}this._pendingData=0,this._bufferOffset=2147483647,this._isSyncWriting=!1,this._syncCalls=0}write(e,t){if(this._pendingData>5e7)throw new Error("write data discarded, use flow control to avoid losing data");this._writeBuffer.length||(this._bufferOffset=0,setTimeout((()=>this._innerWrite()))),this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(t)}_innerWrite(e=0,t=!0){const r=e||Date.now();for(;this._writeBuffer.length>this._bufferOffset;){const e=this._writeBuffer[this._bufferOffset],i=this._action(e,t);if(i){const e=e=>Date.now()-r>=12?setTimeout((()=>this._innerWrite(0,e))):this._innerWrite(r,e);return void i.catch((e=>(n((()=>{throw e})),Promise.resolve(!1)))).then(e)}const s=this._callbacks[this._bufferOffset];if(s&&s(),this._bufferOffset++,this._pendingData-=e.length,Date.now()-r>=12)break}this._writeBuffer.length>this._bufferOffset?(this._bufferOffset>50&&(this._writeBuffer=this._writeBuffer.slice(this._bufferOffset),this._callbacks=this._callbacks.slice(this._bufferOffset),this._bufferOffset=0),setTimeout((()=>this._innerWrite()))):(this._writeBuffer.length=0,this._callbacks.length=0,this._pendingData=0,this._bufferOffset=0),this._onWriteParsed.fire()}}},5941:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toRgbString=t.parseColor=void 0;const r=/^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,i=/^[\da-f]+$/;function n(e,t){const r=e.toString(16),i=r.length<2?"0"+r:r;switch(t){case 4:return r[0];case 8:return i;case 12:return(i+i).slice(0,3);default:return i+i}}t.parseColor=function(e){if(!e)return;let t=e.toLowerCase();if(0===t.indexOf("rgb:")){t=t.slice(4);const e=r.exec(t);if(e){const t=e[1]?15:e[4]?255:e[7]?4095:65535;return[Math.round(parseInt(e[1]||e[4]||e[7]||e[10],16)/t*255),Math.round(parseInt(e[2]||e[5]||e[8]||e[11],16)/t*255),Math.round(parseInt(e[3]||e[6]||e[9]||e[12],16)/t*255)]}}else if(0===t.indexOf("#")&&(t=t.slice(1),i.exec(t)&&[3,6,9,12].includes(t.length))){const e=t.length/3,r=[0,0,0];for(let i=0;i<3;++i){const n=parseInt(t.slice(e*i,e*i+e),16);r[i]=1===e?n<<4:2===e?n:3===e?n>>4:n>>8}return r}},t.toRgbString=function(e,t=16){const[r,i,s]=e;return`rgb:${n(r,t)}/${n(i,t)}/${n(s,t)}`}},5770:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PAYLOAD_LIMIT=void 0,t.PAYLOAD_LIMIT=1e7},6351:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DcsHandler=t.DcsParser=void 0;const i=r(482),n=r(8742),s=r(5770),o=[];t.DcsParser=class{constructor(){this._handlers=Object.create(null),this._active=o,this._ident=0,this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=o}registerHandler(e,t){void 0===this._handlers[e]&&(this._handlers[e]=[]);const r=this._handlers[e];return r.push(t),{dispose:()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}clearHandler(e){this._handlers[e]&&delete this._handlers[e]}setHandlerFallback(e){this._handlerFb=e}reset(){if(this._active.length)for(let e=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;e>=0;--e)this._active[e].unhook(!1);this._stack.paused=!1,this._active=o,this._ident=0}hook(e,t){if(this.reset(),this._ident=e,this._active=this._handlers[e]||o,this._active.length)for(let e=this._active.length-1;e>=0;e--)this._active[e].hook(t);else this._handlerFb(this._ident,"HOOK",t)}put(e,t,r){if(this._active.length)for(let i=this._active.length-1;i>=0;i--)this._active[i].put(e,t,r);else this._handlerFb(this._ident,"PUT",(0,i.utf32ToString)(e,t,r))}unhook(e,t=!0){if(this._active.length){let r=!1,i=this._active.length-1,n=!1;if(this._stack.paused&&(i=this._stack.loopPosition-1,r=t,n=this._stack.fallThrough,this._stack.paused=!1),!n&&!1===r){for(;i>=0&&(r=this._active[i].unhook(e),!0!==r);i--)if(r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!1,r;i--}for(;i>=0;i--)if(r=this._active[i].unhook(!1),r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!0,r}else this._handlerFb(this._ident,"UNHOOK",e);this._active=o,this._ident=0}};const a=new n.Params;a.addParam(0),t.DcsHandler=class{constructor(e){this._handler=e,this._data="",this._params=a,this._hitLimit=!1}hook(e){this._params=e.length>1||e.params[0]?e.clone():a,this._data="",this._hitLimit=!1}put(e,t,r){this._hitLimit||(this._data+=(0,i.utf32ToString)(e,t,r),this._data.length>s.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}unhook(e){let t=!1;if(this._hitLimit)t=!1;else if(e&&(t=this._handler(this._data,this._params),t instanceof Promise))return t.then((e=>(this._params=a,this._data="",this._hitLimit=!1,e)));return this._params=a,this._data="",this._hitLimit=!1,t}}},2015:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EscapeSequenceParser=t.VT500_TRANSITION_TABLE=t.TransitionTable=void 0;const i=r(844),n=r(8273),s=r(8742),o=r(6242),a=r(6351);class l{constructor(e){this.table=new Uint8Array(e)}setDefault(e,t){(0,n.fill)(this.table,e<<4|t)}add(e,t,r,i){this.table[t<<8|e]=r<<4|i}addMany(e,t,r,i){for(let n=0;n<e.length;n++)this.table[t<<8|e[n]]=r<<4|i}}t.TransitionTable=l;const c=160;t.VT500_TRANSITION_TABLE=function(){const e=new l(4095),t=Array.apply(null,Array(256)).map(((e,t)=>t)),r=(e,r)=>t.slice(e,r),i=r(32,127),n=r(0,24);n.push(25),n.push.apply(n,r(28,32));const s=r(0,14);let o;for(o in e.setDefault(1,0),e.addMany(i,0,2,0),s)e.addMany([24,26,153,154],o,3,0),e.addMany(r(128,144),o,3,0),e.addMany(r(144,152),o,3,0),e.add(156,o,0,0),e.add(27,o,11,1),e.add(157,o,4,8),e.addMany([152,158,159],o,0,7),e.add(155,o,11,3),e.add(144,o,11,9);return e.addMany(n,0,3,0),e.addMany(n,1,3,1),e.add(127,1,0,1),e.addMany(n,8,0,8),e.addMany(n,3,3,3),e.add(127,3,0,3),e.addMany(n,4,3,4),e.add(127,4,0,4),e.addMany(n,6,3,6),e.addMany(n,5,3,5),e.add(127,5,0,5),e.addMany(n,2,3,2),e.add(127,2,0,2),e.add(93,1,4,8),e.addMany(i,8,5,8),e.add(127,8,5,8),e.addMany([156,27,24,26,7],8,6,0),e.addMany(r(28,32),8,0,8),e.addMany([88,94,95],1,0,7),e.addMany(i,7,0,7),e.addMany(n,7,0,7),e.add(156,7,0,0),e.add(127,7,0,7),e.add(91,1,11,3),e.addMany(r(64,127),3,7,0),e.addMany(r(48,60),3,8,4),e.addMany([60,61,62,63],3,9,4),e.addMany(r(48,60),4,8,4),e.addMany(r(64,127),4,7,0),e.addMany([60,61,62,63],4,0,6),e.addMany(r(32,64),6,0,6),e.add(127,6,0,6),e.addMany(r(64,127),6,0,0),e.addMany(r(32,48),3,9,5),e.addMany(r(32,48),5,9,5),e.addMany(r(48,64),5,0,6),e.addMany(r(64,127),5,7,0),e.addMany(r(32,48),4,9,5),e.addMany(r(32,48),1,9,2),e.addMany(r(32,48),2,9,2),e.addMany(r(48,127),2,10,0),e.addMany(r(48,80),1,10,0),e.addMany(r(81,88),1,10,0),e.addMany([89,90,92],1,10,0),e.addMany(r(96,127),1,10,0),e.add(80,1,11,9),e.addMany(n,9,0,9),e.add(127,9,0,9),e.addMany(r(28,32),9,0,9),e.addMany(r(32,48),9,9,12),e.addMany(r(48,60),9,8,10),e.addMany([60,61,62,63],9,9,10),e.addMany(n,11,0,11),e.addMany(r(32,128),11,0,11),e.addMany(r(28,32),11,0,11),e.addMany(n,10,0,10),e.add(127,10,0,10),e.addMany(r(28,32),10,0,10),e.addMany(r(48,60),10,8,10),e.addMany([60,61,62,63],10,0,11),e.addMany(r(32,48),10,9,12),e.addMany(n,12,0,12),e.add(127,12,0,12),e.addMany(r(28,32),12,0,12),e.addMany(r(32,48),12,9,12),e.addMany(r(48,64),12,0,11),e.addMany(r(64,127),12,12,13),e.addMany(r(64,127),10,12,13),e.addMany(r(64,127),9,12,13),e.addMany(n,13,13,13),e.addMany(i,13,13,13),e.add(127,13,0,13),e.addMany([27,156,24,26],13,14,0),e.add(c,0,2,0),e.add(c,8,5,8),e.add(c,6,0,6),e.add(c,11,0,11),e.add(c,13,13,13),e}();class u extends i.Disposable{constructor(e=t.VT500_TRANSITION_TABLE){super(),this._transitions=e,this._parseStack={state:0,handlers:[],handlerPos:0,transition:0,chunkPos:0},this.initialState=0,this.currentState=this.initialState,this._params=new s.Params,this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,this._printHandlerFb=(e,t,r)=>{},this._executeHandlerFb=e=>{},this._csiHandlerFb=(e,t)=>{},this._escHandlerFb=e=>{},this._errorHandlerFb=e=>e,this._printHandler=this._printHandlerFb,this._executeHandlers=Object.create(null),this._csiHandlers=Object.create(null),this._escHandlers=Object.create(null),this._oscParser=new o.OscParser,this._dcsParser=new a.DcsParser,this._errorHandler=this._errorHandlerFb,this.registerEscHandler({final:"\\"},(()=>!0))}_identifier(e,t=[64,126]){let r=0;if(e.prefix){if(e.prefix.length>1)throw new Error("only one byte as prefix supported");if(r=e.prefix.charCodeAt(0),r&&60>r||r>63)throw new Error("prefix must be in range 0x3c .. 0x3f")}if(e.intermediates){if(e.intermediates.length>2)throw new Error("only two bytes as intermediates are supported");for(let t=0;t<e.intermediates.length;++t){const i=e.intermediates.charCodeAt(t);if(32>i||i>47)throw new Error("intermediate must be in range 0x20 .. 0x2f");r<<=8,r|=i}}if(1!==e.final.length)throw new Error("final must be a single byte");const i=e.final.charCodeAt(0);if(t[0]>i||i>t[1])throw new Error(`final must be in range ${t[0]} .. ${t[1]}`);return r<<=8,r|=i,r}identToString(e){const t=[];for(;e;)t.push(String.fromCharCode(255&e)),e>>=8;return t.reverse().join("")}dispose(){this._csiHandlers=Object.create(null),this._executeHandlers=Object.create(null),this._escHandlers=Object.create(null),this._oscParser.dispose(),this._dcsParser.dispose()}setPrintHandler(e){this._printHandler=e}clearPrintHandler(){this._printHandler=this._printHandlerFb}registerEscHandler(e,t){const r=this._identifier(e,[48,126]);void 0===this._escHandlers[r]&&(this._escHandlers[r]=[]);const i=this._escHandlers[r];return i.push(t),{dispose:()=>{const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}}clearEscHandler(e){this._escHandlers[this._identifier(e,[48,126])]&&delete this._escHandlers[this._identifier(e,[48,126])]}setEscHandlerFallback(e){this._escHandlerFb=e}setExecuteHandler(e,t){this._executeHandlers[e.charCodeAt(0)]=t}clearExecuteHandler(e){this._executeHandlers[e.charCodeAt(0)]&&delete this._executeHandlers[e.charCodeAt(0)]}setExecuteHandlerFallback(e){this._executeHandlerFb=e}registerCsiHandler(e,t){const r=this._identifier(e);void 0===this._csiHandlers[r]&&(this._csiHandlers[r]=[]);const i=this._csiHandlers[r];return i.push(t),{dispose:()=>{const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}}clearCsiHandler(e){this._csiHandlers[this._identifier(e)]&&delete this._csiHandlers[this._identifier(e)]}setCsiHandlerFallback(e){this._csiHandlerFb=e}registerDcsHandler(e,t){return this._dcsParser.registerHandler(this._identifier(e),t)}clearDcsHandler(e){this._dcsParser.clearHandler(this._identifier(e))}setDcsHandlerFallback(e){this._dcsParser.setHandlerFallback(e)}registerOscHandler(e,t){return this._oscParser.registerHandler(e,t)}clearOscHandler(e){this._oscParser.clearHandler(e)}setOscHandlerFallback(e){this._oscParser.setHandlerFallback(e)}setErrorHandler(e){this._errorHandler=e}clearErrorHandler(){this._errorHandler=this._errorHandlerFb}reset(){this.currentState=this.initialState,this._oscParser.reset(),this._dcsParser.reset(),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,0!==this._parseStack.state&&(this._parseStack.state=2,this._parseStack.handlers=[])}_preserveStack(e,t,r,i,n){this._parseStack.state=e,this._parseStack.handlers=t,this._parseStack.handlerPos=r,this._parseStack.transition=i,this._parseStack.chunkPos=n}parse(e,t,r){let i,n=0,s=0,o=0;if(this._parseStack.state)if(2===this._parseStack.state)this._parseStack.state=0,o=this._parseStack.chunkPos+1;else{if(void 0===r||1===this._parseStack.state)throw this._parseStack.state=1,new Error("improper continuation due to previous async handler, giving up parsing");const t=this._parseStack.handlers;let s=this._parseStack.handlerPos-1;switch(this._parseStack.state){case 3:if(!1===r&&s>-1)for(;s>=0&&(i=t[s](this._params),!0!==i);s--)if(i instanceof Promise)return this._parseStack.handlerPos=s,i;this._parseStack.handlers=[];break;case 4:if(!1===r&&s>-1)for(;s>=0&&(i=t[s](),!0!==i);s--)if(i instanceof Promise)return this._parseStack.handlerPos=s,i;this._parseStack.handlers=[];break;case 6:if(n=e[this._parseStack.chunkPos],i=this._dcsParser.unhook(24!==n&&26!==n,r),i)return i;27===n&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0;break;case 5:if(n=e[this._parseStack.chunkPos],i=this._oscParser.end(24!==n&&26!==n,r),i)return i;27===n&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0}this._parseStack.state=0,o=this._parseStack.chunkPos+1,this.precedingCodepoint=0,this.currentState=15&this._parseStack.transition}for(let r=o;r<t;++r){switch(n=e[r],s=this._transitions.table[this.currentState<<8|(n<160?n:c)],s>>4){case 2:for(let i=r+1;;++i){if(i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}}break;case 3:this._executeHandlers[n]?this._executeHandlers[n]():this._executeHandlerFb(n),this.precedingCodepoint=0;break;case 0:break;case 1:if(this._errorHandler({position:r,code:n,currentState:this.currentState,collect:this._collect,params:this._params,abort:!1}).abort)return;break;case 7:const o=this._csiHandlers[this._collect<<8|n];let a=o?o.length-1:-1;for(;a>=0&&(i=o[a](this._params),!0!==i);a--)if(i instanceof Promise)return this._preserveStack(3,o,a,s,r),i;a<0&&this._csiHandlerFb(this._collect<<8|n,this._params),this.precedingCodepoint=0;break;case 8:do{switch(n){case 59:this._params.addParam(0);break;case 58:this._params.addSubParam(-1);break;default:this._params.addDigit(n-48)}}while(++r<t&&(n=e[r])>47&&n<60);r--;break;case 9:this._collect<<=8,this._collect|=n;break;case 10:const l=this._escHandlers[this._collect<<8|n];let u=l?l.length-1:-1;for(;u>=0&&(i=l[u](),!0!==i);u--)if(i instanceof Promise)return this._preserveStack(4,l,u,s,r),i;u<0&&this._escHandlerFb(this._collect<<8|n),this.precedingCodepoint=0;break;case 11:this._params.reset(),this._params.addParam(0),this._collect=0;break;case 12:this._dcsParser.hook(this._collect<<8|n,this._params);break;case 13:for(let i=r+1;;++i)if(i>=t||24===(n=e[i])||26===n||27===n||n>127&&n<c){this._dcsParser.put(e,r,i),r=i-1;break}break;case 14:if(i=this._dcsParser.unhook(24!==n&&26!==n),i)return this._preserveStack(6,[],0,s,r),i;27===n&&(s|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0;break;case 4:this._oscParser.start();break;case 5:for(let i=r+1;;i++)if(i>=t||(n=e[i])<32||n>127&&n<c){this._oscParser.put(e,r,i),r=i-1;break}break;case 6:if(i=this._oscParser.end(24!==n&&26!==n),i)return this._preserveStack(5,[],0,s,r),i;27===n&&(s|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0}this.currentState=15&s}}}t.EscapeSequenceParser=u},6242:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OscHandler=t.OscParser=void 0;const i=r(5770),n=r(482),s=[];t.OscParser=class{constructor(){this._state=0,this._active=s,this._id=-1,this._handlers=Object.create(null),this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}registerHandler(e,t){void 0===this._handlers[e]&&(this._handlers[e]=[]);const r=this._handlers[e];return r.push(t),{dispose:()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}clearHandler(e){this._handlers[e]&&delete this._handlers[e]}setHandlerFallback(e){this._handlerFb=e}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=s}reset(){if(2===this._state)for(let e=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;e>=0;--e)this._active[e].end(!1);this._stack.paused=!1,this._active=s,this._id=-1,this._state=0}_start(){if(this._active=this._handlers[this._id]||s,this._active.length)for(let e=this._active.length-1;e>=0;e--)this._active[e].start();else this._handlerFb(this._id,"START")}_put(e,t,r){if(this._active.length)for(let i=this._active.length-1;i>=0;i--)this._active[i].put(e,t,r);else this._handlerFb(this._id,"PUT",(0,n.utf32ToString)(e,t,r))}start(){this.reset(),this._state=1}put(e,t,r){if(3!==this._state){if(1===this._state)for(;t<r;){const r=e[t++];if(59===r){this._state=2,this._start();break}if(r<48||57<r)return void(this._state=3);-1===this._id&&(this._id=0),this._id=10*this._id+r-48}2===this._state&&r-t>0&&this._put(e,t,r)}}end(e,t=!0){if(0!==this._state){if(3!==this._state)if(1===this._state&&this._start(),this._active.length){let r=!1,i=this._active.length-1,n=!1;if(this._stack.paused&&(i=this._stack.loopPosition-1,r=t,n=this._stack.fallThrough,this._stack.paused=!1),!n&&!1===r){for(;i>=0&&(r=this._active[i].end(e),!0!==r);i--)if(r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!1,r;i--}for(;i>=0;i--)if(r=this._active[i].end(!1),r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!0,r}else this._handlerFb(this._id,"END",e);this._active=s,this._id=-1,this._state=0}}},t.OscHandler=class{constructor(e){this._handler=e,this._data="",this._hitLimit=!1}start(){this._data="",this._hitLimit=!1}put(e,t,r){this._hitLimit||(this._data+=(0,n.utf32ToString)(e,t,r),this._data.length>i.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}end(e){let t=!1;if(this._hitLimit)t=!1;else if(e&&(t=this._handler(this._data),t instanceof Promise))return t.then((e=>(this._data="",this._hitLimit=!1,e)));return this._data="",this._hitLimit=!1,t}}},8742:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Params=void 0;const r=2147483647;class i{constructor(e=32,t=32){if(this.maxLength=e,this.maxSubParamsLength=t,t>256)throw new Error("maxSubParamsLength must not be greater than 256");this.params=new Int32Array(e),this.length=0,this._subParams=new Int32Array(t),this._subParamsLength=0,this._subParamsIdx=new Uint16Array(e),this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}static fromArray(e){const t=new i;if(!e.length)return t;for(let r=Array.isArray(e[0])?1:0;r<e.length;++r){const i=e[r];if(Array.isArray(i))for(let e=0;e<i.length;++e)t.addSubParam(i[e]);else t.addParam(i)}return t}clone(){const e=new i(this.maxLength,this.maxSubParamsLength);return e.params.set(this.params),e.length=this.length,e._subParams.set(this._subParams),e._subParamsLength=this._subParamsLength,e._subParamsIdx.set(this._subParamsIdx),e._rejectDigits=this._rejectDigits,e._rejectSubDigits=this._rejectSubDigits,e._digitIsSub=this._digitIsSub,e}toArray(){const e=[];for(let t=0;t<this.length;++t){e.push(this.params[t]);const r=this._subParamsIdx[t]>>8,i=255&this._subParamsIdx[t];i-r>0&&e.push(Array.prototype.slice.call(this._subParams,r,i))}return e}reset(){this.length=0,this._subParamsLength=0,this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}addParam(e){if(this._digitIsSub=!1,this.length>=this.maxLength)this._rejectDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParamsIdx[this.length]=this._subParamsLength<<8|this._subParamsLength,this.params[this.length++]=e>r?r:e}}addSubParam(e){if(this._digitIsSub=!0,this.length)if(this._rejectDigits||this._subParamsLength>=this.maxSubParamsLength)this._rejectSubDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParams[this._subParamsLength++]=e>r?r:e,this._subParamsIdx[this.length-1]++}}hasSubParams(e){return(255&this._subParamsIdx[e])-(this._subParamsIdx[e]>>8)>0}getSubParams(e){const t=this._subParamsIdx[e]>>8,r=255&this._subParamsIdx[e];return r-t>0?this._subParams.subarray(t,r):null}getSubParamsAll(){const e={};for(let t=0;t<this.length;++t){const r=this._subParamsIdx[t]>>8,i=255&this._subParamsIdx[t];i-r>0&&(e[t]=this._subParams.slice(r,i))}return e}addDigit(e){let t;if(this._rejectDigits||!(t=this._digitIsSub?this._subParamsLength:this.length)||this._digitIsSub&&this._rejectSubDigits)return;const i=this._digitIsSub?this._subParams:this.params,n=i[t-1];i[t-1]=~n?Math.min(10*n+e,r):e}}t.Params=i},5741:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AddonManager=void 0,t.AddonManager=class{constructor(){this._addons=[]}dispose(){for(let e=this._addons.length-1;e>=0;e--)this._addons[e].instance.dispose()}loadAddon(e,t){const r={instance:t,dispose:t.dispose,isDisposed:!1};this._addons.push(r),t.dispose=()=>this._wrappedAddonDispose(r),t.activate(e)}_wrappedAddonDispose(e){if(e.isDisposed)return;let t=-1;for(let r=0;r<this._addons.length;r++)if(this._addons[r]===e){t=r;break}if(-1===t)throw new Error("Could not dispose an addon that has not been loaded");e.isDisposed=!0,e.dispose.apply(e.instance),this._addons.splice(t,1)}}},8771:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferApiView=void 0;const i=r(3785),n=r(511);t.BufferApiView=class{constructor(e,t){this._buffer=e,this.type=t}init(e){return this._buffer=e,this}get cursorY(){return this._buffer.y}get cursorX(){return this._buffer.x}get viewportY(){return this._buffer.ydisp}get baseY(){return this._buffer.ybase}get length(){return this._buffer.lines.length}getLine(e){const t=this._buffer.lines.get(e);if(t)return new i.BufferLineApiView(t)}getNullCell(){return new n.CellData}}},3785:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferLineApiView=void 0;const i=r(511);t.BufferLineApiView=class{constructor(e){this._line=e}get isWrapped(){return this._line.isWrapped}get length(){return this._line.length}getCell(e,t){if(!(e<0||e>=this._line.length))return t?(this._line.loadCell(e,t),t):this._line.loadCell(e,new i.CellData)}translateToString(e,t,r){return this._line.translateToString(e,t,r)}}},8285:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferNamespaceApi=void 0;const i=r(8771),n=r(8460);t.BufferNamespaceApi=class{constructor(e){this._core=e,this._onBufferChange=new n.EventEmitter,this._normal=new i.BufferApiView(this._core.buffers.normal,"normal"),this._alternate=new i.BufferApiView(this._core.buffers.alt,"alternate"),this._core.buffers.onBufferActivate((()=>this._onBufferChange.fire(this.active)))}get onBufferChange(){return this._onBufferChange.event}get active(){if(this._core.buffers.active===this._core.buffers.normal)return this.normal;if(this._core.buffers.active===this._core.buffers.alt)return this.alternate;throw new Error("Active buffer is neither normal nor alternate")}get normal(){return this._normal.init(this._core.buffers.normal)}get alternate(){return this._alternate.init(this._core.buffers.alt)}}},7975:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ParserApi=void 0,t.ParserApi=class{constructor(e){this._core=e}registerCsiHandler(e,t){return this._core.registerCsiHandler(e,(e=>t(e.toArray())))}addCsiHandler(e,t){return this.registerCsiHandler(e,t)}registerDcsHandler(e,t){return this._core.registerDcsHandler(e,((e,r)=>t(e,r.toArray())))}addDcsHandler(e,t){return this.registerDcsHandler(e,t)}registerEscHandler(e,t){return this._core.registerEscHandler(e,t)}addEscHandler(e,t){return this.registerEscHandler(e,t)}registerOscHandler(e,t){return this._core.registerOscHandler(e,t)}addOscHandler(e,t){return this.registerOscHandler(e,t)}}},7090:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeApi=void 0,t.UnicodeApi=class{constructor(e){this._core=e}register(e){this._core.unicodeService.register(e)}get versions(){return this._core.unicodeService.versions}get activeVersion(){return this._core.unicodeService.activeVersion}set activeVersion(e){this._core.unicodeService.activeVersion=e}}},744:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.BufferService=t.MINIMUM_ROWS=t.MINIMUM_COLS=void 0;const s=r(2585),o=r(5295),a=r(8460),l=r(844);t.MINIMUM_COLS=2,t.MINIMUM_ROWS=1;let c=class extends l.Disposable{constructor(e){super(),this.isUserScrolling=!1,this._onResize=new a.EventEmitter,this._onScroll=new a.EventEmitter,this.cols=Math.max(e.rawOptions.cols||0,t.MINIMUM_COLS),this.rows=Math.max(e.rawOptions.rows||0,t.MINIMUM_ROWS),this.buffers=new o.BufferSet(e,this)}get onResize(){return this._onResize.event}get onScroll(){return this._onScroll.event}get buffer(){return this.buffers.active}dispose(){super.dispose(),this.buffers.dispose()}resize(e,t){this.cols=e,this.rows=t,this.buffers.resize(e,t),this.buffers.setupTabStops(this.cols),this._onResize.fire({cols:e,rows:t})}reset(){this.buffers.reset(),this.isUserScrolling=!1}scroll(e,t=!1){const r=this.buffer;let i;i=this._cachedBlankLine,i&&i.length===this.cols&&i.getFg(0)===e.fg&&i.getBg(0)===e.bg||(i=r.getBlankLine(e,t),this._cachedBlankLine=i),i.isWrapped=t;const n=r.ybase+r.scrollTop,s=r.ybase+r.scrollBottom;if(0===r.scrollTop){const e=r.lines.isFull;s===r.lines.length-1?e?r.lines.recycle().copyFrom(i):r.lines.push(i.clone()):r.lines.splice(s+1,0,i.clone()),e?this.isUserScrolling&&(r.ydisp=Math.max(r.ydisp-1,0)):(r.ybase++,this.isUserScrolling||r.ydisp++)}else{const e=s-n+1;r.lines.shiftElements(n+1,e-1,-1),r.lines.set(s,i.clone())}this.isUserScrolling||(r.ydisp=r.ybase),this._onScroll.fire(r.ydisp)}scrollLines(e,t,r){const i=this.buffer;if(e<0){if(0===i.ydisp)return;this.isUserScrolling=!0}else e+i.ydisp>=i.ybase&&(this.isUserScrolling=!1);const n=i.ydisp;i.ydisp=Math.max(Math.min(i.ydisp+e,i.ybase),0),n!==i.ydisp&&(t||this._onScroll.fire(i.ydisp))}scrollPages(e){this.scrollLines(e*(this.rows-1))}scrollToTop(){this.scrollLines(-this.buffer.ydisp)}scrollToBottom(){this.scrollLines(this.buffer.ybase-this.buffer.ydisp)}scrollToLine(e){const t=e-this.buffer.ydisp;0!==t&&this.scrollLines(t)}};c=i([n(0,s.IOptionsService)],c),t.BufferService=c},7994:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CharsetService=void 0,t.CharsetService=class{constructor(){this.glevel=0,this._charsets=[]}reset(){this.charset=void 0,this._charsets=[],this.glevel=0}setgLevel(e){this.glevel=e,this.charset=this._charsets[e]}setgCharset(e,t){this._charsets[e]=t,this.glevel===e&&(this.charset=t)}}},1753:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoreMouseService=void 0;const s=r(2585),o=r(8460),a={NONE:{events:0,restrict:()=>!1},X10:{events:1,restrict:e=>4!==e.button&&1===e.action&&(e.ctrl=!1,e.alt=!1,e.shift=!1,!0)},VT200:{events:19,restrict:e=>32!==e.action},DRAG:{events:23,restrict:e=>32!==e.action||3!==e.button},ANY:{events:31,restrict:e=>!0}};function l(e,t){let r=(e.ctrl?16:0)|(e.shift?4:0)|(e.alt?8:0);return 4===e.button?(r|=64,r|=e.action):(r|=3&e.button,4&e.button&&(r|=64),8&e.button&&(r|=128),32===e.action?r|=32:0!==e.action||t||(r|=3)),r}const c=String.fromCharCode,u={DEFAULT:e=>{const t=[l(e,!1)+32,e.col+32,e.row+32];return t[0]>255||t[1]>255||t[2]>255?"":`[M${c(t[0])}${c(t[1])}${c(t[2])}`},SGR:e=>{const t=0===e.action&&4!==e.button?"m":"M";return`[<${l(e,!0)};${e.col};${e.row}${t}`},SGR_PIXELS:e=>{const t=0===e.action&&4!==e.button?"m":"M";return`[<${l(e,!0)};${e.x};${e.y}${t}`}};let h=class{constructor(e,t){this._bufferService=e,this._coreService=t,this._protocols={},this._encodings={},this._activeProtocol="",this._activeEncoding="",this._onProtocolChange=new o.EventEmitter,this._lastEvent=null;for(const e of Object.keys(a))this.addProtocol(e,a[e]);for(const e of Object.keys(u))this.addEncoding(e,u[e]);this.reset()}addProtocol(e,t){this._protocols[e]=t}addEncoding(e,t){this._encodings[e]=t}get activeProtocol(){return this._activeProtocol}get areMouseEventsActive(){return 0!==this._protocols[this._activeProtocol].events}set activeProtocol(e){if(!this._protocols[e])throw new Error(`unknown protocol "${e}"`);this._activeProtocol=e,this._onProtocolChange.fire(this._protocols[e].events)}get activeEncoding(){return this._activeEncoding}set activeEncoding(e){if(!this._encodings[e])throw new Error(`unknown encoding "${e}"`);this._activeEncoding=e}reset(){this.activeProtocol="NONE",this.activeEncoding="DEFAULT",this._lastEvent=null}get onProtocolChange(){return this._onProtocolChange.event}triggerMouseEvent(e){if(e.col<0||e.col>=this._bufferService.cols||e.row<0||e.row>=this._bufferService.rows)return!1;if(4===e.button&&32===e.action)return!1;if(3===e.button&&32!==e.action)return!1;if(4!==e.button&&(2===e.action||3===e.action))return!1;if(e.col++,e.row++,32===e.action&&this._lastEvent&&this._equalEvents(this._lastEvent,e,"SGR_PIXELS"===this._activeEncoding))return!1;if(!this._protocols[this._activeProtocol].restrict(e))return!1;const t=this._encodings[this._activeEncoding](e);return t&&("DEFAULT"===this._activeEncoding?this._coreService.triggerBinaryEvent(t):this._coreService.triggerDataEvent(t,!0)),this._lastEvent=e,!0}explainEvents(e){return{down:!!(1&e),up:!!(2&e),drag:!!(4&e),move:!!(8&e),wheel:!!(16&e)}}_equalEvents(e,t,r){if(r){if(e.x!==t.x)return!1;if(e.y!==t.y)return!1}else{if(e.col!==t.col)return!1;if(e.row!==t.row)return!1}return e.button===t.button&&e.action===t.action&&e.ctrl===t.ctrl&&e.alt===t.alt&&e.shift===t.shift}};h=i([n(0,s.IBufferService),n(1,s.ICoreService)],h),t.CoreMouseService=h},6975:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoreService=void 0;const s=r(2585),o=r(8460),a=r(1439),l=r(844),c=Object.freeze({insertMode:!1}),u=Object.freeze({applicationCursorKeys:!1,applicationKeypad:!1,bracketedPasteMode:!1,origin:!1,reverseWraparound:!1,sendFocus:!1,wraparound:!0});let h=class extends l.Disposable{constructor(e,t,r,i){super(),this._bufferService=t,this._logService=r,this._optionsService=i,this.isCursorInitialized=!1,this.isCursorHidden=!1,this._onData=this.register(new o.EventEmitter),this._onUserInput=this.register(new o.EventEmitter),this._onBinary=this.register(new o.EventEmitter),this._scrollToBottom=e,this.register({dispose:()=>this._scrollToBottom=void 0}),this.modes=(0,a.clone)(c),this.decPrivateModes=(0,a.clone)(u)}get onData(){return this._onData.event}get onUserInput(){return this._onUserInput.event}get onBinary(){return this._onBinary.event}reset(){this.modes=(0,a.clone)(c),this.decPrivateModes=(0,a.clone)(u)}triggerDataEvent(e,t=!1){if(this._optionsService.rawOptions.disableStdin)return;const r=this._bufferService.buffer;r.ybase!==r.ydisp&&this._scrollToBottom(),t&&this._onUserInput.fire(),this._logService.debug(`sending data "${e}"`,(()=>e.split("").map((e=>e.charCodeAt(0))))),this._onData.fire(e)}triggerBinaryEvent(e){this._optionsService.rawOptions.disableStdin||(this._logService.debug(`sending binary "${e}"`,(()=>e.split("").map((e=>e.charCodeAt(0))))),this._onBinary.fire(e))}};h=i([n(1,s.IBufferService),n(2,s.ILogService),n(3,s.IOptionsService)],h),t.CoreService=h},9074:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DecorationService=void 0;const i=r(8055),n=r(8460),s=r(844),o=r(6106),a={xmin:0,xmax:0};class l extends s.Disposable{constructor(){super(...arguments),this._decorations=new o.SortedList((e=>null==e?void 0:e.marker.line)),this._onDecorationRegistered=this.register(new n.EventEmitter),this._onDecorationRemoved=this.register(new n.EventEmitter)}get onDecorationRegistered(){return this._onDecorationRegistered.event}get onDecorationRemoved(){return this._onDecorationRemoved.event}get decorations(){return this._decorations.values()}registerDecoration(e){if(e.marker.isDisposed)return;const t=new c(e);if(t){const e=t.marker.onDispose((()=>t.dispose()));t.onDispose((()=>{t&&(this._decorations.delete(t)&&this._onDecorationRemoved.fire(t),e.dispose())})),this._decorations.insert(t),this._onDecorationRegistered.fire(t)}return t}reset(){for(const e of this._decorations.values())e.dispose();this._decorations.clear()}*getDecorationsAtCell(e,t,r){var i,n,s;let o=0,a=0;for(const l of this._decorations.getKeyIterator(t))o=null!==(i=l.options.x)&&void 0!==i?i:0,a=o+(null!==(n=l.options.width)&&void 0!==n?n:1),e>=o&&e<a&&(!r||(null!==(s=l.options.layer)&&void 0!==s?s:"bottom")===r)&&(yield l)}forEachDecorationAtCell(e,t,r,i){this._decorations.forEachByKey(t,(t=>{var n,s,o;a.xmin=null!==(n=t.options.x)&&void 0!==n?n:0,a.xmax=a.xmin+(null!==(s=t.options.width)&&void 0!==s?s:1),e>=a.xmin&&e<a.xmax&&(!r||(null!==(o=t.options.layer)&&void 0!==o?o:"bottom")===r)&&i(t)}))}dispose(){for(const e of this._decorations.values())this._onDecorationRemoved.fire(e);this.reset()}}t.DecorationService=l;class c extends s.Disposable{constructor(e){super(),this.options=e,this.isDisposed=!1,this.onRenderEmitter=this.register(new n.EventEmitter),this.onRender=this.onRenderEmitter.event,this._onDispose=this.register(new n.EventEmitter),this.onDispose=this._onDispose.event,this._cachedBg=null,this._cachedFg=null,this.marker=e.marker,this.options.overviewRulerOptions&&!this.options.overviewRulerOptions.position&&(this.options.overviewRulerOptions.position="full")}get backgroundColorRGB(){return null===this._cachedBg&&(this.options.backgroundColor?this._cachedBg=i.css.toColor(this.options.backgroundColor):this._cachedBg=void 0),this._cachedBg}get foregroundColorRGB(){return null===this._cachedFg&&(this.options.foregroundColor?this._cachedFg=i.css.toColor(this.options.foregroundColor):this._cachedFg=void 0),this._cachedFg}dispose(){this._isDisposed||(this._isDisposed=!0,this._onDispose.fire(),super.dispose())}}},3730:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DirtyRowService=void 0;const s=r(2585);let o=class{constructor(e){this._bufferService=e,this.clearRange()}get start(){return this._start}get end(){return this._end}clearRange(){this._start=this._bufferService.buffer.y,this._end=this._bufferService.buffer.y}markDirty(e){e<this._start?this._start=e:e>this._end&&(this._end=e)}markRangeDirty(e,t){if(e>t){const r=e;e=t,t=r}e<this._start&&(this._start=e),t>this._end&&(this._end=t)}markAllDirty(){this.markRangeDirty(0,this._bufferService.rows-1)}};o=i([n(0,s.IBufferService)],o),t.DirtyRowService=o},4348:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstantiationService=t.ServiceCollection=void 0;const i=r(2585),n=r(8343);class s{constructor(...e){this._entries=new Map;for(const[t,r]of e)this.set(t,r)}set(e,t){const r=this._entries.get(e);return this._entries.set(e,t),r}forEach(e){this._entries.forEach(((t,r)=>e(r,t)))}has(e){return this._entries.has(e)}get(e){return this._entries.get(e)}}t.ServiceCollection=s,t.InstantiationService=class{constructor(){this._services=new s,this._services.set(i.IInstantiationService,this)}setService(e,t){this._services.set(e,t)}getService(e){return this._services.get(e)}createInstance(e,...t){const r=(0,n.getServiceDependencies)(e).sort(((e,t)=>e.index-t.index)),i=[];for(const t of r){const r=this._services.get(t.id);if(!r)throw new Error(`[createInstance] ${e.name} depends on UNKNOWN service ${t.id}.`);i.push(r)}const s=r.length>0?r[0].index:t.length;if(t.length!==s)throw new Error(`[createInstance] First service dependency of ${e.name} at position ${s+1} conflicts with ${t.length} static arguments`);return new e(...[...t,...i])}}},7866:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.LogService=void 0;const s=r(2585),o={debug:s.LogLevelEnum.DEBUG,info:s.LogLevelEnum.INFO,warn:s.LogLevelEnum.WARN,error:s.LogLevelEnum.ERROR,off:s.LogLevelEnum.OFF};let a=class{constructor(e){this._optionsService=e,this.logLevel=s.LogLevelEnum.OFF,this._updateLogLevel(),this._optionsService.onOptionChange((e=>{"logLevel"===e&&this._updateLogLevel()}))}_updateLogLevel(){this.logLevel=o[this._optionsService.rawOptions.logLevel]}_evalLazyOptionalParams(e){for(let t=0;t<e.length;t++)"function"==typeof e[t]&&(e[t]=e[t]())}_log(e,t,r){this._evalLazyOptionalParams(r),e.call(console,"xterm.js: "+t,...r)}debug(e,...t){this.logLevel<=s.LogLevelEnum.DEBUG&&this._log(console.log,e,t)}info(e,...t){this.logLevel<=s.LogLevelEnum.INFO&&this._log(console.info,e,t)}warn(e,...t){this.logLevel<=s.LogLevelEnum.WARN&&this._log(console.warn,e,t)}error(e,...t){this.logLevel<=s.LogLevelEnum.ERROR&&this._log(console.error,e,t)}};a=i([n(0,s.IOptionsService)],a),t.LogService=a},7302:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OptionsService=t.DEFAULT_OPTIONS=void 0;const i=r(8460),n=r(6114);t.DEFAULT_OPTIONS={cols:80,rows:24,cursorBlink:!1,cursorStyle:"block",cursorWidth:1,customGlyphs:!0,drawBoldTextInBrightColors:!0,fastScrollModifier:"alt",fastScrollSensitivity:5,fontFamily:"courier-new, courier, monospace",fontSize:15,fontWeight:"normal",fontWeightBold:"bold",lineHeight:1,letterSpacing:0,linkHandler:null,logLevel:"info",scrollback:1e3,scrollSensitivity:1,screenReaderMode:!1,smoothScrollDuration:0,macOptionIsMeta:!1,macOptionClickForcesSelection:!1,minimumContrastRatio:1,disableStdin:!1,allowProposedApi:!1,allowTransparency:!1,tabStopWidth:8,theme:{},rightClickSelectsWord:n.isMac,windowOptions:{},windowsMode:!1,wordSeparator:" ()[]{}',\"`",altClickMovesCursor:!0,convertEol:!1,termName:"xterm",cancelEvents:!1,overviewRulerWidth:0};const s=["normal","bold","100","200","300","400","500","600","700","800","900"];t.OptionsService=class{constructor(e){this._onOptionChange=new i.EventEmitter;const r=Object.assign({},t.DEFAULT_OPTIONS);for(const t in e)if(t in r)try{const i=e[t];r[t]=this._sanitizeAndValidateOption(t,i)}catch(e){console.error(e)}this.rawOptions=r,this.options=Object.assign({},r),this._setupOptions()}get onOptionChange(){return this._onOptionChange.event}_setupOptions(){const e=e=>{if(!(e in t.DEFAULT_OPTIONS))throw new Error(`No option with key "${e}"`);return this.rawOptions[e]},r=(e,r)=>{if(!(e in t.DEFAULT_OPTIONS))throw new Error(`No option with key "${e}"`);r=this._sanitizeAndValidateOption(e,r),this.rawOptions[e]!==r&&(this.rawOptions[e]=r,this._onOptionChange.fire(e))};for(const t in this.rawOptions){const i={get:e.bind(this,t),set:r.bind(this,t)};Object.defineProperty(this.options,t,i)}}_sanitizeAndValidateOption(e,r){switch(e){case"cursorStyle":if(r||(r=t.DEFAULT_OPTIONS[e]),!function(e){return"block"===e||"underline"===e||"bar"===e}(r))throw new Error(`"${r}" is not a valid value for ${e}`);break;case"wordSeparator":r||(r=t.DEFAULT_OPTIONS[e]);break;case"fontWeight":case"fontWeightBold":if("number"==typeof r&&1<=r&&r<=1e3)break;r=s.includes(r)?r:t.DEFAULT_OPTIONS[e];break;case"cursorWidth":r=Math.floor(r);case"lineHeight":case"tabStopWidth":if(r<1)throw new Error(`${e} cannot be less than 1, value: ${r}`);break;case"minimumContrastRatio":r=Math.max(1,Math.min(21,Math.round(10*r)/10));break;case"scrollback":if((r=Math.min(r,4294967295))<0)throw new Error(`${e} cannot be less than 0, value: ${r}`);break;case"fastScrollSensitivity":case"scrollSensitivity":if(r<=0)throw new Error(`${e} cannot be less than or equal to 0, value: ${r}`);case"rows":case"cols":if(!r&&0!==r)throw new Error(`${e} must be numeric, value: ${r}`)}return r}}},2660:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OscLinkService=void 0;const s=r(2585);let o=class{constructor(e){this._bufferService=e,this._nextId=1,this._entriesWithId=new Map,this._dataByLinkId=new Map}registerLink(e){const t=this._bufferService.buffer;if(void 0===e.id){const r=t.addMarker(t.ybase+t.y),i={data:e,id:this._nextId++,lines:[r]};return r.onDispose((()=>this._removeMarkerFromLink(i,r))),this._dataByLinkId.set(i.id,i),i.id}const r=e,i=this._getEntryIdKey(r),n=this._entriesWithId.get(i);if(n)return this.addLineToLink(n.id,t.ybase+t.y),n.id;const s=t.addMarker(t.ybase+t.y),o={id:this._nextId++,key:this._getEntryIdKey(r),data:r,lines:[s]};return s.onDispose((()=>this._removeMarkerFromLink(o,s))),this._entriesWithId.set(o.key,o),this._dataByLinkId.set(o.id,o),o.id}addLineToLink(e,t){const r=this._dataByLinkId.get(e);if(r&&r.lines.every((e=>e.line!==t))){const e=this._bufferService.buffer.addMarker(t);r.lines.push(e),e.onDispose((()=>this._removeMarkerFromLink(r,e)))}}getLinkData(e){var t;return null===(t=this._dataByLinkId.get(e))||void 0===t?void 0:t.data}_getEntryIdKey(e){return`${e.id};;${e.uri}`}_removeMarkerFromLink(e,t){const r=e.lines.indexOf(t);-1!==r&&(e.lines.splice(r,1),0===e.lines.length&&(void 0!==e.data.id&&this._entriesWithId.delete(e.key),this._dataByLinkId.delete(e.id)))}};o=i([n(0,s.IBufferService)],o),t.OscLinkService=o},8343:(e,t)=>{function r(e,t,r){t.di$target===t?t.di$dependencies.push({id:e,index:r}):(t.di$dependencies=[{id:e,index:r}],t.di$target=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.createDecorator=t.getServiceDependencies=t.serviceRegistry=void 0,t.serviceRegistry=new Map,t.getServiceDependencies=function(e){return e.di$dependencies||[]},t.createDecorator=function(e){if(t.serviceRegistry.has(e))return t.serviceRegistry.get(e);const i=function(e,t,n){if(3!==arguments.length)throw new Error("@IServiceName-decorator can only be used to decorate a parameter");r(i,e,n)};return i.toString=()=>e,t.serviceRegistry.set(e,i),i}},2585:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IDecorationService=t.IUnicodeService=t.IOscLinkService=t.IOptionsService=t.ILogService=t.LogLevelEnum=t.IInstantiationService=t.IDirtyRowService=t.ICharsetService=t.ICoreService=t.ICoreMouseService=t.IBufferService=void 0;const i=r(8343);var n;t.IBufferService=(0,i.createDecorator)("BufferService"),t.ICoreMouseService=(0,i.createDecorator)("CoreMouseService"),t.ICoreService=(0,i.createDecorator)("CoreService"),t.ICharsetService=(0,i.createDecorator)("CharsetService"),t.IDirtyRowService=(0,i.createDecorator)("DirtyRowService"),t.IInstantiationService=(0,i.createDecorator)("InstantiationService"),(n=t.LogLevelEnum||(t.LogLevelEnum={}))[n.DEBUG=0]="DEBUG",n[n.INFO=1]="INFO",n[n.WARN=2]="WARN",n[n.ERROR=3]="ERROR",n[n.OFF=4]="OFF",t.ILogService=(0,i.createDecorator)("LogService"),t.IOptionsService=(0,i.createDecorator)("OptionsService"),t.IOscLinkService=(0,i.createDecorator)("OscLinkService"),t.IUnicodeService=(0,i.createDecorator)("UnicodeService"),t.IDecorationService=(0,i.createDecorator)("DecorationService")},1480:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeService=void 0;const i=r(8460),n=r(225);t.UnicodeService=class{constructor(){this._providers=Object.create(null),this._active="",this._onChange=new i.EventEmitter;const e=new n.UnicodeV6;this.register(e),this._active=e.version,this._activeProvider=e}get onChange(){return this._onChange.event}get versions(){return Object.keys(this._providers)}get activeVersion(){return this._active}set activeVersion(e){if(!this._providers[e])throw new Error(`unknown Unicode version "${e}"`);this._active=e,this._activeProvider=this._providers[e],this._onChange.fire(e)}register(e){this._providers[e.version]=e}wcwidth(e){return this._activeProvider.wcwidth(e)}getStringCellWidth(e){let t=0;const r=e.length;for(let i=0;i<r;++i){let n=e.charCodeAt(i);if(55296<=n&&n<=56319){if(++i>=r)return t+this.wcwidth(n);const s=e.charCodeAt(i);56320<=s&&s<=57343?n=1024*(n-55296)+s-56320+65536:t+=this.wcwidth(s)}t+=this.wcwidth(n)}return t}}}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var s=t[i]={exports:{}};return e[i].call(s.exports,s,s.exports,r),s.exports}var i={};return(()=>{var e=i;Object.defineProperty(e,"__esModule",{value:!0}),e.Terminal=void 0;const t=r(3236),n=r(9042),s=r(7975),o=r(7090),a=r(5741),l=r(8285),c=["cols","rows"];e.Terminal=class{constructor(e){this._core=new t.Terminal(e),this._addonManager=new a.AddonManager,this._publicOptions=Object.assign({},this._core.options);const r=e=>this._core.options[e],i=(e,t)=>{this._checkReadonlyOptions(e),this._core.options[e]=t};for(const e in this._core.options){const t={get:r.bind(this,e),set:i.bind(this,e)};Object.defineProperty(this._publicOptions,e,t)}}_checkReadonlyOptions(e){if(c.includes(e))throw new Error(`Option "${e}" can only be set in the constructor`)}_checkProposedApi(){if(!this._core.optionsService.rawOptions.allowProposedApi)throw new Error("You must set the allowProposedApi option to true to use proposed API")}get onBell(){return this._core.onBell}get onBinary(){return this._core.onBinary}get onCursorMove(){return this._core.onCursorMove}get onData(){return this._core.onData}get onKey(){return this._core.onKey}get onLineFeed(){return this._core.onLineFeed}get onRender(){return this._core.onRender}get onResize(){return this._core.onResize}get onScroll(){return this._core.onScroll}get onSelectionChange(){return this._core.onSelectionChange}get onTitleChange(){return this._core.onTitleChange}get onWriteParsed(){return this._core.onWriteParsed}get element(){return this._core.element}get parser(){return this._checkProposedApi(),this._parser||(this._parser=new s.ParserApi(this._core)),this._parser}get unicode(){return this._checkProposedApi(),new o.UnicodeApi(this._core)}get textarea(){return this._core.textarea}get rows(){return this._core.rows}get cols(){return this._core.cols}get buffer(){return this._checkProposedApi(),this._buffer||(this._buffer=new l.BufferNamespaceApi(this._core)),this._buffer}get markers(){return this._checkProposedApi(),this._core.markers}get modes(){const e=this._core.coreService.decPrivateModes;let t="none";switch(this._core.coreMouseService.activeProtocol){case"X10":t="x10";break;case"VT200":t="vt200";break;case"DRAG":t="drag";break;case"ANY":t="any"}return{applicationCursorKeysMode:e.applicationCursorKeys,applicationKeypadMode:e.applicationKeypad,bracketedPasteMode:e.bracketedPasteMode,insertMode:this._core.coreService.modes.insertMode,mouseTrackingMode:t,originMode:e.origin,reverseWraparoundMode:e.reverseWraparound,sendFocusMode:e.sendFocus,wraparoundMode:e.wraparound}}get options(){return this._publicOptions}set options(e){for(const t in e)this._publicOptions[t]=e[t]}blur(){this._core.blur()}focus(){this._core.focus()}resize(e,t){this._verifyIntegers(e,t),this._core.resize(e,t)}open(e){this._core.open(e)}attachCustomKeyEventHandler(e){this._core.attachCustomKeyEventHandler(e)}registerLinkProvider(e){return this._checkProposedApi(),this._core.registerLinkProvider(e)}registerCharacterJoiner(e){return this._checkProposedApi(),this._core.registerCharacterJoiner(e)}deregisterCharacterJoiner(e){this._checkProposedApi(),this._core.deregisterCharacterJoiner(e)}registerMarker(e=0){return this._verifyIntegers(e),this._core.addMarker(e)}registerDecoration(e){var t,r,i;return this._checkProposedApi(),this._verifyPositiveIntegers(null!==(t=e.x)&&void 0!==t?t:0,null!==(r=e.width)&&void 0!==r?r:0,null!==(i=e.height)&&void 0!==i?i:0),this._core.registerDecoration(e)}hasSelection(){return this._core.hasSelection()}select(e,t,r){this._verifyIntegers(e,t,r),this._core.select(e,t,r)}getSelection(){return this._core.getSelection()}getSelectionPosition(){return this._core.getSelectionPosition()}clearSelection(){this._core.clearSelection()}selectAll(){this._core.selectAll()}selectLines(e,t){this._verifyIntegers(e,t),this._core.selectLines(e,t)}dispose(){this._addonManager.dispose(),this._core.dispose()}scrollLines(e){this._verifyIntegers(e),this._core.scrollLines(e)}scrollPages(e){this._verifyIntegers(e),this._core.scrollPages(e)}scrollToTop(){this._core.scrollToTop()}scrollToBottom(){this._core.scrollToBottom()}scrollToLine(e){this._verifyIntegers(e),this._core.scrollToLine(e)}clear(){this._core.clear()}write(e,t){this._core.write(e,t)}writeln(e,t){this._core.write(e),this._core.write("\r\n",t)}paste(e){this._core.paste(e)}refresh(e,t){this._verifyIntegers(e,t),this._core.refresh(e,t)}reset(){this._core.reset()}clearTextureAtlas(){this._core.clearTextureAtlas()}loadAddon(e){return this._addonManager.loadAddon(this,e)}static get strings(){return n}_verifyIntegers(...e){for(const t of e)if(t===1/0||isNaN(t)||t%1!=0)throw new Error("This API only accepts integers")}_verifyPositiveIntegers(...e){for(const t of e)if(t&&(t===1/0||isNaN(t)||t%1!=0||t<0))throw new Error("This API only accepts positive integers")}}})(),i})()}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nc=void 0;var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__);var e=__webpack_require__(294),t=__webpack_require__(745),r=__webpack_require__(869),i=__webpack_require__(864),n=__webpack_require__(774),s=__webpack_require__.n(n);const o=function(e){function t(e,i,l,c,d){for(var f,p,v,g,y,C=0,w=0,k=0,E=0,A=0,I=0,P=v=f=0,M=0,N=0,H=0,F=0,U=l.length,j=U-1,z="",W="",$="",K="";M<U;){if(p=l.charCodeAt(M),M===j&&0!==w+E+k+C&&(0!==w&&(p=47===w?10:47),E=k=C=0,U++,j++),0===w+E+k+C){if(M===j&&(0<N&&(z=z.replace(h,"")),0<z.trim().length)){switch(p){case 32:case 9:case 59:case 13:case 10:break;default:z+=l.charAt(M)}p=59}switch(p){case 123:for(f=(z=z.trim()).charCodeAt(0),v=1,F=++M;M<U;){switch(p=l.charCodeAt(M)){case 123:v++;break;case 125:v--;break;case 47:switch(p=l.charCodeAt(M+1)){case 42:case 47:e:{for(P=M+1;P<j;++P)switch(l.charCodeAt(P)){case 47:if(42===p&&42===l.charCodeAt(P-1)&&M+2!==P){M=P+1;break e}break;case 10:if(47===p){M=P+1;break e}}M=P}}break;case 91:p++;case 40:p++;case 34:case 39:for(;M++<j&&l.charCodeAt(M)!==p;);}if(0===v)break;M++}if(v=l.substring(F,M),0===f&&(f=(z=z.replace(u,"").trim()).charCodeAt(0)),64===f){switch(0<N&&(z=z.replace(h,"")),p=z.charCodeAt(1)){case 100:case 109:case 115:case 45:N=i;break;default:N=D}if(F=(v=t(i,N,v,p,d+1)).length,0<O&&(y=a(3,v,N=r(D,z,H),i,L,x,F,p,d,c),z=N.join(""),void 0!==y&&0===(F=(v=y.trim()).length)&&(p=0,v="")),0<F)switch(p){case 115:z=z.replace(S,o);case 100:case 109:case 45:v=z+"{"+v+"}";break;case 107:v=(z=z.replace(_,"$1 $2"))+"{"+v+"}",v=1===T||2===T&&s("@"+v,3)?"@-webkit-"+v+"@"+v:"@"+v;break;default:v=z+v,112===c&&(W+=v,v="")}else v=""}else v=t(i,r(i,z,H),v,c,d+1);$+=v,v=H=N=P=f=0,z="",p=l.charCodeAt(++M);break;case 125:case 59:if(1<(F=(z=(0<N?z.replace(h,""):z).trim()).length))switch(0===P&&(f=z.charCodeAt(0),45===f||96<f&&123>f)&&(F=(z=z.replace(" ",":")).length),0<O&&void 0!==(y=a(1,z,i,e,L,x,W.length,c,d,c))&&0===(F=(z=y.trim()).length)&&(z="\0\0"),f=z.charCodeAt(0),p=z.charCodeAt(1),f){case 0:break;case 64:if(105===p||99===p){K+=z+l.charAt(M);break}default:58!==z.charCodeAt(F-1)&&(W+=n(z,f,p,z.charCodeAt(2)))}H=N=P=f=0,z="",p=l.charCodeAt(++M)}}switch(p){case 13:case 10:47===w?w=0:0===1+f&&107!==c&&0<z.length&&(N=1,z+="\0"),0<O*B&&a(0,z,i,e,L,x,W.length,c,d,c),x=1,L++;break;case 59:case 125:if(0===w+E+k+C){x++;break}default:switch(x++,g=l.charAt(M),p){case 9:case 32:if(0===E+C+w)switch(A){case 44:case 58:case 9:case 32:g="";break;default:32!==p&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===E+w+C&&(N=H=1,g="\f"+g);break;case 108:if(0===E+w+C+R&&0<P)switch(M-P){case 2:112===A&&58===l.charCodeAt(M-3)&&(R=A);case 8:111===I&&(R=I)}break;case 58:0===E+w+C&&(P=M);break;case 44:0===w+k+E+C&&(N=1,g+="\r");break;case 34:case 39:0===w&&(E=E===p?0:0===E?p:E);break;case 91:0===E+w+k&&C++;break;case 93:0===E+w+k&&C--;break;case 41:0===E+w+C&&k--;break;case 40:0===E+w+C&&(0===f&&(2*A+3*I==533||(f=1)),k++);break;case 64:0===w+k+E+C+P+v&&(v=1);break;case 42:case 47:if(!(0<E+C+k))switch(w){case 0:switch(2*p+3*l.charCodeAt(M+1)){case 235:w=47;break;case 220:F=M,w=42}break;case 42:47===p&&42===A&&F+2!==M&&(33===l.charCodeAt(F+2)&&(W+=l.substring(F,M+1)),g="",w=0)}}0===w&&(z+=g)}I=A,A=p,M++}if(0<(F=W.length)){if(N=i,0<O&&void 0!==(y=a(2,W,N,e,L,x,F,c,d,c))&&0===(W=y).length)return K+W+$;if(W=N.join(",")+"{"+W+"}",0!=T*R){switch(2!==T||s(W,2)||(R=0),R){case 111:W=W.replace(b,":-moz-$1")+W;break;case 112:W=W.replace(m,"::-webkit-input-$1")+W.replace(m,"::-moz-$1")+W.replace(m,":-ms-input-$1")+W}R=0}}return K+W+$}function r(e,t,r){var n=t.trim().split(v);t=n;var s=n.length,o=e.length;switch(o){case 0:case 1:var a=0;for(e=0===o?"":e[0]+" ";a<s;++a)t[a]=i(e,t[a],r).trim();break;default:var l=a=0;for(t=[];a<s;++a)for(var c=0;c<o;++c)t[l++]=i(e[c]+" ",n[a],r).trim()}return t}function i(e,t,r){var i=t.charCodeAt(0);switch(33>i&&(i=(t=t.trim()).charCodeAt(0)),i){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*r&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function n(e,t,r,i){var o=e+";",a=2*t+3*r+4*i;if(944===a){e=o.indexOf(":",9)+1;var l=o.substring(e,o.length-1).trim();return l=o.substring(0,e).trim()+l+";",1===T||2===T&&s(l,1)?"-webkit-"+l+l:l}if(0===T||2===T&&!s(o,1))return o;switch(a){case 1015:return 97===o.charCodeAt(10)?"-webkit-"+o+o:o;case 951:return 116===o.charCodeAt(3)?"-webkit-"+o+o:o;case 963:return 110===o.charCodeAt(5)?"-webkit-"+o+o:o;case 1009:if(100!==o.charCodeAt(4))break;case 969:case 942:return"-webkit-"+o+o;case 978:return"-webkit-"+o+"-moz-"+o+o;case 1019:case 983:return"-webkit-"+o+"-moz-"+o+"-ms-"+o+o;case 883:if(45===o.charCodeAt(8))return"-webkit-"+o+o;if(0<o.indexOf("image-set(",11))return o.replace(A,"$1-webkit-$2")+o;break;case 932:if(45===o.charCodeAt(4))switch(o.charCodeAt(5)){case 103:return"-webkit-box-"+o.replace("-grow","")+"-webkit-"+o+"-ms-"+o.replace("grow","positive")+o;case 115:return"-webkit-"+o+"-ms-"+o.replace("shrink","negative")+o;case 98:return"-webkit-"+o+"-ms-"+o.replace("basis","preferred-size")+o}return"-webkit-"+o+"-ms-"+o+o;case 964:return"-webkit-"+o+"-ms-flex-"+o+o;case 1023:if(99!==o.charCodeAt(8))break;return"-webkit-box-pack"+(l=o.substring(o.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+o+"-ms-flex-pack"+l+o;case 1005:return f.test(o)?o.replace(d,":-webkit-")+o.replace(d,":-moz-")+o:o;case 1e3:switch(t=(l=o.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(t)){case 226:l=o.replace(y,"tb");break;case 232:l=o.replace(y,"tb-rl");break;case 220:l=o.replace(y,"lr");break;default:return o}return"-webkit-"+o+"-ms-"+l+o;case 1017:if(-1===o.indexOf("sticky",9))break;case 975:switch(t=(o=e).length-10,a=(l=(33===o.charCodeAt(t)?o.substring(0,t):o).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(111>l.charCodeAt(8))break;case 115:o=o.replace(l,"-webkit-"+l)+";"+o;break;case 207:case 102:o=o.replace(l,"-webkit-"+(102<a?"inline-":"")+"box")+";"+o.replace(l,"-webkit-"+l)+";"+o.replace(l,"-ms-"+l+"box")+";"+o}return o+";";case 938:if(45===o.charCodeAt(5))switch(o.charCodeAt(6)){case 105:return l=o.replace("-items",""),"-webkit-"+o+"-webkit-box-"+l+"-ms-flex-"+l+o;case 115:return"-webkit-"+o+"-ms-flex-item-"+o.replace(w,"")+o;default:return"-webkit-"+o+"-ms-flex-line-pack"+o.replace("align-content","").replace(w,"")+o}break;case 973:case 989:if(45!==o.charCodeAt(3)||122===o.charCodeAt(4))break;case 931:case 953:if(!0===E.test(e))return 115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0)?n(e.replace("stretch","fill-available"),t,r,i).replace(":fill-available",":stretch"):o.replace(l,"-webkit-"+l)+o.replace(l,"-moz-"+l.replace("fill-",""))+o;break;case 962:if(o="-webkit-"+o+(102===o.charCodeAt(5)?"-ms-"+o:"")+o,211===r+i&&105===o.charCodeAt(13)&&0<o.indexOf("transform",10))return o.substring(0,o.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+o}return o}function s(e,t){var r=e.indexOf(1===t?":":"{"),i=e.substring(0,3!==t?r:10);return r=e.substring(r+1,e.length-1),P(2!==t?i:i.replace(k,"$1"),r,t)}function o(e,t){var r=n(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return r!==t+";"?r.replace(C," or ($1)").substring(4):"("+t+")"}function a(e,t,r,i,n,s,o,a,l,u){for(var h,d=0,f=t;d<O;++d)switch(h=I[d].call(c,e,f,r,i,n,s,o,a,l,u)){case void 0:case!1:case!0:case null:break;default:f=h}if(f!==t)return f}function l(e){return void 0!==(e=e.prefix)&&(P=null,e?"function"!=typeof e?T=1:(T=2,P=e):T=0),l}function c(e,r){var i=e;if(33>i.charCodeAt(0)&&(i=i.trim()),i=[i],0<O){var n=a(-1,r,i,i,L,x,0,0,0,0);void 0!==n&&"string"==typeof n&&(r=n)}var s=t(D,i,r,0,0);return 0<O&&void 0!==(n=a(-2,s,i,i,L,x,s.length,0,0,0))&&(s=n),R=0,x=L=1,s}var u=/^\0+/g,h=/[\0\r\f]/g,d=/: */g,f=/zoo|gra/,p=/([,: ])(transform)/g,v=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,_=/@(k\w+)\s*(\S*)\s*/,m=/::(place)/g,b=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,S=/\(\s*(.*)\s*\)/g,C=/([\s\S]*?);/g,w=/-self|flex-/g,k=/[^]*?(:[rp][el]a[\w-]+)[^]*/,E=/stretch|:\s*\w+\-(?:conte|avail)/,A=/([^-])(image-set\()/,x=1,L=1,R=0,T=1,D=[],I=[],O=0,P=null,B=0;return c.use=function e(t){switch(t){case void 0:case null:O=I.length=0;break;default:if("function"==typeof t)I[O++]=t;else if("object"==typeof t)for(var r=0,i=t.length;r<i;++r)e(t[r]);else B=0|!!t}return e},c.set=l,void 0!==e&&l(e),c},a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var l=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const c=function(e){var t=Object.create(null);return function(e){return void 0===t[e]&&(t[e]=(r=e,l.test(r)||111===r.charCodeAt(0)&&110===r.charCodeAt(1)&&r.charCodeAt(2)<91)),t[e];var r}}();var u=__webpack_require__(679),h=__webpack_require__.n(u);function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e}).apply(this,arguments)}var f=function(e,t){for(var r=[e[0]],i=0,n=t.length;i<n;i+=1)r.push(t[i],e[i+1]);return r},p=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,i.typeOf)(e)},v=Object.freeze([]),g=Object.freeze({});function _(e){return"function"==typeof e}function m(e){return e.displayName||e.name||"Component"}function b(e){return e&&"string"==typeof e.styledComponentId}var y="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",S="undefined"!=typeof window&&"HTMLElement"in window,C=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY);function w(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(r.length>0?" Args: "+r.join(", "):""))}var k=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,r=0;r<e;r++)t+=this.groupSizes[r];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var r=this.groupSizes,i=r.length,n=i;e>=n;)(n<<=1)<0&&w(16,""+e);this.groupSizes=new Uint32Array(n),this.groupSizes.set(r),this.length=n;for(var s=i;s<n;s++)this.groupSizes[s]=0}for(var o=this.indexOfGroup(e+1),a=0,l=t.length;a<l;a++)this.tag.insertRule(o,t[a])&&(this.groupSizes[e]++,o++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],r=this.indexOfGroup(e),i=r+t;this.groupSizes[e]=0;for(var n=r;n<i;n++)this.tag.deleteRule(r)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var r=this.groupSizes[e],i=this.indexOfGroup(e),n=i+r,s=i;s<n;s++)t+=this.tag.getRule(s)+"/*!sc*/\n";return t},e}(),E=new Map,A=new Map,x=1,L=function(e){if(E.has(e))return E.get(e);for(;A.has(x);)x++;var t=x++;return E.set(e,t),A.set(t,e),t},R=function(e){return A.get(e)},T=function(e,t){t>=x&&(x=t+1),E.set(e,t),A.set(t,e)},D="style["+y+'][data-styled-version="5.3.6"]',I=new RegExp("^"+y+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),O=function(e,t,r){for(var i,n=r.split(","),s=0,o=n.length;s<o;s++)(i=n[s])&&e.registerName(t,i)},P=function(e,t){for(var r=(t.textContent||"").split("/*!sc*/\n"),i=[],n=0,s=r.length;n<s;n++){var o=r[n].trim();if(o){var a=o.match(I);if(a){var l=0|parseInt(a[1],10),c=a[2];0!==l&&(T(c,l),O(e,c,a[3]),e.getTag().insertRules(l,i)),i.length=0}else i.push(o)}}},B=function(){return __webpack_require__.nc},M=function(e){var t=document.head,r=e||t,i=document.createElement("style"),n=function(e){for(var t=e.childNodes,r=t.length;r>=0;r--){var i=t[r];if(i&&1===i.nodeType&&i.hasAttribute(y))return i}}(r),s=void 0!==n?n.nextSibling:null;i.setAttribute(y,"active"),i.setAttribute("data-styled-version","5.3.6");var o=B();return o&&i.setAttribute("nonce",o),r.insertBefore(i,s),i},N=function(){function e(e){var t=this.element=M(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,r=0,i=t.length;r<i;r++){var n=t[r];if(n.ownerNode===e)return n}w(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),H=function(){function e(e){var t=this.element=M(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var r=document.createTextNode(t),i=this.nodes[e];return this.element.insertBefore(r,i||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),F=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),U=S,j={isServer:!S,useCSSOMInjection:!C},z=function(){function e(e,t,r){void 0===e&&(e=g),void 0===t&&(t={}),this.options=d({},j,{},e),this.gs=t,this.names=new Map(r),this.server=!!e.isServer,!this.server&&S&&U&&(U=!1,function(e){for(var t=document.querySelectorAll(D),r=0,i=t.length;r<i;r++){var n=t[r];n&&"active"!==n.getAttribute(y)&&(P(e,n),n.parentNode&&n.parentNode.removeChild(n))}}(this))}e.registerId=function(e){return L(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,r){return void 0===r&&(r=!0),new e(d({},this.options,{},t),this.gs,r&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(r=(t=this.options).isServer,i=t.useCSSOMInjection,n=t.target,e=r?new F(n):i?new N(n):new H(n),new k(e)));var e,t,r,i,n},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(L(e),this.names.has(e))this.names.get(e).add(t);else{var r=new Set;r.add(t),this.names.set(e,r)}},t.insertRules=function(e,t,r){this.registerName(e,t),this.getTag().insertRules(L(e),r)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(L(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),r=t.length,i="",n=0;n<r;n++){var s=R(n);if(void 0!==s){var o=e.names.get(s),a=t.getGroup(n);if(o&&a&&o.size){var l=y+".g"+n+'[id="'+s+'"]',c="";void 0!==o&&o.forEach((function(e){e.length>0&&(c+=e+",")})),i+=""+a+l+'{content:"'+c+'"}/*!sc*/\n'}}}return i}(this)},e}(),W=/(a)(d)/gi,$=function(e){return String.fromCharCode(e+(e>25?39:97))};function K(e){var t,r="";for(t=Math.abs(e);t>52;t=t/52|0)r=$(t%52)+r;return($(t%52)+r).replace(W,"$1-$2")}var V=function(e,t){for(var r=t.length;r;)e=33*e^t.charCodeAt(--r);return e},q=function(e){return V(5381,e)};function Z(e){for(var t=0;t<e.length;t+=1){var r=e[t];if(_(r)&&!b(r))return!1}return!0}var G=q("5.3.6"),X=function(){function e(e,t,r){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===r||r.isStatic)&&Z(e),this.componentId=t,this.baseHash=V(G,t),this.baseStyle=r,z.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,r){var i=this.componentId,n=[];if(this.baseStyle&&n.push(this.baseStyle.generateAndInjectStyles(e,t,r)),this.isStatic&&!r.hash)if(this.staticRulesId&&t.hasNameForId(i,this.staticRulesId))n.push(this.staticRulesId);else{var s=fe(this.rules,e,t,r).join(""),o=K(V(this.baseHash,s)>>>0);if(!t.hasNameForId(i,o)){var a=r(s,"."+o,void 0,i);t.insertRules(i,o,a)}n.push(o),this.staticRulesId=o}else{for(var l=this.rules.length,c=V(this.baseHash,r.hash),u="",h=0;h<l;h++){var d=this.rules[h];if("string"==typeof d)u+=d;else if(d){var f=fe(d,e,t,r),p=Array.isArray(f)?f.join(""):f;c=V(c,p+h),u+=p}}if(u){var v=K(c>>>0);if(!t.hasNameForId(i,v)){var g=r(u,"."+v,void 0,i);t.insertRules(i,v,g)}n.push(v)}}return n.join(" ")},e}(),Y=/^\s*\/\/.*$/gm,J=[":","[",".","#"];function Q(e){var t,r,i,n,s=void 0===e?g:e,a=s.options,l=void 0===a?g:a,c=s.plugins,u=void 0===c?v:c,h=new o(l),d=[],f=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(r,i,n,s,o,a,l,c,u,h){switch(r){case 1:if(0===u&&64===i.charCodeAt(0))return e(i+";"),"";break;case 2:if(0===c)return i+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(n[0]+i),"";default:return i+(0===h?"/*|*/":"")}case-2:i.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),p=function(e,i,s){return 0===i&&-1!==J.indexOf(s[r.length])||s.match(n)?e:"."+t};function _(e,s,o,a){void 0===a&&(a="&");var l=e.replace(Y,""),c=s&&o?o+" "+s+" { "+l+" }":l;return t=a,r=s,i=new RegExp("\\"+r+"\\b","g"),n=new RegExp("(\\"+r+"\\b){2,}"),h(o||!s?"":s,c)}return h.use([].concat(u,[function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(r)>0&&(n[0]=n[0].replace(i,p))},f,function(e){if(-2===e){var t=d;return d=[],t}}])),_.hash=u.length?u.reduce((function(e,t){return t.name||w(15),V(e,t.name)}),5381).toString():"",_}var ee=e.createContext(),te=(ee.Consumer,e.createContext()),re=(te.Consumer,new z),ie=Q();function ne(){return(0,e.useContext)(ee)||re}function se(t){var r=(0,e.useState)(t.stylisPlugins),i=r[0],n=r[1],o=ne(),a=(0,e.useMemo)((function(){var e=o;return t.sheet?e=t.sheet:t.target&&(e=e.reconstructWithOptions({target:t.target},!1)),t.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[t.disableCSSOMInjection,t.sheet,t.target]),l=(0,e.useMemo)((function(){return Q({options:{prefix:!t.disableVendorPrefixes},plugins:i})}),[t.disableVendorPrefixes,i]);return(0,e.useEffect)((function(){s()(i,t.stylisPlugins)||n(t.stylisPlugins)}),[t.stylisPlugins]),e.createElement(ee.Provider,{value:a},e.createElement(te.Provider,{value:l},t.children))}var oe=function(){function e(e,t){var r=this;this.inject=function(e,t){void 0===t&&(t=ie);var i=r.name+t.hash;e.hasNameForId(r.id,i)||e.insertRules(r.id,i,t(r.rules,i,"@keyframes"))},this.toString=function(){return w(12,String(r.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ie),this.name+e.hash},e}(),ae=/([A-Z])/,le=/([A-Z])/g,ce=/^ms-/,ue=function(e){return"-"+e.toLowerCase()};function he(e){return ae.test(e)?e.replace(le,ue).replace(ce,"-ms-"):e}var de=function(e){return null==e||!1===e||""===e};function fe(e,t,r,i){if(Array.isArray(e)){for(var n,s=[],o=0,l=e.length;o<l;o+=1)""!==(n=fe(e[o],t,r,i))&&(Array.isArray(n)?s.push.apply(s,n):s.push(n));return s}return de(e)?"":b(e)?"."+e.styledComponentId:_(e)?"function"!=typeof(c=e)||c.prototype&&c.prototype.isReactComponent||!t?e:fe(e(t),t,r,i):e instanceof oe?r?(e.inject(r,i),e.getName(i)):e:p(e)?function e(t,r){var i,n,s=[];for(var o in t)t.hasOwnProperty(o)&&!de(t[o])&&(Array.isArray(t[o])&&t[o].isCss||_(t[o])?s.push(he(o)+":",t[o],";"):p(t[o])?s.push.apply(s,e(t[o],o)):s.push(he(o)+": "+(i=o,(null==(n=t[o])||"boolean"==typeof n||""===n?"":"number"!=typeof n||0===n||i in a?String(n).trim():n+"px")+";")));return r?[r+" {"].concat(s,["}"]):s}(e):e.toString();var c}var pe=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function ve(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];return _(e)||p(e)?pe(fe(f(v,[e].concat(r)))):0===r.length&&1===e.length&&"string"==typeof e[0]?e:pe(fe(f(e,r)))}new Set;var ge=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,_e=/(^-|-$)/g;function me(e){return e.replace(ge,"-").replace(_e,"")}function be(e){return"string"==typeof e&&!0}var ye=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Se=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Ce(e,t,r){var i=e[r];ye(t)&&ye(i)?we(i,t):e[r]=t}function we(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];for(var n=0,s=r;n<s.length;n++){var o=s[n];if(ye(o))for(var a in o)Se(a)&&Ce(e,o[a],a)}return e}var ke=e.createContext();ke.Consumer;var Ee={};function Ae(t,r,i){var n=b(t),s=!be(t),o=r.attrs,a=void 0===o?v:o,l=r.componentId,u=void 0===l?function(e,t){var r="string"!=typeof e?"sc":me(e);Ee[r]=(Ee[r]||0)+1;var i=r+"-"+function(e){return K(q(e)>>>0)}("5.3.6"+r+Ee[r]);return t?t+"-"+i:i}(r.displayName,r.parentComponentId):l,f=r.displayName,p=void 0===f?function(e){return be(e)?"styled."+e:"Styled("+m(e)+")"}(t):f,y=r.displayName&&r.componentId?me(r.displayName)+"-"+r.componentId:r.componentId||u,S=n&&t.attrs?Array.prototype.concat(t.attrs,a).filter(Boolean):a,C=r.shouldForwardProp;n&&t.shouldForwardProp&&(C=r.shouldForwardProp?function(e,i,n){return t.shouldForwardProp(e,i,n)&&r.shouldForwardProp(e,i,n)}:t.shouldForwardProp);var w,k=new X(i,y,n?t.componentStyle:void 0),E=k.isStatic&&0===a.length,A=function(t,r){return function(t,r,i,n){var s=t.attrs,o=t.componentStyle,a=t.defaultProps,l=t.foldedComponentIds,u=t.shouldForwardProp,h=t.styledComponentId,f=t.target,p=function(e,t,r){void 0===e&&(e=g);var i=d({},t,{theme:e}),n={};return r.forEach((function(e){var t,r,s,o=e;for(t in _(o)&&(o=o(i)),o)i[t]=n[t]="className"===t?(r=n[t],s=o[t],r&&s?r+" "+s:r||s):o[t]})),[i,n]}(function(e,t,r){return void 0===r&&(r=g),e.theme!==r.theme&&e.theme||t||r.theme}(r,(0,e.useContext)(ke),a)||g,r,s),v=p[0],m=p[1],b=function(t,r,i,n){var s=ne(),o=(0,e.useContext)(te)||ie;return r?t.generateAndInjectStyles(g,s,o):t.generateAndInjectStyles(i,s,o)}(o,n,v),y=i,S=m.$as||r.$as||m.as||r.as||f,C=be(S),w=m!==r?d({},r,{},m):r,k={};for(var E in w)"$"!==E[0]&&"as"!==E&&("forwardedAs"===E?k.as=w[E]:(u?u(E,c,S):!C||c(E))&&(k[E]=w[E]));return r.style&&m.style!==r.style&&(k.style=d({},r.style,{},m.style)),k.className=Array.prototype.concat(l,h,b!==h?b:null,r.className,m.className).filter(Boolean).join(" "),k.ref=y,(0,e.createElement)(S,k)}(w,t,r,E)};return A.displayName=p,(w=e.forwardRef(A)).attrs=S,w.componentStyle=k,w.displayName=p,w.shouldForwardProp=C,w.foldedComponentIds=n?Array.prototype.concat(t.foldedComponentIds,t.styledComponentId):v,w.styledComponentId=y,w.target=n?t.target:t,w.withComponent=function(e){var t=r.componentId,n=function(e,t){if(null==e)return{};var r,i,n={},s=Object.keys(e);for(i=0;i<s.length;i++)r=s[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(r,["componentId"]),s=t&&t+"-"+(be(e)?e:me(m(e)));return Ae(e,d({},n,{attrs:S,componentId:s}),i)},Object.defineProperty(w,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=n?we({},t.defaultProps,e):e}}),w.toString=function(){return"."+w.styledComponentId},s&&h()(w,t,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),w}var xe,Le=function(e){return function e(t,r,n){if(void 0===n&&(n=g),!(0,i.isValidElementType)(r))return w(1,String(r));var s=function(){return t(r,n,ve.apply(void 0,arguments))};return s.withConfig=function(i){return e(t,r,d({},n,{},i))},s.attrs=function(i){return e(t,r,d({},n,{attrs:Array.prototype.concat(n.attrs,i).filter(Boolean)}))},s}(Ae,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){Le[e]=Le(e)})),(xe=function(e,t){this.rules=e,this.componentId=t,this.isStatic=Z(e),z.registerId(this.componentId+1)}.prototype).createStyles=function(e,t,r,i){var n=i(fe(this.rules,t,r,i).join(""),""),s=this.componentId+e;r.insertRules(s,s,n)},xe.removeStyles=function(e,t){t.clearRules(this.componentId+e)},xe.renderStyles=function(e,t,r,i){e>2&&z.registerId(this.componentId+e),this.removeStyles(e,r),this.createStyles(e,t,r,i)},function(){var t=function(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString();if(!e)return"";var r=B();return"<style "+[r&&'nonce="'+r+'"',y+'="true"','data-styled-version="5.3.6"'].filter(Boolean).join(" ")+">"+e+"</style>"},this.getStyleTags=function(){return t.sealed?w(2):t._emitSheetCSS()},this.getStyleElement=function(){var r;if(t.sealed)return w(2);var i=((r={})[y]="",r["data-styled-version"]="5.3.6",r.dangerouslySetInnerHTML={__html:t.instance.toString()},r),n=B();return n&&(i.nonce=n),[e.createElement("style",d({},i,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=!0},this.instance=new z({isServer:!0}),this.sealed=!1}.prototype;t.collectStyles=function(t){return this.sealed?w(2):e.createElement(se,{sheet:this.instance},t)},t.interleaveWithNodeStream=function(e){return w(3)}}();const Re=Le;var Te=__webpack_require__(320);const De=e=>null!=e&&""!==e&&!1!==e&&0!==e;Re.div`
   display:block;
   text-align:center;
`,Re.div`
   display:inline-block;
`;class Ie extends e.Component{componentDidMount(){var e;if(this.mountedWorkaround)return;this.mountedWorkaround=!0;const t=null!==(e=document.getElementById("xterm"))&&void 0!==e?e:"",{xterm:r,handleKeyPress:i}=this.props;De(t)&&(r.open(t),r.onData((e=>i(e))),r.attachCustomKeyEventHandler((e=>(e.stopPropagation(),e.preventDefault(),De(e.ctrlKey)&&De(e.shiftKey)&&67===e.keyCode?navigator.clipboard.writeText(r.getSelection()):De(e.ctrlKey)&&De(e.shiftKey)&&86===e.keyCode?navigator.clipboard.readText().then((e=>i(e))):"Space"===e.code?i(e.key):void 0))))}render(){return e.createElement("div",{className:"terminal"},e.createElement("div",{className:"terminal_xterm",id:"xterm"}))}}const Oe=Ie;var Pe=__webpack_require__(379),Be=__webpack_require__.n(Pe),Me=__webpack_require__(795),Ne=__webpack_require__.n(Me),He=__webpack_require__(569),Fe=__webpack_require__.n(He),Ue=__webpack_require__(565),je=__webpack_require__.n(Ue),ze=__webpack_require__(216),We=__webpack_require__.n(ze),$e=__webpack_require__(589),Ke=__webpack_require__.n($e),Ve=__webpack_require__(14),qe={};qe.styleTagTransform=Ke(),qe.setAttributes=je(),qe.insert=Fe().bind(null,"head"),qe.domAPI=Ne(),qe.insertStyleElement=We(),Be()(Ve.Z,qe),Ve.Z&&Ve.Z.locals&&Ve.Z.locals;var Ze=__webpack_require__(20),Ge={};Ge.styleTagTransform=Ke(),Ge.setAttributes=je(),Ge.insert=Fe().bind(null,"head"),Ge.domAPI=Ne(),Ge.insertStyleElement=We(),Be()(Ze.Z,Ge),Ze.Z&&Ze.Z.locals&&Ze.Z.locals,Re.div`
display : inline-block;
padding : 0px 5px;
`,Re.div`
background-color: darkgray;
padding: 5px;
font-size: 13px;
text-align: center;
`;class Xe extends e.Component{constructor(e){super(e),this.init=()=>{const e=null!=this.props.mpsServer?this.props.mpsServer.replace("http","ws"):"",t=null!=this.props.deviceId?this.props.deviceId:"";this.terminal=new r.AmtTerminal,this.redirector=new r.AMTRedirector(this.logger,r.Protocol.SOL,new FileReader,t,16994,"","",0,0,this.props.authToken,`${e}/relay`),this.dataProcessor=new r.TerminalDataProcessor(this.terminal),this.terminal.onSend=this.redirector.send.bind(this.redirector),this.redirector.onNewState=this.terminal.StateChange.bind(this.terminal),this.redirector.onStateChanged=this.onTerminalStateChange.bind(this),this.redirector.onProcessData=this.dataProcessor.processData.bind(this.dataProcessor),this.dataProcessor.processDataToXterm=this.handleWriteToXterm.bind(this),this.dataProcessor.clearTerminal=this.handleClearTerminal.bind(this),this.term=new Te.Terminal({cursorStyle:"block",fontWeight:"bold",rows:30,cols:100})},this.cleanUp=()=>{this.terminal=null,this.redirector=null,this.dataProcessor=null,this.term=null},this.handleWriteToXterm=e=>this.term.write(e),this.handleClearTerminal=()=>this.term.reset(),this.handleKeyPress=e=>this.terminal.TermSendKeys(e),this.handleKeyDownPress=e=>this.terminal.handleKeyDownEvents(e),this.startSOL=()=>{void 0!==this.redirector&&this.redirector.start(WebSocket)},this.stopSOL=()=>{void 0!==this.redirector&&this.redirector.stop(),this.handleClearTerminal(),this.cleanUp(),this.init()},this.handleSOLConnect=e=>{e.persist(),0===this.state.SOLstate?this.startSOL():this.stopSOL()},this.onTerminalStateChange=(e,t)=>this.setState({SOLstate:t}),this.handleFeatureStatus=e=>{this.setState({solNotEnabled:e})},this.getSOLState=()=>3===this.state.SOLstate?2:0,this.logger=new r.ConsoleLogger(r.LogLevel.ERROR),this.state={isConnected:!1,SOLstate:0,powerState:0,showSuccess:!1,message:"",isSelected:!0,type:"",solNotEnabled:"",deviceOnSleep:"",isPowerStateLoaded:!1}}componentDidMount(){this.init()}render(){const{SOLstate:t}=this.state;return e.createElement(e.Fragment,null,e.createElement("button",{onClick:this.handleSOLConnect},3===t?"Disconnect":"Connect"),3===t&&this.term&&e.createElement(Oe,{handleKeyPress:this.handleKeyPress,handleKeyDownPress:this.handleKeyDownPress,xterm:this.term}))}}function Ye(e){return Ye="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ye(e)}function Je(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Qe(e){var t=function(e,t){if("object"!==Ye(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,"string");if("object"!==Ye(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Ye(t)?t:String(t)}function et(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,Qe(i.key),i)}}function tt(e,t,r){return t&&et(e.prototype,t),r&&et(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function rt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function it(e,t){return it=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},it(e,t)}function nt(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&it(e,t)}function st(e,t){if(t&&("object"===Ye(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return rt(e)}function ot(e){return ot=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ot(e)}function at(e,t,r){return(t=Qe(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function lt(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,i=new Array(t);r<t;r++)i[r]=e[r];return i}function ct(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function ut(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ct(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ct(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var ht={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,t){console&&console[e]&&console[e].apply(console,t)}},dt=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Je(this,e),this.init(t,r)}return tt(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||ht,this.options=t,this.debug=t.debug}},{key:"setDebug",value:function(e){this.debug=e}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,r,i){return i&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(r).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,ut(ut({},{prefix:"".concat(this.prefix,":").concat(t,":")}),this.options))}},{key:"clone",value:function(t){return(t=t||this.options).prefix=t.prefix||this.prefix,new e(this.logger,t)}}]),e}(),ft=new dt,pt=function(){function e(){Je(this,e),this.observers={}}return tt(e,[{key:"on",value:function(e,t){var r=this;return e.split(" ").forEach((function(e){r.observers[e]=r.observers[e]||[],r.observers[e].push(t)})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e])}},{key:"emit",value:function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];if(this.observers[e]){var n=[].concat(this.observers[e]);n.forEach((function(e){e.apply(void 0,r)}))}if(this.observers["*"]){var s=[].concat(this.observers["*"]);s.forEach((function(t){t.apply(t,[e].concat(r))}))}}}]),e}();function vt(){var e,t,r=new Promise((function(r,i){e=r,t=i}));return r.resolve=e,r.reject=t,r}function gt(e){return null==e?"":""+e}function _t(e,t,r){e.forEach((function(e){t[e]&&(r[e]=t[e])}))}function mt(e,t,r){function i(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function n(){return!e||"string"==typeof e}for(var s="string"!=typeof t?[].concat(t):t.split(".");s.length>1;){if(n())return{};var o=i(s.shift());!e[o]&&r&&(e[o]=new r),e=Object.prototype.hasOwnProperty.call(e,o)?e[o]:{}}return n()?{}:{obj:e,k:i(s.shift())}}function bt(e,t,r){var i=mt(e,t,Object);i.obj[i.k]=r}function yt(e,t){var r=mt(e,t),i=r.obj,n=r.k;if(i)return i[n]}function St(e,t,r){var i=yt(e,r);return void 0!==i?i:yt(t,r)}function Ct(e,t,r){for(var i in t)"__proto__"!==i&&"constructor"!==i&&(i in e?"string"==typeof e[i]||e[i]instanceof String||"string"==typeof t[i]||t[i]instanceof String?r&&(e[i]=t[i]):Ct(e[i],t[i],r):e[i]=t[i]);return e}function wt(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var kt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function Et(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return kt[e]})):e}var At="undefined"!=typeof window&&window.navigator&&void 0===window.navigator.userAgentData&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1,xt=[" ",",","?","!",";"];function Lt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Rt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Lt(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Lt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Tt(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(e){if(e[t])return e[t];for(var i=t.split(r),n=e,s=0;s<i.length;++s){if(!n)return;if("string"==typeof n[i[s]]&&s+1<i.length)return;if(void 0===n[i[s]]){for(var o=2,a=i.slice(s,s+o).join(r),l=n[a];void 0===l&&i.length>s+o;)o++,l=n[a=i.slice(s,s+o).join(r)];if(void 0===l)return;if(null===l)return null;if(t.endsWith(a)){if("string"==typeof l)return l;if(a&&"string"==typeof l[a])return l[a]}var c=i.slice(s+o).join(r);return c?Tt(l,c,r):void 0}n=n[i[s]]}return n}}var Dt=function(e){nt(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ot(t);if(r){var n=ot(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return st(this,e)});function n(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return Je(this,n),t=i.call(this),At&&pt.call(rt(t)),t.data=e||{},t.options=r,void 0===t.options.keySeparator&&(t.options.keySeparator="."),void 0===t.options.ignoreJSONStructure&&(t.options.ignoreJSONStructure=!0),t}return tt(n,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:"getResource",value:function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=void 0!==i.keySeparator?i.keySeparator:this.options.keySeparator,s=void 0!==i.ignoreJSONStructure?i.ignoreJSONStructure:this.options.ignoreJSONStructure,o=[e,t];r&&"string"!=typeof r&&(o=o.concat(r)),r&&"string"==typeof r&&(o=o.concat(n?r.split(n):r)),e.indexOf(".")>-1&&(o=e.split("."));var a=yt(this.data,o);return a||!s||"string"!=typeof r?a:Tt(this.data&&this.data[e]&&this.data[e][t],r,n)}},{key:"addResource",value:function(e,t,r,i){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},s=this.options.keySeparator;void 0===s&&(s=".");var o=[e,t];r&&(o=o.concat(s?r.split(s):r)),e.indexOf(".")>-1&&(i=t,t=(o=e.split("."))[1]),this.addNamespaces(t),bt(this.data,o,i),n.silent||this.emit("added",e,t,r,i)}},{key:"addResources",value:function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var n in r)"string"!=typeof r[n]&&"[object Array]"!==Object.prototype.toString.apply(r[n])||this.addResource(e,t,n,r[n],{silent:!0});i.silent||this.emit("added",e,t,r)}},{key:"addResourceBundle",value:function(e,t,r,i,n){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},o=[e,t];e.indexOf(".")>-1&&(i=r,r=t,t=(o=e.split("."))[1]),this.addNamespaces(t);var a=yt(this.data,o)||{};i?Ct(a,r,n):a=Rt(Rt({},a),r),bt(this.data,o,a),s.silent||this.emit("added",e,t,r)}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?Rt(Rt({},{}),this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"hasLanguageSomeTranslations",value:function(e){var t=this.getDataByLanguage(e);return!!(t&&Object.keys(t)||[]).find((function(e){return t[e]&&Object.keys(t[e]).length>0}))}},{key:"toJSON",value:function(){return this.data}}]),n}(pt),It={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,r,i,n){var s=this;return e.forEach((function(e){s.processors[e]&&(t=s.processors[e].process(t,r,i,n))})),t}};function Ot(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Pt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ot(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ot(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Bt={},Mt=function(e){nt(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ot(t);if(r){var n=ot(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return st(this,e)});function n(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Je(this,n),t=i.call(this),At&&pt.call(rt(t)),_t(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,rt(t)),t.options=r,void 0===t.options.keySeparator&&(t.options.keySeparator="."),t.logger=ft.create("translator"),t}return tt(n,[{key:"changeLanguage",value:function(e){e&&(this.language=e)}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;var r=this.resolve(e,t);return r&&void 0!==r.res}},{key:"extractFromKey",value:function(e,t){var r=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===r&&(r=":");var i=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,n=t.ns||this.options.defaultNS||[],s=r&&e.indexOf(r)>-1,o=!(this.options.userDefinedKeySeparator||t.keySeparator||this.options.userDefinedNsSeparator||t.nsSeparator||function(e,t,r){t=t||"",r=r||"";var i=xt.filter((function(e){return t.indexOf(e)<0&&r.indexOf(e)<0}));if(0===i.length)return!0;var n=new RegExp("(".concat(i.map((function(e){return"?"===e?"\\?":e})).join("|"),")")),s=!n.test(e);if(!s){var o=e.indexOf(r);o>0&&!n.test(e.substring(0,o))&&(s=!0)}return s}(e,r,i));if(s&&!o){var a=e.match(this.interpolator.nestingRegexp);if(a&&a.length>0)return{key:e,namespaces:n};var l=e.split(r);(r!==i||r===i&&this.options.ns.indexOf(l[0])>-1)&&(n=l.shift()),e=l.join(i)}return"string"==typeof n&&(n=[n]),{key:e,namespaces:n}}},{key:"translate",value:function(e,t,r){var i=this;if("object"!==Ye(t)&&this.options.overloadTranslationOptionHandler&&(t=this.options.overloadTranslationOptionHandler(arguments)),t||(t={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);var s=void 0!==t.returnDetails?t.returnDetails:this.options.returnDetails,o=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,a=this.extractFromKey(e[e.length-1],t),l=a.key,c=a.namespaces,u=c[c.length-1],h=t.lng||this.language,d=t.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(h&&"cimode"===h.toLowerCase()){if(d){var f=t.nsSeparator||this.options.nsSeparator;return s?(p.res="".concat(u).concat(f).concat(l),p):"".concat(u).concat(f).concat(l)}return s?(p.res=l,p):l}var p=this.resolve(e,t),v=p&&p.res,g=p&&p.usedKey||l,_=p&&p.exactUsedKey||l,m=Object.prototype.toString.apply(v),b=["[object Number]","[object Function]","[object RegExp]"],y=void 0!==t.joinArrays?t.joinArrays:this.options.joinArrays,S=!this.i18nFormat||this.i18nFormat.handleAsObject,C="string"!=typeof v&&"boolean"!=typeof v&&"number"!=typeof v;if(S&&v&&C&&b.indexOf(m)<0&&("string"!=typeof y||"[object Array]"!==m)){if(!t.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");var w=this.options.returnedObjectHandler?this.options.returnedObjectHandler(g,v,Pt(Pt({},t),{},{ns:c})):"key '".concat(l," (").concat(this.language,")' returned an object instead of string.");return s?(p.res=w,p):w}if(o){var k="[object Array]"===m,E=k?[]:{},A=k?_:g;for(var x in v)if(Object.prototype.hasOwnProperty.call(v,x)){var L="".concat(A).concat(o).concat(x);E[x]=this.translate(L,Pt(Pt({},t),{joinArrays:!1,ns:c})),E[x]===L&&(E[x]=v[x])}v=E}}else if(S&&"string"==typeof y&&"[object Array]"===m)(v=v.join(y))&&(v=this.extendTranslation(v,e,t,r));else{var R=!1,T=!1,D=void 0!==t.count&&"string"!=typeof t.count,I=n.hasDefaultValue(t),O=D?this.pluralResolver.getSuffix(h,t.count,t):"",P=t["defaultValue".concat(O)]||t.defaultValue;!this.isValidLookup(v)&&I&&(R=!0,v=P),this.isValidLookup(v)||(T=!0,v=l);var B=t.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey,M=B&&T?void 0:v,N=I&&P!==v&&this.options.updateMissing;if(T||R||N){if(this.logger.log(N?"updateKey":"missingKey",h,u,l,N?P:v),o){var H=this.resolve(l,Pt(Pt({},t),{},{keySeparator:!1}));H&&H.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var F=[],U=this.languageUtils.getFallbackCodes(this.options.fallbackLng,t.lng||this.language);if("fallback"===this.options.saveMissingTo&&U&&U[0])for(var j=0;j<U.length;j++)F.push(U[j]);else"all"===this.options.saveMissingTo?F=this.languageUtils.toResolveHierarchy(t.lng||this.language):F.push(t.lng||this.language);var z=function(e,r,n){var s=I&&n!==v?n:M;i.options.missingKeyHandler?i.options.missingKeyHandler(e,u,r,s,N,t):i.backendConnector&&i.backendConnector.saveMissing&&i.backendConnector.saveMissing(e,u,r,s,N,t),i.emit("missingKey",e,u,r,v)};this.options.saveMissing&&(this.options.saveMissingPlurals&&D?F.forEach((function(e){i.pluralResolver.getSuffixes(e,t).forEach((function(r){z([e],l+r,t["defaultValue".concat(r)]||P)}))})):z(F,l,P))}v=this.extendTranslation(v,e,t,p,r),T&&v===l&&this.options.appendNamespaceToMissingKey&&(v="".concat(u,":").concat(l)),(T||R)&&this.options.parseMissingKeyHandler&&(v="v1"!==this.options.compatibilityAPI?this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?"".concat(u,":").concat(l):l,R?v:void 0):this.options.parseMissingKeyHandler(v))}return s?(p.res=v,p):v}},{key:"extendTranslation",value:function(e,t,r,i,n){var s=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,Pt(Pt({},this.options.interpolation.defaultVariables),r),i.usedLng,i.usedNS,i.usedKey,{resolved:i});else if(!r.skipInterpolation){r.interpolation&&this.interpolator.init(Pt(Pt({},r),{interpolation:Pt(Pt({},this.options.interpolation),r.interpolation)}));var o,a="string"==typeof e&&(r&&r.interpolation&&void 0!==r.interpolation.skipOnVariables?r.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);if(a){var l=e.match(this.interpolator.nestingRegexp);o=l&&l.length}var c=r.replace&&"string"!=typeof r.replace?r.replace:r;if(this.options.interpolation.defaultVariables&&(c=Pt(Pt({},this.options.interpolation.defaultVariables),c)),e=this.interpolator.interpolate(e,c,r.lng||this.language,r),a){var u=e.match(this.interpolator.nestingRegexp);o<(u&&u.length)&&(r.nest=!1)}!1!==r.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,i=new Array(e),o=0;o<e;o++)i[o]=arguments[o];return n&&n[0]===i[0]&&!r.context?(s.logger.warn("It seems you are nesting recursively key: ".concat(i[0]," in key: ").concat(t[0])),null):s.translate.apply(s,i.concat([t]))}),r)),r.interpolation&&this.interpolator.reset()}var h=r.postProcess||this.options.postProcess,d="string"==typeof h?[h]:h;return null!=e&&d&&d.length&&!1!==r.applyPostProcessor&&(e=It.handle(d,e,t,this.options&&this.options.postProcessPassResolved?Pt({i18nResolved:i},r):r,this)),e}},{key:"resolve",value:function(e){var t,r,i,n,s,o=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((function(e){if(!o.isValidLookup(t)){var l=o.extractFromKey(e,a),c=l.key;r=c;var u=l.namespaces;o.options.fallbackNS&&(u=u.concat(o.options.fallbackNS));var h=void 0!==a.count&&"string"!=typeof a.count,d=h&&!a.ordinal&&0===a.count&&o.pluralResolver.shouldUseIntlApi(),f=void 0!==a.context&&("string"==typeof a.context||"number"==typeof a.context)&&""!==a.context,p=a.lngs?a.lngs:o.languageUtils.toResolveHierarchy(a.lng||o.language,a.fallbackLng);u.forEach((function(e){o.isValidLookup(t)||(s=e,!Bt["".concat(p[0],"-").concat(e)]&&o.utils&&o.utils.hasLoadedNamespace&&!o.utils.hasLoadedNamespace(s)&&(Bt["".concat(p[0],"-").concat(e)]=!0,o.logger.warn('key "'.concat(r,'" for languages "').concat(p.join(", "),'" won\'t get resolved as namespace "').concat(s,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),p.forEach((function(r){if(!o.isValidLookup(t)){n=r;var s,l=[c];if(o.i18nFormat&&o.i18nFormat.addLookupKeys)o.i18nFormat.addLookupKeys(l,c,r,e,a);else{var u;h&&(u=o.pluralResolver.getSuffix(r,a.count,a));var p="".concat(o.options.pluralSeparator,"zero");if(h&&(l.push(c+u),d&&l.push(c+p)),f){var v="".concat(c).concat(o.options.contextSeparator).concat(a.context);l.push(v),h&&(l.push(v+u),d&&l.push(v+p))}}for(;s=l.pop();)o.isValidLookup(t)||(i=s,t=o.getResource(r,e,s,a))}})))}))}})),{res:t,usedKey:r,exactUsedKey:i,usedLng:n,usedNS:s}}},{key:"isValidLookup",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,r,i):this.resourceStore.getResource(e,t,r,i)}}],[{key:"hasDefaultValue",value:function(e){var t="defaultValue";for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&t===r.substring(0,t.length)&&void 0!==e[r])return!0;return!1}}]),n}(pt);function Nt(e){return e.charAt(0).toUpperCase()+e.slice(1)}var Ht=function(){function e(t){Je(this,e),this.options=t,this.supportedLngs=this.options.supportedLngs||!1,this.logger=ft.create("languageUtils")}return tt(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],r=e.split("-");return this.options.lowerCaseLng?r=r.map((function(e){return e.toLowerCase()})):2===r.length?(r[0]=r[0].toLowerCase(),r[1]=r[1].toUpperCase(),t.indexOf(r[1].toLowerCase())>-1&&(r[1]=Nt(r[1].toLowerCase()))):3===r.length&&(r[0]=r[0].toLowerCase(),2===r[1].length&&(r[1]=r[1].toUpperCase()),"sgn"!==r[0]&&2===r[2].length&&(r[2]=r[2].toUpperCase()),t.indexOf(r[1].toLowerCase())>-1&&(r[1]=Nt(r[1].toLowerCase())),t.indexOf(r[2].toLowerCase())>-1&&(r[2]=Nt(r[2].toLowerCase()))),r.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isSupportedCode",value:function(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,r=this;return e?(e.forEach((function(e){if(!t){var i=r.formatLanguageCode(e);r.options.supportedLngs&&!r.isSupportedCode(i)||(t=i)}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var i=r.getLanguagePartFromCode(e);if(r.isSupportedCode(i))return t=i;t=r.options.supportedLngs.find((function(e){if(0===e.indexOf(i))return e}))}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var r=e[t];return r||(r=e[this.getScriptPartFromCode(t)]),r||(r=e[this.formatLanguageCode(t)]),r||(r=e[this.getLanguagePartFromCode(t)]),r||(r=e.default),r||[]}},{key:"toResolveHierarchy",value:function(e,t){var r=this,i=this.getFallbackCodes(t||this.options.fallbackLng||[],e),n=[],s=function(e){e&&(r.isSupportedCode(e)?n.push(e):r.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))};return"string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&s(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&s(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&s(this.getLanguagePartFromCode(e))):"string"==typeof e&&s(this.formatLanguageCode(e)),i.forEach((function(e){n.indexOf(e)<0&&s(r.formatLanguageCode(e))})),n}}]),e}(),Ft=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],Ut={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}},jt=["v1","v2","v3"],zt={zero:0,one:1,two:2,few:3,many:4,other:5};function Wt(){var e={};return Ft.forEach((function(t){t.lngs.forEach((function(r){e[r]={numbers:t.nr,plurals:Ut[t.fc]}}))})),e}var $t=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Je(this,e),this.languageUtils=t,this.options=r,this.logger=ft.create("pluralResolver"),this.options.compatibilityJSON&&"v4"!==this.options.compatibilityJSON||"undefined"!=typeof Intl&&Intl.PluralRules||(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=Wt()}return tt(e,[{key:"addRule",value:function(e,t){this.rules[e]=t}},{key:"getRule",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(e,{type:t.ordinal?"ordinal":"cardinal"})}catch(e){return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=this.getRule(e,t);return this.shouldUseIntlApi()?r&&r.resolvedOptions().pluralCategories.length>1:r&&r.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,r).map((function(e){return"".concat(t).concat(e)}))}},{key:"getSuffixes",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=this.getRule(e,r);return i?this.shouldUseIntlApi()?i.resolvedOptions().pluralCategories.sort((function(e,t){return zt[e]-zt[t]})).map((function(e){return"".concat(t.options.prepend).concat(e)})):i.numbers.map((function(i){return t.getSuffix(e,i,r)})):[]}},{key:"getSuffix",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=this.getRule(e,r);return i?this.shouldUseIntlApi()?"".concat(this.options.prepend).concat(i.select(t)):this.getSuffixRetroCompatible(i,t):(this.logger.warn("no plural rule found for: ".concat(e)),"")}},{key:"getSuffixRetroCompatible",value:function(e,t){var r=this,i=e.noAbs?e.plurals(t):e.plurals(Math.abs(t)),n=e.numbers[i];this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]&&(2===n?n="plural":1===n&&(n=""));var s=function(){return r.options.prepend&&n.toString()?r.options.prepend+n.toString():n.toString()};return"v1"===this.options.compatibilityJSON?1===n?"":"number"==typeof n?"_plural_".concat(n.toString()):s():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]?s():this.options.prepend&&i.toString()?this.options.prepend+i.toString():i.toString()}},{key:"shouldUseIntlApi",value:function(){return!jt.includes(this.options.compatibilityJSON)}}]),e}();function Kt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Vt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Kt(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Kt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var qt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Je(this,e),this.logger=ft.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return tt(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:Et,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?wt(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?wt(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?wt(t.nestingPrefix):t.nestingPrefixEscaped||wt("$t("),this.nestingSuffix=t.nestingSuffix?wt(t.nestingSuffix):t.nestingSuffixEscaped||wt(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var r="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(r,"g")}},{key:"interpolate",value:function(e,t,r,i){var n,s,o,a=this,l=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function c(e){return e.replace(/\$/g,"$$$$")}var u=function(e){if(e.indexOf(a.formatSeparator)<0){var n=St(t,l,e);return a.alwaysFormat?a.format(n,void 0,r,Vt(Vt(Vt({},i),t),{},{interpolationkey:e})):n}var s=e.split(a.formatSeparator),o=s.shift().trim(),c=s.join(a.formatSeparator).trim();return a.format(St(t,l,o),c,r,Vt(Vt(Vt({},i),t),{},{interpolationkey:o}))};this.resetRegExp();var h=i&&i.missingInterpolationHandler||this.options.missingInterpolationHandler,d=i&&i.interpolation&&void 0!==i.interpolation.skipOnVariables?i.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:function(e){return c(e)}},{regex:this.regexp,safeValue:function(e){return a.escapeValue?c(a.escape(e)):c(e)}}].forEach((function(t){for(o=0;n=t.regex.exec(e);){var r=n[1].trim();if(void 0===(s=u(r)))if("function"==typeof h){var l=h(e,n,i);s="string"==typeof l?l:""}else if(i&&i.hasOwnProperty(r))s="";else{if(d){s=n[0];continue}a.logger.warn("missed to pass in variable ".concat(r," for interpolating ").concat(e)),s=""}else"string"==typeof s||a.useRawValueToEscape||(s=gt(s));var c=t.safeValue(s);if(e=e.replace(n[0],c),d?(t.regex.lastIndex+=s.length,t.regex.lastIndex-=n[0].length):t.regex.lastIndex=0,++o>=a.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var r,i,n,s=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};function a(e,t){var r=this.nestingOptionsSeparator;if(e.indexOf(r)<0)return e;var i=e.split(new RegExp("".concat(r,"[ ]*{"))),s="{".concat(i[1]);e=i[0];var o=(s=this.interpolate(s,n)).match(/'/g),a=s.match(/"/g);(o&&o.length%2==0&&!a||a.length%2!=0)&&(s=s.replace(/'/g,'"'));try{n=JSON.parse(s),t&&(n=Vt(Vt({},t),n))}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(r).concat(s)}return delete n.defaultValue,e}for(;r=this.nestingRegexp.exec(e);){var l=[];(n=Vt({},o)).applyPostProcessor=!1,delete n.defaultValue;var c=!1;if(-1!==r[0].indexOf(this.formatSeparator)&&!/{.*}/.test(r[1])){var u=r[1].split(this.formatSeparator).map((function(e){return e.trim()}));r[1]=u.shift(),l=u,c=!0}if((i=t(a.call(this,r[1].trim(),n),n))&&r[0]===e&&"string"!=typeof i)return i;"string"!=typeof i&&(i=gt(i)),i||(this.logger.warn("missed to resolve ".concat(r[1]," for nesting ").concat(e)),i=""),c&&(i=l.reduce((function(e,t){return s.format(e,t,o.lng,Vt(Vt({},o),{},{interpolationkey:r[1].trim()}))}),i.trim())),e=e.replace(r[0],i),this.regexp.lastIndex=0}return e}}]),e}();function Zt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Gt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Zt(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Zt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Xt(e){var t={};return function(r,i,n){var s=i+JSON.stringify(n),o=t[s];return o||(o=e(i,n),t[s]=o),o(r)}}var Yt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Je(this,e),this.logger=ft.create("formatter"),this.options=t,this.formats={number:Xt((function(e,t){var r=new Intl.NumberFormat(e,t);return function(e){return r.format(e)}})),currency:Xt((function(e,t){var r=new Intl.NumberFormat(e,Gt(Gt({},t),{},{style:"currency"}));return function(e){return r.format(e)}})),datetime:Xt((function(e,t){var r=new Intl.DateTimeFormat(e,Gt({},t));return function(e){return r.format(e)}})),relativetime:Xt((function(e,t){var r=new Intl.RelativeTimeFormat(e,Gt({},t));return function(e){return r.format(e,t.range||"day")}})),list:Xt((function(e,t){var r=new Intl.ListFormat(e,Gt({},t));return function(e){return r.format(e)}}))},this.init(t)}return tt(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},r=t.interpolation;this.formatSeparator=r.formatSeparator?r.formatSeparator:r.formatSeparator||","}},{key:"add",value:function(e,t){this.formats[e.toLowerCase().trim()]=t}},{key:"addCached",value:function(e,t){this.formats[e.toLowerCase().trim()]=Xt(t)}},{key:"format",value:function(e,t,r,i){var n=this;return t.split(this.formatSeparator).reduce((function(e,t){var s=function(e){var t=e.toLowerCase().trim(),r={};if(e.indexOf("(")>-1){var i=e.split("(");t=i[0].toLowerCase().trim();var n=i[1].substring(0,i[1].length-1);"currency"===t&&n.indexOf(":")<0?r.currency||(r.currency=n.trim()):"relativetime"===t&&n.indexOf(":")<0?r.range||(r.range=n.trim()):n.split(";").forEach((function(e){if(e){var t=function(e){return function(e){if(Array.isArray(e))return e}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return lt(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?lt(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.split(":")),i=t[0],n=t.slice(1).join(":").trim().replace(/^'+|'+$/g,"");r[i.trim()]||(r[i.trim()]=n),"false"===n&&(r[i.trim()]=!1),"true"===n&&(r[i.trim()]=!0),isNaN(n)||(r[i.trim()]=parseInt(n,10))}}))}return{formatName:t,formatOptions:r}}(t),o=s.formatName,a=s.formatOptions;if(n.formats[o]){var l=e;try{var c=i&&i.formatParams&&i.formatParams[i.interpolationkey]||{},u=c.locale||c.lng||i.locale||i.lng||r;l=n.formats[o](e,u,Gt(Gt(Gt({},a),i),c))}catch(e){n.logger.warn(e)}return l}return n.logger.warn("there was no format function for ".concat(o)),e}),e)}}]),e}();function Jt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Qt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Jt(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Jt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var er=function(e){nt(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ot(t);if(r){var n=ot(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return st(this,e)});function n(e,t,r){var s,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return Je(this,n),s=i.call(this),At&&pt.call(rt(s)),s.backend=e,s.store=t,s.services=r,s.languageUtils=r.languageUtils,s.options=o,s.logger=ft.create("backendConnector"),s.waitingReads=[],s.maxParallelReads=o.maxParallelReads||10,s.readingCalls=0,s.maxRetries=o.maxRetries>=0?o.maxRetries:5,s.retryTimeout=o.retryTimeout>=1?o.retryTimeout:350,s.state={},s.queue=[],s.backend&&s.backend.init&&s.backend.init(r,o.backend,o),s}return tt(n,[{key:"queueLoad",value:function(e,t,r,i){var n=this,s={},o={},a={},l={};return e.forEach((function(e){var i=!0;t.forEach((function(t){var a="".concat(e,"|").concat(t);!r.reload&&n.store.hasResourceBundle(e,t)?n.state[a]=2:n.state[a]<0||(1===n.state[a]?void 0===o[a]&&(o[a]=!0):(n.state[a]=1,i=!1,void 0===o[a]&&(o[a]=!0),void 0===s[a]&&(s[a]=!0),void 0===l[t]&&(l[t]=!0)))})),i||(a[e]=!0)})),(Object.keys(s).length||Object.keys(o).length)&&this.queue.push({pending:o,pendingCount:Object.keys(o).length,loaded:{},errors:[],callback:i}),{toLoad:Object.keys(s),pending:Object.keys(o),toLoadLanguages:Object.keys(a),toLoadNamespaces:Object.keys(l)}}},{key:"loaded",value:function(e,t,r){var i=e.split("|"),n=i[0],s=i[1];t&&this.emit("failedLoading",n,s,t),r&&this.store.addResourceBundle(n,s,r),this.state[e]=t?-1:2;var o={};this.queue.forEach((function(r){!function(e,t,r,i){var n=mt(e,t,Object),s=n.obj,o=n.k;s[o]=s[o]||[],s[o].push(r)}(r.loaded,[n],s),function(e,t){void 0!==e.pending[t]&&(delete e.pending[t],e.pendingCount--)}(r,e),t&&r.errors.push(t),0!==r.pendingCount||r.done||(Object.keys(r.loaded).forEach((function(e){o[e]||(o[e]={});var t=r.loaded[e];t.length&&t.forEach((function(t){void 0===o[e][t]&&(o[e][t]=!0)}))})),r.done=!0,r.errors.length?r.callback(r.errors):r.callback())})),this.emit("loaded",o),this.queue=this.queue.filter((function(e){return!e.done}))}},{key:"read",value:function(e,t,r){var i=this,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.retryTimeout,o=arguments.length>5?arguments[5]:void 0;if(!e.length)return o(null,{});if(this.readingCalls>=this.maxParallelReads)this.waitingReads.push({lng:e,ns:t,fcName:r,tried:n,wait:s,callback:o});else{this.readingCalls++;var a=function(a,l){if(i.readingCalls--,i.waitingReads.length>0){var c=i.waitingReads.shift();i.read(c.lng,c.ns,c.fcName,c.tried,c.wait,c.callback)}a&&l&&n<i.maxRetries?setTimeout((function(){i.read.call(i,e,t,r,n+1,2*s,o)}),s):o(a,l)},l=this.backend[r].bind(this.backend);if(2!==l.length)return l(e,t,a);try{var c=l(e,t);c&&"function"==typeof c.then?c.then((function(e){return a(null,e)})).catch(a):a(null,c)}catch(e){a(e)}}}},{key:"prepareLoading",value:function(e,t){var r=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),n&&n();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var s=this.queueLoad(e,t,i,n);if(!s.toLoad.length)return s.pending.length||n(),null;s.toLoad.forEach((function(e){r.loadOne(e)}))}},{key:"load",value:function(e,t,r){this.prepareLoading(e,t,{},r)}},{key:"reload",value:function(e,t,r){this.prepareLoading(e,t,{reload:!0},r)}},{key:"loadOne",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=e.split("|"),n=i[0],s=i[1];this.read(n,s,"read",void 0,void 0,(function(i,o){i&&t.logger.warn("".concat(r,"loading namespace ").concat(s," for language ").concat(n," failed"),i),!i&&o&&t.logger.log("".concat(r,"loaded namespace ").concat(s," for language ").concat(n),o),t.loaded(e,i,o)}))}},{key:"saveMissing",value:function(e,t,r,i,n){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:function(){};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t))this.logger.warn('did not save key "'.concat(r,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");else if(null!=r&&""!==r){if(this.backend&&this.backend.create){var a=Qt(Qt({},s),{},{isUpdate:n}),l=this.backend.create.bind(this.backend);if(l.length<6)try{var c;(c=5===l.length?l(e,t,r,i,a):l(e,t,r,i))&&"function"==typeof c.then?c.then((function(e){return o(null,e)})).catch(o):o(null,c)}catch(e){o(e)}else l(e,t,r,i,o,a)}e&&e[0]&&this.store.addResource(e[0],t,r,i)}}}]),n}(pt);function tr(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===Ye(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===Ye(e[2])||"object"===Ye(e[3])){var r=e[3]||e[2];Object.keys(r).forEach((function(e){t[e]=r[e]}))}return t},interpolation:{escapeValue:!0,format:function(e,t,r,i){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function rr(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function ir(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function nr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ir(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ir(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function sr(){}function or(e){Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(t){"function"==typeof e[t]&&(e[t]=e[t].bind(e))}))}var ar=function(e){nt(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ot(t);if(r){var n=ot(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return st(this,e)});function n(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if(Je(this,n),e=i.call(this),At&&pt.call(rt(e)),e.options=rr(t),e.services={},e.logger=ft,e.modules={external:[]},or(rt(e)),r&&!e.isInitialized&&!t.isClone){if(!e.options.initImmediate)return e.init(t,r),st(e,rt(e));setTimeout((function(){e.init(t,r)}),0)}return e}return tt(n,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;"function"==typeof t&&(r=t,t={}),!t.defaultNS&&!1!==t.defaultNS&&t.ns&&("string"==typeof t.ns?t.defaultNS=t.ns:t.ns.indexOf("translation")<0&&(t.defaultNS=t.ns[0]));var i=tr();function n(e){return e?"function"==typeof e?new e:e:null}if(this.options=nr(nr(nr({},i),this.options),rr(t)),"v1"!==this.options.compatibilityAPI&&(this.options.interpolation=nr(nr({},i.interpolation),this.options.interpolation)),void 0!==t.keySeparator&&(this.options.userDefinedKeySeparator=t.keySeparator),void 0!==t.nsSeparator&&(this.options.userDefinedNsSeparator=t.nsSeparator),!this.options.isClone){var s;this.modules.logger?ft.init(n(this.modules.logger),this.options):ft.init(null,this.options),this.modules.formatter?s=this.modules.formatter:"undefined"!=typeof Intl&&(s=Yt);var o=new Ht(this.options);this.store=new Dt(this.options.resources,this.options);var a=this.services;a.logger=ft,a.resourceStore=this.store,a.languageUtils=o,a.pluralResolver=new $t(o,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!s||this.options.interpolation.format&&this.options.interpolation.format!==i.interpolation.format||(a.formatter=n(s),a.formatter.init(a,this.options),this.options.interpolation.format=a.formatter.format.bind(a.formatter)),a.interpolator=new qt(this.options),a.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},a.backendConnector=new er(n(this.modules.backend),a.resourceStore,a,this.options),a.backendConnector.on("*",(function(t){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];e.emit.apply(e,[t].concat(i))})),this.modules.languageDetector&&(a.languageDetector=n(this.modules.languageDetector),a.languageDetector.init&&a.languageDetector.init(a,this.options.detection,this.options)),this.modules.i18nFormat&&(a.i18nFormat=n(this.modules.i18nFormat),a.i18nFormat.init&&a.i18nFormat.init(this)),this.translator=new Mt(this.services,this.options),this.translator.on("*",(function(t){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];e.emit.apply(e,[t].concat(i))})),this.modules.external.forEach((function(t){t.init&&t.init(e)}))}if(this.format=this.options.interpolation.format,r||(r=sr),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var l=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);l.length>0&&"dev"!==l[0]&&(this.options.lng=l[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");var c=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];c.forEach((function(t){e[t]=function(){var r;return(r=e.store)[t].apply(r,arguments)}}));var u=["addResource","addResources","addResourceBundle","removeResourceBundle"];u.forEach((function(t){e[t]=function(){var r;return(r=e.store)[t].apply(r,arguments),e}}));var h=vt(),d=function(){var t=function(t,i){e.isInitialized&&!e.initializedStoreOnce&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),h.resolve(i),r(t,i)};if(e.languages&&"v1"!==e.options.compatibilityAPI&&!e.isInitialized)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t)};return this.options.resources||!this.options.initImmediate?d():setTimeout(d,0),h}},{key:"loadResources",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:sr,i=r,n="string"==typeof e?e:this.language;if("function"==typeof e&&(i=e),!this.options.resources||this.options.partialBundledLanguages){if(n&&"cimode"===n.toLowerCase())return i();var s=[],o=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){s.indexOf(e)<0&&s.push(e)}))};if(n)o(n);else{var a=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);a.forEach((function(e){return o(e)}))}this.options.preload&&this.options.preload.forEach((function(e){return o(e)})),this.services.backendConnector.load(s,this.options.ns,(function(e){e||t.resolvedLanguage||!t.language||t.setResolvedLanguage(t.language),i(e)}))}else i(null)}},{key:"reloadResources",value:function(e,t,r){var i=vt();return e||(e=this.languages),t||(t=this.options.ns),r||(r=sr),this.services.backendConnector.reload(e,t,(function(e){i.resolve(),r(e)})),i}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&It.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"setResolvedLanguage",value:function(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(var t=0;t<this.languages.length;t++){var r=this.languages[t];if(!(["cimode","dev"].indexOf(r)>-1)&&this.store.hasLanguageSomeTranslations(r)){this.resolvedLanguage=r;break}}}},{key:"changeLanguage",value:function(e,t){var r=this;this.isLanguageChangingTo=e;var i=vt();this.emit("languageChanging",e);var n=function(e){r.language=e,r.languages=r.services.languageUtils.toResolveHierarchy(e),r.resolvedLanguage=void 0,r.setResolvedLanguage(e)},s=function(s){e||s||!r.services.languageDetector||(s=[]);var o="string"==typeof s?s:r.services.languageUtils.getBestMatchFromCodes(s);o&&(r.language||n(o),r.translator.language||r.translator.changeLanguage(o),r.services.languageDetector&&r.services.languageDetector.cacheUserLanguage&&r.services.languageDetector.cacheUserLanguage(o)),r.loadResources(o,(function(e){!function(e,s){s?(n(s),r.translator.changeLanguage(s),r.isLanguageChangingTo=void 0,r.emit("languageChanged",s),r.logger.log("languageChanged",s)):r.isLanguageChangingTo=void 0,i.resolve((function(){return r.t.apply(r,arguments)})),t&&t(e,(function(){return r.t.apply(r,arguments)}))}(e,o)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?0===this.services.languageDetector.detect.length?this.services.languageDetector.detect().then(s):this.services.languageDetector.detect(s):s(e):s(this.services.languageDetector.detect()),i}},{key:"getFixedT",value:function(e,t,r){var i=this,n=function e(t,n){var s;if("object"!==Ye(n)){for(var o=arguments.length,a=new Array(o>2?o-2:0),l=2;l<o;l++)a[l-2]=arguments[l];s=i.options.overloadTranslationOptionHandler([t,n].concat(a))}else s=nr({},n);s.lng=s.lng||e.lng,s.lngs=s.lngs||e.lngs,s.ns=s.ns||e.ns,s.keyPrefix=s.keyPrefix||r||e.keyPrefix;var c=i.options.keySeparator||".",u=s.keyPrefix?"".concat(s.keyPrefix).concat(c).concat(t):t;return i.t(u,s)};return"string"==typeof e?n.lng=e:n.lngs=e,n.ns=t,n.keyPrefix=r,n}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e}},{key:"hasLoadedNamespace",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var i=this.resolvedLanguage||this.languages[0],n=!!this.options&&this.options.fallbackLng,s=this.languages[this.languages.length-1];if("cimode"===i.toLowerCase())return!0;var o=function(e,r){var i=t.services.backendConnector.state["".concat(e,"|").concat(r)];return-1===i||2===i};if(r.precheck){var a=r.precheck(this,o);if(void 0!==a)return a}return!(!this.hasResourceBundle(i,e)&&this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages)&&(!o(i,e)||n&&!o(s,e)))}},{key:"loadNamespaces",value:function(e,t){var r=this,i=vt();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){r.options.ns.indexOf(e)<0&&r.options.ns.push(e)})),this.loadResources((function(e){i.resolve(),t&&t(e)})),i):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var r=vt();"string"==typeof e&&(e=[e]);var i=this.options.preload||[],n=e.filter((function(e){return i.indexOf(e)<0}));return n.length?(this.options.preload=i.concat(n),this.loadResources((function(e){r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){if(e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!e)return"rtl";var t=this.services&&this.services.languageUtils||new Ht(tr());return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(t.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}},{key:"cloneInstance",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:sr,i=nr(nr(nr({},this.options),t),{isClone:!0}),s=new n(i);void 0===t.debug&&void 0===t.prefix||(s.logger=s.logger.clone(t));var o=["store","services","language"];return o.forEach((function(t){s[t]=e[t]})),s.services=nr({},this.services),s.services.utils={hasLoadedNamespace:s.hasLoadedNamespace.bind(s)},s.translator=new Mt(s.services,s.options),s.translator.on("*",(function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];s.emit.apply(s,[e].concat(r))})),s.init(i,r),s.translator.options=s.options,s.translator.backendConnector.services.utils={hasLoadedNamespace:s.hasLoadedNamespace.bind(s)},s}},{key:"toJSON",value:function(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}]),n}(pt);at(ar,"createInstance",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;return new ar(e,t)}));var lr=ar.createInstance();lr.createInstance=ar.createInstance,lr.createInstance,lr.dir,lr.init,lr.loadResources,lr.reloadResources,lr.use,lr.changeLanguage,lr.getFixedT,lr.t,lr.exists,lr.setDefaultNamespace,lr.hasLoadedNamespace,lr.loadNamespaces,lr.loadLanguages;var cr=[],ur=cr.forEach,hr=cr.slice;function dr(e){return ur.call(hr.call(arguments,1),(function(t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r])})),e}var fr=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,pr=function(e,t,r){var i=r||{};i.path=i.path||"/";var n=encodeURIComponent(t),s="".concat(e,"=").concat(n);if(i.maxAge>0){var o=i.maxAge-0;if(Number.isNaN(o))throw new Error("maxAge should be a Number");s+="; Max-Age=".concat(Math.floor(o))}if(i.domain){if(!fr.test(i.domain))throw new TypeError("option domain is invalid");s+="; Domain=".concat(i.domain)}if(i.path){if(!fr.test(i.path))throw new TypeError("option path is invalid");s+="; Path=".concat(i.path)}if(i.expires){if("function"!=typeof i.expires.toUTCString)throw new TypeError("option expires is invalid");s+="; Expires=".concat(i.expires.toUTCString())}if(i.httpOnly&&(s+="; HttpOnly"),i.secure&&(s+="; Secure"),i.sameSite)switch("string"==typeof i.sameSite?i.sameSite.toLowerCase():i.sameSite){case!0:s+="; SameSite=Strict";break;case"lax":s+="; SameSite=Lax";break;case"strict":s+="; SameSite=Strict";break;case"none":s+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return s},vr={name:"cookie",lookup:function(e){var t;if(e.lookupCookie&&"undefined"!=typeof document){var r=function(e){for(var t="".concat(e,"="),r=document.cookie.split(";"),i=0;i<r.length;i++){for(var n=r[i];" "===n.charAt(0);)n=n.substring(1,n.length);if(0===n.indexOf(t))return n.substring(t.length,n.length)}return null}(e.lookupCookie);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupCookie&&"undefined"!=typeof document&&function(e,t,r,i){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};r&&(n.expires=new Date,n.expires.setTime(n.expires.getTime()+60*r*1e3)),i&&(n.domain=i),document.cookie=pr(e,encodeURIComponent(t),n)}(t.lookupCookie,e,t.cookieMinutes,t.cookieDomain,t.cookieOptions)}},gr={name:"querystring",lookup:function(e){var t;if("undefined"!=typeof window){var r=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(r=window.location.hash.substring(window.location.hash.indexOf("?")));for(var i=r.substring(1).split("&"),n=0;n<i.length;n++){var s=i[n].indexOf("=");s>0&&i[n].substring(0,s)===e.lookupQuerystring&&(t=i[n].substring(s+1))}}return t}},_r=null,mr=function(){if(null!==_r)return _r;try{_r="undefined"!==window&&null!==window.localStorage;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(e){_r=!1}return _r},br={name:"localStorage",lookup:function(e){var t;if(e.lookupLocalStorage&&mr()){var r=window.localStorage.getItem(e.lookupLocalStorage);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupLocalStorage&&mr()&&window.localStorage.setItem(t.lookupLocalStorage,e)}},yr=null,Sr=function(){if(null!==yr)return yr;try{yr="undefined"!==window&&null!==window.sessionStorage;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(e){yr=!1}return yr},Cr={name:"sessionStorage",lookup:function(e){var t;if(e.lookupSessionStorage&&Sr()){var r=window.sessionStorage.getItem(e.lookupSessionStorage);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupSessionStorage&&Sr()&&window.sessionStorage.setItem(t.lookupSessionStorage,e)}},wr={name:"navigator",lookup:function(e){var t=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var r=0;r<navigator.languages.length;r++)t.push(navigator.languages[r]);navigator.userLanguage&&t.push(navigator.userLanguage),navigator.language&&t.push(navigator.language)}return t.length>0?t:void 0}},kr={name:"htmlTag",lookup:function(e){var t,r=e.htmlTag||("undefined"!=typeof document?document.documentElement:null);return r&&"function"==typeof r.getAttribute&&(t=r.getAttribute("lang")),t}},Er={name:"path",lookup:function(e){var t;if("undefined"!=typeof window){var r=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(r instanceof Array)if("number"==typeof e.lookupFromPathIndex){if("string"!=typeof r[e.lookupFromPathIndex])return;t=r[e.lookupFromPathIndex].replace("/","")}else t=r[0].replace("/","")}return t}},Ar={name:"subdomain",lookup:function(e){var t="number"==typeof e.lookupFromSubdomainIndex?e.lookupFromSubdomainIndex+1:1,r="undefined"!=typeof window&&window.location&&window.location.hostname&&window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);if(r)return r[t]}},xr=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Je(this,e),this.type="languageDetector",this.detectors={},this.init(t,r)}return tt(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e,this.options=dr(t,this.options||{},{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"]}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=r,this.addDetector(vr),this.addDetector(gr),this.addDetector(br),this.addDetector(Cr),this.addDetector(wr),this.addDetector(kr),this.addDetector(Er),this.addDetector(Ar)}},{key:"addDetector",value:function(e){this.detectors[e.name]=e}},{key:"detect",value:function(e){var t=this;e||(e=this.options.order);var r=[];return e.forEach((function(e){if(t.detectors[e]){var i=t.detectors[e].lookup(t.options);i&&"string"==typeof i&&(i=[i]),i&&(r=r.concat(i))}})),this.services.languageUtils.getBestMatchFromCodes?r:r.length>0?r[0]:null}},{key:"cacheUserLanguage",value:function(e,t){var r=this;t||(t=this.options.caches),t&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||t.forEach((function(t){r.detectors[t]&&r.detectors[t].cacheUserLanguage(e,r.options)})))}}]),e}();xr.type="languageDetector",__webpack_require__(739),Object.create(null);var Lr=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,Rr={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"©","&#169;":"©","&reg;":"®","&#174;":"®","&hellip;":"…","&#8230;":"…","&#x2F;":"/","&#47;":"/"},Tr=function(e){return Rr[e]};function Dr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Ir(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Dr(Object(r),!0).forEach((function(t){at(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Dr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Or={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:function(e){return e.replace(Lr,Tr)}},Pr={type:"3rdParty",init:function(e){!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Or=Ir(Ir({},Or),e)}(e.options.react)}};(0,e.createContext)(),tt((function e(){Je(this,e),this.usedNamespaces={}}),[{key:"addUsedNamespaces",value:function(e){var t=this;e.forEach((function(e){t.usedNamespaces[e]||(t.usedNamespaces[e]=!0)}))}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]);const Br={en:{translations:JSON.parse('{"amtFeatures":{"enabled":"enabled","disabled":"disabled","messageTypes":{"success":"success","warning":"warning","error":"error"},"features":{"kvm":"KVM","sol":"SOL"},"messages":{"kvmNotEnabledAndNotPoweredUp":"Power on remote computer and check the KVM enable to connect to KVM","notPoweredUp":"Remote computer is not powered on.","kvmNotEnabled":"Check the KVM enable to connect to KVM","failedKvmFetch":"Unable to fetch KVM features","failedKvmFetchAndNotPoweredUp":"Unable to fetch KVM features and device is not powered on","failedKvmFetchAndFailedPowerFetch":"Unable to fetch KVM features and device power status","kvmNotEnabledAndFailedPowerFetch":"Check the KVM enable to connect to KVM and failed to fetch power status","failedPowerFetch":"Failed to fetch the power status","solNotEnabledAndNotPoweredUp":"Power on remote computer and check the SOL enable to connect to SOL","solNotEnabled":"Check the SOL enable to connect to SOL","failedSolFetch":"Unable to fetch SOL features","failedSolFetchAndNotPoweredUp":"Unable to fetch SOL features and device is not powered on","failedSolFetchAndFailedPowerFetch":"Unable to fetch SOL features and device power status","solNotEnabledAndFailedPowerFetch":"Check the SOL enable to connect to SOL and failed to fetch power status","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"Logout","profile":"Profile"},"pageNotFound":{"title":"404 - Page not found","message":"Oops, we weren\'t able to find the page you requested."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"Login","userName":"username","password":"password","signIn":"Sign In","cancel":"Cancel"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"devices":{"grid":{"Name":"Name","uuids":"UUID","connected":"Connected","deviceName":"Device name","deviceType":"Device type","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"Status","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"}},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"Initiator","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"dashboard":{"header":"AMT Device Management","deviceDetails":"Device details","count":"Count","totalDevices":"Total Devices","connectedDevices":"Connected","disconnectedDevices":"Disconnected"},"cira":{"new":"New","delete":"Delete","edit":"Edit","close":"Close","newCIRAConfig":"New CIRA Configuration","editCIRAConfig":"Edit CIRA Configuration","configName":"Config Name","addressFormat":"MPS Server Address Format","ipv4":"IPV4","ipv6":"IPV6","fqdn":"FQDN","mpsServerAddress":"MPS Server Address","port":"Port","userName":"User Name","password":"Password","commonName":"Cert. Hostname(CN)","mpsRootCetificate":"MPS Root Certificate","create":"Create","save":"Save","mpsRootCertFormat":"Mps root certificate format","autoLoad":"Auto load","manual":"Manual","load":"Load","mpsLoaded":"MPS root certificate successfully loaded","errors":{"commonNameValidation":"Cert. Hostname(CN) is required field and contains letters,numbers and ._- characters.","passwordValidation":"Password is required field should contains atleast one lowercase letter, one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","userNameValidation":"User name is required field and contains letters, numbers and special characters.","portValidation":"Port is required and should be a numeric value between 1024 and 49151","ipv4AddressValidation":"Please enter valid IPV4 Address.","ipv6AddressValidation":"Please enter valid IPV6 Address.","fqdnAddressValidation":"Please enter valid FQDN Address.","configNameValidation":"Config name is required field and contains letters, numbers and special characters.","loadMpsError":"Load the mps root certificate","mpsCertFetchError":"Failed to fetch the certificate from the server. Please try to enter the certificate manually by switching the Mps root certificate format option.","mpsServerMismatchError":"MPS server address does not match with base URL of the application. Please try to enter the certificate manually by switching the Mps root certificate format option."},"grid":{"configName":"Config Name","mpsServer":"MPS server","port":"Port","username":"Username","password":"Password","commonName":"Cert. Hostname(CN)","rootCert":"MPS root Certificate"}},"domain":{"delete":"Delete","new":"New","edit":"Edit","close":"Close","newDomain":"Create Domain","editDomain":"Edit domain details","grid":{"name":"Name","domainSuffix":"Domain Suffix","provisioningCert":"Provisioning Certificate","provisioningCertStorageFormat":"Provisioning Certificate Storage Format","provisioningCertPassword":"Provisioning Certificate Password"},"name":"Name","domainSuffix":"Domain Suffix","provisioningCertStorageFormat":"Provisioning Cert Storage Format","provisioningCert":"Provisioning Cert","provisioningCertPassword":"Provisioning Cert Password","create":"Create","file":"File","browse":"Browse","browseNew":"Browse new file","save":"Save","namePlaceHolder":"Enter domain name","domainSuffixPlaceHolder":"Enter Domain suffix","provisioningCertTextAreaPlaceHolder":"Enter provisioning Cert ","provisioningCertPasswordPlaceHolder":"Enter password","provisioningCertTextPlaceHolder":"Enter file path","text":"Text","certExists":"If you would like to add a new Provisioning certificate browse and select.","error":{"nameValidation":"Name is a required field and contains letters, numbers and special characters.","domainSuffixValidation":"Domain suffix is a required field","provisioningCertStorageFormatValidation":"Provisioning Cert Storage Format is a required field","provisioningCertValidation":"Provisioning cert is a required field","provisioningCertPasswordValidation":"Provisioning Cert Password is required field should contains atleast one lowercase letter,  one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","invalidFileType":"Invalid provisioning certificate type"}},"network":{"new":"New","newNetwork":"New Network configuration","editNetwork":"Edit Network configuration","create":"Create","delete":"Delete","edit":"Edit","save":"Save","grid":{"name":"Name","dhcpEnabled":"DHCP Enabled"},"networkName":"Network Name","dhcpEnabled":"DHCP Enabled","errors":{"networkNameValidation":"Network name is a required field and contains letters, numbers and special characters."}}}')},te:{translations:JSON.parse('{"amtFeatures":{"enabled":"ఎనేబుల్","disabled":"వికలాంగ","messageTypes":{"success":"విజయం","warning":"హెచ్చరిక","error":"లోపం"},"features":{"kvm":"KVM","sol":"సోల్"},"messages":{"kvmNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు KVM ని ప్రారంభించండి","notPoweredUp":"రిమోట్ కంప్యూటర్ ఆన్ చేయబడదు.","kvmNotEnabled":"KVM ప్రారంభించబడలేదు","solNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు SOL ని ప్రారంభించండి","solNotEnabled":"SOL ప్రారంభించబడలేదు","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"లాగౌట్","profile":"ప్రొఫైల్"},"pageNotFound":{"title":"404 - పేజి దొరకలేదు","message":"అయ్యో, మీరు అభ్యర్థించిన పేజీని మేము కనుగొనలేకపోయాము."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"ప్రవేశించండి","userName":"యూజర్పేరు","password":"పాస్వర్డ్","signIn":"సైన్ ఇన్ చేయండి","cancel":"రద్దు చేయండి"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"పేరు","uuids":"UUID లను","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"స్థితి","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},fr:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"Nom","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"statut","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},es:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"nombre","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"estado","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')}};lr.use(Pr).use(xr).init({resources:Br,ns:["translations"],defaultNS:"translations",debug:!1,fallbackLng:"en",interpolation:{escapeValue:!1,formatSeparator:","}}).catch((()=>console.info("error occured"))),lr.changeLanguage(navigator.language).catch((()=>console.info("error occured")));const Mr=new URL(window.location.href),Nr=new URLSearchParams(Mr.search),Hr=document.getElementById("sol");null!=Hr&&(0,t.s)(Hr).render(e.createElement(Xe,{deviceId:Nr.get("deviceId"),authToken:"authToken",mpsServer:Nr.get("mpsServer")}))})(),__webpack_exports__})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0FBS0EsSUFBSUEsRUFBRSxLQUFLLElBQUk0QixFQUFFNUIsR0FBRSxJQUFLVyxFQUFFNlIsVUFBVXhTLEdBQUcsSUFBSUEsR0FBRyxLQUFLNEIsRUFBRTVCLEVBQUUsSUFBSUEsR0FBRyxLQUFLQSxHQUFHLE1BQU00QixFQUFFNUIsRUFBRSxPQUFPLElBQUlBLElBQUk0QixFQUFFLE9BQU8sSUFBSTVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU8sS0FBSzVCLElBQUk0QixFQUFFLE9BQU81QixHQUFHLElBQUlBLEdBQUcsTUFBTTRCLEVBQUU1QixFQUFFLElBQUksTUFBTUEsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSSxNQUFNNUIsSUFBSTRCLEVBQUUsSUFBSW9ELEtBQUtpSyxPQUFPaEosT0FBT00sUUFBUSxPQUFPckcsTUFBTUYsUUFBUTRCLEtBQUtTLEVBQUUrTSxFQUFFeUgsUUFBUTdSLEtBQUt1VCxNQUFNM1csRUFBRTFCLEVBQUUsQ0FBQyxPQUFPOEUsS0FBS2lVLFVBQVV0WSxFQUFFLEVBQUMsRUFBRyxHQUFHLENBQUNULEVBQUVGLEVBQUVXLEtBQUssYUFBYUEsRUFBRWdELEVBQUUzRCxFQUFFLENBQUN1WixFQUFFLElBQUl4VyxJQUFJLElBQUluQixFQUFFakIsRUFBRSxLQUFLeUIsRUFBRXpCLEVBQUUsS0FBSzBCLEVBQUUxQixFQUFFLEtBQUssTUFBTW9DLEVBQUUxQixZQUFZbkIsRUFBRUYsRUFBRVcsR0FBR3FFLEtBQUt3VSxZQUFZLEVBQUV4VSxLQUFLeVUsYUFBYSxFQUFFelUsS0FBS2lLLE9BQU8vTyxFQUFFOEUsS0FBSzBVLEtBQUsxWixFQUFFZ0YsS0FBSzJVLGFBQWFoWixFQUFFcUUsS0FBSzRVLHFCQUFvQixFQUFHNVUsS0FBSzZVLFVBQVUsSUFBSSxDQUFDQyxpQkFBaUI5VSxLQUFLK1UsaUJBQWlCL1UsS0FBSytVLGdCQUFlLEVBQUcsQ0FBQ0MsbUJBQW1CLElBQUloVixLQUFLK1UsZUFBZSxPQUFPLE1BQU03WixFQUFFOEUsS0FBS2lLLE9BQU94SixVQUFVSSxPQUFPM0YsRUFBRStaLFlBQVksS0FBSy9aLEVBQUVnYSxVQUFVLEtBQUtoYSxFQUFFaWEsWUFBWSxLQUFLblYsS0FBSytVLGdCQUFlLENBQUUsQ0FBQ0ssVUFBVWxhLEdBQUcsT0FBTzhFLEtBQUtpSyxPQUFPdEosWUFBWSxHQUFHekYsRUFBRW1hLE9BQU9yVixLQUFLc1YsVUFBVXBhLEVBQUUsQ0FBQ3FhLFFBQVFyYSxHQUFHLE9BQU84RSxLQUFLaUssT0FBT3RKLFlBQVksT0FBTyxHQUFHekYsRUFBRW1hLFFBQVFyVixLQUFLc1YsVUFBVXBhLEVBQUUsQ0FBQ29hLFVBQVVwYSxHQUFHLEdBQUcsSUFBSThFLEtBQUtpSyxPQUFPNUosTUFBTSxPQUFNLEVBQUcsTUFBTXJGLEVBQUVnRixLQUFLd1YscUJBQXFCeFYsS0FBS2lLLE9BQU9ySixlQUFlakYsRUFBRXFFLEtBQUtpSyxPQUFPckosY0FBYzZVLHlCQUF5QixJQUFJelYsS0FBS3dVLGFBQWE3WSxFQUFFK1osSUFBSTFWLEtBQUt3VSxlQUFleFUsS0FBS3dVLFlBQVk3WSxFQUFFK1osTUFBTSxJQUFJMVYsS0FBS3lVLGNBQWM5WSxFQUFFZ2EsS0FBSzNWLEtBQUt5VSxnQkFBZ0J6VSxLQUFLeVUsYUFBYTlZLEVBQUVnYSxNQUFNLE1BQU01WCxFQUFFaUMsS0FBS3dVLFlBQVk3WSxFQUFFK1osSUFBSTFYLEVBQUVnQyxLQUFLeVUsYUFBYTlZLEVBQUVnYSxLQUFLLEdBQUczVixLQUFLaUssT0FBT3dILFlBQVl2VyxFQUFFMGEsTUFBTTVhLEVBQUUsR0FBR2dELElBQUlnQyxLQUFLaUssT0FBT3JKLGNBQWM0SyxPQUFPeEwsS0FBS2lLLE9BQU9ySixjQUFjaVYsY0FBYzdWLEtBQUtpSyxPQUFPMEgsWUFBWXpXLEVBQUU0YSxNQUFNOWEsRUFBRSxHQUFHK0MsSUFBSWlDLEtBQUtpSyxPQUFPckosY0FBY2MsTUFBTTFCLEtBQUtpSyxPQUFPckosY0FBY21WLGNBQWEsRUFBRzFZLEVBQUU0QixHQUFHZSxLQUFLaUssT0FBTytMLGlCQUFpQmhXLEtBQUtpSyxPQUFPZ00sWUFBWTdZLEVBQUVrTixFQUFFaUksTUFBTXZTLEtBQUtpSyxPQUFPakssS0FBS2lLLE9BQU93SCxXQUFXelIsS0FBS2lLLE9BQU8wSCxZQUFZM1IsS0FBS2lLLE9BQU8wSCxXQUFXdlUsRUFBRWtOLEVBQUVrSSxNQUFNeFMsS0FBS2lLLE9BQU9qSyxLQUFLaUssT0FBT3dILFdBQVd6UixLQUFLaUssT0FBTzBILFlBQVkzUixLQUFLaUssT0FBT3dILFdBQVd6UixLQUFLaUssT0FBT2dNLGFBQWFqVyxLQUFLMFUsS0FBSzVOLEtBQUsvSyxPQUFPQyxhQUFhLEVBQUVnRSxLQUFLaUssT0FBT3RKLFlBQVkvRCxFQUFFbUIsRUFBRXVLLFdBQVd0SSxLQUFLaUssT0FBT3dILFlBQVk3VSxFQUFFbUIsRUFBRXVLLFdBQVd0SSxLQUFLaUssT0FBTzBILGFBQWEzUixLQUFLaUssT0FBTy9JLGFBQWEsWUFBWWxCLEtBQUtpSyxPQUFPM0osV0FBVyxJQUFJTixLQUFLaUssT0FBTzNKLFVBQVUsQ0FBQyxNQUFNcEYsRUFBRXNCLEtBQUtnVixJQUFJeFIsS0FBS2lLLE9BQU93SCxXQUFXelIsS0FBS2lLLE9BQU9ySixjQUFjYyxNQUFNMUIsS0FBS2lLLE9BQU8zSixXQUFXM0UsRUFBRWEsS0FBS2dWLElBQUl4UixLQUFLaUssT0FBTzBILFdBQVczUixLQUFLaUssT0FBT3JKLGNBQWM0SyxPQUFPeEwsS0FBS2lLLE9BQU8zSixXQUFXMUQsRUFBRSxFQUFFb0QsS0FBS2lLLE9BQU8zSixVQUFVbEQsRUFBRTRDLEtBQUtpSyxPQUFPckosY0FBY3ZELEVBQUVELEVBQUV5WSxhQUFhN1YsS0FBS2lLLE9BQU9ySixjQUFjNEssT0FBT3pOLEVBQUVYLEVBQUUyWSxZQUFZL1YsS0FBS2lLLE9BQU9ySixjQUFjYyxNQUFNMUQsRUFBRWdDLEtBQUtpSyxPQUFPOUksYUFBYSxhQUFhNUMsRUFBRXlCLEtBQUt3VixxQkFBcUJ4VixLQUFLaUssT0FBT3JKLGNBQWNzVixlQUFlbFksRUFBRTJYLEtBQUssR0FBR25aLEtBQUsrVSxLQUFLclcsRUFBRThFLEtBQUtpSyxPQUFPM0osV0FBV2pELEVBQUUsSUFBSXJDLEVBQUUsR0FBR3VELEVBQUUsUUFBUVAsRUFBRTBYLElBQUksR0FBR2xaLEtBQUsrVSxLQUFLNVYsRUFBRXFFLEtBQUtpSyxPQUFPM0osV0FBV3ZDLEVBQUUsSUFBSS9DLEVBQUUsR0FBR3VELEVBQUUsUUFBUVAsRUFBRTBELE1BQU05RSxFQUFFUyxFQUFFLEVBQUUsS0FBS1csRUFBRXdOLE9BQU81TyxFQUFFUyxFQUFFLEVBQUUsSUFBSSxDQUFDLE9BQU8yQyxLQUFLaVUsVUFBVS9ZLEVBQUUsQ0FBQytZLFVBQVUvWSxHQUFHLE9BQU0sRUFBR21DLEVBQUU0QixHQUFHL0QsRUFBRWdaLGlCQUFpQmhaLEVBQUVnWixrQkFBaUIsRUFBRzdXLEVBQUU0QixHQUFHL0QsRUFBRWlaLGtCQUFrQmpaLEVBQUVpWixtQkFBa0IsQ0FBRSxDQUFDcUIscUJBQXFCdGEsR0FBRyxNQUFNRixFQUFFLENBQUMsRUFBRSxHQUFHLElBQUlXLEVBQUVULEVBQUUsS0FBSyxNQUFNUyxHQUFHWCxFQUFFLEdBQUdzQixPQUFPdEIsRUFBRSxJQUFJc0IsT0FBT1gsRUFBRXdhLFlBQVluYixFQUFFLEdBQUdzQixPQUFPdEIsRUFBRSxJQUFJc0IsT0FBT1gsRUFBRXlhLFdBQVd6YSxFQUFFQSxFQUFFMGEsYUFBYSxPQUFPcmIsQ0FBQyxFQUFDLEVBQUcsSUFBSSxDQUFDRSxFQUFFRixFQUFFVyxLQUFLLGFBQWFBLEVBQUVnRCxFQUFFM0QsRUFBRSxDQUFDaUUsRUFBRSxJQUFJckMsSUFBSSxNQUFNQSxFQUFFMUIsR0FBRyxNQUFNQSxHQUFHLEtBQUtBLElBQUcsSUFBS0EsR0FBRyxJQUFJQSxHQUFHLEVBQUUsQ0FBQ0EsRUFBRUYsRUFBRVcsS0FBSyxhQUFhQSxFQUFFZ0QsRUFBRTNELEVBQUUsQ0FBQ3NiLEdBQUcsSUFBSXZZLEVBQUVxVixFQUFFdkgsR0FBRyxJQUFJek8sRUFBRWdOLEVBQUVnQixHQUFHLElBQUk3TSxFQUFFVSxFQUFFMk0sR0FBRyxJQUFJdk8sRUFBRWlOLEVBQUVpTSxHQUFHLElBQUkzWixFQUFFd1EsRUFBRW9KLEdBQUcsSUFBSXhZLEVBQUV1VyxJQUFJLElBQUkzWCxFQUFFakIsRUFBRSxJQUFJeUIsRUFBRXpCLEVBQUUsS0FBSzBCLEVBQUUxQixFQUFFLEtBQUtvQyxFQUFFcEMsRUFBRSxLQUFLcUMsRUFBRXJDLEVBQUUsSUFBSTRDLEVBQUU1QyxFQUFFLElBQUcsRUFBRyxJQUFJZixTQUFTLElBQUk2YixLQUFLQSxNQUFNLENBQUMsRUFBRUMsS0FBS0MsVUFBSyxJQUFTRixLQUFLRyxxQkFBcUJILEtBQUtJLFdBQVcsRUFBRUosS0FBS0ssZ0JBQWdCLEVBQUVMLEtBQUtNLGFBQWEsRUFBRU4sS0FBS08sYUFBYSxFQUFFUCxLQUFLUSxTQUFTLEVBQUVSLEtBQUtTLFFBQVEsRUFBRVQsS0FBS1UsUUFBUSxFQUFFVixLQUFLVyxLQUFLLEVBQUVYLEtBQUtZLGFBQWEsRUFBRVosS0FBS2EsWUFBWSxFQUFFYixLQUFLYyxTQUFTLEVBQUVkLEtBQUtlLGdCQUFnQixFQUFFZixLQUFLZ0IsY0FBYyxFQUFFaEIsS0FBS2lCLGFBQWEsRUFBRWpCLEtBQUtrQixhQUFhLEVBQUVsQixLQUFLbUIsaUJBQWlCLEVBQUVuQixLQUFLb0IsV0FBVyxFQUFFcEIsS0FBS3FCLFNBQVMsV0FBVzlYLEtBQUsrWCxRQUFRLEVBQUUvWCxLQUFLZ1ksU0FBUyxFQUFFaFksS0FBS2lZLFNBQVMsRUFBRWpZLEtBQUtrWSxTQUFTLEVBQUVsWSxLQUFLbVksVUFBVSxFQUFFblksS0FBS29ZLFVBQVUsRUFBRXBZLEtBQUtxWSxJQUFJLEtBQUtyWSxLQUFLSyxNQUFNLEtBQUtMLEtBQUtzWSxVQUFVLEVBQUV0WSxLQUFLdVksTUFBTSxFQUFFdlksS0FBS3dZLFdBQVcsR0FBR3hZLEtBQUt5WSxZQUFZLEdBQUd6WSxLQUFLNkYsTUFBTSxFQUFFN0YsS0FBSzBZLGtCQUFrQixJQUFJLEVBQUVqQyxLQUFLa0MsVUFBVSxXQUFXM1ksS0FBSzRZLEtBQUssRUFBRTVZLEtBQUs2WSxLQUFLLEVBQUU3WSxLQUFLOFksT0FBTyxFQUFFOVksS0FBSytZLEdBQUcsSUFBSS9ZLEtBQUtnWixNQUFNLEtBQUtoWixLQUFLaVosVUFBVSxFQUFFalosS0FBS2taLFVBQVUsRUFBRWxaLEtBQUttWixLQUFLLEtBQUtuWixLQUFLb1osU0FBUyxFQUFFcFosS0FBS3FaLFFBQVEsS0FBS3JaLEtBQUtzWixTQUFTLEVBQUV0WixLQUFLdVosS0FBSyxFQUFFdlosS0FBS3daLEtBQUssQ0FBQyxFQUFFL0MsS0FBS0csb0JBQW1CLFFBQUksSUFBU0gsTUFBTWdELE1BQU0sNERBQTRELFdBQVcsSUFBSUMsVUFBVSxHQUFHQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLEtBQUssR0FBR0MsS0FBSyxHQUFHQyxPQUFPLEdBQUdDLE9BQU8sR0FBR0MsTUFBTSxHQUFHQyxLQUFLLEdBQUdDLE1BQU0sR0FBR0MsUUFBUSxHQUFHQyxTQUFTLEdBQUdDLEtBQUssR0FBR0MsSUFBSSxHQUFHQyxPQUFPLEdBQUdDLEtBQUssR0FBR0MsUUFBUSxHQUFHQyxNQUFNLEdBQUdDLElBQUksR0FBR0MsTUFBTSxHQUFHQyxPQUFPLEdBQUdDLEtBQUssR0FBR0MsSUFBSSxHQUFHQyxJQUFJLEdBQUdDLEtBQUssR0FBR0MsWUFBWSxJQUFJQyxhQUFhLElBQUlDLE9BQU9GLFlBQVlDLGFBQWFFLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLG9CQUFvQixDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFLEdBQUdDLG1CQUFtQixDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxJQUFJLElBQUlDLG9CQUFvQixDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FB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LEVBQUUsSUFBSSxHQUFHRCxHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsYUFBYTBCLEdBQUduQyxHQUFHd2IsS0FBS3RaLEdBQUdzWixJQUFJLENBQUMsR0FBRzlaLEVBQUUsQ0FBQyxLQUFLQSxHQUFHLElBQUlBLEdBQUcsR0FBR1EsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUt5QixHQUFHbEMsR0FBR0YsRUFBRVcsS0FBS3lCLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLeUIsR0FBR2xDLEdBQUdGLEVBQUVXLEtBQUssS0FBS2lCLEtBQUtRLEdBQUdsQyxHQUFHRixFQUFFVyxLQUFLVCxHQUFHd2IsS0FBS3RaLEdBQUdzWixJQUFJLENBQUMsT0FBT3hiLEVBQUVrQyxHQUFHLEVBQUUsQ0FBbHdCLENBQW93QmxDLEVBQUVGLEVBQUVXLEVBQUVpQixFQUFFLEVBQUU2WixLQUFLa0ssZ0JBQWdCLFNBQVN6bEIsRUFBRUYsRUFBRVcsR0FBRyxJQUFJaUIsRUFBRVEsRUFBRUMsRUFBRSxPQUFPMUIsRUFBRSxFQUFFLFlBQVl5QixHQUFHQyxFQUFFMUIsR0FBRythLE9BQU85WixFQUFFLE1BQU0xQixHQUFHa0MsR0FBR3NaLE1BQU05WixJQUFJLE1BQU01QixHQUFHMGIsS0FBSyxJQUFJQSxPQUFPOVosR0FBRzhaLE1BQU05WixHQUFHOFosT0FBTzlaLEdBQUc4WixPQUFPdFosSUFBSWxDLEdBQUcsR0FBRyxRQUFRRixHQUFHLEdBQUcsT0FBTzBiLEtBQUtyWixJQUFJLFNBQVNELEdBQUcsUUFBUUEsR0FBR3NaLE9BQU90WixHQUFHc1osTUFBTTlaLEVBQUVRLEdBQUcsR0FBRyxPQUFFLElBQVNxWixNQUFNZ0QsTUFBTSwwREFBMEQsV0FBVyxJQUFJdmUsRUFBRSxDQUFDLEVBQUUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxTQUFTLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsU0FBUyxXQUFXLFdBQVcsV0FBVyxTQUFTLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxXQUFXLFNBQVMsV0FBVyxXQUFXLFdBQVcsU0FBUyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFBVSxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFdBQVcsV0FBVyxXQUFXLFdBQVcsU0FBUyxXQUFXLFdBQVcsV0FBVyxVQUFVLFdBQVcsV0FBVyxXQUFXLFVBQVUsV0FBVyxXQUFXLFdBQVcsVUFB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QUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxDQUFDLEtBQUssTUFBTSxD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QUksRUFBRSxFQUFFLEdBQUdyQyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLElBQUksRUFBRSxFQUFFLEdBQUdyQyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLEtBQUssRUFBRSxHQUFHLEdBQUdyQyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEdBQUdyQyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEdBQUdyQyxFQUFFbW5HLFFBQVEsQ0FBQyxHQUFHLEdBQUcsSUFBSSxFQUFFLEdBQUcsR0FBR25uRyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLEtBQUssRUFBRSxHQUFHLEdBQUdyQyxFQUFFb3VCLElBQUksR0FBRyxFQUFFLEdBQUcsR0FBR3B1QixFQUFFbW5HLFFBQVFwa0csRUFBRSxFQUFFLEVBQUUsR0FBRy9DLEVBQUVvdUIsSUFBSSxJQUFJLEVBQUUsRUFBRSxHQUFHcHVCLEVBQUVtbkcsUUFBUTlrRyxFQUFFLEdBQUcsSUFBSSxFQUFFLEVBQUUsR0FBR3JDLEVBQUVtbkcsUUFBUTlrRyxFQUFFLEdBQUcsSUFBSSxFQUFFLEVBQUUsSUFBSXJDLEVBQUVtbkcsUUFBUTlrRyxFQUFFLEdBQUcsSUFBSSxFQUFFLEVBQUUsSUFBSXJDLEVBQUVtbkcsUUFBUSxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksRUFBRSxFQUFFLElBQUlubkcsRUFBRW1uRyxRQUFRcGtHLEVBQUUsR0FBRyxFQUFFLElBQUkvQyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLEtBQUssR0FBRyxFQUFFLElBQUlyQyxFQUFFbW5HLFFBQVE5a0csRUFBRSxHQUFHLElBQUksR0FBRyxFQUFFLElBQUlyQyxFQUFFbW5HLFFBQVFwa0csRUFBRSxHQUFHLEVBQUUsSUFBSS9DLEVBQUVvdUIsSUFBSSxJQUFJLEdBQUcsRUFBRSxJQUFJcHVCLEVBQUVtbkcsUUFBUTlrRyxFQUFFLEdBQUcsSUFBSSxHQUFHLEVBQUUsSUFBSXJDLEVBQUVtbkcsUUFBUTlrRyxFQUFFLEdB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QVFxRCxLQUFLLG1CQUU5QixHQ25DS3NwSCxlQUFleitELFVBQVVpc0QsVUFBVXJ1RSxPQUFNLElBQU05ckMsUUFBUXFELEtBQUssbUJBRWpFLE1BQU1pZ0MsR0FBTSxJQUFJdXdGLElBQUlqeUgsT0FBT0MsU0FBUytqQyxNQUM5QnNrRCxHQUFTLElBQUk0cEMsZ0JBQWdCeHdGLEdBQUlGLFFBRWpDMndGLEdBQWN2akgsU0FBU3cvRixlQUFlLE9BQ3pCLE1BQWYrakIsS0FDVyxPQUFXQSxJQUNuQm53RyxPQUFPLGdCQUFDMHNGLEdBQUcsQ0FBQ0csU0FBVXZtQixHQUFPbnJFLElBQUksWUFBYXRkLFVBQVUsWUFBWTh1RyxVQUFXcm1CLEdBQU9uckUsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL3VpLXRvb2xraXQvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQG9wZW4tYW10LWNsb3VkLXRvb2xraXQvdWktdG9vbGtpdC9idW5kbGVzL2NvcmUuYnVuZGxlLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMveHRlcm0vY3NzL3h0ZXJtLmNzcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vc3JjL3JlYWN0anMvU2VyaWFsT3ZlckxBTi9zb2wuc2NzcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9jbGllbnQuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zaGFsbG93ZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3ZvaWQtZWxlbWVudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy94dGVybS9saWIveHRlcm0uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly91aS10b29sa2l0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3VpLXRvb2xraXQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3VpLXRvb2xraXQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly91aS10b29sa2l0L3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zdHlsaXMvZGlzdC9zdHlsaXMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91bml0bGVzcy9kaXN0L3VuaXRsZXNzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2Vtb3Rpb24taXMtcHJvcC12YWxpZC5lc20uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9tZW1vaXplL2Rpc3QvZW1vdGlvbi1tZW1vaXplLmVzbS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlZC1jb21wb25lbnRzL2Rpc3Qvc3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL3NoYXJlZC9VdGlsaXRpZXMudHMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL1NlcmlhbE92ZXJMQU4vVGVybWluYWwudHN4Iiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMveHRlcm0vY3NzL3h0ZXJtLmNzcz8wOTU5Iiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9TZXJpYWxPdmVyTEFOL3NvbC5zY3NzPzI1NjQiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9yZWFjdGpzL1NlcmlhbE92ZXJMQU4vU29sLnRzeCIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Qcm9wZXJ0eUtleS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvUHJpbWl0aXZlLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvaTE4bmV4dC9kaXN0L2VzbS9pMThuZXh0LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9BcnJheS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9pMThuZXh0LWJyb3dzZXItbGFuZ3VhZ2VkZXRlY3Rvci9kaXN0L2VzbS9pMThuZXh0QnJvd3Nlckxhbmd1YWdlRGV0ZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL25vZGVfbW9kdWxlcy9odG1sLXBhcnNlLXN0cmluZ2lmeS9kaXN0L2h0bWwtcGFyc2Utc3RyaW5naWZ5Lm1vZHVsZS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy91bmVzY2FwZS5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy9kZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly91aS10b29sa2l0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy9pbml0UmVhY3RJMThuZXh0LmpzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vdWktdG9vbGtpdC8uL3NyYy9pMThuLnRzIiwid2VicGFjazovL3VpLXRvb2xraXQvLi9zcmMvcmVhY3Rqcy9TZXJpYWxPdmVyTEFOL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJ1aS10b29sa2l0XCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcInVpLXRvb2xraXRcIl0gPSBmYWN0b3J5KCk7XG59KShzZWxmLCAoKSA9PiB7XG5yZXR1cm4gIiwiLyohIEZvciBsaWNlbnNlIGluZm9ybWF0aW9uIHBsZWFzZSBzZWUgY29yZS5idW5kbGUuanMuTElDRU5TRS50eHQgKi9cbiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHNbXCJ1aS10b29sa2l0L2NvcmVcIl09ZSgpOnRbXCJ1aS10b29sa2l0L2NvcmVcIl09ZSgpfShzZWxmLCgoKT0+KCgpPT57dmFyIF9fd2VicGFja19tb2R1bGVzX189ezQ4Nzp0PT57dmFyIGU9e3V0Zjg6e3N0cmluZ1RvQnl0ZXM6ZnVuY3Rpb24odCl7cmV0dXJuIGUuYmluLnN0cmluZ1RvQnl0ZXModW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHQpKSl9LGJ5dGVzVG9TdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoZS5iaW4uYnl0ZXNUb1N0cmluZyh0KSkpfX0sYmluOntzdHJpbmdUb0J5dGVzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxhPTA7YTx0Lmxlbmd0aDthKyspZS5wdXNoKDI1NSZ0LmNoYXJDb2RlQXQoYSkpO3JldHVybiBlfSxieXRlc1RvU3RyaW5nOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxhPTA7YTx0Lmxlbmd0aDthKyspZS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUodFthXSkpO3JldHVybiBlLmpvaW4oXCJcIil9fX07dC5leHBvcnRzPWV9LDEyOnQ9Pnt2YXIgZSxhO2U9XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCIsYT17cm90bDpmdW5jdGlvbih0LGUpe3JldHVybiB0PDxlfHQ+Pj4zMi1lfSxyb3RyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ8PDMyLWV8dD4+PmV9LGVuZGlhbjpmdW5jdGlvbih0KXtpZih0LmNvbnN0cnVjdG9yPT1OdW1iZXIpcmV0dXJuIDE2NzExOTM1JmEucm90bCh0LDgpfDQyNzgyNTUzNjAmYS5yb3RsKHQsMjQpO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV09YS5lbmRpYW4odFtlXSk7cmV0dXJuIHR9LHJhbmRvbUJ5dGVzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXTt0PjA7dC0tKWUucHVzaChNYXRoLmZsb29yKDI1NipNYXRoLnJhbmRvbSgpKSk7cmV0dXJuIGV9LGJ5dGVzVG9Xb3JkczpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10sYT0wLHM9MDthPHQubGVuZ3RoO2ErKyxzKz04KWVbcz4+PjVdfD10W2FdPDwyNC1zJTMyO3JldHVybiBlfSx3b3Jkc1RvQnl0ZXM6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGE9MDthPDMyKnQubGVuZ3RoO2ErPTgpZS5wdXNoKHRbYT4+PjVdPj4+MjQtYSUzMiYyNTUpO3JldHVybiBlfSxieXRlc1RvSGV4OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxhPTA7YTx0Lmxlbmd0aDthKyspZS5wdXNoKCh0W2FdPj4+NCkudG9TdHJpbmcoMTYpKSxlLnB1c2goKDE1JnRbYV0pLnRvU3RyaW5nKDE2KSk7cmV0dXJuIGUuam9pbihcIlwiKX0saGV4VG9CeXRlczpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10sYT0wO2E8dC5sZW5ndGg7YSs9MillLnB1c2gocGFyc2VJbnQodC5zdWJzdHIoYSwyKSwxNikpO3JldHVybiBlfSxieXRlc1RvQmFzZTY0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgYT1bXSxzPTA7czx0Lmxlbmd0aDtzKz0zKWZvcih2YXIgbz10W3NdPDwxNnx0W3MrMV08PDh8dFtzKzJdLGk9MDtpPDQ7aSsrKTgqcys2Kmk8PTgqdC5sZW5ndGg/YS5wdXNoKGUuY2hhckF0KG8+Pj42KigzLWkpJjYzKSk6YS5wdXNoKFwiPVwiKTtyZXR1cm4gYS5qb2luKFwiXCIpfSxiYXNlNjRUb0J5dGVzOmZ1bmN0aW9uKHQpe3Q9dC5yZXBsYWNlKC9bXkEtWjAtOStcXC9dL2dpLFwiXCIpO2Zvcih2YXIgYT1bXSxzPTAsbz0wO3M8dC5sZW5ndGg7bz0rK3MlNCkwIT1vJiZhLnB1c2goKGUuaW5kZXhPZih0LmNoYXJBdChzLTEpKSZNYXRoLnBvdygyLC0yKm8rOCktMSk8PDIqb3xlLmluZGV4T2YodC5jaGFyQXQocykpPj4+Ni0yKm8pO3JldHVybiBhfX0sdC5leHBvcnRzPWF9LDczODp0PT57ZnVuY3Rpb24gZSh0KXtyZXR1cm4hIXQuY29uc3RydWN0b3ImJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY29uc3RydWN0b3IuaXNCdWZmZXImJnQuY29uc3RydWN0b3IuaXNCdWZmZXIodCl9dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10JiYoZSh0KXx8ZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdC5yZWFkRmxvYXRMRSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5zbGljZSYmZSh0LnNsaWNlKDAsMCkpfSh0KXx8ISF0Ll9pc0J1ZmZlcil9fSw1Njg6KHQsZSxhKT0+e3ZhciBzLG8saSxyLG47cz1hKDEyKSxvPWEoNDg3KS51dGY4LGk9YSg3MzgpLHI9YSg0ODcpLmJpbiwobj1mdW5jdGlvbih0LGUpe3QuY29uc3RydWN0b3I9PVN0cmluZz90PWUmJlwiYmluYXJ5XCI9PT1lLmVuY29kaW5nP3Iuc3RyaW5nVG9CeXRlcyh0KTpvLnN0cmluZ1RvQnl0ZXModCk6aSh0KT90PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHQsMCk6QXJyYXkuaXNBcnJheSh0KXx8dC5jb25zdHJ1Y3Rvcj09PVVpbnQ4QXJyYXl8fCh0PXQudG9TdHJpbmcoKSk7Zm9yKHZhciBhPXMuYnl0ZXNUb1dvcmRzKHQpLGw9OCp0Lmxlbmd0aCxoPTE3MzI1ODQxOTMsYz0tMjcxNzMzODc5LHA9LTE3MzI1ODQxOTQsZD0yNzE3MzM4Nzgsdj0wO3Y8YS5sZW5ndGg7disrKWFbdl09MTY3MTE5MzUmKGFbdl08PDh8YVt2XT4+PjI0KXw0Mjc4MjU1MzYwJihhW3ZdPDwyNHxhW3ZdPj4+OCk7YVtsPj4+NV18PTEyODw8bCUzMixhWzE0KyhsKzY0Pj4+OTw8NCldPWw7dmFyIGI9bi5fZmYsdT1uLl9nZyxmPW4uX2hoLGc9bi5faWk7Zm9yKHY9MDt2PGEubGVuZ3RoO3YrPTE2KXt2YXIgUz1oLG09YyxfPXAsQz1kO2g9YihoLGMscCxkLGFbdiswXSw3LC02ODA4NzY5MzYpLGQ9YihkLGgsYyxwLGFbdisxXSwxMiwtMzg5NTY0NTg2KSxwPWIocCxkLGgsYyxhW3YrMl0sMTcsNjA2MTA1ODE5KSxjPWIoYyxwLGQsaCxhW3YrM10sMjIsLTEwNDQ1MjUzMzApLGg9YihoLGMscCxkLGFbdis0XSw3LC0xNzY0MTg4OTcpLGQ9YihkLGgsYyxwLGFbdis1XSwxMiwxMjAwMDgwNDI2KSxwPWIocCxkLGgsYyxhW3YrNl0sMTcsLTE0NzMyMzEzNDEpLGM9YihjLHAsZCxoLGFbdis3XSwyMiwtNDU3MDU5ODMpLGg9YihoLGMscCxkLGFbdis4XSw3LDE3NzAwMzU0MTYpLGQ9YihkLGgsYyxwLGFbdis5XSwxMiwtMTk1ODQxNDQxNykscD1iKHAsZCxoLGMsYVt2KzEwXSwxNywtNDIwNjMpLGM9YihjLHAsZCxoLGFbdisxMV0sMjIsLTE5OTA0MDQxNjIpLGg9YihoLGMscCxkLGFbdisxMl0sNywxODA0NjAzNjgyKSxkPWIoZCxoLGMscCxhW3YrMTNdLDEyLC00MDM0MTEwMSkscD1iKHAsZCxoLGMsYVt2KzE0XSwxNywtMTUwMjAwMjI5MCksaD11KGgsYz1iKGMscCxkLGgsYVt2KzE1XSwyMiwxMjM2NTM1MzI5KSxwLGQsYVt2KzFdLDUsLTE2NTc5NjUxMCksZD11KGQsaCxjLHAsYVt2KzZdLDksLTEwNjk1MDE2MzIpLHA9dShwLGQsaCxjLGFbdisxMV0sMTQsNjQzNzE3NzEzKSxjPXUoYyxwLGQsaCxhW3YrMF0sMjAsLTM3Mzg5NzMwMiksaD11KGgsYyxwLGQsYVt2KzVdLDUsLTcwMTU1ODY5MSksZD11KGQsaCxjLHAsYVt2KzEwXSw5LDM4MDE2MDgzKSxwPXUocCxkLGgsYyxhW3YrMTVdLDE0LC02NjA0NzgzMzUpLGM9dShjLHAsZCxoLGFbdis0XSwyMCwtNDA1NTM3ODQ4KSxoPXUoaCxjLHAsZCxhW3YrOV0sNSw1Njg0NDY0MzgpLGQ9dShkLGgsYyxwLGFbdisxNF0sOSwtMTAxOTgwMzY5MCkscD11KHAsZCxoLGMsYVt2KzNdLDE0LC0xODczNjM5NjEpLGM9dShjLHAsZCxoLGFbdis4XSwyMCwxMTYzNTMxNTAxKSxoPXUoaCxjLHAsZCxhW3YrMTNdLDUsLTE0NDQ2ODE0NjcpLGQ9dShkLGgsYyxwLGFbdisyXSw5LC01MTQwMzc4NCkscD11KHAsZCxoLGMsYVt2KzddLDE0LDE3MzUzMjg0NzMpLGg9ZihoLGM9dShjLHAsZCxoLGFbdisxMl0sMjAsLTE5MjY2MDc3MzQpLHAsZCxhW3YrNV0sNCwtMzc4NTU4KSxkPWYoZCxoLGMscCxhW3YrOF0sMTEsLTIwMjI1NzQ0NjMpLHA9ZihwLGQsaCxjLGFbdisxMV0sMTYsMTgzOTAzMDU2MiksYz1mKGMscCxkLGgsYVt2KzE0XSwyMywtMzUzMDk1NTYpLGg9ZihoLGMscCxkLGFbdisxXSw0LC0xNTMwOTkyMDYwKSxkPWYoZCxoLGMscCxhW3YrNF0sMTEsMTI3Mjg5MzM1MykscD1mKHAsZCxoLGMsYVt2KzddLDE2LC0xNTU0OTc2MzIpLGM9ZihjLHAsZCxoLGFbdisxMF0sMjMsLTEwOTQ3MzA2NDApLGg9ZihoLGMscCxkLGFbdisxM10sNCw2ODEyNzkxNzQpLGQ9ZihkLGgsYyxwLGFbdiswXSwxMSwtMzU4NTM3MjIyKSxwPWYocCxkLGgsYyxhW3YrM10sMTYsLTcyMjUyMTk3OSksYz1mKGMscCxkLGgsYVt2KzZdLDIzLDc2MDI5MTg5KSxoPWYoaCxjLHAsZCxhW3YrOV0sNCwtNjQwMzY0NDg3KSxkPWYoZCxoLGMscCxhW3YrMTJdLDExLC00MjE4MTU4MzUpLHA9ZihwLGQsaCxjLGFbdisxNV0sMTYsNTMwNzQyNTIwKSxoPWcoaCxjPWYoYyxwLGQsaCxhW3YrMl0sMjMsLTk5NTMzODY1MSkscCxkLGFbdiswXSw2LC0xOTg2MzA4NDQpLGQ9ZyhkLGgsYyxwLGFbdis3XSwxMCwxMTI2ODkxNDE1KSxwPWcocCxkLGgsYyxhW3YrMTRdLDE1LC0xNDE2MzU0OTA1KSxjPWcoYyxwLGQsaCxhW3YrNV0sMjEsLTU3NDM0MDU1KSxoPWcoaCxjLHAsZCxhW3YrMTJdLDYsMTcwMDQ4NTU3MSksZD1nKGQsaCxjLHAsYVt2KzNdLDEwLC0xODk0OTg2NjA2KSxwPWcocCxkLGgsYyxhW3YrMTBdLDE1LC0xMDUxNTIzKSxjPWcoYyxwLGQsaCxhW3YrMV0sMjEsLTIwNTQ5MjI3OTkpLGg9ZyhoLGMscCxkLGFbdis4XSw2LDE4NzMzMTMzNTkpLGQ9ZyhkLGgsYyxwLGFbdisxNV0sMTAsLTMwNjExNzQ0KSxwPWcocCxkLGgsYyxhW3YrNl0sMTUsLTE1NjAxOTgzODApLGM9ZyhjLHAsZCxoLGFbdisxM10sMjEsMTMwOTE1MTY0OSksaD1nKGgsYyxwLGQsYVt2KzRdLDYsLTE0NTUyMzA3MCksZD1nKGQsaCxjLHAsYVt2KzExXSwxMCwtMTEyMDIxMDM3OSkscD1nKHAsZCxoLGMsYVt2KzJdLDE1LDcxODc4NzI1OSksYz1nKGMscCxkLGgsYVt2KzldLDIxLC0zNDM0ODU1NTEpLGg9aCtTPj4+MCxjPWMrbT4+PjAscD1wK18+Pj4wLGQ9ZCtDPj4+MH1yZXR1cm4gcy5lbmRpYW4oW2gsYyxwLGRdKX0pLl9mZj1mdW5jdGlvbih0LGUsYSxzLG8saSxyKXt2YXIgbj10KyhlJmF8fmUmcykrKG8+Pj4wKStyO3JldHVybihuPDxpfG4+Pj4zMi1pKStlfSxuLl9nZz1mdW5jdGlvbih0LGUsYSxzLG8saSxyKXt2YXIgbj10KyhlJnN8YSZ+cykrKG8+Pj4wKStyO3JldHVybihuPDxpfG4+Pj4zMi1pKStlfSxuLl9oaD1mdW5jdGlvbih0LGUsYSxzLG8saSxyKXt2YXIgbj10KyhlXmFecykrKG8+Pj4wKStyO3JldHVybihuPDxpfG4+Pj4zMi1pKStlfSxuLl9paT1mdW5jdGlvbih0LGUsYSxzLG8saSxyKXt2YXIgbj10KyhhXihlfH5zKSkrKG8+Pj4wKStyO3JldHVybihuPDxpfG4+Pj4zMi1pKStlfSxuLl9ibG9ja3NpemU9MTYsbi5fZGlnZXN0c2l6ZT0xNix0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZihudWxsPT10KXRocm93IG5ldyBFcnJvcihcIklsbGVnYWwgYXJndW1lbnQgXCIrdCk7dmFyIGE9cy53b3Jkc1RvQnl0ZXMobih0LGUpKTtyZXR1cm4gZSYmZS5hc0J5dGVzP2E6ZSYmZS5hc1N0cmluZz9yLmJ5dGVzVG9TdHJpbmcoYSk6cy5ieXRlc1RvSGV4KGEpfX0sMTY2Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7cjooKT0+bH0pO3ZhciBzPWEoNDYpLG89YSg1NjUpLGk9YSg2MTEpLHI9YSgzMDUpLG49YS5uKHIpO2NsYXNzIGwgZXh0ZW5kcyBzLkh7Y29uc3RydWN0b3IodCxlKXtzdXBlcigpLHRoaXMucHJvdG9jb2w9Mix0aGlzLmluZmxhdGU9bigpLmluZmxhdGVJbml0KDE1KSx0aGlzLmJwcD0xLHRoaXMuc3RhdGU9MCx0aGlzLmZvY3VzTW9kZT0wLHRoaXMudXNlWlJMRT0hMCx0aGlzLmZyYW1lUmF0ZURlbGF5PTIsdGhpcy5jYW52YXNDdHg9ZSx0aGlzLnNwYXJlY2FjaGU9e30sdGhpcy5idXR0b25tYXNrPTAsdGhpcy5jYW52YXNDb250cm9sPXRoaXMuY2FudmFzQ3R4LmNhbnZhcyx0aGlzLmxhc3RNb3VzZU1vdmVUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHRoaXMubG9nZ2VyPXQsdGhpcy5zZXREZXNrRm9jdXM9KHQsZSk9Pnt9LHRoaXMuZ2V0RGVza0ZvY3VzPXQ9Pnt9fXByb2Nlc3NEYXRhKHQpe3RoaXMub25Qcm9jZXNzRGF0YSh0KX1vblN0YXRlQ2hhbmdlKHQpe3RoaXMubG9nZ2VyLnZlcmJvc2UoYHN0YXRlIGNoYW5nZSBpbiBBTVREZXNrdG9wOiAke3R9YCksMD09PXQmJih0aGlzLmNhbnZhc0N0eC5maWxsU3R5bGU9XCIjRkZGRkZGXCIsdGhpcy5jYW52YXNDdHguZmlsbFJlY3QoMCwwLHRoaXMuY2FudmFzQ3R4LmNhbnZhcy53aWR0aCx0aGlzLmNhbnZhc0N0eC5jYW52YXMud2lkdGgpKX1zdGFydCgpe3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJTdGFydGluZyBkZXNrdG9wIGhlcmVcIiksdGhpcy5zdGF0ZT0wLHRoaXMuaW5mbGF0ZS5pbmZsYXRlUmVzZXQoKSx0aGlzLm9uS3ZtRGF0YVBlbmRpbmc9W10sdGhpcy5vbkt2bURhdGFBY2s9LTEsdGhpcy5rdm1EYXRhU3VwcG9ydGVkPSExO2Zvcihjb25zdCB0IGluIHRoaXMuc3BhcmVjYWNoZSlkZWxldGUgdGhpcy5zcGFyZWNhY2hlW3RdfW9uU2VuZEt2bURhdGEodCl7ITAhPT10aGlzLm9uS3ZtRGF0YUFjaz90aGlzLm9uS3ZtRGF0YVBlbmRpbmcucHVzaCh0KTooKDAsaS5mKSh0aGlzLnVybHZhcnMpJiYoMCxpLmYpKHRoaXMudXJsdmFycy5rdm1kYXRhdHJhY2UpJiZjb25zb2xlLmxvZyhgS1ZNLVNlbmQgKCR7dC5sZW5ndGh9KSBkYXRhYCksdD1cIlxcMEt2bURhdGFDaGFubmVsXFwwXCIrdCx0aGlzLm9uU2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDYsMCwwLDApK28uci5JbnRUb1N0cih0Lmxlbmd0aCkrdCksdGhpcy5vbkt2bURhdGFBY2s9ITEpfX19LDU5Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7TjooKT0+b30pO3ZhciBzPWEoNTAzKTtjbGFzcyBvIGV4dGVuZHMgcy5Le2NvbnN0cnVjdG9yKHQsZSxhLHMsbyxpLHIsbixsLGgsYyl7c3VwZXIodCxlLGEscyxvLGkscixuLGwsaCxjKX19fSw1MDM6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtLOigpPT5sLGI6KCk9PnN9KTt2YXIgcyxvPWEoNTY1KSxpPWEoNTY4KSxyPWEubihpKSxuPWEoNjExKTshZnVuY3Rpb24odCl7dFt0LlNPTD0xXT1cIlNPTFwiLHRbdC5LVk09Ml09XCJLVk1cIix0W3QuSURFUj0zXT1cIklERVJcIn0oc3x8KHM9e30pKTtjbGFzcyBse2NvbnN0cnVjdG9yKHQsZSxhLHMsbyxpLHIsbixsLGgsYyl7dGhpcy5maWxlUmVhZGVyPWEsdGhpcy5maWxlUmVhZGVySW5Vc2U9ITEsdGhpcy5maWxlUmVhZGVyQWNjPVtdLHRoaXMucmFuZG9tTm9uY2VDaGFycz1cImFiY2RlZjAxMjM0NTY3ODlcIix0aGlzLmhvc3Q9cyx0aGlzLnBvcnQ9byx0aGlzLnVzZXI9aSx0aGlzLnBhc3M9cix0aGlzLnRscz1uLHRoaXMudGxzdjFvbmx5PWwsdGhpcy5wcm90b2NvbD1lLHRoaXMuUmVkaXJlY3RTdGFydFNvbD1TdHJpbmcuZnJvbUNoYXJDb2RlKDE2LDAsMCwwLDgzLDc5LDc2LDMyKSx0aGlzLlJlZGlyZWN0U3RhcnRLdm09U3RyaW5nLmZyb21DaGFyQ29kZSgxNiwxLDAsMCw3NSw4Niw3Nyw4MiksdGhpcy5SZWRpcmVjdFN0YXJ0SWRlcj1TdHJpbmcuZnJvbUNoYXJDb2RlKDE2LDAsMCwwLDczLDY4LDY5LDgyKSx0aGlzLnVybHZhcnM9e30sdGhpcy5zZXJ2ZXI9Yyx0aGlzLmFtdEFjY3VtdWxhdG9yPVwiXCIsdGhpcy5hdXRoVXJpPVwiXCIsdGhpcy5sb2dnZXI9dCx0aGlzLmF1dGhUb2tlbj1ofWdldFdzTG9jYXRpb24oKXtyZXR1cm4gdGhpcy5pc0Jyb3dzZXIoKSYmISgwLG4uZikodGhpcy5zZXJ2ZXIpP2Ake3dpbmRvdy5sb2NhdGlvbi5wcm90b2NvbC5yZXBsYWNlKFwiaHR0cFwiLFwid3NcIil9Ly9cXG4gICAgICAke3dpbmRvdy5sb2NhdGlvbi5ob3N0fVxcbiAgICAgICR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cmluZygwLHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5sYXN0SW5kZXhPZihcIi9cIikpfVxcbiAgICAgIC93ZWJyZWxheS5hc2h4P3A9MiZob3N0PSR7dGhpcy5ob3N0fSZwb3J0PSR7dGhpcy5wb3J0fSZ0bHM9JHt0aGlzLnRsc30ke1wiKlwiPT09dGhpcy51c2VyP1wiJnNlcnZlcmF1dGg9MVwiOlwiXCJ9JHt2b2lkIDA9PT10aGlzLnBhc3M/XCImc2VydmVyYXV0aD0xJnVzZXI9XCIrdGhpcy51c2VyOlwiXCJ9JnRsczFvbmx5PSR7dGhpcy50bHN2MW9ubHl9YDpgJHtTdHJpbmcodGhpcy5zZXJ2ZXIpfS93ZWJyZWxheS5hc2h4P3A9MiZob3N0PSR7dGhpcy5ob3N0fSZwb3J0PSR7dGhpcy5wb3J0fSZ0bHM9JHt0aGlzLnRsc30ke1wiKlwiPT09dGhpcy51c2VyP1wiJnNlcnZlcmF1dGg9MVwiOlwiXCJ9JHt2b2lkIDA9PT10aGlzLnBhc3M/XCImc2VydmVyYXV0aD0xJnVzZXI9XCIrdGhpcy51c2VyOlwiXCJ9JnRsczFvbmx5PSR7dGhpcy50bHN2MW9ubHl9YH1pc0Jyb3dzZXIoKXt0cnl7Y29uc3QgdD1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93O3JldHVybiB0JiZ0aGlzLmxvZ2dlci5kZWJ1ZyhcIiEhISEhQlJPV1NFUiEhISEhXCIpLHR9Y2F0Y2godCl7cmV0dXJuITF9fXN0YXJ0KHQpe3RoaXMuY29ubmVjdFN0YXRlPTAsdGhpcy5zb2NrZXQ9bmV3IHQodGhpcy5nZXRXc0xvY2F0aW9uKCksdGhpcy5hdXRoVG9rZW4pLHRoaXMuc29ja2V0Lm9ub3Blbj10aGlzLm9uU29ja2V0Q29ubmVjdGVkLmJpbmQodGhpcyksdGhpcy5zb2NrZXQub25tZXNzYWdlPXRoaXMub25NZXNzYWdlLmJpbmQodGhpcyksdGhpcy5zb2NrZXQub25jbG9zZT10aGlzLm9uU29ja2V0Q2xvc2VkLmJpbmQodGhpcyk7KDAsbi5mKSh0aGlzLmZpbGVSZWFkZXIpJiYoMCxuLmYpKHRoaXMuZmlsZVJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcpP3RoaXMuZmlsZVJlYWRlci5vbmxvYWQ9KHQ9Pnt0aGlzLm9uU29ja2V0RGF0YSh0LnRhcmdldC5yZXN1bHQpLDA9PT10aGlzLmZpbGVSZWFkZXJBY2MubGVuZ3RoP3RoaXMuZmlsZVJlYWRlckluVXNlPSExOnRoaXMuZmlsZVJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcobmV3IEJsb2IoW3RoaXMuZmlsZVJlYWRlckFjYy5zaGlmdCgpXSkpfSkuYmluZCh0aGlzKTooMCxuLmYpKHRoaXMuZmlsZVJlYWRlcikmJigwLG4uZikodGhpcy5maWxlUmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKSYmKHRoaXMuZmlsZVJlYWRlci5vbmxvYWRlbmQ9KHQ9Pnt0aGlzLm9uU29ja2V0RGF0YSh0LnRhcmdldC5yZXN1bHQpLDA9PT10aGlzLmZpbGVSZWFkZXJBY2MubGVuZ3RoP3RoaXMuZmlsZVJlYWRlckluVXNlPSExOnRoaXMuZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcih0aGlzLmZpbGVSZWFkZXJBY2Muc2hpZnQoKSl9KS5iaW5kKHRoaXMpKSx0aGlzLmxvZ2dlci52ZXJib3NlKFwiQ29ubmVjdGluZyB0byB3ZWJzb2NrZXRcIiksdGhpcy5vblN0YXRlQ2hhbmdlKDEpfW9uU29ja2V0Q29ubmVjdGVkKCl7KDAsbi5mKSh0aGlzLnVybHZhcnMpJiYoMCxuLmYpKHRoaXMudXJsdmFycy5yZWRpcnRyYWNlKSYmY29uc29sZS5sb2coXCJSRURJUi1DT05ORUNUXCIpLHRoaXMub25TdGF0ZUNoYW5nZSgyKSx0aGlzLmxvZ2dlci52ZXJib3NlKGBDb25uZWN0ZWQgdG8gd2Vic29ja2V0IHNlcnZlci4gV2l0aCBwcm90b2NvbCAke3RoaXMucHJvdG9jb2x9ICgyID0gS1ZNKWApLHRoaXMubG9nZ2VyLmluZm8oYFN0YXJ0IFJlZGlyZWN0IFNlc3Npb24gZm9yIHByb3RvY29sLiAke3RoaXMucHJvdG9jb2x9YCksdGhpcy5wcm90b2NvbD09PXMuU09MJiZ0aGlzLnNvY2tldFNlbmQodGhpcy5SZWRpcmVjdFN0YXJ0U29sKSx0aGlzLnByb3RvY29sPT09cy5LVk0mJnRoaXMuc29ja2V0U2VuZCh0aGlzLlJlZGlyZWN0U3RhcnRLdm0pLHRoaXMucHJvdG9jb2w9PT1zLklERVImJnRoaXMuc29ja2V0U2VuZCh0aGlzLlJlZGlyZWN0U3RhcnRJZGVyKX1vbk1lc3NhZ2UodCl7dHJ5e2lmKHRoaXMuaW5EYXRhQ291bnQrKyxcIm9iamVjdFwiPT10eXBlb2YgdC5kYXRhKXtpZih0aGlzLmZpbGVSZWFkZXJJblVzZSlyZXR1cm4gdm9pZCB0aGlzLmZpbGVSZWFkZXJBY2MucHVzaCh0LmRhdGEpO2lmKG51bGwhPXRoaXMuZmlsZVJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcpdGhpcy5maWxlUmVhZGVySW5Vc2U9ITAsdGhpcy5maWxlUmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhuZXcgQmxvYihbdC5kYXRhXSkpO2Vsc2UgaWYobnVsbCE9dGhpcy5maWxlUmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKXRoaXMuZmlsZVJlYWRlckluVXNlPSEwLHRoaXMuZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcih0LmRhdGEpO2Vsc2V7bGV0IGU9XCJcIjtjb25zdCBhPW5ldyBVaW50OEFycmF5KHQuZGF0YSkscz1hLmJ5dGVMZW5ndGg7Zm9yKGxldCB0PTA7dDxzO3QrKyllKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGFbdF0pO3RoaXMub25Tb2NrZXREYXRhKGUpfX1lbHNlIHRoaXMub25Tb2NrZXREYXRhKHQuZGF0YSl9Y2F0Y2godCl7dGhpcy5sb2dnZXIuZXJyb3IodCksdGhpcy5zdG9wKCksdGhpcy5vbkVycm9yKCl9fW9uU29ja2V0RGF0YSh0KXtpZigoMCxuLmYpKHQpJiYtMSE9PXRoaXMuY29ubmVjdFN0YXRlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgdCl7bGV0IGU9XCJcIjtjb25zdCBhPW5ldyBVaW50OEFycmF5KHQpLHM9YS5ieXRlTGVuZ3RoO2ZvcihsZXQgdD0wO3Q8czt0KyspZSs9U3RyaW5nLmZyb21DaGFyQ29kZShhW3RdKTt0PWV9ZWxzZSBpZihcInN0cmluZ1wiIT10eXBlb2YgdClyZXR1cm47aWYoKHRoaXMucHJvdG9jb2w9PT1zLktWTXx8dGhpcy5wcm90b2NvbD09PXMuSURFUikmJjE9PT10aGlzLmNvbm5lY3RTdGF0ZSlyZXR1cm4gdGhpcy5vblByb2Nlc3NEYXRhKHQpO2Zvcih0aGlzLmFtdEFjY3VtdWxhdG9yKz10O3RoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPj0xOyl7bGV0IHQ9MDtzd2l0Y2godGhpcy5hbXRBY2N1bXVsYXRvci5jaGFyQ29kZUF0KDApKXtjYXNlIDE3OmlmKHRoaXMubG9nZ2VyLnZlcmJvc2UoYFN0YXJ0IFJlZGlyZWN0aW9uIFNlc3Npb24gcmVwbHkgcmVjZWl2ZWQgZm9yICAke3RoaXMucHJvdG9jb2x9YCksdGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg8NClyZXR1cm47c3dpdGNoKHRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCgxKSl7Y2FzZSAwOntpZih0aGlzLmxvZ2dlci52ZXJib3NlKFwiU2Vzc2lvbiBzdGF0dXMgc3VjY2Vzcy4gU3RhcnQgaGFuZHNoYWtlXCIpLHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDEzKXJldHVybjtjb25zdCBlPXRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCgxMik7aWYodGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg8MTMrZSlyZXR1cm47dGhpcy5sb2dnZXIudmVyYm9zZShcIlF1ZXJ5IGZvciBhdmFpbGFibGUgYXV0aGVudGljYXRpb25cIiksdGhpcy5zb2NrZXRTZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMTksMCwwLDAsMCwwLDAsMCwwKSksdD0xMytlO2JyZWFrfWRlZmF1bHQ6dGhpcy5zdG9wKCl9YnJlYWs7Y2FzZSAyMDp7aWYodGhpcy5sb2dnZXIudmVyYm9zZShcIkF2YWlsYWJsZSBBdXRoZW50aWNhdGlvbnMgcmVwbHkgcmVjZWl2ZWQuXCIpLHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDkpcmV0dXJuO2NvbnN0IGU9by5yLlJlYWRJbnRYKHRoaXMuYW10QWNjdW11bGF0b3IsNSk7aWYodGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg8OStlKXJldHVybjtjb25zdCBhPXRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCgxKSxzPXRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCg0KSxpPVtdO2ZvcihsZXQgdD0wO3Q8ZTt0KyspaS5wdXNoKHRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCg5K3QpKTtjb25zdCByPXRoaXMuYW10QWNjdW11bGF0b3Iuc3Vic3RyaW5nKDksOStlKTtpZih0PTkrZSwwPT09cykoMCxuLmYpKGkuaW5jbHVkZXMoNCkpPyh0aGlzLmxvZ2dlci52ZXJib3NlKFwiR29vZCBEaWdlc3QgQXV0aCAoV2l0aCBjbm9uY2UgYW5kIGFsbClcIiksdGhpcy5zb2NrZXRTZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMTksMCwwLDAsNCkrby5yLkludFRvU3RyWCh0aGlzLnVzZXIubGVuZ3RoK3RoaXMuYXV0aFVyaS5sZW5ndGgrOCkrU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLnVzZXIubGVuZ3RoKSt0aGlzLnVzZXIrU3RyaW5nLmZyb21DaGFyQ29kZSgwLDApK1N0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5hdXRoVXJpLmxlbmd0aCkrdGhpcy5hdXRoVXJpK1N0cmluZy5mcm9tQ2hhckNvZGUoMCwwLDAsMCkpKTooMCxuLmYpKGkuaW5jbHVkZXMoMykpPyh0aGlzLmxvZ2dlci53YXJuKFwiQmFkIERpZ2VzdCBBdXRoXCIpLHRoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDE5LDAsMCwwLDMpK28uci5JbnRUb1N0clgodGhpcy51c2VyLmxlbmd0aCt0aGlzLmF1dGhVcmkubGVuZ3RoKzcpK1N0cmluZy5mcm9tQ2hhckNvZGUodGhpcy51c2VyLmxlbmd0aCkrdGhpcy51c2VyK1N0cmluZy5mcm9tQ2hhckNvZGUoMCwwKStTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuYXV0aFVyaS5sZW5ndGgpK3RoaXMuYXV0aFVyaStTdHJpbmcuZnJvbUNoYXJDb2RlKDAsMCwwKSkpOigwLG4uZikoaS5pbmNsdWRlcygxKSk/KHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJCYXNpYyBBdXRoXCIpLHRoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDE5LDAsMCwwLDEpK28uci5JbnRUb1N0clgodGhpcy51c2VyLmxlbmd0aCt0aGlzLnBhc3MubGVuZ3RoKzIpK1N0cmluZy5mcm9tQ2hhckNvZGUodGhpcy51c2VyLmxlbmd0aCkrdGhpcy51c2VyK1N0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5wYXNzLmxlbmd0aCkrdGhpcy5wYXNzKSk6KHRoaXMubG9nZ2VyLmVycm9yKFwiQXV0aCBUeXBlIG5vdCByZWNvZ25pemVkLiBTdG9wcGluZy5cIiksdGhpcy5zdG9wKCkpO2Vsc2UgaWYoMyE9PXMmJjQhPT1zfHwxIT09YSlpZigwPT09YSl7aWYoMT09PXRoaXMucHJvdG9jb2wpe2NvbnN0IHQ9MWU0LGU9MTAwLGE9MCxzPTFlNCxpPTEwMCxyPTA7dGhpcy5zb2NrZXRTZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMzIsMCwwLDApK28uci5JbnRUb1N0clgodGhpcy5hbXRTZXF1ZW5jZSsrKStvLnIuU2hvcnRUb1N0clgodCkrby5yLlNob3J0VG9TdHJYKGUpK28uci5TaG9ydFRvU3RyWChhKStvLnIuU2hvcnRUb1N0clgocykrby5yLlNob3J0VG9TdHJYKGkpK28uci5TaG9ydFRvU3RyWChyKStvLnIuSW50VG9TdHJYKDApKX0yPT09dGhpcy5wcm90b2NvbCYmdGhpcy5zb2NrZXRTZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoNjQsMCwwLDAsMCwwLDAsMCkpLDM9PT10aGlzLnByb3RvY29sJiYodGhpcy5jb25uZWN0U3RhdGU9MSx0aGlzLm9uU3RhdGVDaGFuZ2UoMykpfWVsc2UgdGhpcy5zdG9wKCk7ZWxzZXtsZXQgdD0wO2NvbnN0IGU9ci5jaGFyQ29kZUF0KHQpLGE9ci5zdWJzdHJpbmcodCsxLHQrMStlKTt0Kz1lKzE7Y29uc3QgaT1yLmNoYXJDb2RlQXQodCksbj1yLnN1YnN0cmluZyh0KzEsdCsxK2kpO3QrPWkrMTtsZXQgbD0wLGg9bnVsbDtjb25zdCBjPXRoaXMuZ2VuZXJhdGVSYW5kb21Ob25jZSgzMikscD1cIjAwMDAwMDAyXCI7bGV0IGQ9XCJcIjs0PT09cyYmKGw9ci5jaGFyQ29kZUF0KHQpLGg9ci5zdWJzdHJpbmcodCsxLHQrMStsKSx0Kz1sKzEsZD1gJHtwfToke2N9OiR7U3RyaW5nKGgpfSA6YCk7Y29uc3Qgdj10aGlzLmhleF9tZDUodGhpcy5oZXhfbWQ1KHRoaXMudXNlcitcIjpcIithK1wiOlwiK3RoaXMucGFzcykrXCI6XCIrbitcIjpcIitkK3RoaXMuaGV4X21kNShcIlBPU1Q6XCIrdGhpcy5hdXRoVXJpKSk7bGV0IGI9dGhpcy51c2VyLmxlbmd0aCthLmxlbmd0aCtuLmxlbmd0aCt0aGlzLmF1dGhVcmkubGVuZ3RoK2MubGVuZ3RoK3AubGVuZ3RoK3YubGVuZ3RoKzc7ND09PXMmJihiKz1wYXJzZUludChoLmxlbmd0aCkrMSk7bGV0IHU9U3RyaW5nLmZyb21DaGFyQ29kZSgxOSwwLDAsMCxzKStvLnIuSW50VG9TdHJYKGIpK1N0cmluZy5mcm9tQ2hhckNvZGUodGhpcy51c2VyLmxlbmd0aCkrdGhpcy51c2VyK1N0cmluZy5mcm9tQ2hhckNvZGUoYS5sZW5ndGgpK2ErU3RyaW5nLmZyb21DaGFyQ29kZShuLmxlbmd0aCkrbitTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMuYXV0aFVyaS5sZW5ndGgpK3RoaXMuYXV0aFVyaStTdHJpbmcuZnJvbUNoYXJDb2RlKGMubGVuZ3RoKStjK1N0cmluZy5mcm9tQ2hhckNvZGUocC5sZW5ndGgpK3ArU3RyaW5nLmZyb21DaGFyQ29kZSh2Lmxlbmd0aCkrdjs0PT09cyYmKHU9U3RyaW5nKHUpKyhTdHJpbmcuZnJvbUNoYXJDb2RlKGgubGVuZ3RoKStTdHJpbmcoaCkpKSx0aGlzLnNvY2tldFNlbmQodSl9YnJlYWt9Y2FzZSAzMzppZih0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aDwyMylicmVhazt0aGlzLmxvZ2dlci52ZXJib3NlKFwiUmVzcG9uc2UgdG8gc2V0dGluZ3NcIiksdD0yMyx0aGlzLnNvY2tldFNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgzOSwwLDAsMCkrby5yLkludFRvU3RyWCh0aGlzLmFtdFNlcXVlbmNlKyspK1N0cmluZy5mcm9tQ2hhckNvZGUoMCwwLDI3LDAsMCwwKSksMT09PXRoaXMucHJvdG9jb2wmJih0aGlzLmFtdEtlZXBBbGl2ZVRpbWVyPXNldEludGVydmFsKHRoaXMuc2VuZEFtdEtlZXBBbGl2ZS5iaW5kKHRoaXMpLDJlMykpLHRoaXMuY29ubmVjdFN0YXRlPTEsdGhpcy5vblN0YXRlQ2hhbmdlKDMpO2JyZWFrO2Nhc2UgNDE6aWYodGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg8MTApYnJlYWs7dGhpcy5sb2dnZXIudmVyYm9zZShcIlNlcmlhbCBTZXR0aW5nc1wiKSx0PTEwO2JyZWFrO2Nhc2UgNDI6e2lmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDEwKWJyZWFrO3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJJbmNvbWluZyBkaXNwbGF5IGRhdGFcIik7Y29uc3QgZT0xMCsoKDI1NSZ0aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoOSkpPDw4KSsoMjU1JnRoaXMuYW10QWNjdW11bGF0b3IuY2hhckNvZGVBdCg4KSk7aWYodGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg8ZSlicmVhazt0aGlzLm9uUHJvY2Vzc0RhdGEodGhpcy5hbXRBY2N1bXVsYXRvci5zdWJzdHJpbmcoMTAsZSkpLHQ9ZTticmVha31jYXNlIDQzOmlmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDgpYnJlYWs7dGhpcy5sb2dnZXIudmVyYm9zZShcIktlZXAgQWx2ZSBtZXNzYWdlXCIpLHQ9ODticmVhaztjYXNlIDY1OmlmKHRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoPDgpYnJlYWs7dGhpcy5sb2dnZXIudmVyYm9zZShcIktWTSB0cmFmZmljLiBDYWxsIG9uU3RhcnQgaGFuZGxlci4gQW5kIGZvcndhcmQgcmVzdCBvZiBhY2MgZGlyZWN0bHkuXCIpLHRoaXMuY29ubmVjdFN0YXRlPTEsdGhpcy5vblN0YXJ0KCksdGhpcy5hbXRBY2N1bXVsYXRvci5sZW5ndGg+OCYmdGhpcy5vblByb2Nlc3NEYXRhKHRoaXMuYW10QWNjdW11bGF0b3Iuc3Vic3RyaW5nKDgpKSx0PXRoaXMuYW10QWNjdW11bGF0b3IubGVuZ3RoO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIHRoaXMubG9nZ2VyLmVycm9yKGBVbmtub3duIEludGVsIEFNVCBjb21tYW5kOiAgJHt0aGlzLmFtdEFjY3VtdWxhdG9yLmNoYXJDb2RlQXQoMCl9ICBhY2NsZW49JHt0aGlzLmFtdEFjY3VtdWxhdG9yLmxlbmd0aH1gKSx2b2lkIHRoaXMuc3RvcCgpfWlmKDA9PT10KXJldHVybjt0aGlzLmFtdEFjY3VtdWxhdG9yPXRoaXMuYW10QWNjdW11bGF0b3Iuc3Vic3RyaW5nKHQpfX19aGV4X21kNSh0KXtyZXR1cm4gdGhpcy5sb2dnZXIudmVyYm9zZShcIk1ENSB0aGUgc3RyaW5nXCIpLHIoKSh0KX1zb2NrZXRTZW5kKHQpeygwLG4uZikodGhpcy51cmx2YXJzKSYmKDAsbi5mKSh0aGlzLnVybHZhcnMucmVkaXJ0cmFjZSkmJnRoaXMubG9nZ2VyLnZlcmJvc2UoYFJFRElSLVNFTkQoJHt0Lmxlbmd0aH0pOiAke28uci5yc3RyMmhleCh0KX1gKTt0cnl7aWYobnVsbCE9dGhpcy5zb2NrZXQmJjE9PT10aGlzLnNvY2tldC5yZWFkeVN0YXRlKXtjb25zdCBlPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoKTt0aGlzLmxvZ2dlci52ZXJib3NlKGBSZWRpciBTZW5kKCAke3QubGVuZ3RofSk6ICR7by5yLnJzdHIyaGV4KHQpfWApO2ZvcihsZXQgYT0wO2E8dC5sZW5ndGg7KythKWVbYV09dC5jaGFyQ29kZUF0KGEpO3RoaXMuc29ja2V0LnNlbmQoZS5idWZmZXIpfX1jYXRjaCh0KXt0aGlzLmxvZ2dlci5lcnJvcihgU29ja2V0IHNlbmQgZXJyb3I6ICR7U3RyaW5nKHQpfWApfX1zZW5kKHQpe3RoaXMubG9nZ2VyLnZlcmJvc2UoXCJTZW5kIGNhbGxlZCBcIit0KSxudWxsIT10aGlzLnNvY2tldCYmMT09PXRoaXMuY29ubmVjdFN0YXRlJiYodGhpcy5wcm90b2NvbD09PXMuU09MP3RoaXMuc29ja2V0U2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDQwLDAsMCwwKStvLnIuSW50VG9TdHJYKHRoaXMuYW10U2VxdWVuY2UrKykrby5yLlNob3J0VG9TdHJYKHQubGVuZ3RoKSt0KTp0aGlzLnNvY2tldFNlbmQodCkpfXNlbmRBbXRLZWVwQWxpdmUoKXtudWxsIT10aGlzLnNvY2tldCYmdGhpcy5zb2NrZXRTZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoNDMsMCwwLDApK28uci5JbnRUb1N0clgodGhpcy5hbXRTZXF1ZW5jZSsrKSl9Z2VuZXJhdGVSYW5kb21Ob25jZSh0KXtsZXQgZT1cIlwiO2ZvcihsZXQgYT0wO2E8dDthKyspZSs9dGhpcy5yYW5kb21Ob25jZUNoYXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdGhpcy5yYW5kb21Ob25jZUNoYXJzLmxlbmd0aCkpO3JldHVybiBlfW9uU29ja2V0Q2xvc2VkKHQpeygwLG4uZikodGhpcy51cmx2YXJzKSYmKDAsbi5mKSh0aGlzLnVybHZhcnMucmVkaXJ0cmFjZSkmJmNvbnNvbGUubG9nKFwiUkVESVItQ0xPU0VEXCIpLHRoaXMubG9nZ2VyLndhcm4oXCJSZWRpciBTb2NrZXQgQ2xvc2VkXCIpLHRoaXMuc3RvcCgpfW9uU3RhdGVDaGFuZ2UodCl7Y29uc29sZS5pbmZvKFwib25zdGF0ZWNoYW5nZVwiLHQpLHRoaXMuc3RhdGUhPT10JiYodGhpcy5zdGF0ZT10LHRoaXMub25OZXdTdGF0ZSh0aGlzLnN0YXRlKSxudWxsIT10aGlzLm9uU3RhdGVDaGFuZ2VkJiZ0aGlzLm9uU3RhdGVDaGFuZ2VkKHRoaXMsdGhpcy5zdGF0ZSkpfXN0b3AoKXt0aGlzLmxvZ2dlci53YXJuKFwiU3RvcCBjYWxsZWQgb24gUmVkaXJlY3Rvci4gQ2hhbmdlIHN0YXRlIHRvIDAgYW5kIGNsb3NlIFNvY2tldC5cIiksdGhpcy5vblN0YXRlQ2hhbmdlKDApLHRoaXMuY29ubmVjdFN0YXRlPS0xLHRoaXMuYW10QWNjdW11bGF0b3I9XCJcIixudWxsIT10aGlzLnNvY2tldCYmKHRoaXMuc29ja2V0LmNsb3NlKCksdGhpcy5zb2NrZXQ9bnVsbCksbnVsbCE9dGhpcy5hbXRLZWVwQWxpdmVUaW1lciYmKGNsZWFySW50ZXJ2YWwodGhpcy5hbXRLZWVwQWxpdmVUaW1lciksdGhpcy5hbXRLZWVwQWxpdmVUaW1lcj1udWxsKX19fSwyNzc6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtyOigpPT5zfSk7Y2xhc3Mgc3tjb25zdHJ1Y3Rvcigpe3RoaXMudGVybWluYWxFbXVsYXRpb249MSx0aGlzLmZ4RW11bGF0aW9uPTAsdGhpcy5meExpbmVCcmVhaz0wLHRoaXMuQXNjaWlUb1VuaWNvZGU9WzE5OSwyNTIsMjMzLDIyNiwyMjgsMjI0LDIyOSwyMzEsMjM0LDIzNSwyMzIsMjM5LDIzOCwyMzYsMTk2LDE5NywyMDEsMjMwLDE5OCwyNDQsMjQ2LDI0MiwyNTEsMjQ5LDI1NSwyMTQsMjIwLDE2MiwxNjMsMTY1LDgzNTksNDAyLDIyNSwyMzcsMjQzLDI1MCwyNDEsMjA5LDE3MCwyMTgsMTkxLDg5NzYsMTcyLDE4OSwxODgsMTYxLDE3MSwxODcsOTYxOSw5NjE4LDk2MTcsOTQ3NCw5NTA4LDk1NjksOTU3MCw5NTU4LDk1NTcsOTU3MSw5NTUzLDk1NTksOTU2NSw5NTY0LDk1NjMsOTQ4OCw5NDkyLDk1MjQsOTUxNiw5NTAwLDk0NzIsOTUzMiw5NTY2LDk1NjcsOTU2Miw5NTU2LDk1NzcsOTU3NCw5NTY4LDk1NTIsOTU4MCw5NTc1LDk1NzYsOTU3Miw5NTczLDk1NzYsOTU2MCw5NTU0LDk1NTUsOTU3OSw5NTc4LDk0OTYsOTQ4NCw5NjA4LDk2MDQsOTYxMSw5NjE2LDk2MDAsOTQ1LDIyMyw5MTUsOTYwLDkzMSw5NjMsMTgxLDk2NCw5NjYsOTUyLDg0ODYsOTQ4LDg3MzQsMjQ4LDk0OSw4NzE5LDg4MDEsMTc3LDg4MDUsODgwNiw4OTkyLDg5OTMsMjQ3LDg3NzYsMTc2LDgyMjYsMTgzLDg3MzAsODMxOSwxNzgsODcxOCwxNjBdLHRoaXMuQXNjaWlUb1VuaWNvZGVJbnRlbD1bMTk5LDI1MiwyMzMsMjI2LDIyOCwyMjQsMjI5LDIzMSwyMzQsMjM1LDIzMiwyMzksMjM4LDIzNiwxOTYsMTk3LDIwMSwyMzAsMTk4LDI0NCwyNDYsMjQyLDI1MSwyNDksMjU1LDIxNCwyMjAsMTYyLDE2MywxNjUsODM1OSw0MDIsMjI1LDIzNywyNDMsMjUwLDI0MSwyMDksMTcwLDIxOCwxOTEsODk3NiwxNzIsMTg5LDE4OCwxNjEsMTc0LDE4Nyw5NjE5LDk2MTgsOTYxNyw5NDc0LDk1MDgsOTU2OSw5NTcwLDk1NTgsOTU1Nyw5NTcxLDk1NTMsOTU1OSw5NTY1LDk1NjQsOTU2Myw5NDg4LDk0OTIsOTUyNCw5NTE2LDk1MDAsOTQ3Miw5NTMyLDk1NjYsOTU2Nyw5NTYyLDk1NTYsOTU3Nyw5NTc0LDk1NjgsOTU1Miw5NTgwLDk1NzUsOTU3Niw5NTcyLDk1NzMsOTU3Niw5NTYwLDk1NTQsOTU1NSw5NTc5LDk1NzgsOTQ5Niw5NDg0LDk2MDgsOTYwNCw5NjExLDk2MTYsOTYwMCw5NDUsMjIzLDkxNSw5NjAsOTMxLDk2MywxODEsOTY0LDk2Niw5NTIsODQ4Niw5NDgsODczNCwyNDgsOTQ5LDg3MTksODgwMSwxNzcsODgwNSw4ODA2LDg5OTIsODk5MywyNDcsODc3NiwxNzYsODIyNiwxODMsODczMCw4MzE5LDE3OCw4NzE4LDE2MF0sdGhpcy5TdGF0ZUNoYW5nZT10PT57fSx0aGlzLlRlcm1TZW5kS2V5cz10PT50aGlzLm9uU2VuZCh0KX19fSwyMzc6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtrOigpPT5vfSk7dmFyIHM9YSgyMDEpO2NsYXNzIG97Y29uc3RydWN0b3IodCl7dGhpcy5taW5MZXZlbD10fWxvZyh0LGUpe3N3aXRjaCh0KXtjYXNlIHMuaS5WRVJCT1NFOnRoaXMudmVyYm9zZShlKTticmVhaztjYXNlIHMuaS5JTkZPOnRoaXMuaW5mbyhlKTticmVhaztjYXNlIHMuaS5ERUJVRzp0aGlzLmRlYnVnKGUpO2JyZWFrO2Nhc2Ugcy5pLldBUk5JTkc6dGhpcy53YXJuKGUpO2JyZWFrO2Nhc2Ugcy5pLkVSUk9SOnRoaXMuZXJyb3IoZSl9fWRlYnVnKHQpe3RoaXMubWluTGV2ZWw+PXMuaS5ERUJVRyYmY29uc29sZS5kZWJ1Zyh0KX1pbmZvKHQpe3RoaXMubWluTGV2ZWw+PXMuaS5JTkZPJiZjb25zb2xlLmluZm8odCl9ZXJyb3IodCl7dGhpcy5taW5MZXZlbD49cy5pLkVSUk9SJiZjb25zb2xlLmVycm9yKHQpfXdhcm4odCl7dGhpcy5taW5MZXZlbD49cy5pLldBUk5JTkcmJmNvbnNvbGUud2Fybih0KX12ZXJib3NlKHQpe3RoaXMubWluTGV2ZWw+PXMuaS5WRVJCT1NFJiZjb25zb2xlLmxvZyh0KX19fSw1NjU6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtyOigpPT5vfSk7dmFyIHM9YSg2MTEpO2NvbnN0IG89e1JlYWRTaG9ydDoodCxlKT0+KHQuY2hhckNvZGVBdChlKTw8OCkrdC5jaGFyQ29kZUF0KGUrMSksUmVhZFNob3J0WDoodCxlKT0+KHQuY2hhckNvZGVBdChlKzEpPDw4KSt0LmNoYXJDb2RlQXQoZSksUmVhZEludDoodCxlKT0+MTY3NzcyMTYqdC5jaGFyQ29kZUF0KGUpKyh0LmNoYXJDb2RlQXQoZSsxKTw8MTYpKyh0LmNoYXJDb2RlQXQoZSsyKTw8OCkrdC5jaGFyQ29kZUF0KGUrMyksUmVhZFNJbnQ6KHQsZSk9Pih0LmNoYXJDb2RlQXQoZSk8PDI0KSsodC5jaGFyQ29kZUF0KGUrMSk8PDE2KSsodC5jaGFyQ29kZUF0KGUrMik8PDgpK3QuY2hhckNvZGVBdChlKzMpLFJlYWRJbnRYOih0LGUpPT4xNjc3NzIxNip0LmNoYXJDb2RlQXQoZSszKSsodC5jaGFyQ29kZUF0KGUrMik8PDE2KSsodC5jaGFyQ29kZUF0KGUrMSk8PDgpK3QuY2hhckNvZGVBdChlKSxTaG9ydFRvU3RyOnQ9PlN0cmluZy5mcm9tQ2hhckNvZGUodD4+OCYyNTUsMjU1JnQpLFNob3J0VG9TdHJYOnQ9PlN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JnQsdD4+OCYyNTUpLEludFRvU3RyOnQ9PlN0cmluZy5mcm9tQ2hhckNvZGUodD4+MjQmMjU1LHQ+PjE2JjI1NSx0Pj44JjI1NSwyNTUmdCksSW50VG9TdHJYOnQ9PlN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JnQsdD4+OCYyNTUsdD4+MTYmMjU1LHQ+PjI0JjI1NSksU3BsaXRBcnJheTp0PT50LnNwbGl0KFwiLFwiKSxDbG9uZTp0PT5KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHQpKSxFc2NhcGVIdG1sOnQ9Plwic3RyaW5nXCI9PXR5cGVvZiB0P3QucmVwbGFjZSgvJi9nLFwiJmFtcDtcIikucmVwbGFjZSgvPi9nLFwiJmd0O1wiKS5yZXBsYWNlKC88L2csXCImbHQ7XCIpLnJlcGxhY2UoL1wiL2csXCImcXVvdDtcIikucmVwbGFjZSgvJy9nLFwiJmFwb3M7XCIpOlwiYm9vbGVhblwiPT10eXBlb2YgdHx8XCJudW1iZXJcIj09dHlwZW9mIHQ/dDp2b2lkIDAsQXJyYXlFbGVtZW50TW92ZSh0LGUsYSl7dC5zcGxpY2UoYSwwLHQuc3BsaWNlKGUsMSlbMF0pfSxPYmplY3RUb1N0cmluZ0V4KHQsZSl7bGV0IGE9XCJcIjtpZigwIT09dCYmKCEoMCxzLmYpKHQpfHxudWxsPT10KSlyZXR1cm5cIihOdWxsKVwiO2lmKHQgaW5zdGFuY2VvZiBBcnJheSlmb3IoY29uc3QgcyBpbiB0KWE9YStcIjxiciAvPlwiK1N0cmluZyh0aGlzLmdhcChlKSkrXCJJdGVtICNcIitTdHJpbmcocykrXCI6IFwiK1N0cmluZyh0aGlzLk9iamVjdFRvU3RyaW5nRXgodFtzXSxlKzEpKTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBPYmplY3QpZm9yKGNvbnN0IHMgaW4gdClhPWErXCI8YnIgLz5cIitTdHJpbmcodGhpcy5nYXAoZSkpK1N0cmluZyhzKStcIiA9IFwiK1N0cmluZyh0aGlzLk9iamVjdFRvU3RyaW5nRXgodFtzXSxlKzEpKTtlbHNlIGErPVN0cmluZyh0aGlzLkVzY2FwZUh0bWwodCkpO3JldHVybiBhfSxPYmplY3RUb1N0cmluZ0V4Mih0LGUpe2xldCBhPVwiXCI7aWYoMCE9PXQmJighKDAscy5mKSh0KXx8bnVsbD09dCkpcmV0dXJuXCIoTnVsbClcIjtpZih0IGluc3RhbmNlb2YgQXJyYXkpZm9yKGNvbnN0IHMgaW4gdClhPWErXCJcXHJcXG5cIitTdHJpbmcodGhpcy5nYXAyKGUpKStcIkl0ZW0gI1wiK1N0cmluZyhzKStcIjogXCIrU3RyaW5nKHRoaXMuT2JqZWN0VG9TdHJpbmdFeDIodFtzXSxlKzEpKTtlbHNlIGlmKHQgaW5zdGFuY2VvZiBPYmplY3QpZm9yKGNvbnN0IHMgaW4gdClhPWErXCJcXHJcXG5cIitTdHJpbmcodGhpcy5nYXAyKGUpKStTdHJpbmcocykrXCIgPSBcIitTdHJpbmcodGhpcy5PYmplY3RUb1N0cmluZ0V4Mih0W3NdLGUrMSkpO2Vsc2UgYSs9U3RyaW5nKHRoaXMuRXNjYXBlSHRtbCh0KSk7cmV0dXJuIGF9LGdhcCh0KXtsZXQgZT1cIlwiO2ZvcihsZXQgYT0wO2E8NCp0O2ErKyllKz1cIiZuYnNwO1wiO3JldHVybiBlfSxnYXAyKHQpe2xldCBlPVwiXCI7Zm9yKGxldCBhPTA7YTw0KnQ7YSsrKWUrPVwiIFwiO3JldHVybiBlfSxPYmplY3RUb1N0cmluZyh0KXtyZXR1cm4gdGhpcy5PYmplY3RUb1N0cmluZ0V4KHQsMCl9LE9iamVjdFRvU3RyaW5nMih0KXtyZXR1cm4gdGhpcy5PYmplY3RUb1N0cmluZ0V4Mih0LDApfSxjaGFyMmhleDp0PT4odCsyNTYpLnRvU3RyaW5nKDE2KS5zdWJzdHIoLTIpLnRvVXBwZXJDYXNlKCkscnN0cjJoZXgodCl7bGV0IGUsYT1cIlwiO2ZvcihlPTA7ZTx0Lmxlbmd0aDtlKyspYSs9U3RyaW5nKHRoaXMuY2hhcjJoZXgodC5jaGFyQ29kZUF0KGUpKSk7cmV0dXJuIGF9LGVuY29kZV91dGY4OnQ9PnVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0KSksZGVjb2RlX3V0Zjg6dD0+ZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh0KSksZGF0YTJibG9iKHQpe2NvbnN0IGU9bmV3IEFycmF5KHQubGVuZ3RoKTtmb3IobGV0IGE9MDthPHQubGVuZ3RoO2ErKyllW2FdPXQuY2hhckNvZGVBdChhKTtyZXR1cm4gbmV3IEJsb2IoW25ldyBVaW50OEFycmF5KGUpXSl9LHJhbmRvbTp0PT5NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqdCksdHJhZGVtYXJrczp0PT50LnJlcGxhY2UoL1xcKFJcXCkvZyxcIiZyZWc7XCIpLnJlcGxhY2UoL1xcKFRNXFwpL2csXCImdHJhZGU7XCIpfX0sNDY6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtIOigpPT5zfSk7Y2xhc3Mgc3twcm9jZXNzRGF0YSh0KXt9b25TdGF0ZUNoYW5nZSh0KXt9c3RhcnQoKXt9b25TZW5kS3ZtRGF0YSh0KXt9fX0sNzg0Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7JDooKT0+aX0pO3ZhciBzPWEoOTg5KSxvPWEoNjExKTtjbGFzcyBpe2NvbnN0cnVjdG9yKHQsZSxhKXt0aGlzLmFjYz1cIlwiLHRoaXMuc3RhdGVQcm9jZXNzb3JGYWM9bmV3IHMudihlLGEsdGhpcy51cGRhdGVSRkJTdGF0ZS5iaW5kKHRoaXMpKSx0aGlzLnBhcmVudD1hLHRoaXMubG9nZ2VyPXR9cHJvY2Vzc0RhdGEodCl7aWYoISgwLG8uZikodCkpcmV0dXJuO3RoaXMuYWNjKz10O2xldCBlPTA7Zm9yKHRoaXMubG9nZ2VyLnZlcmJvc2UoYFByb2Nlc3MgRGF0YSBBQ0MgbGVuZ3RoOiAgJHt0aGlzLmFjYy5sZW5ndGh9YCk7dGhpcy5hY2MubGVuZ3RoPjA7KXtjb25zdCB0PXRoaXMuc3RhdGVQcm9jZXNzb3JGYWMuZ2V0UHJvY2Vzc29yKHRoaXMucGFyZW50LnN0YXRlKSxhPXRoaXMucGFyZW50LnN0YXRlO2lmKGU9dC5wcm9jZXNzU3RhdGUodGhpcy5hY2MpLHRoaXMubG9nZ2VyLnZlcmJvc2UoYFN0YXRlICAke2F9ICBQcm9jZXNzZWQuIGNtZFNpemUgcmV0dXJuZWQgJHtlfWApLDA9PT1lKXJldHVybjt0aGlzLmFjYz10aGlzLmFjYy5zdWJzdHJpbmcoZSksdGhpcy5sb2dnZXIudmVyYm9zZShgcmVtYWluaW5nIGFjYyAgJHt0aGlzLmFjYy5sZW5ndGh9IGNvbW1hbmQgc2l6ZTogJHtlfSBuZXcgcGFyZW50IHN0YXRlOiAke3RoaXMucGFyZW50LnN0YXRlfWApfX11cGRhdGVSRkJTdGF0ZSh0KXt0aGlzLnBhcmVudC5zdGF0ZT10fX19LDY3OToodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse1g6KCk9Pm99KTt2YXIgcz1hKDY0NCk7Y2xhc3Mgb3tjb25zdHJ1Y3Rvcih0KXt0aGlzLnBhcmVudD10fURlY29kZSh0LGUsYSxvLGkscixuLGwpe2NvbnN0IGg9dC5jaGFyQ29kZUF0KGUrKyk7bGV0IGMscCxkO2NvbnN0IHY9e307bGV0IGIsdT0wLGY9MDtpZigwPT09aCl7Zm9yKHRoaXMucGFyZW50LmxvZ2dlci52ZXJib3NlKFwiUmF3IGVuY29kaW5nXCIpLGI9MDtiPG47YisrKXMuai5zZXRQaXhlbCh0aGlzLnBhcmVudCx0LmNoYXJDb2RlQXQoZSsrKSsoMj09PXRoaXMucGFyZW50LmJwcD90LmNoYXJDb2RlQXQoZSsrKTw8ODowKSxiKTtzLmoucHV0SW1hZ2UodGhpcy5wYXJlbnQsYSxvKX1lbHNlIGlmKDE9PT1oKXtwPXQuY2hhckNvZGVBdChlKyspKygyPT09dGhpcy5wYXJlbnQuYnBwP3QuY2hhckNvZGVBdChlKyspPDw4OjApLHRoaXMucGFyZW50LmNhbnZhc0N0eC5maWxsU3R5bGU9XCJyZ2IoXCIrKDE9PT10aGlzLnBhcmVudC5icHA/YCR7MjI0JnB9LCAkeygyOCZwKTw8M30sICR7cy5qLmZpeENvbG9yKCgzJnApPDw2KX1gOmAke3A+PjgmMjQ4fSwgJHtwPj4zJjI1Mn0sJHsoMzEmcCk8PDN9YCkrXCIpXCIsdGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoXCJmaWxsc3R5bGU6IFwiK3RoaXMucGFyZW50LmNhbnZhc0N0eC5maWxsU3R5bGUpO2NvbnN0IG49cy5qLnJvdFgodGhpcy5wYXJlbnQsYSxvKTtvPXMuai5yb3RZKHRoaXMucGFyZW50LGEsbyksYT1uLHRoaXMucGFyZW50LmNhbnZhc0N0eC5maWxsUmVjdChhLG8saSxyKX1lbHNlIGlmKGg+MSYmaDwxNyl7dGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoXCJSZWFkIHRoZSBwYWNrZWQgcGFsZXR0ZVwiKTtsZXQgaT00LHI9MTU7Zm9yKGI9MDtiPGg7YisrKXZbYl09dC5jaGFyQ29kZUF0KGUrKykrKDI9PT10aGlzLnBhcmVudC5icHA/dC5jaGFyQ29kZUF0KGUrKyk8PDg6MCk7Zm9yKDI9PT1oPyhpPTEscj0xKTpoPD00JiYoaT0yLHI9Myk7dTxuJiZlPHQubGVuZ3RoOylmb3IocD10LmNoYXJDb2RlQXQoZSsrKSxiPTgtaTtiPj0wO2ItPWkpcy5qLnNldFBpeGVsKHRoaXMucGFyZW50LHZbcD4+YiZyXSx1KyspO3Muai5wdXRJbWFnZSh0aGlzLnBhcmVudCxhLG8pfWVsc2UgaWYoMTI4PT09aCl7Zm9yKHRoaXMucGFyZW50LmxvZ2dlci52ZXJib3NlKFwiUkxFIGVuY29kZWQgdGlsZVwiKTt1PG4mJmU8dC5sZW5ndGg7KXtwPXQuY2hhckNvZGVBdChlKyspKygyPT09dGhpcy5wYXJlbnQuYnBwP3QuY2hhckNvZGVBdChlKyspPDw4OjApLGY9MTtkb3tmKz1kPXQuY2hhckNvZGVBdChlKyspfXdoaWxlKDI1NT09PWQpO2Zvcig7LS1mPj0wOylzLmouc2V0UGl4ZWwodGhpcy5wYXJlbnQscCx1KyspfXMuai5wdXRJbWFnZSh0aGlzLnBhcmVudCxhLG8pfWVsc2UgaWYoaD4xMjkpe2Zvcih0aGlzLnBhcmVudC5sb2dnZXIudmVyYm9zZShcIlJlYWQgdGhlIFJMRSBwYWxldHRlXCIpLGI9MDtiPGgtMTI4O2IrKyl2W2JdPXQuY2hhckNvZGVBdChlKyspKygyPT09dGhpcy5wYXJlbnQuYnBwP3QuY2hhckNvZGVBdChlKyspPDw4OjApO2Zvcih0aGlzLnBhcmVudC5sb2dnZXIudmVyYm9zZShcIkRlY29kZSBSTEUgb24gcGFsZXR0ZVwiKTt1PG4mJmU8dC5sZW5ndGg7KXtpZihmPTEsYz10LmNoYXJDb2RlQXQoZSsrKSxwPXZbYyUxMjhdLGM+MTI3KWRve2YrPWQ9dC5jaGFyQ29kZUF0KGUrKyl9d2hpbGUoMjU1PT09ZCk7Zm9yKDstLWY+PTA7KXMuai5zZXRQaXhlbCh0aGlzLnBhcmVudCxwLHUrKyl9cy5qLnB1dEltYWdlKHRoaXMucGFyZW50LGEsbyl9fX19LDY0NjoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUseyQ6KCk9PnMuJCxYOigpPT5vLlh9KTt2YXIgcz1hKDc4NCksbz1hKDY3OSl9LDY2MzoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIHM7YS5kKGUse2k6KCk9PnN9KSxmdW5jdGlvbih0KXt0W3QuVkVSQk9TRT01XT1cIlZFUkJPU0VcIix0W3QuSU5GTz00XT1cIklORk9cIix0W3QuREVCVUc9M109XCJERUJVR1wiLHRbdC5XQVJOSU5HPTJdPVwiV0FSTklOR1wiLHRbdC5FUlJPUj0xXT1cIkVSUk9SXCJ9KHN8fChzPXt9KSl9LDIwMToodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse2k6KCk9PnMuaX0pO3ZhciBzPWEoNjYzKX0sNzI1Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7ZTooKT0+aX0pO3ZhciBzPWEoNTY1KSxvPWEoOCk7Y2xhc3MgaXtjb25zdHJ1Y3Rvcih0LGUsYSxzKXt0aGlzLndzU29ja2V0PXQsdGhpcy5wYXJlbnQ9ZSx0aGlzLnJsZURlY29kZXI9YSx0aGlzLnVwZGF0ZVJGQlN0YXRlPXN9cHJvY2Vzc1N0YXRlKHQpe2xldCBlPTA7aWYodC5sZW5ndGg+PTEyKXtjb25zdCBhPXMuci5SZWFkU2hvcnQodCwwKSxpPXMuci5SZWFkU2hvcnQodCwyKSxyPXMuci5SZWFkU2hvcnQodCw0KSxuPXMuci5SZWFkU2hvcnQodCw2KSxsPXIqbixoPXMuci5SZWFkSW50KHQsOCk7aWYoaDwxNyl7aWYocjwxfHxyPjY0fHxuPDF8fG4+NjQpdGhyb3cgdGhpcy5wYXJlbnQubG9nZ2VyLmVycm9yKGBJbnZhbGlkIHRpbGUgc2l6ZSAoJHtyfSwke259KSwgZGlzY29ubmVjdGluZy5gKSxuZXcgRXJyb3IoXCJJbnZhbGlkIHRpbGUgc2l6ZVwiKTtpZih0aGlzLnBhcmVudC5zcGFyZXchPT1yfHx0aGlzLnBhcmVudC5zcGFyZWghPT1uKXt0aGlzLnBhcmVudC5zcGFyZXc9dGhpcy5wYXJlbnQuc3BhcmV3Mj1yLHRoaXMucGFyZW50LnNwYXJlaD10aGlzLnBhcmVudC5zcGFyZWgyPW4sMSE9PXRoaXMucGFyZW50LnJvdGF0aW9uJiYzIT09dGhpcy5wYXJlbnQucm90YXRpb258fCh0aGlzLnBhcmVudC5zcGFyZXcyPW4sdGhpcy5wYXJlbnQuc3BhcmVoMj1yKTtjb25zdCB0PWAke3RoaXMucGFyZW50LnNwYXJldzJ9eCR7dGhpcy5wYXJlbnQuc3BhcmVoMn1gO3RoaXMucGFyZW50LnNwYXJlPXRoaXMucGFyZW50LnNwYXJlY2FjaGVbdF0sKDAsby5mUSkodGhpcy5wYXJlbnQuc3BhcmUpfHwodGhpcy5wYXJlbnQuc3BhcmVjYWNoZVt0XT10aGlzLnBhcmVudC5zcGFyZT10aGlzLnBhcmVudC5jYW52YXNDdHguY3JlYXRlSW1hZ2VEYXRhKHRoaXMucGFyZW50LnNwYXJldzIsdGhpcy5wYXJlbnQuc3BhcmVoMikpfX1pZig0Mjk0OTY3MDczPT09aCl0aGlzLnBhcmVudC5sb2dnZXIudmVyYm9zZShcIkRlc2t0b3Agc2l6ZVwiKSx0aGlzLnBhcmVudC5jYW52YXNDdHguY2FudmFzLndpZHRoPXRoaXMucGFyZW50LlNjcmVlbldpZHRoPXRoaXMucGFyZW50LnJ3aWR0aD10aGlzLnBhcmVudC53aWR0aD1yLHRoaXMucGFyZW50LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0PXRoaXMucGFyZW50LlNjcmVlbkhlaWdodD10aGlzLnBhcmVudC5yaGVpZ2h0PXRoaXMucGFyZW50LmhlaWdodD1uLHRoaXMud3NTb2NrZXQuc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDMsMCwwLDAsMCwwKStzLnIuU2hvcnRUb1N0cih0aGlzLnBhcmVudC53aWR0aCkrcy5yLlNob3J0VG9TdHIodGhpcy5wYXJlbnQuaGVpZ2h0KSksZT0xMixudWxsIT10aGlzLnBhcmVudC5vblNjcmVlblNpemVDaGFuZ2UmJnRoaXMucGFyZW50Lm9uU2NyZWVuU2l6ZUNoYW5nZSh0aGlzLnBhcmVudC5TY3JlZW5XaWR0aCx0aGlzLnBhcmVudC5TY3JlZW5IZWlnaHQpO2Vsc2UgaWYoMD09PWgpe2xldCBzPTEyO2NvbnN0IHI9MTIrbCp0aGlzLnBhcmVudC5icHA7aWYodC5sZW5ndGg8cilyZXR1cm4gMDtlPXI7Zm9yKGxldCBlPTA7ZTxsO2UrKylvLmp3LnNldFBpeGVsKHRoaXMucGFyZW50LHQuY2hhckNvZGVBdChzKyspKygyPT09dGhpcy5wYXJlbnQuYnBwP3QuY2hhckNvZGVBdChzKyspPDw4OjApLGUpO28uancucHV0SW1hZ2UodGhpcy5wYXJlbnQsYSxpKX1lbHNle2lmKDE2IT09aCl0aHJvdyB0aGlzLnBhcmVudC5sb2dnZXIuZXJyb3IoYFVua25vd24gRW5jb2Rpbmc6ICR7aH0gLCBIRVg6ICR7cy5yLnJzdHIyaGV4KHQpfWApLG5ldyBFcnJvcihgVW5rbm93biBFbmNvZGluZzogJHtofWApO3tpZih0Lmxlbmd0aDwxNilyZXR1cm4gMDtjb25zdCBvPXMuci5SZWFkSW50KHQsMTIpO2lmKHQubGVuZ3RoPDE2K28pcmV0dXJuIDA7Y29uc3QgaD0xNixjPTUscD0wO2lmKG8+NSYmMD09PXQuY2hhckNvZGVBdChoKSYmcy5yLlJlYWRTaG9ydFgodCxoKzEpPT09by1jKXRoaXMucmxlRGVjb2Rlci5EZWNvZGUodCxoKzUsYSxpLHIsbixsLG8pO2Vsc2V7Y29uc3QgZT10LnN1YnN0cmluZyhoLGgrby1wKSxzPXRoaXMucGFyZW50LmluZmxhdGUuaW5mbGF0ZShlKTtpZighKHMubGVuZ3RoPjApKXRocm93IHRoaXMucGFyZW50LmxvZ2dlci5lcnJvcihcIkludmFsaWQgZGVmbGF0ZSBkYXRhLlwiKSxuZXcgRXJyb3IoXCJpbnZhbGlkIGRlZmxhdGUgZGF0YVwiKTt0aGlzLnJsZURlY29kZXIuRGVjb2RlKHMsMCxhLGkscixuLGwscy5sZW5ndGgpfWU9MTYrb319aWYoMTAwPT0tLXRoaXMucGFyZW50LnN0YXRlKXt0aGlzLnBhcmVudC5sb2dnZXIuZGVidWcoXCJGcmFtZSBjb21wbGV0ZWQuIFVwZGF0ZSBzdGF0ZSBhbmQgcmVxdWVzdCBuZXcgZnJhbWVcIiksdGhpcy51cGRhdGVSRkJTdGF0ZSg0KTtjb25zdCB0PSgpPT5vLlhuLnNlbmRSZWZyZXNoKHRoaXMucGFyZW50LHRoaXMud3NTb2NrZXQpOzA9PT10aGlzLnBhcmVudC5mcmFtZVJhdGVEZWxheT9vLlhuLnNlbmRSZWZyZXNoKHRoaXMucGFyZW50LHRoaXMud3NTb2NrZXQpOnNldFRpbWVvdXQodCx0aGlzLnBhcmVudC5mcmFtZVJhdGVEZWxheSl9fXJldHVybiBlfX19LDcwOih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7VTooKT0+b30pO3ZhciBzPWEoNTY1KTtjbGFzcyBve2NvbnN0cnVjdG9yKHQsZSxhKXt0aGlzLndzU29ja2V0PXQsdGhpcy5zZXJ2ZXJDdXRUZXh0SGFuZGxlcj1lLHRoaXMudXBkYXRlUkZCU3RhdGU9YX1wcm9jZXNzU3RhdGUodCl7bGV0IGU9MCxhPTA7c3dpdGNoKHQuY2hhckNvZGVBdCgwKSl7Y2FzZSAwOmlmKHQubGVuZ3RoPDQpcmV0dXJuIDA7dGhpcy51cGRhdGVSRkJTdGF0ZSgxMDArcy5yLlJlYWRTaG9ydCh0LDIpKSxlPTQ7YnJlYWs7Y2FzZSAyOmU9MTticmVhaztjYXNlIDM6aWYodC5sZW5ndGg8OClyZXR1cm4gMDtpZihhPXMuci5SZWFkSW50KHQsNCkrOCx0Lmxlbmd0aDxhKXJldHVybiAwO2U9dGhpcy5zZXJ2ZXJDdXRUZXh0SGFuZGxlci5oYW5kbGVTZXJ2ZXJDdXRUZXh0KHQpfXJldHVybiBlfX19LDIxMjoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse3c6KCk9PnN9KTtjbGFzcyBze2NvbnN0cnVjdG9yKHQsZSl7dGhpcy53c1NvY2tldD10LHRoaXMudXBkYXRlUkZCU3RhdGU9ZX1wcm9jZXNzU3RhdGUodCl7bGV0IGU9MDtyZXR1cm4gdC5sZW5ndGg+PTEyPyhlPTEyLHRoaXMudXBkYXRlUkZCU3RhdGUoMSksdGhpcy53c1NvY2tldC5zZW5kKFwiUkZCIDAwMy4wMDhcXG5cIiksZSk6MH19fSwyNjoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse2w6KCk9PnN9KTtjbGFzcyBze2NvbnN0cnVjdG9yKHQsZSl7dGhpcy53c1NvY2tldD10LHRoaXMudXBkYXRlUkZCU3RhdGU9ZX1wcm9jZXNzU3RhdGUodCl7bGV0IGU9MDtyZXR1cm4gdC5sZW5ndGg+PTE/KGU9dC5jaGFyQ29kZUF0KDApKzEsdGhpcy53c1NvY2tldC5zZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMSkpLHRoaXMudXBkYXRlUkZCU3RhdGUoMiksZSk6MH19fSw3MjQ6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHttOigpPT5vfSk7dmFyIHM9YSg1NjUpO2NsYXNzIG97Y29uc3RydWN0b3IodCxlKXt0aGlzLndzU29ja2V0PXQsdGhpcy51cGRhdGVSRkJTdGF0ZT1lfXByb2Nlc3NTdGF0ZSh0KXtsZXQgZT0wO2lmKHQubGVuZ3RoPj00KXtpZihlPTQsMCE9PXMuci5SZWFkSW50KHQsMCkpdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IuIFN0b3BwaW5nLiBTZWN1cml0eSByZXNwb25zZSBub3QgTm9uZS5cIik7cmV0dXJuIHRoaXMud3NTb2NrZXQuc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDEpKSx0aGlzLnVwZGF0ZVJGQlN0YXRlKDMpLGV9cmV0dXJuIDB9fX0sMjU2Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7STooKT0+aX0pO3ZhciBzPWEoNTY1KSxvPWEoNjExKTtjbGFzcyBpe2NvbnN0cnVjdG9yKHQsZSl7dGhpcy53c1NvY2tldD10LHRoaXMucGFyZW50PWV9aGFuZGxlU2VydmVyQ3V0VGV4dCh0KXtpZih0Lmxlbmd0aDw4KXJldHVybiAwO2NvbnN0IGU9cy5yLlJlYWRJbnQodCw0KSs4O2lmKHQubGVuZ3RoPGUpcmV0dXJuIDA7aWYobnVsbCE9dGhpcy5wYXJlbnQub25Ldm1EYXRhKXtjb25zdCBhPXQuc3Vic3RyaW5nKDgsZSk7YS5sZW5ndGg+PTE2JiZcIlxcMEt2bURhdGFDaGFubmVsXCI9PT1hLnN1YnN0cmluZygwLDE1KSYmKHRoaXMucGFyZW50Lmt2bURhdGFTdXBwb3J0ZWR8fCh0aGlzLnBhcmVudC5rdm1EYXRhU3VwcG9ydGVkPSEwLGNvbnNvbGUubG9nKFwiS1ZNIERhdGEgQ2hhbm5lbCBTdXBwb3J0ZWQuXCIpKSwoLTE9PT10aGlzLnBhcmVudC5vbkt2bURhdGFBY2smJjE2PT09YS5sZW5ndGh8fDAhPT1hLmNoYXJDb2RlQXQoMTUpKSYmKHRoaXMucGFyZW50Lm9uS3ZtRGF0YUFjaz0hMCksKDAsby5mKSh0aGlzLnBhcmVudC51cmx2YXJzKSYmKDAsby5mKSh0aGlzLnBhcmVudC51cmx2YXJzLmt2bWRhdGF0cmFjZSkmJmNvbnNvbGUubG9nKGBLVk0tUmVjdigoJHthLmxlbmd0aC0xNn0pKTogICR7YS5zdWJzdHJpbmcoMTYpfWApLGEubGVuZ3RoPjE2JiZ0aGlzLnBhcmVudC5vbkt2bURhdGEoYS5zdWJzdHJpbmcoMTYpKSwhMD09PXRoaXMucGFyZW50Lm9uS3ZtRGF0YUFjayYmdGhpcy5wYXJlbnQub25Ldm1EYXRhUGVuZGluZy5sZW5ndGg+MCYmdGhpcy53c1NvY2tldC5vblNlbmRLdm1EYXRhKHRoaXMucGFyZW50Lm9uS3ZtRGF0YVBlbmRpbmcuc2hpZnQoKSkpfXJldHVybiBlfX19LDk0NjoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse0M6KCk9Pml9KTt2YXIgcz1hKDU2NSksbz1hKDE3Myk7Y2xhc3MgaXtjb25zdHJ1Y3Rvcih0LGUsYSl7dGhpcy53c1NvY2tldD10LHRoaXMucGFyZW50PWUsdGhpcy51cGRhdGVSRkJTdGF0ZT1hfXByb2Nlc3NTdGF0ZSh0KXtsZXQgZT0wO2lmKHQubGVuZ3RoPj0yNCl7dGhpcy5wYXJlbnQucm90YXRpb249MDtjb25zdCBhPXMuci5SZWFkSW50KHQsMjApO2lmKHQubGVuZ3RoPDI0K2EpcmV0dXJuIDA7ZT0yNCthLG51bGwhPXRoaXMucGFyZW50LnVwZGF0ZVNjcmVlbkRpbWVuc2lvbnMmJnRoaXMucGFyZW50LnVwZGF0ZVNjcmVlbkRpbWVuc2lvbnMocy5yLlJlYWRTaG9ydCh0LDApLHMuci5SZWFkU2hvcnQodCwyKSksdGhpcy5wYXJlbnQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aD10aGlzLnBhcmVudC5TY3JlZW5XaWR0aD10aGlzLnBhcmVudC5yd2lkdGg9dGhpcy5wYXJlbnQud2lkdGg9cy5yLlJlYWRTaG9ydCh0LDApLHRoaXMucGFyZW50LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0PXRoaXMucGFyZW50LlNjcmVlbkhlaWdodD10aGlzLnBhcmVudC5yaGVpZ2h0PXRoaXMucGFyZW50LmhlaWdodD1zLnIuUmVhZFNob3J0KHQsMik7bGV0IGk9XCJcIjtyZXR1cm4gdGhpcy5wYXJlbnQudXNlWlJMRSYmKGkrPXMuci5JbnRUb1N0cigxNikpLGkrPXMuci5JbnRUb1N0cigwKSxpKz1zLnIuSW50VG9TdHIoMTA5MiksdGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoXCJTZW5kIHN1cHBvcnRlZCBlbmNvZGluZ3NcIiksdGhpcy53c1NvY2tldC5zZW5kKFN0cmluZy5mcm9tQ2hhckNvZGUoMiwwKStzLnIuU2hvcnRUb1N0cihpLmxlbmd0aC80KzEpK2krcy5yLkludFRvU3RyKC0yMjMpKSwxPT09dGhpcy5wYXJlbnQuYnBwJiZ0aGlzLndzU29ja2V0LnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgwLDAsMCwwLDgsOCwwLDEpK3Muci5TaG9ydFRvU3RyKDcpK3Muci5TaG9ydFRvU3RyKDcpK3Muci5TaG9ydFRvU3RyKDMpK1N0cmluZy5mcm9tQ2hhckNvZGUoNSwyLDAsMCwwLDApKSx0aGlzLnVwZGF0ZVJGQlN0YXRlKDQpLHRoaXMucGFyZW50Lm9uU3RhdGVDaGFuZ2UoMyksdGhpcy5wYXJlbnQubG9nZ2VyLmluZm8oXCJTdGFydCBuZXcgZnJhbWUuXCIpLG8uWC5zZW5kUmVmcmVzaCh0aGlzLnBhcmVudCx0aGlzLndzU29ja2V0KSx0aGlzLnBhcmVudC5vbGRNb3VzZVg9LTEsZX1yZXR1cm4gMH19fSwzODk6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtDdTooKT0+bC5DLFV0OigpPT5pLlUsZXo6KCk9PnMuZSxsbDooKT0+ci5sLG1DOigpPT5uLm0sd1c6KCk9Pm8ud30pO3ZhciBzPWEoNzI1KSxvPWEoMjEyKSxpPWEoNzApLHI9YSgyNiksbj1hKDcyNCksbD1hKDk0Nil9LDk4OToodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse3Y6KCk9PnJ9KTt2YXIgcz1hKDM4OSksbz1hKDI1NiksaT1hKDY3OSk7Y2xhc3Mgcntjb25zdHJ1Y3Rvcih0LGUsYSl7dGhpcy5zdGF0ZVByb2Nlc3NvcnM9e30sdGhpcy5zdGF0ZVByb2Nlc3NvcnNbMF09bmV3IHMud1codCxhKSx0aGlzLnN0YXRlUHJvY2Vzc29yc1sxXT1uZXcgcy5sbCh0LGEpLHRoaXMuc3RhdGVQcm9jZXNzb3JzWzJdPW5ldyBzLm1DKHQsYSksdGhpcy5zdGF0ZVByb2Nlc3NvcnNbM109bmV3IHMuQ3UodCxlLGEpO2NvbnN0IHI9bmV3IG8uSSh0LGUpO3RoaXMuc3RhdGVQcm9jZXNzb3JzWzRdPW5ldyBzLlV0KHQscixhKSx0aGlzLnN0YXRlUHJvY2Vzc29yc1tcIjEwMHBsdXNcIl09bmV3IHMuZXoodCxlLG5ldyBpLlgoZSksYSl9Z2V0UHJvY2Vzc29yKHQpe3JldHVybiB0PD0xMDA/dGhpcy5zdGF0ZVByb2Nlc3NvcnNbdF06dGhpcy5zdGF0ZVByb2Nlc3NvcnNbXCIxMDBwbHVzXCJdfX19LDE1NToodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse1E6KCk9PnN9KTtjbGFzcyBze2NvbnN0cnVjdG9yKHQpe3RoaXMucHJvY2Vzc0RhdGE9dD0+e251bGwhPXRoaXMudGVybWluYWwuY2FwdHVyZSYmKHRoaXMudGVybWluYWwuY2FwdHVyZT1TdHJpbmcodGhpcy50ZXJtaW5hbC5jYXB0dXJlKSt0KTtsZXQgZT1cIlwiO2ZvcihsZXQgYT0wO2E8dC5sZW5ndGg7YSsrKXtjb25zdCBzPXQuY2hhckNvZGVBdChhKTtcIkpcIj09PXRbYV0/dGhpcy5jbGVhclRlcm1pbmFsKCk6ZSs9MCE9KDEyOCZzKT9TdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMudGVybWluYWwuQXNjaWlUb1VuaWNvZGVbMTI3JnNdKTpgJHt0W2FdfWB9dGhpcy5wcm9jZXNzRGF0YVRvWHRlcm0oZSl9LHRoaXMudGVybWluYWw9dH19fSwzODoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse3E6KCk9Pml9KTt2YXIgcz1hKDkyMyksbz1hKDYxMSk7Y29uc3QgaT17Y29udmVydEFNVEtleUNvZGU6dD0+KDAsby5mKSh0LmNvZGUuc3RhcnRzV2l0aChcIktleVwiKSkmJjQ9PT10LmNvZGUubGVuZ3RoP3QuY29kZS5jaGFyQ29kZUF0KDMpKyghMT09PXQuc2hpZnRLZXk/MzI6MCk6KDAsby5mKSh0LmNvZGUuc3RhcnRzV2l0aChcIkRpZ2l0XCIpKSYmNj09PXQuY29kZS5sZW5ndGg/dC5jb2RlLmNoYXJDb2RlQXQoNSk6KDAsby5mKSh0LmNvZGUuc3RhcnRzV2l0aChcIk51bXBhZFwiKSkmJjc9PT10LmNvZGUubGVuZ3RoP3QuY29kZS5jaGFyQ29kZUF0KDYpOnMuWlt0LmNvZGVdfX0sOTIzOih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7WjooKT0+c30pO2NvbnN0IHM9e1BhdXNlOjE5LENhcHNMb2NrOjIwLFNwYWNlOjMyLFF1b3RlOjM5LE1pbnVzOjQ1LE51bXBhZE11bHRpcGx5OjQyLE51bXBhZEFkZDo0MyxQcmludFNjcmVlbjo0NCxDb21tYTo0NCxOdW1wYWRTdWJ0cmFjdDo0NSxOdW1wYWREZWNpbWFsOjQ2LFBlcmlvZDo0NixTbGFzaDo0NyxOdW1wYWREaXZpZGU6NDcsU2VtaWNvbG9uOjU5LEVxdWFsOjYxLE9TTGVmdDo5MSxCcmFja2V0TGVmdDo5MSxPU1JpZ2h0OjkxLEJhY2tzbGFzaDo5MixCcmFja2V0UmlnaHQ6OTMsQ29udGV4dE1lbnU6OTMsQmFja3F1b3RlOjk2LE51bUxvY2s6MTQ0LFNjcm9sbExvY2s6MTQ1LEJhY2tzcGFjZTo2NTI4OCxUYWI6NjUyODksRW50ZXI6NjUyOTMsTnVtcGFkRW50ZXI6NjUyOTMsRXNjYXBlOjY1MzA3LERlbGV0ZTo2NTUzNSxIb21lOjY1MzYwLFBhZ2VVcDo2NTM2NSxQYWdlRG93bjo2NTM2NixBcnJvd0xlZnQ6NjUzNjEsQXJyb3dVcDo2NTM2MixBcnJvd1JpZ2h0OjY1MzYzLEFycm93RG93bjo2NTM2NCxFbmQ6NjUzNjcsSW5zZXJ0OjY1Mzc5LEYxOjY1NDcwLEYyOjY1NDcxLEYzOjY1NDcyLEY0OjY1NDczLEY1OjY1NDc0LEY2OjY1NDc1LEY3OjY1NDc2LEY4OjY1NDc3LEY5OjY1NDc4LEYxMDo2NTQ3OSxGMTE6NjU0ODAsRjEyOjY1NDgxLFNoaWZ0TGVmdDo2NTUwNSxTaGlmdFJpZ2h0OjY1NTA2LENvbnRyb2xMZWZ0OjY1NTA3LENvbnRyb2xSaWdodDo2NTUwOCxBbHRMZWZ0OjY1NTEzLEFsdFJpZ2h0OjY1NTE0LE1ldGFMZWZ0OjY1NTExLE1ldGFSaWdodDo2NTUxMn19LDE3MzoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse1g6KCk9Pml9KTt2YXIgcz1hKDU2NSksbz1hKDYxMSk7Y29uc3QgaT17c2VuZFJlZnJlc2godCxlKXtpZighdC5ob2xkaW5nKWlmKHQuZm9jdXNNb2RlPjApe2NvbnN0IGE9Mip0LmZvY3VzTW9kZTtlLnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSgzLDEpK3Muci5TaG9ydFRvU3RyKE1hdGgubWF4KE1hdGgubWluKHQub2xkTW91c2VYLHQubGFzdE1vdXNlWCktdC5mb2N1c01vZGUsMCkpK3Muci5TaG9ydFRvU3RyKE1hdGgubWF4KE1hdGgubWluKHQub2xkTW91c2VZLHQubGFzdE1vdXNlWSktdC5mb2N1c01vZGUsMCkpK3Muci5TaG9ydFRvU3RyKGErTWF0aC5hYnModC5vbGRNb3VzZVgtdC5sYXN0TW91c2VYKSkrcy5yLlNob3J0VG9TdHIoYStNYXRoLmFicyh0Lm9sZE1vdXNlWS10Lmxhc3RNb3VzZVkpKSksdC5vbGRNb3VzZVg9dC5sYXN0TW91c2VYLHQub2xkTW91c2VZPXQubGFzdE1vdXNlWX1lbHNlIGUuc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDMsMSwwLDAsMCwwKStzLnIuU2hvcnRUb1N0cih0LnJ3aWR0aCkrcy5yLlNob3J0VG9TdHIodC5yaGVpZ2h0KSl9LHNlbmRLZXkodCxlLGEpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBlKWZvcihjb25zdCBhIGluIGUpdGhpcy5zZW5kS2V5KHQsZVthXVswXSxlW2FdWzFdKTtlbHNlIHQuc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDQsYSwwLDApK3Muci5JbnRUb1N0cihlKSl9LHNlbmRLdm1EYXRhKHQsZSxhKXshMCE9PXQub25Ldm1EYXRhQWNrP3Qub25Ldm1EYXRhUGVuZGluZy5wdXNoKGEpOigoMCxvLmYpKHQudXJsdmFycykmJigwLG8uZikodC51cmx2YXJzLmt2bWRhdGF0cmFjZSkmJmNvbnNvbGUubG9nKGBLVk0tU2VuZCgke1N0cmluZyhhLmxlbmd0aCl9KTogJHtTdHJpbmcoYSl9YCksYT1cIlxcMEt2bURhdGFDaGFubmVsXFwwXCIrU3RyaW5nKGEpLGUuc2VuZChgJHtTdHJpbmcuZnJvbUNoYXJDb2RlKDYsMCwwLDApfSR7cy5yLkludFRvU3RyKGEubGVuZ3RoKX0ke1N0cmluZyhhKX1gKSx0Lm9uS3ZtRGF0YUFjaz0hMSl9LHNlbmRLZWVwQWxpdmUodCxlKXt0Lmxhc3RLZWVwQWxpdmU8RGF0ZS5ub3coKS01ZTMmJih0Lmxhc3RLZWVwQWxpdmU9RGF0ZS5ub3coKSxlLnNlbmQoU3RyaW5nLmZyb21DaGFyQ29kZSg2LDAsMCwwKStzLnIuSW50VG9TdHIoMTYpK1wiXFwwS3ZtRGF0YUNoYW5uZWxcXDBcIikpfSxzZW5kQ3RybEFsdERlbE1zZyh0KXt0aGlzLnNlbmRDYWQodCl9LHNlbmRDYWQodCl7dGhpcy5zZW5kS2V5KHQsNjU1MDcsMSksdGhpcy5zZW5kS2V5KHQsNjU1MTMsMSksdGhpcy5zZW5kS2V5KHQsNjU1MzUsMSksdGhpcy5zZW5kS2V5KHQsNjU1MzUsMCksdGhpcy5zZW5kS2V5KHQsNjU1MTMsMCksdGhpcy5zZW5kS2V5KHQsNjU1MDcsMCl9fX0sNjQ0Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7ajooKT0+c30pO2NvbnN0IHM9e3B1dEltYWdlKHQsZSxhKXtpZih0LmhvbGRpbmcpcmV0dXJuO2NvbnN0IG89cy5hcm90WCh0LGUsYSk7YT1zLmFyb3RZKHQsZSxhKSxlPW8sdC5jYW52YXNDdHgucHV0SW1hZ2VEYXRhKHQuc3BhcmUsZSxhKX0sc2V0UGl4ZWwodCxlLGEpe2xldCBvLGkscj00KmE7dC5yb3RhdGlvbj4wJiYoMT09PXQucm90YXRpb24/KG89YSV0LnNwYXJldyxpPU1hdGguZmxvb3IoYS90LnNwYXJldykscj00KihhPW8qdC5zcGFyZXcyKyh0LnNwYXJldzItMS1pKSkpOjI9PT10LnJvdGF0aW9uP3I9dC5zcGFyZXcqdC5zcGFyZWgqNC00LXI6Mz09PXQucm90YXRpb24mJihvPWEldC5zcGFyZXcsaT1NYXRoLmZsb29yKGEvdC5zcGFyZXcpLHI9NCooYT0odC5zcGFyZXcyLTEtbykqdC5zcGFyZXcyK2kpKSksMT09PXQuYnBwPyh0LnNwYXJlLmRhdGFbcisrXT0yMjQmZSx0LnNwYXJlLmRhdGFbcisrXT0oMjgmZSk8PDMsdC5zcGFyZS5kYXRhW3IrK109cy5maXhDb2xvcigoMyZlKTw8NikpOih0LnNwYXJlLmRhdGFbcisrXT1lPj44JjI0OCx0LnNwYXJlLmRhdGFbcisrXT1lPj4zJjI1Mix0LnNwYXJlLmRhdGFbcisrXT0oMzEmZSk8PDMpLHQuc3BhcmUuZGF0YVtyXT0yNTV9LGFyb3RYOih0LGUsYSk9PjA9PT10LnJvdGF0aW9uP2U6MT09PXQucm90YXRpb24/dC5jYW52YXNDdHguY2FudmFzLndpZHRoLXQuc3BhcmV3Mi1hOjI9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy53aWR0aC10LnNwYXJldzItZTozPT09dC5yb3RhdGlvbj9hOjAsYXJvdFk6KHQsZSxhKT0+MD09PXQucm90YXRpb24/YToxPT09dC5yb3RhdGlvbj9lOjI9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQtdC5zcGFyZWgyLWE6Mz09PXQucm90YXRpb24/dC5jYW52YXNDdHguY2FudmFzLmhlaWdodC10LnNwYXJlaC1lOjAsY3JvdFg6KHQsZSxhKT0+MD09PXQucm90YXRpb24/ZToxPT09dC5yb3RhdGlvbj9hOjI9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy53aWR0aC1lOjM9PT10LnJvdGF0aW9uP3QuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQtYTowLGNyb3RZOih0LGUsYSk9PjA9PT10LnJvdGF0aW9uP2E6MT09PXQucm90YXRpb24/dC5jYW52YXNDdHguY2FudmFzLndpZHRoLWU6Mj09PXQucm90YXRpb24/dC5jYW52YXNDdHguY2FudmFzLmhlaWdodC1hOjM9PT10LnJvdGF0aW9uP2U6MCxyb3RYOih0LGUsYSk9PjA9PT10LnJvdGF0aW9ufHwxPT09dC5yb3RhdGlvbj9lOjI9PT10LnJvdGF0aW9uP2UtdC5jYW52YXNDdHguY2FudmFzLndpZHRoOjM9PT10LnJvdGF0aW9uP2UtdC5jYW52YXNDdHguY2FudmFzLmhlaWdodDowLHJvdFk6KHQsZSxhKT0+MD09PXQucm90YXRpb24/YToxPT09dC5yb3RhdGlvbj9hLXQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aDoyPT09dC5yb3RhdGlvbj9hLXQuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQ6Mz09PXQucm90YXRpb24/YTowLHNldFJvdGF0aW9uKHQsZSl7Zm9yKDtlPDA7KWUrPTQ7Y29uc3QgYT1lJTQ7aWYodC5ob2xkaW5nKXJldHVybiB0LnJvdGF0aW9uPWEsITE7aWYoYT09PXQucm90YXRpb24pcmV0dXJuITA7bGV0IG89dC5jYW52YXNDdHguY2FudmFzLndpZHRoLGk9dC5jYW52YXNDdHguY2FudmFzLmhlaWdodDsxIT09dC5yb3RhdGlvbiYmMyE9PXQucm90YXRpb258fChvPXQuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQsaT10LmNhbnZhc0N0eC5jYW52YXMud2lkdGgpLG51bGw9PXQudGNhbnZhcyYmKHQudGNhbnZhcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpKTtjb25zdCByPXQudGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuIHIuc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSxyLmNhbnZhcy53aWR0aD1vLHIuY2FudmFzLmhlaWdodD1pLHIucm90YXRlKC05MCp0LnJvdGF0aW9uKk1hdGguUEkvMTgwKSwwPT09dC5yb3RhdGlvbiYmci5kcmF3SW1hZ2UodC5jYW52YXNDdHguY2FudmFzLDAsMCksMT09PXQucm90YXRpb24mJnIuZHJhd0ltYWdlKHQuY2FudmFzQ3R4LmNhbnZhcywtdC5jYW52YXNDdHguY2FudmFzLndpZHRoLDApLDI9PT10LnJvdGF0aW9uJiZyLmRyYXdJbWFnZSh0LmNhbnZhc0N0eC5jYW52YXMsLXQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aCwtdC5jYW52YXNDdHguY2FudmFzLmhlaWdodCksMz09PXQucm90YXRpb24mJnIuZHJhd0ltYWdlKHQuY2FudmFzQ3R4LmNhbnZhcywwLC10LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0KSwwIT09dC5yb3RhdGlvbiYmMiE9PXQucm90YXRpb258fCh0LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0PW8sdC5jYW52YXNDdHguY2FudmFzLndpZHRoPWkpLDEhPT10LnJvdGF0aW9uJiYzIT09dC5yb3RhdGlvbnx8KHQuY2FudmFzQ3R4LmNhbnZhcy5oZWlnaHQ9aSx0LmNhbnZhc0N0eC5jYW52YXMud2lkdGg9byksdC5jYW52YXNDdHguc2V0VHJhbnNmb3JtKDEsMCwwLDEsMCwwKSx0LmNhbnZhc0N0eC5yb3RhdGUoOTAqYSpNYXRoLlBJLzE4MCksdC5yb3RhdGlvbj1hLHQuY2FudmFzQ3R4LmRyYXdJbWFnZSh0LnRjYW52YXMscy5yb3RYKHQsMCwwKSxzLnJvdFkodCwwLDApKSx0LndpZHRoPXQuY2FudmFzQ3R4LmNhbnZhcy53aWR0aCx0LmhlaWdodD10LmNhbnZhc0N0eC5jYW52YXMuaGVpZ2h0LG51bGwhPXQub25TY3JlZW5SZXNpemUmJnQub25TY3JlZW5SZXNpemUodC53aWR0aCx0LmhlaWdodCx0LmNhbnZhc0lkKSwhMH0sZml4Q29sb3I6dD0+dD4xMjc/dCszMjp0fX0sNzE3Oih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7RTooKT0+bn0pO3ZhciBzLG89YSgzOCksaT1hKDE3Mykscj1hKDYxMSk7IWZ1bmN0aW9uKHQpe3RbdC5VcD0wXT1cIlVwXCIsdFt0LkRvd249MV09XCJEb3duXCJ9KHN8fChzPXt9KSk7Y2xhc3Mgbntjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuQ29tbXM9ZSx0aGlzLnBhcmVudD10fUdyYWJLZXlJbnB1dCgpe3RoaXMuS2V5SW5wdXRHcmFifHwoZG9jdW1lbnQub25rZXl1cD10aGlzLmhhbmRsZUtleVVwLmJpbmQodGhpcyksZG9jdW1lbnQub25rZXlkb3duPXRoaXMuaGFuZGxlS2V5RG93bi5iaW5kKHRoaXMpLGRvY3VtZW50Lm9ua2V5cHJlc3M9dGhpcy5oYW5kbGVLZXlzLmJpbmQodGhpcyksdGhpcy5LZXlJbnB1dEdyYWI9ITApfVVuR3JhYktleUlucHV0KCl7dGhpcy5LZXlJbnB1dEdyYWImJihkb2N1bWVudC5vbmtleXVwPW51bGwsZG9jdW1lbnQub25rZXlkb3duPW51bGwsZG9jdW1lbnQub25rZXlwcmVzcz1udWxsLHRoaXMuS2V5SW5wdXRHcmFiPSExKX1oYW5kbGVLZXlzKHQpe3JldHVybiB0aGlzLmhhbHRFdmVudCh0KX1oYWx0RXZlbnQodCl7cmV0dXJuKDAsci5mKSh0LnByZXZlbnREZWZhdWx0KSYmdC5wcmV2ZW50RGVmYXVsdCgpLCgwLHIuZikodC5zdG9wUHJvcGFnYXRpb24pJiZ0LnN0b3BQcm9wYWdhdGlvbigpLCExfWhhbmRsZUtleVVwKHQpe3JldHVybiB0aGlzLmhhbmRsZUtleUV2ZW50KHMuVXAsdCl9aGFuZGxlS2V5RG93bih0KXtyZXR1cm4gdGhpcy5oYW5kbGVLZXlFdmVudChzLkRvd24sdCl9aGFuZGxlS2V5RXZlbnQodCxlKXtsZXQgYT1lO2lmKCgwLHIuZikoYSl8fChhPXdpbmRvdy5ldmVudCksKDAsci5mKShhLmNvZGUpKXtjb25zdCBlPW8ucS5jb252ZXJ0QU1US2V5Q29kZShhKTt0aGlzLnBhcmVudC5sb2dnZXIudmVyYm9zZShgS2V5ICR7dH0gOiAke1N0cmluZyhlKX1gKSxudWxsIT1lJiZpLlguc2VuZEtleSh0aGlzLkNvbW1zLGUsdCl9ZWxzZXtsZXQgZT1hLmtleUNvZGU7MTczPT09ZSYmKGU9MTg5KSw2MT09PWUmJihlPTE4Nyk7bGV0IHM9ZTshMT09PWEuc2hpZnRLZXkmJmU+PTY1JiZlPD05MCYmKHM9ZSszMiksZT49MTEyJiZlPD0xMjQmJihzPWUrNjUzNTgpLDg9PT1lJiYocz02NTI4OCksOT09PWUmJihzPTY1Mjg5KSwxMz09PWUmJihzPTY1MjkzKSwxNj09PWUmJihzPTY1NTA1KSwxNz09PWUmJihzPTY1NTA3KSwxOD09PWUmJihzPTY1NTEzKSwyNz09PWUmJihzPTY1MzA3KSwzMz09PWUmJihzPTY1MzY1KSwzND09PWUmJihzPTY1MzY2KSwzNT09PWUmJihzPTY1MzY3KSwzNj09PWUmJihzPTY1MzYwKSwzNz09PWUmJihzPTY1MzYxKSwzOD09PWUmJihzPTY1MzYyKSwzOT09PWUmJihzPTY1MzYzKSw0MD09PWUmJihzPTY1MzY0KSw0NT09PWUmJihzPTY1Mzc5KSw0Nj09PWUmJihzPTY1NTM1KSxlPj05NiYmZTw9MTA1JiYocz1lLTQ4KSwxMDY9PT1lJiYocz00MiksMTA3PT09ZSYmKHM9NDMpLDEwOT09PWUmJihzPTQ1KSwxMTA9PT1lJiYocz00NiksMTExPT09ZSYmKHM9NDcpLDE4Nj09PWUmJihzPTU5KSwxODc9PT1lJiYocz02MSksMTg4PT09ZSYmKHM9NDQpLDE4OT09PWUmJihzPTQ1KSwxOTA9PT1lJiYocz00NiksMTkxPT09ZSYmKHM9NDcpLDE5Mj09PWUmJihzPTk2KSwyMTk9PT1lJiYocz05MSksMjIwPT09ZSYmKHM9OTIpLDIyMT09PWUmJihzPTkzKSwyMjI9PT1lJiYocz0zOSksdGhpcy5wYXJlbnQubG9nZ2VyLnZlcmJvc2UoYEtleSAke3R9OiAke2V9ICA9ICR7c31gKSxpLlguc2VuZEtleSh0aGlzLkNvbW1zLHMsdCl9cmV0dXJuIHRoaXMuaGFsdEV2ZW50KGEpfX19LDMzOih0LGUsYSk9PntcInVzZSBzdHJpY3RcIjthLmQoZSx7eDooKT0+cn0pO3ZhciBzPWEoNTY1KSxvPWEoNjQ0KSxpPWEoNjExKTtjbGFzcyBye2NvbnN0cnVjdG9yKHQsZSxhKXt0aGlzLnRvcHBvc2l0aW9uPTAsdGhpcy5sZWZ0cG9zaXRpb249MCx0aGlzLnBhcmVudD10LHRoaXMuY29tbT1lLHRoaXMuZGVib3VuY2VUaW1lPWEsdGhpcy5tb3VzZUNsaWNrQ29tcGxldGVkPSEwLHRoaXMubGFzdEV2ZW50PW51bGx9R3JhYk1vdXNlSW5wdXQoKXt0aGlzLk1vdXNlSW5wdXRHcmFifHwodGhpcy5Nb3VzZUlucHV0R3JhYj0hMCl9VW5HcmFiTW91c2VJbnB1dCgpe2lmKCF0aGlzLk1vdXNlSW5wdXRHcmFiKXJldHVybjtjb25zdCB0PXRoaXMucGFyZW50LmNhbnZhc0N0eC5jYW52YXM7dC5vbm1vdXNlbW92ZT1udWxsLHQub25tb3VzZXVwPW51bGwsdC5vbm1vdXNlZG93bj1udWxsLHRoaXMuTW91c2VJbnB1dEdyYWI9ITF9bW91c2Vkb3duKHQpe3JldHVybiB0aGlzLnBhcmVudC5idXR0b25tYXNrfD0xPDx0LmJ1dHRvbix0aGlzLm1vdXNlbW92ZSh0KX1tb3VzZXVwKHQpe3JldHVybiB0aGlzLnBhcmVudC5idXR0b25tYXNrJj02NTUzNS0oMTw8dC5idXR0b24pLHRoaXMubW91c2Vtb3ZlKHQpfW1vdXNlbW92ZSh0KXtpZig0IT09dGhpcy5wYXJlbnQuc3RhdGUpcmV0dXJuITA7Y29uc3QgZT10aGlzLmdldFBvc2l0aW9uT2ZDb250cm9sKHRoaXMucGFyZW50LmNhbnZhc0NvbnRyb2wpLGE9dGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsoMD09PXRoaXMudG9wcG9zaXRpb258fGEudG9wPnRoaXMudG9wcG9zaXRpb24pJiYodGhpcy50b3Bwb3NpdGlvbj1hLnRvcCksKDA9PT10aGlzLmxlZnRwb3NpdGlvbnx8YS5sZWZ0PnRoaXMubGVmdHBvc2l0aW9uKSYmKHRoaXMubGVmdHBvc2l0aW9uPWEubGVmdCk7Y29uc3Qgcj10aGlzLnRvcHBvc2l0aW9uLWEudG9wLG49dGhpcy5sZWZ0cG9zaXRpb24tYS5sZWZ0O2lmKHRoaXMucGFyZW50Lmxhc3RNb3VzZVg9KHQucGFnZVgtZVswXStuKSoodGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC5oZWlnaHQvdGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC5vZmZzZXRIZWlnaHQpLHRoaXMucGFyZW50Lmxhc3RNb3VzZVk9KHQucGFnZVktZVsxXStyKSoodGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC53aWR0aC90aGlzLnBhcmVudC5jYW52YXNDb250cm9sLm9mZnNldFdpZHRoKSwoMCxpLmYpKHRoaXMucGFyZW50Lm5vTW91c2VSb3RhdGUpfHwodGhpcy5wYXJlbnQubGFzdE1vdXNlWDI9by5qLmNyb3RYKHRoaXMucGFyZW50LHRoaXMucGFyZW50Lmxhc3RNb3VzZVgsdGhpcy5wYXJlbnQubGFzdE1vdXNlWSksdGhpcy5wYXJlbnQubGFzdE1vdXNlWT1vLmouY3JvdFkodGhpcy5wYXJlbnQsdGhpcy5wYXJlbnQubGFzdE1vdXNlWCx0aGlzLnBhcmVudC5sYXN0TW91c2VZKSx0aGlzLnBhcmVudC5sYXN0TW91c2VYPXRoaXMucGFyZW50Lmxhc3RNb3VzZVgyKSx0aGlzLmNvbW0uc2VuZChTdHJpbmcuZnJvbUNoYXJDb2RlKDUsdGhpcy5wYXJlbnQuYnV0dG9ubWFzaykrcy5yLlNob3J0VG9TdHIodGhpcy5wYXJlbnQubGFzdE1vdXNlWCkrcy5yLlNob3J0VG9TdHIodGhpcy5wYXJlbnQubGFzdE1vdXNlWSkpLHRoaXMucGFyZW50LnNldERlc2tGb2N1cyhcIkRlc2tGb2N1c1wiLHRoaXMucGFyZW50LmZvY3VzTW9kZSksMCE9PXRoaXMucGFyZW50LmZvY3VzTW9kZSl7Y29uc3QgdD1NYXRoLm1pbih0aGlzLnBhcmVudC5sYXN0TW91c2VYLHRoaXMucGFyZW50LmNhbnZhc0NvbnRyb2wud2lkdGgtdGhpcy5wYXJlbnQuZm9jdXNNb2RlKSxhPU1hdGgubWluKHRoaXMucGFyZW50Lmxhc3RNb3VzZVksdGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbC5oZWlnaHQtdGhpcy5wYXJlbnQuZm9jdXNNb2RlKSxzPTIqdGhpcy5wYXJlbnQuZm9jdXNNb2RlLG89dGhpcy5wYXJlbnQuY2FudmFzQ29udHJvbCxpPW8ub2Zmc2V0SGVpZ2h0L3RoaXMucGFyZW50LmNhbnZhc0NvbnRyb2wuaGVpZ2h0LHI9by5vZmZzZXRXaWR0aC90aGlzLnBhcmVudC5jYW52YXNDb250cm9sLndpZHRoLG49dGhpcy5wYXJlbnQuZ2V0RGVza0ZvY3VzKFwiRGVza0ZvY3VzXCIpLGw9dGhpcy5nZXRQb3NpdGlvbk9mQ29udHJvbCh0aGlzLnBhcmVudC5jYW52YXNDb250cm9sLnBhcmVudEVsZW1lbnQpO24ubGVmdD1gJHtNYXRoLm1heCgodC10aGlzLnBhcmVudC5mb2N1c01vZGUpKmksMCkrKGVbMF0tbFswXSl9cHhgLG4udG9wPWAke01hdGgubWF4KChhLXRoaXMucGFyZW50LmZvY3VzTW9kZSkqciwwKSsoZVsxXS1sWzFdKX1weGAsbi53aWR0aD1zKmktNitcInB4XCIsbi5oZWlnaHQ9cyppLTYrXCJweFwifXJldHVybiB0aGlzLmhhbHRFdmVudCh0KX1oYWx0RXZlbnQodCl7cmV0dXJuKDAsaS5mKSh0LnByZXZlbnREZWZhdWx0KSYmdC5wcmV2ZW50RGVmYXVsdCgpLCgwLGkuZikodC5zdG9wUHJvcGFnYXRpb24pJiZ0LnN0b3BQcm9wYWdhdGlvbigpLCExfWdldFBvc2l0aW9uT2ZDb250cm9sKHQpe2NvbnN0IGU9WzAsMF07bGV0IGE9dDtmb3IoO251bGwhPWE7KWVbMF09TnVtYmVyKGVbMF0pK051bWJlcihhLm9mZnNldExlZnQpLGVbMV09TnVtYmVyKGVbMV0pK051bWJlcihhLm9mZnNldFRvcCksYT1hLm9mZnNldFBhcmVudDtyZXR1cm4gZX19fSw2MTE6KHQsZSxhKT0+e1widXNlIHN0cmljdFwiO2EuZChlLHtmOigpPT5zfSk7Y29uc3Qgcz10PT5udWxsIT10JiZcIlwiIT09dCYmITEhPT10JiYwIT09dH0sODoodCxlLGEpPT57XCJ1c2Ugc3RyaWN0XCI7YS5kKGUse0VCOigpPT5yLkUsWG46KCk9Pm8uWCxmUTooKT0+bC5mLGp3OigpPT5pLmoscUQ6KCk9PnMucSx4eDooKT0+bi54fSk7dmFyIHM9YSgzOCksbz1hKDE3MyksaT1hKDY0NCkscj1hKDcxNyksbj1hKDMzKSxsPWEoNjExKX0sMzA1Om1vZHVsZT0+e3ZhciBaTElCPVpMSUJ8fHt9LEJBU0UsTk1BWDt2b2lkIDA9PT1aTElCLmNvbW1vbl9pbml0aWFsaXplZCYmKFpMSUIuWl9OT19GTFVTSD0wLFpMSUIuWl9QQVJUSUFMX0ZMVVNIPTEsWkxJQi5aX1NZTkNfRkxVU0g9MixaTElCLlpfRlVMTF9GTFVTSD0zLFpMSUIuWl9GSU5JU0g9NCxaTElCLlpfQkxPQ0s9NSxaTElCLlpfVFJFRVM9NixaTElCLlpfT0s9MCxaTElCLlpfU1RSRUFNX0VORD0xLFpMSUIuWl9ORUVEX0RJQ1Q9MixaTElCLlpfRVJSTk89LTEsWkxJQi5aX1NUUkVBTV9FUlJPUj0tMixaTElCLlpfREFUQV9FUlJPUj0tMyxaTElCLlpfTUVNX0VSUk9SPS00LFpMSUIuWl9CVUZfRVJST1I9LTUsWkxJQi5aX1ZFUlNJT05fRVJST1I9LTYsWkxJQi5aX0RFRkxBVEVEPTgsWkxJQi56X3N0cmVhbT1mdW5jdGlvbigpe3RoaXMubmV4dF9pbj0wLHRoaXMuYXZhaWxfaW49MCx0aGlzLnRvdGFsX2luPTAsdGhpcy5uZXh0X291dD0wLHRoaXMuYXZhaWxfb3V0PTAsdGhpcy50b3RhbF9vdXQ9MCx0aGlzLm1zZz1udWxsLHRoaXMuc3RhdGU9bnVsbCx0aGlzLmRhdGFfdHlwZT0wLHRoaXMuYWRsZXI9MCx0aGlzLmlucHV0X2RhdGE9XCJcIix0aGlzLm91dHB1dF9kYXRhPVwiXCIsdGhpcy5lcnJvcj0wLHRoaXMuY2hlY2tzdW1fZnVuY3Rpb249bnVsbH0sWkxJQi5nel9oZWFkZXI9ZnVuY3Rpb24oKXt0aGlzLnRleHQ9MCx0aGlzLnRpbWU9MCx0aGlzLnhmbGFncz0wLHRoaXMub3M9MjU1LHRoaXMuZXh0cmE9bnVsbCx0aGlzLmV4dHJhX2xlbj0wLHRoaXMuZXh0cmFfbWF4PTAsdGhpcy5uYW1lPW51bGwsdGhpcy5uYW1lX21heD0wLHRoaXMuY29tbWVudD1udWxsLHRoaXMuY29tbV9tYXg9MCx0aGlzLmhjcmM9MCx0aGlzLmRvbmU9MH0sWkxJQi5jb21tb25faW5pdGlhbGl6ZWQ9ITApLHZvaWQgMD09PVpMSUImJmFsZXJ0KFwiWkxJQiBpcyBub3QgZGVmaW5lZC4gIFNSQyB6bGliLmpzIGJlZm9yZSB6bGliLWluZmxhdGUuanNcIiksZnVuY3Rpb24oKXt2YXIgREVGX1dCSVRTPTE1LEhFQUQ9MCxGTEFHUz0xLFRJTUU9MixPUz0zLEVYTEVOPTQsRVhUUkE9NSxOQU1FPTYsQ09NTUVOVD03LEhDUkM9OCxESUNUSUQ9OSxESUNUPTEwLFRZUEU9MTEsVFlQRURPPTEyLFNUT1JFRD0xMyxDT1BZXz0xNCxDT1BZPTE1LFRBQkxFPTE2LExFTkxFTlM9MTcsQ09ERUxFTlM9MTgsTEVOXz0xOSxMRU49MjAsTEVORVhUPTIxLERJU1Q9MjIsRElTVEVYVD0yMyxNQVRDSD0yNCxMSVQ9MjUsQ0hFQ0s9MjYsTEVOR1RIPTI3LERPTkU9MjgsQkFEPTI5LE1FTT0zMCxTWU5DPTMxLEVOT1VHSF9MRU5TPTg1MixFTk9VR0hfRElTVFM9NTkyLEVOT1VHSD1FTk9VR0hfTEVOUytFTk9VR0hfRElTVFMsQ09ERVM9MCxMRU5TPTEsRElTVFM9MixpbmZsYXRlX3RhYmxlX2xiYXNlPVszLDQsNSw2LDcsOCw5LDEwLDExLDEzLDE1LDE3LDE5LDIzLDI3LDMxLDM1LDQzLDUxLDU5LDY3LDgzLDk5LDExNSwxMzEsMTYzLDE5NSwyMjcsMjU4LDAsMF0saW5mbGF0ZV90YWJsZV9sZXh0PVsxNiwxNiwxNiwxNiwxNiwxNiwxNiwxNiwxNywxNywxNywxNywxOCwxOCwxOCwxOCwxOSwxOSwxOSwxOSwyMCwyMCwyMCwyMCwyMSwyMSwyMSwyMSwxNiwyMDMsNjldLGluZmxhdGVfdGFibGVfZGJhc2U9WzEsMiwzLDQsNSw3LDksMTMsMTcsMjUsMzMsNDksNjUsOTcsMTI5LDE5MywyNTcsMzg1LDUxMyw3NjksMTAyNSwxNTM3LDIwNDksMzA3Myw0MDk3LDYxNDUsODE5MywxMjI4OSwxNjM4NSwyNDU3NywwLDBdLGluZmxhdGVfdGFibGVfZGV4dD1bMTYsMTYsMTYsMTYsMTcsMTcsMTgsMTgsMTksMTksMjAsMjAsMjEsMjEsMjIsMjIsMjMsMjMsMjQsMjQsMjUsMjUsMjYsMjYsMjcsMjcsMjgsMjgsMjksMjksNjQsNjRdO2Z1bmN0aW9uIGluZmxhdGVfdGFibGUodCxlKXt2YXIgYSxzLG8saSxyLG4sbCxoLGMscCxkLHYsYix1LGYsZyxTLG0sXyxDLEEsRSxJPXQubmV4dCxrPWU9PURJU1RTP3QuZGlzdGJpdHM6dC5sZW5iaXRzLHc9dC53b3JrLFQ9dC5sZW5zLEI9ZT09RElTVFM/dC5ubGVuOjAsUj10LmNvZGVzO2E9ZT09TEVOUz90Lm5sZW46ZT09RElTVFM/dC5uZGlzdDoxOTt2YXIgRD1uZXcgQXJyYXkoMTYpLHg9bmV3IEFycmF5KDE2KTtmb3Iocz0wO3M8PTE1O3MrKylEW3NdPTA7Zm9yKG89MDtvPGE7bysrKURbVFtCK29dXSsrO2ZvcihuPWsscj0xNTtyPj0xJiYwPT1EW3JdO3ItLSk7aWYobj5yJiYobj1yKSwwPT1yKXJldHVybiBnPXtvcDo2NCxiaXRzOjEsdmFsOjB9LFJbSSsrXT1nLFJbSSsrXT1nLGU9PURJU1RTP3QuZGlzdGJpdHM9MTp0LmxlbmJpdHM9MSx0Lm5leHQ9SSwwO2ZvcihpPTE7aTxyJiYwPT1EW2ldO2krKyk7Zm9yKG48aSYmKG49aSksYz0xLHM9MTtzPD0xNTtzKyspaWYoYzw8PTEsKGMtPURbc10pPDApcmV0dXJuLTE7aWYoYz4wJiYoZT09Q09ERVN8fDEhPXIpKXJldHVybiB0Lm5leHQ9SSwtMTtmb3IoeFsxXT0wLHM9MTtzPDE1O3MrKyl4W3MrMV09eFtzXStEW3NdO2ZvcihvPTA7bzxhO28rKykwIT1UW0Irb10mJih3W3hbVFtCK29dXSsrXT1vKTtzd2l0Y2goZSl7Y2FzZSBDT0RFUzptPUM9dyxfPTAsQT0wLEU9MTk7YnJlYWs7Y2FzZSBMRU5TOm09aW5mbGF0ZV90YWJsZV9sYmFzZSxfPS0yNTcsQz1pbmZsYXRlX3RhYmxlX2xleHQsQT0tMjU3LEU9MjU2O2JyZWFrO2RlZmF1bHQ6bT1pbmZsYXRlX3RhYmxlX2RiYXNlLEM9aW5mbGF0ZV90YWJsZV9kZXh0LF89MCxBPTAsRT0tMX1pZihkPTAsbz0wLHM9aSxTPUksbD1uLGg9MCx1PS0xLGY9KHA9MTw8biktMSxlPT1MRU5TJiZwPj1FTk9VR0hfTEVOU3x8ZT09RElTVFMmJnA+PUVOT1VHSF9ESVNUUylyZXR1cm4gdC5uZXh0PUksMTtmb3IoOzspe2c9e29wOjAsYml0czpzLWgsdmFsOjB9LHdbb108RT9nLnZhbD13W29dOndbb10+RT8oZy5vcD1DW0Erd1tvXV0sZy52YWw9bVtfK3dbb11dKTpnLm9wPTk2LHY9MTw8cy1oLGk9Yj0xPDxsO2Rve1JbUysoZD4+PmgpKyhiLT12KV09Z313aGlsZSgwIT1iKTtmb3Iodj0xPDxzLTE7ZCZ2Oyl2Pj4+PTE7aWYoMCE9dj8oZCY9di0xLGQrPXYpOmQ9MCxvKyssMD09LS1EW3NdKXtpZihzPT1yKWJyZWFrO3M9VFtCK3dbb11dfWlmKHM+biYmKGQmZikhPXUpe2ZvcigwPT1oJiYoaD1uKSxTKz1pLGM9MTw8KGw9cy1oKTtsK2g8ciYmISgoYy09RFtsK2hdKTw9MCk7KWwrKyxjPDw9MTtpZihwKz0xPDxsLGU9PUxFTlMmJnA+PUVOT1VHSF9MRU5TfHxlPT1ESVNUUyYmcD49RU5PVUdIX0RJU1RTKXJldHVybiB0Lm5leHQ9SSwxO1JbSSsodT1kJmYpXT17b3A6bCxiaXRzOm4sdmFsOlMtSX19fXJldHVybiAwIT1kJiYoUltTK2RdPXtvcDo2NCxiaXRzOnMtaCx2YWw6MH0pLHQubmV4dD1JK3AsZT09RElTVFM/dC5kaXN0Yml0cz1uOnQubGVuYml0cz1uLDB9ZnVuY3Rpb24gaW5mbGF0ZV9mYXN0KHQsZSl7dmFyIGEscyxvLGkscixuLGwsaCxjLHAsZCx2LGIsdSxmLGcsUyxtLF8sQyxBLEUsST0tMSxrPS0xO2E9dC5zdGF0ZSxzPXQuaW5wdXRfZGF0YSxpPShvPXQubmV4dF9pbikrdC5hdmFpbF9pbi01LG49KHI9dC5uZXh0X291dCktKGUtdC5hdmFpbF9vdXQpLGw9cisodC5hdmFpbF9vdXQtMjU3KSxoPWEud3NpemUsYz1hLndoYXZlLHA9YS53bmV4dCxkPWEud2luZG93LHY9YS5ob2xkLGI9YS5iaXRzLHU9YS5jb2RlcyxmPWEubGVuY29kZSxnPWEuZGlzdGNvZGUsUz0oMTw8YS5sZW5iaXRzKS0xLG09KDE8PGEuZGlzdGJpdHMpLTE7dDpkb3tiPDE1JiYodis9KDI1NSZzLmNoYXJDb2RlQXQobysrKSk8PGIsYis9OCx2Kz0oMjU1JnMuY2hhckNvZGVBdChvKyspKTw8YixiKz04KSxfPXVbZisodiZTKV07ZTpmb3IoOzspe2lmKHY+Pj49Qz1fLmJpdHMsYi09QywwPT0oQz1fLm9wKSl0Lm91dHB1dF9kYXRhKz1TdHJpbmcuZnJvbUNoYXJDb2RlKF8udmFsKSxyKys7ZWxzZXtpZighKDE2JkMpKXtpZigwPT0oNjQmQykpe189dVtmKyhfLnZhbCsodiYoMTw8QyktMSkpXTtjb250aW51ZSBlfWlmKDMyJkMpe2EubW9kZT1UWVBFO2JyZWFrIHR9dC5tc2c9XCJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RoIGNvZGVcIixhLm1vZGU9QkFEO2JyZWFrIHR9QT1fLnZhbCwoQyY9MTUpJiYoYjxDJiYodis9KDI1NSZzLmNoYXJDb2RlQXQobysrKSk8PGIsYis9OCksQSs9diYoMTw8QyktMSx2Pj4+PUMsYi09QyksYjwxNSYmKHYrPSgyNTUmcy5jaGFyQ29kZUF0KG8rKykpPDxiLGIrPTgsdis9KDI1NSZzLmNoYXJDb2RlQXQobysrKSk8PGIsYis9OCksXz11W2crKHYmbSldO2E6Zm9yKDs7KXtpZih2Pj4+PUM9Xy5iaXRzLGItPUMsISgxNiYoQz1fLm9wKSkpe2lmKDA9PSg2NCZDKSl7Xz11W2crKF8udmFsKyh2JigxPDxDKS0xKSldO2NvbnRpbnVlIGF9dC5tc2c9XCJpbnZhbGlkIGRpc3RhbmNlIGNvZGVcIixhLm1vZGU9QkFEO2JyZWFrIHR9aWYoRT1fLnZhbCxiPChDJj0xNSkmJih2Kz0oMjU1JnMuY2hhckNvZGVBdChvKyspKTw8YiwoYis9OCk8QyYmKHYrPSgyNTUmcy5jaGFyQ29kZUF0KG8rKykpPDxiLGIrPTgpKSxFKz12JigxPDxDKS0xLHY+Pj49QyxiLT1DLEU+KEM9ci1uKSl7aWYoKEM9RS1DKT5jJiZhLnNhbmUpe3QubXNnPVwiaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2tcIixhLm1vZGU9QkFEO2JyZWFrIHR9ST0wLGs9LTEsMD09cD8oSSs9aC1DLEM8QSYmKEEtPUMsdC5vdXRwdXRfZGF0YSs9ZC5zdWJzdHJpbmcoSSxJK0MpLHIrPUMsQz0wLEk9LTEsaz1yLUUpKTooSSs9cC1DLEM8QSYmKEEtPUMsdC5vdXRwdXRfZGF0YSs9ZC5zdWJzdHJpbmcoSSxJK0MpLEk9LTEsaz0ocis9QyktRSkpfWVsc2UgST0tMSxrPXItRTtpZihJPj0wKXQub3V0cHV0X2RhdGErPWQuc3Vic3RyaW5nKEksSStBKSxyKz1BLEkrPUE7ZWxzZXt2YXIgdz1BO2Zvcih3PnItayYmKHc9ci1rKSx0Lm91dHB1dF9kYXRhKz10Lm91dHB1dF9kYXRhLnN1YnN0cmluZyhrLGsrdykscis9dyxrKz13LHIrPUEtPXc7QT4yOyl0Lm91dHB1dF9kYXRhKz10Lm91dHB1dF9kYXRhLmNoYXJBdChrKyspLHQub3V0cHV0X2RhdGErPXQub3V0cHV0X2RhdGEuY2hhckF0KGsrKyksdC5vdXRwdXRfZGF0YSs9dC5vdXRwdXRfZGF0YS5jaGFyQXQoaysrKSxBLT0zO0EmJih0Lm91dHB1dF9kYXRhKz10Lm91dHB1dF9kYXRhLmNoYXJBdChrKyspLEE+MSYmKHQub3V0cHV0X2RhdGErPXQub3V0cHV0X2RhdGEuY2hhckF0KGsrKykpKX1icmVhayBhfX1icmVhayBlfX13aGlsZShvPGkmJnI8bCk7by09QT1iPj4+Myx2Jj0oMTw8KGItPUE8PDMpKS0xLHQubmV4dF9pbj1vLHQubmV4dF9vdXQ9cix0LmF2YWlsX2luPW88aT9pLW8rNTo1LShvLWkpLHQuYXZhaWxfb3V0PXI8bD9sLXIrMjU3OjI1Ny0oci1sKSxhLmhvbGQ9dixhLmJpdHM9Yn1mdW5jdGlvbiBuZXdfYXJyYXkodCl7dmFyIGUsYT1uZXcgQXJyYXkodCk7Zm9yKGU9MDtlPHQ7ZSsrKWFbZV09MDtyZXR1cm4gYX1mdW5jdGlvbiBnZXRhcmcodCxlLGEpe3JldHVybiB0JiZlIGluIHQ/dFtlXTphfWZ1bmN0aW9uIGNoZWNrc3VtX25vbmUoKXtyZXR1cm4gMH1mdW5jdGlvbiBpbmZsYXRlX3N0YXRlKCl7dmFyIHQ7dGhpcy5tb2RlPTAsdGhpcy5sYXN0PTAsdGhpcy53cmFwPTAsdGhpcy5oYXZlZGljdD0wLHRoaXMuZmxhZ3M9MCx0aGlzLmRtYXg9MCx0aGlzLmNoZWNrPTAsdGhpcy50b3RhbD0wLHRoaXMuaGVhZD1udWxsLHRoaXMud2JpdHM9MCx0aGlzLndzaXplPTAsdGhpcy53aGF2ZT0wLHRoaXMud25leHQ9MCx0aGlzLndpbmRvdz1udWxsLHRoaXMuaG9sZD0wLHRoaXMuYml0cz0wLHRoaXMubGVuZ3RoPTAsdGhpcy5vZmZzZXQ9MCx0aGlzLmV4dHJhPTAsdGhpcy5sZW5jb2RlPTAsdGhpcy5kaXN0Y29kZT0wLHRoaXMubGVuYml0cz0wLHRoaXMuZGlzdGJpdHM9MCx0aGlzLm5jb2RlPTAsdGhpcy5ubGVuPTAsdGhpcy5uZGlzdD0wLHRoaXMuaGF2ZT0wLHRoaXMubmV4dD0wLHRoaXMubGVucz1uZXdfYXJyYXkoMzIwKSx0aGlzLndvcms9bmV3X2FycmF5KDI4OCksdGhpcy5jb2Rlcz1uZXcgQXJyYXkoRU5PVUdIKTt2YXIgZT17b3A6MCxiaXRzOjAsdmFsOjB9O2Zvcih0PTA7dDxFTk9VR0g7dCsrKXRoaXMuY29kZXNbdF09ZTt0aGlzLnNhbmU9MCx0aGlzLmJhY2s9MCx0aGlzLndhcz0wfVpMSUIuaW5mbGF0ZV9jb3B5cmlnaHQ9XCIgaW5mbGF0ZSAxLjIuNiBDb3B5cmlnaHQgMTk5NS0yMDEyIE1hcmsgQWRsZXIgXCIsWkxJQi5pbmZsYXRlUmVzZXRLZWVwPWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiB0JiZ0LnN0YXRlPyhlPXQuc3RhdGUsdC50b3RhbF9pbj10LnRvdGFsX291dD1lLnRvdGFsPTAsdC5tc2c9bnVsbCxlLndyYXAmJih0LmFkbGVyPTEmZS53cmFwKSxlLm1vZGU9SEVBRCxlLmxhc3Q9MCxlLmhhdmVkaWN0PTAsZS5kbWF4PTMyNzY4LGUuaGVhZD1udWxsLGUuaG9sZD0wLGUuYml0cz0wLGUubGVuY29kZT0wLGUuZGlzdGNvZGU9MCxlLm5leHQ9MCxlLnNhbmU9MSxlLmJhY2s9LTEsWkxJQi5aX09LKTpaTElCLlpfU1RSRUFNX0VSUk9SfSxaTElCLmluZmxhdGVSZXNldD1mdW5jdGlvbih0LGUpe3ZhciBhLHM7cmV0dXJuIHQmJnQuc3RhdGU/KHM9dC5zdGF0ZSx2b2lkIDA9PT1lJiYoZT1ERUZfV0JJVFMpLGU8MD8oYT0wLGU9LWUpOihhPTErKGU+Pj40KSxlPDQ4JiYoZSY9MTUpKSwxPT1hJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBaTElCLmFkbGVyMzI/dC5jaGVja3N1bV9mdW5jdGlvbj1aTElCLmFkbGVyMzI6Mj09YSYmXCJmdW5jdGlvblwiPT10eXBlb2YgWkxJQi5jcmMzMj90LmNoZWNrc3VtX2Z1bmN0aW9uPVpMSUIuY3JjMzI6dC5jaGVja3N1bV9mdW5jdGlvbj1jaGVja3N1bV9ub25lLGUmJihlPDh8fGU+MTUpP1pMSUIuWl9TVFJFQU1fRVJST1I6KHMud2luZG93JiZzLndiaXRzIT1lJiYocy53aW5kb3c9bnVsbCkscy53cmFwPWEscy53Yml0cz1lLHMud3NpemU9MCxzLndoYXZlPTAscy53bmV4dD0wLFpMSUIuaW5mbGF0ZVJlc2V0S2VlcCh0KSkpOlpMSUIuWl9TVFJFQU1fRVJST1J9LFpMSUIuaW5mbGF0ZUluaXQ9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IFpMSUIuel9zdHJlYW07cmV0dXJuIGUuc3RhdGU9bmV3IGluZmxhdGVfc3RhdGUsWkxJQi5pbmZsYXRlUmVzZXQoZSx0KSxlfSxaTElCLmluZmxhdGVQcmltZT1mdW5jdGlvbih0LGUsYSl7dmFyIHM7cmV0dXJuIHQmJnQuc3RhdGU/KHM9dC5zdGF0ZSxlPDA/KHMuaG9sZD0wLHMuYml0cz0wLFpMSUIuWl9PSyk6ZT4xNnx8cy5iaXRzK2U+MzI/WkxJQi5aX1NUUkVBTV9FUlJPUjooYSY9KDE8PGUpLTEscy5ob2xkKz1hPDxzLmJpdHMscy5iaXRzKz1lLFpMSUIuWl9PSykpOlpMSUIuWl9TVFJFQU1fRVJST1J9O3ZhciBsZW5maXhfYXJ5PW51bGwsbGVuZml4X2RlZj1cIihbICAgIHtvcDo5NixiaXRzOjcsdmFsOjB9LHtvcDowLGJpdHM6OCx2YWw6ODB9LHtvcDowLGJpdHM6OCx2YWw6MTZ9LHtvcDoyMCxiaXRzOjgsdmFsOjExNX0se29wOjE4LGJpdHM6Nyx2YWw6MzF9LHtvcDowLGJpdHM6OCx2YWw6MTEyfSx7b3A6MCxiaXRzOjgsdmFsOjQ4fSwgICAge29wOjAsYml0czo5LHZhbDoxOTJ9LHtvcDoxNixiaXRzOjcsdmFsOjEwfSx7b3A6MCxiaXRzOjgsdmFsOjk2fSx7b3A6MCxiaXRzOjgsdmFsOjMyfSx7b3A6MCxiaXRzOjksdmFsOjE2MH0se29wOjAsYml0czo4LHZhbDowfSx7b3A6MCxiaXRzOjgsdmFsOjEyOH0sICAgIHtvcDowLGJpdHM6OCx2YWw6NjR9LHtvcDowLGJpdHM6OSx2YWw6MjI0fSx7b3A6MTYsYml0czo3LHZhbDo2fSx7b3A6MCxiaXRzOjgsdmFsOjg4fSx7b3A6MCxiaXRzOjgsdmFsOjI0fSx7b3A6MCxiaXRzOjksdmFsOjE0NH0se29wOjE5LGJpdHM6Nyx2YWw6NTl9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjEyMH0se29wOjAsYml0czo4LHZhbDo1Nn0se29wOjAsYml0czo5LHZhbDoyMDh9LHtvcDoxNyxiaXRzOjcsdmFsOjE3fSx7b3A6MCxiaXRzOjgsdmFsOjEwNH0se29wOjAsYml0czo4LHZhbDo0MH0se29wOjAsYml0czo5LHZhbDoxNzZ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjh9LHtvcDowLGJpdHM6OCx2YWw6MTM2fSx7b3A6MCxiaXRzOjgsdmFsOjcyfSx7b3A6MCxiaXRzOjksdmFsOjI0MH0se29wOjE2LGJpdHM6Nyx2YWw6NH0se29wOjAsYml0czo4LHZhbDo4NH0se29wOjAsYml0czo4LHZhbDoyMH0sICAgIHtvcDoyMSxiaXRzOjgsdmFsOjIyN30se29wOjE5LGJpdHM6Nyx2YWw6NDN9LHtvcDowLGJpdHM6OCx2YWw6MTE2fSx7b3A6MCxiaXRzOjgsdmFsOjUyfSx7b3A6MCxiaXRzOjksdmFsOjIwMH0se29wOjE3LGJpdHM6Nyx2YWw6MTN9LHtvcDowLGJpdHM6OCx2YWw6MTAwfSwgICAge29wOjAsYml0czo4LHZhbDozNn0se29wOjAsYml0czo5LHZhbDoxNjh9LHtvcDowLGJpdHM6OCx2YWw6NH0se29wOjAsYml0czo4LHZhbDoxMzJ9LHtvcDowLGJpdHM6OCx2YWw6Njh9LHtvcDowLGJpdHM6OSx2YWw6MjMyfSx7b3A6MTYsYml0czo3LHZhbDo4fSwgICAge29wOjAsYml0czo4LHZhbDo5Mn0se29wOjAsYml0czo4LHZhbDoyOH0se29wOjAsYml0czo5LHZhbDoxNTJ9LHtvcDoyMCxiaXRzOjcsdmFsOjgzfSx7b3A6MCxiaXRzOjgsdmFsOjEyNH0se29wOjAsYml0czo4LHZhbDo2MH0se29wOjAsYml0czo5LHZhbDoyMTZ9LCAgICB7b3A6MTgsYml0czo3LHZhbDoyM30se29wOjAsYml0czo4LHZhbDoxMDh9LHtvcDowLGJpdHM6OCx2YWw6NDR9LHtvcDowLGJpdHM6OSx2YWw6MTg0fSx7b3A6MCxiaXRzOjgsdmFsOjEyfSx7b3A6MCxiaXRzOjgsdmFsOjE0MH0se29wOjAsYml0czo4LHZhbDo3Nn0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjQ4fSx7b3A6MTYsYml0czo3LHZhbDozfSx7b3A6MCxiaXRzOjgsdmFsOjgyfSx7b3A6MCxiaXRzOjgsdmFsOjE4fSx7b3A6MjEsYml0czo4LHZhbDoxNjN9LHtvcDoxOSxiaXRzOjcsdmFsOjM1fSx7b3A6MCxiaXRzOjgsdmFsOjExNH0sICAgIHtvcDowLGJpdHM6OCx2YWw6NTB9LHtvcDowLGJpdHM6OSx2YWw6MTk2fSx7b3A6MTcsYml0czo3LHZhbDoxMX0se29wOjAsYml0czo4LHZhbDo5OH0se29wOjAsYml0czo4LHZhbDozNH0se29wOjAsYml0czo5LHZhbDoxNjR9LHtvcDowLGJpdHM6OCx2YWw6Mn0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTMwfSx7b3A6MCxiaXRzOjgsdmFsOjY2fSx7b3A6MCxiaXRzOjksdmFsOjIyOH0se29wOjE2LGJpdHM6Nyx2YWw6N30se29wOjAsYml0czo4LHZhbDo5MH0se29wOjAsYml0czo4LHZhbDoyNn0se29wOjAsYml0czo5LHZhbDoxNDh9LCAgICB7b3A6MjAsYml0czo3LHZhbDo2N30se29wOjAsYml0czo4LHZhbDoxMjJ9LHtvcDowLGJpdHM6OCx2YWw6NTh9LHtvcDowLGJpdHM6OSx2YWw6MjEyfSx7b3A6MTgsYml0czo3LHZhbDoxOX0se29wOjAsYml0czo4LHZhbDoxMDZ9LHtvcDowLGJpdHM6OCx2YWw6NDJ9LCAgICB7b3A6MCxiaXRzOjksdmFsOjE4MH0se29wOjAsYml0czo4LHZhbDoxMH0se29wOjAsYml0czo4LHZhbDoxMzh9LHtvcDowLGJpdHM6OCx2YWw6NzR9LHtvcDowLGJpdHM6OSx2YWw6MjQ0fSx7b3A6MTYsYml0czo3LHZhbDo1fSx7b3A6MCxiaXRzOjgsdmFsOjg2fSwgICAge29wOjAsYml0czo4LHZhbDoyMn0se29wOjY0LGJpdHM6OCx2YWw6MH0se29wOjE5LGJpdHM6Nyx2YWw6NTF9LHtvcDowLGJpdHM6OCx2YWw6MTE4fSx7b3A6MCxiaXRzOjgsdmFsOjU0fSx7b3A6MCxiaXRzOjksdmFsOjIwNH0se29wOjE3LGJpdHM6Nyx2YWw6MTV9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjEwMn0se29wOjAsYml0czo4LHZhbDozOH0se29wOjAsYml0czo5LHZhbDoxNzJ9LHtvcDowLGJpdHM6OCx2YWw6Nn0se29wOjAsYml0czo4LHZhbDoxMzR9LHtvcDowLGJpdHM6OCx2YWw6NzB9LHtvcDowLGJpdHM6OSx2YWw6MjM2fSwgICAge29wOjE2LGJpdHM6Nyx2YWw6OX0se29wOjAsYml0czo4LHZhbDo5NH0se29wOjAsYml0czo4LHZhbDozMH0se29wOjAsYml0czo5LHZhbDoxNTZ9LHtvcDoyMCxiaXRzOjcsdmFsOjk5fSx7b3A6MCxiaXRzOjgsdmFsOjEyNn0se29wOjAsYml0czo4LHZhbDo2Mn0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjIwfSx7b3A6MTgsYml0czo3LHZhbDoyN30se29wOjAsYml0czo4LHZhbDoxMTB9LHtvcDowLGJpdHM6OCx2YWw6NDZ9LHtvcDowLGJpdHM6OSx2YWw6MTg4fSx7b3A6MCxiaXRzOjgsdmFsOjE0fSx7b3A6MCxiaXRzOjgsdmFsOjE0Mn0sICAgIHtvcDowLGJpdHM6OCx2YWw6Nzh9LHtvcDowLGJpdHM6OSx2YWw6MjUyfSx7b3A6OTYsYml0czo3LHZhbDowfSx7b3A6MCxiaXRzOjgsdmFsOjgxfSx7b3A6MCxiaXRzOjgsdmFsOjE3fSx7b3A6MjEsYml0czo4LHZhbDoxMzF9LHtvcDoxOCxiaXRzOjcsdmFsOjMxfSwgICAge29wOjAsYml0czo4LHZhbDoxMTN9LHtvcDowLGJpdHM6OCx2YWw6NDl9LHtvcDowLGJpdHM6OSx2YWw6MTk0fSx7b3A6MTYsYml0czo3LHZhbDoxMH0se29wOjAsYml0czo4LHZhbDo5N30se29wOjAsYml0czo4LHZhbDozM30se29wOjAsYml0czo5LHZhbDoxNjJ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjF9LHtvcDowLGJpdHM6OCx2YWw6MTI5fSx7b3A6MCxiaXRzOjgsdmFsOjY1fSx7b3A6MCxiaXRzOjksdmFsOjIyNn0se29wOjE2LGJpdHM6Nyx2YWw6Nn0se29wOjAsYml0czo4LHZhbDo4OX0se29wOjAsYml0czo4LHZhbDoyNX0sICAgIHtvcDowLGJpdHM6OSx2YWw6MTQ2fSx7b3A6MTksYml0czo3LHZhbDo1OX0se29wOjAsYml0czo4LHZhbDoxMjF9LHtvcDowLGJpdHM6OCx2YWw6NTd9LHtvcDowLGJpdHM6OSx2YWw6MjEwfSx7b3A6MTcsYml0czo3LHZhbDoxN30se29wOjAsYml0czo4LHZhbDoxMDV9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjQxfSx7b3A6MCxiaXRzOjksdmFsOjE3OH0se29wOjAsYml0czo4LHZhbDo5fSx7b3A6MCxiaXRzOjgsdmFsOjEzN30se29wOjAsYml0czo4LHZhbDo3M30se29wOjAsYml0czo5LHZhbDoyNDJ9LHtvcDoxNixiaXRzOjcsdmFsOjR9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjg1fSx7b3A6MCxiaXRzOjgsdmFsOjIxfSx7b3A6MTYsYml0czo4LHZhbDoyNTh9LHtvcDoxOSxiaXRzOjcsdmFsOjQzfSx7b3A6MCxiaXRzOjgsdmFsOjExN30se29wOjAsYml0czo4LHZhbDo1M30se29wOjAsYml0czo5LHZhbDoyMDJ9LCAgICB7b3A6MTcsYml0czo3LHZhbDoxM30se29wOjAsYml0czo4LHZhbDoxMDF9LHtvcDowLGJpdHM6OCx2YWw6Mzd9LHtvcDowLGJpdHM6OSx2YWw6MTcwfSx7b3A6MCxiaXRzOjgsdmFsOjV9LHtvcDowLGJpdHM6OCx2YWw6MTMzfSx7b3A6MCxiaXRzOjgsdmFsOjY5fSwgICAge29wOjAsYml0czo5LHZhbDoyMzR9LHtvcDoxNixiaXRzOjcsdmFsOjh9LHtvcDowLGJpdHM6OCx2YWw6OTN9LHtvcDowLGJpdHM6OCx2YWw6Mjl9LHtvcDowLGJpdHM6OSx2YWw6MTU0fSx7b3A6MjAsYml0czo3LHZhbDo4M30se29wOjAsYml0czo4LHZhbDoxMjV9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjYxfSx7b3A6MCxiaXRzOjksdmFsOjIxOH0se29wOjE4LGJpdHM6Nyx2YWw6MjN9LHtvcDowLGJpdHM6OCx2YWw6MTA5fSx7b3A6MCxiaXRzOjgsdmFsOjQ1fSx7b3A6MCxiaXRzOjksdmFsOjE4Nn0se29wOjAsYml0czo4LHZhbDoxM30sICAgIHtvcDowLGJpdHM6OCx2YWw6MTQxfSx7b3A6MCxiaXRzOjgsdmFsOjc3fSx7b3A6MCxiaXRzOjksdmFsOjI1MH0se29wOjE2LGJpdHM6Nyx2YWw6M30se29wOjAsYml0czo4LHZhbDo4M30se29wOjAsYml0czo4LHZhbDoxOX0se29wOjIxLGJpdHM6OCx2YWw6MTk1fSwgICAge29wOjE5LGJpdHM6Nyx2YWw6MzV9LHtvcDowLGJpdHM6OCx2YWw6MTE1fSx7b3A6MCxiaXRzOjgsdmFsOjUxfSx7b3A6MCxiaXRzOjksdmFsOjE5OH0se29wOjE3LGJpdHM6Nyx2YWw6MTF9LHtvcDowLGJpdHM6OCx2YWw6OTl9LHtvcDowLGJpdHM6OCx2YWw6MzV9LCAgICB7b3A6MCxiaXRzOjksdmFsOjE2Nn0se29wOjAsYml0czo4LHZhbDozfSx7b3A6MCxiaXRzOjgsdmFsOjEzMX0se29wOjAsYml0czo4LHZhbDo2N30se29wOjAsYml0czo5LHZhbDoyMzB9LHtvcDoxNixiaXRzOjcsdmFsOjd9LHtvcDowLGJpdHM6OCx2YWw6OTF9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjI3fSx7b3A6MCxiaXRzOjksdmFsOjE1MH0se29wOjIwLGJpdHM6Nyx2YWw6Njd9LHtvcDowLGJpdHM6OCx2YWw6MTIzfSx7b3A6MCxiaXRzOjgsdmFsOjU5fSx7b3A6MCxiaXRzOjksdmFsOjIxNH0se29wOjE4LGJpdHM6Nyx2YWw6MTl9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjEwN30se29wOjAsYml0czo4LHZhbDo0M30se29wOjAsYml0czo5LHZhbDoxODJ9LHtvcDowLGJpdHM6OCx2YWw6MTF9LHtvcDowLGJpdHM6OCx2YWw6MTM5fSx7b3A6MCxiaXRzOjgsdmFsOjc1fSx7b3A6MCxiaXRzOjksdmFsOjI0Nn0sICAgIHtvcDoxNixiaXRzOjcsdmFsOjV9LHtvcDowLGJpdHM6OCx2YWw6ODd9LHtvcDowLGJpdHM6OCx2YWw6MjN9LHtvcDo2NCxiaXRzOjgsdmFsOjB9LHtvcDoxOSxiaXRzOjcsdmFsOjUxfSx7b3A6MCxiaXRzOjgsdmFsOjExOX0se29wOjAsYml0czo4LHZhbDo1NX0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjA2fSx7b3A6MTcsYml0czo3LHZhbDoxNX0se29wOjAsYml0czo4LHZhbDoxMDN9LHtvcDowLGJpdHM6OCx2YWw6Mzl9LHtvcDowLGJpdHM6OSx2YWw6MTc0fSx7b3A6MCxiaXRzOjgsdmFsOjd9LHtvcDowLGJpdHM6OCx2YWw6MTM1fSwgICAge29wOjAsYml0czo4LHZhbDo3MX0se29wOjAsYml0czo5LHZhbDoyMzh9LHtvcDoxNixiaXRzOjcsdmFsOjl9LHtvcDowLGJpdHM6OCx2YWw6OTV9LHtvcDowLGJpdHM6OCx2YWw6MzF9LHtvcDowLGJpdHM6OSx2YWw6MTU4fSx7b3A6MjAsYml0czo3LHZhbDo5OX0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTI3fSx7b3A6MCxiaXRzOjgsdmFsOjYzfSx7b3A6MCxiaXRzOjksdmFsOjIyMn0se29wOjE4LGJpdHM6Nyx2YWw6Mjd9LHtvcDowLGJpdHM6OCx2YWw6MTExfSx7b3A6MCxiaXRzOjgsdmFsOjQ3fSx7b3A6MCxiaXRzOjksdmFsOjE5MH0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTV9LHtvcDowLGJpdHM6OCx2YWw6MTQzfSx7b3A6MCxiaXRzOjgsdmFsOjc5fSx7b3A6MCxiaXRzOjksdmFsOjI1NH0se29wOjk2LGJpdHM6Nyx2YWw6MH0se29wOjAsYml0czo4LHZhbDo4MH0se29wOjAsYml0czo4LHZhbDoxNn0sICAgIHtvcDoyMCxiaXRzOjgsdmFsOjExNX0se29wOjE4LGJpdHM6Nyx2YWw6MzF9LHtvcDowLGJpdHM6OCx2YWw6MTEyfSx7b3A6MCxiaXRzOjgsdmFsOjQ4fSx7b3A6MCxiaXRzOjksdmFsOjE5M30se29wOjE2LGJpdHM6Nyx2YWw6MTB9LHtvcDowLGJpdHM6OCx2YWw6OTZ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjMyfSx7b3A6MCxiaXRzOjksdmFsOjE2MX0se29wOjAsYml0czo4LHZhbDowfSx7b3A6MCxiaXRzOjgsdmFsOjEyOH0se29wOjAsYml0czo4LHZhbDo2NH0se29wOjAsYml0czo5LHZhbDoyMjV9LHtvcDoxNixiaXRzOjcsdmFsOjZ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjg4fSx7b3A6MCxiaXRzOjgsdmFsOjI0fSx7b3A6MCxiaXRzOjksdmFsOjE0NX0se29wOjE5LGJpdHM6Nyx2YWw6NTl9LHtvcDowLGJpdHM6OCx2YWw6MTIwfSx7b3A6MCxiaXRzOjgsdmFsOjU2fSx7b3A6MCxiaXRzOjksdmFsOjIwOX0sICAgIHtvcDoxNyxiaXRzOjcsdmFsOjE3fSx7b3A6MCxiaXRzOjgsdmFsOjEwNH0se29wOjAsYml0czo4LHZhbDo0MH0se29wOjAsYml0czo5LHZhbDoxNzd9LHtvcDowLGJpdHM6OCx2YWw6OH0se29wOjAsYml0czo4LHZhbDoxMzZ9LHtvcDowLGJpdHM6OCx2YWw6NzJ9LCAgICB7b3A6MCxiaXRzOjksdmFsOjI0MX0se29wOjE2LGJpdHM6Nyx2YWw6NH0se29wOjAsYml0czo4LHZhbDo4NH0se29wOjAsYml0czo4LHZhbDoyMH0se29wOjIxLGJpdHM6OCx2YWw6MjI3fSx7b3A6MTksYml0czo3LHZhbDo0M30se29wOjAsYml0czo4LHZhbDoxMTZ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjUyfSx7b3A6MCxiaXRzOjksdmFsOjIwMX0se29wOjE3LGJpdHM6Nyx2YWw6MTN9LHtvcDowLGJpdHM6OCx2YWw6MTAwfSx7b3A6MCxiaXRzOjgsdmFsOjM2fSx7b3A6MCxiaXRzOjksdmFsOjE2OX0se29wOjAsYml0czo4LHZhbDo0fSwgICAge29wOjAsYml0czo4LHZhbDoxMzJ9LHtvcDowLGJpdHM6OCx2YWw6Njh9LHtvcDowLGJpdHM6OSx2YWw6MjMzfSx7b3A6MTYsYml0czo3LHZhbDo4fSx7b3A6MCxiaXRzOjgsdmFsOjkyfSx7b3A6MCxiaXRzOjgsdmFsOjI4fSx7b3A6MCxiaXRzOjksdmFsOjE1M30sICAgIHtvcDoyMCxiaXRzOjcsdmFsOjgzfSx7b3A6MCxiaXRzOjgsdmFsOjEyNH0se29wOjAsYml0czo4LHZhbDo2MH0se29wOjAsYml0czo5LHZhbDoyMTd9LHtvcDoxOCxiaXRzOjcsdmFsOjIzfSx7b3A6MCxiaXRzOjgsdmFsOjEwOH0se29wOjAsYml0czo4LHZhbDo0NH0sICAgIHtvcDowLGJpdHM6OSx2YWw6MTg1fSx7b3A6MCxiaXRzOjgsdmFsOjEyfSx7b3A6MCxiaXRzOjgsdmFsOjE0MH0se29wOjAsYml0czo4LHZhbDo3Nn0se29wOjAsYml0czo5LHZhbDoyNDl9LHtvcDoxNixiaXRzOjcsdmFsOjN9LHtvcDowLGJpdHM6OCx2YWw6ODJ9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjE4fSx7b3A6MjEsYml0czo4LHZhbDoxNjN9LHtvcDoxOSxiaXRzOjcsdmFsOjM1fSx7b3A6MCxiaXRzOjgsdmFsOjExNH0se29wOjAsYml0czo4LHZhbDo1MH0se29wOjAsYml0czo5LHZhbDoxOTd9LHtvcDoxNyxiaXRzOjcsdmFsOjExfSwgICAge29wOjAsYml0czo4LHZhbDo5OH0se29wOjAsYml0czo4LHZhbDozNH0se29wOjAsYml0czo5LHZhbDoxNjV9LHtvcDowLGJpdHM6OCx2YWw6Mn0se29wOjAsYml0czo4LHZhbDoxMzB9LHtvcDowLGJpdHM6OCx2YWw6NjZ9LHtvcDowLGJpdHM6OSx2YWw6MjI5fSwgICAge29wOjE2LGJpdHM6Nyx2YWw6N30se29wOjAsYml0czo4LHZhbDo5MH0se29wOjAsYml0czo4LHZhbDoyNn0se29wOjAsYml0czo5LHZhbDoxNDl9LHtvcDoyMCxiaXRzOjcsdmFsOjY3fSx7b3A6MCxiaXRzOjgsdmFsOjEyMn0se29wOjAsYml0czo4LHZhbDo1OH0sICAgIHtvcDowLGJpdHM6OSx2YWw6MjEzfSx7b3A6MTgsYml0czo3LHZhbDoxOX0se29wOjAsYml0czo4LHZhbDoxMDZ9LHtvcDowLGJpdHM6OCx2YWw6NDJ9LHtvcDowLGJpdHM6OSx2YWw6MTgxfSx7b3A6MCxiaXRzOjgsdmFsOjEwfSx7b3A6MCxiaXRzOjgsdmFsOjEzOH0sICAgIHtvcDowLGJpdHM6OCx2YWw6NzR9LHtvcDowLGJpdHM6OSx2YWw6MjQ1fSx7b3A6MTYsYml0czo3LHZhbDo1fSx7b3A6MCxiaXRzOjgsdmFsOjg2fSx7b3A6MCxiaXRzOjgsdmFsOjIyfSx7b3A6NjQsYml0czo4LHZhbDowfSx7b3A6MTksYml0czo3LHZhbDo1MX0sICAgIHtvcDowLGJpdHM6OCx2YWw6MTE4fSx7b3A6MCxiaXRzOjgsdmFsOjU0fSx7b3A6MCxiaXRzOjksdmFsOjIwNX0se29wOjE3LGJpdHM6Nyx2YWw6MTV9LHtvcDowLGJpdHM6OCx2YWw6MTAyfSx7b3A6MCxiaXRzOjgsdmFsOjM4fSx7b3A6MCxiaXRzOjksdmFsOjE3M30sICAgIHtvcDowLGJpdHM6OCx2YWw6Nn0se29wOjAsYml0czo4LHZhbDoxMzR9LHtvcDowLGJpdHM6OCx2YWw6NzB9LHtvcDowLGJpdHM6OSx2YWw6MjM3fSx7b3A6MTYsYml0czo3LHZhbDo5fSx7b3A6MCxiaXRzOjgsdmFsOjk0fSx7b3A6MCxiaXRzOjgsdmFsOjMwfSwgICAge29wOjAsYml0czo5LHZhbDoxNTd9LHtvcDoyMCxiaXRzOjcsdmFsOjk5fSx7b3A6MCxiaXRzOjgsdmFsOjEyNn0se29wOjAsYml0czo4LHZhbDo2Mn0se29wOjAsYml0czo5LHZhbDoyMjF9LHtvcDoxOCxiaXRzOjcsdmFsOjI3fSx7b3A6MCxiaXRzOjgsdmFsOjExMH0sICAgIHtvcDowLGJpdHM6OCx2YWw6NDZ9LHtvcDowLGJpdHM6OSx2YWw6MTg5fSx7b3A6MCxiaXRzOjgsdmFsOjE0fSx7b3A6MCxiaXRzOjgsdmFsOjE0Mn0se29wOjAsYml0czo4LHZhbDo3OH0se29wOjAsYml0czo5LHZhbDoyNTN9LHtvcDo5NixiaXRzOjcsdmFsOjB9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjgxfSx7b3A6MCxiaXRzOjgsdmFsOjE3fSx7b3A6MjEsYml0czo4LHZhbDoxMzF9LHtvcDoxOCxiaXRzOjcsdmFsOjMxfSx7b3A6MCxiaXRzOjgsdmFsOjExM30se29wOjAsYml0czo4LHZhbDo0OX0se29wOjAsYml0czo5LHZhbDoxOTV9LCAgICB7b3A6MTYsYml0czo3LHZhbDoxMH0se29wOjAsYml0czo4LHZhbDo5N30se29wOjAsYml0czo4LHZhbDozM30se29wOjAsYml0czo5LHZhbDoxNjN9LHtvcDowLGJpdHM6OCx2YWw6MX0se29wOjAsYml0czo4LHZhbDoxMjl9LHtvcDowLGJpdHM6OCx2YWw6NjV9LCAgICB7b3A6MCxiaXRzOjksdmFsOjIyN30se29wOjE2LGJpdHM6Nyx2YWw6Nn0se29wOjAsYml0czo4LHZhbDo4OX0se29wOjAsYml0czo4LHZhbDoyNX0se29wOjAsYml0czo5LHZhbDoxNDd9LHtvcDoxOSxiaXRzOjcsdmFsOjU5fSx7b3A6MCxiaXRzOjgsdmFsOjEyMX0sICAgIHtvcDowLGJpdHM6OCx2YWw6NTd9LHtvcDowLGJpdHM6OSx2YWw6MjExfSx7b3A6MTcsYml0czo3LHZhbDoxN30se29wOjAsYml0czo4LHZhbDoxMDV9LHtvcDowLGJpdHM6OCx2YWw6NDF9LHtvcDowLGJpdHM6OSx2YWw6MTc5fSx7b3A6MCxiaXRzOjgsdmFsOjl9LCAgICB7b3A6MCxiaXRzOjgsdmFsOjEzN30se29wOjAsYml0czo4LHZhbDo3M30se29wOjAsYml0czo5LHZhbDoyNDN9LHtvcDoxNixiaXRzOjcsdmFsOjR9LHtvcDowLGJpdHM6OCx2YWw6ODV9LHtvcDowLGJpdHM6OCx2YWw6MjF9LHtvcDoxNixiaXRzOjgsdmFsOjI1OH0sICAgIHtvcDoxOSxiaXRzOjcsdmFsOjQzfSx7b3A6MCxiaXRzOjgsdmFsOjExN30se29wOjAsYml0czo4LHZhbDo1M30se29wOjAsYml0czo5LHZhbDoyMDN9LHtvcDoxNyxiaXRzOjcsdmFsOjEzfSx7b3A6MCxiaXRzOjgsdmFsOjEwMX0se29wOjAsYml0czo4LHZhbDozN30sICAgIHtvcDowLGJpdHM6OSx2YWw6MTcxfSx7b3A6MCxiaXRzOjgsdmFsOjV9LHtvcDowLGJpdHM6OCx2YWw6MTMzfSx7b3A6MCxiaXRzOjgsdmFsOjY5fSx7b3A6MCxiaXRzOjksdmFsOjIzNX0se29wOjE2LGJpdHM6Nyx2YWw6OH0se29wOjAsYml0czo4LHZhbDo5M30sICAgIHtvcDowLGJpdHM6OCx2YWw6Mjl9LHtvcDowLGJpdHM6OSx2YWw6MTU1fSx7b3A6MjAsYml0czo3LHZhbDo4M30se29wOjAsYml0czo4LHZhbDoxMjV9LHtvcDowLGJpdHM6OCx2YWw6NjF9LHtvcDowLGJpdHM6OSx2YWw6MjE5fSx7b3A6MTgsYml0czo3LHZhbDoyM30sICAgIHtvcDowLGJpdHM6OCx2YWw6MTA5fSx7b3A6MCxiaXRzOjgsdmFsOjQ1fSx7b3A6MCxiaXRzOjksdmFsOjE4N30se29wOjAsYml0czo4LHZhbDoxM30se29wOjAsYml0czo4LHZhbDoxNDF9LHtvcDowLGJpdHM6OCx2YWw6Nzd9LHtvcDowLGJpdHM6OSx2YWw6MjUxfSwgICAge29wOjE2LGJpdHM6Nyx2YWw6M30se29wOjAsYml0czo4LHZhbDo4M30se29wOjAsYml0czo4LHZhbDoxOX0se29wOjIxLGJpdHM6OCx2YWw6MTk1fSx7b3A6MTksYml0czo3LHZhbDozNX0se29wOjAsYml0czo4LHZhbDoxMTV9LHtvcDowLGJpdHM6OCx2YWw6NTF9LCAgICB7b3A6MCxiaXRzOjksdmFsOjE5OX0se29wOjE3LGJpdHM6Nyx2YWw6MTF9LHtvcDowLGJpdHM6OCx2YWw6OTl9LHtvcDowLGJpdHM6OCx2YWw6MzV9LHtvcDowLGJpdHM6OSx2YWw6MTY3fSx7b3A6MCxiaXRzOjgsdmFsOjN9LHtvcDowLGJpdHM6OCx2YWw6MTMxfSwgICAge29wOjAsYml0czo4LHZhbDo2N30se29wOjAsYml0czo5LHZhbDoyMzF9LHtvcDoxNixiaXRzOjcsdmFsOjd9LHtvcDowLGJpdHM6OCx2YWw6OTF9LHtvcDowLGJpdHM6OCx2YWw6Mjd9LHtvcDowLGJpdHM6OSx2YWw6MTUxfSx7b3A6MjAsYml0czo3LHZhbDo2N30sICAgIHtvcDowLGJpdHM6OCx2YWw6MTIzfSx7b3A6MCxiaXRzOjgsdmFsOjU5fSx7b3A6MCxiaXRzOjksdmFsOjIxNX0se29wOjE4LGJpdHM6Nyx2YWw6MTl9LHtvcDowLGJpdHM6OCx2YWw6MTA3fSx7b3A6MCxiaXRzOjgsdmFsOjQzfSx7b3A6MCxiaXRzOjksdmFsOjE4M30sICAgIHtvcDowLGJpdHM6OCx2YWw6MTF9LHtvcDowLGJpdHM6OCx2YWw6MTM5fSx7b3A6MCxiaXRzOjgsdmFsOjc1fSx7b3A6MCxiaXRzOjksdmFsOjI0N30se29wOjE2LGJpdHM6Nyx2YWw6NX0se29wOjAsYml0czo4LHZhbDo4N30se29wOjAsYml0czo4LHZhbDoyM30sICAgIHtvcDo2NCxiaXRzOjgsdmFsOjB9LHtvcDoxOSxiaXRzOjcsdmFsOjUxfSx7b3A6MCxiaXRzOjgsdmFsOjExOX0se29wOjAsYml0czo4LHZhbDo1NX0se29wOjAsYml0czo5LHZhbDoyMDd9LHtvcDoxNyxiaXRzOjcsdmFsOjE1fSx7b3A6MCxiaXRzOjgsdmFsOjEwM30sICAgIHtvcDowLGJpdHM6OCx2YWw6Mzl9LHtvcDowLGJpdHM6OSx2YWw6MTc1fSx7b3A6MCxiaXRzOjgsdmFsOjd9LHtvcDowLGJpdHM6OCx2YWw6MTM1fSx7b3A6MCxiaXRzOjgsdmFsOjcxfSx7b3A6MCxiaXRzOjksdmFsOjIzOX0se29wOjE2LGJpdHM6Nyx2YWw6OX0sICAgIHtvcDowLGJpdHM6OCx2YWw6OTV9LHtvcDowLGJpdHM6OCx2YWw6MzF9LHtvcDowLGJpdHM6OSx2YWw6MTU5fSx7b3A6MjAsYml0czo3LHZhbDo5OX0se29wOjAsYml0czo4LHZhbDoxMjd9LHtvcDowLGJpdHM6OCx2YWw6NjN9LHtvcDowLGJpdHM6OSx2YWw6MjIzfSwgICAge29wOjE4LGJpdHM6Nyx2YWw6Mjd9LHtvcDowLGJpdHM6OCx2YWw6MTExfSx7b3A6MCxiaXRzOjgsdmFsOjQ3fSx7b3A6MCxiaXRzOjksdmFsOjE5MX0se29wOjAsYml0czo4LHZhbDoxNX0se29wOjAsYml0czo4LHZhbDoxNDN9LHtvcDowLGJpdHM6OCx2YWw6Nzl9LCAgICB7b3A6MCxiaXRzOjksdmFsOjI1NX1dKVwiLGRpc3RmaXhfYXJ5PW51bGwsZGlzdGZpeF9kZWY9XCIoWyAgICB7b3A6MTYsYml0czo1LHZhbDoxfSx7b3A6MjMsYml0czo1LHZhbDoyNTd9LHtvcDoxOSxiaXRzOjUsdmFsOjE3fSx7b3A6MjcsYml0czo1LHZhbDo0MDk3fSx7b3A6MTcsYml0czo1LHZhbDo1fSx7b3A6MjUsYml0czo1LHZhbDoxMDI1fSwgICAge29wOjIxLGJpdHM6NSx2YWw6NjV9LHtvcDoyOSxiaXRzOjUsdmFsOjE2Mzg1fSx7b3A6MTYsYml0czo1LHZhbDozfSx7b3A6MjQsYml0czo1LHZhbDo1MTN9LHtvcDoyMCxiaXRzOjUsdmFsOjMzfSx7b3A6MjgsYml0czo1LHZhbDo4MTkzfSwgICAge29wOjE4LGJpdHM6NSx2YWw6OX0se29wOjI2LGJpdHM6NSx2YWw6MjA0OX0se29wOjIyLGJpdHM6NSx2YWw6MTI5fSx7b3A6NjQsYml0czo1LHZhbDowfSx7b3A6MTYsYml0czo1LHZhbDoyfSx7b3A6MjMsYml0czo1LHZhbDozODV9LCAgICB7b3A6MTksYml0czo1LHZhbDoyNX0se29wOjI3LGJpdHM6NSx2YWw6NjE0NX0se29wOjE3LGJpdHM6NSx2YWw6N30se29wOjI1LGJpdHM6NSx2YWw6MTUzN30se29wOjIxLGJpdHM6NSx2YWw6OTd9LHtvcDoyOSxiaXRzOjUsdmFsOjI0NTc3fSwgICAge29wOjE2LGJpdHM6NSx2YWw6NH0se29wOjI0LGJpdHM6NSx2YWw6NzY5fSx7b3A6MjAsYml0czo1LHZhbDo0OX0se29wOjI4LGJpdHM6NSx2YWw6MTIyODl9LHtvcDoxOCxiaXRzOjUsdmFsOjEzfSx7b3A6MjYsYml0czo1LHZhbDozMDczfSwgICAge29wOjIyLGJpdHM6NSx2YWw6MTkzfSx7b3A6NjQsYml0czo1LHZhbDowfV0pXCI7ZnVuY3Rpb24gZml4ZWR0YWJsZXMoc3RhdGUpe3ZhciBpO2ZvcihsZW5maXhfYXJ5fHwobGVuZml4X2FyeT1ldmFsKGxlbmZpeF9kZWYpKSxkaXN0Zml4X2FyeXx8KGRpc3RmaXhfYXJ5PWV2YWwoZGlzdGZpeF9kZWYpKSxzdGF0ZS5sZW5jb2RlPTAsc3RhdGUuZGlzdGNvZGU9NTEyLGk9MDtpPDUxMjtpKyspc3RhdGUuY29kZXNbaV09bGVuZml4X2FyeVtpXTtmb3IoaT0wO2k8MzI7aSsrKXN0YXRlLmNvZGVzW2krNTEyXT1kaXN0Zml4X2FyeVtpXTtzdGF0ZS5sZW5iaXRzPTksc3RhdGUuZGlzdGJpdHM9NX1mdW5jdGlvbiB1cGRhdGV3aW5kb3codCl7dmFyIGU9dC5zdGF0ZSxhPXQub3V0cHV0X2RhdGEubGVuZ3RoO3JldHVybiBudWxsPT09ZS53aW5kb3cmJihlLndpbmRvdz1cIlwiKSwwPT1lLndzaXplJiYoZS53c2l6ZT0xPDxlLndiaXRzKSxhPj1lLndzaXplP2Uud2luZG93PXQub3V0cHV0X2RhdGEuc3Vic3RyaW5nKGEtZS53c2l6ZSk6ZS53aGF2ZSthPGUud3NpemU/ZS53aW5kb3crPXQub3V0cHV0X2RhdGE6ZS53aW5kb3c9ZS53aW5kb3cuc3Vic3RyaW5nKGUud2hhdmUtKGUud3NpemUtYSkpK3Qub3V0cHV0X2RhdGEsZS53aGF2ZT1lLndpbmRvdy5sZW5ndGgsZS53aGF2ZTxlLndzaXplP2Uud25leHQ9ZS53aGF2ZTplLnduZXh0PTAsMH1mdW5jdGlvbiBDUkMyKHQsZSl7dmFyIGE9WzI1NSZlLGU+Pj44JjI1NV07dC5zdGF0ZS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKHQuc3RhdGUuY2hlY2ssYSwwLDIpfWZ1bmN0aW9uIENSQzQodCxlKXt2YXIgYT1bMjU1JmUsZT4+PjgmMjU1LGU+Pj4xNiYyNTUsZT4+PjI0JjI1NV07dC5zdGF0ZS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKHQuc3RhdGUuY2hlY2ssYSwwLDQpfWZ1bmN0aW9uIExPQUQodCxlKXtyZXR1cm4gZS5zdHJtPXQsZS5sZWZ0PXQuYXZhaWxfb3V0LGUubmV4dD10Lm5leHRfaW4sZS5oYXZlPXQuYXZhaWxfaW4sZS5ob2xkPXQuc3RhdGUuaG9sZCxlLmJpdHM9dC5zdGF0ZS5iaXRzLGV9ZnVuY3Rpb24gUkVTVE9SRSh0KXt2YXIgZT10LnN0cm07ZS5uZXh0X2luPXQubmV4dCxlLmF2YWlsX291dD10LmxlZnQsZS5hdmFpbF9pbj10LmhhdmUsZS5zdGF0ZS5ob2xkPXQuaG9sZCxlLnN0YXRlLmJpdHM9dC5iaXRzfWZ1bmN0aW9uIElOSVRCSVRTKHQpe3QuaG9sZD0wLHQuYml0cz0wfWZ1bmN0aW9uIFBVTExCWVRFKHQpe3JldHVybiAwIT10LmhhdmUmJih0LmhhdmUtLSx0LmhvbGQrPSgyNTUmdC5zdHJtLmlucHV0X2RhdGEuY2hhckNvZGVBdCh0Lm5leHQrKykpPDx0LmJpdHMsdC5iaXRzKz04LCEwKX1mdW5jdGlvbiBORUVEQklUUyh0LGUpe2Zvcig7dC5iaXRzPGU7KWlmKCFQVUxMQllURSh0KSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBCSVRTKHQsZSl7cmV0dXJuIHQuaG9sZCYoMTw8ZSktMX1mdW5jdGlvbiBEUk9QQklUUyh0LGUpe3QuaG9sZD4+Pj1lLHQuYml0cy09ZX1mdW5jdGlvbiBCWVRFQklUUyh0KXt0LmhvbGQ+Pj49NyZ0LmJpdHMsdC5iaXRzLT03JnQuYml0c31mdW5jdGlvbiBSRVZFUlNFKHQpe3JldHVybih0Pj4+MjQmMjU1KSsodD4+PjgmNjUyODApKygoNjUyODAmdCk8PDgpKygoMjU1JnQpPDwyNCl9dmFyIGluZmxhdGVfb3JkZXI9WzE2LDE3LDE4LDAsOCw3LDksNiwxMCw1LDExLDQsMTIsMywxMywyLDE0LDEsMTVdO1pMSUIuaW5mbGF0ZT1mdW5jdGlvbih0LGUpe3ZhciBhLHMsbyxpLHIsbixsLGgsYyxwPS0xLGQ9LTE7aWYoIXR8fCF0LnN0YXRlfHwhdC5pbnB1dF9kYXRhJiYwIT10LmF2YWlsX2luKXJldHVybiBaTElCLlpfU1RSRUFNX0VSUk9SOyhhPXQuc3RhdGUpLm1vZGU9PVRZUEUmJihhLm1vZGU9VFlQRURPKSxMT0FEKHQscz17fSksbz1zLmhhdmUsaT1zLmxlZnQsYz1aTElCLlpfT0s7dDpmb3IoOzspc3dpdGNoKGEubW9kZSl7Y2FzZSBIRUFEOmlmKDA9PWEud3JhcCl7YS5tb2RlPVRZUEVETzticmVha31pZighTkVFREJJVFMocywxNikpYnJlYWsgdDtpZigyJmEud3JhcCYmMzU2MTU9PXMuaG9sZCl7YS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKDAsbnVsbCwwLDApLENSQzIodCxzLmhvbGQpLElOSVRCSVRTKHMpLGEubW9kZT1GTEFHUzticmVha31pZihhLmZsYWdzPTAsbnVsbCE9PWEuaGVhZCYmKGEuaGVhZC5kb25lPS0xKSwhKDEmYS53cmFwKXx8KChCSVRTKHMsOCk8PDgpKyhzLmhvbGQ+Pj44KSklMzEpe3QubXNnPVwiaW5jb3JyZWN0IGhlYWRlciBjaGVja1wiLGEubW9kZT1CQUQ7YnJlYWt9aWYoQklUUyhzLDQpIT1aTElCLlpfREVGTEFURUQpe3QubXNnPVwidW5rbm93biBjb21wcmVzc2lvbiBtZXRob2RcIixhLm1vZGU9QkFEO2JyZWFrfWlmKERST1BCSVRTKHMsNCksaD1CSVRTKHMsNCkrOCwwPT1hLndiaXRzKWEud2JpdHM9aDtlbHNlIGlmKGg+YS53Yml0cyl7dC5tc2c9XCJpbnZhbGlkIHdpbmRvdyBzaXplXCIsYS5tb2RlPUJBRDticmVha31hLmRtYXg9MTw8aCx0LmFkbGVyPWEuY2hlY2s9dC5jaGVja3N1bV9mdW5jdGlvbigwLG51bGwsMCwwKSxhLm1vZGU9NTEyJnMuaG9sZD9ESUNUSUQ6VFlQRSxJTklUQklUUyhzKTticmVhaztjYXNlIEZMQUdTOmlmKCFORUVEQklUUyhzLDE2KSlicmVhayB0O2lmKGEuZmxhZ3M9cy5ob2xkLCgyNTUmYS5mbGFncykhPVpMSUIuWl9ERUZMQVRFRCl7dC5tc2c9XCJ1bmtub3duIGNvbXByZXNzaW9uIG1ldGhvZFwiLGEubW9kZT1CQUQ7YnJlYWt9aWYoNTczNDQmYS5mbGFncyl7dC5tc2c9XCJ1bmtub3duIGhlYWRlciBmbGFncyBzZXRcIixhLm1vZGU9QkFEO2JyZWFrfW51bGwhPT1hLmhlYWQmJihhLmhlYWQudGV4dD1zLmhvbGQ+Pj44JjEpLDUxMiZhLmZsYWdzJiZDUkMyKHQscy5ob2xkKSxJTklUQklUUyhzKSxhLm1vZGU9VElNRTtjYXNlIFRJTUU6aWYoIU5FRURCSVRTKHMsMzIpKWJyZWFrIHQ7bnVsbCE9PWEuaGVhZCYmKGEuaGVhZC50aW1lPXMuaG9sZCksNTEyJmEuZmxhZ3MmJkNSQzQodCxzLmhvbGQpLElOSVRCSVRTKHMpLGEubW9kZT1PUztjYXNlIE9TOmlmKCFORUVEQklUUyhzLDE2KSlicmVhayB0O251bGwhPT1hLmhlYWQmJihhLmhlYWQueGZsYWdzPTI1NSZzLmhvbGQsYS5oZWFkLm9zPXMuaG9sZD4+PjgpLDUxMiZhLmZsYWdzJiZDUkMyKHQscy5ob2xkKSxJTklUQklUUyhzKSxhLm1vZGU9RVhMRU47Y2FzZSBFWExFTjppZigxMDI0JmEuZmxhZ3Mpe2lmKCFORUVEQklUUyhzLDE2KSlicmVhayB0O2EubGVuZ3RoPXMuaG9sZCxudWxsIT09YS5oZWFkJiYoYS5oZWFkLmV4dHJhX2xlbj1zLmhvbGQpLDUxMiZhLmZsYWdzJiZDUkMyKHQscy5ob2xkKSxJTklUQklUUyhzKSxhLmhlYWQuZXh0cmE9XCJcIn1lbHNlIG51bGwhPT1hLmhlYWQmJihhLmhlYWQuZXh0cmE9bnVsbCk7YS5tb2RlPUVYVFJBO2Nhc2UgRVhUUkE6aWYoMTAyNCZhLmZsYWdzJiYoKHI9YS5sZW5ndGgpPnMuaGF2ZSYmKHI9cy5oYXZlKSxyJiYobnVsbCE9PWEuaGVhZCYmbnVsbCE9PWEuaGVhZC5leHRyYSYmKGg9YS5oZWFkLmV4dHJhX2xlbi1hLmxlbmd0aCxhLmhlYWQuZXh0cmErPXQuaW5wdXRfZGF0YS5zdWJzdHJpbmcocy5uZXh0LHMubmV4dCsoaCtyPmEuaGVhZC5leHRyYV9tYXg/YS5oZWFkLmV4dHJhX21heC1oOnIpKSksNTEyJmEuZmxhZ3MmJihhLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oYS5jaGVjayx0LmlucHV0X2RhdGEscy5uZXh0LHIpKSxzLmhhdmUtPXIscy5uZXh0Kz1yLGEubGVuZ3RoLT1yKSxhLmxlbmd0aCkpYnJlYWsgdDthLmxlbmd0aD0wLGEubW9kZT1OQU1FO2Nhc2UgTkFNRTppZigyMDQ4JmEuZmxhZ3Mpe2lmKDA9PXMuaGF2ZSlicmVhayB0O251bGwhPT1hLmhlYWQmJm51bGw9PT1hLmhlYWQubmFtZSYmKGEuaGVhZC5uYW1lPVwiXCIpLHI9MDtkb3tpZihoPXQuaW5wdXRfZGF0YS5jaGFyQXQocy5uZXh0K3IpLHIrKyxcIlxcMFwiPT09aClicmVhaztudWxsIT09YS5oZWFkJiZhLmxlbmd0aDxhLmhlYWQubmFtZV9tYXgmJihhLmhlYWQubmFtZSs9aCxhLmxlbmd0aCsrKX13aGlsZShyPHMuaGF2ZSk7aWYoNTEyJmEuZmxhZ3MmJihhLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oYS5jaGVjayx0LmlucHV0X2RhdGEscy5uZXh0LHIpKSxzLmhhdmUtPXIscy5uZXh0Kz1yLFwiXFwwXCIhPT1oKWJyZWFrIHR9ZWxzZSBudWxsIT09YS5oZWFkJiYoYS5oZWFkLm5hbWU9bnVsbCk7YS5sZW5ndGg9MCxhLm1vZGU9Q09NTUVOVDtjYXNlIENPTU1FTlQ6aWYoNDA5NiZhLmZsYWdzKXtpZigwPT1zLmhhdmUpYnJlYWsgdDtyPTAsbnVsbCE9PWEuaGVhZCYmbnVsbD09PWEuaGVhZC5jb21tZW50JiYoYS5oZWFkLmNvbW1lbnQ9XCJcIik7ZG97aWYoaD10LmlucHV0X2RhdGEuY2hhckF0KHMubmV4dCtyKSxyKyssXCJcXDBcIj09PWgpYnJlYWs7bnVsbCE9PWEuaGVhZCYmYS5sZW5ndGg8YS5oZWFkLmNvbW1fbWF4JiYoYS5oZWFkLmNvbW1lbnQrPWgsYS5sZW5ndGgrKyl9d2hpbGUocjxzLmhhdmUpO2lmKDUxMiZhLmZsYWdzJiYoYS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKGEuY2hlY2ssdC5pbnB1dF9kYXRhLHMubmV4dCxyKSkscy5oYXZlLT1yLHMubmV4dCs9cixcIlxcMFwiIT09aClicmVhayB0fWVsc2UgbnVsbCE9PWEuaGVhZCYmKGEuaGVhZC5jb21tZW50PW51bGwpO2EubW9kZT1IQ1JDO2Nhc2UgSENSQzppZig1MTImYS5mbGFncyl7aWYoIU5FRURCSVRTKHMsMTYpKWJyZWFrIHQ7aWYocy5ob2xkIT0oNjU1MzUmYS5jaGVjaykpe3QubXNnPVwiaGVhZGVyIGNyYyBtaXNtYXRjaFwiLGEubW9kZT1CQUQ7YnJlYWt9SU5JVEJJVFMocyl9bnVsbCE9PWEuaGVhZCYmKGEuaGVhZC5oY3JjPWEuZmxhZ3M+Pj45JjEsYS5oZWFkLmRvbmU9MSksdC5hZGxlcj1hLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oMCxudWxsLDAsMCksYS5tb2RlPVRZUEU7YnJlYWs7Y2FzZSBESUNUSUQ6aWYoIU5FRURCSVRTKHMsMzIpKWJyZWFrIHQ7dC5hZGxlcj1hLmNoZWNrPVJFVkVSU0Uocy5ob2xkKSxJTklUQklUUyhzKSxhLm1vZGU9RElDVDtjYXNlIERJQ1Q6aWYoMD09YS5oYXZlZGljdClyZXR1cm4gUkVTVE9SRShzKSxaTElCLlpfTkVFRF9ESUNUO3QuYWRsZXI9YS5jaGVjaz10LmNoZWNrc3VtX2Z1bmN0aW9uKDAsbnVsbCwwLDApLGEubW9kZT1UWVBFO2Nhc2UgVFlQRTppZihlPT1aTElCLlpfQkxPQ0t8fGU9PVpMSUIuWl9UUkVFUylicmVhayB0O2Nhc2UgVFlQRURPOmlmKGEubGFzdCl7QllURUJJVFMocyksYS5tb2RlPUNIRUNLO2JyZWFrfWlmKCFORUVEQklUUyhzLDMpKWJyZWFrIHQ7c3dpdGNoKGEubGFzdD1CSVRTKHMsMSksRFJPUEJJVFMocywxKSxCSVRTKHMsMikpe2Nhc2UgMDphLm1vZGU9U1RPUkVEO2JyZWFrO2Nhc2UgMTppZihmaXhlZHRhYmxlcyhhKSxhLm1vZGU9TEVOXyxlPT1aTElCLlpfVFJFRVMpe0RST1BCSVRTKHMsMik7YnJlYWsgdH1icmVhaztjYXNlIDI6YS5tb2RlPVRBQkxFO2JyZWFrO2Nhc2UgMzp0Lm1zZz1cImludmFsaWQgYmxvY2sgdHlwZVwiLGEubW9kZT1CQUR9RFJPUEJJVFMocywyKTticmVhaztjYXNlIFNUT1JFRDppZihCWVRFQklUUyhzKSwhTkVFREJJVFMocywzMikpYnJlYWsgdDtpZigoNjU1MzUmcy5ob2xkKSE9KHMuaG9sZD4+PjE2JjY1NTM1XjY1NTM1KSl7dC5tc2c9XCJpbnZhbGlkIHN0b3JlZCBibG9jayBsZW5ndGhzXCIsYS5tb2RlPUJBRDticmVha31pZihhLmxlbmd0aD02NTUzNSZzLmhvbGQsSU5JVEJJVFMocyksYS5tb2RlPUNPUFlfLGU9PVpMSUIuWl9UUkVFUylicmVhayB0O2Nhc2UgQ09QWV86YS5tb2RlPUNPUFk7Y2FzZSBDT1BZOmlmKHI9YS5sZW5ndGgpe2lmKHI+cy5oYXZlJiYocj1zLmhhdmUpLHI+cy5sZWZ0JiYocj1zLmxlZnQpLDA9PXIpYnJlYWsgdDt0Lm91dHB1dF9kYXRhKz10LmlucHV0X2RhdGEuc3Vic3RyaW5nKHMubmV4dCxzLm5leHQrciksdC5uZXh0X291dCs9cixzLmhhdmUtPXIscy5uZXh0Kz1yLHMubGVmdC09cixhLmxlbmd0aC09cjticmVha31hLm1vZGU9VFlQRTticmVhaztjYXNlIFRBQkxFOmlmKCFORUVEQklUUyhzLDE0KSlicmVhayB0O2lmKGEubmxlbj1CSVRTKHMsNSkrMjU3LERST1BCSVRTKHMsNSksYS5uZGlzdD1CSVRTKHMsNSkrMSxEUk9QQklUUyhzLDUpLGEubmNvZGU9QklUUyhzLDQpKzQsRFJPUEJJVFMocyw0KSxhLm5sZW4+Mjg2fHxhLm5kaXN0PjMwKXt0Lm1zZz1cInRvbyBtYW55IGxlbmd0aCBvciBkaXN0YW5jZSBzeW1ib2xzXCIsYS5tb2RlPUJBRDticmVha31hLmhhdmU9MCxhLm1vZGU9TEVOTEVOUztjYXNlIExFTkxFTlM6Zm9yKDthLmhhdmU8YS5uY29kZTspe2lmKCFORUVEQklUUyhzLDMpKWJyZWFrIHQ7dmFyIHY9QklUUyhzLDMpO2EubGVuc1tpbmZsYXRlX29yZGVyW2EuaGF2ZSsrXV09dixEUk9QQklUUyhzLDMpfWZvcig7YS5oYXZlPDE5OylhLmxlbnNbaW5mbGF0ZV9vcmRlclthLmhhdmUrK11dPTA7aWYoYS5uZXh0PTAsYS5sZW5jb2RlPTAsYS5sZW5iaXRzPTcsYz1pbmZsYXRlX3RhYmxlKGEsQ09ERVMpKXt0Lm1zZz1cImludmFsaWQgY29kZSBsZW5ndGhzIHNldFwiLGEubW9kZT1CQUQ7YnJlYWt9YS5oYXZlPTAsYS5tb2RlPUNPREVMRU5TO2Nhc2UgQ09ERUxFTlM6Zm9yKDthLmhhdmU8YS5ubGVuK2EubmRpc3Q7KXtmb3IoOyEoKG49YS5jb2Rlc1thLmxlbmNvZGUrQklUUyhzLGEubGVuYml0cyldKS5iaXRzPD1zLmJpdHMpOylpZighUFVMTEJZVEUocykpYnJlYWsgdDtpZihuLnZhbDwxNilEUk9QQklUUyhzLG4uYml0cyksYS5sZW5zW2EuaGF2ZSsrXT1uLnZhbDtlbHNle2lmKDE2PT1uLnZhbCl7aWYoIU5FRURCSVRTKHMsbi5iaXRzKzIpKWJyZWFrIHQ7aWYoRFJPUEJJVFMocyxuLmJpdHMpLDA9PWEuaGF2ZSl7dC5tc2c9XCJpbnZhbGlkIGJpdCBsZW5ndGggcmVwZWF0XCIsYS5tb2RlPUJBRDticmVha31oPWEubGVuc1thLmhhdmUtMV0scj0zK0JJVFMocywyKSxEUk9QQklUUyhzLDIpfWVsc2UgaWYoMTc9PW4udmFsKXtpZighTkVFREJJVFMocyxuLmJpdHMrMykpYnJlYWsgdDtEUk9QQklUUyhzLG4uYml0cyksaD0wLHI9MytCSVRTKHMsMyksRFJPUEJJVFMocywzKX1lbHNle2lmKCFORUVEQklUUyhzLG4uYml0cys3KSlicmVhayB0O0RST1BCSVRTKHMsbi5iaXRzKSxoPTAscj0xMStCSVRTKHMsNyksRFJPUEJJVFMocyw3KX1pZihhLmhhdmUrcj5hLm5sZW4rYS5uZGlzdCl7dC5tc2c9XCJpbnZhbGlkIGJpdCBsZW5ndGggcmVwZWF0XCIsYS5tb2RlPUJBRDticmVha31mb3IoO3ItLTspYS5sZW5zW2EuaGF2ZSsrXT1ofX1pZihhLm1vZGU9PUJBRClicmVhaztpZigwPT1hLmxlbnNbMjU2XSl7dC5tc2c9XCJpbnZhbGlkIGNvZGUgLS0gbWlzc2luZyBlbmQtb2YtYmxvY2tcIixhLm1vZGU9QkFEO2JyZWFrfWlmKGEubmV4dD0wLGEubGVuY29kZT1hLm5leHQsYS5sZW5iaXRzPTksYz1pbmZsYXRlX3RhYmxlKGEsTEVOUykpe3QubXNnPVwiaW52YWxpZCBsaXRlcmFsL2xlbmd0aHMgc2V0XCIsYS5tb2RlPUJBRDticmVha31pZihhLmRpc3Rjb2RlPWEubmV4dCxhLmRpc3RiaXRzPTYsYz1pbmZsYXRlX3RhYmxlKGEsRElTVFMpKXt0Lm1zZz1cImludmFsaWQgZGlzdGFuY2VzIHNldFwiLGEubW9kZT1CQUQ7YnJlYWt9aWYoYS5tb2RlPUxFTl8sZT09WkxJQi5aX1RSRUVTKWJyZWFrIHQ7Y2FzZSBMRU5fOmEubW9kZT1MRU47Y2FzZSBMRU46aWYocy5oYXZlPj02JiZzLmxlZnQ+PTI1OCl7UkVTVE9SRShzKSxpbmZsYXRlX2Zhc3QodCxpKSxMT0FEKHQscyksYS5tb2RlPT1UWVBFJiYoYS5iYWNrPS0xKTticmVha31mb3IoYS5iYWNrPTA7ISgobj1hLmNvZGVzW2EubGVuY29kZStCSVRTKHMsYS5sZW5iaXRzKV0pLmJpdHM8PXMuYml0cyk7KWlmKCFQVUxMQllURShzKSlicmVhayB0O2lmKG4ub3AmJjA9PSgyNDAmbi5vcCkpe2ZvcihsPW47bj1hLmNvZGVzW2EubGVuY29kZStsLnZhbCsoQklUUyhzLGwuYml0cytsLm9wKT4+PmwuYml0cyldLCEobC5iaXRzK24uYml0czw9cy5iaXRzKTspaWYoIVBVTExCWVRFKHMpKWJyZWFrIHQ7RFJPUEJJVFMocyxsLmJpdHMpLGEuYmFjays9bC5iaXRzfWlmKERST1BCSVRTKHMsbi5iaXRzKSxhLmJhY2srPW4uYml0cyxhLmxlbmd0aD1uLnZhbCwwPT1uLm9wKXthLm1vZGU9TElUO2JyZWFrfWlmKDMyJm4ub3Ape2EuYmFjaz0tMSxhLm1vZGU9VFlQRTticmVha31pZig2NCZuLm9wKXt0Lm1zZz1cImludmFsaWQgbGl0ZXJhbC9sZW5ndGggY29kZVwiLGEubW9kZT1CQUQ7YnJlYWt9YS5leHRyYT0xNSZuLm9wLGEubW9kZT1MRU5FWFQ7Y2FzZSBMRU5FWFQ6aWYoYS5leHRyYSl7aWYoIU5FRURCSVRTKHMsYS5leHRyYSkpYnJlYWsgdDthLmxlbmd0aCs9QklUUyhzLGEuZXh0cmEpLERST1BCSVRTKHMsYS5leHRyYSksYS5iYWNrKz1hLmV4dHJhfWEud2FzPWEubGVuZ3RoLGEubW9kZT1ESVNUO2Nhc2UgRElTVDpmb3IoOyEoKG49YS5jb2Rlc1thLmRpc3Rjb2RlK0JJVFMocyxhLmRpc3RiaXRzKV0pLmJpdHM8PXMuYml0cyk7KWlmKCFQVUxMQllURShzKSlicmVhayB0O2lmKDA9PSgyNDAmbi5vcCkpe2ZvcihsPW47bj1hLmNvZGVzW2EuZGlzdGNvZGUrbC52YWwrKEJJVFMocyxsLmJpdHMrbC5vcCk+Pj5sLmJpdHMpXSwhKGwuYml0cytuLmJpdHM8PXMuYml0cyk7KWlmKCFQVUxMQllURShzKSlicmVhayB0O0RST1BCSVRTKHMsbC5iaXRzKSxhLmJhY2srPWwuYml0c31pZihEUk9QQklUUyhzLG4uYml0cyksYS5iYWNrKz1uLmJpdHMsNjQmbi5vcCl7dC5tc2c9XCJpbnZhbGlkIGRpc3RhbmNlIGNvZGVcIixhLm1vZGU9QkFEO2JyZWFrfWEub2Zmc2V0PW4udmFsLGEuZXh0cmE9MTUmbi5vcCxhLm1vZGU9RElTVEVYVDtjYXNlIERJU1RFWFQ6aWYoYS5leHRyYSl7aWYoIU5FRURCSVRTKHMsYS5leHRyYSkpYnJlYWsgdDthLm9mZnNldCs9QklUUyhzLGEuZXh0cmEpLERST1BCSVRTKHMsYS5leHRyYSksYS5iYWNrKz1hLmV4dHJhfWEubW9kZT1NQVRDSDtjYXNlIE1BVENIOmlmKDA9PXMubGVmdClicmVhayB0O2lmKHI9aS1zLmxlZnQsYS5vZmZzZXQ+cil7aWYoKHI9YS5vZmZzZXQtcik+YS53aGF2ZSYmYS5zYW5lKXt0Lm1zZz1cImludmFsaWQgZGlzdGFuY2UgdG9vIGZhciBiYWNrXCIsYS5tb2RlPUJBRDticmVha31yPmEud25leHQ/KHItPWEud25leHQscD1hLndzaXplLXIsZD0tMSk6KHA9YS53bmV4dC1yLGQ9LTEpLHI+YS5sZW5ndGgmJihyPWEubGVuZ3RoKX1lbHNlIHA9LTEsZD10Lm5leHRfb3V0LWEub2Zmc2V0LHI9YS5sZW5ndGg7aWYocj5zLmxlZnQmJihyPXMubGVmdCkscy5sZWZ0LT1yLGEubGVuZ3RoLT1yLHA+PTApdC5vdXRwdXRfZGF0YSs9YS53aW5kb3cuc3Vic3RyaW5nKHAscCtyKSx0Lm5leHRfb3V0Kz1yLHI9MDtlbHNle3QubmV4dF9vdXQrPXI7ZG97dC5vdXRwdXRfZGF0YSs9dC5vdXRwdXRfZGF0YS5jaGFyQXQoZCsrKX13aGlsZSgtLXIpfTA9PWEubGVuZ3RoJiYoYS5tb2RlPUxFTik7YnJlYWs7Y2FzZSBMSVQ6aWYoMD09cy5sZWZ0KWJyZWFrIHQ7dC5vdXRwdXRfZGF0YSs9U3RyaW5nLmZyb21DaGFyQ29kZShhLmxlbmd0aCksdC5uZXh0X291dCsrLHMubGVmdC0tLGEubW9kZT1MRU47YnJlYWs7Y2FzZSBDSEVDSzppZihhLndyYXApe2lmKCFORUVEQklUUyhzLDMyKSlicmVhayB0O2lmKGktPXMubGVmdCx0LnRvdGFsX291dCs9aSxhLnRvdGFsKz1pLGkmJih0LmFkbGVyPWEuY2hlY2s9dC5jaGVja3N1bV9mdW5jdGlvbihhLmNoZWNrLHQub3V0cHV0X2RhdGEsdC5vdXRwdXRfZGF0YS5sZW5ndGgtaSxpKSksaT1zLmxlZnQsKGEuZmxhZ3M/cy5ob2xkOlJFVkVSU0Uocy5ob2xkKSkhPWEuY2hlY2spe3QubXNnPVwiaW5jb3JyZWN0IGRhdGEgY2hlY2tcIixhLm1vZGU9QkFEO2JyZWFrfUlOSVRCSVRTKHMpfWEubW9kZT1MRU5HVEg7Y2FzZSBMRU5HVEg6aWYoYS53cmFwJiZhLmZsYWdzKXtpZighTkVFREJJVFMocywzMikpYnJlYWsgdDtpZihzLmhvbGQhPSg0Mjk0OTY3Mjk1JmEudG90YWwpKXt0Lm1zZz1cImluY29ycmVjdCBsZW5ndGggY2hlY2tcIixhLm1vZGU9QkFEO2JyZWFrfUlOSVRCSVRTKHMpfWEubW9kZT1ET05FO2Nhc2UgRE9ORTpjPVpMSUIuWl9TVFJFQU1fRU5EO2JyZWFrIHQ7Y2FzZSBCQUQ6Yz1aTElCLlpfREFUQV9FUlJPUjticmVhayB0O2Nhc2UgTUVNOnJldHVybiBaTElCLlpfTUVNX0VSUk9SO2RlZmF1bHQ6cmV0dXJuIFpMSUIuWl9TVFJFQU1fRVJST1J9cmV0dXJuIFJFU1RPUkUocyksKGEud3NpemV8fGkhPXQuYXZhaWxfb3V0JiZhLm1vZGU8QkFEJiYoYS5tb2RlPENIRUNLfHxlIT1aTElCLlpfRklOSVNIKSkmJnVwZGF0ZXdpbmRvdyh0KT8oYS5tb2RlPU1FTSxaTElCLlpfTUVNX0VSUk9SKTooby09dC5hdmFpbF9pbixpLT10LmF2YWlsX291dCx0LnRvdGFsX2luKz1vLHQudG90YWxfb3V0Kz1pLGEudG90YWwrPWksYS53cmFwJiZpJiYodC5hZGxlcj1hLmNoZWNrPXQuY2hlY2tzdW1fZnVuY3Rpb24oYS5jaGVjayx0Lm91dHB1dF9kYXRhLDAsdC5vdXRwdXRfZGF0YS5sZW5ndGgpKSx0LmRhdGFfdHlwZT1hLmJpdHMrKGEubGFzdD82NDowKSsoYS5tb2RlPT1UWVBFPzEyODowKSsoYS5tb2RlPT1MRU5ffHxhLm1vZGU9PUNPUFlfPzI1NjowKSwoMD09byYmMD09aXx8ZT09WkxJQi5aX0ZJTklTSCkmJmM9PVpMSUIuWl9PSyYmKGM9WkxJQi5aX0JVRl9FUlJPUiksYyl9LFpMSUIuaW5mbGF0ZUVuZD1mdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5zdGF0ZT8odC5zdGF0ZS53aW5kb3c9bnVsbCx0LnN0YXRlPW51bGwsWkxJQi5aX09LKTpaTElCLlpfU1RSRUFNX0VSUk9SfSxaTElCLnpfc3RyZWFtLnByb3RvdHlwZS5pbmZsYXRlPWZ1bmN0aW9uKHQsZSl7dmFyIGEsczt0aGlzLmlucHV0X2RhdGE9dCx0aGlzLm5leHRfaW49Z2V0YXJnKGUsXCJuZXh0X2luXCIsMCksdGhpcy5hdmFpbF9pbj1nZXRhcmcoZSxcImF2YWlsX2luXCIsdC5sZW5ndGgtdGhpcy5uZXh0X2luKSxhPWdldGFyZyhlLFwiZmx1c2hcIixaTElCLlpfU1lOQ19GTFVTSCkscz1nZXRhcmcoZSxcImF2YWlsX291dFwiLC0xKTt2YXIgbz1cIlwiO2Rve2lmKHRoaXMuYXZhaWxfb3V0PXM+PTA/czoxNjM4NCx0aGlzLm91dHB1dF9kYXRhPVwiXCIsdGhpcy5uZXh0X291dD0wLHRoaXMuZXJyb3I9WkxJQi5pbmZsYXRlKHRoaXMsYSksMCE9dGhpcy5lcnJvciYmY29uc29sZS5sb2coXCJ6bGliIGVycm9yXCIsdGhpcy5lcnJvcikscz49MClyZXR1cm4gdGhpcy5vdXRwdXRfZGF0YTtpZihvKz10aGlzLm91dHB1dF9kYXRhLHRoaXMuYXZhaWxfb3V0PjApYnJlYWt9d2hpbGUodGhpcy5lcnJvcj09WkxJQi5aX09LKTtyZXR1cm4gb30sWkxJQi56X3N0cmVhbS5wcm90b3R5cGUuaW5mbGF0ZVJlc2V0PWZ1bmN0aW9uKHQpe3JldHVybiBaTElCLmluZmxhdGVSZXNldCh0aGlzLHQpfX0oKSx2b2lkIDA9PT1aTElCJiZhbGVydChcIlpMSUIgaXMgbm90IGRlZmluZWQuICBTUkMgemxpYi5qcyBiZWZvcmUgemxpYi1hZGxlcjMyLmpzXCIpLEJBU0U9NjU1MjEsTk1BWD01NTUyLFpMSUIuYWRsZXIzMj1mdW5jdGlvbih0LGUsYSxzKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT9mdW5jdGlvbih0LGUsYSxzKXt2YXIgbyxpO2lmKG89dD4+PjE2JjY1NTM1LHQmPTY1NTM1LDE9PXMpcmV0dXJuKHQrPTI1NSZlLmNoYXJDb2RlQXQoYSkpPj1CQVNFJiYodC09QkFTRSksKG8rPXQpPj1CQVNFJiYoby09QkFTRSksdHxvPDwxNjtpZihudWxsPT09ZSlyZXR1cm4gMTtpZihzPDE2KXtmb3IoO3MtLTspbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspO3JldHVybiB0Pj1CQVNFJiYodC09QkFTRSksdHwobyU9QkFTRSk8PDE2fWZvcig7cz49Tk1BWDspe3MtPU5NQVgsaT0zNDc7ZG97bys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspfXdoaWxlKC0taSk7dCU9QkFTRSxvJT1CQVNFfWlmKHMpe2Zvcig7cz49MTY7KXMtPTE2LG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKSxvKz10Kz0yNTUmZS5jaGFyQ29kZUF0KGErKyksbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspLG8rPXQrPTI1NSZlLmNoYXJDb2RlQXQoYSsrKTtmb3IoO3MtLTspbys9dCs9MjU1JmUuY2hhckNvZGVBdChhKyspO3QlPUJBU0UsbyU9QkFTRX1yZXR1cm4gdHxvPDwxNn0odCxlLGEscyk6ZnVuY3Rpb24odCxlLGEscyl7dmFyIG8saTtpZihvPXQ+Pj4xNiY2NTUzNSx0Jj02NTUzNSwxPT1zKXJldHVybih0Kz1lW2FdKT49QkFTRSYmKHQtPUJBU0UpLChvKz10KT49QkFTRSYmKG8tPUJBU0UpLHR8bzw8MTY7aWYobnVsbD09PWUpcmV0dXJuIDE7aWYoczwxNil7Zm9yKDtzLS07KW8rPXQrPWVbYSsrXTtyZXR1cm4gdD49QkFTRSYmKHQtPUJBU0UpLHR8KG8lPUJBU0UpPDwxNn1mb3IoO3M+PU5NQVg7KXtzLT1OTUFYLGk9MzQ3O2Rve28rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXX13aGlsZSgtLWkpO3QlPUJBU0UsbyU9QkFTRX1pZihzKXtmb3IoO3M+PTE2OylzLT0xNixvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK10sbys9dCs9ZVthKytdLG8rPXQrPWVbYSsrXSxvKz10Kz1lW2ErK107Zm9yKDtzLS07KW8rPXQrPWVbYSsrXTt0JT1CQVNFLG8lPUJBU0V9cmV0dXJuIHR8bzw8MTZ9KHQsZSxhLHMpfSxaTElCLmFkbGVyMzJfY29tYmluZT1mdW5jdGlvbih0LGUsYSl7dmFyIHMsbyxpO3JldHVybiBhPDA/NDI5NDk2NzI5NToobz0oaT1hJT1CQVNFKSoocz02NTUzNSZ0KSxvJT1CQVNFLChzKz0oNjU1MzUmZSkrQkFTRS0xKT49QkFTRSYmKHMtPUJBU0UpLHM+PUJBU0UmJihzLT1CQVNFKSwobys9KHQ+PjE2JjY1NTM1KSsoZT4+MTYmNjU1MzUpK0JBU0UtaSk+PTEzMTA0MiYmKG8tPTEzMTA0Miksbz49QkFTRSYmKG8tPUJBU0UpLHN8bzw8MTYpfSx2b2lkIDA9PT1aTElCJiZhbGVydChcIlpMSUIgaXMgbm90IGRlZmluZWQuICBTUkMgemxpYi5qcyBiZWZvcmUgemxpYi1jcmMzMi5qc1wiKSxmdW5jdGlvbigpe3ZhciB0PVswLDE5OTY5NTk4OTQsMzk5MzkxOTc4OCwyNTY3NTI0Nzk0LDEyNDYzNDEzNywxODg2MDU3NjE1LDM5MTU2MjE2ODUsMjY1NzM5MjAzNSwyNDkyNjgyNzQsMjA0NDUwODMyNCwzNzcyMTE1MjMwLDI1NDcxNzc4NjQsMTYyOTQxOTk1LDIxMjU1NjEwMjEsMzg4NzYwNzA0NywyNDI4NDQ0MDQ5LDQ5ODUzNjU0OCwxNzg5OTI3NjY2LDQwODkwMTY2NDgsMjIyNzA2MTIxNCw0NTA1NDg4NjEsMTg0MzI1ODYwMyw0MTA3NTgwNzUzLDIyMTE2Nzc2MzksMzI1ODgzOTkwLDE2ODQ3NzcxNTIsNDI1MTEyMjA0MiwyMzIxOTI2NjM2LDMzNTYzMzQ4NywxNjYxMzY1NDY1LDQxOTUzMDI3NTUsMjM2NjExNTMxNyw5OTcwNzMwOTYsMTI4MTk1Mzg4NiwzNTc5ODU1MzMyLDI3MjQ2ODgyNDIsMTAwNjg4ODE0NSwxMjU4NjA3Njg3LDM1MjQxMDE2MjksMjc2ODk0MjQ0Myw5MDEwOTc3MjIsMTExOTAwMDY4NCwzNjg2NTE3MjA2LDI4OTgwNjU3MjgsODUzMDQ0NDUxLDExNzIyNjYxMDEsMzcwNTAxNTc1OSwyODgyNjE2NjY1LDY1MTc2Nzk4MCwxMzczNTAzNTQ2LDMzNjk1NTQzMDQsMzIxODEwNDU5OCw1NjU1MDcyNTMsMTQ1NDYyMTczMSwzNDg1MTExNzA1LDMwOTk0MzYzMDMsNjcxMjY2OTc0LDE1OTQxOTgwMjQsMzMyMjczMDkzMCwyOTcwMzQ3ODEyLDc5NTgzNTUyNywxNDgzMjMwMjI1LDMyNDQzNjcyNzUsMzA2MDE0OTU2NSwxOTk0MTQ2MTkyLDMxMTU4NTM0LDI1NjM5MDc3NzIsNDAyMzcxNzkzMCwxOTA3NDU5NDY1LDExMjYzNzIxNSwyNjgwMTUzMjUzLDM5MDQ0MjcwNTksMjAxMzc3NjI5MCwyNTE3MjIwMzYsMjUxNzIxNTM3NCwzNzc1ODMwMDQwLDIxMzc2NTY3NjMsMTQxMzc2ODEzLDI0MzkyNzc3MTksMzg2NTI3MTI5NywxODAyMTk1NDQ0LDQ3Njg2NDg2NiwyMjM4MDAxMzY4LDQwNjY1MDg4NzgsMTgxMjM3MDkyNSw0NTMwOTI3MzEsMjE4MTYyNTAyNSw0MTExNDUxMjIzLDE3MDYwODg5MDIsMzE0MDQyNzA0LDIzNDQ1MzIyMDIsNDI0MDAxNzUzMiwxNjU4NjU4MjcxLDM2NjYxOTk3NywyMzYyNjcwMzIzLDQyMjQ5OTQ0MDUsMTMwMzUzNTk2MCw5ODQ5NjE0ODYsMjc0NzAwNzA5MiwzNTY5MDM3NTM4LDEyNTYxNzA4MTcsMTAzNzYwNDMxMSwyNzY1MjEwNzMzLDM1NTQwNzk5OTUsMTEzMTAxNDUwNiw4Nzk2Nzk5OTYsMjkwOTI0MzQ2MiwzNjYzNzcxODU2LDExNDExMjQ0NjcsODU1ODQyMjc3LDI4NTI4MDE2MzEsMzcwODY0ODY0OSwxMzQyNTMzOTQ4LDY1NDQ1OTMwNiwzMTg4Mzk2MDQ4LDMzNzMwMTUxNzQsMTQ2NjQ3OTkwOSw1NDQxNzk2MzUsMzExMDUyMzkxMywzNDYyNTIyMDE1LDE1OTE2NzEwNTQsNzAyMTM4Nzc2LDI5NjY0NjA0NTAsMzM1Mjc5OTQxMiwxNTA0OTE4ODA3LDc4MzU1MTg3MywzMDgyNjQwNDQzLDMyMzM0NDI5ODksMzk4ODI5MjM4NCwyNTk2MjU0NjQ2LDYyMzE3MDY4LDE5NTc4MTA4NDIsMzkzOTg0NTk0NSwyNjQ3ODE2MTExLDgxNDcwOTk3LDE5NDM4MDM1MjMsMzgxNDkxODkzMCwyNDg5NTk2ODA0LDIyNTI3NDQzMCwyMDUzNzkwMzc2LDM4MjYxNzU3NTUsMjQ2NjkwNjAxMywxNjc4MTY3NDMsMjA5NzY1MTM3Nyw0MDI3NTUyNTgwLDIyNjU0OTAzODYsNTAzNDQ0MDcyLDE3NjIwNTA4MTQsNDE1MDQxNzI0NSwyMTU0MTI5MzU1LDQyNjUyMjIyNSwxODUyNTA3ODc5LDQyNzUzMTM1MjYsMjMxMjMxNzkyMCwyODI3NTM2MjYsMTc0MjU1NTg1Miw0MTg5NzA4MTQzLDIzOTQ4Nzc5NDUsMzk3OTE3NzYzLDE2MjIxODM2MzcsMzYwNDM5MDg4OCwyNzE0ODY2NTU4LDk1MzcyOTczMiwxMzQwMDc2NjI2LDM1MTg3MTk5ODUsMjc5NzM2MDk5OSwxMDY4ODI4MzgxLDEyMTk2Mzg4NTksMzYyNDc0MTg1MCwyOTM2Njc1MTQ4LDkwNjE4NTQ2MiwxMDkwODEyNTEyLDM3NDc2NzIwMDMsMjgyNTM3OTY2OSw4MjkzMjkxMzUsMTE4MTMzNTE2MSwzNDEyMTc3ODA0LDMxNjA4MzQ4NDIsNjI4MDg1NDA4LDEzODI2MDUzNjYsMzQyMzM2OTEwOSwzMTM4MDc4NDY3LDU3MDU2MjIzMywxNDI2NDAwODE1LDMzMTczMTY1NDIsMjk5ODczMzYwOCw3MzMyMzk5NTQsMTU1NTI2MTk1NiwzMjY4OTM1NTkxLDMwNTAzNjA2MjUsNzUyNDU5NDAzLDE1NDEzMjAyMjEsMjYwNzA3MTkyMCwzOTY1OTczMDMwLDE5Njk5MjI5NzIsNDA3MzU0OTgsMjYxNzgzNzIyNSwzOTQzNTc3MTUxLDE5MTMwODc4NzcsODM5MDgzNzEsMjUxMjM0MTYzNCwzODAzNzQwNjkyLDIwNzUyMDg2MjIsMjEzMjYxMTEyLDI0NjMyNzI2MDMsMzg1NTk5MDI4NSwyMDk0ODU0MDcxLDE5ODk1ODg4MSwyMjYyMDI5MDEyLDQwNTcyNjA2MTAsMTc1OTM1OTk5Miw1MzQ0MTQxOTAsMjE3NjcxODU0MSw0MTM5MzI5MTE1LDE4NzM4MzYwMDEsNDE0NjY0NTY3LDIyODIyNDg5MzQsNDI3OTIwMDM2OCwxNzExNjg0NTU0LDI4NTI4MTExNiwyNDA1ODAxNzI3LDQxNjcyMTY3NDUsMTYzNDQ2Nzc5NSwzNzYyMjk3MDEsMjY4NTA2Nzg5NiwzNjA4MDA3NDA2LDEzMDg5MTg2MTIsOTU2NTQzOTM4LDI4MDg1NTUxMDUsMzQ5NTk1ODI2MywxMjMxNjM2MzAxLDEwNDc0MjcwMzUsMjkzMjk1OTgxOCwzNjU0NzAzODM2LDEwODgzNTkyNzAsOTM2OTE4ZTMsMjg0NzcxNDg5OSwzNzM2ODM3ODI5LDEyMDI5MDA4NjMsODE3MjMzODk3LDMxODMzNDIxMDgsMzQwMTIzNzEzMCwxNDA0Mjc3NTUyLDYxNTgxODE1MCwzMTM0MjA3NDkzLDM0NTM0MjEyMDMsMTQyMzg1NzQ0OSw2MDE0NTA0MzEsMzAwOTgzNzYxNCwzMjk0NzEwNDU2LDE1NjcxMDM3NDYsNzExOTI4NzI0LDMwMjA2Njg0NzEsMzI3MjM4MDA2NSwxNTEwMzM0MjM1LDc1NTE2NzExN107ZnVuY3Rpb24gZSh0LGUpe3ZhciBhLHM9MDtmb3IoYT0wO2U7KTEmZSYmKGFePXRbc10pLGU+Pj0xLHMrKztyZXR1cm4gYX1mdW5jdGlvbiBhKHQsYSl7dmFyIHM7Zm9yKHM9MDtzPDMyO3MrKyl0W3NdPWUoYSxhW3NdKX1aTElCLmNyYzMyPWZ1bmN0aW9uKGUsYSxzLG8pe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBhP2Z1bmN0aW9uKGUsYSxzLG8pe2lmKG51bGw9PWEpcmV0dXJuIDA7Zm9yKGVePTQyOTQ5NjcyOTU7bz49ODspZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44LGU9dFsyNTUmKGVeYS5jaGFyQ29kZUF0KHMrKykpXV5lPj4+OCxlPXRbMjU1JihlXmEuY2hhckNvZGVBdChzKyspKV1eZT4+PjgsZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44LGU9dFsyNTUmKGVeYS5jaGFyQ29kZUF0KHMrKykpXV5lPj4+OCxlPXRbMjU1JihlXmEuY2hhckNvZGVBdChzKyspKV1eZT4+PjgsZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44LGU9dFsyNTUmKGVeYS5jaGFyQ29kZUF0KHMrKykpXV5lPj4+OCxvLT04O2lmKG8pZG97ZT10WzI1NSYoZV5hLmNoYXJDb2RlQXQocysrKSldXmU+Pj44fXdoaWxlKC0tbyk7cmV0dXJuIDQyOTQ5NjcyOTVeZX0oZSxhLHMsbyk6ZnVuY3Rpb24oZSxhLHMsbyl7aWYobnVsbD09YSlyZXR1cm4gMDtmb3IoZV49NDI5NDk2NzI5NTtvPj04OyllPXRbMjU1JihlXmFbcysrXSldXmU+Pj44LGU9dFsyNTUmKGVeYVtzKytdKV1eZT4+PjgsZT10WzI1NSYoZV5hW3MrK10pXV5lPj4+OCxlPXRbMjU1JihlXmFbcysrXSldXmU+Pj44LGU9dFsyNTUmKGVeYVtzKytdKV1eZT4+PjgsZT10WzI1NSYoZV5hW3MrK10pXV5lPj4+OCxlPXRbMjU1JihlXmFbcysrXSldXmU+Pj44LGU9dFsyNTUmKGVeYVtzKytdKV1eZT4+Pjgsby09ODtpZihvKWRve2U9dFsyNTUmKGVeYVtzKytdKV1eZT4+Pjh9d2hpbGUoLS1vKTtyZXR1cm4gNDI5NDk2NzI5NV5lfShlLGEscyxvKX0sWkxJQi5jcmMzMl9jb21iaW5lPWZ1bmN0aW9uKHQscyxvKXt2YXIgaSxyLG4sbDtpZihvPD0wKXJldHVybiB0O2ZvcihuPW5ldyBBcnJheSgzMiksKGw9bmV3IEFycmF5KDMyKSlbMF09Mzk4ODI5MjM4NCxyPTEsaT0xO2k8MzI7aSsrKWxbaV09cixyPDw9MTthKG4sbCksYShsLG4pO2Rve2lmKGEobixsKSwxJm8mJih0PWUobix0KSksMD09KG8+Pj0xKSlicmVhazthKGwsbiksMSZvJiYodD1lKGwsdCkpLG8+Pj0xfXdoaWxlKDAhPW8pO3JldHVybiB0XnN9fSgpLG1vZHVsZS5leHBvcnRzPVpMSUJ9fSxfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX189e307ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyh0KXt2YXIgZT1fX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bdF07aWYodm9pZCAwIT09ZSlyZXR1cm4gZS5leHBvcnRzO3ZhciBhPV9fd2VicGFja19tb2R1bGVfY2FjaGVfX1t0XT17ZXhwb3J0czp7fX07cmV0dXJuIF9fd2VicGFja19tb2R1bGVzX19bdF0oYSxhLmV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyksYS5leHBvcnRzfV9fd2VicGFja19yZXF1aXJlX18ubj10PT57dmFyIGU9dCYmdC5fX2VzTW9kdWxlPygpPT50LmRlZmF1bHQ6KCk9PnQ7cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uZChlLHthOmV9KSxlfSxfX3dlYnBhY2tfcmVxdWlyZV9fLmQ9KHQsZSk9Pntmb3IodmFyIGEgaW4gZSlfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZSxhKSYmIV9fd2VicGFja19yZXF1aXJlX18ubyh0LGEpJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxhLHtlbnVtZXJhYmxlOiEwLGdldDplW2FdfSl9LF9fd2VicGFja19yZXF1aXJlX18ubz0odCxlKT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSksX193ZWJwYWNrX3JlcXVpcmVfXy5yPXQ9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfTt2YXIgX193ZWJwYWNrX2V4cG9ydHNfXz17fTtyZXR1cm4oKCk9PntcInVzZSBzdHJpY3RcIjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyksX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18se0FNVERlc2t0b3A6KCk9PnQucixBTVRLZXlDb2RlQ29udmVydGVyOigpPT5kLnFELEFNVEt2bURhdGFSZWRpcmVjdG9yOigpPT5lLk4sQU1UUmVkaXJlY3RvcjooKT0+YS5LLEFtdFRlcm1pbmFsOigpPT5zLnIsQ29tbXNIZWxwZXI6KCk9PmQuWG4sQ29uc29sZUxvZ2dlcjooKT0+by5rLERhdGFQcm9jZXNzb3I6KCk9PmMuJCxEZXNrdG9wOigpPT5yLkgsRW5jb2Rpbmc6KCk9PnAuZXosRnJhbWVCdWZmZXJCZWxsU2VydmVyQ3V0VGV4dDooKT0+cC5VdCxIYW5kc2hha2VTdGF0ZTooKT0+cC53VyxJbWFnZUhlbHBlcjooKT0+ZC5qdyxLZXlCb2FyZEhlbHBlcjooKT0+ZC5FQixMb2dMZXZlbDooKT0+aC5pLE1vdXNlSGVscGVyOigpPT5kLnh4LFByb3RvY29sOigpPT5hLmIsUkxFRGVjb2RlcjooKT0+Yy5YLFNlY3VyaXR5T3B0aW9uczooKT0+cC5sbCxTZWN1cml0eVJlc3BvbnNlOigpPT5wLm1DLFNlcnZlckluaXQ6KCk9PnAuQ3UsU3RhdGVQcm9jZXNzb3JGYWN0b3J5OigpPT5uLnYsVGVybWluYWxEYXRhUHJvY2Vzc29yOigpPT5sLlEsVHlwZUNvbnZlcnRlcjooKT0+aS5yLGlzVHJ1dGh5OigpPT5kLmZRfSk7dmFyIHQ9X193ZWJwYWNrX3JlcXVpcmVfXygxNjYpLGU9X193ZWJwYWNrX3JlcXVpcmVfXyg1OSksYT1fX3dlYnBhY2tfcmVxdWlyZV9fKDUwMykscz1fX3dlYnBhY2tfcmVxdWlyZV9fKDI3Nyksbz1fX3dlYnBhY2tfcmVxdWlyZV9fKDIzNyksaT1fX3dlYnBhY2tfcmVxdWlyZV9fKDU2NSkscj1fX3dlYnBhY2tfcmVxdWlyZV9fKDQ2KSxuPV9fd2VicGFja19yZXF1aXJlX18oOTg5KSxsPV9fd2VicGFja19yZXF1aXJlX18oMTU1KSxoPV9fd2VicGFja19yZXF1aXJlX18oMjAxKSxjPV9fd2VicGFja19yZXF1aXJlX18oNjQ2KSxwPV9fd2VicGFja19yZXF1aXJlX18oMzg5KSxkPV9fd2VicGFja19yZXF1aXJlX18oOCl9KSgpLF9fd2VicGFja19leHBvcnRzX199KSgpKSk7IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnh0ZXJte2N1cnNvcjp0ZXh0O3Bvc2l0aW9uOnJlbGF0aXZlO3VzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lfS54dGVybS5mb2N1cywueHRlcm06Zm9jdXN7b3V0bGluZTpub25lfS54dGVybSAueHRlcm0taGVscGVyc3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDt6LWluZGV4OjV9Lnh0ZXJtIC54dGVybS1oZWxwZXItdGV4dGFyZWF7cGFkZGluZzowO2JvcmRlcjowO21hcmdpbjowO3Bvc2l0aW9uOmFic29sdXRlO29wYWNpdHk6MDtsZWZ0Oi05OTk5ZW07dG9wOjA7d2lkdGg6MDtoZWlnaHQ6MDt6LWluZGV4Oi01O3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47cmVzaXplOm5vbmV9Lnh0ZXJtIC5jb21wb3NpdGlvbi12aWV3e2JhY2tncm91bmQ6IzAwMDtjb2xvcjojZmZmO2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt3aGl0ZS1zcGFjZTpub3dyYXA7ei1pbmRleDoxfS54dGVybSAuY29tcG9zaXRpb24tdmlldy5hY3RpdmV7ZGlzcGxheTpibG9ja30ueHRlcm0gLnh0ZXJtLXZpZXdwb3J0e2JhY2tncm91bmQtY29sb3I6IzAwMDtvdmVyZmxvdy15OnNjcm9sbDtjdXJzb3I6ZGVmYXVsdDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO2xlZnQ6MDt0b3A6MDtib3R0b206MH0ueHRlcm0gLnh0ZXJtLXNjcmVlbntwb3NpdGlvbjpyZWxhdGl2ZX0ueHRlcm0gLnh0ZXJtLXNjcmVlbiBjYW52YXN7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowfS54dGVybSAueHRlcm0tc2Nyb2xsLWFyZWF7dmlzaWJpbGl0eTpoaWRkZW59Lnh0ZXJtLWNoYXItbWVhc3VyZS1lbGVtZW50e2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Zpc2liaWxpdHk6aGlkZGVuO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6LTk5OTllbTtsaW5lLWhlaWdodDpub3JtYWx9Lnh0ZXJtLmVuYWJsZS1tb3VzZS1ldmVudHN7Y3Vyc29yOmRlZmF1bHR9Lnh0ZXJtLnh0ZXJtLWN1cnNvci1wb2ludGVyLC54dGVybSAueHRlcm0tY3Vyc29yLXBvaW50ZXJ7Y3Vyc29yOnBvaW50ZXJ9Lnh0ZXJtLmNvbHVtbi1zZWxlY3QuZm9jdXN7Y3Vyc29yOmNyb3NzaGFpcn0ueHRlcm0gLnh0ZXJtLWFjY2Vzc2liaWxpdHksLnh0ZXJtIC54dGVybS1tZXNzYWdle3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDtib3R0b206MDtyaWdodDowO3otaW5kZXg6MTA7Y29sb3I6cmdiYSgwLDAsMCwwKX0ueHRlcm0gLmxpdmUtcmVnaW9ue3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTk5OTlweDt3aWR0aDoxcHg7aGVpZ2h0OjFweDtvdmVyZmxvdzpoaWRkZW59Lnh0ZXJtLWRpbXtvcGFjaXR5Oi41fS54dGVybS11bmRlcmxpbmUtMXt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS54dGVybS11bmRlcmxpbmUtMnt0ZXh0LWRlY29yYXRpb246ZG91YmxlIHVuZGVybGluZX0ueHRlcm0tdW5kZXJsaW5lLTN7dGV4dC1kZWNvcmF0aW9uOndhdnkgdW5kZXJsaW5lfS54dGVybS11bmRlcmxpbmUtNHt0ZXh0LWRlY29yYXRpb246ZG90dGVkIHVuZGVybGluZX0ueHRlcm0tdW5kZXJsaW5lLTV7dGV4dC1kZWNvcmF0aW9uOmRhc2hlZCB1bmRlcmxpbmV9Lnh0ZXJtLXN0cmlrZXRocm91Z2h7dGV4dC1kZWNvcmF0aW9uOmxpbmUtdGhyb3VnaH0ueHRlcm0tc2NyZWVuIC54dGVybS1kZWNvcmF0aW9uLWNvbnRhaW5lciAueHRlcm0tZGVjb3JhdGlvbnt6LWluZGV4OjY7cG9zaXRpb246YWJzb2x1dGV9Lnh0ZXJtLWRlY29yYXRpb24tb3ZlcnZpZXctcnVsZXJ7ei1pbmRleDo3O3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7cG9pbnRlci1ldmVudHM6bm9uZX0ueHRlcm0tZGVjb3JhdGlvbi10b3B7ei1pbmRleDoyO3Bvc2l0aW9uOnJlbGF0aXZlfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL25vZGVfbW9kdWxlcy94dGVybS9jc3MveHRlcm0uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQXFDQSxPQUNJLFdBQUEsQ0FDQSxpQkFBQSxDQUNBLGdCQUFBLENBQ0Esb0JBQUEsQ0FDQSx3QkFBQSxDQUdKLDBCQUVJLFlBQUEsQ0FHSixzQkFDSSxpQkFBQSxDQUNBLEtBQUEsQ0FLQSxTQUFBLENBR0osOEJBQ0ksU0FBQSxDQUNBLFFBQUEsQ0FDQSxRQUFBLENBRUEsaUJBQUEsQ0FDQSxTQUFBLENBQ0EsWUFBQSxDQUNBLEtBQUEsQ0FDQSxPQUFBLENBQ0EsUUFBQSxDQUNBLFVBQUEsQ0FFQSxrQkFBQSxDQUNBLGVBQUEsQ0FDQSxXQUFBLENBR0oseUJBRUksZUFBQSxDQUNBLFVBQUEsQ0FDQSxZQUFBLENBQ0EsaUJBQUEsQ0FDQSxrQkFBQSxDQUNBLFNBQUEsQ0FHSixnQ0FDSSxhQUFBLENBR0osdUJBRUkscUJBQUEsQ0FDQSxpQkFBQSxDQUNBLGNBQUEsQ0FDQSxpQkFBQSxDQUNBLE9BQUEsQ0FDQSxNQUFBLENBQ0EsS0FBQSxDQUNBLFFBQUEsQ0FHSixxQkFDSSxpQkFBQSxDQUdKLDRCQUNJLGlCQUFBLENBQ0EsTUFBQSxDQUNBLEtBQUEsQ0FHSiwwQkFDSSxpQkFBQSxDQUdKLDRCQUNJLG9CQUFBLENBQ0EsaUJBQUEsQ0FDQSxpQkFBQSxDQUNBLEtBQUEsQ0FDQSxZQUFBLENBQ0Esa0JBQUEsQ0FHSiwyQkFFSSxjQUFBLENBR0oseURBRUksY0FBQSxDQUdKLDJCQUVJLGdCQUFBLENBR0osa0RBRUksaUJBQUEsQ0FDQSxNQUFBLENBQ0EsS0FBQSxDQUNBLFFBQUEsQ0FDQSxPQUFBLENBQ0EsVUFBQSxDQUNBLG1CQUFBLENBR0osb0JBQ0ksaUJBQUEsQ0FDQSxZQUFBLENBQ0EsU0FBQSxDQUNBLFVBQUEsQ0FDQSxlQUFBLENBR0osV0FDSSxVQUFBLENBR0osbUJBQUEseUJBQUEsQ0FDQSxtQkFBQSxnQ0FBQSxDQUNBLG1CQUFBLDhCQUFBLENBQ0EsbUJBQUEsZ0NBQUEsQ0FDQSxtQkFBQSxnQ0FBQSxDQUVBLHFCQUNJLDRCQUFBLENBR0osNERBQ0MsU0FBQSxDQUNBLGlCQUFBLENBR0QsaUNBQ0ksU0FBQSxDQUNBLGlCQUFBLENBQ0EsS0FBQSxDQUNBLE9BQUEsQ0FDQSxtQkFBQSxDQUdKLHNCQUNJLFNBQUEsQ0FDQSxpQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKipcXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQgVGhlIHh0ZXJtLmpzIGF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXFxuICogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTMsIENocmlzdG9waGVyIEplZmZyZXkgKE1JVCBMaWNlbnNlKVxcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL3Rlcm0uanNcXG4gKiBAbGljZW5zZSBNSVRcXG4gKlxcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcXG4gKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcXFwiU29mdHdhcmVcXFwiKSwgdG8gZGVhbFxcbiAqIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcXG4gKiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXFxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXFxuICogZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcXG4gKlxcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXFxuICogYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXFxuICpcXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXFxcIkFTIElTXFxcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxcbiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cXG4gKiBUSEUgU09GVFdBUkUuXFxuICpcXG4gKiBPcmlnaW5hbGx5IGZvcmtlZCBmcm9tICh3aXRoIHRoZSBhdXRob3IncyBwZXJtaXNzaW9uKTpcXG4gKiAgIEZhYnJpY2UgQmVsbGFyZCdzIGphdmFzY3JpcHQgdnQxMDAgZm9yIGpzbGludXg6XFxuICogICBodHRwOi8vYmVsbGFyZC5vcmcvanNsaW51eC9cXG4gKiAgIENvcHlyaWdodCAoYykgMjAxMSBGYWJyaWNlIEJlbGxhcmRcXG4gKiAgIFRoZSBvcmlnaW5hbCBkZXNpZ24gcmVtYWlucy4gVGhlIHRlcm1pbmFsIGl0c2VsZlxcbiAqICAgaGFzIGJlZW4gZXh0ZW5kZWQgdG8gaW5jbHVkZSB4dGVybSBDU0kgY29kZXMsIGFtb25nXFxuICogICBvdGhlciBmZWF0dXJlcy5cXG4gKi9cXG5cXG4vKipcXG4gKiAgRGVmYXVsdCBzdHlsZXMgZm9yIHh0ZXJtLmpzXFxuICovXFxuXFxuLnh0ZXJtIHtcXG4gICAgY3Vyc29yOiB0ZXh0O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcbiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcblxcbi54dGVybS5mb2N1cyxcXG4ueHRlcm06Zm9jdXMge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbn1cXG5cXG4ueHRlcm0gLnh0ZXJtLWhlbHBlcnMge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMDtcXG4gICAgLyoqXFxuICAgICAqIFRoZSB6LWluZGV4IG9mIHRoZSBoZWxwZXJzIG11c3QgYmUgaGlnaGVyIHRoYW4gdGhlIGNhbnZhc2VzIGluIG9yZGVyIGZvclxcbiAgICAgKiBJTUVzIHRvIGFwcGVhciBvbiB0b3AuXFxuICAgICAqL1xcbiAgICB6LWluZGV4OiA1O1xcbn1cXG5cXG4ueHRlcm0gLnh0ZXJtLWhlbHBlci10ZXh0YXJlYSB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJvcmRlcjogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICAvKiBNb3ZlIHRleHRhcmVhIG91dCBvZiB0aGUgc2NyZWVuIHRvIHRoZSBmYXIgbGVmdCwgc28gdGhhdCB0aGUgY3Vyc29yIGlzIG5vdCB2aXNpYmxlICovXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgbGVmdDogLTk5OTllbTtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMDtcXG4gICAgaGVpZ2h0OiAwO1xcbiAgICB6LWluZGV4OiAtNTtcXG4gICAgLyoqIFByZXZlbnQgd3JhcHBpbmcgc28gdGhlIElNRSBhcHBlYXJzIGFnYWluc3QgdGhlIHRleHRhcmVhIGF0IHRoZSBjb3JyZWN0IHBvc2l0aW9uICovXFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHJlc2l6ZTogbm9uZTtcXG59XFxuXFxuLnh0ZXJtIC5jb21wb3NpdGlvbi12aWV3IHtcXG4gICAgLyogVE9ETzogQ29tcG9zaXRpb24gcG9zaXRpb24gZ290IG1lc3NlZCB1cCBzb21ld2hlcmUgKi9cXG4gICAgYmFja2dyb3VuZDogIzAwMDtcXG4gICAgY29sb3I6ICNGRkY7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gICAgei1pbmRleDogMTtcXG59XFxuXFxuLnh0ZXJtIC5jb21wb3NpdGlvbi12aWV3LmFjdGl2ZSB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4ueHRlcm0gLnh0ZXJtLXZpZXdwb3J0IHtcXG4gICAgLyogT24gT1MgWCB0aGlzIGlzIHJlcXVpcmVkIGluIG9yZGVyIGZvciB0aGUgc2Nyb2xsIGJhciB0byBhcHBlYXIgZnVsbHkgb3BhcXVlICovXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XFxuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIGJvdHRvbTogMDtcXG59XFxuXFxuLnh0ZXJtIC54dGVybS1zY3JlZW4ge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi54dGVybSAueHRlcm0tc2NyZWVuIGNhbnZhcyB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbn1cXG5cXG4ueHRlcm0gLnh0ZXJtLXNjcm9sbC1hcmVhIHtcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4ueHRlcm0tY2hhci1tZWFzdXJlLWVsZW1lbnQge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0b3A6IDA7XFxuICAgIGxlZnQ6IC05OTk5ZW07XFxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxufVxcblxcbi54dGVybS5lbmFibGUtbW91c2UtZXZlbnRzIHtcXG4gICAgLyogV2hlbiBtb3VzZSBldmVudHMgYXJlIGVuYWJsZWQgKGVnLiB0bXV4KSwgcmV2ZXJ0IHRvIHRoZSBzdGFuZGFyZCBwb2ludGVyIGN1cnNvciAqL1xcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcblxcbi54dGVybS54dGVybS1jdXJzb3ItcG9pbnRlcixcXG4ueHRlcm0gLnh0ZXJtLWN1cnNvci1wb2ludGVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ueHRlcm0uY29sdW1uLXNlbGVjdC5mb2N1cyB7XFxuICAgIC8qIENvbHVtbiBzZWxlY3Rpb24gbW9kZSAqL1xcbiAgICBjdXJzb3I6IGNyb3NzaGFpcjtcXG59XFxuXFxuLnh0ZXJtIC54dGVybS1hY2Nlc3NpYmlsaXR5LFxcbi54dGVybSAueHRlcm0tbWVzc2FnZSB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB6LWluZGV4OiAxMDtcXG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4ueHRlcm0gLmxpdmUtcmVnaW9uIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAtOTk5OXB4O1xcbiAgICB3aWR0aDogMXB4O1xcbiAgICBoZWlnaHQ6IDFweDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLnh0ZXJtLWRpbSB7XFxuICAgIG9wYWNpdHk6IDAuNTtcXG59XFxuXFxuLnh0ZXJtLXVuZGVybGluZS0xIHsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cXG4ueHRlcm0tdW5kZXJsaW5lLTIgeyB0ZXh0LWRlY29yYXRpb246IGRvdWJsZSB1bmRlcmxpbmU7IH1cXG4ueHRlcm0tdW5kZXJsaW5lLTMgeyB0ZXh0LWRlY29yYXRpb246IHdhdnkgdW5kZXJsaW5lOyB9XFxuLnh0ZXJtLXVuZGVybGluZS00IHsgdGV4dC1kZWNvcmF0aW9uOiBkb3R0ZWQgdW5kZXJsaW5lOyB9XFxuLnh0ZXJtLXVuZGVybGluZS01IHsgdGV4dC1kZWNvcmF0aW9uOiBkYXNoZWQgdW5kZXJsaW5lOyB9XFxuXFxuLnh0ZXJtLXN0cmlrZXRocm91Z2gge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG59XFxuXFxuLnh0ZXJtLXNjcmVlbiAueHRlcm0tZGVjb3JhdGlvbi1jb250YWluZXIgLnh0ZXJtLWRlY29yYXRpb24ge1xcblxcdHotaW5kZXg6IDY7XFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcbn1cXG5cXG4ueHRlcm0tZGVjb3JhdGlvbi1vdmVydmlldy1ydWxlciB7XFxuICAgIHotaW5kZXg6IDc7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcblxcbi54dGVybS1kZWNvcmF0aW9uLXRvcCB7XFxuICAgIHotaW5kZXg6IDI7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnNvbC1oZWFkZXJ7ZGlzcGxheTpmbGV4fS5wb3dlci1vcHRpb25ze2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MSV9LnRlcm1pbmFse3RleHQtYWxpZ246bGVmdDtkaXNwbGF5OmJsb2NrfS50ZXJtaW5hbF94dGVybXtkaXNwbGF5OmlubGluZS1ibG9ja31cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvcmVhY3Rqcy9TZXJpYWxPdmVyTEFOL3NvbC5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUlBLFlBQ0MsWUFBQSxDQUVELGVBQ0MsYUFBQSxDQUNBLGlCQUFBLENBQ0EsUUFBQSxDQUVELFVBQ0MsZUFBQSxDQUNBLGFBQUEsQ0FFRCxnQkFDQyxvQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXFxuKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcXG4qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXFxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4uc29sLWhlYWRlciB7XFxuXFx0ZGlzcGxheTogZmxleDtcXG59XFxuLnBvd2VyLW9wdGlvbnMge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHRyaWdodDogMSU7XFxufVxcbi50ZXJtaW5hbCB7XFxuXFx0dGV4dC1hbGlnbjogbGVmdDtcXG5cXHRkaXNwbGF5OmJsb2NrO1xcbn1cXG4udGVybWluYWxfeHRlcm17XFxuXFx0ZGlzcGxheTppbmxpbmUtYmxvY2s7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxjYT1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHAoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9dmFyIGRhPW5ldyBTZXQsZWE9e307ZnVuY3Rpb24gZmEoYSxiKXtoYShhLGIpO2hhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBoYShhLGIpe2VhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKylkYS5hZGQoYlthXSl9XG52YXIgaWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGphPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksa2E9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxhPVxue30sbWE9e307ZnVuY3Rpb24gb2EoYSl7aWYoamEuY2FsbChtYSxhKSlyZXR1cm4hMDtpZihqYS5jYWxsKGxhLGEpKXJldHVybiExO2lmKGthLnRlc3QoYSkpcmV0dXJuIG1hW2FdPSEwO2xhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHBhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcWEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8cGEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgej17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTt6W2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIHJhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gc2EoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmEsXG5zYSk7eltiXT1uZXcgdihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLHNhKTt6W2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLHNhKTt6W2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG56LnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7elthXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiB0YShhLGIsYyxkKXt2YXIgZT16Lmhhc093blByb3BlcnR5KGIpP3pbYl06bnVsbDtpZihudWxsIT09ZT8wIT09ZS50eXBlOmR8fCEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXSlxYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2EoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpfVxudmFyIHVhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHZhPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLHdhPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIikseWE9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHphPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxBYT1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksQmE9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLENhPVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLERhPVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSxFYT1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIiksRmE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIiksR2E9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIiksSGE9U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik7U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5kZWJ1Z190cmFjZV9tb2RlXCIpO1xudmFyIElhPVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIik7U3ltYm9sLmZvcihcInJlYWN0LmxlZ2FjeV9oaWRkZW5cIik7U3ltYm9sLmZvcihcInJlYWN0LmNhY2hlXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC50cmFjaW5nX21hcmtlclwiKTt2YXIgSmE9U3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEthKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1KYSYmYVtKYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgQT1PYmplY3QuYXNzaWduLExhO2Z1bmN0aW9uIE1hKGEpe2lmKHZvaWQgMD09PUxhKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO0xhPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitMYSthfXZhciBOYT0hMTtcbmZ1bmN0aW9uIE9hKGEsYil7aWYoIWF8fE5hKXJldHVyblwiXCI7TmE9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGwpe3ZhciBkPWx9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChsKXtkPWx9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChsKXtkPWx9YSgpfX1jYXRjaChsKXtpZihsJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGwuc3RhY2spe2Zvcih2YXIgZT1sLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pe3ZhciBrPVwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7YS5kaXNwbGF5TmFtZSYmay5pbmNsdWRlcyhcIjxhbm9ueW1vdXM+XCIpJiYoaz1rLnJlcGxhY2UoXCI8YW5vbnltb3VzPlwiLGEuZGlzcGxheU5hbWUpKTtyZXR1cm4ga313aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7TmE9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9NYShhKTpcIlwifVxuZnVuY3Rpb24gUGEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE1hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTWEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE1hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTWEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPU9hKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPU9hKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPU9hKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gUWEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB5YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB3YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgQWE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgemE6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBFYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBGYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBDYTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSBCYTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBEYTp2YXIgYj1hLnJlbmRlcjthPWEuZGlzcGxheU5hbWU7YXx8KGE9Yi5kaXNwbGF5TmFtZXx8XG5iLm5hbWV8fFwiXCIsYT1cIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7cmV0dXJuIGE7Y2FzZSBHYTpyZXR1cm4gYj1hLmRpc3BsYXlOYW1lfHxudWxsLG51bGwhPT1iP2I6UWEoYS50eXBlKXx8XCJNZW1vXCI7Y2FzZSBIYTpiPWEuX3BheWxvYWQ7YT1hLl9pbml0O3RyeXtyZXR1cm4gUWEoYShiKSl9Y2F0Y2goYyl7fX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFJhKGEpe3ZhciBiPWEudHlwZTtzd2l0Y2goYS50YWcpe2Nhc2UgMjQ6cmV0dXJuXCJDYWNoZVwiO2Nhc2UgOTpyZXR1cm4oYi5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSAxMDpyZXR1cm4oYi5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSAxODpyZXR1cm5cIkRlaHlkcmF0ZWRGcmFnbWVudFwiO2Nhc2UgMTE6cmV0dXJuIGE9Yi5yZW5kZXIsYT1hLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiXCIsYi5kaXNwbGF5TmFtZXx8KFwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIithK1wiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIDc6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgNTpyZXR1cm4gYjtjYXNlIDQ6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIDM6cmV0dXJuXCJSb290XCI7Y2FzZSA2OnJldHVyblwiVGV4dFwiO2Nhc2UgMTY6cmV0dXJuIFFhKGIpO2Nhc2UgODpyZXR1cm4gYj09PXphP1wiU3RyaWN0TW9kZVwiOlwiTW9kZVwiO2Nhc2UgMjI6cmV0dXJuXCJPZmZzY3JlZW5cIjtcbmNhc2UgMTI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgMjE6cmV0dXJuXCJTY29wZVwiO2Nhc2UgMTM6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgMTk6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIjtjYXNlIDI1OnJldHVyblwiVHJhY2luZ01hcmtlclwiO2Nhc2UgMTpjYXNlIDA6Y2FzZSAxNzpjYXNlIDI6Y2FzZSAxNDpjYXNlIDE1OmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBiLmRpc3BsYXlOYW1lfHxiLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIFNhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtjYXNlIFwib2JqZWN0XCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gQSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBhYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnRhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBiYihhLGIpe2FiKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/Y2IoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmY2IoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBkYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIGViPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcihwKDkxKSk7cmV0dXJuIEEoe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IocCg5MikpO2lmKGViKGMpKXtpZigxPGMubGVuZ3RoKXRocm93IEVycm9yKHAoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfWZ1bmN0aW9uIGtiKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19XG5mdW5jdGlvbiBsYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/a2IoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbWIsbmI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiE9PWEubmFtZXNwYWNlVVJJfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bWI9bWJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bWIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bWIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gb2IoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBwYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYXNwZWN0UmF0aW86ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLFxuem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxxYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocGIpLmZvckVhY2goZnVuY3Rpb24oYSl7cWIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtwYltiXT1wYlthXX0pfSk7ZnVuY3Rpb24gcmIoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHBiLmhhc093blByb3BlcnR5KGEpJiZwYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBzYihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1yYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB0Yj1BKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdWIoYSxiKXtpZihiKXtpZih0YlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHAoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHAoNjApKTtpZihcIm9iamVjdFwiIT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8fCEoXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHAoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHAoNjIpKTt9fVxuZnVuY3Rpb24gdmIoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciB3Yj1udWxsO2Z1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XG5mdW5jdGlvbiBCYihhKXtpZihhPUNiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgeWIpdGhyb3cgRXJyb3IocCgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1EYihiKSx5YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBFYihhKXt6Yj9BYj9BYi5wdXNoKGEpOkFiPVthXTp6Yj1hfWZ1bmN0aW9uIEZiKCl7aWYoemIpe3ZhciBhPXpiLGI9QWI7QWI9emI9bnVsbDtCYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQmIoYlthXSl9fWZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoKXt9dmFyIEliPSExO2Z1bmN0aW9uIEpiKGEsYixjKXtpZihJYilyZXR1cm4gYShiLGMpO0liPSEwO3RyeXtyZXR1cm4gR2IoYSxiLGMpfWZpbmFsbHl7aWYoSWI9ITEsbnVsbCE9PXpifHxudWxsIT09QWIpSGIoKSxGYigpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9RGIoYyk7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGMpdGhyb3cgRXJyb3IocCgyMzEsYix0eXBlb2YgYykpO3JldHVybiBjfXZhciBMYj0hMTtpZihpYSl0cnl7dmFyIE1iPXt9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShNYixcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7TGI9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsTWIsTWIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLE1iLE1iKX1jYXRjaChhKXtMYj0hMX1mdW5jdGlvbiBOYihhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgT2I9ITEsUGI9bnVsbCxRYj0hMSxSYj1udWxsLFNiPXtvbkVycm9yOmZ1bmN0aW9uKGEpe09iPSEwO1BiPWF9fTtmdW5jdGlvbiBUYihhLGIsYyxkLGUsZixnLGgsayl7T2I9ITE7UGI9bnVsbDtOYi5hcHBseShTYixhcmd1bWVudHMpfVxuZnVuY3Rpb24gVWIoYSxiLGMsZCxlLGYsZyxoLGspe1RiLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihPYil7aWYoT2Ipe3ZhciBsPVBiO09iPSExO1BiPW51bGx9ZWxzZSB0aHJvdyBFcnJvcihwKDE5OCkpO1FifHwoUWI9ITAsUmI9bCl9fWZ1bmN0aW9uIFZiKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5mbGFncyY0MDk4KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gV2IoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBYYihhKXtpZihWYihhKSE9PWEpdGhyb3cgRXJyb3IocCgxODgpKTt9XG5mdW5jdGlvbiBZYihhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1WYihhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBYYihlKSxhO2lmKGY9PT1kKXJldHVybiBYYihlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHAoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IocCgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcihwKDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIFpiKGEpe2E9WWIoYSk7cmV0dXJuIG51bGwhPT1hPyRiKGEpOm51bGx9ZnVuY3Rpb24gJGIoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGE7Zm9yKGE9YS5jaGlsZDtudWxsIT09YTspe3ZhciBiPSRiKGEpO2lmKG51bGwhPT1iKXJldHVybiBiO2E9YS5zaWJsaW5nfXJldHVybiBudWxsfVxudmFyIGFjPWNhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssYmM9Y2EudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssY2M9Y2EudW5zdGFibGVfc2hvdWxkWWllbGQsZGM9Y2EudW5zdGFibGVfcmVxdWVzdFBhaW50LEI9Y2EudW5zdGFibGVfbm93LGVjPWNhLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLGZjPWNhLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGdjPWNhLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGhjPWNhLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LGljPWNhLnVuc3RhYmxlX0xvd1ByaW9yaXR5LGpjPWNhLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxrYz1udWxsLGxjPW51bGw7ZnVuY3Rpb24gbWMoYSl7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7bGMub25Db21taXRGaWJlclJvb3Qoa2MsYSx2b2lkIDAsMTI4PT09KGEuY3VycmVudC5mbGFncyYxMjgpKX1jYXRjaChiKXt9fVxudmFyIG9jPU1hdGguY2x6MzI/TWF0aC5jbHozMjpuYyxwYz1NYXRoLmxvZyxxYz1NYXRoLkxOMjtmdW5jdGlvbiBuYyhhKXthPj4+PTA7cmV0dXJuIDA9PT1hPzMyOjMxLShwYyhhKS9xY3wwKXwwfXZhciByYz02NCxzYz00MTk0MzA0O1xuZnVuY3Rpb24gdGMoYSl7c3dpdGNoKGEmLWEpe2Nhc2UgMTpyZXR1cm4gMTtjYXNlIDI6cmV0dXJuIDI7Y2FzZSA0OnJldHVybiA0O2Nhc2UgODpyZXR1cm4gODtjYXNlIDE2OnJldHVybiAxNjtjYXNlIDMyOnJldHVybiAzMjtjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOnJldHVybiBhJjQxOTQyNDA7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4gYSYxMzAwMjM0MjQ7Y2FzZSAxMzQyMTc3Mjg6cmV0dXJuIDEzNDIxNzcyODtjYXNlIDI2ODQzNTQ1NjpyZXR1cm4gMjY4NDM1NDU2O2Nhc2UgNTM2ODcwOTEyOnJldHVybiA1MzY4NzA5MTI7Y2FzZSAxMDczNzQxODI0OnJldHVybiAxMDczNzQxODI0O1xuZGVmYXVsdDpyZXR1cm4gYX19ZnVuY3Rpb24gdWMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gMDt2YXIgZD0wLGU9YS5zdXNwZW5kZWRMYW5lcyxmPWEucGluZ2VkTGFuZXMsZz1jJjI2ODQzNTQ1NTtpZigwIT09Zyl7dmFyIGg9ZyZ+ZTswIT09aD9kPXRjKGgpOihmJj1nLDAhPT1mJiYoZD10YyhmKSkpfWVsc2UgZz1jJn5lLDAhPT1nP2Q9dGMoZyk6MCE9PWYmJihkPXRjKGYpKTtpZigwPT09ZClyZXR1cm4gMDtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZlKSYmKGU9ZCYtZCxmPWImLWIsZT49Znx8MTY9PT1lJiYwIT09KGYmNDE5NDI0MCkpKXJldHVybiBiOzAhPT0oZCY0KSYmKGR8PWMmMTYpO2I9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtb2MoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiB2YyhhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgNDpyZXR1cm4gYisyNTA7Y2FzZSA4OmNhc2UgMTY6Y2FzZSAzMjpjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOnJldHVybiBiKzVFMztjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OnJldHVybi0xO2Nhc2UgMTM0MjE3NzI4OmNhc2UgMjY4NDM1NDU2OmNhc2UgNTM2ODcwOTEyOmNhc2UgMTA3Mzc0MTgyNDpyZXR1cm4tMTtkZWZhdWx0OnJldHVybi0xfX1cbmZ1bmN0aW9uIHdjKGEsYil7Zm9yKHZhciBjPWEuc3VzcGVuZGVkTGFuZXMsZD1hLnBpbmdlZExhbmVzLGU9YS5leHBpcmF0aW9uVGltZXMsZj1hLnBlbmRpbmdMYW5lczswPGY7KXt2YXIgZz0zMS1vYyhmKSxoPTE8PGcsaz1lW2ddO2lmKC0xPT09ayl7aWYoMD09PShoJmMpfHwwIT09KGgmZCkpZVtnXT12YyhoLGIpfWVsc2Ugazw9YiYmKGEuZXhwaXJlZExhbmVzfD1oKTtmJj1+aH19ZnVuY3Rpb24geGMoYSl7YT1hLnBlbmRpbmdMYW5lcyYtMTA3Mzc0MTgyNTtyZXR1cm4gMCE9PWE/YTphJjEwNzM3NDE4MjQ/MTA3Mzc0MTgyNDowfWZ1bmN0aW9uIHljKCl7dmFyIGE9cmM7cmM8PD0xOzA9PT0ocmMmNDE5NDI0MCkmJihyYz02NCk7cmV0dXJuIGF9ZnVuY3Rpb24gemMoYSl7Zm9yKHZhciBiPVtdLGM9MDszMT5jO2MrKyliLnB1c2goYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBBYyhhLGIsYyl7YS5wZW5kaW5nTGFuZXN8PWI7NTM2ODcwOTEyIT09YiYmKGEuc3VzcGVuZGVkTGFuZXM9MCxhLnBpbmdlZExhbmVzPTApO2E9YS5ldmVudFRpbWVzO2I9MzEtb2MoYik7YVtiXT1jfWZ1bmN0aW9uIEJjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXMmfmI7YS5wZW5kaW5nTGFuZXM9YjthLnN1c3BlbmRlZExhbmVzPTA7YS5waW5nZWRMYW5lcz0wO2EuZXhwaXJlZExhbmVzJj1iO2EubXV0YWJsZVJlYWRMYW5lcyY9YjthLmVudGFuZ2xlZExhbmVzJj1iO2I9YS5lbnRhbmdsZW1lbnRzO3ZhciBkPWEuZXZlbnRUaW1lcztmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGM7KXt2YXIgZT0zMS1vYyhjKSxmPTE8PGU7YltlXT0wO2RbZV09LTE7YVtlXT0tMTtjJj1+Zn19XG5mdW5jdGlvbiBDYyhhLGIpe3ZhciBjPWEuZW50YW5nbGVkTGFuZXN8PWI7Zm9yKGE9YS5lbnRhbmdsZW1lbnRzO2M7KXt2YXIgZD0zMS1vYyhjKSxlPTE8PGQ7ZSZifGFbZF0mYiYmKGFbZF18PWIpO2MmPX5lfX12YXIgQz0wO2Z1bmN0aW9uIERjKGEpe2EmPS1hO3JldHVybiAxPGE/NDxhPzAhPT0oYSYyNjg0MzU0NTUpPzE2OjUzNjg3MDkxMjo0OjF9dmFyIEVjLEZjLEdjLEhjLEljLEpjPSExLEtjPVtdLExjPW51bGwsTWM9bnVsbCxOYz1udWxsLE9jPW5ldyBNYXAsUGM9bmV3IE1hcCxRYz1bXSxSYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBTYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOkxjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpNYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpOYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6T2MuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6UGMuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiBUYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXtibG9ja2VkT246Yixkb21FdmVudE5hbWU6YyxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Zix0YXJnZXRDb250YWluZXJzOltlXX0sbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZGYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBVYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBMYz1UYyhMYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gTWM9VGMoTWMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIE5jPVRjKE5jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7T2Muc2V0KGYsVGMoT2MuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLFBjLnNldChmLFRjKFBjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFZjKGEpe3ZhciBiPVdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9VmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9V2IoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7SWMoYS5wcmlvcml0eSxmdW5jdGlvbigpe0djKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1cbmZ1bmN0aW9uIFhjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTtmb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz1ZYyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsPT09Yyl7Yz1hLm5hdGl2ZUV2ZW50O3ZhciBkPW5ldyBjLmNvbnN0cnVjdG9yKGMudHlwZSxjKTt3Yj1kO2MudGFyZ2V0LmRpc3BhdGNoRXZlbnQoZCk7d2I9bnVsbH1lbHNlIHJldHVybiBiPUNiKGMpLG51bGwhPT1iJiZGYyhiKSxhLmJsb2NrZWRPbj1jLCExO2Iuc2hpZnQoKX1yZXR1cm4hMH1mdW5jdGlvbiBaYyhhLGIsYyl7WGMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uICRjKCl7SmM9ITE7bnVsbCE9PUxjJiZYYyhMYykmJihMYz1udWxsKTtudWxsIT09TWMmJlhjKE1jKSYmKE1jPW51bGwpO251bGwhPT1OYyYmWGMoTmMpJiYoTmM9bnVsbCk7T2MuZm9yRWFjaChaYyk7UGMuZm9yRWFjaChaYyl9XG5mdW5jdGlvbiBhZChhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsSmN8fChKYz0hMCxjYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKGNhLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LCRjKSkpfVxuZnVuY3Rpb24gYmQoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gYWQoYixhKX1pZigwPEtjLmxlbmd0aCl7YWQoS2NbMF0sYSk7Zm9yKHZhciBjPTE7YzxLYy5sZW5ndGg7YysrKXt2YXIgZD1LY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUxjJiZhZChMYyxhKTtudWxsIT09TWMmJmFkKE1jLGEpO251bGwhPT1OYyYmYWQoTmMsYSk7T2MuZm9yRWFjaChiKTtQYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxRYy5sZW5ndGg7YysrKWQ9UWNbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPFFjLmxlbmd0aCYmKGM9UWNbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspVmMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZRYy5zaGlmdCgpfXZhciBjZD11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxkZD0hMDtcbmZ1bmN0aW9uIGVkKGEsYixjLGQpe3ZhciBlPUMsZj1jZC50cmFuc2l0aW9uO2NkLnRyYW5zaXRpb249bnVsbDt0cnl7Qz0xLGZkKGEsYixjLGQpfWZpbmFsbHl7Qz1lLGNkLnRyYW5zaXRpb249Zn19ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7dmFyIGU9QyxmPWNkLnRyYW5zaXRpb247Y2QudHJhbnNpdGlvbj1udWxsO3RyeXtDPTQsZmQoYSxiLGMsZCl9ZmluYWxseXtDPWUsY2QudHJhbnNpdGlvbj1mfX1cbmZ1bmN0aW9uIGZkKGEsYixjLGQpe2lmKGRkKXt2YXIgZT1ZYyhhLGIsYyxkKTtpZihudWxsPT09ZSloZChhLGIsZCxpZCxjKSxTYyhhLGQpO2Vsc2UgaWYoVWMoZSxhLGIsYyxkKSlkLnN0b3BQcm9wYWdhdGlvbigpO2Vsc2UgaWYoU2MoYSxkKSxiJjQmJi0xPFJjLmluZGV4T2YoYSkpe2Zvcig7bnVsbCE9PWU7KXt2YXIgZj1DYihlKTtudWxsIT09ZiYmRWMoZik7Zj1ZYyhhLGIsYyxkKTtudWxsPT09ZiYmaGQoYSxiLGQsaWQsYyk7aWYoZj09PWUpYnJlYWs7ZT1mfW51bGwhPT1lJiZkLnN0b3BQcm9wYWdhdGlvbigpfWVsc2UgaGQoYSxiLGQsbnVsbCxjKX19dmFyIGlkPW51bGw7XG5mdW5jdGlvbiBZYyhhLGIsYyxkKXtpZD1udWxsO2E9eGIoZCk7YT1XYyhhKTtpZihudWxsIT09YSlpZihiPVZiKGEpLG51bGw9PT1iKWE9bnVsbDtlbHNlIGlmKGM9Yi50YWcsMTM9PT1jKXthPVdiKGIpO2lmKG51bGwhPT1hKXJldHVybiBhO2E9bnVsbH1lbHNlIGlmKDM9PT1jKXtpZihiLnN0YXRlTm9kZS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXJldHVybiAzPT09Yi50YWc/Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2E9bnVsbH1lbHNlIGIhPT1hJiYoYT1udWxsKTtpZD1hO3JldHVybiBudWxsfVxuZnVuY3Rpb24gamQoYSl7c3dpdGNoKGEpe2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xpY2tcIjpjYXNlIFwiY2xvc2VcIjpjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmNhc2UgXCJmb2N1c2luXCI6Y2FzZSBcImZvY3Vzb3V0XCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcImludmFsaWRcIjpjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJrZXl1cFwiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJwYXN0ZVwiOmNhc2UgXCJwYXVzZVwiOmNhc2UgXCJwbGF5XCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcnVwXCI6Y2FzZSBcInJhdGVjaGFuZ2VcIjpjYXNlIFwicmVzZXRcIjpjYXNlIFwicmVzaXplXCI6Y2FzZSBcInNlZWtlZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2hzdGFydFwiOmNhc2UgXCJ2b2x1bWVjaGFuZ2VcIjpjYXNlIFwiY2hhbmdlXCI6Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmNhc2UgXCJ0ZXh0SW5wdXRcIjpjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmNhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmNhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmNhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOmNhc2UgXCJiZWZvcmVpbnB1dFwiOmNhc2UgXCJibHVyXCI6Y2FzZSBcImZ1bGxzY3JlZW5jaGFuZ2VcIjpjYXNlIFwiZm9jdXNcIjpjYXNlIFwiaGFzaGNoYW5nZVwiOmNhc2UgXCJwb3BzdGF0ZVwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwic2VsZWN0c3RhcnRcIjpyZXR1cm4gMTtjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJzY3JvbGxcIjpjYXNlIFwidG9nZ2xlXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ3aGVlbFwiOmNhc2UgXCJtb3VzZWVudGVyXCI6Y2FzZSBcIm1vdXNlbGVhdmVcIjpjYXNlIFwicG9pbnRlcmVudGVyXCI6Y2FzZSBcInBvaW50ZXJsZWF2ZVwiOnJldHVybiA0O1xuY2FzZSBcIm1lc3NhZ2VcIjpzd2l0Y2goZWMoKSl7Y2FzZSBmYzpyZXR1cm4gMTtjYXNlIGdjOnJldHVybiA0O2Nhc2UgaGM6Y2FzZSBpYzpyZXR1cm4gMTY7Y2FzZSBqYzpyZXR1cm4gNTM2ODcwOTEyO2RlZmF1bHQ6cmV0dXJuIDE2fWRlZmF1bHQ6cmV0dXJuIDE2fX12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7ZnVuY3Rpb24gbmQoKXtpZihtZClyZXR1cm4gbWQ7dmFyIGEsYj1sZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBtZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfVxuZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31BKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1BKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9QSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9QSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9QSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPUEoe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1BKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPUEoe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1BKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPUEoe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPUEoe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1BKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1BKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1pYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtpYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9aWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1pYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihpYSl7dmFyIHhlO2lmKGlhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7SmIocmUsYil9fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2U7XG5mdW5jdGlvbiBJZShhLGIpe2lmKEhlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTtpZighamEuY2FsbChiLGUpfHwhSGUoYVtlXSxiW2VdKSlyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBKZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBLZShhLGIpe3ZhciBjPUplKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUplKGMpfX1mdW5jdGlvbiBMZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP0xlKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE1lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE5lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG5mdW5jdGlvbiBPZShhKXt2YXIgYj1NZSgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTGUoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk5lKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUtlKGMsZik7dmFyIGc9S2UoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBQZT1pYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmTmUoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSWUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuZnVuY3Rpb24gVmUoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgV2U9e2FuaW1hdGlvbmVuZDpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlZlKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlZlKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sWGU9e30sWWU9e307XG5pYSYmKFllPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFdlLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFdlLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFdlLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFdlLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWmUoYSl7aWYoWGVbYV0pcmV0dXJuIFhlW2FdO2lmKCFXZVthXSlyZXR1cm4gYTt2YXIgYj1XZVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBZZSlyZXR1cm4gWGVbYV09YltjXTtyZXR1cm4gYX12YXIgJGU9WmUoXCJhbmltYXRpb25lbmRcIiksYWY9WmUoXCJhbmltYXRpb25pdGVyYXRpb25cIiksYmY9WmUoXCJhbmltYXRpb25zdGFydFwiKSxjZj1aZShcInRyYW5zaXRpb25lbmRcIiksZGY9bmV3IE1hcCxlZj1cImFib3J0IGF1eENsaWNrIGNhbmNlbCBjYW5QbGF5IGNhblBsYXlUaHJvdWdoIGNsaWNrIGNsb3NlIGNvbnRleHRNZW51IGNvcHkgY3V0IGRyYWcgZHJhZ0VuZCBkcmFnRW50ZXIgZHJhZ0V4aXQgZHJhZ0xlYXZlIGRyYWdPdmVyIGRyYWdTdGFydCBkcm9wIGR1cmF0aW9uQ2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGdvdFBvaW50ZXJDYXB0dXJlIGlucHV0IGludmFsaWQga2V5RG93biBrZXlQcmVzcyBrZXlVcCBsb2FkIGxvYWRlZERhdGEgbG9hZGVkTWV0YWRhdGEgbG9hZFN0YXJ0IGxvc3RQb2ludGVyQ2FwdHVyZSBtb3VzZURvd24gbW91c2VNb3ZlIG1vdXNlT3V0IG1vdXNlT3ZlciBtb3VzZVVwIHBhc3RlIHBhdXNlIHBsYXkgcGxheWluZyBwb2ludGVyQ2FuY2VsIHBvaW50ZXJEb3duIHBvaW50ZXJNb3ZlIHBvaW50ZXJPdXQgcG9pbnRlck92ZXIgcG9pbnRlclVwIHByb2dyZXNzIHJhdGVDaGFuZ2UgcmVzZXQgcmVzaXplIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VibWl0IHN1c3BlbmQgdGltZVVwZGF0ZSB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaFN0YXJ0IHZvbHVtZUNoYW5nZSBzY3JvbGwgdG9nZ2xlIHRvdWNoTW92ZSB3YWl0aW5nIHdoZWVsXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gZmYoYSxiKXtkZi5zZXQoYSxiKTtmYShiLFthXSl9Zm9yKHZhciBnZj0wO2dmPGVmLmxlbmd0aDtnZisrKXt2YXIgaGY9ZWZbZ2ZdLGpmPWhmLnRvTG93ZXJDYXNlKCksa2Y9aGZbMF0udG9VcHBlckNhc2UoKStoZi5zbGljZSgxKTtmZihqZixcIm9uXCIra2YpfWZmKCRlLFwib25BbmltYXRpb25FbmRcIik7ZmYoYWYsXCJvbkFuaW1hdGlvbkl0ZXJhdGlvblwiKTtmZihiZixcIm9uQW5pbWF0aW9uU3RhcnRcIik7ZmYoXCJkYmxjbGlja1wiLFwib25Eb3VibGVDbGlja1wiKTtmZihcImZvY3VzaW5cIixcIm9uRm9jdXNcIik7ZmYoXCJmb2N1c291dFwiLFwib25CbHVyXCIpO2ZmKGNmLFwib25UcmFuc2l0aW9uRW5kXCIpO2hhKFwib25Nb3VzZUVudGVyXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7aGEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtoYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO1xuaGEoXCJvblBvaW50ZXJMZWF2ZVwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtmYShcIm9uQ2hhbmdlXCIsXCJjaGFuZ2UgY2xpY2sgZm9jdXNpbiBmb2N1c291dCBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvblNlbGVjdFwiLFwiZm9jdXNvdXQgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1c2luIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uQmVmb3JlSW5wdXRcIixbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl0pO2ZhKFwib25Db21wb3NpdGlvbkVuZFwiLFwiY29tcG9zaXRpb25lbmQgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO2ZhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmZhKFwib25Db21wb3NpdGlvblVwZGF0ZVwiLFwiY29tcG9zaXRpb251cGRhdGUgZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIikpO3ZhciBsZj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2UgcmVzaXplIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLG1mPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KGxmKSk7XG5mdW5jdGlvbiBuZihhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztVYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtuZihlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO25mKGUsaCxsKTtmPWt9fX1pZihRYil0aHJvdyBhPVJiLFFiPSExLFJiPW51bGwsYTt9XG5mdW5jdGlvbiBEKGEsYil7dmFyIGM9YltvZl07dm9pZCAwPT09YyYmKGM9YltvZl09bmV3IFNldCk7dmFyIGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChwZihiLGEsMiwhMSksYy5hZGQoZCkpfWZ1bmN0aW9uIHFmKGEsYixjKXt2YXIgZD0wO2ImJihkfD00KTtwZihjLGEsZCxiKX12YXIgcmY9XCJfcmVhY3RMaXN0ZW5pbmdcIitNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTtmdW5jdGlvbiBzZihhKXtpZighYVtyZl0pe2FbcmZdPSEwO2RhLmZvckVhY2goZnVuY3Rpb24oYil7XCJzZWxlY3Rpb25jaGFuZ2VcIiE9PWImJihtZi5oYXMoYil8fHFmKGIsITEsYSkscWYoYiwhMCxhKSl9KTt2YXIgYj05PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDtudWxsPT09Ynx8YltyZl18fChiW3JmXT0hMCxxZihcInNlbGVjdGlvbmNoYW5nZVwiLCExLGIpKX19XG5mdW5jdGlvbiBwZihhLGIsYyxkKXtzd2l0Y2goamQoYikpe2Nhc2UgMTp2YXIgZT1lZDticmVhaztjYXNlIDQ6ZT1nZDticmVhaztkZWZhdWx0OmU9ZmR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IUxifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9V2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufUpiKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XG5hOnt2YXIgaD1kZi5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9dGQsbj1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2QoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9UmQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjpuPVwiZm9jdXNcIjtrPUZkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOm49XCJibHVyXCI7az1GZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUZkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az1CZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxuRGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1WZDticmVhaztjYXNlICRlOmNhc2UgYWY6Y2FzZSBiZjprPUhkO2JyZWFrO2Nhc2UgY2Y6az1YZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az12ZDticmVhaztjYXNlIFwid2hlZWxcIjprPVpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9SmQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1UZH12YXIgdD0wIT09KGImNCksSj0hdCYmXCJzY3JvbGxcIj09PWEseD10P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3Q9W107Zm9yKHZhciB3PWQsdTtudWxsIT09XG53Oyl7dT13O3ZhciBGPXUuc3RhdGVOb2RlOzU9PT11LnRhZyYmbnVsbCE9PUYmJih1PUYsbnVsbCE9PXgmJihGPUtiKHcseCksbnVsbCE9RiYmdC5wdXNoKHRmKHcsRix1KSkpKTtpZihKKWJyZWFrO3c9dy5yZXR1cm59MDx0Lmxlbmd0aCYmKGg9bmV3IGsoaCxuLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnR9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiZjIT09d2ImJihuPWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJihXYyhuKXx8blt1Zl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZihuPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLG49bj9XYyhuKTpudWxsLG51bGwhPT1cbm4mJihKPVZiKG4pLG4hPT1KfHw1IT09bi50YWcmJjYhPT1uLnRhZykpbj1udWxsfWVsc2Ugaz1udWxsLG49ZDtpZihrIT09bil7dD1CZDtGPVwib25Nb3VzZUxlYXZlXCI7eD1cIm9uTW91c2VFbnRlclwiO3c9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl0PVRkLEY9XCJvblBvaW50ZXJMZWF2ZVwiLHg9XCJvblBvaW50ZXJFbnRlclwiLHc9XCJwb2ludGVyXCI7Sj1udWxsPT1rP2g6dWUoayk7dT1udWxsPT1uP2g6dWUobik7aD1uZXcgdChGLHcrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD1KO2gucmVsYXRlZFRhcmdldD11O0Y9bnVsbDtXYyhlKT09PWQmJih0PW5ldyB0KHgsdytcImVudGVyXCIsbixjLGUpLHQudGFyZ2V0PXUsdC5yZWxhdGVkVGFyZ2V0PUosRj10KTtKPUY7aWYoayYmbiliOnt0PWs7eD1uO3c9MDtmb3IodT10O3U7dT12Zih1KSl3Kys7dT0wO2ZvcihGPXg7RjtGPXZmKEYpKXUrKztmb3IoOzA8dy11Oyl0PXZmKHQpLHctLTtmb3IoOzA8dS13Oyl4PVxudmYoeCksdS0tO2Zvcig7dy0tOyl7aWYodD09PXh8fG51bGwhPT14JiZ0PT09eC5hbHRlcm5hdGUpYnJlYWsgYjt0PXZmKHQpO3g9dmYoeCl9dD1udWxsfWVsc2UgdD1udWxsO251bGwhPT1rJiZ3ZihnLGgsayx0LCExKTtudWxsIT09biYmbnVsbCE9PUomJndmKGcsSixuLHQsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIG5hPXZlO2Vsc2UgaWYobWUoaCkpaWYod2UpbmE9RmU7ZWxzZXtuYT1EZTt2YXIgeGE9Q2V9ZWxzZShrPWgubm9kZU5hbWUpJiZcImlucHV0XCI9PT1rLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1oLnR5cGV8fFwicmFkaW9cIj09PWgudHlwZSkmJihuYT1FZSk7aWYobmEmJihuYT1uYShhLGQpKSl7bmUoZyxuYSxjLGUpO2JyZWFrIGF9eGEmJnhhKGEsaCxkKTtcImZvY3Vzb3V0XCI9PT1hJiYoeGE9aC5fd3JhcHBlclN0YXRlKSYmXG54YS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZjYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9eGE9ZD91ZShkKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c2luXCI6aWYobWUoeGEpfHxcInRydWVcIj09PXhhLmNvbnRlbnRFZGl0YWJsZSlRZT14YSxSZT1kLFNlPW51bGw7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6U2U9UmU9UWU9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6VGU9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOlRlPSExO1VlKGcsYyxlKTticmVhaztjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUGUpYnJlYWs7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpVZShnLGMsZSl9dmFyICRhO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBiYT1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6YmE9XCJvbkNvbXBvc2l0aW9uRW5kXCI7XG5icmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmJhPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9YmE9dm9pZCAwfWVsc2UgaWU/Z2UoYSxjKSYmKGJhPVwib25Db21wb3NpdGlvbkVuZFwiKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGJhPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO2JhJiYoZGUmJlwia29cIiE9PWMubG9jYWxlJiYoaWV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1iYT9cIm9uQ29tcG9zaXRpb25FbmRcIj09PWJhJiZpZSYmKCRhPW5kKCkpOihrZD1lLGxkPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGllPSEwKSkseGE9b2UoZCxiYSksMDx4YS5sZW5ndGgmJihiYT1uZXcgTGQoYmEsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpiYSxsaXN0ZW5lcnM6eGF9KSwkYT9iYS5kYXRhPSRhOigkYT1oZShjKSxudWxsIT09JGEmJihiYS5kYXRhPSRhKSkpKTtpZigkYT1jZT9qZShhLGMpOmtlKGEsYykpZD1vZShkLFwib25CZWZvcmVJbnB1dFwiKSxcbjA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT0kYSl9c2UoZyxiKX0pfWZ1bmN0aW9uIHRmKGEsYixjKXtyZXR1cm57aW5zdGFuY2U6YSxsaXN0ZW5lcjpiLGN1cnJlbnRUYXJnZXQ6Y319ZnVuY3Rpb24gb2UoYSxiKXtmb3IodmFyIGM9YitcIkNhcHR1cmVcIixkPVtdO251bGwhPT1hOyl7dmFyIGU9YSxmPWUuc3RhdGVOb2RlOzU9PT1lLnRhZyYmbnVsbCE9PWYmJihlPWYsZj1LYihhLGMpLG51bGwhPWYmJmQudW5zaGlmdCh0ZihhLGYsZSkpLGY9S2IoYSxiKSxudWxsIT1mJiZkLnB1c2godGYoYSxmLGUpKSk7YT1hLnJldHVybn1yZXR1cm4gZH1mdW5jdGlvbiB2ZihhKXtpZihudWxsPT09YSlyZXR1cm4gbnVsbDtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gd2YoYSxiLGMsZCxlKXtmb3IodmFyIGY9Yi5fcmVhY3ROYW1lLGc9W107bnVsbCE9PWMmJmMhPT1kOyl7dmFyIGg9YyxrPWguYWx0ZXJuYXRlLGw9aC5zdGF0ZU5vZGU7aWYobnVsbCE9PWsmJms9PT1kKWJyZWFrOzU9PT1oLnRhZyYmbnVsbCE9PWwmJihoPWwsZT8oaz1LYihjLGYpLG51bGwhPWsmJmcudW5zaGlmdCh0ZihjLGssaCkpKTplfHwoaz1LYihjLGYpLG51bGwhPWsmJmcucHVzaCh0ZihjLGssaCkpKSk7Yz1jLnJldHVybn0wIT09Zy5sZW5ndGgmJmEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6Z30pfXZhciB4Zj0vXFxyXFxuPy9nLHlmPS9cXHUwMDAwfFxcdUZGRkQvZztmdW5jdGlvbiB6ZihhKXtyZXR1cm4oXCJzdHJpbmdcIj09PXR5cGVvZiBhP2E6XCJcIithKS5yZXBsYWNlKHhmLFwiXFxuXCIpLnJlcGxhY2UoeWYsXCJcIil9ZnVuY3Rpb24gQWYoYSxiLGMpe2I9emYoYik7aWYoemYoYSkhPT1iJiZjKXRocm93IEVycm9yKHAoNDI1KSk7fWZ1bmN0aW9uIEJmKCl7fVxudmFyIENmPW51bGwsRGY9bnVsbDtmdW5jdGlvbiBFZihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH1cbnZhciBGZj1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxHZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsSGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIFByb21pc2U/UHJvbWlzZTp2b2lkIDAsSmY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHF1ZXVlTWljcm90YXNrP3F1ZXVlTWljcm90YXNrOlwidW5kZWZpbmVkXCIhPT10eXBlb2YgSGY/ZnVuY3Rpb24oYSl7cmV0dXJuIEhmLnJlc29sdmUobnVsbCkudGhlbihhKS5jYXRjaChJZil9OkZmO2Z1bmN0aW9uIElmKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBhO30pfVxuZnVuY3Rpb24gS2YoYSxiKXt2YXIgYz1iLGQ9MDtkb3t2YXIgZT1jLm5leHRTaWJsaW5nO2EucmVtb3ZlQ2hpbGQoYyk7aWYoZSYmOD09PWUubm9kZVR5cGUpaWYoYz1lLmRhdGEsXCIvJFwiPT09Yyl7aWYoMD09PWQpe2EucmVtb3ZlQ2hpbGQoZSk7YmQoYik7cmV0dXJufWQtLX1lbHNlXCIkXCIhPT1jJiZcIiQ/XCIhPT1jJiZcIiQhXCIhPT1jfHxkKys7Yz1lfXdoaWxlKGMpO2JkKGIpfWZ1bmN0aW9uIExmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrO2lmKDg9PT1iKXtiPWEuZGF0YTtpZihcIiRcIj09PWJ8fFwiJCFcIj09PWJ8fFwiJD9cIj09PWIpYnJlYWs7aWYoXCIvJFwiPT09YilyZXR1cm4gbnVsbH19cmV0dXJuIGF9XG5mdW5jdGlvbiBNZihhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiJFwiPT09Y3x8XCIkIVwiPT09Y3x8XCIkP1wiPT09Yyl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2VcIi8kXCI9PT1jJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTmY9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksT2Y9XCJfX3JlYWN0RmliZXIkXCIrTmYsUGY9XCJfX3JlYWN0UHJvcHMkXCIrTmYsdWY9XCJfX3JlYWN0Q29udGFpbmVyJFwiK05mLG9mPVwiX19yZWFjdEV2ZW50cyRcIitOZixRZj1cIl9fcmVhY3RMaXN0ZW5lcnMkXCIrTmYsUmY9XCJfX3JlYWN0SGFuZGxlcyRcIitOZjtcbmZ1bmN0aW9uIFdjKGEpe3ZhciBiPWFbT2ZdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW3VmXXx8Y1tPZl0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1NZihhKTtudWxsIT09YTspe2lmKGM9YVtPZl0pcmV0dXJuIGM7YT1NZihhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2IoYSl7YT1hW09mXXx8YVt1Zl07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHVlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcihwKDMzKSk7fWZ1bmN0aW9uIERiKGEpe3JldHVybiBhW1BmXXx8bnVsbH12YXIgU2Y9W10sVGY9LTE7ZnVuY3Rpb24gVWYoYSl7cmV0dXJue2N1cnJlbnQ6YX19XG5mdW5jdGlvbiBFKGEpezA+VGZ8fChhLmN1cnJlbnQ9U2ZbVGZdLFNmW1RmXT1udWxsLFRmLS0pfWZ1bmN0aW9uIEcoYSxiKXtUZisrO1NmW1RmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIFZmPXt9LEg9VWYoVmYpLFdmPVVmKCExKSxYZj1WZjtmdW5jdGlvbiBZZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIFZmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfVxuZnVuY3Rpb24gWmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiAkZigpe0UoV2YpO0UoSCl9ZnVuY3Rpb24gYWcoYSxiLGMpe2lmKEguY3VycmVudCE9PVZmKXRocm93IEVycm9yKHAoMTY4KSk7RyhILGIpO0coV2YsYyl9ZnVuY3Rpb24gYmcoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2I9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBiKSl0aHJvdyBFcnJvcihwKDEwOCxSYShhKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBBKHt9LGMsZCl9XG5mdW5jdGlvbiBjZyhhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8VmY7WGY9SC5jdXJyZW50O0coSCxhKTtHKFdmLFdmLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIGRnKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcihwKDE2OSkpO2M/KGE9YmcoYSxiLFhmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsRShXZiksRShIKSxHKEgsYSkpOkUoV2YpO0coV2YsYyl9dmFyIGVnPW51bGwsZmc9ITEsZ2c9ITE7ZnVuY3Rpb24gaGcoYSl7bnVsbD09PWVnP2VnPVthXTplZy5wdXNoKGEpfWZ1bmN0aW9uIGlnKGEpe2ZnPSEwO2hnKGEpfVxuZnVuY3Rpb24gamcoKXtpZighZ2cmJm51bGwhPT1lZyl7Z2c9ITA7dmFyIGE9MCxiPUM7dHJ5e3ZhciBjPWVnO2ZvcihDPTE7YTxjLmxlbmd0aDthKyspe3ZhciBkPWNbYV07ZG8gZD1kKCEwKTt3aGlsZShudWxsIT09ZCl9ZWc9bnVsbDtmZz0hMX1jYXRjaChlKXt0aHJvdyBudWxsIT09ZWcmJihlZz1lZy5zbGljZShhKzEpKSxhYyhmYyxqZyksZTt9ZmluYWxseXtDPWIsZ2c9ITF9fXJldHVybiBudWxsfXZhciBrZz1bXSxsZz0wLG1nPW51bGwsbmc9MCxvZz1bXSxwZz0wLHFnPW51bGwscmc9MSxzZz1cIlwiO2Z1bmN0aW9uIHRnKGEsYil7a2dbbGcrK109bmc7a2dbbGcrK109bWc7bWc9YTtuZz1ifVxuZnVuY3Rpb24gdWcoYSxiLGMpe29nW3BnKytdPXJnO29nW3BnKytdPXNnO29nW3BnKytdPXFnO3FnPWE7dmFyIGQ9cmc7YT1zZzt2YXIgZT0zMi1vYyhkKS0xO2QmPX4oMTw8ZSk7Yys9MTt2YXIgZj0zMi1vYyhiKStlO2lmKDMwPGYpe3ZhciBnPWUtZSU1O2Y9KGQmKDE8PGcpLTEpLnRvU3RyaW5nKDMyKTtkPj49ZztlLT1nO3JnPTE8PDMyLW9jKGIpK2V8Yzw8ZXxkO3NnPWYrYX1lbHNlIHJnPTE8PGZ8Yzw8ZXxkLHNnPWF9ZnVuY3Rpb24gdmcoYSl7bnVsbCE9PWEucmV0dXJuJiYodGcoYSwxKSx1ZyhhLDEsMCkpfWZ1bmN0aW9uIHdnKGEpe2Zvcig7YT09PW1nOyltZz1rZ1stLWxnXSxrZ1tsZ109bnVsbCxuZz1rZ1stLWxnXSxrZ1tsZ109bnVsbDtmb3IoO2E9PT1xZzspcWc9b2dbLS1wZ10sb2dbcGddPW51bGwsc2c9b2dbLS1wZ10sb2dbcGddPW51bGwscmc9b2dbLS1wZ10sb2dbcGddPW51bGx9dmFyIHhnPW51bGwseWc9bnVsbCxJPSExLHpnPW51bGw7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUJnKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2I9YS5kZWxldGlvbnM7bnVsbD09PWI/KGEuZGVsZXRpb25zPVtjXSxhLmZsYWdzfD0xNik6Yi5wdXNoKGMpfVxuZnVuY3Rpb24gQ2coYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIseGc9YSx5Zz1MZihiLmZpcnN0Q2hpbGQpLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIseGc9YSx5Zz1udWxsLCEwKTohMTtjYXNlIDEzOnJldHVybiBiPTghPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYz1udWxsIT09cWc/e2lkOnJnLG92ZXJmbG93OnNnfTpudWxsLGEubWVtb2l6ZWRTdGF0ZT17ZGVoeWRyYXRlZDpiLHRyZWVDb250ZXh0OmMscmV0cnlMYW5lOjEwNzM3NDE4MjR9LGM9QmcoMTgsbnVsbCxudWxsLDApLGMuc3RhdGVOb2RlPWIsYy5yZXR1cm49YSxhLmNoaWxkPWMseGc9YSx5Zz1cbm51bGwsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIERnKGEpe3JldHVybiAwIT09KGEubW9kZSYxKSYmMD09PShhLmZsYWdzJjEyOCl9ZnVuY3Rpb24gRWcoYSl7aWYoSSl7dmFyIGI9eWc7aWYoYil7dmFyIGM9YjtpZighQ2coYSxiKSl7aWYoRGcoYSkpdGhyb3cgRXJyb3IocCg0MTgpKTtiPUxmKGMubmV4dFNpYmxpbmcpO3ZhciBkPXhnO2ImJkNnKGEsYik/QWcoZCxjKTooYS5mbGFncz1hLmZsYWdzJi00MDk3fDIsST0hMSx4Zz1hKX19ZWxzZXtpZihEZyhhKSl0aHJvdyBFcnJvcihwKDQxOCkpO2EuZmxhZ3M9YS5mbGFncyYtNDA5N3wyO0k9ITE7eGc9YX19fWZ1bmN0aW9uIEZnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjt4Zz1hfVxuZnVuY3Rpb24gR2coYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCFJKXJldHVybiBGZyhhKSxJPSEwLCExO3ZhciBiOyhiPTMhPT1hLnRhZykmJiEoYj01IT09YS50YWcpJiYoYj1hLnR5cGUsYj1cImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUVmKGEudHlwZSxhLm1lbW9pemVkUHJvcHMpKTtpZihiJiYoYj15Zykpe2lmKERnKGEpKXRocm93IEhnKCksRXJyb3IocCg0MTgpKTtmb3IoO2I7KUFnKGEsYiksYj1MZihiLm5leHRTaWJsaW5nKX1GZyhhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHAoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe3lnPUxmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlwiJCFcIiE9PWMmJlwiJD9cIiE9PWN8fGIrK31hPWEubmV4dFNpYmxpbmd9eWc9XG5udWxsfX1lbHNlIHlnPXhnP0xmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEhnKCl7Zm9yKHZhciBhPXlnO2E7KWE9TGYoYS5uZXh0U2libGluZyl9ZnVuY3Rpb24gSWcoKXt5Zz14Zz1udWxsO0k9ITF9ZnVuY3Rpb24gSmcoYSl7bnVsbD09PXpnP3pnPVthXTp6Zy5wdXNoKGEpfXZhciBLZz11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBMZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPUEoe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgTWc9VWYobnVsbCksTmc9bnVsbCxPZz1udWxsLFBnPW51bGw7ZnVuY3Rpb24gUWcoKXtQZz1PZz1OZz1udWxsfWZ1bmN0aW9uIFJnKGEpe3ZhciBiPU1nLmN1cnJlbnQ7RShNZyk7YS5fY3VycmVudFZhbHVlPWJ9XG5mdW5jdGlvbiBTZyhhLGIsYyl7Zm9yKDtudWxsIT09YTspe3ZhciBkPWEuYWx0ZXJuYXRlOyhhLmNoaWxkTGFuZXMmYikhPT1iPyhhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWQmJihkLmNoaWxkTGFuZXN8PWIpKTpudWxsIT09ZCYmKGQuY2hpbGRMYW5lcyZiKSE9PWImJihkLmNoaWxkTGFuZXN8PWIpO2lmKGE9PT1jKWJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIFRnKGEsYil7Tmc9YTtQZz1PZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKDAhPT0oYS5sYW5lcyZiKSYmKFVnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIFZnKGEpe3ZhciBiPWEuX2N1cnJlbnRWYWx1ZTtpZihQZyE9PWEpaWYoYT17Y29udGV4dDphLG1lbW9pemVkVmFsdWU6YixuZXh0Om51bGx9LG51bGw9PT1PZyl7aWYobnVsbD09PU5nKXRocm93IEVycm9yKHAoMzA4KSk7T2c9YTtOZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmF9fWVsc2UgT2c9T2cubmV4dD1hO3JldHVybiBifXZhciBXZz1udWxsO2Z1bmN0aW9uIFhnKGEpe251bGw9PT1XZz9XZz1bYV06V2cucHVzaChhKX1mdW5jdGlvbiBZZyhhLGIsYyxkKXt2YXIgZT1iLmludGVybGVhdmVkO251bGw9PT1lPyhjLm5leHQ9YyxYZyhiKSk6KGMubmV4dD1lLm5leHQsZS5uZXh0PWMpO2IuaW50ZXJsZWF2ZWQ9YztyZXR1cm4gWmcoYSxkKX1cbmZ1bmN0aW9uIFpnKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH12YXIgJGc9ITE7ZnVuY3Rpb24gYWgoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIGJoKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIGNoKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fVxuZnVuY3Rpb24gZGgoYSxiLGMpe3ZhciBkPWEudXBkYXRlUXVldWU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZD1kLnNoYXJlZDtpZigwIT09KEsmMikpe3ZhciBlPWQucGVuZGluZztudWxsPT09ZT9iLm5leHQ9YjooYi5uZXh0PWUubmV4dCxlLm5leHQ9Yik7ZC5wZW5kaW5nPWI7cmV0dXJuIFpnKGEsYyl9ZT1kLmludGVybGVhdmVkO251bGw9PT1lPyhiLm5leHQ9YixYZyhkKSk6KGIubmV4dD1lLm5leHQsZS5uZXh0PWIpO2QuaW50ZXJsZWF2ZWQ9YjtyZXR1cm4gWmcoYSxjKX1mdW5jdGlvbiBlaChhLGIsYyl7Yj1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLnNoYXJlZCwwIT09KGMmNDE5NDI0MCkpKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO0NjKGEsYyl9fVxuZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIGdoKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7JGc9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbT1hLmFsdGVybmF0ZTtudWxsIT09bSYmKG09bS51cGRhdGVRdWV1ZSxoPW0ubGFzdEJhc2VVcGRhdGUsaCE9PWcmJihudWxsPT09aD9tLmZpcnN0QmFzZVVwZGF0ZT1sOmgubmV4dD1sLG0ubGFzdEJhc2VVcGRhdGU9aykpfWlmKG51bGwhPT1mKXt2YXIgcT1lLmJhc2VTdGF0ZTtnPTA7bT1sPWs9bnVsbDtoPWY7ZG97dmFyIHI9aC5sYW5lLHk9aC5ldmVudFRpbWU7aWYoKGQmcik9PT1yKXtudWxsIT09bSYmKG09bS5uZXh0PXtldmVudFRpbWU6eSxsYW5lOjAsdGFnOmgudGFnLHBheWxvYWQ6aC5wYXlsb2FkLGNhbGxiYWNrOmguY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgbj1hLHQ9aDtyPWI7eT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOm49dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuKXtxPW4uY2FsbCh5LHEscik7YnJlYWsgYX1xPW47YnJlYWsgYTtjYXNlIDM6bi5mbGFncz1uLmZsYWdzJi02NTUzN3wxMjg7Y2FzZSAwOm49dC5wYXlsb2FkO3I9XCJmdW5jdGlvblwiPT09dHlwZW9mIG4/bi5jYWxsKHkscSxyKTpuO2lmKG51bGw9PT1yfHx2b2lkIDA9PT1yKWJyZWFrIGE7cT1BKHt9LHEscik7YnJlYWsgYTtjYXNlIDI6JGc9ITB9fW51bGwhPT1oLmNhbGxiYWNrJiYwIT09aC5sYW5lJiYoYS5mbGFnc3w9NjQscj1lLmVmZmVjdHMsbnVsbD09PXI/ZS5lZmZlY3RzPVtoXTpyLnB1c2goaCkpfWVsc2UgeT17ZXZlbnRUaW1lOnksbGFuZTpyLHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW0/KGw9bT15LGs9cSk6bT1tLm5leHQ9eSxnfD1yO1xuaD1oLm5leHQ7aWYobnVsbD09PWgpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2Ugcj1oLGg9ci5uZXh0LHIubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9cixlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW0mJihrPXEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW07Yj1lLnNoYXJlZC5pbnRlcmxlYXZlZDtpZihudWxsIT09Yil7ZT1iO2RvIGd8PWUubGFuZSxlPWUubmV4dDt3aGlsZShlIT09Yil9ZWxzZSBudWxsPT09ZiYmKGUuc2hhcmVkLmxhbmVzPTApO2hofD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9cX19XG5mdW5jdGlvbiBpaChhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IocCgxOTEsZSkpO2UuY2FsbChkKX19fXZhciBqaD0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBraChhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6QSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgbmg9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/VmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9TCgpLGU9bGgoYSksZj1jaChkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtiPWRoKGEsZixlKTtudWxsIT09YiYmKG1oKGIsYSxlLGQpLGVoKGIsYSxlKSl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9TCgpLGU9bGgoYSksZj1jaChkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO2I9ZGgoYSxmLGUpO251bGwhPT1iJiYobWgoYixhLGUsZCksZWgoYixhLGUpKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1MKCksZD1cbmxoKGEpLGU9Y2goYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtiPWRoKGEsZSxkKTtudWxsIT09YiYmKG1oKGIsYSxkLGMpLGVoKGIsYSxkKSl9fTtmdW5jdGlvbiBvaChhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFJZShjLGQpfHwhSWUoZSxmKTohMH1cbmZ1bmN0aW9uIHBoKGEsYixjKXt2YXIgZD0hMSxlPVZmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPVZnKGYpOihlPVpmKGIpP1hmOkguY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP1lmKGEsZSk6VmYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1uaDthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHFoKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZuaC5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIHJoKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9amg7YWgoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1WZyhmKTooZj1aZihiKT9YZjpILmN1cnJlbnQsZS5jb250ZXh0PVlmKGEsZikpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihraChhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZuaC5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxnaChhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00MTk0MzA4KX1cbmZ1bmN0aW9uIHNoKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IocCgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcihwKDE0NyxhKSk7dmFyIGU9ZCxmPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1mKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWUucmVmcztiPT09amgmJihiPWUucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZl06YltmXT1hfTtiLl9zdHJpbmdSZWY9ZjtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IocCgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IocCgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKGEsYil7YT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik7dGhyb3cgRXJyb3IocCgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09YT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjphKSk7fWZ1bmN0aW9uIHVoKGEpe3ZhciBiPWEuX2luaXQ7cmV0dXJuIGIoYS5fcGF5bG9hZCl9XG5mdW5jdGlvbiB2aChhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5kZWxldGlvbnM7bnVsbD09PWQ/KGIuZGVsZXRpb25zPVtjXSxiLmZsYWdzfD0xNik6ZC5wdXNoKGMpfX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT13aChhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGIuZmxhZ3N8PTEwNDg1NzYsYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzfD0yLGMpOmQ7Yi5mbGFnc3w9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJlxubnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFnc3w9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPXhoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7dmFyIGY9Yy50eXBlO2lmKGY9PT15YSlyZXR1cm4gbShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGMua2V5KTtpZihudWxsIT09YiYmKGIuZWxlbWVudFR5cGU9PT1mfHxcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLiQkdHlwZW9mPT09SGEmJnVoKGYpPT09Yi50eXBlKSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9c2goYSxiLGMpLGQucmV0dXJuPWEsZDtkPXloKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPXNoKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8XG5iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9emgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPUFoKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiJiZcIlwiIT09Ynx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPXhoKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBjPXloKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLFxuYy5yZWY9c2goYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHdhOnJldHVybiBiPXpoKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtjYXNlIEhhOnZhciBkPWIuX2luaXQ7cmV0dXJuIHEoYSxkKGIuX3BheWxvYWQpLGMpfWlmKGViKGIpfHxLYShiKSlyZXR1cm4gYj1BaChiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjt0aChhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHIoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGMmJlwiXCIhPT1jfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBjLmtleT09PWU/ayhhLGIsYyxkKTpudWxsO2Nhc2Ugd2E6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGw7Y2FzZSBIYTpyZXR1cm4gZT1jLl9pbml0LHIoYSxcbmIsZShjLl9wYXlsb2FkKSxkKX1pZihlYihjKXx8S2EoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO3RoKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZCYmXCJcIiE9PWR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgdmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGsoYixhLGQsZSk7Y2FzZSB3YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKTtjYXNlIEhhOnZhciBmPWQuX2luaXQ7cmV0dXJuIHkoYSxiLGMsZihkLl9wYXlsb2FkKSxlKX1pZihlYihkKXx8S2EoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO3RoKGIsZCl9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBuKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCx1PWcsdz1nPTAseD1udWxsO251bGwhPT11JiZ3PGgubGVuZ3RoO3crKyl7dS5pbmRleD53Pyh4PXUsdT1udWxsKTp4PXUuc2libGluZzt2YXIgbj1yKGUsdSxoW3ddLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9eCk7YnJlYWt9YSYmdSYmbnVsbD09PW4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx3KTtudWxsPT09bT9sPW46bS5zaWJsaW5nPW47bT1uO3U9eH1pZih3PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxJJiZ0ZyhlLHcpLGw7aWYobnVsbD09PXUpe2Zvcig7dzxoLmxlbmd0aDt3KyspdT1xKGUsaFt3XSxrKSxudWxsIT09dSYmKGc9Zih1LGcsdyksbnVsbD09PW0/bD11Om0uc2libGluZz11LG09dSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7dzxoLmxlbmd0aDt3KyspeD15KHUsZSx3LGhbd10sayksbnVsbCE9PXgmJihhJiZudWxsIT09eC5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1cbngua2V5P3c6eC5rZXkpLGc9Zih4LGcsdyksbnVsbD09PW0/bD14Om0uc2libGluZz14LG09eCk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZ1bmN0aW9uIHQoZSxnLGgsayl7dmFyIGw9S2EoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IocCgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1oKXRocm93IEVycm9yKHAoMTUxKSk7Zm9yKHZhciB1PWw9bnVsbCxtPWcsdz1nPTAseD1udWxsLG49aC5uZXh0KCk7bnVsbCE9PW0mJiFuLmRvbmU7dysrLG49aC5uZXh0KCkpe20uaW5kZXg+dz8oeD1tLG09bnVsbCk6eD1tLnNpYmxpbmc7dmFyIHQ9cihlLG0sbi52YWx1ZSxrKTtpZihudWxsPT09dCl7bnVsbD09PW0mJihtPXgpO2JyZWFrfWEmJm0mJm51bGw9PT10LmFsdGVybmF0ZSYmYihlLG0pO2c9Zih0LGcsdyk7bnVsbD09PXU/bD10OnUuc2libGluZz10O3U9dDttPXh9aWYobi5kb25lKXJldHVybiBjKGUsXG5tKSxJJiZ0ZyhlLHcpLGw7aWYobnVsbD09PW0pe2Zvcig7IW4uZG9uZTt3Kyssbj1oLm5leHQoKSluPXEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx3KSxudWxsPT09dT9sPW46dS5zaWJsaW5nPW4sdT1uKTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZvcihtPWQoZSxtKTshbi5kb25lO3crKyxuPWgubmV4dCgpKW49eShtLGUsdyxuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09bi5rZXk/dzpuLmtleSksZz1mKG4sZyx3KSxudWxsPT09dT9sPW46dS5zaWJsaW5nPW4sdT1uKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO0kmJnRnKGUsdyk7cmV0dXJuIGx9ZnVuY3Rpb24gSihhLGQsZixoKXtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT15YSYmbnVsbD09PWYua2V5JiYoZj1mLnByb3BzLmNoaWxkcmVuKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mKXtzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSB2YTphOntmb3IodmFyIGs9XG5mLmtleSxsPWQ7bnVsbCE9PWw7KXtpZihsLmtleT09PWspe2s9Zi50eXBlO2lmKGs9PT15YSl7aWYoNz09PWwudGFnKXtjKGEsbC5zaWJsaW5nKTtkPWUobCxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1lbHNlIGlmKGwuZWxlbWVudFR5cGU9PT1rfHxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09SGEmJnVoKGspPT09bC50eXBlKXtjKGEsbC5zaWJsaW5nKTtkPWUobCxmLnByb3BzKTtkLnJlZj1zaChhLGwsZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1jKGEsbCk7YnJlYWt9ZWxzZSBiKGEsbCk7bD1sLnNpYmxpbmd9Zi50eXBlPT09eWE/KGQ9QWgoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPXloKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPXNoKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB3YTphOntmb3IobD1mLmtleTtudWxsIT09XG5kOyl7aWYoZC5rZXk9PT1sKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPXpoKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgSGE6cmV0dXJuIGw9Zi5faW5pdCxKKGEsZCxsKGYuX3BheWxvYWQpLGgpfWlmKGViKGYpKXJldHVybiBuKGEsZCxmLGgpO2lmKEthKGYpKXJldHVybiB0KGEsZCxmLGgpO3RoKGEsZil9cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBmJiZcIlwiIT09Znx8XCJudW1iZXJcIj09PXR5cGVvZiBmPyhmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6XG4oYyhhLGQpLGQ9eGgoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSkpOmMoYSxkKX1yZXR1cm4gSn12YXIgQmg9dmgoITApLENoPXZoKCExKSxEaD17fSxFaD1VZihEaCksRmg9VWYoRGgpLEdoPVVmKERoKTtmdW5jdGlvbiBIaChhKXtpZihhPT09RGgpdGhyb3cgRXJyb3IocCgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBJaChhLGIpe0coR2gsYik7RyhGaCxhKTtHKEVoLERoKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOmxiKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1sYihiLGEpfUUoRWgpO0coRWgsYil9ZnVuY3Rpb24gSmgoKXtFKEVoKTtFKEZoKTtFKEdoKX1cbmZ1bmN0aW9uIEtoKGEpe0hoKEdoLmN1cnJlbnQpO3ZhciBiPUhoKEVoLmN1cnJlbnQpO3ZhciBjPWxiKGIsYS50eXBlKTtiIT09YyYmKEcoRmgsYSksRyhFaCxjKSl9ZnVuY3Rpb24gTGgoYSl7RmguY3VycmVudD09PWEmJihFKEVoKSxFKEZoKSl9dmFyIE09VWYoMCk7XG5mdW5jdGlvbiBNaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyYxMjgpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgTmg9W107XG5mdW5jdGlvbiBPaCgpe2Zvcih2YXIgYT0wO2E8TmgubGVuZ3RoO2ErKylOaFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO05oLmxlbmd0aD0wfXZhciBQaD11YS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLFFoPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLFJoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsU2g9ITEsVGg9ITEsVWg9MCxWaD0wO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcihwKDMyMSkpO31mdW5jdGlvbiBXaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoYSxiLGMsZCxlLGYpe1JoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7UGguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9ZaDpaaDthPWMoZCxlKTtpZihUaCl7Zj0wO2Rve1RoPSExO1VoPTA7aWYoMjU8PWYpdGhyb3cgRXJyb3IocCgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtQaC5jdXJyZW50PSRoO2E9YyhkLGUpfXdoaWxlKFRoKX1QaC5jdXJyZW50PWFpO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7Umg9MDtQPU89Tj1udWxsO1NoPSExO2lmKGIpdGhyb3cgRXJyb3IocCgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBiaSgpe3ZhciBhPTAhPT1VaDtVaD0wO3JldHVybiBhfVxuZnVuY3Rpb24gY2koKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gZGkoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHAoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIGVpKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gZmkoYSl7dmFyIGI9ZGkoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IocCgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2Y9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1udWxsLGs9bnVsbCxsPWY7ZG97dmFyIG09bC5sYW5lO2lmKChSaCZtKT09PW0pbnVsbCE9PWsmJihrPWsubmV4dD17bGFuZTowLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxlYWdlclN0YXRlOmwuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWwuaGFzRWFnZXJTdGF0ZT9sLmVhZ2VyU3RhdGU6YShkLGwuYWN0aW9uKTtlbHNle3ZhciBxPXtsYW5lOm0sYWN0aW9uOmwuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6bC5oYXNFYWdlclN0YXRlLFxuZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09az8oaD1rPXEsZz1kKTprPWsubmV4dD1xO04ubGFuZXN8PW07aGh8PW19bD1sLm5leHR9d2hpbGUobnVsbCE9PWwmJmwhPT1mKTtudWxsPT09az9nPWQ6ay5uZXh0PWg7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwoVWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWc7Yi5iYXNlUXVldWU9aztjLmxhc3RSZW5kZXJlZFN0YXRlPWR9YT1jLmludGVybGVhdmVkO2lmKG51bGwhPT1hKXtlPWE7ZG8gZj1lLmxhbmUsTi5sYW5lc3w9ZixoaHw9ZixlPWUubmV4dDt3aGlsZShlIT09YSl9ZWxzZSBudWxsPT09ZSYmKGMubGFuZXM9MCk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIGdpKGEpe3ZhciBiPWRpKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChVZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfWZ1bmN0aW9uIGhpKCl7fVxuZnVuY3Rpb24gaWkoYSxiKXt2YXIgYz1OLGQ9ZGkoKSxlPWIoKSxmPSFIZShkLm1lbW9pemVkU3RhdGUsZSk7ZiYmKGQubWVtb2l6ZWRTdGF0ZT1lLFVnPSEwKTtkPWQucXVldWU7amkoa2kuYmluZChudWxsLGMsZCxhKSxbYV0pO2lmKGQuZ2V0U25hcHNob3QhPT1ifHxmfHxudWxsIT09UCYmUC5tZW1vaXplZFN0YXRlLnRhZyYxKXtjLmZsYWdzfD0yMDQ4O2xpKDksbWkuYmluZChudWxsLGMsZCxlLGIpLHZvaWQgMCxudWxsKTtpZihudWxsPT09Uil0aHJvdyBFcnJvcihwKDM0OSkpOzAhPT0oUmgmMzApfHxuaShjLGIsZSl9cmV0dXJuIGV9ZnVuY3Rpb24gbmkoYSxiLGMpe2EuZmxhZ3N8PTE2Mzg0O2E9e2dldFNuYXBzaG90OmIsdmFsdWU6Y307Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LE4udXBkYXRlUXVldWU9YixiLnN0b3Jlcz1bYV0pOihjPWIuc3RvcmVzLG51bGw9PT1jP2Iuc3RvcmVzPVthXTpjLnB1c2goYSkpfVxuZnVuY3Rpb24gbWkoYSxiLGMsZCl7Yi52YWx1ZT1jO2IuZ2V0U25hcHNob3Q9ZDtvaShiKSYmcGkoYSl9ZnVuY3Rpb24ga2koYSxiLGMpe3JldHVybiBjKGZ1bmN0aW9uKCl7b2koYikmJnBpKGEpfSl9ZnVuY3Rpb24gb2koYSl7dmFyIGI9YS5nZXRTbmFwc2hvdDthPWEudmFsdWU7dHJ5e3ZhciBjPWIoKTtyZXR1cm4hSGUoYSxjKX1jYXRjaChkKXtyZXR1cm4hMH19ZnVuY3Rpb24gcGkoYSl7dmFyIGI9WmcoYSwxKTtudWxsIT09YiYmbWgoYixhLDEsLTEpfVxuZnVuY3Rpb24gcWkoYSl7dmFyIGI9Y2koKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjplaSxsYXN0UmVuZGVyZWRTdGF0ZTphfTtiLnF1ZXVlPWE7YT1hLmRpc3BhdGNoPXJpLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBsaShhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2koKXtyZXR1cm4gZGkoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIHRpKGEsYixjLGQpe3ZhciBlPWNpKCk7Ti5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9bGkoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWRpKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmV2goZCxnLmRlcHMpKXtlLm1lbW9pemVkU3RhdGU9bGkoYixjLGYsZCk7cmV0dXJufX1OLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1saSgxfGIsYyxmLGQpfWZ1bmN0aW9uIHZpKGEsYil7cmV0dXJuIHRpKDgzOTA2NTYsOCxhLGIpfWZ1bmN0aW9uIGppKGEsYil7cmV0dXJuIHVpKDIwNDgsOCxhLGIpfWZ1bmN0aW9uIHdpKGEsYil7cmV0dXJuIHVpKDQsMixhLGIpfWZ1bmN0aW9uIHhpKGEsYil7cmV0dXJuIHVpKDQsNCxhLGIpfVxuZnVuY3Rpb24geWkoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiB6aShhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHVpKDQsNCx5aS5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBBaSgpe31mdW5jdGlvbiBCaShhLGIpe3ZhciBjPWRpKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZXaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIENpKGEsYil7dmFyIGM9ZGkoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJldoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIERpKGEsYixjKXtpZigwPT09KFJoJjIxKSlyZXR1cm4gYS5iYXNlU3RhdGUmJihhLmJhc2VTdGF0ZT0hMSxVZz0hMCksYS5tZW1vaXplZFN0YXRlPWM7SGUoYyxiKXx8KGM9eWMoKSxOLmxhbmVzfD1jLGhofD1jLGEuYmFzZVN0YXRlPSEwKTtyZXR1cm4gYn1mdW5jdGlvbiBFaShhLGIpe3ZhciBjPUM7Qz0wIT09YyYmND5jP2M6NDthKCEwKTt2YXIgZD1RaC50cmFuc2l0aW9uO1FoLnRyYW5zaXRpb249e307dHJ5e2EoITEpLGIoKX1maW5hbGx5e0M9YyxRaC50cmFuc2l0aW9uPWR9fWZ1bmN0aW9uIEZpKCl7cmV0dXJuIGRpKCkubWVtb2l6ZWRTdGF0ZX1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD1saChhKTtjPXtsYW5lOmQsYWN0aW9uOmMsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTtpZihIaShhKSlJaShiLGMpO2Vsc2UgaWYoYz1ZZyhhLGIsYyxkKSxudWxsIT09Yyl7dmFyIGU9TCgpO21oKGMsYSxkLGUpO0ppKGMsYixkKX19XG5mdW5jdGlvbiByaShhLGIsYyl7dmFyIGQ9bGgoYSksZT17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYoSGkoYSkpSWkoYixlKTtlbHNle3ZhciBmPWEuYWx0ZXJuYXRlO2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWZ8fDA9PT1mLmxhbmVzKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmhhc0VhZ2VyU3RhdGU9ITA7ZS5lYWdlclN0YXRlPWg7aWYoSGUoaCxnKSl7dmFyIGs9Yi5pbnRlcmxlYXZlZDtudWxsPT09az8oZS5uZXh0PWUsWGcoYikpOihlLm5leHQ9ay5uZXh0LGsubmV4dD1lKTtiLmludGVybGVhdmVkPWU7cmV0dXJufX1jYXRjaChsKXt9ZmluYWxseXt9Yz1ZZyhhLGIsZSxkKTtudWxsIT09YyYmKGU9TCgpLG1oKGMsYSxkLGUpLEppKGMsYixkKSl9fVxuZnVuY3Rpb24gSGkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7cmV0dXJuIGE9PT1OfHxudWxsIT09YiYmYj09PU59ZnVuY3Rpb24gSWkoYSxiKXtUaD1TaD0hMDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifWZ1bmN0aW9uIEppKGEsYixjKXtpZigwIT09KGMmNDE5NDI0MCkpe3ZhciBkPWIubGFuZXM7ZCY9YS5wZW5kaW5nTGFuZXM7Y3w9ZDtiLmxhbmVzPWM7Q2MoYSxjKX19XG52YXIgYWk9e3JlYWRDb250ZXh0OlZnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VJbnNlcnRpb25FZmZlY3Q6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlEsdXNlTXV0YWJsZVNvdXJjZTpRLHVzZVN5bmNFeHRlcm5hbFN0b3JlOlEsdXNlSWQ6USx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LFloPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe2NpKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6VmcsdXNlRWZmZWN0OnZpLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0aSg0MTk0MzA4LFxuNCx5aS5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRpKDQxOTQzMDgsNCxhLGIpfSx1c2VJbnNlcnRpb25FZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGkoNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1jaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1jaSgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTtkLnF1ZXVlPWE7YT1hLmRpc3BhdGNoPUdpLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1cbmNpKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnFpLHVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXtyZXR1cm4gY2koKS5tZW1vaXplZFN0YXRlPWF9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1xaSghMSksYj1hWzBdO2E9RWkuYmluZChudWxsLGFbMV0pO2NpKCkubWVtb2l6ZWRTdGF0ZT1hO3JldHVybltiLGFdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKCl7fSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9TixlPWNpKCk7aWYoSSl7aWYodm9pZCAwPT09Yyl0aHJvdyBFcnJvcihwKDQwNykpO2M9YygpfWVsc2V7Yz1iKCk7aWYobnVsbD09PVIpdGhyb3cgRXJyb3IocCgzNDkpKTswIT09KFJoJjMwKXx8bmkoZCxiLGMpfWUubWVtb2l6ZWRTdGF0ZT1jO3ZhciBmPXt2YWx1ZTpjLGdldFNuYXBzaG90OmJ9O2UucXVldWU9Zjt2aShraS5iaW5kKG51bGwsZCxcbmYsYSksW2FdKTtkLmZsYWdzfD0yMDQ4O2xpKDksbWkuYmluZChudWxsLGQsZixjLGIpLHZvaWQgMCxudWxsKTtyZXR1cm4gY30sdXNlSWQ6ZnVuY3Rpb24oKXt2YXIgYT1jaSgpLGI9Ui5pZGVudGlmaWVyUHJlZml4O2lmKEkpe3ZhciBjPXNnO3ZhciBkPXJnO2M9KGQmfigxPDwzMi1vYyhkKS0xKSkudG9TdHJpbmcoMzIpK2M7Yj1cIjpcIitiK1wiUlwiK2M7Yz1VaCsrOzA8YyYmKGIrPVwiSFwiK2MudG9TdHJpbmcoMzIpKTtiKz1cIjpcIn1lbHNlIGM9VmgrKyxiPVwiOlwiK2IrXCJyXCIrYy50b1N0cmluZygzMikrXCI6XCI7cmV0dXJuIGEubWVtb2l6ZWRTdGF0ZT1ifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LFpoPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpCaSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDpqaSx1c2VJbXBlcmF0aXZlSGFuZGxlOnppLHVzZUluc2VydGlvbkVmZmVjdDp3aSx1c2VMYXlvdXRFZmZlY3Q6eGksdXNlTWVtbzpDaSx1c2VSZWR1Y2VyOmZpLHVzZVJlZjpzaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBmaShlaSl9LFxudXNlRGVidWdWYWx1ZTpBaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPWRpKCk7cmV0dXJuIERpKGIsTy5tZW1vaXplZFN0YXRlLGEpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9ZmkoZWkpWzBdLGI9ZGkoKS5tZW1vaXplZFN0YXRlO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmhpLHVzZVN5bmNFeHRlcm5hbFN0b3JlOmlpLHVzZUlkOkZpLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sJGg9e3JlYWRDb250ZXh0OlZnLHVzZUNhbGxiYWNrOkJpLHVzZUNvbnRleHQ6VmcsdXNlRWZmZWN0OmppLHVzZUltcGVyYXRpdmVIYW5kbGU6emksdXNlSW5zZXJ0aW9uRWZmZWN0OndpLHVzZUxheW91dEVmZmVjdDp4aSx1c2VNZW1vOkNpLHVzZVJlZHVjZXI6Z2ksdXNlUmVmOnNpLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIGdpKGVpKX0sdXNlRGVidWdWYWx1ZTpBaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPWRpKCk7cmV0dXJuIG51bGw9PT1cbk8/Yi5tZW1vaXplZFN0YXRlPWE6RGkoYixPLm1lbW9pemVkU3RhdGUsYSl9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1naShlaSlbMF0sYj1kaSgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6aGksdXNlU3luY0V4dGVybmFsU3RvcmU6aWksdXNlSWQ6RmksdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfTtmdW5jdGlvbiBLaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1QYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZSxkaWdlc3Q6bnVsbH19ZnVuY3Rpb24gTGkoYSxiLGMpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpudWxsLHN0YWNrOm51bGwhPWM/YzpudWxsLGRpZ2VzdDpudWxsIT1iP2I6bnVsbH19XG5mdW5jdGlvbiBNaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgTmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gT2koYSxiLGMpe2M9Y2goLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UGl8fChQaT0hMCxRaT1kKTtNaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFJpKGEsYixjKXtjPWNoKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX07Yy5jYWxsYmFjaz1mdW5jdGlvbigpe01pKGEsYil9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtNaShhLGIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVNpP1NpPW5ldyBTZXQoW3RoaXNdKTpTaS5hZGQodGhpcykpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gVGkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO2lmKG51bGw9PT1kKXtkPWEucGluZ0NhY2hlPW5ldyBOaTt2YXIgZT1uZXcgU2V0O2Quc2V0KGIsZSl9ZWxzZSBlPWQuZ2V0KGIpLHZvaWQgMD09PWUmJihlPW5ldyBTZXQsZC5zZXQoYixlKSk7ZS5oYXMoYyl8fChlLmFkZChjKSxhPVVpLmJpbmQobnVsbCxhLGIsYyksYi50aGVuKGEsYSkpfWZ1bmN0aW9uIFZpKGEpe2Rve3ZhciBiO2lmKGI9MTM9PT1hLnRhZyliPWEubWVtb2l6ZWRTdGF0ZSxiPW51bGwhPT1iP251bGwhPT1iLmRlaHlkcmF0ZWQ/ITA6ITE6ITA7aWYoYilyZXR1cm4gYTthPWEucmV0dXJufXdoaWxlKG51bGwhPT1hKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFdpKGEsYixjLGQsZSl7aWYoMD09PShhLm1vZGUmMSkpcmV0dXJuIGE9PT1iP2EuZmxhZ3N8PTY1NTM2OihhLmZsYWdzfD0xMjgsYy5mbGFnc3w9MTMxMDcyLGMuZmxhZ3MmPS01MjgwNSwxPT09Yy50YWcmJihudWxsPT09Yy5hbHRlcm5hdGU/Yy50YWc9MTc6KGI9Y2goLTEsMSksYi50YWc9MixkaChjLGIsMSkpKSxjLmxhbmVzfD0xKSxhO2EuZmxhZ3N8PTY1NTM2O2EubGFuZXM9ZTtyZXR1cm4gYX12YXIgWGk9dWEuUmVhY3RDdXJyZW50T3duZXIsVWc9ITE7ZnVuY3Rpb24gWWkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9DaChiLG51bGwsYyxkKTpCaChiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIFppKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtUZyhiLGUpO2Q9WGgoYSxiLGMsZCxmLGUpO2M9YmkoKTtpZihudWxsIT09YSYmIVVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTIwNTMsYS5sYW5lcyY9fmUsJGkoYSxiLGUpO0kmJmMmJnZnKGIpO2IuZmxhZ3N8PTE7WWkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaihhLGIsYyxkLGUpe2lmKG51bGw9PT1hKXt2YXIgZj1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJiFiaihmKSYmdm9pZCAwPT09Zi5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZixjaihhLGIsZixkLGUpO2E9eWgoYy50eXBlLG51bGwsZCxiLGIubW9kZSxlKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zj1hLmNoaWxkO2lmKDA9PT0oYS5sYW5lcyZlKSl7dmFyIGc9Zi5tZW1vaXplZFByb3BzO2M9Yy5jb21wYXJlO2M9bnVsbCE9PWM/YzpJZTtpZihjKGcsZCkmJmEucmVmPT09Yi5yZWYpcmV0dXJuICRpKGEsYixlKX1iLmZsYWdzfD0xO2E9d2goZixkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaihhLGIsYyxkLGUpe2lmKG51bGwhPT1hKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoSWUoZixkKSYmYS5yZWY9PT1iLnJlZilpZihVZz0hMSxiLnBlbmRpbmdQcm9wcz1kPWYsMCE9PShhLmxhbmVzJmUpKTAhPT0oYS5mbGFncyYxMzEwNzIpJiYoVWc9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcywkaShhLGIsZSl9cmV0dXJuIGRqKGEsYixjLGQsZSl9XG5mdW5jdGlvbiBlaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZSlpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LEcoZmosZ2opLGdqfD1jO2Vsc2V7aWYoMD09PShjJjEwNzM3NDE4MjQpKXJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH0sYi51cGRhdGVRdWV1ZT1udWxsLEcoZmosZ2opLGdqfD1hLG51bGw7Yi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfTtkPW51bGwhPT1mP2YuYmFzZUxhbmVzOmM7Ryhmaixnaik7Z2p8PWR9ZWxzZSBudWxsIT09XG5mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxHKGZqLGdqKSxnanw9ZDtZaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaihhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mn1mdW5jdGlvbiBkaihhLGIsYyxkLGUpe3ZhciBmPVpmKGMpP1hmOkguY3VycmVudDtmPVlmKGIsZik7VGcoYixlKTtjPVhoKGEsYixjLGQsZixlKTtkPWJpKCk7aWYobnVsbCE9PWEmJiFVZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLCRpKGEsYixlKTtJJiZkJiZ2ZyhiKTtiLmZsYWdzfD0xO1lpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWooYSxiLGMsZCxlKXtpZihaZihjKSl7dmFyIGY9ITA7Y2coYil9ZWxzZSBmPSExO1RnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKWpqKGEsYikscGgoYixjLGQpLHJoKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPVZnKGwpOihsPVpmKGMpP1hmOkguY3VycmVudCxsPVlmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihoIT09ZHx8ayE9PWwpJiZxaChiLGcsZCxsKTskZz0hMTt2YXIgcj1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1yO2doKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxyIT09a3x8V2YuY3VycmVudHx8JGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoa2goYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPSRnfHxvaChiLGMsaCxkLHIsayxsKSk/KHF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSk6XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTtiaChhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkxnKGIudHlwZSxoKTtnLnByb3BzPWw7cT1iLnBlbmRpbmdQcm9wcztyPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPVZnKGspOihrPVpmKGMpP1hmOkguY3VycmVudCxrPVlmKGIsaykpO3ZhciB5PWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhtPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB5fHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09cXx8ciE9PWspJiZxaChiLGcsZCxrKTskZz0hMTtyPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXI7Z2goYixkLGcsZSk7dmFyIG49Yi5tZW1vaXplZFN0YXRlO2ghPT1xfHxyIT09bnx8V2YuY3VycmVudHx8JGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiB5JiYoa2goYixjLHksZCksbj1iLm1lbW9pemVkU3RhdGUpLChsPSRnfHxvaChiLGMsbCxkLHIsbixrKXx8ITEpPyhtfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLG4sayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLG4saykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MTAyNCkpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTEwMjQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1uKSxnLnByb3BzPWQsZy5zdGF0ZT1uLGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PVxuYS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxkPSExKX1yZXR1cm4ga2ooYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24ga2ooYSxiLGMsZCxlLGYpe2hqKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjEyOCk7aWYoIWQmJiFnKXJldHVybiBlJiZkZyhiLGMsITEpLCRpKGEsYixmKTtkPWIuc3RhdGVOb2RlO1hpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9QmgoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1CaChiLG51bGwsaCxmKSk6WWkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmZGcoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBsaihhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P2FnKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJmFnKGEsYi5jb250ZXh0LCExKTtJaChhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBtaihhLGIsYyxkLGUpe0lnKCk7SmcoZSk7Yi5mbGFnc3w9MjU2O1lpKGEsYixjLGQpO3JldHVybiBiLmNoaWxkfXZhciBuaj17ZGVoeWRyYXRlZDpudWxsLHRyZWVDb250ZXh0Om51bGwscmV0cnlMYW5lOjB9O2Z1bmN0aW9uIG9qKGEpe3JldHVybntiYXNlTGFuZXM6YSxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfX1cbmZ1bmN0aW9uIHBqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPU0uY3VycmVudCxmPSExLGc9MCE9PShiLmZsYWdzJjEyOCksaDsoaD1nKXx8KGg9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtpZihoKWY9ITAsYi5mbGFncyY9LTEyOTtlbHNlIGlmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKWV8PTE7RyhNLGUmMSk7aWYobnVsbD09PWEpe0VnKGIpO2E9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiYoYT1hLmRlaHlkcmF0ZWQsbnVsbCE9PWEpKXJldHVybiAwPT09KGIubW9kZSYxKT9iLmxhbmVzPTE6XCIkIVwiPT09YS5kYXRhP2IubGFuZXM9ODpiLmxhbmVzPTEwNzM3NDE4MjQsbnVsbDtnPWQuY2hpbGRyZW47YT1kLmZhbGxiYWNrO3JldHVybiBmPyhkPWIubW9kZSxmPWIuY2hpbGQsZz17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmd9LDA9PT0oZCYxKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPVxuZyk6Zj1xaihnLGQsMCxudWxsKSxhPUFoKGEsZCxjLG51bGwpLGYucmV0dXJuPWIsYS5yZXR1cm49YixmLnNpYmxpbmc9YSxiLmNoaWxkPWYsYi5jaGlsZC5tZW1vaXplZFN0YXRlPW9qKGMpLGIubWVtb2l6ZWRTdGF0ZT1uaixhKTpyaihiLGcpfWU9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lJiYoaD1lLmRlaHlkcmF0ZWQsbnVsbCE9PWgpKXJldHVybiBzaihhLGIsZyxkLGgsZSxjKTtpZihmKXtmPWQuZmFsbGJhY2s7Zz1iLm1vZGU7ZT1hLmNoaWxkO2g9ZS5zaWJsaW5nO3ZhciBrPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn07MD09PShnJjEpJiZiLmNoaWxkIT09ZT8oZD1iLmNoaWxkLGQuY2hpbGRMYW5lcz0wLGQucGVuZGluZ1Byb3BzPWssYi5kZWxldGlvbnM9bnVsbCk6KGQ9d2goZSxrKSxkLnN1YnRyZWVGbGFncz1lLnN1YnRyZWVGbGFncyYxNDY4MDA2NCk7bnVsbCE9PWg/Zj13aChoLGYpOihmPUFoKGYsZyxjLG51bGwpLGYuZmxhZ3N8PTIpO2YucmV0dXJuPVxuYjtkLnJldHVybj1iO2Quc2libGluZz1mO2IuY2hpbGQ9ZDtkPWY7Zj1iLmNoaWxkO2c9YS5jaGlsZC5tZW1vaXplZFN0YXRlO2c9bnVsbD09PWc/b2ooYyk6e2Jhc2VMYW5lczpnLmJhc2VMYW5lc3xjLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9O2YubWVtb2l6ZWRTdGF0ZT1nO2YuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmM7Yi5tZW1vaXplZFN0YXRlPW5qO3JldHVybiBkfWY9YS5jaGlsZDthPWYuc2libGluZztkPXdoKGYse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn0pOzA9PT0oYi5tb2RlJjEpJiYoZC5sYW5lcz1jKTtkLnJldHVybj1iO2Quc2libGluZz1udWxsO251bGwhPT1hJiYoYz1iLmRlbGV0aW9ucyxudWxsPT09Yz8oYi5kZWxldGlvbnM9W2FdLGIuZmxhZ3N8PTE2KTpjLnB1c2goYSkpO2IuY2hpbGQ9ZDtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gZH1cbmZ1bmN0aW9uIHJqKGEsYil7Yj1xaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpifSxhLm1vZGUsMCxudWxsKTtiLnJldHVybj1hO3JldHVybiBhLmNoaWxkPWJ9ZnVuY3Rpb24gdGooYSxiLGMsZCl7bnVsbCE9PWQmJkpnKGQpO0JoKGIsYS5jaGlsZCxudWxsLGMpO2E9cmooYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbik7YS5mbGFnc3w9MjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYX1cbmZ1bmN0aW9uIHNqKGEsYixjLGQsZSxmLGcpe2lmKGMpe2lmKGIuZmxhZ3MmMjU2KXJldHVybiBiLmZsYWdzJj0tMjU3LGQ9TGkoRXJyb3IocCg0MjIpKSksdGooYSxiLGcsZCk7aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSlyZXR1cm4gYi5jaGlsZD1hLmNoaWxkLGIuZmxhZ3N8PTEyOCxudWxsO2Y9ZC5mYWxsYmFjaztlPWIubW9kZTtkPXFqKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmQuY2hpbGRyZW59LGUsMCxudWxsKTtmPUFoKGYsZSxnLG51bGwpO2YuZmxhZ3N8PTI7ZC5yZXR1cm49YjtmLnJldHVybj1iO2Quc2libGluZz1mO2IuY2hpbGQ9ZDswIT09KGIubW9kZSYxKSYmQmgoYixhLmNoaWxkLG51bGwsZyk7Yi5jaGlsZC5tZW1vaXplZFN0YXRlPW9qKGcpO2IubWVtb2l6ZWRTdGF0ZT1uajtyZXR1cm4gZn1pZigwPT09KGIubW9kZSYxKSlyZXR1cm4gdGooYSxiLGcsbnVsbCk7aWYoXCIkIVwiPT09ZS5kYXRhKXtkPWUubmV4dFNpYmxpbmcmJmUubmV4dFNpYmxpbmcuZGF0YXNldDtcbmlmKGQpdmFyIGg9ZC5kZ3N0O2Q9aDtmPUVycm9yKHAoNDE5KSk7ZD1MaShmLGQsdm9pZCAwKTtyZXR1cm4gdGooYSxiLGcsZCl9aD0wIT09KGcmYS5jaGlsZExhbmVzKTtpZihVZ3x8aCl7ZD1SO2lmKG51bGwhPT1kKXtzd2l0Y2goZyYtZyl7Y2FzZSA0OmU9MjticmVhaztjYXNlIDE2OmU9ODticmVhaztjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOmNhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6ZT0zMjticmVhaztjYXNlIDUzNjg3MDkxMjplPTI2ODQzNTQ1NjticmVhaztkZWZhdWx0OmU9MH1lPTAhPT0oZSYoZC5zdXNwZW5kZWRMYW5lc3xnKSk/MDplO1xuMCE9PWUmJmUhPT1mLnJldHJ5TGFuZSYmKGYucmV0cnlMYW5lPWUsWmcoYSxlKSxtaChkLGEsZSwtMSkpfXVqKCk7ZD1MaShFcnJvcihwKDQyMSkpKTtyZXR1cm4gdGooYSxiLGcsZCl9aWYoXCIkP1wiPT09ZS5kYXRhKXJldHVybiBiLmZsYWdzfD0xMjgsYi5jaGlsZD1hLmNoaWxkLGI9dmouYmluZChudWxsLGEpLGUuX3JlYWN0UmV0cnk9YixudWxsO2E9Zi50cmVlQ29udGV4dDt5Zz1MZihlLm5leHRTaWJsaW5nKTt4Zz1iO0k9ITA7emc9bnVsbDtudWxsIT09YSYmKG9nW3BnKytdPXJnLG9nW3BnKytdPXNnLG9nW3BnKytdPXFnLHJnPWEuaWQsc2c9YS5vdmVyZmxvdyxxZz1iKTtiPXJqKGIsZC5jaGlsZHJlbik7Yi5mbGFnc3w9NDA5NjtyZXR1cm4gYn1mdW5jdGlvbiB3aihhLGIsYyl7YS5sYW5lc3w9Yjt2YXIgZD1hLmFsdGVybmF0ZTtudWxsIT09ZCYmKGQubGFuZXN8PWIpO1NnKGEucmV0dXJuLGIsYyl9XG5mdW5jdGlvbiB4aihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zj9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplfTooZi5pc0JhY2t3YXJkcz1iLGYucmVuZGVyaW5nPW51bGwsZi5yZW5kZXJpbmdTdGFydFRpbWU9MCxmLmxhc3Q9ZCxmLnRhaWw9YyxmLnRhaWxNb2RlPWUpfVxuZnVuY3Rpb24geWooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtZaShhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD0xMjg7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ3aihhLGMsYik7ZWxzZSBpZigxOT09PWEudGFnKXdqKGEsYyxiKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9RyhNLGQpO2lmKDA9PT0oYi5tb2RlJjEpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1NaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3hqKGIsITEsZSxjLGYpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09TWgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXhqKGIsITAsYyxudWxsLGYpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnhqKGIsITEsbnVsbCxudWxsLHZvaWQgMCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGpqKGEsYil7MD09PShiLm1vZGUmMSkmJm51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpfWZ1bmN0aW9uICRpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtoaHw9Yi5sYW5lcztpZigwPT09KGMmYi5jaGlsZExhbmVzKSlyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IocCgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9d2goYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPXdoKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB6aihhLGIsYyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6bGooYik7SWcoKTticmVhaztjYXNlIDU6S2goYik7YnJlYWs7Y2FzZSAxOlpmKGIudHlwZSkmJmNnKGIpO2JyZWFrO2Nhc2UgNDpJaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5tZW1vaXplZFByb3BzLnZhbHVlO0coTWcsZC5fY3VycmVudFZhbHVlKTtkLl9jdXJyZW50VmFsdWU9ZTticmVhaztjYXNlIDEzOmQ9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kKXtpZihudWxsIT09ZC5kZWh5ZHJhdGVkKXJldHVybiBHKE0sTS5jdXJyZW50JjEpLGIuZmxhZ3N8PTEyOCxudWxsO2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiBwaihhLGIsYyk7RyhNLE0uY3VycmVudCYxKTthPSRpKGEsYixjKTtyZXR1cm4gbnVsbCE9PWE/YS5zaWJsaW5nOm51bGx9RyhNLE0uY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJlxuYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmMTI4KSl7aWYoZClyZXR1cm4geWooYSxiLGMpO2IuZmxhZ3N8PTEyOH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0coTSxNLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIGIubGFuZXM9MCxlaihhLGIsYyl9cmV0dXJuICRpKGEsYixjKX12YXIgQWosQmosQ2osRGo7XG5Baj1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Qmo9ZnVuY3Rpb24oKXt9O1xuQ2o9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO0hoKEVoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1BKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9QSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9QmYpfXViKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09bCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJlxuKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoZWEuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fChjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxcbmMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGVhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZEKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtEaj1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtcbmZ1bmN0aW9uIEVqKGEsYil7aWYoIUkpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIFMoYSl7dmFyIGI9bnVsbCE9PWEuYWx0ZXJuYXRlJiZhLmFsdGVybmF0ZS5jaGlsZD09PWEuY2hpbGQsYz0wLGQ9MDtpZihiKWZvcih2YXIgZT1hLmNoaWxkO251bGwhPT1lOyljfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxkfD1lLnN1YnRyZWVGbGFncyYxNDY4MDA2NCxkfD1lLmZsYWdzJjE0NjgwMDY0LGUucmV0dXJuPWEsZT1lLnNpYmxpbmc7ZWxzZSBmb3IoZT1hLmNoaWxkO251bGwhPT1lOyljfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxkfD1lLnN1YnRyZWVGbGFncyxkfD1lLmZsYWdzLGUucmV0dXJuPWEsZT1lLnNpYmxpbmc7YS5zdWJ0cmVlRmxhZ3N8PWQ7YS5jaGlsZExhbmVzPWM7cmV0dXJuIGJ9XG5mdW5jdGlvbiBGaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7d2coYik7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gUyhiKSxudWxsO2Nhc2UgMTpyZXR1cm4gWmYoYi50eXBlKSYmJGYoKSxTKGIpLG51bGw7Y2FzZSAzOmQ9Yi5zdGF0ZU5vZGU7SmgoKTtFKFdmKTtFKEgpO09oKCk7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUdnKGIpP2IuZmxhZ3N8PTQ6bnVsbD09PWF8fGEubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJjA9PT0oYi5mbGFncyYyNTYpfHwoYi5mbGFnc3w9MTAyNCxudWxsIT09emcmJihHaih6Zyksemc9bnVsbCkpO0JqKGEsYik7UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDU6TGgoYik7dmFyIGU9SGgoR2guY3VycmVudCk7XG5jPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpQ2ooYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTIpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2NikpO1MoYik7cmV0dXJuIG51bGx9YT1IaChFaC5jdXJyZW50KTtpZihHZyhiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtPZl09YjtkW1BmXT1mO2E9MCE9PShiLm1vZGUmMSk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpEKFwiY2FuY2VsXCIsZCk7RChcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpEKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxsZi5sZW5ndGg7ZSsrKUQobGZbZV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkQoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkQoXCJlcnJvclwiLFxuZCk7RChcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkQoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0QoXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtEKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRChcImludmFsaWRcIixkKX11YihjLGYpO2U9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoITAhPT1mLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyYmQWYoZC50ZXh0Q29udGVudCxoLGEpLGU9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoITAhPT1mLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyYmQWYoZC50ZXh0Q29udGVudCxcbmgsYSksZT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOmVhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZcIm9uU2Nyb2xsXCI9PT1nJiZEKFwic2Nyb2xsXCIsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2RiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9QmYpfWQ9ZTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hJiYoYT1rYihjKSk7XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcblwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW09mXT1iO2FbUGZdPWQ7QWooYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2E6e2c9dmIoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkQoXCJjYW5jZWxcIixhKTtEKFwiY2xvc2VcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpEKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8bGYubGVuZ3RoO2UrKylEKGxmW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RChcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkQoXCJlcnJvclwiLFxuYSk7RChcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpEKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0QoXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZDticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9QSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1nYihhLGQpO0QoXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dWIoYyxlKTtoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/c2IoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm5iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1cbmN8fFwiXCIhPT1rKSYmb2IoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJm9iKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoZWEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRChcInNjcm9sbFwiLGEpOm51bGwhPWsmJnRhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7ZGIoYSxkLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsXG4hMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPUJmKX1zd2l0Y2goYyl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpkPSEhZC5hdXRvRm9jdXM7YnJlYWsgYTtjYXNlIFwiaW1nXCI6ZD0hMDticmVhayBhO2RlZmF1bHQ6ZD0hMX19ZCYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKX1TKGIpO3JldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlEaihhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtjPUhoKEdoLmN1cnJlbnQpO0hoKEVoLmN1cnJlbnQpO2lmKEdnKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi5tZW1vaXplZFByb3BzO2RbT2ZdPWI7aWYoZj1kLm5vZGVWYWx1ZSE9PWMpaWYoYT1cbnhnLG51bGwhPT1hKXN3aXRjaChhLnRhZyl7Y2FzZSAzOkFmKGQubm9kZVZhbHVlLGMsMCE9PShhLm1vZGUmMSkpO2JyZWFrO2Nhc2UgNTohMCE9PWEubWVtb2l6ZWRQcm9wcy5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQubm9kZVZhbHVlLGMsMCE9PShhLm1vZGUmMSkpfWYmJihiLmZsYWdzfD00KX1lbHNlIGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW09mXT1iLGIuc3RhdGVOb2RlPWR9UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDEzOkUoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7aWYoSSYmbnVsbCE9PXlnJiYwIT09KGIubW9kZSYxKSYmMD09PShiLmZsYWdzJjEyOCkpSGcoKSxJZygpLGIuZmxhZ3N8PTk4NTYwLGY9ITE7ZWxzZSBpZihmPUdnKGIpLG51bGwhPT1kJiZudWxsIT09ZC5kZWh5ZHJhdGVkKXtpZihudWxsPT09XG5hKXtpZighZil0aHJvdyBFcnJvcihwKDMxOCkpO2Y9Yi5tZW1vaXplZFN0YXRlO2Y9bnVsbCE9PWY/Zi5kZWh5ZHJhdGVkOm51bGw7aWYoIWYpdGhyb3cgRXJyb3IocCgzMTcpKTtmW09mXT1ifWVsc2UgSWcoKSwwPT09KGIuZmxhZ3MmMTI4KSYmKGIubWVtb2l6ZWRTdGF0ZT1udWxsKSxiLmZsYWdzfD00O1MoYik7Zj0hMX1lbHNlIG51bGwhPT16ZyYmKEdqKHpnKSx6Zz1udWxsKSxmPSEwO2lmKCFmKXJldHVybiBiLmZsYWdzJjY1NTM2P2I6bnVsbH1pZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtkIT09KG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlKSYmZCYmKGIuY2hpbGQuZmxhZ3N8PTgxOTIsMCE9PShiLm1vZGUmMSkmJihudWxsPT09YXx8MCE9PShNLmN1cnJlbnQmMSk/MD09PVQmJihUPTMpOnVqKCkpKTtudWxsIT09Yi51cGRhdGVRdWV1ZSYmKGIuZmxhZ3N8PTQpO1MoYik7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBKaCgpLFxuQmooYSxiKSxudWxsPT09YSYmc2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksUyhiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIFJnKGIudHlwZS5fY29udGV4dCksUyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksUyhiKSxudWxsO2Nhc2UgMTk6RShNKTtmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZilyZXR1cm4gUyhiKSxudWxsO2Q9MCE9PShiLmZsYWdzJjEyOCk7Zz1mLnJlbmRlcmluZztpZihudWxsPT09ZylpZihkKUVqKGYsITEpO2Vsc2V7aWYoMCE9PVR8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmMTI4KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1NaChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9MTI4O0VqKGYsITEpO2Q9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZCYmKGIudXBkYXRlUXVldWU9ZCxiLmZsYWdzfD00KTtiLnN1YnRyZWVGbGFncz0wO2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTE0NjgwMDY2LFxuZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLnN1YnRyZWVGbGFncz0wLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5zdWJ0cmVlRmxhZ3M9MCxmLmRlbGV0aW9ucz1udWxsLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLGYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7RyhNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9XG5hLnNpYmxpbmd9bnVsbCE9PWYudGFpbCYmQigpPkhqJiYoYi5mbGFnc3w9MTI4LGQ9ITAsRWooZiwhMSksYi5sYW5lcz00MTk0MzA0KX1lbHNle2lmKCFkKWlmKGE9TWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTEyOCxkPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxFaihmLCEwKSxudWxsPT09Zi50YWlsJiZcImhpZGRlblwiPT09Zi50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhSSlyZXR1cm4gUyhiKSxudWxsfWVsc2UgMipCKCktZi5yZW5kZXJpbmdTdGFydFRpbWU+SGomJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9MTI4LGQ9ITAsRWooZiwhMSksYi5sYW5lcz00MTk0MzA0KTtmLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWYubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZi5sYXN0PWcpfWlmKG51bGwhPT1mLnRhaWwpcmV0dXJuIGI9Zi50YWlsLGYucmVuZGVyaW5nPVxuYixmLnRhaWw9Yi5zaWJsaW5nLGYucmVuZGVyaW5nU3RhcnRUaW1lPUIoKSxiLnNpYmxpbmc9bnVsbCxjPU0uY3VycmVudCxHKE0sZD9jJjF8MjpjJjEpLGI7UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIElqKCksZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09ZCYmKGIuZmxhZ3N8PTgxOTIpLGQmJjAhPT0oYi5tb2RlJjEpPzAhPT0oZ2omMTA3Mzc0MTgyNCkmJihTKGIpLGIuc3VidHJlZUZsYWdzJjYmJihiLmZsYWdzfD04MTkyKSk6UyhiKSxudWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7Y2FzZSAyNTpyZXR1cm4gbnVsbH10aHJvdyBFcnJvcihwKDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIEpqKGEsYil7d2coYik7c3dpdGNoKGIudGFnKXtjYXNlIDE6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksYT1iLmZsYWdzLGEmNjU1MzY/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSAzOnJldHVybiBKaCgpLEUoV2YpLEUoSCksT2goKSxhPWIuZmxhZ3MsMCE9PShhJjY1NTM2KSYmMD09PShhJjEyOCk/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSA1OnJldHVybiBMaChiKSxudWxsO2Nhc2UgMTM6RShNKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7aWYobnVsbD09PWIuYWx0ZXJuYXRlKXRocm93IEVycm9yKHAoMzQwKSk7SWcoKX1hPWIuZmxhZ3M7cmV0dXJuIGEmNjU1MzY/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSAxOTpyZXR1cm4gRShNKSxudWxsO2Nhc2UgNDpyZXR1cm4gSmgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIFJnKGIudHlwZS5fY29udGV4dCksbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIElqKCksXG5udWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19dmFyIEtqPSExLFU9ITEsTGo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQsVj1udWxsO2Z1bmN0aW9uIE1qKGEsYil7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMpdHJ5e2MobnVsbCl9Y2F0Y2goZCl7VyhhLGIsZCl9ZWxzZSBjLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBOaihhLGIsYyl7dHJ5e2MoKX1jYXRjaChkKXtXKGEsYixkKX19dmFyIE9qPSExO1xuZnVuY3Rpb24gUGooYSxiKXtDZj1kZDthPU1lKCk7aWYoTmUoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGM9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2M9KGM9YS5vd25lckRvY3VtZW50KSYmYy5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBkPWMuZ2V0U2VsZWN0aW9uJiZjLmdldFNlbGVjdGlvbigpO2lmKGQmJjAhPT1kLnJhbmdlQ291bnQpe2M9ZC5hbmNob3JOb2RlO3ZhciBlPWQuYW5jaG9yT2Zmc2V0LGY9ZC5mb2N1c05vZGU7ZD1kLmZvY3VzT2Zmc2V0O3RyeXtjLm5vZGVUeXBlLGYubm9kZVR5cGV9Y2F0Y2goRil7Yz1udWxsO2JyZWFrIGF9dmFyIGc9MCxoPS0xLGs9LTEsbD0wLG09MCxxPWEscj1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHk7Oyl7cSE9PWN8fDAhPT1lJiYzIT09cS5ub2RlVHlwZXx8KGg9ZytlKTtxIT09Znx8MCE9PWQmJjMhPT1xLm5vZGVUeXBlfHwoaz1nK2QpOzM9PT1xLm5vZGVUeXBlJiYoZys9XG5xLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oeT1xLmZpcnN0Q2hpbGQpKWJyZWFrO3I9cTtxPXl9Zm9yKDs7KXtpZihxPT09YSlicmVhayBiO3I9PT1jJiYrK2w9PT1lJiYoaD1nKTtyPT09ZiYmKyttPT09ZCYmKGs9Zyk7aWYobnVsbCE9PSh5PXEubmV4dFNpYmxpbmcpKWJyZWFrO3E9cjtyPXEucGFyZW50Tm9kZX1xPXl9Yz0tMT09PWh8fC0xPT09az9udWxsOntzdGFydDpoLGVuZDprfX1lbHNlIGM9bnVsbH1jPWN8fHtzdGFydDowLGVuZDowfX1lbHNlIGM9bnVsbDtEZj17Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpjfTtkZD0hMTtmb3IoVj1iO251bGwhPT1WOylpZihiPVYsYT1iLmNoaWxkLDAhPT0oYi5zdWJ0cmVlRmxhZ3MmMTAyOCkmJm51bGwhPT1hKWEucmV0dXJuPWIsVj1hO2Vsc2UgZm9yKDtudWxsIT09Vjspe2I9Vjt0cnl7dmFyIG49Yi5hbHRlcm5hdGU7aWYoMCE9PShiLmZsYWdzJjEwMjQpKXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhaztcbmNhc2UgMTppZihudWxsIT09bil7dmFyIHQ9bi5tZW1vaXplZFByb3BzLEo9bi5tZW1vaXplZFN0YXRlLHg9Yi5zdGF0ZU5vZGUsdz14LmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/dDpMZyhiLnR5cGUsdCksSik7eC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT13fWJyZWFrO2Nhc2UgMzp2YXIgdT1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOzE9PT11Lm5vZGVUeXBlP3UudGV4dENvbnRlbnQ9XCJcIjo5PT09dS5ub2RlVHlwZSYmdS5kb2N1bWVudEVsZW1lbnQmJnUucmVtb3ZlQ2hpbGQodS5kb2N1bWVudEVsZW1lbnQpO2JyZWFrO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MykpO319Y2F0Y2goRil7VyhiLGIucmV0dXJuLEYpfWE9Yi5zaWJsaW5nO2lmKG51bGwhPT1hKXthLnJldHVybj1iLnJldHVybjtWPWE7YnJlYWt9Vj1iLnJldHVybn1uPU9qO09qPSExO3JldHVybiBufVxuZnVuY3Rpb24gUWooYSxiLGMpe3ZhciBkPWIudXBkYXRlUXVldWU7ZD1udWxsIT09ZD9kLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09ZCl7dmFyIGU9ZD1kLm5leHQ7ZG97aWYoKGUudGFnJmEpPT09YSl7dmFyIGY9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZiYmTmooYixjLGYpfWU9ZS5uZXh0fXdoaWxlKGUhPT1kKX19ZnVuY3Rpb24gUmooYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIFNqKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKXt2YXIgYz1hLnN0YXRlTm9kZTtzd2l0Y2goYS50YWcpe2Nhc2UgNTphPWM7YnJlYWs7ZGVmYXVsdDphPWN9XCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpiLmN1cnJlbnQ9YX19XG5mdW5jdGlvbiBUaihhKXt2YXIgYj1hLmFsdGVybmF0ZTtudWxsIT09YiYmKGEuYWx0ZXJuYXRlPW51bGwsVGooYikpO2EuY2hpbGQ9bnVsbDthLmRlbGV0aW9ucz1udWxsO2Euc2libGluZz1udWxsOzU9PT1hLnRhZyYmKGI9YS5zdGF0ZU5vZGUsbnVsbCE9PWImJihkZWxldGUgYltPZl0sZGVsZXRlIGJbUGZdLGRlbGV0ZSBiW29mXSxkZWxldGUgYltRZl0sZGVsZXRlIGJbUmZdKSk7YS5zdGF0ZU5vZGU9bnVsbDthLnJldHVybj1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBVaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFZqKGEpe2E6Zm9yKDs7KXtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fFVqKGEucmV0dXJuKSlyZXR1cm4gbnVsbDthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47Zm9yKGE9YS5zaWJsaW5nOzUhPT1hLnRhZyYmNiE9PWEudGFnJiYxOCE9PWEudGFnOyl7aWYoYS5mbGFncyYyKWNvbnRpbnVlIGE7aWYobnVsbD09PWEuY2hpbGR8fDQ9PT1hLnRhZyljb250aW51ZSBhO2Vsc2UgYS5jaGlsZC5yZXR1cm49YSxhPWEuY2hpbGR9aWYoIShhLmZsYWdzJjIpKXJldHVybiBhLnN0YXRlTm9kZX19XG5mdW5jdGlvbiBXaihhLGIsYyl7dmFyIGQ9YS50YWc7aWYoNT09PWR8fDY9PT1kKWE9YS5zdGF0ZU5vZGUsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9QmYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoV2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylXaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBYaihhLGIsYyl7dmFyIGQ9YS50YWc7aWYoNT09PWR8fDY9PT1kKWE9YS5zdGF0ZU5vZGUsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspWGooYSxiLGMpLGE9YS5zaWJsaW5nfXZhciBYPW51bGwsWWo9ITE7ZnVuY3Rpb24gWmooYSxiLGMpe2ZvcihjPWMuY2hpbGQ7bnVsbCE9PWM7KWFrKGEsYixjKSxjPWMuc2libGluZ31cbmZ1bmN0aW9uIGFrKGEsYixjKXtpZihsYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGxjLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtsYy5vbkNvbW1pdEZpYmVyVW5tb3VudChrYyxjKX1jYXRjaChoKXt9c3dpdGNoKGMudGFnKXtjYXNlIDU6VXx8TWooYyxiKTtjYXNlIDY6dmFyIGQ9WCxlPVlqO1g9bnVsbDtaaihhLGIsYyk7WD1kO1lqPWU7bnVsbCE9PVgmJihZaj8oYT1YLGM9Yy5zdGF0ZU5vZGUsOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGMpOmEucmVtb3ZlQ2hpbGQoYykpOlgucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDE4Om51bGwhPT1YJiYoWWo/KGE9WCxjPWMuc3RhdGVOb2RlLDg9PT1hLm5vZGVUeXBlP0tmKGEucGFyZW50Tm9kZSxjKToxPT09YS5ub2RlVHlwZSYmS2YoYSxjKSxiZChhKSk6S2YoWCxjLnN0YXRlTm9kZSkpO2JyZWFrO2Nhc2UgNDpkPVg7ZT1ZajtYPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7XG5aaihhLGIsYyk7WD1kO1lqPWU7YnJlYWs7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmlmKCFVJiYoZD1jLnVwZGF0ZVF1ZXVlLG51bGwhPT1kJiYoZD1kLmxhc3RFZmZlY3QsbnVsbCE9PWQpKSl7ZT1kPWQubmV4dDtkb3t2YXIgZj1lLGc9Zi5kZXN0cm95O2Y9Zi50YWc7dm9pZCAwIT09ZyYmKDAhPT0oZiYyKT9OaihjLGIsZyk6MCE9PShmJjQpJiZOaihjLGIsZykpO2U9ZS5uZXh0fXdoaWxlKGUhPT1kKX1aaihhLGIsYyk7YnJlYWs7Y2FzZSAxOmlmKCFVJiYoTWooYyxiKSxkPWMuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVbm1vdW50KSl0cnl7ZC5wcm9wcz1jLm1lbW9pemVkUHJvcHMsZC5zdGF0ZT1jLm1lbW9pemVkU3RhdGUsZC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGgpe1coYyxiLGgpfVpqKGEsYixjKTticmVhaztjYXNlIDIxOlpqKGEsYixjKTticmVhaztjYXNlIDIyOmMubW9kZSYxPyhVPShkPVUpfHxudWxsIT09XG5jLm1lbW9pemVkU3RhdGUsWmooYSxiLGMpLFU9ZCk6WmooYSxiLGMpO2JyZWFrO2RlZmF1bHQ6WmooYSxiLGMpfX1mdW5jdGlvbiBiayhhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBMaik7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWNrLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gZGsoYSxiKXt2YXIgYz1iLmRlbGV0aW9ucztpZihudWxsIT09Yylmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTt0cnl7dmFyIGY9YSxnPWIsaD1nO2E6Zm9yKDtudWxsIT09aDspe3N3aXRjaChoLnRhZyl7Y2FzZSA1Olg9aC5zdGF0ZU5vZGU7WWo9ITE7YnJlYWsgYTtjYXNlIDM6WD1oLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO2JyZWFrIGE7Y2FzZSA0Olg9aC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDticmVhayBhfWg9aC5yZXR1cm59aWYobnVsbD09PVgpdGhyb3cgRXJyb3IocCgxNjApKTthayhmLGcsZSk7WD1udWxsO1lqPSExO3ZhciBrPWUuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5yZXR1cm49bnVsbCk7ZS5yZXR1cm49bnVsbH1jYXRjaChsKXtXKGUsYixsKX19aWYoYi5zdWJ0cmVlRmxhZ3MmMTI4NTQpZm9yKGI9Yi5jaGlsZDtudWxsIT09YjspZWsoYixhKSxiPWIuc2libGluZ31cbmZ1bmN0aW9uIGVrKGEsYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLmZsYWdzO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmRrKGIsYSk7ZmsoYSk7aWYoZCY0KXt0cnl7UWooMyxhLGEucmV0dXJuKSxSaigzLGEpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX10cnl7UWooNSxhLGEucmV0dXJuKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWJyZWFrO2Nhc2UgMTpkayhiLGEpO2ZrKGEpO2QmNTEyJiZudWxsIT09YyYmTWooYyxjLnJldHVybik7YnJlYWs7Y2FzZSA1OmRrKGIsYSk7ZmsoYSk7ZCY1MTImJm51bGwhPT1jJiZNaihjLGMucmV0dXJuKTtpZihhLmZsYWdzJjMyKXt2YXIgZT1hLnN0YXRlTm9kZTt0cnl7b2IoZSxcIlwiKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWlmKGQmNCYmKGU9YS5zdGF0ZU5vZGUsbnVsbCE9ZSkpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcyxnPW51bGwhPT1jP2MubWVtb2l6ZWRQcm9wczpmLGg9YS50eXBlLGs9YS51cGRhdGVRdWV1ZTtcbmEudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09ayl0cnl7XCJpbnB1dFwiPT09aCYmXCJyYWRpb1wiPT09Zi50eXBlJiZudWxsIT1mLm5hbWUmJmFiKGUsZik7dmIoaCxnKTt2YXIgbD12YihoLGYpO2ZvcihnPTA7ZzxrLmxlbmd0aDtnKz0yKXt2YXIgbT1rW2ddLHE9a1tnKzFdO1wic3R5bGVcIj09PW0/c2IoZSxxKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1tP25iKGUscSk6XCJjaGlsZHJlblwiPT09bT9vYihlLHEpOnRhKGUsbSxxLGwpfXN3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpiYihlLGYpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGUsZik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnZhciByPWUuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZTtlLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFmLm11bHRpcGxlO3ZhciB5PWYudmFsdWU7bnVsbCE9eT9mYihlLCEhZi5tdWx0aXBsZSx5LCExKTpyIT09ISFmLm11bHRpcGxlJiYobnVsbCE9Zi5kZWZhdWx0VmFsdWU/ZmIoZSwhIWYubXVsdGlwbGUsXG5mLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoZSwhIWYubXVsdGlwbGUsZi5tdWx0aXBsZT9bXTpcIlwiLCExKSl9ZVtQZl09Zn1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWJyZWFrO2Nhc2UgNjpkayhiLGEpO2ZrKGEpO2lmKGQmNCl7aWYobnVsbD09PWEuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTYyKSk7ZT1hLnN0YXRlTm9kZTtmPWEubWVtb2l6ZWRQcm9wczt0cnl7ZS5ub2RlVmFsdWU9Zn1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWJyZWFrO2Nhc2UgMzpkayhiLGEpO2ZrKGEpO2lmKGQmNCYmbnVsbCE9PWMmJmMubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpdHJ5e2JkKGIuY29udGFpbmVySW5mbyl9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfWJyZWFrO2Nhc2UgNDpkayhiLGEpO2ZrKGEpO2JyZWFrO2Nhc2UgMTM6ZGsoYixhKTtmayhhKTtlPWEuY2hpbGQ7ZS5mbGFncyY4MTkyJiYoZj1udWxsIT09ZS5tZW1vaXplZFN0YXRlLGUuc3RhdGVOb2RlLmlzSGlkZGVuPWYsIWZ8fFxubnVsbCE9PWUuYWx0ZXJuYXRlJiZudWxsIT09ZS5hbHRlcm5hdGUubWVtb2l6ZWRTdGF0ZXx8KGdrPUIoKSkpO2QmNCYmYmsoYSk7YnJlYWs7Y2FzZSAyMjptPW51bGwhPT1jJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlO2EubW9kZSYxPyhVPShsPVUpfHxtLGRrKGIsYSksVT1sKTpkayhiLGEpO2ZrKGEpO2lmKGQmODE5Mil7bD1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKChhLnN0YXRlTm9kZS5pc0hpZGRlbj1sKSYmIW0mJjAhPT0oYS5tb2RlJjEpKWZvcihWPWEsbT1hLmNoaWxkO251bGwhPT1tOyl7Zm9yKHE9Vj1tO251bGwhPT1WOyl7cj1WO3k9ci5jaGlsZDtzd2l0Y2goci50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpRaig0LHIsci5yZXR1cm4pO2JyZWFrO2Nhc2UgMTpNaihyLHIucmV0dXJuKTt2YXIgbj1yLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbi5jb21wb25lbnRXaWxsVW5tb3VudCl7ZD1yO2M9ci5yZXR1cm47dHJ5e2I9ZCxuLnByb3BzPVxuYi5tZW1vaXplZFByb3BzLG4uc3RhdGU9Yi5tZW1vaXplZFN0YXRlLG4uY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaCh0KXtXKGQsYyx0KX19YnJlYWs7Y2FzZSA1Ok1qKHIsci5yZXR1cm4pO2JyZWFrO2Nhc2UgMjI6aWYobnVsbCE9PXIubWVtb2l6ZWRTdGF0ZSl7aGsocSk7Y29udGludWV9fW51bGwhPT15Pyh5LnJldHVybj1yLFY9eSk6aGsocSl9bT1tLnNpYmxpbmd9YTpmb3IobT1udWxsLHE9YTs7KXtpZig1PT09cS50YWcpe2lmKG51bGw9PT1tKXttPXE7dHJ5e2U9cS5zdGF0ZU5vZGUsbD8oZj1lLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooaD1xLnN0YXRlTm9kZSxrPXEubWVtb2l6ZWRQcm9wcy5zdHlsZSxnPXZvaWQgMCE9PWsmJm51bGwhPT1rJiZrLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9rLmRpc3BsYXk6bnVsbCxoLnN0eWxlLmRpc3BsYXk9XG5yYihcImRpc3BsYXlcIixnKSl9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX19ZWxzZSBpZig2PT09cS50YWcpe2lmKG51bGw9PT1tKXRyeXtxLnN0YXRlTm9kZS5ub2RlVmFsdWU9bD9cIlwiOnEubWVtb2l6ZWRQcm9wc31jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWVsc2UgaWYoKDIyIT09cS50YWcmJjIzIT09cS50YWd8fG51bGw9PT1xLm1lbW9pemVkU3RhdGV8fHE9PT1hKSYmbnVsbCE9PXEuY2hpbGQpe3EuY2hpbGQucmV0dXJuPXE7cT1xLmNoaWxkO2NvbnRpbnVlfWlmKHE9PT1hKWJyZWFrIGE7Zm9yKDtudWxsPT09cS5zaWJsaW5nOyl7aWYobnVsbD09PXEucmV0dXJufHxxLnJldHVybj09PWEpYnJlYWsgYTttPT09cSYmKG09bnVsbCk7cT1xLnJldHVybn1tPT09cSYmKG09bnVsbCk7cS5zaWJsaW5nLnJldHVybj1xLnJldHVybjtxPXEuc2libGluZ319YnJlYWs7Y2FzZSAxOTpkayhiLGEpO2ZrKGEpO2QmNCYmYmsoYSk7YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OmRrKGIsXG5hKSxmayhhKX19ZnVuY3Rpb24gZmsoYSl7dmFyIGI9YS5mbGFncztpZihiJjIpe3RyeXthOntmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZihVaihjKSl7dmFyIGQ9YzticmVhayBhfWM9Yy5yZXR1cm59dGhyb3cgRXJyb3IocCgxNjApKTt9c3dpdGNoKGQudGFnKXtjYXNlIDU6dmFyIGU9ZC5zdGF0ZU5vZGU7ZC5mbGFncyYzMiYmKG9iKGUsXCJcIiksZC5mbGFncyY9LTMzKTt2YXIgZj1WaihhKTtYaihhLGYsZSk7YnJlYWs7Y2FzZSAzOmNhc2UgNDp2YXIgZz1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGg9VmooYSk7V2ooYSxoLGcpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjEpKTt9fWNhdGNoKGspe1coYSxhLnJldHVybixrKX1hLmZsYWdzJj0tM31iJjQwOTYmJihhLmZsYWdzJj0tNDA5Nyl9ZnVuY3Rpb24gaWsoYSxiLGMpe1Y9YTtqayhhLGIsYyl9XG5mdW5jdGlvbiBqayhhLGIsYyl7Zm9yKHZhciBkPTAhPT0oYS5tb2RlJjEpO251bGwhPT1WOyl7dmFyIGU9VixmPWUuY2hpbGQ7aWYoMjI9PT1lLnRhZyYmZCl7dmFyIGc9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZXx8S2o7aWYoIWcpe3ZhciBoPWUuYWx0ZXJuYXRlLGs9bnVsbCE9PWgmJm51bGwhPT1oLm1lbW9pemVkU3RhdGV8fFU7aD1Lajt2YXIgbD1VO0tqPWc7aWYoKFU9aykmJiFsKWZvcihWPWU7bnVsbCE9PVY7KWc9VixrPWcuY2hpbGQsMjI9PT1nLnRhZyYmbnVsbCE9PWcubWVtb2l6ZWRTdGF0ZT9rayhlKTpudWxsIT09az8oay5yZXR1cm49ZyxWPWspOmtrKGUpO2Zvcig7bnVsbCE9PWY7KVY9ZixqayhmLGIsYyksZj1mLnNpYmxpbmc7Vj1lO0tqPWg7VT1sfWxrKGEsYixjKX1lbHNlIDAhPT0oZS5zdWJ0cmVlRmxhZ3MmODc3MikmJm51bGwhPT1mPyhmLnJldHVybj1lLFY9Zik6bGsoYSxiLGMpfX1cbmZ1bmN0aW9uIGxrKGEpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYj1WO2lmKDAhPT0oYi5mbGFncyY4NzcyKSl7dmFyIGM9Yi5hbHRlcm5hdGU7dHJ5e2lmKDAhPT0oYi5mbGFncyY4NzcyKSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VXx8UmooNSxiKTticmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoYi5mbGFncyY0JiYhVSlpZihudWxsPT09YylkLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZT1iLmVsZW1lbnRUeXBlPT09Yi50eXBlP2MubWVtb2l6ZWRQcm9wczpMZyhiLnR5cGUsYy5tZW1vaXplZFByb3BzKTtkLmNvbXBvbmVudERpZFVwZGF0ZShlLGMubWVtb2l6ZWRTdGF0ZSxkLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgZj1iLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiZpaChiLGYsZCk7YnJlYWs7Y2FzZSAzOnZhciBnPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWcpe2M9bnVsbDtpZihudWxsIT09Yi5jaGlsZClzd2l0Y2goYi5jaGlsZC50YWcpe2Nhc2UgNTpjPVxuYi5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmM9Yi5jaGlsZC5zdGF0ZU5vZGV9aWgoYixnLGMpfWJyZWFrO2Nhc2UgNTp2YXIgaD1iLnN0YXRlTm9kZTtpZihudWxsPT09YyYmYi5mbGFncyY0KXtjPWg7dmFyIGs9Yi5tZW1vaXplZFByb3BzO3N3aXRjaChiLnR5cGUpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ay5hdXRvRm9jdXMmJmMuZm9jdXMoKTticmVhaztjYXNlIFwiaW1nXCI6ay5zcmMmJihjLnNyYz1rLnNyYyl9fWJyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmlmKG51bGw9PT1iLm1lbW9pemVkU3RhdGUpe3ZhciBsPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1sKXt2YXIgbT1sLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PW0pe3ZhciBxPW0uZGVoeWRyYXRlZDtudWxsIT09cSYmYmQocSl9fX1icmVhaztjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMTpjYXNlIDIyOmNhc2UgMjM6Y2FzZSAyNTpicmVhaztcbmRlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9VXx8Yi5mbGFncyY1MTImJlNqKGIpfWNhdGNoKHIpe1coYixiLnJldHVybixyKX19aWYoYj09PWEpe1Y9bnVsbDticmVha31jPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47Vj1jO2JyZWFrfVY9Yi5yZXR1cm59fWZ1bmN0aW9uIGhrKGEpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYj1WO2lmKGI9PT1hKXtWPW51bGw7YnJlYWt9dmFyIGM9Yi5zaWJsaW5nO2lmKG51bGwhPT1jKXtjLnJldHVybj1iLnJldHVybjtWPWM7YnJlYWt9Vj1iLnJldHVybn19XG5mdW5jdGlvbiBrayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9Vjt0cnl7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnZhciBjPWIucmV0dXJuO3RyeXtSaig0LGIpfWNhdGNoKGspe1coYixjLGspfWJyZWFrO2Nhc2UgMTp2YXIgZD1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCl7dmFyIGU9Yi5yZXR1cm47dHJ5e2QuY29tcG9uZW50RGlkTW91bnQoKX1jYXRjaChrKXtXKGIsZSxrKX19dmFyIGY9Yi5yZXR1cm47dHJ5e1NqKGIpfWNhdGNoKGspe1coYixmLGspfWJyZWFrO2Nhc2UgNTp2YXIgZz1iLnJldHVybjt0cnl7U2ooYil9Y2F0Y2goayl7VyhiLGcsayl9fX1jYXRjaChrKXtXKGIsYi5yZXR1cm4sayl9aWYoYj09PWEpe1Y9bnVsbDticmVha312YXIgaD1iLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWIucmV0dXJuO1Y9aDticmVha31WPWIucmV0dXJufX1cbnZhciBtaz1NYXRoLmNlaWwsbms9dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixvaz11YS5SZWFjdEN1cnJlbnRPd25lcixwaz11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxLPTAsUj1udWxsLFk9bnVsbCxaPTAsZ2o9MCxmaj1VZigwKSxUPTAscWs9bnVsbCxoaD0wLHJrPTAsc2s9MCx0az1udWxsLHVrPW51bGwsZ2s9MCxIaj1JbmZpbml0eSx2az1udWxsLFBpPSExLFFpPW51bGwsU2k9bnVsbCx3az0hMSx4az1udWxsLHlrPTAsems9MCxBaz1udWxsLEJrPS0xLENrPTA7ZnVuY3Rpb24gTCgpe3JldHVybiAwIT09KEsmNik/QigpOi0xIT09Qms/Qms6Qms9QigpfVxuZnVuY3Rpb24gbGgoYSl7aWYoMD09PShhLm1vZGUmMSkpcmV0dXJuIDE7aWYoMCE9PShLJjIpJiYwIT09WilyZXR1cm4gWiYtWjtpZihudWxsIT09S2cudHJhbnNpdGlvbilyZXR1cm4gMD09PUNrJiYoQ2s9eWMoKSksQ2s7YT1DO2lmKDAhPT1hKXJldHVybiBhO2E9d2luZG93LmV2ZW50O2E9dm9pZCAwPT09YT8xNjpqZChhLnR5cGUpO3JldHVybiBhfWZ1bmN0aW9uIG1oKGEsYixjLGQpe2lmKDUwPHprKXRocm93IHprPTAsQWs9bnVsbCxFcnJvcihwKDE4NSkpO0FjKGEsYyxkKTtpZigwPT09KEsmMil8fGEhPT1SKWE9PT1SJiYoMD09PShLJjIpJiYocmt8PWMpLDQ9PT1UJiZEayhhLFopKSxFayhhLGQpLDE9PT1jJiYwPT09SyYmMD09PShiLm1vZGUmMSkmJihIaj1CKCkrNTAwLGZnJiZqZygpKX1cbmZ1bmN0aW9uIEVrKGEsYil7dmFyIGM9YS5jYWxsYmFja05vZGU7d2MoYSxiKTt2YXIgZD11YyhhLGE9PT1SP1o6MCk7aWYoMD09PWQpbnVsbCE9PWMmJmJjKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTA7ZWxzZSBpZihiPWQmLWQsYS5jYWxsYmFja1ByaW9yaXR5IT09Yil7bnVsbCE9YyYmYmMoYyk7aWYoMT09PWIpMD09PWEudGFnP2lnKEZrLmJpbmQobnVsbCxhKSk6aGcoRmsuYmluZChudWxsLGEpKSxKZihmdW5jdGlvbigpezA9PT0oSyY2KSYmamcoKX0pLGM9bnVsbDtlbHNle3N3aXRjaChEYyhkKSl7Y2FzZSAxOmM9ZmM7YnJlYWs7Y2FzZSA0OmM9Z2M7YnJlYWs7Y2FzZSAxNjpjPWhjO2JyZWFrO2Nhc2UgNTM2ODcwOTEyOmM9amM7YnJlYWs7ZGVmYXVsdDpjPWhjfWM9R2soYyxIay5iaW5kKG51bGwsYSkpfWEuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gSGsoYSxiKXtCaz0tMTtDaz0wO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO3ZhciBjPWEuY2FsbGJhY2tOb2RlO2lmKElrKCkmJmEuY2FsbGJhY2tOb2RlIT09YylyZXR1cm4gbnVsbDt2YXIgZD11YyhhLGE9PT1SP1o6MCk7aWYoMD09PWQpcmV0dXJuIG51bGw7aWYoMCE9PShkJjMwKXx8MCE9PShkJmEuZXhwaXJlZExhbmVzKXx8YiliPUprKGEsZCk7ZWxzZXtiPWQ7dmFyIGU9SztLfD0yO3ZhciBmPUtrKCk7aWYoUiE9PWF8fFohPT1iKXZrPW51bGwsSGo9QigpKzUwMCxMayhhLGIpO2RvIHRyeXtNaygpO2JyZWFrfWNhdGNoKGgpe05rKGEsaCl9d2hpbGUoMSk7UWcoKTtuay5jdXJyZW50PWY7Sz1lO251bGwhPT1ZP2I9MDooUj1udWxsLFo9MCxiPVQpfWlmKDAhPT1iKXsyPT09YiYmKGU9eGMoYSksMCE9PWUmJihkPWUsYj1PayhhLGUpKSk7aWYoMT09PWIpdGhyb3cgYz1xayxMayhhLDApLERrKGEsZCksRWsoYSxCKCkpLGM7aWYoNj09PWIpRGsoYSxkKTtcbmVsc2V7ZT1hLmN1cnJlbnQuYWx0ZXJuYXRlO2lmKDA9PT0oZCYzMCkmJiFQayhlKSYmKGI9SmsoYSxkKSwyPT09YiYmKGY9eGMoYSksMCE9PWYmJihkPWYsYj1PayhhLGYpKSksMT09PWIpKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGQpLEVrKGEsQigpKSxjO2EuZmluaXNoZWRXb3JrPWU7YS5maW5pc2hlZExhbmVzPWQ7c3dpdGNoKGIpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IocCgzNDUpKTtjYXNlIDI6UWsoYSx1ayx2ayk7YnJlYWs7Y2FzZSAzOkRrKGEsZCk7aWYoKGQmMTMwMDIzNDI0KT09PWQmJihiPWdrKzUwMC1CKCksMTA8Yikpe2lmKDAhPT11YyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZkKSE9PWQpe0woKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUZmKFFrLmJpbmQobnVsbCxhLHVrLHZrKSxiKTticmVha31RayhhLHVrLHZrKTticmVhaztjYXNlIDQ6RGsoYSxkKTtpZigoZCY0MTk0MjQwKT09PVxuZClicmVhaztiPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGQ7KXt2YXIgZz0zMS1vYyhkKTtmPTE8PGc7Zz1iW2ddO2c+ZSYmKGU9Zyk7ZCY9fmZ9ZD1lO2Q9QigpLWQ7ZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCptayhkLzE5NjApKS1kO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1GZihRay5iaW5kKG51bGwsYSx1ayx2ayksZCk7YnJlYWt9UWsoYSx1ayx2ayk7YnJlYWs7Y2FzZSA1OlFrKGEsdWssdmspO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgzMjkpKTt9fX1FayhhLEIoKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yz9Iay5iaW5kKG51bGwsYSk6bnVsbH1cbmZ1bmN0aW9uIE9rKGEsYil7dmFyIGM9dGs7YS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYoTGsoYSxiKS5mbGFnc3w9MjU2KTthPUprKGEsYik7MiE9PWEmJihiPXVrLHVrPWMsbnVsbCE9PWImJkdqKGIpKTtyZXR1cm4gYX1mdW5jdGlvbiBHaihhKXtudWxsPT09dWs/dWs9YTp1ay5wdXNoLmFwcGx5KHVrLGEpfVxuZnVuY3Rpb24gUGsoYSl7Zm9yKHZhciBiPWE7Oyl7aWYoYi5mbGFncyYxNjM4NCl7dmFyIGM9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YyYmKGM9Yy5zdG9yZXMsbnVsbCE9PWMpKWZvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdLGY9ZS5nZXRTbmFwc2hvdDtlPWUudmFsdWU7dHJ5e2lmKCFIZShmKCksZSkpcmV0dXJuITF9Y2F0Y2goZyl7cmV0dXJuITF9fX1jPWIuY2hpbGQ7aWYoYi5zdWJ0cmVlRmxhZ3MmMTYzODQmJm51bGwhPT1jKWMucmV0dXJuPWIsYj1jO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuITA7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4hMH1cbmZ1bmN0aW9uIERrKGEsYil7YiY9fnNrO2ImPX5yazthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLW9jKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1mdW5jdGlvbiBGayhhKXtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTtJaygpO3ZhciBiPXVjKGEsMCk7aWYoMD09PShiJjEpKXJldHVybiBFayhhLEIoKSksbnVsbDt2YXIgYz1KayhhLGIpO2lmKDAhPT1hLnRhZyYmMj09PWMpe3ZhciBkPXhjKGEpOzAhPT1kJiYoYj1kLGM9T2soYSxkKSl9aWYoMT09PWMpdGhyb3cgYz1xayxMayhhLDApLERrKGEsYiksRWsoYSxCKCkpLGM7aWYoNj09PWMpdGhyb3cgRXJyb3IocCgzNDUpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1FrKGEsdWssdmspO0VrKGEsQigpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFJrKGEsYil7dmFyIGM9SztLfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e0s9YywwPT09SyYmKEhqPUIoKSs1MDAsZmcmJmpnKCkpfX1mdW5jdGlvbiBTayhhKXtudWxsIT09eGsmJjA9PT14ay50YWcmJjA9PT0oSyY2KSYmSWsoKTt2YXIgYj1LO0t8PTE7dmFyIGM9cGsudHJhbnNpdGlvbixkPUM7dHJ5e2lmKHBrLnRyYW5zaXRpb249bnVsbCxDPTEsYSlyZXR1cm4gYSgpfWZpbmFsbHl7Qz1kLHBrLnRyYW5zaXRpb249YyxLPWIsMD09PShLJjYpJiZqZygpfX1mdW5jdGlvbiBJaigpe2dqPWZqLmN1cnJlbnQ7RShmail9XG5mdW5jdGlvbiBMayhhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxHZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3dnKGQpO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiYkZigpO2JyZWFrO2Nhc2UgMzpKaCgpO0UoV2YpO0UoSCk7T2goKTticmVhaztjYXNlIDU6TGgoZCk7YnJlYWs7Y2FzZSA0OkpoKCk7YnJlYWs7Y2FzZSAxMzpFKE0pO2JyZWFrO2Nhc2UgMTk6RShNKTticmVhaztjYXNlIDEwOlJnKGQudHlwZS5fY29udGV4dCk7YnJlYWs7Y2FzZSAyMjpjYXNlIDIzOklqKCl9Yz1jLnJldHVybn1SPWE7WT1hPXdoKGEuY3VycmVudCxudWxsKTtaPWdqPWI7VD0wO3FrPW51bGw7c2s9cms9aGg9MDt1az10az1udWxsO2lmKG51bGwhPT1XZyl7Zm9yKGI9XG4wO2I8V2cubGVuZ3RoO2IrKylpZihjPVdnW2JdLGQ9Yy5pbnRlcmxlYXZlZCxudWxsIT09ZCl7Yy5pbnRlcmxlYXZlZD1udWxsO3ZhciBlPWQubmV4dCxmPWMucGVuZGluZztpZihudWxsIT09Zil7dmFyIGc9Zi5uZXh0O2YubmV4dD1lO2QubmV4dD1nfWMucGVuZGluZz1kfVdnPW51bGx9cmV0dXJuIGF9XG5mdW5jdGlvbiBOayhhLGIpe2Rve3ZhciBjPVk7dHJ5e1FnKCk7UGguY3VycmVudD1haTtpZihTaCl7Zm9yKHZhciBkPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9U2g9ITF9Umg9MDtQPU89Tj1udWxsO1RoPSExO1VoPTA7b2suY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Q9MTtxaz1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVo7aC5mbGFnc3w9MzI3Njg7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9ayxtPWgscT1tLnRhZztpZigwPT09KG0ubW9kZSYxKSYmKDA9PT1xfHwxMT09PXF8fDE1PT09cSkpe3ZhciByPW0uYWx0ZXJuYXRlO3I/KG0udXBkYXRlUXVldWU9ci51cGRhdGVRdWV1ZSxtLm1lbW9pemVkU3RhdGU9ci5tZW1vaXplZFN0YXRlLFxubS5sYW5lcz1yLmxhbmVzKToobS51cGRhdGVRdWV1ZT1udWxsLG0ubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgeT1WaShnKTtpZihudWxsIT09eSl7eS5mbGFncyY9LTI1NztXaSh5LGcsaCxmLGIpO3kubW9kZSYxJiZUaShmLGwsYik7Yj15O2s9bDt2YXIgbj1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1uKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO2IudXBkYXRlUXVldWU9dH1lbHNlIG4uYWRkKGspO2JyZWFrIGF9ZWxzZXtpZigwPT09KGImMSkpe1RpKGYsbCxiKTt1aigpO2JyZWFrIGF9az1FcnJvcihwKDQyNikpfX1lbHNlIGlmKEkmJmgubW9kZSYxKXt2YXIgSj1WaShnKTtpZihudWxsIT09Sil7MD09PShKLmZsYWdzJjY1NTM2KSYmKEouZmxhZ3N8PTI1Nik7V2koSixnLGgsZixiKTtKZyhLaShrLGgpKTticmVhayBhfX1mPWs9S2koayxoKTs0IT09VCYmKFQ9Mik7bnVsbD09PXRrP3RrPVtmXTp0ay5wdXNoKGYpO2Y9Zztkb3tzd2l0Y2goZi50YWcpe2Nhc2UgMzpmLmZsYWdzfD02NTUzNjtcbmImPS1iO2YubGFuZXN8PWI7dmFyIHg9T2koZixrLGIpO2ZoKGYseCk7YnJlYWsgYTtjYXNlIDE6aD1rO3ZhciB3PWYudHlwZSx1PWYuc3RhdGVOb2RlO2lmKDA9PT0oZi5mbGFncyYxMjgpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHUuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09U2l8fCFTaS5oYXModSkpKSl7Zi5mbGFnc3w9NjU1MzY7YiY9LWI7Zi5sYW5lc3w9Yjt2YXIgRj1SaShmLGgsYik7ZmgoZixGKTticmVhayBhfX1mPWYucmV0dXJufXdoaWxlKG51bGwhPT1mKX1UayhjKX1jYXRjaChuYSl7Yj1uYTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfWZ1bmN0aW9uIEtrKCl7dmFyIGE9bmsuY3VycmVudDtuay5jdXJyZW50PWFpO3JldHVybiBudWxsPT09YT9haTphfVxuZnVuY3Rpb24gdWooKXtpZigwPT09VHx8Mz09PVR8fDI9PT1UKVQ9NDtudWxsPT09Unx8MD09PShoaCYyNjg0MzU0NTUpJiYwPT09KHJrJjI2ODQzNTQ1NSl8fERrKFIsWil9ZnVuY3Rpb24gSmsoYSxiKXt2YXIgYz1LO0t8PTI7dmFyIGQ9S2soKTtpZihSIT09YXx8WiE9PWIpdms9bnVsbCxMayhhLGIpO2RvIHRyeXtVaygpO2JyZWFrfWNhdGNoKGUpe05rKGEsZSl9d2hpbGUoMSk7UWcoKTtLPWM7bmsuY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHAoMjYxKSk7Uj1udWxsO1o9MDtyZXR1cm4gVH1mdW5jdGlvbiBVaygpe2Zvcig7bnVsbCE9PVk7KVZrKFkpfWZ1bmN0aW9uIE1rKCl7Zm9yKDtudWxsIT09WSYmIWNjKCk7KVZrKFkpfWZ1bmN0aW9uIFZrKGEpe3ZhciBiPVdrKGEuYWx0ZXJuYXRlLGEsZ2opO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9UayhhKTpZPWI7b2suY3VycmVudD1udWxsfVxuZnVuY3Rpb24gVGsoYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYzMjc2OCkpe2lmKGM9RmooYyxiLGdqKSxudWxsIT09Yyl7WT1jO3JldHVybn19ZWxzZXtjPUpqKGMsYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTMyNzY3O1k9YztyZXR1cm59aWYobnVsbCE9PWEpYS5mbGFnc3w9MzI3NjgsYS5zdWJ0cmVlRmxhZ3M9MCxhLmRlbGV0aW9ucz1udWxsO2Vsc2V7VD02O1k9bnVsbDtyZXR1cm59fWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09VCYmKFQ9NSl9ZnVuY3Rpb24gUWsoYSxiLGMpe3ZhciBkPUMsZT1way50cmFuc2l0aW9uO3RyeXtway50cmFuc2l0aW9uPW51bGwsQz0xLFhrKGEsYixjLGQpfWZpbmFsbHl7cGsudHJhbnNpdGlvbj1lLEM9ZH1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFhrKGEsYixjLGQpe2RvIElrKCk7d2hpbGUobnVsbCE9PXhrKTtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTtjPWEuZmluaXNoZWRXb3JrO3ZhciBlPWEuZmluaXNoZWRMYW5lcztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IocCgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tQcmlvcml0eT0wO3ZhciBmPWMubGFuZXN8Yy5jaGlsZExhbmVzO0JjKGEsZik7YT09PVImJihZPVI9bnVsbCxaPTApOzA9PT0oYy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJjA9PT0oYy5mbGFncyYyMDY0KXx8d2t8fCh3az0hMCxHayhoYyxmdW5jdGlvbigpe0lrKCk7cmV0dXJuIG51bGx9KSk7Zj0wIT09KGMuZmxhZ3MmMTU5OTApO2lmKDAhPT0oYy5zdWJ0cmVlRmxhZ3MmMTU5OTApfHxmKXtmPXBrLnRyYW5zaXRpb247cGsudHJhbnNpdGlvbj1udWxsO1xudmFyIGc9QztDPTE7dmFyIGg9SztLfD00O29rLmN1cnJlbnQ9bnVsbDtQaihhLGMpO2VrKGMsYSk7T2UoRGYpO2RkPSEhQ2Y7RGY9Q2Y9bnVsbDthLmN1cnJlbnQ9YztpayhjLGEsZSk7ZGMoKTtLPWg7Qz1nO3BrLnRyYW5zaXRpb249Zn1lbHNlIGEuY3VycmVudD1jO3drJiYod2s9ITEseGs9YSx5az1lKTtmPWEucGVuZGluZ0xhbmVzOzA9PT1mJiYoU2k9bnVsbCk7bWMoYy5zdGF0ZU5vZGUsZCk7RWsoYSxCKCkpO2lmKG51bGwhPT1iKWZvcihkPWEub25SZWNvdmVyYWJsZUVycm9yLGM9MDtjPGIubGVuZ3RoO2MrKyllPWJbY10sZChlLnZhbHVlLHtjb21wb25lbnRTdGFjazplLnN0YWNrLGRpZ2VzdDplLmRpZ2VzdH0pO2lmKFBpKXRocm93IFBpPSExLGE9UWksUWk9bnVsbCxhOzAhPT0oeWsmMSkmJjAhPT1hLnRhZyYmSWsoKTtmPWEucGVuZGluZ0xhbmVzOzAhPT0oZiYxKT9hPT09QWs/emsrKzooems9MCxBaz1hKTp6az0wO2pnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBJaygpe2lmKG51bGwhPT14ayl7dmFyIGE9RGMoeWspLGI9cGsudHJhbnNpdGlvbixjPUM7dHJ5e3BrLnRyYW5zaXRpb249bnVsbDtDPTE2PmE/MTY6YTtpZihudWxsPT09eGspdmFyIGQ9ITE7ZWxzZXthPXhrO3hrPW51bGw7eWs9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMzEpKTt2YXIgZT1LO0t8PTQ7Zm9yKFY9YS5jdXJyZW50O251bGwhPT1WOyl7dmFyIGY9VixnPWYuY2hpbGQ7aWYoMCE9PShWLmZsYWdzJjE2KSl7dmFyIGg9Zi5kZWxldGlvbnM7aWYobnVsbCE9PWgpe2Zvcih2YXIgaz0wO2s8aC5sZW5ndGg7aysrKXt2YXIgbD1oW2tdO2ZvcihWPWw7bnVsbCE9PVY7KXt2YXIgbT1WO3N3aXRjaChtLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpRaig4LG0sZil9dmFyIHE9bS5jaGlsZDtpZihudWxsIT09cSlxLnJldHVybj1tLFY9cTtlbHNlIGZvcig7bnVsbCE9PVY7KXttPVY7dmFyIHI9bS5zaWJsaW5nLHk9bS5yZXR1cm47VGoobSk7aWYobT09PVxubCl7Vj1udWxsO2JyZWFrfWlmKG51bGwhPT1yKXtyLnJldHVybj15O1Y9cjticmVha31WPXl9fX12YXIgbj1mLmFsdGVybmF0ZTtpZihudWxsIT09bil7dmFyIHQ9bi5jaGlsZDtpZihudWxsIT09dCl7bi5jaGlsZD1udWxsO2Rve3ZhciBKPXQuc2libGluZzt0LnNpYmxpbmc9bnVsbDt0PUp9d2hpbGUobnVsbCE9PXQpfX1WPWZ9fWlmKDAhPT0oZi5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1nKWcucmV0dXJuPWYsVj1nO2Vsc2UgYjpmb3IoO251bGwhPT1WOyl7Zj1WO2lmKDAhPT0oZi5mbGFncyYyMDQ4KSlzd2l0Y2goZi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UWooOSxmLGYucmV0dXJuKX12YXIgeD1mLnNpYmxpbmc7aWYobnVsbCE9PXgpe3gucmV0dXJuPWYucmV0dXJuO1Y9eDticmVhayBifVY9Zi5yZXR1cm59fXZhciB3PWEuY3VycmVudDtmb3IoVj13O251bGwhPT1WOyl7Zz1WO3ZhciB1PWcuY2hpbGQ7aWYoMCE9PShnLnN1YnRyZWVGbGFncyYyMDY0KSYmbnVsbCE9PVxudSl1LnJldHVybj1nLFY9dTtlbHNlIGI6Zm9yKGc9dztudWxsIT09Vjspe2g9VjtpZigwIT09KGguZmxhZ3MmMjA0OCkpdHJ5e3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpSaig5LGgpfX1jYXRjaChuYSl7VyhoLGgucmV0dXJuLG5hKX1pZihoPT09Zyl7Vj1udWxsO2JyZWFrIGJ9dmFyIEY9aC5zaWJsaW5nO2lmKG51bGwhPT1GKXtGLnJldHVybj1oLnJldHVybjtWPUY7YnJlYWsgYn1WPWgucmV0dXJufX1LPWU7amcoKTtpZihsYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGxjLm9uUG9zdENvbW1pdEZpYmVyUm9vdCl0cnl7bGMub25Qb3N0Q29tbWl0RmliZXJSb290KGtjLGEpfWNhdGNoKG5hKXt9ZD0hMH1yZXR1cm4gZH1maW5hbGx5e0M9Yyxway50cmFuc2l0aW9uPWJ9fXJldHVybiExfWZ1bmN0aW9uIFlrKGEsYixjKXtiPUtpKGMsYik7Yj1PaShhLGIsMSk7YT1kaChhLGIsMSk7Yj1MKCk7bnVsbCE9PWEmJihBYyhhLDEsYiksRWsoYSxiKSl9XG5mdW5jdGlvbiBXKGEsYixjKXtpZigzPT09YS50YWcpWWsoYSxhLGMpO2Vsc2UgZm9yKDtudWxsIT09Yjspe2lmKDM9PT1iLnRhZyl7WWsoYixhLGMpO2JyZWFrfWVsc2UgaWYoMT09PWIudGFnKXt2YXIgZD1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09U2l8fCFTaS5oYXMoZCkpKXthPUtpKGMsYSk7YT1SaShiLGEsMSk7Yj1kaChiLGEsMSk7YT1MKCk7bnVsbCE9PWImJihBYyhiLDEsYSksRWsoYixhKSk7YnJlYWt9fWI9Yi5yZXR1cm59fVxuZnVuY3Rpb24gVWkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUwoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7Uj09PWEmJihaJmMpPT09YyYmKDQ9PT1UfHwzPT09VCYmKFomMTMwMDIzNDI0KT09PVomJjUwMD5CKCktZ2s/TGsoYSwwKTpza3w9Yyk7RWsoYSxiKX1mdW5jdGlvbiBaayhhLGIpezA9PT1iJiYoMD09PShhLm1vZGUmMSk/Yj0xOihiPXNjLHNjPDw9MSwwPT09KHNjJjEzMDAyMzQyNCkmJihzYz00MTk0MzA0KSkpO3ZhciBjPUwoKTthPVpnKGEsYik7bnVsbCE9PWEmJihBYyhhLGIsYyksRWsoYSxjKSl9ZnVuY3Rpb24gdmooYSl7dmFyIGI9YS5tZW1vaXplZFN0YXRlLGM9MDtudWxsIT09YiYmKGM9Yi5yZXRyeUxhbmUpO1prKGEsYyl9XG5mdW5jdGlvbiBjayhhLGIpe3ZhciBjPTA7c3dpdGNoKGEudGFnKXtjYXNlIDEzOnZhciBkPWEuc3RhdGVOb2RlO3ZhciBlPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGM9ZS5yZXRyeUxhbmUpO2JyZWFrO2Nhc2UgMTk6ZD1hLnN0YXRlTm9kZTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzE0KSk7fW51bGwhPT1kJiZkLmRlbGV0ZShiKTtaayhhLGMpfXZhciBXaztcbldrPWZ1bmN0aW9uKGEsYixjKXtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8V2YuY3VycmVudClVZz0hMDtlbHNle2lmKDA9PT0oYS5sYW5lcyZjKSYmMD09PShiLmZsYWdzJjEyOCkpcmV0dXJuIFVnPSExLHpqKGEsYixjKTtVZz0wIT09KGEuZmxhZ3MmMTMxMDcyKT8hMDohMX1lbHNlIFVnPSExLEkmJjAhPT0oYi5mbGFncyYxMDQ4NTc2KSYmdWcoYixuZyxiLmluZGV4KTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6dmFyIGQ9Yi50eXBlO2pqKGEsYik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1ZZihiLEguY3VycmVudCk7VGcoYixjKTtlPVhoKG51bGwsYixkLGEsZSxjKTt2YXIgZj1iaSgpO2IuZmxhZ3N8PTE7XCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mPyhiLnRhZz0xLGIubWVtb2l6ZWRTdGF0ZT1udWxsLGIudXBkYXRlUXVldWU9XG5udWxsLFpmKGQpPyhmPSEwLGNnKGIpKTpmPSExLGIubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGwsYWgoYiksZS51cGRhdGVyPW5oLGIuc3RhdGVOb2RlPWUsZS5fcmVhY3RJbnRlcm5hbHM9YixyaChiLGQsYSxjKSxiPWtqKG51bGwsYixkLCEwLGYsYykpOihiLnRhZz0wLEkmJmYmJnZnKGIpLFlpKG51bGwsYixlLGMpLGI9Yi5jaGlsZCk7cmV0dXJuIGI7Y2FzZSAxNjpkPWIuZWxlbWVudFR5cGU7YTp7amooYSxiKTthPWIucGVuZGluZ1Byb3BzO2U9ZC5faW5pdDtkPWUoZC5fcGF5bG9hZCk7Yi50eXBlPWQ7ZT1iLnRhZz0kayhkKTthPUxnKGQsYSk7c3dpdGNoKGUpe2Nhc2UgMDpiPWRqKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1paihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVppKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWoobnVsbCxiLGQsTGcoZC50eXBlLGEpLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IocCgzMDYsXG5kLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLGRqKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLGlqKGEsYixkLGUsYyk7Y2FzZSAzOmE6e2xqKGIpO2lmKG51bGw9PT1hKXRocm93IEVycm9yKHAoMzg3KSk7ZD1iLnBlbmRpbmdQcm9wcztmPWIubWVtb2l6ZWRTdGF0ZTtlPWYuZWxlbWVudDtiaChhLGIpO2doKGIsZCxudWxsLGMpO3ZhciBnPWIubWVtb2l6ZWRTdGF0ZTtkPWcuZWxlbWVudDtpZihmLmlzRGVoeWRyYXRlZClpZihmPXtlbGVtZW50OmQsaXNEZWh5ZHJhdGVkOiExLGNhY2hlOmcuY2FjaGUscGVuZGluZ1N1c3BlbnNlQm91bmRhcmllczpnLnBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXMsdHJhbnNpdGlvbnM6Zy50cmFuc2l0aW9uc30sYi51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9XG5mLGIubWVtb2l6ZWRTdGF0ZT1mLGIuZmxhZ3MmMjU2KXtlPUtpKEVycm9yKHAoNDIzKSksYik7Yj1taihhLGIsZCxjLGUpO2JyZWFrIGF9ZWxzZSBpZihkIT09ZSl7ZT1LaShFcnJvcihwKDQyNCkpLGIpO2I9bWooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgZm9yKHlnPUxmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCkseGc9YixJPSEwLHpnPW51bGwsYz1DaChiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDQwOTYsYz1jLnNpYmxpbmc7ZWxzZXtJZygpO2lmKGQ9PT1lKXtiPSRpKGEsYixjKTticmVhayBhfVlpKGEsYixkLGMpfWI9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIEtoKGIpLG51bGw9PT1hJiZFZyhiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLEVmKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZFZihkLGYpJiYoYi5mbGFnc3w9MzIpLFxuaGooYSxiKSxZaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJkVnKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gcGooYSxiLGMpO2Nhc2UgNDpyZXR1cm4gSWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9QmgoYixudWxsLGQsYyk6WWkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLFppKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFlpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFlpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztmPWIubWVtb2l6ZWRQcm9wcztcbmc9ZS52YWx1ZTtHKE1nLGQuX2N1cnJlbnRWYWx1ZSk7ZC5fY3VycmVudFZhbHVlPWc7aWYobnVsbCE9PWYpaWYoSGUoZi52YWx1ZSxnKSl7aWYoZi5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFXZi5jdXJyZW50KXtiPSRpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihmPWIuY2hpbGQsbnVsbCE9PWYmJihmLnJldHVybj1iKTtudWxsIT09Zjspe3ZhciBoPWYuZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1oKXtnPWYuY2hpbGQ7Zm9yKHZhciBrPWguZmlyc3RDb250ZXh0O251bGwhPT1rOyl7aWYoay5jb250ZXh0PT09ZCl7aWYoMT09PWYudGFnKXtrPWNoKC0xLGMmLWMpO2sudGFnPTI7dmFyIGw9Zi51cGRhdGVRdWV1ZTtpZihudWxsIT09bCl7bD1sLnNoYXJlZDt2YXIgbT1sLnBlbmRpbmc7bnVsbD09PW0/ay5uZXh0PWs6KGsubmV4dD1tLm5leHQsbS5uZXh0PWspO2wucGVuZGluZz1rfX1mLmxhbmVzfD1jO2s9Zi5hbHRlcm5hdGU7bnVsbCE9PWsmJihrLmxhbmVzfD1jKTtTZyhmLnJldHVybixcbmMsYik7aC5sYW5lc3w9YzticmVha31rPWsubmV4dH19ZWxzZSBpZigxMD09PWYudGFnKWc9Zi50eXBlPT09Yi50eXBlP251bGw6Zi5jaGlsZDtlbHNlIGlmKDE4PT09Zi50YWcpe2c9Zi5yZXR1cm47aWYobnVsbD09PWcpdGhyb3cgRXJyb3IocCgzNDEpKTtnLmxhbmVzfD1jO2g9Zy5hbHRlcm5hdGU7bnVsbCE9PWgmJihoLmxhbmVzfD1jKTtTZyhnLGMsYik7Zz1mLnNpYmxpbmd9ZWxzZSBnPWYuY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49ZjtlbHNlIGZvcihnPWY7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWY9Zy5zaWJsaW5nO2lmKG51bGwhPT1mKXtmLnJldHVybj1nLnJldHVybjtnPWY7YnJlYWt9Zz1nLnJldHVybn1mPWd9WWkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZD1iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixUZyhiLGMpLGU9VmcoZSksZD1kKGUpLGIuZmxhZ3N8PTEsWWkoYSxiLGQsYyksXG5iLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGQ9Yi50eXBlLGU9TGcoZCxiLnBlbmRpbmdQcm9wcyksZT1MZyhkLnR5cGUsZSksYWooYSxiLGQsZSxjKTtjYXNlIDE1OnJldHVybiBjaihhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkxnKGQsZSksamooYSxiKSxiLnRhZz0xLFpmKGQpPyhhPSEwLGNnKGIpKTphPSExLFRnKGIsYykscGgoYixkLGUpLHJoKGIsZCxlLGMpLGtqKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4geWooYSxiLGMpO2Nhc2UgMjI6cmV0dXJuIGVqKGEsYixjKX10aHJvdyBFcnJvcihwKDE1NixiLnRhZykpO307ZnVuY3Rpb24gR2soYSxiKXtyZXR1cm4gYWMoYSxiKX1cbmZ1bmN0aW9uIGFsKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5zdWJ0cmVlRmxhZ3M9dGhpcy5mbGFncz0wO3RoaXMuZGVsZXRpb25zPW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIEJnKGEsYixjLGQpe3JldHVybiBuZXcgYWwoYSxiLGMsZCl9ZnVuY3Rpb24gYmooYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uICRrKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaihhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09RGEpcmV0dXJuIDExO2lmKGE9PT1HYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiB3aChhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPUJnKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMuc3VidHJlZUZsYWdzPTAsYy5kZWxldGlvbnM9bnVsbCk7Yy5mbGFncz1hLmZsYWdzJjE0NjgwMDY0O2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiB5aChhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmooYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuIEFoKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgemE6Zz04O2V8PTg7YnJlYWs7Y2FzZSBBYTpyZXR1cm4gYT1CZygxMixjLGIsZXwyKSxhLmVsZW1lbnRUeXBlPUFhLGEubGFuZXM9ZixhO2Nhc2UgRWE6cmV0dXJuIGE9QmcoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9RWEsYS5sYW5lcz1mLGE7Y2FzZSBGYTpyZXR1cm4gYT1CZygxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1GYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiBxaihjLGUsZixiKTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQmE6Zz0xMDticmVhayBhO2Nhc2UgQ2E6Zz05O2JyZWFrIGE7Y2FzZSBEYTpnPTExO1xuYnJlYWsgYTtjYXNlIEdhOmc9MTQ7YnJlYWsgYTtjYXNlIEhhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IocCgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1CZyhnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9QmcoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHFqKGEsYixjLGQpe2E9QmcoMjIsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO2Euc3RhdGVOb2RlPXtpc0hpZGRlbjohMX07cmV0dXJuIGF9ZnVuY3Rpb24geGgoYSxiLGMpe2E9QmcoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gemgoYSxiLGMpe2I9QmcoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBibChhLGIsYyxkLGUpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMuY2FsbGJhY2tOb2RlPXRoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPXpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPXpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPXpjKDApO3RoaXMuaWRlbnRpZmllclByZWZpeD1kO3RoaXMub25SZWNvdmVyYWJsZUVycm9yPWU7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVxubnVsbH1mdW5jdGlvbiBjbChhLGIsYyxkLGUsZixnLGgsayl7YT1uZXcgYmwoYSxiLGMsaCxrKTsxPT09Yj8oYj0xLCEwPT09ZiYmKGJ8PTgpKTpiPTA7Zj1CZygzLG51bGwsbnVsbCxiKTthLmN1cnJlbnQ9ZjtmLnN0YXRlTm9kZT1hO2YubWVtb2l6ZWRTdGF0ZT17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDpjLGNhY2hlOm51bGwsdHJhbnNpdGlvbnM6bnVsbCxwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzOm51bGx9O2FoKGYpO3JldHVybiBhfWZ1bmN0aW9uIGRsKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6d2Esa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBlbChhKXtpZighYSlyZXR1cm4gVmY7YT1hLl9yZWFjdEludGVybmFsczthOntpZihWYihhKSE9PWF8fDEhPT1hLnRhZyl0aHJvdyBFcnJvcihwKDE3MCkpO3ZhciBiPWE7ZG97c3dpdGNoKGIudGFnKXtjYXNlIDM6Yj1iLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGE7Y2FzZSAxOmlmKFpmKGIudHlwZSkpe2I9Yi5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYX19Yj1iLnJldHVybn13aGlsZShudWxsIT09Yik7dGhyb3cgRXJyb3IocCgxNzEpKTt9aWYoMT09PWEudGFnKXt2YXIgYz1hLnR5cGU7aWYoWmYoYykpcmV0dXJuIGJnKGEsYyxiKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGZsKGEsYixjLGQsZSxmLGcsaCxrKXthPWNsKGMsZCwhMCxhLGUsZixnLGgsayk7YS5jb250ZXh0PWVsKG51bGwpO2M9YS5jdXJyZW50O2Q9TCgpO2U9bGgoYyk7Zj1jaChkLGUpO2YuY2FsbGJhY2s9dm9pZCAwIT09YiYmbnVsbCE9PWI/YjpudWxsO2RoKGMsZixlKTthLmN1cnJlbnQubGFuZXM9ZTtBYyhhLGUsZCk7RWsoYSxkKTtyZXR1cm4gYX1mdW5jdGlvbiBnbChhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1MKCksZz1saChlKTtjPWVsKGMpO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9Y2goZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7YT1kaChlLGIsZyk7bnVsbCE9PWEmJihtaChhLGUsZyxmKSxlaChhLGUsZykpO3JldHVybiBnfVxuZnVuY3Rpb24gaGwoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBpbChhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gamwoYSxiKXtpbChhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmaWwoYSxiKX1mdW5jdGlvbiBrbCgpe3JldHVybiBudWxsfXZhciBsbD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVwb3J0RXJyb3I/cmVwb3J0RXJyb3I6ZnVuY3Rpb24oYSl7Y29uc29sZS5lcnJvcihhKX07ZnVuY3Rpb24gbWwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5ubC5wcm90b3R5cGUucmVuZGVyPW1sLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290O2lmKG51bGw9PT1iKXRocm93IEVycm9yKHAoNDA5KSk7Z2woYSxiLG51bGwsbnVsbCl9O25sLnByb3RvdHlwZS51bm1vdW50PW1sLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290O2lmKG51bGwhPT1hKXt0aGlzLl9pbnRlcm5hbFJvb3Q9bnVsbDt2YXIgYj1hLmNvbnRhaW5lckluZm87U2soZnVuY3Rpb24oKXtnbChudWxsLGEsbnVsbCxudWxsKX0pO2JbdWZdPW51bGx9fTtmdW5jdGlvbiBubChhKXt0aGlzLl9pbnRlcm5hbFJvb3Q9YX1cbm5sLnByb3RvdHlwZS51bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbj1mdW5jdGlvbihhKXtpZihhKXt2YXIgYj1IYygpO2E9e2Jsb2NrZWRPbjpudWxsLHRhcmdldDphLHByaW9yaXR5OmJ9O2Zvcih2YXIgYz0wO2M8UWMubGVuZ3RoJiYwIT09YiYmYjxRY1tjXS5wcmlvcml0eTtjKyspO1FjLnNwbGljZShjLDAsYSk7MD09PWMmJlZjKGEpfX07ZnVuY3Rpb24gb2woYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUpfWZ1bmN0aW9uIHBsKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBxbCgpe31cbmZ1bmN0aW9uIHJsKGEsYixjLGQsZSl7aWYoZSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBmPWQ7ZD1mdW5jdGlvbigpe3ZhciBhPWhsKGcpO2YuY2FsbChhKX19dmFyIGc9ZmwoYixkLGEsMCxudWxsLCExLCExLFwiXCIscWwpO2EuX3JlYWN0Um9vdENvbnRhaW5lcj1nO2FbdWZdPWcuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7U2soKTtyZXR1cm4gZ31mb3IoO2U9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoZSk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBoPWQ7ZD1mdW5jdGlvbigpe3ZhciBhPWhsKGspO2guY2FsbChhKX19dmFyIGs9Y2woYSwwLCExLG51bGwsbnVsbCwhMSwhMSxcIlwiLHFsKTthLl9yZWFjdFJvb3RDb250YWluZXI9azthW3VmXT1rLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO1NrKGZ1bmN0aW9uKCl7Z2woYixrLGMsZCl9KTtyZXR1cm4ga31cbmZ1bmN0aW9uIHNsKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWY7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWhsKGcpO2guY2FsbChhKX19Z2woYixnLGEsZSl9ZWxzZSBnPXJsKGMsYixhLGUsZCk7cmV0dXJuIGhsKGcpfUVjPWZ1bmN0aW9uKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAzOnZhciBiPWEuc3RhdGVOb2RlO2lmKGIuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7dmFyIGM9dGMoYi5wZW5kaW5nTGFuZXMpOzAhPT1jJiYoQ2MoYixjfDEpLEVrKGIsQigpKSwwPT09KEsmNikmJihIaj1CKCkrNTAwLGpnKCkpKX1icmVhaztjYXNlIDEzOlNrKGZ1bmN0aW9uKCl7dmFyIGI9WmcoYSwxKTtpZihudWxsIT09Yil7dmFyIGM9TCgpO21oKGIsYSwxLGMpfX0pLGpsKGEsMSl9fTtcbkZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPVpnKGEsMTM0MjE3NzI4KTtpZihudWxsIT09Yil7dmFyIGM9TCgpO21oKGIsYSwxMzQyMTc3MjgsYyl9amwoYSwxMzQyMTc3MjgpfX07R2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9bGgoYSksYz1aZyhhLGIpO2lmKG51bGwhPT1jKXt2YXIgZD1MKCk7bWgoYyxhLGIsZCl9amwoYSxiKX19O0hjPWZ1bmN0aW9uKCl7cmV0dXJuIEN9O0ljPWZ1bmN0aW9uKGEsYil7dmFyIGM9Qzt0cnl7cmV0dXJuIEM9YSxiKCl9ZmluYWxseXtDPWN9fTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YmIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHAoOTApKTtXYShkKTtiYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9Ums7SGI9U2s7XG52YXIgdGw9e3VzaW5nQ2xpZW50RW50cnlQb2ludDohMSxFdmVudHM6W0NiLHVlLERiLEViLEZiLFJrXX0sdWw9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOldjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTguMi4wXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB2bD17YnVuZGxlVHlwZTp1bC5idW5kbGVUeXBlLHZlcnNpb246dWwudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOnVsLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6dWwucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldEVycm9ySGFuZGxlcjpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPVpiKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp1bC5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5rbCxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsLHJlY29uY2lsZXJWZXJzaW9uOlwiMTguMi4wLW5leHQtOWUzYjc3MmI4LTIwMjIwNjA4XCJ9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgd2w9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF3bC5pc0Rpc2FibGVkJiZ3bC5zdXBwb3J0c0ZpYmVyKXRyeXtrYz13bC5pbmplY3QodmwpLGxjPXdsfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD10bDtcbmV4cG9ydHMuY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIW9sKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIGRsKGEsYixudWxsLGMpfTtleHBvcnRzLmNyZWF0ZVJvb3Q9ZnVuY3Rpb24oYSxiKXtpZighb2woYSkpdGhyb3cgRXJyb3IocCgyOTkpKTt2YXIgYz0hMSxkPVwiXCIsZT1sbDtudWxsIT09YiYmdm9pZCAwIT09YiYmKCEwPT09Yi51bnN0YWJsZV9zdHJpY3RNb2RlJiYoYz0hMCksdm9pZCAwIT09Yi5pZGVudGlmaWVyUHJlZml4JiYoZD1iLmlkZW50aWZpZXJQcmVmaXgpLHZvaWQgMCE9PWIub25SZWNvdmVyYWJsZUVycm9yJiYoZT1iLm9uUmVjb3ZlcmFibGVFcnJvcikpO2I9Y2woYSwxLCExLG51bGwsbnVsbCxjLCExLGQsZSk7YVt1Zl09Yi5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtyZXR1cm4gbmV3IG1sKGIpfTtcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IocCgxODgpKTthPU9iamVjdC5rZXlzKGEpLmpvaW4oXCIsXCIpO3Rocm93IEVycm9yKHAoMjY4LGEpKTt9YT1aYihiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEpe3JldHVybiBTayhhKX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighcGwoYikpdGhyb3cgRXJyb3IocCgyMDApKTtyZXR1cm4gc2wobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5oeWRyYXRlUm9vdD1mdW5jdGlvbihhLGIsYyl7aWYoIW9sKGEpKXRocm93IEVycm9yKHAoNDA1KSk7dmFyIGQ9bnVsbCE9YyYmYy5oeWRyYXRlZFNvdXJjZXN8fG51bGwsZT0hMSxmPVwiXCIsZz1sbDtudWxsIT09YyYmdm9pZCAwIT09YyYmKCEwPT09Yy51bnN0YWJsZV9zdHJpY3RNb2RlJiYoZT0hMCksdm9pZCAwIT09Yy5pZGVudGlmaWVyUHJlZml4JiYoZj1jLmlkZW50aWZpZXJQcmVmaXgpLHZvaWQgMCE9PWMub25SZWNvdmVyYWJsZUVycm9yJiYoZz1jLm9uUmVjb3ZlcmFibGVFcnJvcikpO2I9ZmwoYixudWxsLGEsMSxudWxsIT1jP2M6bnVsbCxlLCExLGYsZyk7YVt1Zl09Yi5jdXJyZW50O3NmKGEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyljPWRbYV0sZT1jLl9nZXRWZXJzaW9uLGU9ZShjLl9zb3VyY2UpLG51bGw9PWIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT9iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9W2MsZV06Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhLnB1c2goYyxcbmUpO3JldHVybiBuZXcgbmwoYil9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighcGwoYikpdGhyb3cgRXJyb3IocCgyMDApKTtyZXR1cm4gc2wobnVsbCxhLGIsITEsYyl9O2V4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighcGwoYSkpdGhyb3cgRXJyb3IocCg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KFNrKGZ1bmN0aW9uKCl7c2wobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW3VmXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9Ums7XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFwbChjKSl0aHJvdyBFcnJvcihwKDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxzKXRocm93IEVycm9yKHAoMzgpKTtyZXR1cm4gc2woYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE4LjIuMC1uZXh0LTllM2I3NzJiOC0yMDIyMDYwOFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgZXhwb3J0cy5jcmVhdGVSb290ID0gbS5jcmVhdGVSb290O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gbS5oeWRyYXRlUm9vdDtcbn0gZWxzZSB7XG4gIHZhciBpID0gbS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtcbiAgZXhwb3J0cy5jcmVhdGVSb290ID0gZnVuY3Rpb24oYywgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uY3JlYXRlUm9vdChjLCBvKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSBmYWxzZTtcbiAgICB9XG4gIH07XG4gIGV4cG9ydHMuaHlkcmF0ZVJvb3QgPSBmdW5jdGlvbihjLCBoLCBvKSB7XG4gICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSB0cnVlO1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbS5oeWRyYXRlUm9vdChjLCBoLCBvKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSBmYWxzZTtcbiAgICB9XG4gIH07XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGI9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksYz1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLGQ9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLGU9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLGY9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLGc9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLGg9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksaz1TeW1ib2wuZm9yKFwicmVhY3Quc2VydmVyX2NvbnRleHRcIiksbD1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksbT1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIiksbj1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSxwPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLHE9U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIiksdD1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpLHU7dT1TeW1ib2wuZm9yKFwicmVhY3QubW9kdWxlLnJlZmVyZW5jZVwiKTtcbmZ1bmN0aW9uIHYoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHI9YS4kJHR5cGVvZjtzd2l0Y2gocil7Y2FzZSBiOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGQ6Y2FzZSBmOmNhc2UgZTpjYXNlIG06Y2FzZSBuOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBoOmNhc2UgbDpjYXNlIHE6Y2FzZSBwOmNhc2UgZzpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiByfX1jYXNlIGM6cmV0dXJuIHJ9fX1leHBvcnRzLkNvbnRleHRDb25zdW1lcj1oO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWc7ZXhwb3J0cy5FbGVtZW50PWI7ZXhwb3J0cy5Gb3J3YXJkUmVmPWw7ZXhwb3J0cy5GcmFnbWVudD1kO2V4cG9ydHMuTGF6eT1xO2V4cG9ydHMuTWVtbz1wO2V4cG9ydHMuUG9ydGFsPWM7ZXhwb3J0cy5Qcm9maWxlcj1mO2V4cG9ydHMuU3RyaWN0TW9kZT1lO2V4cG9ydHMuU3VzcGVuc2U9bTtcbmV4cG9ydHMuU3VzcGVuc2VMaXN0PW47ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbigpe3JldHVybiExfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9ZnVuY3Rpb24oKXtyZXR1cm4hMX07ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWh9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1nfTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Yn07ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1sfTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1kfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PXF9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09cH07XG5leHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09Y307ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09Zn07ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1lfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1tfTtleHBvcnRzLmlzU3VzcGVuc2VMaXN0PWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09bn07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZHx8YT09PWZ8fGE9PT1lfHxhPT09bXx8YT09PW58fGE9PT10fHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXF8fGEuJCR0eXBlb2Y9PT1wfHxhLiQkdHlwZW9mPT09Z3x8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1sfHxhLiQkdHlwZW9mPT09dXx8dm9pZCAwIT09YS5nZXRNb2R1bGVJZCk/ITA6ITF9O2V4cG9ydHMudHlwZU9mPXY7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSxuPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIikscD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIikscT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIikscj1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksdD1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksdT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSx2PVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSx3PVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSx4PVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLHk9U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIiksej1TeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eiYmYVt6XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxudmFyIEI9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEM9T2JqZWN0LmFzc2lnbixEPXt9O2Z1bmN0aW9uIEUoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZXx8Qn1FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O1xuRS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKFwic2V0U3RhdGUoLi4uKTogdGFrZXMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcyB0byB1cGRhdGUgb3IgYSBmdW5jdGlvbiB3aGljaCByZXR1cm5zIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMuXCIpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7QyhILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPUFycmF5LmlzQXJyYXksSj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEs9e2N1cnJlbnQ6bnVsbH0sTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZSl7dmFyIGQsYz17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGQgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilKLmNhbGwoYixkKSYmIUwuaGFzT3duUHJvcGVydHkoZCkmJihjW2RdPWJbZF0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZyljLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2MuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZCBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09Y1tkXSYmKGNbZF09Z1tkXSk7cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmMsX293bmVyOksuY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1sfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nO2Z1bmN0aW9uIFEoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBSKGEsYixlLGQsYyl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGw6Y2FzZSBuOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxjPWMoaCksYT1cIlwiPT09ZD9cIi5cIitRKGgsMCk6ZCxJKGMpPyhlPVwiXCIsbnVsbCE9YSYmKGU9YS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpLFIoYyxiLGUsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1jJiYoTyhjKSYmKGM9TihjLGUrKCFjLmtleXx8aCYmaC5rZXk9PT1jLmtleT9cIlwiOihcIlwiK2Mua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goYykpLDE7aD0wO2Q9XCJcIj09PWQ/XCIuXCI6ZCtcIjpcIjtpZihJKGEpKWZvcih2YXIgZz0wO2c8YS5sZW5ndGg7ZysrKXtrPVxuYVtnXTt2YXIgZj1kK1EoayxnKTtoKz1SKGssYixlLGYsYyl9ZWxzZSBpZihmPUEoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWQrUShrLGcrKyksaCs9UihrLGIsZSxmLGMpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1TdHJpbmcoYSksRXJyb3IoXCJPYmplY3RzIGFyZSBub3QgdmFsaWQgYXMgYSBSZWFjdCBjaGlsZCAoZm91bmQ6IFwiKyhcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKStcIikuIElmIHlvdSBtZWFudCB0byByZW5kZXIgYSBjb2xsZWN0aW9uIG9mIGNoaWxkcmVuLCB1c2UgYW4gYXJyYXkgaW5zdGVhZC5cIik7cmV0dXJuIGh9XG5mdW5jdGlvbiBTKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBkPVtdLGM9MDtSKGEsZCxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChlLGEsYysrKX0pO3JldHVybiBkfWZ1bmN0aW9uIFQoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTtiLnRoZW4oZnVuY3Rpb24oYil7aWYoMD09PWEuX3N0YXR1c3x8LTE9PT1hLl9zdGF0dXMpYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWJ9LGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1ifSk7LTE9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MCxhLl9yZXN1bHQ9Yil9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0LmRlZmF1bHQ7dGhyb3cgYS5fcmVzdWx0O31cbnZhciBVPXtjdXJyZW50Om51bGx9LFY9e3RyYW5zaXRpb246bnVsbH0sVz17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpVLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOlYsUmVhY3RDdXJyZW50T3duZXI6S307ZXhwb3J0cy5DaGlsZHJlbj17bWFwOlMsZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7UyhhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGUpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1MoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBTKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoXCJSZWFjdC5DaGlsZHJlbi5vbmx5IGV4cGVjdGVkIHRvIHJlY2VpdmUgYSBzaW5nbGUgUmVhY3QgZWxlbWVudCBjaGlsZC5cIik7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1FO2V4cG9ydHMuRnJhZ21lbnQ9cDtcbmV4cG9ydHMuUHJvZmlsZXI9cjtleHBvcnRzLlB1cmVDb21wb25lbnQ9RztleHBvcnRzLlN0cmljdE1vZGU9cTtleHBvcnRzLlN1c3BlbnNlPXc7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1XO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKFwiUmVhY3QuY2xvbmVFbGVtZW50KC4uLik6IFRoZSBhcmd1bWVudCBtdXN0IGJlIGEgUmVhY3QgZWxlbWVudCwgYnV0IHlvdSBwYXNzZWQgXCIrYStcIi5cIik7dmFyIGQ9Qyh7fSxhLnByb3BzKSxjPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1LLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoYz1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUouY2FsbChiLGYpJiYhTC5oYXNPd25Qcm9wZXJ0eShmKSYmKGRbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7XG5mb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpjLHJlZjprLHByb3BzOmQsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSl7YT17JCR0eXBlb2Y6dSxfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGwsX2RlZmF1bHRWYWx1ZTpudWxsLF9nbG9iYWxOYW1lOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnQsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtcbmV4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztleHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnksX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpUfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOngsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnN0YXJ0VHJhbnNpdGlvbj1mdW5jdGlvbihhKXt2YXIgYj1WLnRyYW5zaXRpb247Vi50cmFuc2l0aW9uPXt9O3RyeXthKCl9ZmluYWxseXtWLnRyYW5zaXRpb249Yn19O2V4cG9ydHMudW5zdGFibGVfYWN0PWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoXCJhY3QoLi4uKSBpcyBub3Qgc3VwcG9ydGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzIG9mIFJlYWN0LlwiKTt9O1xuZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlQ29udGV4dChhKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZURlZmVycmVkVmFsdWU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VEZWZlcnJlZFZhbHVlKGEpfTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gVS5jdXJyZW50LnVzZUlkKCl9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixlKX07XG5leHBvcnRzLnVzZUluc2VydGlvbkVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlSW5zZXJ0aW9uRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWR1Y2VyKGEsYixlKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VTdGF0ZShhKX07ZXhwb3J0cy51c2VTeW5jRXh0ZXJuYWxTdG9yZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VTeW5jRXh0ZXJuYWxTdG9yZShhLGIsZSl9O1xuZXhwb3J0cy51c2VUcmFuc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VUcmFuc2l0aW9uKCl9O2V4cG9ydHMudmVyc2lvbj1cIjE4LjIuMFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO2Z1bmN0aW9uIGYoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzA8Yzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKDA8ZyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gaChhKXtyZXR1cm4gMD09PWEubGVuZ3RoP251bGw6YVswXX1mdW5jdGlvbiBrKGEpe2lmKDA9PT1hLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgYj1hWzBdLGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aCx3PWU+Pj4xO2Q8dzspe3ZhciBtPTIqKGQrMSktMSxDPWFbbV0sbj1tKzEseD1hW25dO2lmKDA+ZyhDLGMpKW48ZSYmMD5nKHgsQyk/KGFbZF09eCxhW25dPWMsZD1uKTooYVtkXT1DLGFbbV09YyxkPW0pO2Vsc2UgaWYobjxlJiYwPmcoeCxjKSlhW2RdPXgsYVtuXT1jLGQ9bjtlbHNlIGJyZWFrIGF9fXJldHVybiBifVxuZnVuY3Rpb24gZyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH1pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19dmFyIHI9W10sdD1bXSx1PTEsdj1udWxsLHk9Myx6PSExLEE9ITEsQj0hMSxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6bnVsbCxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0Om51bGwsRj1cInVuZGVmaW5lZFwiIT09dHlwZW9mIHNldEltbWVkaWF0ZT9zZXRJbW1lZGlhdGU6bnVsbDtcblwidW5kZWZpbmVkXCIhPT10eXBlb2YgbmF2aWdhdG9yJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZyYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcmJm5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nLmJpbmQobmF2aWdhdG9yLnNjaGVkdWxpbmcpO2Z1bmN0aW9uIEcoYSl7Zm9yKHZhciBiPWgodCk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylrKHQpO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpayh0KSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLGYocixiKTtlbHNlIGJyZWFrO2I9aCh0KX19ZnVuY3Rpb24gSChhKXtCPSExO0coYSk7aWYoIUEpaWYobnVsbCE9PWgocikpQT0hMCxJKEopO2Vsc2V7dmFyIGI9aCh0KTtudWxsIT09YiYmSyhILGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIEooYSxiKXtBPSExO0ImJihCPSExLEUoTCksTD0tMSk7ej0hMDt2YXIgYz15O3RyeXtHKGIpO2Zvcih2PWgocik7bnVsbCE9PXYmJighKHYuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFNKCkpOyl7dmFyIGQ9di5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7di5jYWxsYmFjaz1udWxsO3k9di5wcmlvcml0eUxldmVsO3ZhciBlPWQodi5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP3YuY2FsbGJhY2s9ZTp2PT09aChyKSYmayhyKTtHKGIpfWVsc2UgayhyKTt2PWgocil9aWYobnVsbCE9PXYpdmFyIHc9ITA7ZWxzZXt2YXIgbT1oKHQpO251bGwhPT1tJiZLKEgsbS5zdGFydFRpbWUtYik7dz0hMX1yZXR1cm4gd31maW5hbGx5e3Y9bnVsbCx5PWMsej0hMX19dmFyIE49ITEsTz1udWxsLEw9LTEsUD01LFE9LTE7XG5mdW5jdGlvbiBNKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCktUTxQPyExOiEwfWZ1bmN0aW9uIFIoKXtpZihudWxsIT09Tyl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtRPWE7dmFyIGI9ITA7dHJ5e2I9TyghMCxhKX1maW5hbGx5e2I/UygpOihOPSExLE89bnVsbCl9fWVsc2UgTj0hMX12YXIgUztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRilTPWZ1bmN0aW9uKCl7RihSKX07ZWxzZSBpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPVI7Uz1mdW5jdGlvbigpe1UucG9zdE1lc3NhZ2UobnVsbCl9fWVsc2UgUz1mdW5jdGlvbigpe0QoUiwwKX07ZnVuY3Rpb24gSShhKXtPPWE7Tnx8KE49ITAsUygpKX1mdW5jdGlvbiBLKGEsYil7TD1EKGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9XG5leHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7QXx8enx8KEE9ITAsSShKKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6UD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiB5fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGgocil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goeSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9eX12YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e3k9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O1xuZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9eTt5PWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXt5PWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6dSsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsZih0LGEpLG51bGw9PT1oKHIpJiZhPT09aCh0KSYmKEI/KEUoTCksTD0tMSk6Qj0hMCxLKEgsYy1kKSkpOihhLnNvcnRJbmRleD1lLGYocixhKSxBfHx6fHwoQT0hMCxJKEopKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1NO2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPXk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e3k9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCLCBjb21wYXJlLCBjb21wYXJlQ29udGV4dCkge1xuICB2YXIgcmV0ID0gY29tcGFyZSA/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgb2JqQSwgb2JqQikgOiB2b2lkIDA7XG5cbiAgaWYgKHJldCAhPT0gdm9pZCAwKSB7XG4gICAgcmV0dXJuICEhcmV0O1xuICB9XG5cbiAgaWYgKG9iakEgPT09IG9iakIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gXCJvYmplY3RcIiB8fCAhb2JqQSB8fCB0eXBlb2Ygb2JqQiAhPT0gXCJvYmplY3RcIiB8fCAhb2JqQikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgYkhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5iaW5kKG9iakIpO1xuXG4gIC8vIFRlc3QgZm9yIEEncyBrZXlzIGRpZmZlcmVudCBmcm9tIEIuXG4gIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IGtleXNBLmxlbmd0aDsgaWR4KyspIHtcbiAgICB2YXIga2V5ID0ga2V5c0FbaWR4XTtcblxuICAgIGlmICghYkhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdmFsdWVBID0gb2JqQVtrZXldO1xuICAgIHZhciB2YWx1ZUIgPSBvYmpCW2tleV07XG5cbiAgICByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCB2YWx1ZUEsIHZhbHVlQiwga2V5KSA6IHZvaWQgMDtcblxuICAgIGlmIChyZXQgPT09IGZhbHNlIHx8IChyZXQgPT09IHZvaWQgMCAmJiB2YWx1ZUEgIT09IHZhbHVlQikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLyoqXG4gKiBUaGlzIGZpbGUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgZnJvbSBgcHJlLXB1Ymxpc2guanNgLlxuICogRG8gbm90IG1hbnVhbGx5IGVkaXQuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwiYXJlYVwiOiB0cnVlLFxuICBcImJhc2VcIjogdHJ1ZSxcbiAgXCJiclwiOiB0cnVlLFxuICBcImNvbFwiOiB0cnVlLFxuICBcImVtYmVkXCI6IHRydWUsXG4gIFwiaHJcIjogdHJ1ZSxcbiAgXCJpbWdcIjogdHJ1ZSxcbiAgXCJpbnB1dFwiOiB0cnVlLFxuICBcImxpbmtcIjogdHJ1ZSxcbiAgXCJtZXRhXCI6IHRydWUsXG4gIFwicGFyYW1cIjogdHJ1ZSxcbiAgXCJzb3VyY2VcIjogdHJ1ZSxcbiAgXCJ0cmFja1wiOiB0cnVlLFxuICBcIndiclwiOiB0cnVlXG59O1xuIiwiIWZ1bmN0aW9uKGUsdCl7aWYoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUpbW9kdWxlLmV4cG9ydHM9dCgpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSx0KTtlbHNle3ZhciBpPXQoKTtmb3IodmFyIHMgaW4gaSkoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0czplKVtzXT1pW3NdfX0oc2VsZiwoZnVuY3Rpb24oKXtyZXR1cm4oKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZT17NDU2NzooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5BY2Nlc3NpYmlsaXR5TWFuYWdlcj12b2lkIDA7Y29uc3Qgcz1pKDkwNDIpLHI9aSg2MTE0KSxuPWkoOTkyNCksbz1pKDM2NTYpLGE9aSg4NDQpLGg9aSg1NTk2KSxjPWkoOTYzMSk7Y2xhc3MgbCBleHRlbmRzIGEuRGlzcG9zYWJsZXtjb25zdHJ1Y3RvcihlLHQpe3N1cGVyKCksdGhpcy5fdGVybWluYWw9ZSx0aGlzLl9yZW5kZXJTZXJ2aWNlPXQsdGhpcy5fbGl2ZVJlZ2lvbkxpbmVDb3VudD0wLHRoaXMuX2NoYXJzVG9Db25zdW1lPVtdLHRoaXMuX2NoYXJzVG9Bbm5vdW5jZT1cIlwiLHRoaXMuX2FjY2Vzc2liaWxpdHlUcmVlUm9vdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMuX2FjY2Vzc2liaWxpdHlUcmVlUm9vdC5jbGFzc0xpc3QuYWRkKFwieHRlcm0tYWNjZXNzaWJpbGl0eVwiKSx0aGlzLl9hY2Nlc3NpYmlsaXR5VHJlZVJvb3QudGFiSW5kZXg9MCx0aGlzLl9yb3dDb250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSx0aGlzLl9yb3dDb250YWluZXIuc2V0QXR0cmlidXRlKFwicm9sZVwiLFwibGlzdFwiKSx0aGlzLl9yb3dDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInh0ZXJtLWFjY2Vzc2liaWxpdHktdHJlZVwiKSx0aGlzLl9yb3dFbGVtZW50cz1bXTtmb3IobGV0IGU9MDtlPHRoaXMuX3Rlcm1pbmFsLnJvd3M7ZSsrKXRoaXMuX3Jvd0VsZW1lbnRzW2VdPXRoaXMuX2NyZWF0ZUFjY2Vzc2liaWxpdHlUcmVlTm9kZSgpLHRoaXMuX3Jvd0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLl9yb3dFbGVtZW50c1tlXSk7aWYodGhpcy5fdG9wQm91bmRhcnlGb2N1c0xpc3RlbmVyPWU9PnRoaXMuX29uQm91bmRhcnlGb2N1cyhlLDApLHRoaXMuX2JvdHRvbUJvdW5kYXJ5Rm9jdXNMaXN0ZW5lcj1lPT50aGlzLl9vbkJvdW5kYXJ5Rm9jdXMoZSwxKSx0aGlzLl9yb3dFbGVtZW50c1swXS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIix0aGlzLl90b3BCb3VuZGFyeUZvY3VzTGlzdGVuZXIpLHRoaXMuX3Jvd0VsZW1lbnRzW3RoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aC0xXS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIix0aGlzLl9ib3R0b21Cb3VuZGFyeUZvY3VzTGlzdGVuZXIpLHRoaXMuX3JlZnJlc2hSb3dzRGltZW5zaW9ucygpLHRoaXMuX2FjY2Vzc2liaWxpdHlUcmVlUm9vdC5hcHBlbmRDaGlsZCh0aGlzLl9yb3dDb250YWluZXIpLHRoaXMuX3JlbmRlclJvd3NEZWJvdW5jZXI9bmV3IG4uVGltZUJhc2VkRGVib3VuY2VyKHRoaXMuX3JlbmRlclJvd3MuYmluZCh0aGlzKSksdGhpcy5fcmVmcmVzaFJvd3MoKSx0aGlzLl9saXZlUmVnaW9uPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5fbGl2ZVJlZ2lvbi5jbGFzc0xpc3QuYWRkKFwibGl2ZS1yZWdpb25cIiksdGhpcy5fbGl2ZVJlZ2lvbi5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxpdmVcIixcImFzc2VydGl2ZVwiKSx0aGlzLl9hY2Nlc3NpYmlsaXR5VHJlZVJvb3QuYXBwZW5kQ2hpbGQodGhpcy5fbGl2ZVJlZ2lvbiksIXRoaXMuX3Rlcm1pbmFsLmVsZW1lbnQpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGVuYWJsZSBhY2Nlc3NpYmlsaXR5IGJlZm9yZSBUZXJtaW5hbC5vcGVuXCIpO3RoaXMuX3Rlcm1pbmFsLmVsZW1lbnQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJiZWdpblwiLHRoaXMuX2FjY2Vzc2liaWxpdHlUcmVlUm9vdCksdGhpcy5yZWdpc3Rlcih0aGlzLl9yZW5kZXJSb3dzRGVib3VuY2VyKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX3Rlcm1pbmFsLm9uUmVzaXplKChlPT50aGlzLl9vblJlc2l6ZShlLnJvd3MpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fdGVybWluYWwub25SZW5kZXIoKGU9PnRoaXMuX3JlZnJlc2hSb3dzKGUuc3RhcnQsZS5lbmQpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fdGVybWluYWwub25TY3JvbGwoKCgpPT50aGlzLl9yZWZyZXNoUm93cygpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fdGVybWluYWwub25BMTF5Q2hhcigoZT0+dGhpcy5fb25DaGFyKGUpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fdGVybWluYWwub25MaW5lRmVlZCgoKCk9PnRoaXMuX29uQ2hhcihcIlxcblwiKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX3Rlcm1pbmFsLm9uQTExeVRhYigoZT0+dGhpcy5fb25UYWIoZSkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl90ZXJtaW5hbC5vbktleSgoZT0+dGhpcy5fb25LZXkoZS5rZXkpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fdGVybWluYWwub25CbHVyKCgoKT0+dGhpcy5fY2xlYXJMaXZlUmVnaW9uKCkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9yZW5kZXJTZXJ2aWNlLm9uRGltZW5zaW9uc0NoYW5nZSgoKCk9PnRoaXMuX3JlZnJlc2hSb3dzRGltZW5zaW9ucygpKSkpLHRoaXMuX3NjcmVlbkRwck1vbml0b3I9bmV3IGguU2NyZWVuRHByTW9uaXRvcih3aW5kb3cpLHRoaXMucmVnaXN0ZXIodGhpcy5fc2NyZWVuRHByTW9uaXRvciksdGhpcy5fc2NyZWVuRHByTW9uaXRvci5zZXRMaXN0ZW5lcigoKCk9PnRoaXMuX3JlZnJlc2hSb3dzRGltZW5zaW9ucygpKSksdGhpcy5yZWdpc3RlcigoMCxvLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikod2luZG93LFwicmVzaXplXCIsKCgpPT50aGlzLl9yZWZyZXNoUm93c0RpbWVuc2lvbnMoKSkpKX1kaXNwb3NlKCl7c3VwZXIuZGlzcG9zZSgpLCgwLGMucmVtb3ZlRWxlbWVudEZyb21QYXJlbnQpKHRoaXMuX2FjY2Vzc2liaWxpdHlUcmVlUm9vdCksdGhpcy5fcm93RWxlbWVudHMubGVuZ3RoPTB9X29uQm91bmRhcnlGb2N1cyhlLHQpe2NvbnN0IGk9ZS50YXJnZXQscz10aGlzLl9yb3dFbGVtZW50c1swPT09dD8xOnRoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aC0yXTtpZihpLmdldEF0dHJpYnV0ZShcImFyaWEtcG9zaW5zZXRcIik9PT0oMD09PXQ/XCIxXCI6YCR7dGhpcy5fdGVybWluYWwuYnVmZmVyLmxpbmVzLmxlbmd0aH1gKSlyZXR1cm47aWYoZS5yZWxhdGVkVGFyZ2V0IT09cylyZXR1cm47bGV0IHIsbjtpZigwPT09dD8ocj1pLG49dGhpcy5fcm93RWxlbWVudHMucG9wKCksdGhpcy5fcm93Q29udGFpbmVyLnJlbW92ZUNoaWxkKG4pKToocj10aGlzLl9yb3dFbGVtZW50cy5zaGlmdCgpLG49aSx0aGlzLl9yb3dDb250YWluZXIucmVtb3ZlQ2hpbGQocikpLHIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsdGhpcy5fdG9wQm91bmRhcnlGb2N1c0xpc3RlbmVyKSxuLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLHRoaXMuX2JvdHRvbUJvdW5kYXJ5Rm9jdXNMaXN0ZW5lciksMD09PXQpe2NvbnN0IGU9dGhpcy5fY3JlYXRlQWNjZXNzaWJpbGl0eVRyZWVOb2RlKCk7dGhpcy5fcm93RWxlbWVudHMudW5zaGlmdChlKSx0aGlzLl9yb3dDb250YWluZXIuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJiZWdpblwiLGUpfWVsc2V7Y29uc3QgZT10aGlzLl9jcmVhdGVBY2Nlc3NpYmlsaXR5VHJlZU5vZGUoKTt0aGlzLl9yb3dFbGVtZW50cy5wdXNoKGUpLHRoaXMuX3Jvd0NvbnRhaW5lci5hcHBlbmRDaGlsZChlKX10aGlzLl9yb3dFbGVtZW50c1swXS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIix0aGlzLl90b3BCb3VuZGFyeUZvY3VzTGlzdGVuZXIpLHRoaXMuX3Jvd0VsZW1lbnRzW3RoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aC0xXS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIix0aGlzLl9ib3R0b21Cb3VuZGFyeUZvY3VzTGlzdGVuZXIpLHRoaXMuX3Rlcm1pbmFsLnNjcm9sbExpbmVzKDA9PT10Py0xOjEpLHRoaXMuX3Jvd0VsZW1lbnRzWzA9PT10PzE6dGhpcy5fcm93RWxlbWVudHMubGVuZ3RoLTJdLmZvY3VzKCksZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9X29uUmVzaXplKGUpe3RoaXMuX3Jvd0VsZW1lbnRzW3RoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aC0xXS5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNcIix0aGlzLl9ib3R0b21Cb3VuZGFyeUZvY3VzTGlzdGVuZXIpO2ZvcihsZXQgZT10aGlzLl9yb3dDb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoO2U8dGhpcy5fdGVybWluYWwucm93cztlKyspdGhpcy5fcm93RWxlbWVudHNbZV09dGhpcy5fY3JlYXRlQWNjZXNzaWJpbGl0eVRyZWVOb2RlKCksdGhpcy5fcm93Q29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuX3Jvd0VsZW1lbnRzW2VdKTtmb3IoO3RoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aD5lOyl0aGlzLl9yb3dDb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fcm93RWxlbWVudHMucG9wKCkpO3RoaXMuX3Jvd0VsZW1lbnRzW3RoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aC0xXS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIix0aGlzLl9ib3R0b21Cb3VuZGFyeUZvY3VzTGlzdGVuZXIpLHRoaXMuX3JlZnJlc2hSb3dzRGltZW5zaW9ucygpfV9jcmVhdGVBY2Nlc3NpYmlsaXR5VHJlZU5vZGUoKXtjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJuIGUuc2V0QXR0cmlidXRlKFwicm9sZVwiLFwibGlzdGl0ZW1cIiksZS50YWJJbmRleD0tMSx0aGlzLl9yZWZyZXNoUm93RGltZW5zaW9ucyhlKSxlfV9vblRhYihlKXtmb3IobGV0IHQ9MDt0PGU7dCsrKXRoaXMuX29uQ2hhcihcIiBcIil9X29uQ2hhcihlKXt0aGlzLl9saXZlUmVnaW9uTGluZUNvdW50PDIxJiYodGhpcy5fY2hhcnNUb0NvbnN1bWUubGVuZ3RoPjA/dGhpcy5fY2hhcnNUb0NvbnN1bWUuc2hpZnQoKSE9PWUmJih0aGlzLl9jaGFyc1RvQW5ub3VuY2UrPWUpOnRoaXMuX2NoYXJzVG9Bbm5vdW5jZSs9ZSxcIlxcblwiPT09ZSYmKHRoaXMuX2xpdmVSZWdpb25MaW5lQ291bnQrKywyMT09PXRoaXMuX2xpdmVSZWdpb25MaW5lQ291bnQmJih0aGlzLl9saXZlUmVnaW9uLnRleHRDb250ZW50Kz1zLnRvb011Y2hPdXRwdXQpKSxyLmlzTWFjJiZ0aGlzLl9saXZlUmVnaW9uLnRleHRDb250ZW50JiZ0aGlzLl9saXZlUmVnaW9uLnRleHRDb250ZW50Lmxlbmd0aD4wJiYhdGhpcy5fbGl2ZVJlZ2lvbi5wYXJlbnROb2RlJiZzZXRUaW1lb3V0KCgoKT0+e3RoaXMuX2FjY2Vzc2liaWxpdHlUcmVlUm9vdC5hcHBlbmRDaGlsZCh0aGlzLl9saXZlUmVnaW9uKX0pLDApKX1fY2xlYXJMaXZlUmVnaW9uKCl7dGhpcy5fbGl2ZVJlZ2lvbi50ZXh0Q29udGVudD1cIlwiLHRoaXMuX2xpdmVSZWdpb25MaW5lQ291bnQ9MCxyLmlzTWFjJiYoMCxjLnJlbW92ZUVsZW1lbnRGcm9tUGFyZW50KSh0aGlzLl9saXZlUmVnaW9uKX1fb25LZXkoZSl7dGhpcy5fY2xlYXJMaXZlUmVnaW9uKCksdGhpcy5fY2hhcnNUb0NvbnN1bWUucHVzaChlKX1fcmVmcmVzaFJvd3MoZSx0KXt0aGlzLl9yZW5kZXJSb3dzRGVib3VuY2VyLnJlZnJlc2goZSx0LHRoaXMuX3Rlcm1pbmFsLnJvd3MpfV9yZW5kZXJSb3dzKGUsdCl7Y29uc3QgaT10aGlzLl90ZXJtaW5hbC5idWZmZXIscz1pLmxpbmVzLmxlbmd0aC50b1N0cmluZygpO2ZvcihsZXQgcj1lO3I8PXQ7cisrKXtjb25zdCBlPWkudHJhbnNsYXRlQnVmZmVyTGluZVRvU3RyaW5nKGkueWRpc3ArciwhMCksdD0oaS55ZGlzcCtyKzEpLnRvU3RyaW5nKCksbj10aGlzLl9yb3dFbGVtZW50c1tyXTtuJiYoMD09PWUubGVuZ3RoP24uaW5uZXJUZXh0PVwiwqBcIjpuLnRleHRDb250ZW50PWUsbi5zZXRBdHRyaWJ1dGUoXCJhcmlhLXBvc2luc2V0XCIsdCksbi5zZXRBdHRyaWJ1dGUoXCJhcmlhLXNldHNpemVcIixzKSl9dGhpcy5fYW5ub3VuY2VDaGFyYWN0ZXJzKCl9X3JlZnJlc2hSb3dzRGltZW5zaW9ucygpe2lmKHRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0KXt0aGlzLl9yb3dFbGVtZW50cy5sZW5ndGghPT10aGlzLl90ZXJtaW5hbC5yb3dzJiZ0aGlzLl9vblJlc2l6ZSh0aGlzLl90ZXJtaW5hbC5yb3dzKTtmb3IobGV0IGU9MDtlPHRoaXMuX3Rlcm1pbmFsLnJvd3M7ZSsrKXRoaXMuX3JlZnJlc2hSb3dEaW1lbnNpb25zKHRoaXMuX3Jvd0VsZW1lbnRzW2VdKX19X3JlZnJlc2hSb3dEaW1lbnNpb25zKGUpe2Uuc3R5bGUuaGVpZ2h0PWAke3RoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0fXB4YH1fYW5ub3VuY2VDaGFyYWN0ZXJzKCl7MCE9PXRoaXMuX2NoYXJzVG9Bbm5vdW5jZS5sZW5ndGgmJih0aGlzLl9saXZlUmVnaW9uLnRleHRDb250ZW50Kz10aGlzLl9jaGFyc1RvQW5ub3VuY2UsdGhpcy5fY2hhcnNUb0Fubm91bmNlPVwiXCIpfX10LkFjY2Vzc2liaWxpdHlNYW5hZ2VyPWx9LDM2MTQ6KGUsdCk9PntmdW5jdGlvbiBpKGUpe3JldHVybiBlLnJlcGxhY2UoL1xccj9cXG4vZyxcIlxcclwiKX1mdW5jdGlvbiBzKGUsdCl7cmV0dXJuIHQ/XCJcdTAwMWJbMjAwflwiK2UrXCJcdTAwMWJbMjAxflwiOmV9ZnVuY3Rpb24gcihlLHQscil7ZT1zKGU9aShlKSxyLmRlY1ByaXZhdGVNb2Rlcy5icmFja2V0ZWRQYXN0ZU1vZGUpLHIudHJpZ2dlckRhdGFFdmVudChlLCEwKSx0LnZhbHVlPVwiXCJ9ZnVuY3Rpb24gbihlLHQsaSl7Y29uc3Qgcz1pLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHI9ZS5jbGllbnRYLXMubGVmdC0xMCxuPWUuY2xpZW50WS1zLnRvcC0xMDt0LnN0eWxlLndpZHRoPVwiMjBweFwiLHQuc3R5bGUuaGVpZ2h0PVwiMjBweFwiLHQuc3R5bGUubGVmdD1gJHtyfXB4YCx0LnN0eWxlLnRvcD1gJHtufXB4YCx0LnN0eWxlLnpJbmRleD1cIjEwMDBcIix0LmZvY3VzKCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5yaWdodENsaWNrSGFuZGxlcj10Lm1vdmVUZXh0QXJlYVVuZGVyTW91c2VDdXJzb3I9dC5wYXN0ZT10LmhhbmRsZVBhc3RlRXZlbnQ9dC5jb3B5SGFuZGxlcj10LmJyYWNrZXRUZXh0Rm9yUGFzdGU9dC5wcmVwYXJlVGV4dEZvclRlcm1pbmFsPXZvaWQgMCx0LnByZXBhcmVUZXh0Rm9yVGVybWluYWw9aSx0LmJyYWNrZXRUZXh0Rm9yUGFzdGU9cyx0LmNvcHlIYW5kbGVyPWZ1bmN0aW9uKGUsdCl7ZS5jbGlwYm9hcmREYXRhJiZlLmNsaXBib2FyZERhdGEuc2V0RGF0YShcInRleHQvcGxhaW5cIix0LnNlbGVjdGlvblRleHQpLGUucHJldmVudERlZmF1bHQoKX0sdC5oYW5kbGVQYXN0ZUV2ZW50PWZ1bmN0aW9uKGUsdCxpKXtlLnN0b3BQcm9wYWdhdGlvbigpLGUuY2xpcGJvYXJkRGF0YSYmcihlLmNsaXBib2FyZERhdGEuZ2V0RGF0YShcInRleHQvcGxhaW5cIiksdCxpKX0sdC5wYXN0ZT1yLHQubW92ZVRleHRBcmVhVW5kZXJNb3VzZUN1cnNvcj1uLHQucmlnaHRDbGlja0hhbmRsZXI9ZnVuY3Rpb24oZSx0LGkscyxyKXtuKGUsdCxpKSxyJiZzLnJpZ2h0Q2xpY2tTZWxlY3QoZSksdC52YWx1ZT1zLnNlbGVjdGlvblRleHQsdC5zZWxlY3QoKX19LDcyMzk6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ29sb3JDb250cmFzdENhY2hlPXZvaWQgMDtjb25zdCBzPWkoMTUwNSk7dC5Db2xvckNvbnRyYXN0Q2FjaGU9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLl9jb2xvcj1uZXcgcy5Ud29LZXlNYXAsdGhpcy5fY3NzPW5ldyBzLlR3b0tleU1hcH1zZXRDc3MoZSx0LGkpe3RoaXMuX2Nzcy5zZXQoZSx0LGkpfWdldENzcyhlLHQpe3JldHVybiB0aGlzLl9jc3MuZ2V0KGUsdCl9c2V0Q29sb3IoZSx0LGkpe3RoaXMuX2NvbG9yLnNldChlLHQsaSl9Z2V0Q29sb3IoZSx0KXtyZXR1cm4gdGhpcy5fY29sb3IuZ2V0KGUsdCl9Y2xlYXIoKXt0aGlzLl9jb2xvci5jbGVhcigpLHRoaXMuX2Nzcy5jbGVhcigpfX19LDU2ODA6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ29sb3JNYW5hZ2VyPXQuREVGQVVMVF9BTlNJX0NPTE9SUz12b2lkIDA7Y29uc3Qgcz1pKDgwNTUpLHI9aSg3MjM5KSxuPXMuY3NzLnRvQ29sb3IoXCIjZmZmZmZmXCIpLG89cy5jc3MudG9Db2xvcihcIiMwMDAwMDBcIiksYT1zLmNzcy50b0NvbG9yKFwiI2ZmZmZmZlwiKSxoPXMuY3NzLnRvQ29sb3IoXCIjMDAwMDAwXCIpLGM9e2NzczpcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKVwiLHJnYmE6NDI5NDk2NzExN307dC5ERUZBVUxUX0FOU0lfQ09MT1JTPU9iamVjdC5mcmVlemUoKCgpPT57Y29uc3QgZT1bcy5jc3MudG9Db2xvcihcIiMyZTM0MzZcIikscy5jc3MudG9Db2xvcihcIiNjYzAwMDBcIikscy5jc3MudG9Db2xvcihcIiM0ZTlhMDZcIikscy5jc3MudG9Db2xvcihcIiNjNGEwMDBcIikscy5jc3MudG9Db2xvcihcIiMzNDY1YTRcIikscy5jc3MudG9Db2xvcihcIiM3NTUwN2JcIikscy5jc3MudG9Db2xvcihcIiMwNjk4OWFcIikscy5jc3MudG9Db2xvcihcIiNkM2Q3Y2ZcIikscy5jc3MudG9Db2xvcihcIiM1NTU3NTNcIikscy5jc3MudG9Db2xvcihcIiNlZjI5MjlcIikscy5jc3MudG9Db2xvcihcIiM4YWUyMzRcIikscy5jc3MudG9Db2xvcihcIiNmY2U5NGZcIikscy5jc3MudG9Db2xvcihcIiM3MjlmY2ZcIikscy5jc3MudG9Db2xvcihcIiNhZDdmYThcIikscy5jc3MudG9Db2xvcihcIiMzNGUyZTJcIikscy5jc3MudG9Db2xvcihcIiNlZWVlZWNcIildLHQ9WzAsOTUsMTM1LDE3NSwyMTUsMjU1XTtmb3IobGV0IGk9MDtpPDIxNjtpKyspe2NvbnN0IHI9dFtpLzM2JTZ8MF0sbj10W2kvNiU2fDBdLG89dFtpJTZdO2UucHVzaCh7Y3NzOnMuY2hhbm5lbHMudG9Dc3MocixuLG8pLHJnYmE6cy5jaGFubmVscy50b1JnYmEocixuLG8pfSl9Zm9yKGxldCB0PTA7dDwyNDt0Kyspe2NvbnN0IGk9OCsxMCp0O2UucHVzaCh7Y3NzOnMuY2hhbm5lbHMudG9Dc3MoaSxpLGkpLHJnYmE6cy5jaGFubmVscy50b1JnYmEoaSxpLGkpfSl9cmV0dXJuIGV9KSgpKSx0LkNvbG9yTWFuYWdlcj1jbGFzc3tjb25zdHJ1Y3RvcihlLGkpe3RoaXMuYWxsb3dUcmFuc3BhcmVuY3k9aTtjb25zdCBsPWUuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtsLndpZHRoPTEsbC5oZWlnaHQ9MTtjb25zdCBkPWwuZ2V0Q29udGV4dChcIjJkXCIpO2lmKCFkKXRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBnZXQgcmVuZGVyaW5nIGNvbnRleHRcIik7dGhpcy5fY3R4PWQsdGhpcy5fY3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj1cImNvcHlcIix0aGlzLl9saXRtdXNDb2xvcj10aGlzLl9jdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCwwLDEsMSksdGhpcy5fY29udHJhc3RDYWNoZT1uZXcgci5Db2xvckNvbnRyYXN0Q2FjaGUsdGhpcy5jb2xvcnM9e2ZvcmVncm91bmQ6bixiYWNrZ3JvdW5kOm8sY3Vyc29yOmEsY3Vyc29yQWNjZW50Omgsc2VsZWN0aW9uRm9yZWdyb3VuZDp2b2lkIDAsc2VsZWN0aW9uQmFja2dyb3VuZFRyYW5zcGFyZW50OmMsc2VsZWN0aW9uQmFja2dyb3VuZE9wYXF1ZTpzLmNvbG9yLmJsZW5kKG8sYyksc2VsZWN0aW9uSW5hY3RpdmVCYWNrZ3JvdW5kVHJhbnNwYXJlbnQ6YyxzZWxlY3Rpb25JbmFjdGl2ZUJhY2tncm91bmRPcGFxdWU6cy5jb2xvci5ibGVuZChvLGMpLGFuc2k6dC5ERUZBVUxUX0FOU0lfQ09MT1JTLnNsaWNlKCksY29udHJhc3RDYWNoZTp0aGlzLl9jb250cmFzdENhY2hlfSx0aGlzLl91cGRhdGVSZXN0b3JlQ29sb3JzKCl9b25PcHRpb25zQ2hhbmdlKGUsdCl7c3dpdGNoKGUpe2Nhc2VcIm1pbmltdW1Db250cmFzdFJhdGlvXCI6dGhpcy5fY29udHJhc3RDYWNoZS5jbGVhcigpO2JyZWFrO2Nhc2VcImFsbG93VHJhbnNwYXJlbmN5XCI6dGhpcy5hbGxvd1RyYW5zcGFyZW5jeT10fX1zZXRUaGVtZShlPXt9KXt0aGlzLmNvbG9ycy5mb3JlZ3JvdW5kPXRoaXMuX3BhcnNlQ29sb3IoZS5mb3JlZ3JvdW5kLG4pLHRoaXMuY29sb3JzLmJhY2tncm91bmQ9dGhpcy5fcGFyc2VDb2xvcihlLmJhY2tncm91bmQsbyksdGhpcy5jb2xvcnMuY3Vyc29yPXRoaXMuX3BhcnNlQ29sb3IoZS5jdXJzb3IsYSwhMCksdGhpcy5jb2xvcnMuY3Vyc29yQWNjZW50PXRoaXMuX3BhcnNlQ29sb3IoZS5jdXJzb3JBY2NlbnQsaCwhMCksdGhpcy5jb2xvcnMuc2VsZWN0aW9uQmFja2dyb3VuZFRyYW5zcGFyZW50PXRoaXMuX3BhcnNlQ29sb3IoZS5zZWxlY3Rpb25CYWNrZ3JvdW5kLGMsITApLHRoaXMuY29sb3JzLnNlbGVjdGlvbkJhY2tncm91bmRPcGFxdWU9cy5jb2xvci5ibGVuZCh0aGlzLmNvbG9ycy5iYWNrZ3JvdW5kLHRoaXMuY29sb3JzLnNlbGVjdGlvbkJhY2tncm91bmRUcmFuc3BhcmVudCksdGhpcy5jb2xvcnMuc2VsZWN0aW9uSW5hY3RpdmVCYWNrZ3JvdW5kVHJhbnNwYXJlbnQ9dGhpcy5fcGFyc2VDb2xvcihlLnNlbGVjdGlvbkluYWN0aXZlQmFja2dyb3VuZCx0aGlzLmNvbG9ycy5zZWxlY3Rpb25CYWNrZ3JvdW5kVHJhbnNwYXJlbnQsITApLHRoaXMuY29sb3JzLnNlbGVjdGlvbkluYWN0aXZlQmFja2dyb3VuZE9wYXF1ZT1zLmNvbG9yLmJsZW5kKHRoaXMuY29sb3JzLmJhY2tncm91bmQsdGhpcy5jb2xvcnMuc2VsZWN0aW9uSW5hY3RpdmVCYWNrZ3JvdW5kVHJhbnNwYXJlbnQpO2NvbnN0IGk9e2NzczpcIlwiLHJnYmE6MH07aWYodGhpcy5jb2xvcnMuc2VsZWN0aW9uRm9yZWdyb3VuZD1lLnNlbGVjdGlvbkZvcmVncm91bmQ/dGhpcy5fcGFyc2VDb2xvcihlLnNlbGVjdGlvbkZvcmVncm91bmQsaSk6dm9pZCAwLHRoaXMuY29sb3JzLnNlbGVjdGlvbkZvcmVncm91bmQ9PT1pJiYodGhpcy5jb2xvcnMuc2VsZWN0aW9uRm9yZWdyb3VuZD12b2lkIDApLHMuY29sb3IuaXNPcGFxdWUodGhpcy5jb2xvcnMuc2VsZWN0aW9uQmFja2dyb3VuZFRyYW5zcGFyZW50KSl7Y29uc3QgZT0uMzt0aGlzLmNvbG9ycy5zZWxlY3Rpb25CYWNrZ3JvdW5kVHJhbnNwYXJlbnQ9cy5jb2xvci5vcGFjaXR5KHRoaXMuY29sb3JzLnNlbGVjdGlvbkJhY2tncm91bmRUcmFuc3BhcmVudCxlKX1pZihzLmNvbG9yLmlzT3BhcXVlKHRoaXMuY29sb3JzLnNlbGVjdGlvbkluYWN0aXZlQmFja2dyb3VuZFRyYW5zcGFyZW50KSl7Y29uc3QgZT0uMzt0aGlzLmNvbG9ycy5zZWxlY3Rpb25JbmFjdGl2ZUJhY2tncm91bmRUcmFuc3BhcmVudD1zLmNvbG9yLm9wYWNpdHkodGhpcy5jb2xvcnMuc2VsZWN0aW9uSW5hY3RpdmVCYWNrZ3JvdW5kVHJhbnNwYXJlbnQsZSl9aWYodGhpcy5jb2xvcnMuYW5zaT10LkRFRkFVTFRfQU5TSV9DT0xPUlMuc2xpY2UoKSx0aGlzLmNvbG9ycy5hbnNpWzBdPXRoaXMuX3BhcnNlQ29sb3IoZS5ibGFjayx0LkRFRkFVTFRfQU5TSV9DT0xPUlNbMF0pLHRoaXMuY29sb3JzLmFuc2lbMV09dGhpcy5fcGFyc2VDb2xvcihlLnJlZCx0LkRFRkFVTFRfQU5TSV9DT0xPUlNbMV0pLHRoaXMuY29sb3JzLmFuc2lbMl09dGhpcy5fcGFyc2VDb2xvcihlLmdyZWVuLHQuREVGQVVMVF9BTlNJX0NPTE9SU1syXSksdGhpcy5jb2xvcnMuYW5zaVszXT10aGlzLl9wYXJzZUNvbG9yKGUueWVsbG93LHQuREVGQVVMVF9BTlNJX0NPTE9SU1szXSksdGhpcy5jb2xvcnMuYW5zaVs0XT10aGlzLl9wYXJzZUNvbG9yKGUuYmx1ZSx0LkRFRkFVTFRfQU5TSV9DT0xPUlNbNF0pLHRoaXMuY29sb3JzLmFuc2lbNV09dGhpcy5fcGFyc2VDb2xvcihlLm1hZ2VudGEsdC5ERUZBVUxUX0FOU0lfQ09MT1JTWzVdKSx0aGlzLmNvbG9ycy5hbnNpWzZdPXRoaXMuX3BhcnNlQ29sb3IoZS5jeWFuLHQuREVGQVVMVF9BTlNJX0NPTE9SU1s2XSksdGhpcy5jb2xvcnMuYW5zaVs3XT10aGlzLl9wYXJzZUNvbG9yKGUud2hpdGUsdC5ERUZBVUxUX0FOU0lfQ09MT1JTWzddKSx0aGlzLmNvbG9ycy5hbnNpWzhdPXRoaXMuX3BhcnNlQ29sb3IoZS5icmlnaHRCbGFjayx0LkRFRkFVTFRfQU5TSV9DT0xPUlNbOF0pLHRoaXMuY29sb3JzLmFuc2lbOV09dGhpcy5fcGFyc2VDb2xvcihlLmJyaWdodFJlZCx0LkRFRkFVTFRfQU5TSV9DT0xPUlNbOV0pLHRoaXMuY29sb3JzLmFuc2lbMTBdPXRoaXMuX3BhcnNlQ29sb3IoZS5icmlnaHRHcmVlbix0LkRFRkFVTFRfQU5TSV9DT0xPUlNbMTBdKSx0aGlzLmNvbG9ycy5hbnNpWzExXT10aGlzLl9wYXJzZUNvbG9yKGUuYnJpZ2h0WWVsbG93LHQuREVGQVVMVF9BTlNJX0NPTE9SU1sxMV0pLHRoaXMuY29sb3JzLmFuc2lbMTJdPXRoaXMuX3BhcnNlQ29sb3IoZS5icmlnaHRCbHVlLHQuREVGQVVMVF9BTlNJX0NPTE9SU1sxMl0pLHRoaXMuY29sb3JzLmFuc2lbMTNdPXRoaXMuX3BhcnNlQ29sb3IoZS5icmlnaHRNYWdlbnRhLHQuREVGQVVMVF9BTlNJX0NPTE9SU1sxM10pLHRoaXMuY29sb3JzLmFuc2lbMTRdPXRoaXMuX3BhcnNlQ29sb3IoZS5icmlnaHRDeWFuLHQuREVGQVVMVF9BTlNJX0NPTE9SU1sxNF0pLHRoaXMuY29sb3JzLmFuc2lbMTVdPXRoaXMuX3BhcnNlQ29sb3IoZS5icmlnaHRXaGl0ZSx0LkRFRkFVTFRfQU5TSV9DT0xPUlNbMTVdKSxlLmV4dGVuZGVkQW5zaSl7Y29uc3QgaT1NYXRoLm1pbih0aGlzLmNvbG9ycy5hbnNpLmxlbmd0aC0xNixlLmV4dGVuZGVkQW5zaS5sZW5ndGgpO2ZvcihsZXQgcz0wO3M8aTtzKyspdGhpcy5jb2xvcnMuYW5zaVtzKzE2XT10aGlzLl9wYXJzZUNvbG9yKGUuZXh0ZW5kZWRBbnNpW3NdLHQuREVGQVVMVF9BTlNJX0NPTE9SU1tzKzE2XSl9dGhpcy5fY29udHJhc3RDYWNoZS5jbGVhcigpLHRoaXMuX3VwZGF0ZVJlc3RvcmVDb2xvcnMoKX1yZXN0b3JlQ29sb3IoZSl7aWYodm9pZCAwIT09ZSlzd2l0Y2goZSl7Y2FzZSAyNTY6dGhpcy5jb2xvcnMuZm9yZWdyb3VuZD10aGlzLl9yZXN0b3JlQ29sb3JzLmZvcmVncm91bmQ7YnJlYWs7Y2FzZSAyNTc6dGhpcy5jb2xvcnMuYmFja2dyb3VuZD10aGlzLl9yZXN0b3JlQ29sb3JzLmJhY2tncm91bmQ7YnJlYWs7Y2FzZSAyNTg6dGhpcy5jb2xvcnMuY3Vyc29yPXRoaXMuX3Jlc3RvcmVDb2xvcnMuY3Vyc29yO2JyZWFrO2RlZmF1bHQ6dGhpcy5jb2xvcnMuYW5zaVtlXT10aGlzLl9yZXN0b3JlQ29sb3JzLmFuc2lbZV19ZWxzZSBmb3IobGV0IGU9MDtlPHRoaXMuX3Jlc3RvcmVDb2xvcnMuYW5zaS5sZW5ndGg7KytlKXRoaXMuY29sb3JzLmFuc2lbZV09dGhpcy5fcmVzdG9yZUNvbG9ycy5hbnNpW2VdfV91cGRhdGVSZXN0b3JlQ29sb3JzKCl7dGhpcy5fcmVzdG9yZUNvbG9ycz17Zm9yZWdyb3VuZDp0aGlzLmNvbG9ycy5mb3JlZ3JvdW5kLGJhY2tncm91bmQ6dGhpcy5jb2xvcnMuYmFja2dyb3VuZCxjdXJzb3I6dGhpcy5jb2xvcnMuY3Vyc29yLGFuc2k6dGhpcy5jb2xvcnMuYW5zaS5zbGljZSgpfX1fcGFyc2VDb2xvcihlLHQsaT10aGlzLmFsbG93VHJhbnNwYXJlbmN5KXtpZih2b2lkIDA9PT1lKXJldHVybiB0O2lmKHRoaXMuX2N0eC5maWxsU3R5bGU9dGhpcy5fbGl0bXVzQ29sb3IsdGhpcy5fY3R4LmZpbGxTdHlsZT1lLFwic3RyaW5nXCIhPXR5cGVvZiB0aGlzLl9jdHguZmlsbFN0eWxlKXJldHVybiBjb25zb2xlLndhcm4oYENvbG9yOiAke2V9IGlzIGludmFsaWQgdXNpbmcgZmFsbGJhY2sgJHt0LmNzc31gKSx0O3RoaXMuX2N0eC5maWxsUmVjdCgwLDAsMSwxKTtjb25zdCByPXRoaXMuX2N0eC5nZXRJbWFnZURhdGEoMCwwLDEsMSkuZGF0YTtpZigyNTUhPT1yWzNdKXtpZighaSlyZXR1cm4gY29uc29sZS53YXJuKGBDb2xvcjogJHtlfSBpcyB1c2luZyB0cmFuc3BhcmVuY3ksIGJ1dCBhbGxvd1RyYW5zcGFyZW5jeSBpcyBmYWxzZS4gVXNpbmcgZmFsbGJhY2sgJHt0LmNzc30uYCksdDtjb25zdFtyLG4sbyxhXT10aGlzLl9jdHguZmlsbFN0eWxlLnN1YnN0cmluZyg1LHRoaXMuX2N0eC5maWxsU3R5bGUubGVuZ3RoLTEpLnNwbGl0KFwiLFwiKS5tYXAoKGU9Pk51bWJlcihlKSkpLGg9TWF0aC5yb3VuZCgyNTUqYSk7cmV0dXJue3JnYmE6cy5jaGFubmVscy50b1JnYmEocixuLG8saCksY3NzOmV9fXJldHVybntjc3M6dGhpcy5fY3R4LmZpbGxTdHlsZSxyZ2JhOnMuY2hhbm5lbHMudG9SZ2JhKHJbMF0sclsxXSxyWzJdLHJbM10pfX19fSw5NjMxOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5yZW1vdmVFbGVtZW50RnJvbVBhcmVudD12b2lkIDAsdC5yZW1vdmVFbGVtZW50RnJvbVBhcmVudD1mdW5jdGlvbiguLi5lKXt2YXIgdDtmb3IoY29uc3QgaSBvZiBlKW51bGw9PT0odD1udWxsPT1pP3ZvaWQgMDppLnBhcmVudEVsZW1lbnQpfHx2b2lkIDA9PT10fHx0LnJlbW92ZUNoaWxkKGkpfX0sMzY1NjooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyPXZvaWQgMCx0LmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcj1mdW5jdGlvbihlLHQsaSxzKXtlLmFkZEV2ZW50TGlzdGVuZXIodCxpLHMpO2xldCByPSExO3JldHVybntkaXNwb3NlOigpPT57cnx8KHI9ITAsZS5yZW1vdmVFdmVudExpc3RlbmVyKHQsaSxzKSl9fX19LDY0NjU6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LGkscyl7dmFyIHIsbj1hcmd1bWVudHMubGVuZ3RoLG89bjwzP3Q6bnVsbD09PXM/cz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk6cztpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlvPVJlZmxlY3QuZGVjb3JhdGUoZSx0LGkscyk7ZWxzZSBmb3IodmFyIGE9ZS5sZW5ndGgtMTthPj0wO2EtLSkocj1lW2FdKSYmKG89KG48Mz9yKG8pOm4+Mz9yKHQsaSxvKTpyKHQsaSkpfHxvKTtyZXR1cm4gbj4zJiZvJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLG8pLG99LHI9dGhpcyYmdGhpcy5fX3BhcmFtfHxmdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihpLHMpe3QoaSxzLGUpfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5MaW5raWZpZXIyPXZvaWQgMDtjb25zdCBuPWkoMjU4NSksbz1pKDg0NjApLGE9aSg4NDQpLGg9aSgzNjU2KTtsZXQgYz1jbGFzcyBleHRlbmRzIGEuRGlzcG9zYWJsZXtjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMuX2J1ZmZlclNlcnZpY2U9ZSx0aGlzLl9saW5rUHJvdmlkZXJzPVtdLHRoaXMuX2xpbmtDYWNoZURpc3Bvc2FibGVzPVtdLHRoaXMuX2lzTW91c2VPdXQ9ITAsdGhpcy5fYWN0aXZlTGluZT0tMSx0aGlzLl9vblNob3dMaW5rVW5kZXJsaW5lPXRoaXMucmVnaXN0ZXIobmV3IG8uRXZlbnRFbWl0dGVyKSx0aGlzLl9vbkhpZGVMaW5rVW5kZXJsaW5lPXRoaXMucmVnaXN0ZXIobmV3IG8uRXZlbnRFbWl0dGVyKSx0aGlzLnJlZ2lzdGVyKCgwLGEuZ2V0RGlzcG9zZUFycmF5RGlzcG9zYWJsZSkodGhpcy5fbGlua0NhY2hlRGlzcG9zYWJsZXMpKX1nZXQgY3VycmVudExpbmsoKXtyZXR1cm4gdGhpcy5fY3VycmVudExpbmt9Z2V0IG9uU2hvd0xpbmtVbmRlcmxpbmUoKXtyZXR1cm4gdGhpcy5fb25TaG93TGlua1VuZGVybGluZS5ldmVudH1nZXQgb25IaWRlTGlua1VuZGVybGluZSgpe3JldHVybiB0aGlzLl9vbkhpZGVMaW5rVW5kZXJsaW5lLmV2ZW50fWRpc3Bvc2UoKXtzdXBlci5kaXNwb3NlKCksdGhpcy5fbGFzdE1vdXNlRXZlbnQ9dm9pZCAwfXJlZ2lzdGVyTGlua1Byb3ZpZGVyKGUpe3JldHVybiB0aGlzLl9saW5rUHJvdmlkZXJzLnB1c2goZSkse2Rpc3Bvc2U6KCk9Pntjb25zdCB0PXRoaXMuX2xpbmtQcm92aWRlcnMuaW5kZXhPZihlKTstMSE9PXQmJnRoaXMuX2xpbmtQcm92aWRlcnMuc3BsaWNlKHQsMSl9fX1hdHRhY2hUb0RvbShlLHQsaSl7dGhpcy5fZWxlbWVudD1lLHRoaXMuX21vdXNlU2VydmljZT10LHRoaXMuX3JlbmRlclNlcnZpY2U9aSx0aGlzLnJlZ2lzdGVyKCgwLGguYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLl9lbGVtZW50LFwibW91c2VsZWF2ZVwiLCgoKT0+e3RoaXMuX2lzTW91c2VPdXQ9ITAsdGhpcy5fY2xlYXJDdXJyZW50TGluaygpfSkpKSx0aGlzLnJlZ2lzdGVyKCgwLGguYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLl9lbGVtZW50LFwibW91c2Vtb3ZlXCIsdGhpcy5fb25Nb3VzZU1vdmUuYmluZCh0aGlzKSkpLHRoaXMucmVnaXN0ZXIoKDAsaC5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHRoaXMuX2VsZW1lbnQsXCJtb3VzZWRvd25cIix0aGlzLl9oYW5kbGVNb3VzZURvd24uYmluZCh0aGlzKSkpLHRoaXMucmVnaXN0ZXIoKDAsaC5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHRoaXMuX2VsZW1lbnQsXCJtb3VzZXVwXCIsdGhpcy5faGFuZGxlTW91c2VVcC5iaW5kKHRoaXMpKSl9X29uTW91c2VNb3ZlKGUpe2lmKHRoaXMuX2xhc3RNb3VzZUV2ZW50PWUsIXRoaXMuX2VsZW1lbnR8fCF0aGlzLl9tb3VzZVNlcnZpY2UpcmV0dXJuO2NvbnN0IHQ9dGhpcy5fcG9zaXRpb25Gcm9tTW91c2VFdmVudChlLHRoaXMuX2VsZW1lbnQsdGhpcy5fbW91c2VTZXJ2aWNlKTtpZighdClyZXR1cm47dGhpcy5faXNNb3VzZU91dD0hMTtjb25zdCBpPWUuY29tcG9zZWRQYXRoKCk7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspe2NvbnN0IHQ9aVtlXTtpZih0LmNsYXNzTGlzdC5jb250YWlucyhcInh0ZXJtXCIpKWJyZWFrO2lmKHQuY2xhc3NMaXN0LmNvbnRhaW5zKFwieHRlcm0taG92ZXJcIikpcmV0dXJufXRoaXMuX2xhc3RCdWZmZXJDZWxsJiZ0Lng9PT10aGlzLl9sYXN0QnVmZmVyQ2VsbC54JiZ0Lnk9PT10aGlzLl9sYXN0QnVmZmVyQ2VsbC55fHwodGhpcy5fb25Ib3Zlcih0KSx0aGlzLl9sYXN0QnVmZmVyQ2VsbD10KX1fb25Ib3ZlcihlKXtpZih0aGlzLl9hY3RpdmVMaW5lIT09ZS55KXJldHVybiB0aGlzLl9jbGVhckN1cnJlbnRMaW5rKCksdm9pZCB0aGlzLl9hc2tGb3JMaW5rKGUsITEpO3RoaXMuX2N1cnJlbnRMaW5rJiZ0aGlzLl9saW5rQXRQb3NpdGlvbih0aGlzLl9jdXJyZW50TGluay5saW5rLGUpfHwodGhpcy5fY2xlYXJDdXJyZW50TGluaygpLHRoaXMuX2Fza0ZvckxpbmsoZSwhMCkpfV9hc2tGb3JMaW5rKGUsdCl7dmFyIGksczt0aGlzLl9hY3RpdmVQcm92aWRlclJlcGxpZXMmJnR8fChudWxsPT09KGk9dGhpcy5fYWN0aXZlUHJvdmlkZXJSZXBsaWVzKXx8dm9pZCAwPT09aXx8aS5mb3JFYWNoKChlPT57bnVsbD09ZXx8ZS5mb3JFYWNoKChlPT57ZS5saW5rLmRpc3Bvc2UmJmUubGluay5kaXNwb3NlKCl9KSl9KSksdGhpcy5fYWN0aXZlUHJvdmlkZXJSZXBsaWVzPW5ldyBNYXAsdGhpcy5fYWN0aXZlTGluZT1lLnkpO2xldCByPSExO2Zvcihjb25zdFtpLG5db2YgdGhpcy5fbGlua1Byb3ZpZGVycy5lbnRyaWVzKCkpdD8obnVsbD09PShzPXRoaXMuX2FjdGl2ZVByb3ZpZGVyUmVwbGllcyl8fHZvaWQgMD09PXM/dm9pZCAwOnMuZ2V0KGkpKSYmKHI9dGhpcy5fY2hlY2tMaW5rUHJvdmlkZXJSZXN1bHQoaSxlLHIpKTpuLnByb3ZpZGVMaW5rcyhlLnksKHQ9Pnt2YXIgcyxuO2lmKHRoaXMuX2lzTW91c2VPdXQpcmV0dXJuO2NvbnN0IG89bnVsbD09dD92b2lkIDA6dC5tYXAoKGU9Pih7bGluazplfSkpKTtudWxsPT09KHM9dGhpcy5fYWN0aXZlUHJvdmlkZXJSZXBsaWVzKXx8dm9pZCAwPT09c3x8cy5zZXQoaSxvKSxyPXRoaXMuX2NoZWNrTGlua1Byb3ZpZGVyUmVzdWx0KGksZSxyKSwobnVsbD09PShuPXRoaXMuX2FjdGl2ZVByb3ZpZGVyUmVwbGllcyl8fHZvaWQgMD09PW4/dm9pZCAwOm4uc2l6ZSk9PT10aGlzLl9saW5rUHJvdmlkZXJzLmxlbmd0aCYmdGhpcy5fcmVtb3ZlSW50ZXJzZWN0aW5nTGlua3MoZS55LHRoaXMuX2FjdGl2ZVByb3ZpZGVyUmVwbGllcyl9KSl9X3JlbW92ZUludGVyc2VjdGluZ0xpbmtzKGUsdCl7Y29uc3QgaT1uZXcgU2V0O2ZvcihsZXQgcz0wO3M8dC5zaXplO3MrKyl7Y29uc3Qgcj10LmdldChzKTtpZihyKWZvcihsZXQgdD0wO3Q8ci5sZW5ndGg7dCsrKXtjb25zdCBzPXJbdF0sbj1zLmxpbmsucmFuZ2Uuc3RhcnQueTxlPzA6cy5saW5rLnJhbmdlLnN0YXJ0Lngsbz1zLmxpbmsucmFuZ2UuZW5kLnk+ZT90aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHM6cy5saW5rLnJhbmdlLmVuZC54O2ZvcihsZXQgZT1uO2U8PW87ZSsrKXtpZihpLmhhcyhlKSl7ci5zcGxpY2UodC0tLDEpO2JyZWFrfWkuYWRkKGUpfX19fV9jaGVja0xpbmtQcm92aWRlclJlc3VsdChlLHQsaSl7dmFyIHM7aWYoIXRoaXMuX2FjdGl2ZVByb3ZpZGVyUmVwbGllcylyZXR1cm4gaTtjb25zdCByPXRoaXMuX2FjdGl2ZVByb3ZpZGVyUmVwbGllcy5nZXQoZSk7bGV0IG49ITE7Zm9yKGxldCB0PTA7dDxlO3QrKyl0aGlzLl9hY3RpdmVQcm92aWRlclJlcGxpZXMuaGFzKHQpJiYhdGhpcy5fYWN0aXZlUHJvdmlkZXJSZXBsaWVzLmdldCh0KXx8KG49ITApO2lmKCFuJiZyKXtjb25zdCBlPXIuZmluZCgoZT0+dGhpcy5fbGlua0F0UG9zaXRpb24oZS5saW5rLHQpKSk7ZSYmKGk9ITAsdGhpcy5faGFuZGxlTmV3TGluayhlKSl9aWYodGhpcy5fYWN0aXZlUHJvdmlkZXJSZXBsaWVzLnNpemU9PT10aGlzLl9saW5rUHJvdmlkZXJzLmxlbmd0aCYmIWkpZm9yKGxldCBlPTA7ZTx0aGlzLl9hY3RpdmVQcm92aWRlclJlcGxpZXMuc2l6ZTtlKyspe2NvbnN0IHI9bnVsbD09PShzPXRoaXMuX2FjdGl2ZVByb3ZpZGVyUmVwbGllcy5nZXQoZSkpfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLmZpbmQoKGU9PnRoaXMuX2xpbmtBdFBvc2l0aW9uKGUubGluayx0KSkpO2lmKHIpe2k9ITAsdGhpcy5faGFuZGxlTmV3TGluayhyKTticmVha319cmV0dXJuIGl9X2hhbmRsZU1vdXNlRG93bigpe3RoaXMuX21vdXNlRG93bkxpbms9dGhpcy5fY3VycmVudExpbmt9X2hhbmRsZU1vdXNlVXAoZSl7aWYoIXRoaXMuX2VsZW1lbnR8fCF0aGlzLl9tb3VzZVNlcnZpY2V8fCF0aGlzLl9jdXJyZW50TGluaylyZXR1cm47Y29uc3QgdD10aGlzLl9wb3NpdGlvbkZyb21Nb3VzZUV2ZW50KGUsdGhpcy5fZWxlbWVudCx0aGlzLl9tb3VzZVNlcnZpY2UpO3QmJnRoaXMuX21vdXNlRG93bkxpbms9PT10aGlzLl9jdXJyZW50TGluayYmdGhpcy5fbGlua0F0UG9zaXRpb24odGhpcy5fY3VycmVudExpbmsubGluayx0KSYmdGhpcy5fY3VycmVudExpbmsubGluay5hY3RpdmF0ZShlLHRoaXMuX2N1cnJlbnRMaW5rLmxpbmsudGV4dCl9X2NsZWFyQ3VycmVudExpbmsoZSx0KXt0aGlzLl9lbGVtZW50JiZ0aGlzLl9jdXJyZW50TGluayYmdGhpcy5fbGFzdE1vdXNlRXZlbnQmJighZXx8IXR8fHRoaXMuX2N1cnJlbnRMaW5rLmxpbmsucmFuZ2Uuc3RhcnQueT49ZSYmdGhpcy5fY3VycmVudExpbmsubGluay5yYW5nZS5lbmQueTw9dCkmJih0aGlzLl9saW5rTGVhdmUodGhpcy5fZWxlbWVudCx0aGlzLl9jdXJyZW50TGluay5saW5rLHRoaXMuX2xhc3RNb3VzZUV2ZW50KSx0aGlzLl9jdXJyZW50TGluaz12b2lkIDAsKDAsYS5kaXNwb3NlQXJyYXkpKHRoaXMuX2xpbmtDYWNoZURpc3Bvc2FibGVzKSl9X2hhbmRsZU5ld0xpbmsoZSl7aWYoIXRoaXMuX2VsZW1lbnR8fCF0aGlzLl9sYXN0TW91c2VFdmVudHx8IXRoaXMuX21vdXNlU2VydmljZSlyZXR1cm47Y29uc3QgdD10aGlzLl9wb3NpdGlvbkZyb21Nb3VzZUV2ZW50KHRoaXMuX2xhc3RNb3VzZUV2ZW50LHRoaXMuX2VsZW1lbnQsdGhpcy5fbW91c2VTZXJ2aWNlKTt0JiZ0aGlzLl9saW5rQXRQb3NpdGlvbihlLmxpbmssdCkmJih0aGlzLl9jdXJyZW50TGluaz1lLHRoaXMuX2N1cnJlbnRMaW5rLnN0YXRlPXtkZWNvcmF0aW9uczp7dW5kZXJsaW5lOnZvaWQgMD09PWUubGluay5kZWNvcmF0aW9uc3x8ZS5saW5rLmRlY29yYXRpb25zLnVuZGVybGluZSxwb2ludGVyQ3Vyc29yOnZvaWQgMD09PWUubGluay5kZWNvcmF0aW9uc3x8ZS5saW5rLmRlY29yYXRpb25zLnBvaW50ZXJDdXJzb3J9LGlzSG92ZXJlZDohMH0sdGhpcy5fbGlua0hvdmVyKHRoaXMuX2VsZW1lbnQsZS5saW5rLHRoaXMuX2xhc3RNb3VzZUV2ZW50KSxlLmxpbmsuZGVjb3JhdGlvbnM9e30sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZS5saW5rLmRlY29yYXRpb25zLHtwb2ludGVyQ3Vyc29yOntnZXQ6KCk9Pnt2YXIgZSx0O3JldHVybiBudWxsPT09KHQ9bnVsbD09PShlPXRoaXMuX2N1cnJlbnRMaW5rKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5zdGF0ZSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZGVjb3JhdGlvbnMucG9pbnRlckN1cnNvcn0sc2V0OmU9Pnt2YXIgdCxpOyhudWxsPT09KHQ9dGhpcy5fY3VycmVudExpbmspfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnN0YXRlKSYmdGhpcy5fY3VycmVudExpbmsuc3RhdGUuZGVjb3JhdGlvbnMucG9pbnRlckN1cnNvciE9PWUmJih0aGlzLl9jdXJyZW50TGluay5zdGF0ZS5kZWNvcmF0aW9ucy5wb2ludGVyQ3Vyc29yPWUsdGhpcy5fY3VycmVudExpbmsuc3RhdGUuaXNIb3ZlcmVkJiYobnVsbD09PShpPXRoaXMuX2VsZW1lbnQpfHx2b2lkIDA9PT1pfHxpLmNsYXNzTGlzdC50b2dnbGUoXCJ4dGVybS1jdXJzb3ItcG9pbnRlclwiLGUpKSl9fSx1bmRlcmxpbmU6e2dldDooKT0+e3ZhciBlLHQ7cmV0dXJuIG51bGw9PT0odD1udWxsPT09KGU9dGhpcy5fY3VycmVudExpbmspfHx2b2lkIDA9PT1lP3ZvaWQgMDplLnN0YXRlKXx8dm9pZCAwPT09dD92b2lkIDA6dC5kZWNvcmF0aW9ucy51bmRlcmxpbmV9LHNldDp0PT57dmFyIGkscyxyOyhudWxsPT09KGk9dGhpcy5fY3VycmVudExpbmspfHx2b2lkIDA9PT1pP3ZvaWQgMDppLnN0YXRlKSYmKG51bGw9PT0ocj1udWxsPT09KHM9dGhpcy5fY3VycmVudExpbmspfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLnN0YXRlKXx8dm9pZCAwPT09cj92b2lkIDA6ci5kZWNvcmF0aW9ucy51bmRlcmxpbmUpIT09dCYmKHRoaXMuX2N1cnJlbnRMaW5rLnN0YXRlLmRlY29yYXRpb25zLnVuZGVybGluZT10LHRoaXMuX2N1cnJlbnRMaW5rLnN0YXRlLmlzSG92ZXJlZCYmdGhpcy5fZmlyZVVuZGVybGluZUV2ZW50KGUubGluayx0KSl9fX0pLHRoaXMuX3JlbmRlclNlcnZpY2UmJnRoaXMuX2xpbmtDYWNoZURpc3Bvc2FibGVzLnB1c2godGhpcy5fcmVuZGVyU2VydmljZS5vblJlbmRlcmVkVmlld3BvcnRDaGFuZ2UoKGU9Pntjb25zdCB0PTA9PT1lLnN0YXJ0PzA6ZS5zdGFydCsxK3RoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnlkaXNwO3RoaXMuX2NsZWFyQ3VycmVudExpbmsodCxlLmVuZCsxK3RoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnlkaXNwKX0pKSkpfV9saW5rSG92ZXIoZSx0LGkpe3ZhciBzOyhudWxsPT09KHM9dGhpcy5fY3VycmVudExpbmspfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLnN0YXRlKSYmKHRoaXMuX2N1cnJlbnRMaW5rLnN0YXRlLmlzSG92ZXJlZD0hMCx0aGlzLl9jdXJyZW50TGluay5zdGF0ZS5kZWNvcmF0aW9ucy51bmRlcmxpbmUmJnRoaXMuX2ZpcmVVbmRlcmxpbmVFdmVudCh0LCEwKSx0aGlzLl9jdXJyZW50TGluay5zdGF0ZS5kZWNvcmF0aW9ucy5wb2ludGVyQ3Vyc29yJiZlLmNsYXNzTGlzdC5hZGQoXCJ4dGVybS1jdXJzb3ItcG9pbnRlclwiKSksdC5ob3ZlciYmdC5ob3ZlcihpLHQudGV4dCl9X2ZpcmVVbmRlcmxpbmVFdmVudChlLHQpe2NvbnN0IGk9ZS5yYW5nZSxzPXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnlkaXNwLHI9dGhpcy5fY3JlYXRlTGlua1VuZGVybGluZUV2ZW50KGkuc3RhcnQueC0xLGkuc3RhcnQueS1zLTEsaS5lbmQueCxpLmVuZC55LXMtMSx2b2lkIDApOyh0P3RoaXMuX29uU2hvd0xpbmtVbmRlcmxpbmU6dGhpcy5fb25IaWRlTGlua1VuZGVybGluZSkuZmlyZShyKX1fbGlua0xlYXZlKGUsdCxpKXt2YXIgczsobnVsbD09PShzPXRoaXMuX2N1cnJlbnRMaW5rKXx8dm9pZCAwPT09cz92b2lkIDA6cy5zdGF0ZSkmJih0aGlzLl9jdXJyZW50TGluay5zdGF0ZS5pc0hvdmVyZWQ9ITEsdGhpcy5fY3VycmVudExpbmsuc3RhdGUuZGVjb3JhdGlvbnMudW5kZXJsaW5lJiZ0aGlzLl9maXJlVW5kZXJsaW5lRXZlbnQodCwhMSksdGhpcy5fY3VycmVudExpbmsuc3RhdGUuZGVjb3JhdGlvbnMucG9pbnRlckN1cnNvciYmZS5jbGFzc0xpc3QucmVtb3ZlKFwieHRlcm0tY3Vyc29yLXBvaW50ZXJcIikpLHQubGVhdmUmJnQubGVhdmUoaSx0LnRleHQpfV9saW5rQXRQb3NpdGlvbihlLHQpe2NvbnN0IGk9ZS5yYW5nZS5zdGFydC55PT09ZS5yYW5nZS5lbmQueSxzPWUucmFuZ2Uuc3RhcnQueTx0Lnkscj1lLnJhbmdlLmVuZC55PnQueTtyZXR1cm4oaSYmZS5yYW5nZS5zdGFydC54PD10LngmJmUucmFuZ2UuZW5kLng+PXQueHx8cyYmZS5yYW5nZS5lbmQueD49dC54fHxyJiZlLnJhbmdlLnN0YXJ0Lng8PXQueHx8cyYmcikmJmUucmFuZ2Uuc3RhcnQueTw9dC55JiZlLnJhbmdlLmVuZC55Pj10Lnl9X3Bvc2l0aW9uRnJvbU1vdXNlRXZlbnQoZSx0LGkpe2NvbnN0IHM9aS5nZXRDb29yZHMoZSx0LHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyx0aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MpO2lmKHMpcmV0dXJue3g6c1swXSx5OnNbMV0rdGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIueWRpc3B9fV9jcmVhdGVMaW5rVW5kZXJsaW5lRXZlbnQoZSx0LGkscyxyKXtyZXR1cm57eDE6ZSx5MTp0LHgyOmkseTI6cyxjb2xzOnRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyxmZzpyfX19O2M9cyhbcigwLG4uSUJ1ZmZlclNlcnZpY2UpXSxjKSx0LkxpbmtpZmllcjI9Y30sOTA0MjooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQudG9vTXVjaE91dHB1dD10LnByb21wdExhYmVsPXZvaWQgMCx0LnByb21wdExhYmVsPVwiVGVybWluYWwgaW5wdXRcIix0LnRvb011Y2hPdXRwdXQ9XCJUb28gbXVjaCBvdXRwdXQgdG8gYW5ub3VuY2UsIG5hdmlnYXRlIHRvIHJvd3MgbWFudWFsbHkgdG8gcmVhZFwifSwyOTYyOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuT3NjTGlua1Byb3ZpZGVyPXZvaWQgMDtjb25zdCBuPWkoNTExKSxvPWkoMjU4NSk7bGV0IGE9Y2xhc3N7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMuX2J1ZmZlclNlcnZpY2U9ZSx0aGlzLl9vcHRpb25zU2VydmljZT10LHRoaXMuX29zY0xpbmtTZXJ2aWNlPWl9cHJvdmlkZUxpbmtzKGUsdCl7dmFyIGk7Y29uc3Qgcz10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci5saW5lcy5nZXQoZS0xKTtpZighcylyZXR1cm4gdm9pZCB0KHZvaWQgMCk7Y29uc3Qgcj1bXSxvPXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMubGlua0hhbmRsZXIsYT1uZXcgbi5DZWxsRGF0YSxjPXMuZ2V0VHJpbW1lZExlbmd0aCgpO2xldCBsPS0xLGQ9LTEsXz0hMTtmb3IobGV0IHQ9MDt0PGM7dCsrKWlmKC0xIT09ZHx8cy5oYXNDb250ZW50KHQpKXtpZihzLmxvYWRDZWxsKHQsYSksYS5oYXNFeHRlbmRlZEF0dHJzKCkmJmEuZXh0ZW5kZWQudXJsSWQpe2lmKC0xPT09ZCl7ZD10LGw9YS5leHRlbmRlZC51cmxJZDtjb250aW51ZX1fPWEuZXh0ZW5kZWQudXJsSWQhPT1sfWVsc2UtMSE9PWQmJihfPSEwKTtpZihffHwtMSE9PWQmJnQ9PT1jLTEpe2NvbnN0IHM9bnVsbD09PShpPXRoaXMuX29zY0xpbmtTZXJ2aWNlLmdldExpbmtEYXRhKGwpKXx8dm9pZCAwPT09aT92b2lkIDA6aS51cmk7aWYocyl7Y29uc3QgaT17c3RhcnQ6e3g6ZCsxLHk6ZX0sZW5kOnt4OnQrKF98fHQhPT1jLTE/MDoxKSx5OmV9fTtyLnB1c2goe3RleHQ6cyxyYW5nZTppLGFjdGl2YXRlOihlLHQpPT5vP28uYWN0aXZhdGUoZSx0LGkpOmgoMCx0KSxob3ZlcjooZSx0KT0+e3ZhciBzO3JldHVybiBudWxsPT09KHM9bnVsbD09bz92b2lkIDA6by5ob3Zlcil8fHZvaWQgMD09PXM/dm9pZCAwOnMuY2FsbChvLGUsdCxpKX0sbGVhdmU6KGUsdCk9Pnt2YXIgcztyZXR1cm4gbnVsbD09PShzPW51bGw9PW8/dm9pZCAwOm8ubGVhdmUpfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLmNhbGwobyxlLHQsaSl9fSl9Xz0hMSxhLmhhc0V4dGVuZGVkQXR0cnMoKSYmYS5leHRlbmRlZC51cmxJZD8oZD10LGw9YS5leHRlbmRlZC51cmxJZCk6KGQ9LTEsbD0tMSl9fXQocil9fTtmdW5jdGlvbiBoKGUsdCl7aWYoY29uZmlybShgRG8geW91IHdhbnQgdG8gbmF2aWdhdGUgdG8gJHt0fT9gKSl7Y29uc3QgZT13aW5kb3cub3BlbigpO2lmKGUpe3RyeXtlLm9wZW5lcj1udWxsfWNhdGNoKGUpe31lLmxvY2F0aW9uLmhyZWY9dH1lbHNlIGNvbnNvbGUud2FybihcIk9wZW5pbmcgbGluayBibG9ja2VkIGFzIG9wZW5lciBjb3VsZCBub3QgYmUgY2xlYXJlZFwiKX19YT1zKFtyKDAsby5JQnVmZmVyU2VydmljZSkscigxLG8uSU9wdGlvbnNTZXJ2aWNlKSxyKDIsby5JT3NjTGlua1NlcnZpY2UpXSxhKSx0Lk9zY0xpbmtQcm92aWRlcj1hfSw2MTkzOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5SZW5kZXJEZWJvdW5jZXI9dm9pZCAwLHQuUmVuZGVyRGVib3VuY2VyPWNsYXNze2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5fcGFyZW50V2luZG93PWUsdGhpcy5fcmVuZGVyQ2FsbGJhY2s9dCx0aGlzLl9yZWZyZXNoQ2FsbGJhY2tzPVtdfWRpc3Bvc2UoKXt0aGlzLl9hbmltYXRpb25GcmFtZSYmKHRoaXMuX3BhcmVudFdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLl9hbmltYXRpb25GcmFtZSksdGhpcy5fYW5pbWF0aW9uRnJhbWU9dm9pZCAwKX1hZGRSZWZyZXNoQ2FsbGJhY2soZSl7cmV0dXJuIHRoaXMuX3JlZnJlc2hDYWxsYmFja3MucHVzaChlKSx0aGlzLl9hbmltYXRpb25GcmFtZXx8KHRoaXMuX2FuaW1hdGlvbkZyYW1lPXRoaXMuX3BhcmVudFdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCgpPT50aGlzLl9pbm5lclJlZnJlc2goKSkpKSx0aGlzLl9hbmltYXRpb25GcmFtZX1yZWZyZXNoKGUsdCxpKXt0aGlzLl9yb3dDb3VudD1pLGU9dm9pZCAwIT09ZT9lOjAsdD12b2lkIDAhPT10P3Q6dGhpcy5fcm93Q291bnQtMSx0aGlzLl9yb3dTdGFydD12b2lkIDAhPT10aGlzLl9yb3dTdGFydD9NYXRoLm1pbih0aGlzLl9yb3dTdGFydCxlKTplLHRoaXMuX3Jvd0VuZD12b2lkIDAhPT10aGlzLl9yb3dFbmQ/TWF0aC5tYXgodGhpcy5fcm93RW5kLHQpOnQsdGhpcy5fYW5pbWF0aW9uRnJhbWV8fCh0aGlzLl9hbmltYXRpb25GcmFtZT10aGlzLl9wYXJlbnRXaW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgoKT0+dGhpcy5faW5uZXJSZWZyZXNoKCkpKSl9X2lubmVyUmVmcmVzaCgpe2lmKHRoaXMuX2FuaW1hdGlvbkZyYW1lPXZvaWQgMCx2b2lkIDA9PT10aGlzLl9yb3dTdGFydHx8dm9pZCAwPT09dGhpcy5fcm93RW5kfHx2b2lkIDA9PT10aGlzLl9yb3dDb3VudClyZXR1cm4gdm9pZCB0aGlzLl9ydW5SZWZyZXNoQ2FsbGJhY2tzKCk7Y29uc3QgZT1NYXRoLm1heCh0aGlzLl9yb3dTdGFydCwwKSx0PU1hdGgubWluKHRoaXMuX3Jvd0VuZCx0aGlzLl9yb3dDb3VudC0xKTt0aGlzLl9yb3dTdGFydD12b2lkIDAsdGhpcy5fcm93RW5kPXZvaWQgMCx0aGlzLl9yZW5kZXJDYWxsYmFjayhlLHQpLHRoaXMuX3J1blJlZnJlc2hDYWxsYmFja3MoKX1fcnVuUmVmcmVzaENhbGxiYWNrcygpe2Zvcihjb25zdCBlIG9mIHRoaXMuX3JlZnJlc2hDYWxsYmFja3MpZSgwKTt0aGlzLl9yZWZyZXNoQ2FsbGJhY2tzPVtdfX19LDU1OTY6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuU2NyZWVuRHByTW9uaXRvcj12b2lkIDA7Y29uc3Qgcz1pKDg0NCk7Y2xhc3MgciBleHRlbmRzIHMuRGlzcG9zYWJsZXtjb25zdHJ1Y3RvcihlKXtzdXBlcigpLHRoaXMuX3BhcmVudFdpbmRvdz1lLHRoaXMuX2N1cnJlbnREZXZpY2VQaXhlbFJhdGlvPXRoaXMuX3BhcmVudFdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvfXNldExpc3RlbmVyKGUpe3RoaXMuX2xpc3RlbmVyJiZ0aGlzLmNsZWFyTGlzdGVuZXIoKSx0aGlzLl9saXN0ZW5lcj1lLHRoaXMuX291dGVyTGlzdGVuZXI9KCk9Pnt0aGlzLl9saXN0ZW5lciYmKHRoaXMuX2xpc3RlbmVyKHRoaXMuX3BhcmVudFdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvLHRoaXMuX2N1cnJlbnREZXZpY2VQaXhlbFJhdGlvKSx0aGlzLl91cGRhdGVEcHIoKSl9LHRoaXMuX3VwZGF0ZURwcigpfWRpc3Bvc2UoKXtzdXBlci5kaXNwb3NlKCksdGhpcy5jbGVhckxpc3RlbmVyKCl9X3VwZGF0ZURwcigpe3ZhciBlO3RoaXMuX291dGVyTGlzdGVuZXImJihudWxsPT09KGU9dGhpcy5fcmVzb2x1dGlvbk1lZGlhTWF0Y2hMaXN0KXx8dm9pZCAwPT09ZXx8ZS5yZW1vdmVMaXN0ZW5lcih0aGlzLl9vdXRlckxpc3RlbmVyKSx0aGlzLl9jdXJyZW50RGV2aWNlUGl4ZWxSYXRpbz10aGlzLl9wYXJlbnRXaW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyx0aGlzLl9yZXNvbHV0aW9uTWVkaWFNYXRjaExpc3Q9dGhpcy5fcGFyZW50V2luZG93Lm1hdGNoTWVkaWEoYHNjcmVlbiBhbmQgKHJlc29sdXRpb246ICR7dGhpcy5fcGFyZW50V2luZG93LmRldmljZVBpeGVsUmF0aW99ZHBweClgKSx0aGlzLl9yZXNvbHV0aW9uTWVkaWFNYXRjaExpc3QuYWRkTGlzdGVuZXIodGhpcy5fb3V0ZXJMaXN0ZW5lcikpfWNsZWFyTGlzdGVuZXIoKXt0aGlzLl9yZXNvbHV0aW9uTWVkaWFNYXRjaExpc3QmJnRoaXMuX2xpc3RlbmVyJiZ0aGlzLl9vdXRlckxpc3RlbmVyJiYodGhpcy5fcmVzb2x1dGlvbk1lZGlhTWF0Y2hMaXN0LnJlbW92ZUxpc3RlbmVyKHRoaXMuX291dGVyTGlzdGVuZXIpLHRoaXMuX3Jlc29sdXRpb25NZWRpYU1hdGNoTGlzdD12b2lkIDAsdGhpcy5fbGlzdGVuZXI9dm9pZCAwLHRoaXMuX291dGVyTGlzdGVuZXI9dm9pZCAwKX19dC5TY3JlZW5EcHJNb25pdG9yPXJ9LDMyMzY6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVGVybWluYWw9dm9pZCAwO2NvbnN0IHM9aSgyOTUwKSxyPWkoMTY4MCksbj1pKDM2MTQpLG89aSgyNTg0KSxhPWkoNTQzNSksaD1pKDkzMTIpLGM9aSg2MTE0KSxsPWkoMzY1NiksZD1pKDkwNDIpLF89aSg0NTY3KSx1PWkoMTI5NiksZj1pKDczOTkpLHY9aSg4NDYwKSxnPWkoODQzNykscD1pKDU2ODApLFM9aSgzMjMwKSxtPWkoNDcyNSksQz1pKDQyOCksYj1pKDg5MzQpLHk9aSg2NDY1KSx3PWkoNTExNCksRT1pKDg5NjkpLEw9aSg4MDU1KSxSPWkoNDI2OSksaz1pKDU5NDEpLEQ9aSgzMTA3KSxBPWkoNTc0NCkseD1pKDkwNzQpLEI9aSgyNTg1KSxUPWkoMjk2MiksTT1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdy5kb2N1bWVudDpudWxsO2NsYXNzIE8gZXh0ZW5kcyBFLkNvcmVUZXJtaW5hbHtjb25zdHJ1Y3RvcihlPXt9KXtzdXBlcihlKSx0aGlzLmJyb3dzZXI9Yyx0aGlzLl9rZXlEb3duSGFuZGxlZD0hMSx0aGlzLl9rZXlEb3duU2Vlbj0hMSx0aGlzLl9rZXlQcmVzc0hhbmRsZWQ9ITEsdGhpcy5fdW5wcm9jZXNzZWREZWFkS2V5PSExLHRoaXMuX29uQ3Vyc29yTW92ZT1uZXcgdi5FdmVudEVtaXR0ZXIsdGhpcy5fb25LZXk9bmV3IHYuRXZlbnRFbWl0dGVyLHRoaXMuX29uUmVuZGVyPW5ldyB2LkV2ZW50RW1pdHRlcix0aGlzLl9vblNlbGVjdGlvbkNoYW5nZT1uZXcgdi5FdmVudEVtaXR0ZXIsdGhpcy5fb25UaXRsZUNoYW5nZT1uZXcgdi5FdmVudEVtaXR0ZXIsdGhpcy5fb25CZWxsPW5ldyB2LkV2ZW50RW1pdHRlcix0aGlzLl9vbkZvY3VzPW5ldyB2LkV2ZW50RW1pdHRlcix0aGlzLl9vbkJsdXI9bmV3IHYuRXZlbnRFbWl0dGVyLHRoaXMuX29uQTExeUNoYXJFbWl0dGVyPW5ldyB2LkV2ZW50RW1pdHRlcix0aGlzLl9vbkExMXlUYWJFbWl0dGVyPW5ldyB2LkV2ZW50RW1pdHRlcix0aGlzLl9zZXR1cCgpLHRoaXMubGlua2lmaWVyMj10aGlzLnJlZ2lzdGVyKHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKHkuTGlua2lmaWVyMikpLHRoaXMubGlua2lmaWVyMi5yZWdpc3RlckxpbmtQcm92aWRlcih0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShULk9zY0xpbmtQcm92aWRlcikpLHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlPXRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKHguRGVjb3JhdGlvblNlcnZpY2UpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2UoQi5JRGVjb3JhdGlvblNlcnZpY2UsdGhpcy5fZGVjb3JhdGlvblNlcnZpY2UpLHRoaXMucmVnaXN0ZXIodGhpcy5faW5wdXRIYW5kbGVyLm9uUmVxdWVzdEJlbGwoKCgpPT50aGlzLl9vbkJlbGwuZmlyZSgpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5faW5wdXRIYW5kbGVyLm9uUmVxdWVzdFJlZnJlc2hSb3dzKCgoZSx0KT0+dGhpcy5yZWZyZXNoKGUsdCkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9pbnB1dEhhbmRsZXIub25SZXF1ZXN0U2VuZEZvY3VzKCgoKT0+dGhpcy5fcmVwb3J0Rm9jdXMoKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2lucHV0SGFuZGxlci5vblJlcXVlc3RSZXNldCgoKCk9PnRoaXMucmVzZXQoKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2lucHV0SGFuZGxlci5vblJlcXVlc3RXaW5kb3dzT3B0aW9uc1JlcG9ydCgoZT0+dGhpcy5fcmVwb3J0V2luZG93c09wdGlvbnMoZSkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9pbnB1dEhhbmRsZXIub25Db2xvcigoZT0+dGhpcy5faGFuZGxlQ29sb3JFdmVudChlKSkpKSx0aGlzLnJlZ2lzdGVyKCgwLHYuZm9yd2FyZEV2ZW50KSh0aGlzLl9pbnB1dEhhbmRsZXIub25DdXJzb3JNb3ZlLHRoaXMuX29uQ3Vyc29yTW92ZSkpLHRoaXMucmVnaXN0ZXIoKDAsdi5mb3J3YXJkRXZlbnQpKHRoaXMuX2lucHV0SGFuZGxlci5vblRpdGxlQ2hhbmdlLHRoaXMuX29uVGl0bGVDaGFuZ2UpKSx0aGlzLnJlZ2lzdGVyKCgwLHYuZm9yd2FyZEV2ZW50KSh0aGlzLl9pbnB1dEhhbmRsZXIub25BMTF5Q2hhcix0aGlzLl9vbkExMXlDaGFyRW1pdHRlcikpLHRoaXMucmVnaXN0ZXIoKDAsdi5mb3J3YXJkRXZlbnQpKHRoaXMuX2lucHV0SGFuZGxlci5vbkExMXlUYWIsdGhpcy5fb25BMTF5VGFiRW1pdHRlcikpLHRoaXMucmVnaXN0ZXIodGhpcy5fYnVmZmVyU2VydmljZS5vblJlc2l6ZSgoZT0+dGhpcy5fYWZ0ZXJSZXNpemUoZS5jb2xzLGUucm93cykpKSl9Z2V0IG9uQ3Vyc29yTW92ZSgpe3JldHVybiB0aGlzLl9vbkN1cnNvck1vdmUuZXZlbnR9Z2V0IG9uS2V5KCl7cmV0dXJuIHRoaXMuX29uS2V5LmV2ZW50fWdldCBvblJlbmRlcigpe3JldHVybiB0aGlzLl9vblJlbmRlci5ldmVudH1nZXQgb25TZWxlY3Rpb25DaGFuZ2UoKXtyZXR1cm4gdGhpcy5fb25TZWxlY3Rpb25DaGFuZ2UuZXZlbnR9Z2V0IG9uVGl0bGVDaGFuZ2UoKXtyZXR1cm4gdGhpcy5fb25UaXRsZUNoYW5nZS5ldmVudH1nZXQgb25CZWxsKCl7cmV0dXJuIHRoaXMuX29uQmVsbC5ldmVudH1nZXQgb25Gb2N1cygpe3JldHVybiB0aGlzLl9vbkZvY3VzLmV2ZW50fWdldCBvbkJsdXIoKXtyZXR1cm4gdGhpcy5fb25CbHVyLmV2ZW50fWdldCBvbkExMXlDaGFyKCl7cmV0dXJuIHRoaXMuX29uQTExeUNoYXJFbWl0dGVyLmV2ZW50fWdldCBvbkExMXlUYWIoKXtyZXR1cm4gdGhpcy5fb25BMTF5VGFiRW1pdHRlci5ldmVudH1faGFuZGxlQ29sb3JFdmVudChlKXt2YXIgdCxpO2lmKHRoaXMuX2NvbG9yTWFuYWdlcil7Zm9yKGNvbnN0IHQgb2YgZSl7bGV0IGUsaT1cIlwiO3N3aXRjaCh0LmluZGV4KXtjYXNlIDI1NjplPVwiZm9yZWdyb3VuZFwiLGk9XCIxMFwiO2JyZWFrO2Nhc2UgMjU3OmU9XCJiYWNrZ3JvdW5kXCIsaT1cIjExXCI7YnJlYWs7Y2FzZSAyNTg6ZT1cImN1cnNvclwiLGk9XCIxMlwiO2JyZWFrO2RlZmF1bHQ6ZT1cImFuc2lcIixpPVwiNDtcIit0LmluZGV4fXN3aXRjaCh0LnR5cGUpe2Nhc2UgMDpjb25zdCBzPUwuY29sb3IudG9Db2xvclJHQihcImFuc2lcIj09PWU/dGhpcy5fY29sb3JNYW5hZ2VyLmNvbG9ycy5hbnNpW3QuaW5kZXhdOnRoaXMuX2NvbG9yTWFuYWdlci5jb2xvcnNbZV0pO3RoaXMuY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChgJHtvLkMwLkVTQ31dJHtpfTskeygwLGsudG9SZ2JTdHJpbmcpKHMpfSR7by5DMV9FU0NBUEVELlNUfWApO2JyZWFrO2Nhc2UgMTpcImFuc2lcIj09PWU/dGhpcy5fY29sb3JNYW5hZ2VyLmNvbG9ycy5hbnNpW3QuaW5kZXhdPUwucmdiYS50b0NvbG9yKC4uLnQuY29sb3IpOnRoaXMuX2NvbG9yTWFuYWdlci5jb2xvcnNbZV09TC5yZ2JhLnRvQ29sb3IoLi4udC5jb2xvcik7YnJlYWs7Y2FzZSAyOnRoaXMuX2NvbG9yTWFuYWdlci5yZXN0b3JlQ29sb3IodC5pbmRleCl9fW51bGw9PT0odD10aGlzLl9yZW5kZXJTZXJ2aWNlKXx8dm9pZCAwPT09dHx8dC5zZXRDb2xvcnModGhpcy5fY29sb3JNYW5hZ2VyLmNvbG9ycyksbnVsbD09PShpPXRoaXMudmlld3BvcnQpfHx2b2lkIDA9PT1pfHxpLm9uVGhlbWVDaGFuZ2UodGhpcy5fY29sb3JNYW5hZ2VyLmNvbG9ycyl9fWRpc3Bvc2UoKXt2YXIgZSx0LGk7dGhpcy5faXNEaXNwb3NlZHx8KHN1cGVyLmRpc3Bvc2UoKSxudWxsPT09KGU9dGhpcy5fcmVuZGVyU2VydmljZSl8fHZvaWQgMD09PWV8fGUuZGlzcG9zZSgpLHRoaXMuX2N1c3RvbUtleUV2ZW50SGFuZGxlcj12b2lkIDAsdGhpcy53cml0ZT0oKT0+e30sbnVsbD09PShpPW51bGw9PT0odD10aGlzLmVsZW1lbnQpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnBhcmVudE5vZGUpfHx2b2lkIDA9PT1pfHxpLnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudCkpfV9zZXR1cCgpe3N1cGVyLl9zZXR1cCgpLHRoaXMuX2N1c3RvbUtleUV2ZW50SGFuZGxlcj12b2lkIDB9Z2V0IGJ1ZmZlcigpe3JldHVybiB0aGlzLmJ1ZmZlcnMuYWN0aXZlfWZvY3VzKCl7dGhpcy50ZXh0YXJlYSYmdGhpcy50ZXh0YXJlYS5mb2N1cyh7cHJldmVudFNjcm9sbDohMH0pfV91cGRhdGVPcHRpb25zKGUpe3ZhciB0LGkscyxyO3N3aXRjaChzdXBlci5fdXBkYXRlT3B0aW9ucyhlKSxlKXtjYXNlXCJmb250RmFtaWx5XCI6Y2FzZVwiZm9udFNpemVcIjpudWxsPT09KHQ9dGhpcy5fcmVuZGVyU2VydmljZSl8fHZvaWQgMD09PXR8fHQuY2xlYXIoKSxudWxsPT09KGk9dGhpcy5fY2hhclNpemVTZXJ2aWNlKXx8dm9pZCAwPT09aXx8aS5tZWFzdXJlKCk7YnJlYWs7Y2FzZVwiY3Vyc29yQmxpbmtcIjpjYXNlXCJjdXJzb3JTdHlsZVwiOnRoaXMucmVmcmVzaCh0aGlzLmJ1ZmZlci55LHRoaXMuYnVmZmVyLnkpO2JyZWFrO2Nhc2VcImN1c3RvbUdseXBoc1wiOmNhc2VcImRyYXdCb2xkVGV4dEluQnJpZ2h0Q29sb3JzXCI6Y2FzZVwibGV0dGVyU3BhY2luZ1wiOmNhc2VcImxpbmVIZWlnaHRcIjpjYXNlXCJmb250V2VpZ2h0XCI6Y2FzZVwiZm9udFdlaWdodEJvbGRcIjpjYXNlXCJtaW5pbXVtQ29udHJhc3RSYXRpb1wiOnRoaXMuX3JlbmRlclNlcnZpY2UmJih0aGlzLl9yZW5kZXJTZXJ2aWNlLmNsZWFyKCksdGhpcy5fcmVuZGVyU2VydmljZS5vblJlc2l6ZSh0aGlzLmNvbHMsdGhpcy5yb3dzKSx0aGlzLnJlZnJlc2goMCx0aGlzLnJvd3MtMSkpO2JyZWFrO2Nhc2VcInNjcm9sbGJhY2tcIjpudWxsPT09KHM9dGhpcy52aWV3cG9ydCl8fHZvaWQgMD09PXN8fHMuc3luY1Njcm9sbEFyZWEoKTticmVhaztjYXNlXCJzY3JlZW5SZWFkZXJNb2RlXCI6dGhpcy5vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcmVlblJlYWRlck1vZGU/IXRoaXMuX2FjY2Vzc2liaWxpdHlNYW5hZ2VyJiZ0aGlzLl9yZW5kZXJTZXJ2aWNlJiYodGhpcy5fYWNjZXNzaWJpbGl0eU1hbmFnZXI9bmV3IF8uQWNjZXNzaWJpbGl0eU1hbmFnZXIodGhpcyx0aGlzLl9yZW5kZXJTZXJ2aWNlKSk6KG51bGw9PT0ocj10aGlzLl9hY2Nlc3NpYmlsaXR5TWFuYWdlcil8fHZvaWQgMD09PXJ8fHIuZGlzcG9zZSgpLHRoaXMuX2FjY2Vzc2liaWxpdHlNYW5hZ2VyPXZvaWQgMCk7YnJlYWs7Y2FzZVwidGFiU3RvcFdpZHRoXCI6dGhpcy5idWZmZXJzLnNldHVwVGFiU3RvcHMoKTticmVhaztjYXNlXCJ0aGVtZVwiOnRoaXMuX3NldFRoZW1lKHRoaXMub3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy50aGVtZSl9fV9vblRleHRBcmVhRm9jdXMoZSl7dGhpcy5jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMuc2VuZEZvY3VzJiZ0aGlzLmNvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQoby5DMC5FU0MrXCJbSVwiKSx0aGlzLnVwZGF0ZUN1cnNvclN0eWxlKGUpLHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZm9jdXNcIiksdGhpcy5fc2hvd0N1cnNvcigpLHRoaXMuX29uRm9jdXMuZmlyZSgpfWJsdXIoKXt2YXIgZTtyZXR1cm4gbnVsbD09PShlPXRoaXMudGV4dGFyZWEpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmJsdXIoKX1fb25UZXh0QXJlYUJsdXIoKXt0aGlzLnRleHRhcmVhLnZhbHVlPVwiXCIsdGhpcy5yZWZyZXNoKHRoaXMuYnVmZmVyLnksdGhpcy5idWZmZXIueSksdGhpcy5jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMuc2VuZEZvY3VzJiZ0aGlzLmNvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQoby5DMC5FU0MrXCJbT1wiKSx0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImZvY3VzXCIpLHRoaXMuX29uQmx1ci5maXJlKCl9X3N5bmNUZXh0QXJlYSgpe2lmKCF0aGlzLnRleHRhcmVhfHwhdGhpcy5idWZmZXIuaXNDdXJzb3JJblZpZXdwb3J0fHx0aGlzLl9jb21wb3NpdGlvbkhlbHBlci5pc0NvbXBvc2luZ3x8IXRoaXMuX3JlbmRlclNlcnZpY2UpcmV0dXJuO2NvbnN0IGU9dGhpcy5idWZmZXIueWJhc2UrdGhpcy5idWZmZXIueSx0PXRoaXMuYnVmZmVyLmxpbmVzLmdldChlKTtpZighdClyZXR1cm47Y29uc3QgaT1NYXRoLm1pbih0aGlzLmJ1ZmZlci54LHRoaXMuY29scy0xKSxzPXRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0LHI9dC5nZXRXaWR0aChpKSxuPXRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsV2lkdGgqcixvPXRoaXMuYnVmZmVyLnkqdGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLmFjdHVhbENlbGxIZWlnaHQsYT1pKnRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsV2lkdGg7dGhpcy50ZXh0YXJlYS5zdHlsZS5sZWZ0PWErXCJweFwiLHRoaXMudGV4dGFyZWEuc3R5bGUudG9wPW8rXCJweFwiLHRoaXMudGV4dGFyZWEuc3R5bGUud2lkdGg9bitcInB4XCIsdGhpcy50ZXh0YXJlYS5zdHlsZS5oZWlnaHQ9cytcInB4XCIsdGhpcy50ZXh0YXJlYS5zdHlsZS5saW5lSGVpZ2h0PXMrXCJweFwiLHRoaXMudGV4dGFyZWEuc3R5bGUuekluZGV4PVwiLTVcIn1faW5pdEdsb2JhbCgpe3RoaXMuX2JpbmRLZXlzKCksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy5lbGVtZW50LFwiY29weVwiLChlPT57dGhpcy5oYXNTZWxlY3Rpb24oKSYmKDAsbi5jb3B5SGFuZGxlcikoZSx0aGlzLl9zZWxlY3Rpb25TZXJ2aWNlKX0pKSk7Y29uc3QgZT1lPT4oMCxuLmhhbmRsZVBhc3RlRXZlbnQpKGUsdGhpcy50ZXh0YXJlYSx0aGlzLmNvcmVTZXJ2aWNlKTt0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLnRleHRhcmVhLFwicGFzdGVcIixlKSksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy5lbGVtZW50LFwicGFzdGVcIixlKSksYy5pc0ZpcmVmb3g/dGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy5lbGVtZW50LFwibW91c2Vkb3duXCIsKGU9PnsyPT09ZS5idXR0b24mJigwLG4ucmlnaHRDbGlja0hhbmRsZXIpKGUsdGhpcy50ZXh0YXJlYSx0aGlzLnNjcmVlbkVsZW1lbnQsdGhpcy5fc2VsZWN0aW9uU2VydmljZSx0aGlzLm9wdGlvbnMucmlnaHRDbGlja1NlbGVjdHNXb3JkKX0pKSk6dGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy5lbGVtZW50LFwiY29udGV4dG1lbnVcIiwoZT0+eygwLG4ucmlnaHRDbGlja0hhbmRsZXIpKGUsdGhpcy50ZXh0YXJlYSx0aGlzLnNjcmVlbkVsZW1lbnQsdGhpcy5fc2VsZWN0aW9uU2VydmljZSx0aGlzLm9wdGlvbnMucmlnaHRDbGlja1NlbGVjdHNXb3JkKX0pKSksYy5pc0xpbnV4JiZ0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLmVsZW1lbnQsXCJhdXhjbGlja1wiLChlPT57MT09PWUuYnV0dG9uJiYoMCxuLm1vdmVUZXh0QXJlYVVuZGVyTW91c2VDdXJzb3IpKGUsdGhpcy50ZXh0YXJlYSx0aGlzLnNjcmVlbkVsZW1lbnQpfSkpKX1fYmluZEtleXMoKXt0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLnRleHRhcmVhLFwia2V5dXBcIiwoZT0+dGhpcy5fa2V5VXAoZSkpLCEwKSksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy50ZXh0YXJlYSxcImtleWRvd25cIiwoZT0+dGhpcy5fa2V5RG93bihlKSksITApKSx0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLnRleHRhcmVhLFwia2V5cHJlc3NcIiwoZT0+dGhpcy5fa2V5UHJlc3MoZSkpLCEwKSksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy50ZXh0YXJlYSxcImNvbXBvc2l0aW9uc3RhcnRcIiwoKCk9PnRoaXMuX2NvbXBvc2l0aW9uSGVscGVyLmNvbXBvc2l0aW9uc3RhcnQoKSkpKSx0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLnRleHRhcmVhLFwiY29tcG9zaXRpb251cGRhdGVcIiwoZT0+dGhpcy5fY29tcG9zaXRpb25IZWxwZXIuY29tcG9zaXRpb251cGRhdGUoZSkpKSksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodGhpcy50ZXh0YXJlYSxcImNvbXBvc2l0aW9uZW5kXCIsKCgpPT50aGlzLl9jb21wb3NpdGlvbkhlbHBlci5jb21wb3NpdGlvbmVuZCgpKSkpLHRoaXMucmVnaXN0ZXIoKDAsbC5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHRoaXMudGV4dGFyZWEsXCJpbnB1dFwiLChlPT50aGlzLl9pbnB1dEV2ZW50KGUpKSwhMCkpLHRoaXMucmVnaXN0ZXIodGhpcy5vblJlbmRlcigoKCk9PnRoaXMuX2NvbXBvc2l0aW9uSGVscGVyLnVwZGF0ZUNvbXBvc2l0aW9uRWxlbWVudHMoKSkpKX1vcGVuKGUpe3ZhciB0O2lmKCFlKXRocm93IG5ldyBFcnJvcihcIlRlcm1pbmFsIHJlcXVpcmVzIGEgcGFyZW50IGVsZW1lbnQuXCIpO2UuaXNDb25uZWN0ZWR8fHRoaXMuX2xvZ1NlcnZpY2UuZGVidWcoXCJUZXJtaW5hbC5vcGVuIHdhcyBjYWxsZWQgb24gYW4gZWxlbWVudCB0aGF0IHdhcyBub3QgYXR0YWNoZWQgdG8gdGhlIERPTVwiKSx0aGlzLl9kb2N1bWVudD1lLm93bmVyRG9jdW1lbnQsdGhpcy5lbGVtZW50PXRoaXMuX2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5lbGVtZW50LmRpcj1cImx0clwiLHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwidGVybWluYWxcIiksdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ4dGVybVwiKSx0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIixcIjBcIiksZS5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpO2NvbnN0IGk9TS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7dGhpcy5fdmlld3BvcnRFbGVtZW50PU0uY3JlYXRlRWxlbWVudChcImRpdlwiKSx0aGlzLl92aWV3cG9ydEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInh0ZXJtLXZpZXdwb3J0XCIpLGkuYXBwZW5kQ2hpbGQodGhpcy5fdmlld3BvcnRFbGVtZW50KSx0aGlzLl92aWV3cG9ydFNjcm9sbEFyZWE9TS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMuX3ZpZXdwb3J0U2Nyb2xsQXJlYS5jbGFzc0xpc3QuYWRkKFwieHRlcm0tc2Nyb2xsLWFyZWFcIiksdGhpcy5fdmlld3BvcnRFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuX3ZpZXdwb3J0U2Nyb2xsQXJlYSksdGhpcy5zY3JlZW5FbGVtZW50PU0uY3JlYXRlRWxlbWVudChcImRpdlwiKSx0aGlzLnNjcmVlbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInh0ZXJtLXNjcmVlblwiKSx0aGlzLl9oZWxwZXJDb250YWluZXI9TS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMuX2hlbHBlckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwieHRlcm0taGVscGVyc1wiKSx0aGlzLnNjcmVlbkVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5faGVscGVyQ29udGFpbmVyKSxpLmFwcGVuZENoaWxkKHRoaXMuc2NyZWVuRWxlbWVudCksdGhpcy50ZXh0YXJlYT1NLmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKSx0aGlzLnRleHRhcmVhLmNsYXNzTGlzdC5hZGQoXCJ4dGVybS1oZWxwZXItdGV4dGFyZWFcIiksdGhpcy50ZXh0YXJlYS5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIsZC5wcm9tcHRMYWJlbCksdGhpcy50ZXh0YXJlYS5zZXRBdHRyaWJ1dGUoXCJhcmlhLW11bHRpbGluZVwiLFwiZmFsc2VcIiksdGhpcy50ZXh0YXJlYS5zZXRBdHRyaWJ1dGUoXCJhdXRvY29ycmVjdFwiLFwib2ZmXCIpLHRoaXMudGV4dGFyZWEuc2V0QXR0cmlidXRlKFwiYXV0b2NhcGl0YWxpemVcIixcIm9mZlwiKSx0aGlzLnRleHRhcmVhLnNldEF0dHJpYnV0ZShcInNwZWxsY2hlY2tcIixcImZhbHNlXCIpLHRoaXMudGV4dGFyZWEudGFiSW5kZXg9MCx0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLnRleHRhcmVhLFwiZm9jdXNcIiwoZT0+dGhpcy5fb25UZXh0QXJlYUZvY3VzKGUpKSkpLHRoaXMucmVnaXN0ZXIoKDAsbC5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHRoaXMudGV4dGFyZWEsXCJibHVyXCIsKCgpPT50aGlzLl9vblRleHRBcmVhQmx1cigpKSkpLHRoaXMuX2hlbHBlckNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLnRleHRhcmVhKSx0aGlzLl9jb3JlQnJvd3NlclNlcnZpY2U9dGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2UuY3JlYXRlSW5zdGFuY2Uody5Db3JlQnJvd3NlclNlcnZpY2UsdGhpcy50ZXh0YXJlYSxudWxsIT09KHQ9dGhpcy5fZG9jdW1lbnQuZGVmYXVsdFZpZXcpJiZ2b2lkIDAhPT10P3Q6d2luZG93KSx0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5zZXRTZXJ2aWNlKG0uSUNvcmVCcm93c2VyU2VydmljZSx0aGlzLl9jb3JlQnJvd3NlclNlcnZpY2UpLHRoaXMuX2NoYXJTaXplU2VydmljZT10aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShDLkNoYXJTaXplU2VydmljZSx0aGlzLl9kb2N1bWVudCx0aGlzLl9oZWxwZXJDb250YWluZXIpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2UobS5JQ2hhclNpemVTZXJ2aWNlLHRoaXMuX2NoYXJTaXplU2VydmljZSksdGhpcy5fdGhlbWU9dGhpcy5vcHRpb25zLnRoZW1lfHx0aGlzLl90aGVtZSx0aGlzLl9jb2xvck1hbmFnZXI9bmV3IHAuQ29sb3JNYW5hZ2VyKE0sdGhpcy5vcHRpb25zLmFsbG93VHJhbnNwYXJlbmN5KSx0aGlzLnJlZ2lzdGVyKHRoaXMub3B0aW9uc1NlcnZpY2Uub25PcHRpb25DaGFuZ2UoKGU9PnRoaXMuX2NvbG9yTWFuYWdlci5vbk9wdGlvbnNDaGFuZ2UoZSx0aGlzLm9wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnNbZV0pKSkpLHRoaXMuX2NvbG9yTWFuYWdlci5zZXRUaGVtZSh0aGlzLl90aGVtZSksdGhpcy5fY2hhcmFjdGVySm9pbmVyU2VydmljZT10aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShSLkNoYXJhY3RlckpvaW5lclNlcnZpY2UpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2UobS5JQ2hhcmFjdGVySm9pbmVyU2VydmljZSx0aGlzLl9jaGFyYWN0ZXJKb2luZXJTZXJ2aWNlKTtjb25zdCBuPXRoaXMuX2NyZWF0ZVJlbmRlcmVyKCk7dGhpcy5fcmVuZGVyU2VydmljZT10aGlzLnJlZ2lzdGVyKHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKFMuUmVuZGVyU2VydmljZSxuLHRoaXMucm93cyx0aGlzLnNjcmVlbkVsZW1lbnQpKSx0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5zZXRTZXJ2aWNlKG0uSVJlbmRlclNlcnZpY2UsdGhpcy5fcmVuZGVyU2VydmljZSksdGhpcy5yZWdpc3Rlcih0aGlzLl9yZW5kZXJTZXJ2aWNlLm9uUmVuZGVyZWRWaWV3cG9ydENoYW5nZSgoZT0+dGhpcy5fb25SZW5kZXIuZmlyZShlKSkpKSx0aGlzLm9uUmVzaXplKChlPT50aGlzLl9yZW5kZXJTZXJ2aWNlLnJlc2l6ZShlLmNvbHMsZS5yb3dzKSkpLHRoaXMuX2NvbXBvc2l0aW9uVmlldz1NLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5fY29tcG9zaXRpb25WaWV3LmNsYXNzTGlzdC5hZGQoXCJjb21wb3NpdGlvbi12aWV3XCIpLHRoaXMuX2NvbXBvc2l0aW9uSGVscGVyPXRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKHMuQ29tcG9zaXRpb25IZWxwZXIsdGhpcy50ZXh0YXJlYSx0aGlzLl9jb21wb3NpdGlvblZpZXcpLHRoaXMuX2hlbHBlckNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLl9jb21wb3NpdGlvblZpZXcpLHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChpKSx0aGlzLl9tb3VzZVNlcnZpY2U9dGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2UuY3JlYXRlSW5zdGFuY2UoYi5Nb3VzZVNlcnZpY2UpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2UobS5JTW91c2VTZXJ2aWNlLHRoaXMuX21vdXNlU2VydmljZSksdGhpcy52aWV3cG9ydD10aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShyLlZpZXdwb3J0LChlPT50aGlzLnNjcm9sbExpbmVzKGUsITAsMSkpLHRoaXMuX3ZpZXdwb3J0RWxlbWVudCx0aGlzLl92aWV3cG9ydFNjcm9sbEFyZWEsdGhpcy5lbGVtZW50KSx0aGlzLnZpZXdwb3J0Lm9uVGhlbWVDaGFuZ2UodGhpcy5fY29sb3JNYW5hZ2VyLmNvbG9ycyksdGhpcy5yZWdpc3Rlcih0aGlzLl9pbnB1dEhhbmRsZXIub25SZXF1ZXN0U3luY1Njcm9sbEJhcigoKCk9PnRoaXMudmlld3BvcnQuc3luY1Njcm9sbEFyZWEoKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMudmlld3BvcnQpLHRoaXMucmVnaXN0ZXIodGhpcy5vbkN1cnNvck1vdmUoKCgpPT57dGhpcy5fcmVuZGVyU2VydmljZS5vbkN1cnNvck1vdmUoKSx0aGlzLl9zeW5jVGV4dEFyZWEoKX0pKSksdGhpcy5yZWdpc3Rlcih0aGlzLm9uUmVzaXplKCgoKT0+dGhpcy5fcmVuZGVyU2VydmljZS5vblJlc2l6ZSh0aGlzLmNvbHMsdGhpcy5yb3dzKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMub25CbHVyKCgoKT0+dGhpcy5fcmVuZGVyU2VydmljZS5vbkJsdXIoKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMub25Gb2N1cygoKCk9PnRoaXMuX3JlbmRlclNlcnZpY2Uub25Gb2N1cygpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fcmVuZGVyU2VydmljZS5vbkRpbWVuc2lvbnNDaGFuZ2UoKCgpPT50aGlzLnZpZXdwb3J0LnN5bmNTY3JvbGxBcmVhKCkpKSksdGhpcy5fc2VsZWN0aW9uU2VydmljZT10aGlzLnJlZ2lzdGVyKHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKGguU2VsZWN0aW9uU2VydmljZSx0aGlzLmVsZW1lbnQsdGhpcy5zY3JlZW5FbGVtZW50LHRoaXMubGlua2lmaWVyMikpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2UobS5JU2VsZWN0aW9uU2VydmljZSx0aGlzLl9zZWxlY3Rpb25TZXJ2aWNlKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX3NlbGVjdGlvblNlcnZpY2Uub25SZXF1ZXN0U2Nyb2xsTGluZXMoKGU9PnRoaXMuc2Nyb2xsTGluZXMoZS5hbW91bnQsZS5zdXBwcmVzc1Njcm9sbEV2ZW50KSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX3NlbGVjdGlvblNlcnZpY2Uub25TZWxlY3Rpb25DaGFuZ2UoKCgpPT50aGlzLl9vblNlbGVjdGlvbkNoYW5nZS5maXJlKCkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9zZWxlY3Rpb25TZXJ2aWNlLm9uUmVxdWVzdFJlZHJhdygoZT0+dGhpcy5fcmVuZGVyU2VydmljZS5vblNlbGVjdGlvbkNoYW5nZWQoZS5zdGFydCxlLmVuZCxlLmNvbHVtblNlbGVjdE1vZGUpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fc2VsZWN0aW9uU2VydmljZS5vbkxpbnV4TW91c2VTZWxlY3Rpb24oKGU9Pnt0aGlzLnRleHRhcmVhLnZhbHVlPWUsdGhpcy50ZXh0YXJlYS5mb2N1cygpLHRoaXMudGV4dGFyZWEuc2VsZWN0KCl9KSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fb25TY3JvbGwuZXZlbnQoKGU9Pnt0aGlzLnZpZXdwb3J0LnN5bmNTY3JvbGxBcmVhKCksdGhpcy5fc2VsZWN0aW9uU2VydmljZS5yZWZyZXNoKCl9KSkpLHRoaXMucmVnaXN0ZXIoKDAsbC5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHRoaXMuX3ZpZXdwb3J0RWxlbWVudCxcInNjcm9sbFwiLCgoKT0+dGhpcy5fc2VsZWN0aW9uU2VydmljZS5yZWZyZXNoKCkpKSksdGhpcy5saW5raWZpZXIyLmF0dGFjaFRvRG9tKHRoaXMuc2NyZWVuRWxlbWVudCx0aGlzLl9tb3VzZVNlcnZpY2UsdGhpcy5fcmVuZGVyU2VydmljZSksdGhpcy5yZWdpc3Rlcih0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShELkJ1ZmZlckRlY29yYXRpb25SZW5kZXJlcix0aGlzLnNjcmVlbkVsZW1lbnQpKSx0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLmVsZW1lbnQsXCJtb3VzZWRvd25cIiwoZT0+dGhpcy5fc2VsZWN0aW9uU2VydmljZS5vbk1vdXNlRG93bihlKSkpKSx0aGlzLmNvcmVNb3VzZVNlcnZpY2UuYXJlTW91c2VFdmVudHNBY3RpdmU/KHRoaXMuX3NlbGVjdGlvblNlcnZpY2UuZGlzYWJsZSgpLHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZW5hYmxlLW1vdXNlLWV2ZW50c1wiKSk6dGhpcy5fc2VsZWN0aW9uU2VydmljZS5lbmFibGUoKSx0aGlzLm9wdGlvbnMuc2NyZWVuUmVhZGVyTW9kZSYmKHRoaXMuX2FjY2Vzc2liaWxpdHlNYW5hZ2VyPW5ldyBfLkFjY2Vzc2liaWxpdHlNYW5hZ2VyKHRoaXMsdGhpcy5fcmVuZGVyU2VydmljZSkpLHRoaXMub3B0aW9ucy5vdmVydmlld1J1bGVyV2lkdGgmJih0aGlzLl9vdmVydmlld1J1bGVyUmVuZGVyZXI9dGhpcy5yZWdpc3Rlcih0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShBLk92ZXJ2aWV3UnVsZXJSZW5kZXJlcix0aGlzLl92aWV3cG9ydEVsZW1lbnQsdGhpcy5zY3JlZW5FbGVtZW50KSkpLHRoaXMub3B0aW9uc1NlcnZpY2Uub25PcHRpb25DaGFuZ2UoKCgpPT57IXRoaXMuX292ZXJ2aWV3UnVsZXJSZW5kZXJlciYmdGhpcy5vcHRpb25zLm92ZXJ2aWV3UnVsZXJXaWR0aCYmdGhpcy5fdmlld3BvcnRFbGVtZW50JiZ0aGlzLnNjcmVlbkVsZW1lbnQmJih0aGlzLl9vdmVydmlld1J1bGVyUmVuZGVyZXI9dGhpcy5yZWdpc3Rlcih0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZShBLk92ZXJ2aWV3UnVsZXJSZW5kZXJlcix0aGlzLl92aWV3cG9ydEVsZW1lbnQsdGhpcy5zY3JlZW5FbGVtZW50KSkpfSkpLHRoaXMuX2NoYXJTaXplU2VydmljZS5tZWFzdXJlKCksdGhpcy5yZWZyZXNoKDAsdGhpcy5yb3dzLTEpLHRoaXMuX2luaXRHbG9iYWwoKSx0aGlzLmJpbmRNb3VzZSgpfV9jcmVhdGVSZW5kZXJlcigpe3JldHVybiB0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZSh1LkRvbVJlbmRlcmVyLHRoaXMuX2NvbG9yTWFuYWdlci5jb2xvcnMsdGhpcy5lbGVtZW50LHRoaXMuc2NyZWVuRWxlbWVudCx0aGlzLl92aWV3cG9ydEVsZW1lbnQsdGhpcy5saW5raWZpZXIyKX1fc2V0VGhlbWUoZSl7dmFyIHQsaSxzO3RoaXMuX3RoZW1lPWUsbnVsbD09PSh0PXRoaXMuX2NvbG9yTWFuYWdlcil8fHZvaWQgMD09PXR8fHQuc2V0VGhlbWUoZSksbnVsbD09PShpPXRoaXMuX3JlbmRlclNlcnZpY2UpfHx2b2lkIDA9PT1pfHxpLnNldENvbG9ycyh0aGlzLl9jb2xvck1hbmFnZXIuY29sb3JzKSxudWxsPT09KHM9dGhpcy52aWV3cG9ydCl8fHZvaWQgMD09PXN8fHMub25UaGVtZUNoYW5nZSh0aGlzLl9jb2xvck1hbmFnZXIuY29sb3JzKX1iaW5kTW91c2UoKXtjb25zdCBlPXRoaXMsdD10aGlzLmVsZW1lbnQ7ZnVuY3Rpb24gaSh0KXtjb25zdCBpPWUuX21vdXNlU2VydmljZS5nZXRNb3VzZVJlcG9ydENvb3Jkcyh0LGUuc2NyZWVuRWxlbWVudCk7aWYoIWkpcmV0dXJuITE7bGV0IHMscjtzd2l0Y2godC5vdmVycmlkZVR5cGV8fHQudHlwZSl7Y2FzZVwibW91c2Vtb3ZlXCI6cj0zMix2b2lkIDA9PT10LmJ1dHRvbnM/KHM9Myx2b2lkIDAhPT10LmJ1dHRvbiYmKHM9dC5idXR0b248Mz90LmJ1dHRvbjozKSk6cz0xJnQuYnV0dG9ucz8wOjQmdC5idXR0b25zPzE6MiZ0LmJ1dHRvbnM/MjozO2JyZWFrO2Nhc2VcIm1vdXNldXBcIjpyPTAscz10LmJ1dHRvbjwzP3QuYnV0dG9uOjM7YnJlYWs7Y2FzZVwibW91c2Vkb3duXCI6cj0xLHM9dC5idXR0b248Mz90LmJ1dHRvbjozO2JyZWFrO2Nhc2VcIndoZWVsXCI6aWYoMD09PWUudmlld3BvcnQuZ2V0TGluZXNTY3JvbGxlZCh0KSlyZXR1cm4hMTtyPXQuZGVsdGFZPDA/MDoxLHM9NDticmVhaztkZWZhdWx0OnJldHVybiExfXJldHVybiEodm9pZCAwPT09cnx8dm9pZCAwPT09c3x8cz40KSYmZS5jb3JlTW91c2VTZXJ2aWNlLnRyaWdnZXJNb3VzZUV2ZW50KHtjb2w6aS5jb2wscm93Omkucm93LHg6aS54LHk6aS55LGJ1dHRvbjpzLGFjdGlvbjpyLGN0cmw6dC5jdHJsS2V5LGFsdDp0LmFsdEtleSxzaGlmdDp0LnNoaWZ0S2V5fSl9Y29uc3Qgcz17bW91c2V1cDpudWxsLHdoZWVsOm51bGwsbW91c2VkcmFnOm51bGwsbW91c2Vtb3ZlOm51bGx9LHI9e21vdXNldXA6ZT0+KGkoZSksZS5idXR0b25zfHwodGhpcy5fZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixzLm1vdXNldXApLHMubW91c2VkcmFnJiZ0aGlzLl9kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIscy5tb3VzZWRyYWcpKSx0aGlzLmNhbmNlbChlKSksd2hlZWw6ZT0+KGkoZSksdGhpcy5jYW5jZWwoZSwhMCkpLG1vdXNlZHJhZzplPT57ZS5idXR0b25zJiZpKGUpfSxtb3VzZW1vdmU6ZT0+e2UuYnV0dG9uc3x8aShlKX19O3RoaXMucmVnaXN0ZXIodGhpcy5jb3JlTW91c2VTZXJ2aWNlLm9uUHJvdG9jb2xDaGFuZ2UoKGU9PntlPyhcImRlYnVnXCI9PT10aGlzLm9wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMubG9nTGV2ZWwmJnRoaXMuX2xvZ1NlcnZpY2UuZGVidWcoXCJCaW5kaW5nIHRvIG1vdXNlIGV2ZW50czpcIix0aGlzLmNvcmVNb3VzZVNlcnZpY2UuZXhwbGFpbkV2ZW50cyhlKSksdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJlbmFibGUtbW91c2UtZXZlbnRzXCIpLHRoaXMuX3NlbGVjdGlvblNlcnZpY2UuZGlzYWJsZSgpKToodGhpcy5fbG9nU2VydmljZS5kZWJ1ZyhcIlVuYmluZGluZyBmcm9tIG1vdXNlIGV2ZW50cy5cIiksdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJlbmFibGUtbW91c2UtZXZlbnRzXCIpLHRoaXMuX3NlbGVjdGlvblNlcnZpY2UuZW5hYmxlKCkpLDgmZT9zLm1vdXNlbW92ZXx8KHQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHIubW91c2Vtb3ZlKSxzLm1vdXNlbW92ZT1yLm1vdXNlbW92ZSk6KHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHMubW91c2Vtb3ZlKSxzLm1vdXNlbW92ZT1udWxsKSwxNiZlP3Mud2hlZWx8fCh0LmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLHIud2hlZWwse3Bhc3NpdmU6ITF9KSxzLndoZWVsPXIud2hlZWwpOih0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLHMud2hlZWwpLHMud2hlZWw9bnVsbCksMiZlP3MubW91c2V1cHx8KHMubW91c2V1cD1yLm1vdXNldXApOih0aGlzLl9kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLHMubW91c2V1cCkscy5tb3VzZXVwPW51bGwpLDQmZT9zLm1vdXNlZHJhZ3x8KHMubW91c2VkcmFnPXIubW91c2VkcmFnKToodGhpcy5fZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHMubW91c2VkcmFnKSxzLm1vdXNlZHJhZz1udWxsKX0pKSksdGhpcy5jb3JlTW91c2VTZXJ2aWNlLmFjdGl2ZVByb3RvY29sPXRoaXMuY29yZU1vdXNlU2VydmljZS5hY3RpdmVQcm90b2NvbCx0aGlzLnJlZ2lzdGVyKCgwLGwuYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0LFwibW91c2Vkb3duXCIsKGU9PntpZihlLnByZXZlbnREZWZhdWx0KCksdGhpcy5mb2N1cygpLHRoaXMuY29yZU1vdXNlU2VydmljZS5hcmVNb3VzZUV2ZW50c0FjdGl2ZSYmIXRoaXMuX3NlbGVjdGlvblNlcnZpY2Uuc2hvdWxkRm9yY2VTZWxlY3Rpb24oZSkpcmV0dXJuIGkoZSkscy5tb3VzZXVwJiZ0aGlzLl9kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLHMubW91c2V1cCkscy5tb3VzZWRyYWcmJnRoaXMuX2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixzLm1vdXNlZHJhZyksdGhpcy5jYW5jZWwoZSl9KSkpLHRoaXMucmVnaXN0ZXIoKDAsbC5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHQsXCJ3aGVlbFwiLChlPT57aWYoIXMud2hlZWwpe2lmKCF0aGlzLmJ1ZmZlci5oYXNTY3JvbGxiYWNrKXtjb25zdCB0PXRoaXMudmlld3BvcnQuZ2V0TGluZXNTY3JvbGxlZChlKTtpZigwPT09dClyZXR1cm47Y29uc3QgaT1vLkMwLkVTQysodGhpcy5jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMuYXBwbGljYXRpb25DdXJzb3JLZXlzP1wiT1wiOlwiW1wiKSsoZS5kZWx0YVk8MD9cIkFcIjpcIkJcIik7bGV0IHM9XCJcIjtmb3IobGV0IGU9MDtlPE1hdGguYWJzKHQpO2UrKylzKz1pO3JldHVybiB0aGlzLmNvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQocywhMCksdGhpcy5jYW5jZWwoZSwhMCl9cmV0dXJuIHRoaXMudmlld3BvcnQub25XaGVlbChlKT90aGlzLmNhbmNlbChlKTp2b2lkIDB9fSkse3Bhc3NpdmU6ITF9KSksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodCxcInRvdWNoc3RhcnRcIiwoZT0+e2lmKCF0aGlzLmNvcmVNb3VzZVNlcnZpY2UuYXJlTW91c2VFdmVudHNBY3RpdmUpcmV0dXJuIHRoaXMudmlld3BvcnQub25Ub3VjaFN0YXJ0KGUpLHRoaXMuY2FuY2VsKGUpfSkse3Bhc3NpdmU6ITB9KSksdGhpcy5yZWdpc3RlcigoMCxsLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikodCxcInRvdWNobW92ZVwiLChlPT57aWYoIXRoaXMuY29yZU1vdXNlU2VydmljZS5hcmVNb3VzZUV2ZW50c0FjdGl2ZSlyZXR1cm4gdGhpcy52aWV3cG9ydC5vblRvdWNoTW92ZShlKT92b2lkIDA6dGhpcy5jYW5jZWwoZSl9KSx7cGFzc2l2ZTohMX0pKX1yZWZyZXNoKGUsdCl7dmFyIGk7bnVsbD09PShpPXRoaXMuX3JlbmRlclNlcnZpY2UpfHx2b2lkIDA9PT1pfHxpLnJlZnJlc2hSb3dzKGUsdCl9dXBkYXRlQ3Vyc29yU3R5bGUoZSl7dmFyIHQ7KG51bGw9PT0odD10aGlzLl9zZWxlY3Rpb25TZXJ2aWNlKXx8dm9pZCAwPT09dD92b2lkIDA6dC5zaG91bGRDb2x1bW5TZWxlY3QoZSkpP3RoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiY29sdW1uLXNlbGVjdFwiKTp0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImNvbHVtbi1zZWxlY3RcIil9X3Nob3dDdXJzb3IoKXt0aGlzLmNvcmVTZXJ2aWNlLmlzQ3Vyc29ySW5pdGlhbGl6ZWR8fCh0aGlzLmNvcmVTZXJ2aWNlLmlzQ3Vyc29ySW5pdGlhbGl6ZWQ9ITAsdGhpcy5yZWZyZXNoKHRoaXMuYnVmZmVyLnksdGhpcy5idWZmZXIueSkpfXNjcm9sbExpbmVzKGUsdCxpPTApe3N1cGVyLnNjcm9sbExpbmVzKGUsdCxpKSx0aGlzLnJlZnJlc2goMCx0aGlzLnJvd3MtMSl9cGFzdGUoZSl7KDAsbi5wYXN0ZSkoZSx0aGlzLnRleHRhcmVhLHRoaXMuY29yZVNlcnZpY2UpfWF0dGFjaEN1c3RvbUtleUV2ZW50SGFuZGxlcihlKXt0aGlzLl9jdXN0b21LZXlFdmVudEhhbmRsZXI9ZX1yZWdpc3RlckxpbmtQcm92aWRlcihlKXtyZXR1cm4gdGhpcy5saW5raWZpZXIyLnJlZ2lzdGVyTGlua1Byb3ZpZGVyKGUpfXJlZ2lzdGVyQ2hhcmFjdGVySm9pbmVyKGUpe2lmKCF0aGlzLl9jaGFyYWN0ZXJKb2luZXJTZXJ2aWNlKXRocm93IG5ldyBFcnJvcihcIlRlcm1pbmFsIG11c3QgYmUgb3BlbmVkIGZpcnN0XCIpO2NvbnN0IHQ9dGhpcy5fY2hhcmFjdGVySm9pbmVyU2VydmljZS5yZWdpc3RlcihlKTtyZXR1cm4gdGhpcy5yZWZyZXNoKDAsdGhpcy5yb3dzLTEpLHR9ZGVyZWdpc3RlckNoYXJhY3RlckpvaW5lcihlKXtpZighdGhpcy5fY2hhcmFjdGVySm9pbmVyU2VydmljZSl0aHJvdyBuZXcgRXJyb3IoXCJUZXJtaW5hbCBtdXN0IGJlIG9wZW5lZCBmaXJzdFwiKTt0aGlzLl9jaGFyYWN0ZXJKb2luZXJTZXJ2aWNlLmRlcmVnaXN0ZXIoZSkmJnRoaXMucmVmcmVzaCgwLHRoaXMucm93cy0xKX1nZXQgbWFya2Vycygpe3JldHVybiB0aGlzLmJ1ZmZlci5tYXJrZXJzfWFkZE1hcmtlcihlKXtyZXR1cm4gdGhpcy5idWZmZXIuYWRkTWFya2VyKHRoaXMuYnVmZmVyLnliYXNlK3RoaXMuYnVmZmVyLnkrZSl9cmVnaXN0ZXJEZWNvcmF0aW9uKGUpe3JldHVybiB0aGlzLl9kZWNvcmF0aW9uU2VydmljZS5yZWdpc3RlckRlY29yYXRpb24oZSl9aGFzU2VsZWN0aW9uKCl7cmV0dXJuISF0aGlzLl9zZWxlY3Rpb25TZXJ2aWNlJiZ0aGlzLl9zZWxlY3Rpb25TZXJ2aWNlLmhhc1NlbGVjdGlvbn1zZWxlY3QoZSx0LGkpe3RoaXMuX3NlbGVjdGlvblNlcnZpY2Uuc2V0U2VsZWN0aW9uKGUsdCxpKX1nZXRTZWxlY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2VsZWN0aW9uU2VydmljZT90aGlzLl9zZWxlY3Rpb25TZXJ2aWNlLnNlbGVjdGlvblRleHQ6XCJcIn1nZXRTZWxlY3Rpb25Qb3NpdGlvbigpe2lmKHRoaXMuX3NlbGVjdGlvblNlcnZpY2UmJnRoaXMuX3NlbGVjdGlvblNlcnZpY2UuaGFzU2VsZWN0aW9uKXJldHVybntzdGFydDp7eDp0aGlzLl9zZWxlY3Rpb25TZXJ2aWNlLnNlbGVjdGlvblN0YXJ0WzBdLHk6dGhpcy5fc2VsZWN0aW9uU2VydmljZS5zZWxlY3Rpb25TdGFydFsxXX0sZW5kOnt4OnRoaXMuX3NlbGVjdGlvblNlcnZpY2Uuc2VsZWN0aW9uRW5kWzBdLHk6dGhpcy5fc2VsZWN0aW9uU2VydmljZS5zZWxlY3Rpb25FbmRbMV19fX1jbGVhclNlbGVjdGlvbigpe3ZhciBlO251bGw9PT0oZT10aGlzLl9zZWxlY3Rpb25TZXJ2aWNlKXx8dm9pZCAwPT09ZXx8ZS5jbGVhclNlbGVjdGlvbigpfXNlbGVjdEFsbCgpe3ZhciBlO251bGw9PT0oZT10aGlzLl9zZWxlY3Rpb25TZXJ2aWNlKXx8dm9pZCAwPT09ZXx8ZS5zZWxlY3RBbGwoKX1zZWxlY3RMaW5lcyhlLHQpe3ZhciBpO251bGw9PT0oaT10aGlzLl9zZWxlY3Rpb25TZXJ2aWNlKXx8dm9pZCAwPT09aXx8aS5zZWxlY3RMaW5lcyhlLHQpfV9rZXlEb3duKGUpe2lmKHRoaXMuX2tleURvd25IYW5kbGVkPSExLHRoaXMuX2tleURvd25TZWVuPSEwLHRoaXMuX2N1c3RvbUtleUV2ZW50SGFuZGxlciYmITE9PT10aGlzLl9jdXN0b21LZXlFdmVudEhhbmRsZXIoZSkpcmV0dXJuITE7Y29uc3QgdD10aGlzLmJyb3dzZXIuaXNNYWMmJnRoaXMub3B0aW9ucy5tYWNPcHRpb25Jc01ldGEmJmUuYWx0S2V5O2lmKCF0JiYhdGhpcy5fY29tcG9zaXRpb25IZWxwZXIua2V5ZG93bihlKSlyZXR1cm4gdGhpcy5idWZmZXIueWJhc2UhPT10aGlzLmJ1ZmZlci55ZGlzcCYmdGhpcy5fYnVmZmVyU2VydmljZS5zY3JvbGxUb0JvdHRvbSgpLCExO3R8fFwiRGVhZFwiIT09ZS5rZXkmJlwiQWx0R3JhcGhcIiE9PWUua2V5fHwodGhpcy5fdW5wcm9jZXNzZWREZWFkS2V5PSEwKTtjb25zdCBpPSgwLGYuZXZhbHVhdGVLZXlib2FyZEV2ZW50KShlLHRoaXMuY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLmFwcGxpY2F0aW9uQ3Vyc29yS2V5cyx0aGlzLmJyb3dzZXIuaXNNYWMsdGhpcy5vcHRpb25zLm1hY09wdGlvbklzTWV0YSk7aWYodGhpcy51cGRhdGVDdXJzb3JTdHlsZShlKSwzPT09aS50eXBlfHwyPT09aS50eXBlKXtjb25zdCB0PXRoaXMucm93cy0xO3JldHVybiB0aGlzLnNjcm9sbExpbmVzKDI9PT1pLnR5cGU/LXQ6dCksdGhpcy5jYW5jZWwoZSwhMCl9cmV0dXJuIDE9PT1pLnR5cGUmJnRoaXMuc2VsZWN0QWxsKCksISF0aGlzLl9pc1RoaXJkTGV2ZWxTaGlmdCh0aGlzLmJyb3dzZXIsZSl8fChpLmNhbmNlbCYmdGhpcy5jYW5jZWwoZSwhMCksIWkua2V5fHwhIShlLmtleSYmIWUuY3RybEtleSYmIWUuYWx0S2V5JiYhZS5tZXRhS2V5JiYxPT09ZS5rZXkubGVuZ3RoJiZlLmtleS5jaGFyQ29kZUF0KDApPj02NSYmZS5rZXkuY2hhckNvZGVBdCgwKTw9OTApfHwodGhpcy5fdW5wcm9jZXNzZWREZWFkS2V5Pyh0aGlzLl91bnByb2Nlc3NlZERlYWRLZXk9ITEsITApOihpLmtleSE9PW8uQzAuRVRYJiZpLmtleSE9PW8uQzAuQ1J8fCh0aGlzLnRleHRhcmVhLnZhbHVlPVwiXCIpLHRoaXMuX29uS2V5LmZpcmUoe2tleTppLmtleSxkb21FdmVudDplfSksdGhpcy5fc2hvd0N1cnNvcigpLHRoaXMuY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChpLmtleSwhMCksdGhpcy5vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcmVlblJlYWRlck1vZGU/dm9pZCh0aGlzLl9rZXlEb3duSGFuZGxlZD0hMCk6dGhpcy5jYW5jZWwoZSwhMCkpKSl9X2lzVGhpcmRMZXZlbFNoaWZ0KGUsdCl7Y29uc3QgaT1lLmlzTWFjJiYhdGhpcy5vcHRpb25zLm1hY09wdGlvbklzTWV0YSYmdC5hbHRLZXkmJiF0LmN0cmxLZXkmJiF0Lm1ldGFLZXl8fGUuaXNXaW5kb3dzJiZ0LmFsdEtleSYmdC5jdHJsS2V5JiYhdC5tZXRhS2V5fHxlLmlzV2luZG93cyYmdC5nZXRNb2RpZmllclN0YXRlKFwiQWx0R3JhcGhcIik7cmV0dXJuXCJrZXlwcmVzc1wiPT09dC50eXBlP2k6aSYmKCF0LmtleUNvZGV8fHQua2V5Q29kZT40Nyl9X2tleVVwKGUpe3RoaXMuX2tleURvd25TZWVuPSExLHRoaXMuX2N1c3RvbUtleUV2ZW50SGFuZGxlciYmITE9PT10aGlzLl9jdXN0b21LZXlFdmVudEhhbmRsZXIoZSl8fChmdW5jdGlvbihlKXtyZXR1cm4gMTY9PT1lLmtleUNvZGV8fDE3PT09ZS5rZXlDb2RlfHwxOD09PWUua2V5Q29kZX0oZSl8fHRoaXMuZm9jdXMoKSx0aGlzLnVwZGF0ZUN1cnNvclN0eWxlKGUpLHRoaXMuX2tleVByZXNzSGFuZGxlZD0hMSl9X2tleVByZXNzKGUpe2xldCB0O2lmKHRoaXMuX2tleVByZXNzSGFuZGxlZD0hMSx0aGlzLl9rZXlEb3duSGFuZGxlZClyZXR1cm4hMTtpZih0aGlzLl9jdXN0b21LZXlFdmVudEhhbmRsZXImJiExPT09dGhpcy5fY3VzdG9tS2V5RXZlbnRIYW5kbGVyKGUpKXJldHVybiExO2lmKHRoaXMuY2FuY2VsKGUpLGUuY2hhckNvZGUpdD1lLmNoYXJDb2RlO2Vsc2UgaWYobnVsbD09PWUud2hpY2h8fHZvaWQgMD09PWUud2hpY2gpdD1lLmtleUNvZGU7ZWxzZXtpZigwPT09ZS53aGljaHx8MD09PWUuY2hhckNvZGUpcmV0dXJuITE7dD1lLndoaWNofXJldHVybiEoIXR8fChlLmFsdEtleXx8ZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiYhdGhpcy5faXNUaGlyZExldmVsU2hpZnQodGhpcy5icm93c2VyLGUpfHwodD1TdHJpbmcuZnJvbUNoYXJDb2RlKHQpLHRoaXMuX29uS2V5LmZpcmUoe2tleTp0LGRvbUV2ZW50OmV9KSx0aGlzLl9zaG93Q3Vyc29yKCksdGhpcy5jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KHQsITApLHRoaXMuX2tleVByZXNzSGFuZGxlZD0hMCx0aGlzLl91bnByb2Nlc3NlZERlYWRLZXk9ITEsMCkpfV9pbnB1dEV2ZW50KGUpe2lmKGUuZGF0YSYmXCJpbnNlcnRUZXh0XCI9PT1lLmlucHV0VHlwZSYmKCFlLmNvbXBvc2VkfHwhdGhpcy5fa2V5RG93blNlZW4pJiYhdGhpcy5vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcmVlblJlYWRlck1vZGUpe2lmKHRoaXMuX2tleVByZXNzSGFuZGxlZClyZXR1cm4hMTt0aGlzLl91bnByb2Nlc3NlZERlYWRLZXk9ITE7Y29uc3QgdD1lLmRhdGE7cmV0dXJuIHRoaXMuY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudCh0LCEwKSx0aGlzLmNhbmNlbChlKSwhMH1yZXR1cm4hMX1yZXNpemUoZSx0KXtlIT09dGhpcy5jb2xzfHx0IT09dGhpcy5yb3dzP3N1cGVyLnJlc2l6ZShlLHQpOnRoaXMuX2NoYXJTaXplU2VydmljZSYmIXRoaXMuX2NoYXJTaXplU2VydmljZS5oYXNWYWxpZFNpemUmJnRoaXMuX2NoYXJTaXplU2VydmljZS5tZWFzdXJlKCl9X2FmdGVyUmVzaXplKGUsdCl7dmFyIGkscztudWxsPT09KGk9dGhpcy5fY2hhclNpemVTZXJ2aWNlKXx8dm9pZCAwPT09aXx8aS5tZWFzdXJlKCksbnVsbD09PShzPXRoaXMudmlld3BvcnQpfHx2b2lkIDA9PT1zfHxzLnN5bmNTY3JvbGxBcmVhKCEwKX1jbGVhcigpe2lmKDAhPT10aGlzLmJ1ZmZlci55YmFzZXx8MCE9PXRoaXMuYnVmZmVyLnkpe3RoaXMuYnVmZmVyLmNsZWFyQWxsTWFya2VycygpLHRoaXMuYnVmZmVyLmxpbmVzLnNldCgwLHRoaXMuYnVmZmVyLmxpbmVzLmdldCh0aGlzLmJ1ZmZlci55YmFzZSt0aGlzLmJ1ZmZlci55KSksdGhpcy5idWZmZXIubGluZXMubGVuZ3RoPTEsdGhpcy5idWZmZXIueWRpc3A9MCx0aGlzLmJ1ZmZlci55YmFzZT0wLHRoaXMuYnVmZmVyLnk9MDtmb3IobGV0IGU9MTtlPHRoaXMucm93cztlKyspdGhpcy5idWZmZXIubGluZXMucHVzaCh0aGlzLmJ1ZmZlci5nZXRCbGFua0xpbmUoZy5ERUZBVUxUX0FUVFJfREFUQSkpO3RoaXMucmVmcmVzaCgwLHRoaXMucm93cy0xKSx0aGlzLl9vblNjcm9sbC5maXJlKHtwb3NpdGlvbjp0aGlzLmJ1ZmZlci55ZGlzcCxzb3VyY2U6MH0pfX1yZXNldCgpe3ZhciBlLHQ7dGhpcy5vcHRpb25zLnJvd3M9dGhpcy5yb3dzLHRoaXMub3B0aW9ucy5jb2xzPXRoaXMuY29scztjb25zdCBpPXRoaXMuX2N1c3RvbUtleUV2ZW50SGFuZGxlcjt0aGlzLl9zZXR1cCgpLHN1cGVyLnJlc2V0KCksbnVsbD09PShlPXRoaXMuX3NlbGVjdGlvblNlcnZpY2UpfHx2b2lkIDA9PT1lfHxlLnJlc2V0KCksdGhpcy5fZGVjb3JhdGlvblNlcnZpY2UucmVzZXQoKSx0aGlzLl9jdXN0b21LZXlFdmVudEhhbmRsZXI9aSx0aGlzLnJlZnJlc2goMCx0aGlzLnJvd3MtMSksbnVsbD09PSh0PXRoaXMudmlld3BvcnQpfHx2b2lkIDA9PT10fHx0LnN5bmNTY3JvbGxBcmVhKCl9Y2xlYXJUZXh0dXJlQXRsYXMoKXt2YXIgZTtudWxsPT09KGU9dGhpcy5fcmVuZGVyU2VydmljZSl8fHZvaWQgMD09PWV8fGUuY2xlYXJUZXh0dXJlQXRsYXMoKX1fcmVwb3J0Rm9jdXMoKXt2YXIgZTsobnVsbD09PShlPXRoaXMuZWxlbWVudCl8fHZvaWQgMD09PWU/dm9pZCAwOmUuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZm9jdXNcIikpP3RoaXMuY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChvLkMwLkVTQytcIltJXCIpOnRoaXMuY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChvLkMwLkVTQytcIltPXCIpfV9yZXBvcnRXaW5kb3dzT3B0aW9ucyhlKXtpZih0aGlzLl9yZW5kZXJTZXJ2aWNlKXN3aXRjaChlKXtjYXNlIGEuV2luZG93c09wdGlvbnNSZXBvcnRUeXBlLkdFVF9XSU5fU0laRV9QSVhFTFM6Y29uc3QgZT10aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuY2FudmFzV2lkdGgudG9GaXhlZCgwKSx0PXRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5jYW52YXNIZWlnaHQudG9GaXhlZCgwKTt0aGlzLmNvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQoYCR7by5DMC5FU0N9WzQ7JHt0fTske2V9dGApO2JyZWFrO2Nhc2UgYS5XaW5kb3dzT3B0aW9uc1JlcG9ydFR5cGUuR0VUX0NFTExfU0laRV9QSVhFTFM6Y29uc3QgaT10aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoLnRvRml4ZWQoMCkscz10aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbEhlaWdodC50b0ZpeGVkKDApO3RoaXMuY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChgJHtvLkMwLkVTQ31bNjske3N9OyR7aX10YCl9fWNhbmNlbChlLHQpe2lmKHRoaXMub3B0aW9ucy5jYW5jZWxFdmVudHN8fHQpcmV0dXJuIGUucHJldmVudERlZmF1bHQoKSxlLnN0b3BQcm9wYWdhdGlvbigpLCExfX10LlRlcm1pbmFsPU99LDk5MjQ6KGUsdCk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlRpbWVCYXNlZERlYm91bmNlcj12b2lkIDAsdC5UaW1lQmFzZWREZWJvdW5jZXI9Y2xhc3N7Y29uc3RydWN0b3IoZSx0PTFlMyl7dGhpcy5fcmVuZGVyQ2FsbGJhY2s9ZSx0aGlzLl9kZWJvdW5jZVRocmVzaG9sZE1TPXQsdGhpcy5fbGFzdFJlZnJlc2hNcz0wLHRoaXMuX2FkZGl0aW9uYWxSZWZyZXNoUmVxdWVzdGVkPSExfWRpc3Bvc2UoKXt0aGlzLl9yZWZyZXNoVGltZW91dElEJiZjbGVhclRpbWVvdXQodGhpcy5fcmVmcmVzaFRpbWVvdXRJRCl9cmVmcmVzaChlLHQsaSl7dGhpcy5fcm93Q291bnQ9aSxlPXZvaWQgMCE9PWU/ZTowLHQ9dm9pZCAwIT09dD90OnRoaXMuX3Jvd0NvdW50LTEsdGhpcy5fcm93U3RhcnQ9dm9pZCAwIT09dGhpcy5fcm93U3RhcnQ/TWF0aC5taW4odGhpcy5fcm93U3RhcnQsZSk6ZSx0aGlzLl9yb3dFbmQ9dm9pZCAwIT09dGhpcy5fcm93RW5kP01hdGgubWF4KHRoaXMuX3Jvd0VuZCx0KTp0O2NvbnN0IHM9RGF0ZS5ub3coKTtpZihzLXRoaXMuX2xhc3RSZWZyZXNoTXM+PXRoaXMuX2RlYm91bmNlVGhyZXNob2xkTVMpdGhpcy5fbGFzdFJlZnJlc2hNcz1zLHRoaXMuX2lubmVyUmVmcmVzaCgpO2Vsc2UgaWYoIXRoaXMuX2FkZGl0aW9uYWxSZWZyZXNoUmVxdWVzdGVkKXtjb25zdCBlPXMtdGhpcy5fbGFzdFJlZnJlc2hNcyx0PXRoaXMuX2RlYm91bmNlVGhyZXNob2xkTVMtZTt0aGlzLl9hZGRpdGlvbmFsUmVmcmVzaFJlcXVlc3RlZD0hMCx0aGlzLl9yZWZyZXNoVGltZW91dElEPXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e3RoaXMuX2xhc3RSZWZyZXNoTXM9RGF0ZS5ub3coKSx0aGlzLl9pbm5lclJlZnJlc2goKSx0aGlzLl9hZGRpdGlvbmFsUmVmcmVzaFJlcXVlc3RlZD0hMSx0aGlzLl9yZWZyZXNoVGltZW91dElEPXZvaWQgMH0pLHQpfX1faW5uZXJSZWZyZXNoKCl7aWYodm9pZCAwPT09dGhpcy5fcm93U3RhcnR8fHZvaWQgMD09PXRoaXMuX3Jvd0VuZHx8dm9pZCAwPT09dGhpcy5fcm93Q291bnQpcmV0dXJuO2NvbnN0IGU9TWF0aC5tYXgodGhpcy5fcm93U3RhcnQsMCksdD1NYXRoLm1pbih0aGlzLl9yb3dFbmQsdGhpcy5fcm93Q291bnQtMSk7dGhpcy5fcm93U3RhcnQ9dm9pZCAwLHRoaXMuX3Jvd0VuZD12b2lkIDAsdGhpcy5fcmVuZGVyQ2FsbGJhY2soZSx0KX19fSwxNjgwOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVmlld3BvcnQ9dm9pZCAwO2NvbnN0IG49aSg4NDQpLG89aSgzNjU2KSxhPWkoNDcyNSksaD1pKDI1ODUpO2xldCBjPWNsYXNzIGV4dGVuZHMgbi5EaXNwb3NhYmxle2NvbnN0cnVjdG9yKGUsdCxpLHMscixuLGEsaCxjKXtzdXBlcigpLHRoaXMuX3Njcm9sbExpbmVzPWUsdGhpcy5fdmlld3BvcnRFbGVtZW50PXQsdGhpcy5fc2Nyb2xsQXJlYT1pLHRoaXMuX2VsZW1lbnQ9cyx0aGlzLl9idWZmZXJTZXJ2aWNlPXIsdGhpcy5fb3B0aW9uc1NlcnZpY2U9bix0aGlzLl9jaGFyU2l6ZVNlcnZpY2U9YSx0aGlzLl9yZW5kZXJTZXJ2aWNlPWgsdGhpcy5fY29yZUJyb3dzZXJTZXJ2aWNlPWMsdGhpcy5zY3JvbGxCYXJXaWR0aD0wLHRoaXMuX2N1cnJlbnRSb3dIZWlnaHQ9MCx0aGlzLl9jdXJyZW50U2NhbGVkQ2VsbEhlaWdodD0wLHRoaXMuX2xhc3RSZWNvcmRlZEJ1ZmZlckxlbmd0aD0wLHRoaXMuX2xhc3RSZWNvcmRlZFZpZXdwb3J0SGVpZ2h0PTAsdGhpcy5fbGFzdFJlY29yZGVkQnVmZmVySGVpZ2h0PTAsdGhpcy5fbGFzdFRvdWNoWT0wLHRoaXMuX2xhc3RTY3JvbGxUb3A9MCx0aGlzLl93aGVlbFBhcnRpYWxTY3JvbGw9MCx0aGlzLl9yZWZyZXNoQW5pbWF0aW9uRnJhbWU9bnVsbCx0aGlzLl9pZ25vcmVOZXh0U2Nyb2xsRXZlbnQ9ITEsdGhpcy5fc21vb3RoU2Nyb2xsU3RhdGU9e3N0YXJ0VGltZTowLG9yaWdpbjotMSx0YXJnZXQ6LTF9LHRoaXMuc2Nyb2xsQmFyV2lkdGg9dGhpcy5fdmlld3BvcnRFbGVtZW50Lm9mZnNldFdpZHRoLXRoaXMuX3Njcm9sbEFyZWEub2Zmc2V0V2lkdGh8fDE1LHRoaXMucmVnaXN0ZXIoKDAsby5hZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIpKHRoaXMuX3ZpZXdwb3J0RWxlbWVudCxcInNjcm9sbFwiLHRoaXMuX29uU2Nyb2xsLmJpbmQodGhpcykpKSx0aGlzLl9hY3RpdmVCdWZmZXI9dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIsdGhpcy5yZWdpc3Rlcih0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMub25CdWZmZXJBY3RpdmF0ZSgoZT0+dGhpcy5fYWN0aXZlQnVmZmVyPWUuYWN0aXZlQnVmZmVyKSkpLHRoaXMuX3JlbmRlckRpbWVuc2lvbnM9dGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLHRoaXMucmVnaXN0ZXIodGhpcy5fcmVuZGVyU2VydmljZS5vbkRpbWVuc2lvbnNDaGFuZ2UoKGU9PnRoaXMuX3JlbmRlckRpbWVuc2lvbnM9ZSkpKSxzZXRUaW1lb3V0KCgoKT0+dGhpcy5zeW5jU2Nyb2xsQXJlYSgpKSwwKX1vblRoZW1lQ2hhbmdlKGUpe3RoaXMuX3ZpZXdwb3J0RWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9ZS5iYWNrZ3JvdW5kLmNzc31fcmVmcmVzaChlKXtpZihlKXJldHVybiB0aGlzLl9pbm5lclJlZnJlc2goKSx2b2lkKG51bGwhPT10aGlzLl9yZWZyZXNoQW5pbWF0aW9uRnJhbWUmJnRoaXMuX2NvcmVCcm93c2VyU2VydmljZS53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5fcmVmcmVzaEFuaW1hdGlvbkZyYW1lKSk7bnVsbD09PXRoaXMuX3JlZnJlc2hBbmltYXRpb25GcmFtZSYmKHRoaXMuX3JlZnJlc2hBbmltYXRpb25GcmFtZT10aGlzLl9jb3JlQnJvd3NlclNlcnZpY2Uud2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKCk9PnRoaXMuX2lubmVyUmVmcmVzaCgpKSkpfV9pbm5lclJlZnJlc2goKXtpZih0aGlzLl9jaGFyU2l6ZVNlcnZpY2UuaGVpZ2h0PjApe3RoaXMuX2N1cnJlbnRSb3dIZWlnaHQ9dGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLnNjYWxlZENlbGxIZWlnaHQvdGhpcy5fY29yZUJyb3dzZXJTZXJ2aWNlLmRwcix0aGlzLl9jdXJyZW50U2NhbGVkQ2VsbEhlaWdodD10aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuc2NhbGVkQ2VsbEhlaWdodCx0aGlzLl9sYXN0UmVjb3JkZWRWaWV3cG9ydEhlaWdodD10aGlzLl92aWV3cG9ydEVsZW1lbnQub2Zmc2V0SGVpZ2h0O2NvbnN0IGU9TWF0aC5yb3VuZCh0aGlzLl9jdXJyZW50Um93SGVpZ2h0KnRoaXMuX2xhc3RSZWNvcmRlZEJ1ZmZlckxlbmd0aCkrKHRoaXMuX2xhc3RSZWNvcmRlZFZpZXdwb3J0SGVpZ2h0LXRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5jYW52YXNIZWlnaHQpO3RoaXMuX2xhc3RSZWNvcmRlZEJ1ZmZlckhlaWdodCE9PWUmJih0aGlzLl9sYXN0UmVjb3JkZWRCdWZmZXJIZWlnaHQ9ZSx0aGlzLl9zY3JvbGxBcmVhLnN0eWxlLmhlaWdodD10aGlzLl9sYXN0UmVjb3JkZWRCdWZmZXJIZWlnaHQrXCJweFwiKX1jb25zdCBlPXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnlkaXNwKnRoaXMuX2N1cnJlbnRSb3dIZWlnaHQ7dGhpcy5fdmlld3BvcnRFbGVtZW50LnNjcm9sbFRvcCE9PWUmJih0aGlzLl9pZ25vcmVOZXh0U2Nyb2xsRXZlbnQ9ITAsdGhpcy5fdmlld3BvcnRFbGVtZW50LnNjcm9sbFRvcD1lKSx0aGlzLl9yZWZyZXNoQW5pbWF0aW9uRnJhbWU9bnVsbH1zeW5jU2Nyb2xsQXJlYShlPSExKXtpZih0aGlzLl9sYXN0UmVjb3JkZWRCdWZmZXJMZW5ndGghPT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci5saW5lcy5sZW5ndGgpcmV0dXJuIHRoaXMuX2xhc3RSZWNvcmRlZEJ1ZmZlckxlbmd0aD10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci5saW5lcy5sZW5ndGgsdm9pZCB0aGlzLl9yZWZyZXNoKGUpO3RoaXMuX2xhc3RSZWNvcmRlZFZpZXdwb3J0SGVpZ2h0PT09dGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLmNhbnZhc0hlaWdodCYmdGhpcy5fbGFzdFNjcm9sbFRvcD09PXRoaXMuX2FjdGl2ZUJ1ZmZlci55ZGlzcCp0aGlzLl9jdXJyZW50Um93SGVpZ2h0JiZ0aGlzLl9yZW5kZXJEaW1lbnNpb25zLnNjYWxlZENlbGxIZWlnaHQ9PT10aGlzLl9jdXJyZW50U2NhbGVkQ2VsbEhlaWdodHx8dGhpcy5fcmVmcmVzaChlKX1fb25TY3JvbGwoZSl7aWYodGhpcy5fbGFzdFNjcm9sbFRvcD10aGlzLl92aWV3cG9ydEVsZW1lbnQuc2Nyb2xsVG9wLCF0aGlzLl92aWV3cG9ydEVsZW1lbnQub2Zmc2V0UGFyZW50KXJldHVybjtpZih0aGlzLl9pZ25vcmVOZXh0U2Nyb2xsRXZlbnQpcmV0dXJuIHRoaXMuX2lnbm9yZU5leHRTY3JvbGxFdmVudD0hMSx2b2lkIHRoaXMuX3Njcm9sbExpbmVzKDApO2NvbnN0IHQ9TWF0aC5yb3VuZCh0aGlzLl9sYXN0U2Nyb2xsVG9wL3RoaXMuX2N1cnJlbnRSb3dIZWlnaHQpLXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnlkaXNwO3RoaXMuX3Njcm9sbExpbmVzKHQpfV9zbW9vdGhTY3JvbGwoKXtpZih0aGlzLl9pc0Rpc3Bvc2VkfHwtMT09PXRoaXMuX3Ntb290aFNjcm9sbFN0YXRlLm9yaWdpbnx8LTE9PT10aGlzLl9zbW9vdGhTY3JvbGxTdGF0ZS50YXJnZXQpcmV0dXJuO2NvbnN0IGU9dGhpcy5fc21vb3RoU2Nyb2xsUGVyY2VudCgpO3RoaXMuX3ZpZXdwb3J0RWxlbWVudC5zY3JvbGxUb3A9dGhpcy5fc21vb3RoU2Nyb2xsU3RhdGUub3JpZ2luK01hdGgucm91bmQoZSoodGhpcy5fc21vb3RoU2Nyb2xsU3RhdGUudGFyZ2V0LXRoaXMuX3Ntb290aFNjcm9sbFN0YXRlLm9yaWdpbikpLGU8MT90aGlzLl9jb3JlQnJvd3NlclNlcnZpY2Uud2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKCk9PnRoaXMuX3Ntb290aFNjcm9sbCgpKSk6dGhpcy5fY2xlYXJTbW9vdGhTY3JvbGxTdGF0ZSgpfV9zbW9vdGhTY3JvbGxQZXJjZW50KCl7cmV0dXJuIHRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuc21vb3RoU2Nyb2xsRHVyYXRpb24mJnRoaXMuX3Ntb290aFNjcm9sbFN0YXRlLnN0YXJ0VGltZT9NYXRoLm1heChNYXRoLm1pbigoRGF0ZS5ub3coKS10aGlzLl9zbW9vdGhTY3JvbGxTdGF0ZS5zdGFydFRpbWUpL3RoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuc21vb3RoU2Nyb2xsRHVyYXRpb24sMSksMCk6MX1fY2xlYXJTbW9vdGhTY3JvbGxTdGF0ZSgpe3RoaXMuX3Ntb290aFNjcm9sbFN0YXRlLnN0YXJ0VGltZT0wLHRoaXMuX3Ntb290aFNjcm9sbFN0YXRlLm9yaWdpbj0tMSx0aGlzLl9zbW9vdGhTY3JvbGxTdGF0ZS50YXJnZXQ9LTF9X2J1YmJsZVNjcm9sbChlLHQpe2NvbnN0IGk9dGhpcy5fdmlld3BvcnRFbGVtZW50LnNjcm9sbFRvcCt0aGlzLl9sYXN0UmVjb3JkZWRWaWV3cG9ydEhlaWdodDtyZXR1cm4hKHQ8MCYmMCE9PXRoaXMuX3ZpZXdwb3J0RWxlbWVudC5zY3JvbGxUb3B8fHQ+MCYmaTx0aGlzLl9sYXN0UmVjb3JkZWRCdWZmZXJIZWlnaHQpfHwoZS5jYW5jZWxhYmxlJiZlLnByZXZlbnREZWZhdWx0KCksITEpfW9uV2hlZWwoZSl7Y29uc3QgdD10aGlzLl9nZXRQaXhlbHNTY3JvbGxlZChlKTtyZXR1cm4gMCE9PXQmJih0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNtb290aFNjcm9sbER1cmF0aW9uPyh0aGlzLl9zbW9vdGhTY3JvbGxTdGF0ZS5zdGFydFRpbWU9RGF0ZS5ub3coKSx0aGlzLl9zbW9vdGhTY3JvbGxQZXJjZW50KCk8MT8odGhpcy5fc21vb3RoU2Nyb2xsU3RhdGUub3JpZ2luPXRoaXMuX3ZpZXdwb3J0RWxlbWVudC5zY3JvbGxUb3AsLTE9PT10aGlzLl9zbW9vdGhTY3JvbGxTdGF0ZS50YXJnZXQ/dGhpcy5fc21vb3RoU2Nyb2xsU3RhdGUudGFyZ2V0PXRoaXMuX3ZpZXdwb3J0RWxlbWVudC5zY3JvbGxUb3ArdDp0aGlzLl9zbW9vdGhTY3JvbGxTdGF0ZS50YXJnZXQrPXQsdGhpcy5fc21vb3RoU2Nyb2xsU3RhdGUudGFyZ2V0PU1hdGgubWF4KE1hdGgubWluKHRoaXMuX3Ntb290aFNjcm9sbFN0YXRlLnRhcmdldCx0aGlzLl92aWV3cG9ydEVsZW1lbnQuc2Nyb2xsSGVpZ2h0KSwwKSx0aGlzLl9zbW9vdGhTY3JvbGwoKSk6dGhpcy5fY2xlYXJTbW9vdGhTY3JvbGxTdGF0ZSgpKTp0aGlzLl92aWV3cG9ydEVsZW1lbnQuc2Nyb2xsVG9wKz10LHRoaXMuX2J1YmJsZVNjcm9sbChlLHQpKX1fZ2V0UGl4ZWxzU2Nyb2xsZWQoZSl7aWYoMD09PWUuZGVsdGFZfHxlLnNoaWZ0S2V5KXJldHVybiAwO2xldCB0PXRoaXMuX2FwcGx5U2Nyb2xsTW9kaWZpZXIoZS5kZWx0YVksZSk7cmV0dXJuIGUuZGVsdGFNb2RlPT09V2hlZWxFdmVudC5ET01fREVMVEFfTElORT90Kj10aGlzLl9jdXJyZW50Um93SGVpZ2h0OmUuZGVsdGFNb2RlPT09V2hlZWxFdmVudC5ET01fREVMVEFfUEFHRSYmKHQqPXRoaXMuX2N1cnJlbnRSb3dIZWlnaHQqdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzKSx0fWdldExpbmVzU2Nyb2xsZWQoZSl7aWYoMD09PWUuZGVsdGFZfHxlLnNoaWZ0S2V5KXJldHVybiAwO2xldCB0PXRoaXMuX2FwcGx5U2Nyb2xsTW9kaWZpZXIoZS5kZWx0YVksZSk7cmV0dXJuIGUuZGVsdGFNb2RlPT09V2hlZWxFdmVudC5ET01fREVMVEFfUElYRUw/KHQvPXRoaXMuX2N1cnJlbnRSb3dIZWlnaHQrMCx0aGlzLl93aGVlbFBhcnRpYWxTY3JvbGwrPXQsdD1NYXRoLmZsb29yKE1hdGguYWJzKHRoaXMuX3doZWVsUGFydGlhbFNjcm9sbCkpKih0aGlzLl93aGVlbFBhcnRpYWxTY3JvbGw+MD8xOi0xKSx0aGlzLl93aGVlbFBhcnRpYWxTY3JvbGwlPTEpOmUuZGVsdGFNb2RlPT09V2hlZWxFdmVudC5ET01fREVMVEFfUEFHRSYmKHQqPXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyksdH1fYXBwbHlTY3JvbGxNb2RpZmllcihlLHQpe2NvbnN0IGk9dGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5mYXN0U2Nyb2xsTW9kaWZpZXI7cmV0dXJuXCJhbHRcIj09PWkmJnQuYWx0S2V5fHxcImN0cmxcIj09PWkmJnQuY3RybEtleXx8XCJzaGlmdFwiPT09aSYmdC5zaGlmdEtleT9lKnRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuZmFzdFNjcm9sbFNlbnNpdGl2aXR5KnRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuc2Nyb2xsU2Vuc2l0aXZpdHk6ZSp0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcm9sbFNlbnNpdGl2aXR5fW9uVG91Y2hTdGFydChlKXt0aGlzLl9sYXN0VG91Y2hZPWUudG91Y2hlc1swXS5wYWdlWX1vblRvdWNoTW92ZShlKXtjb25zdCB0PXRoaXMuX2xhc3RUb3VjaFktZS50b3VjaGVzWzBdLnBhZ2VZO3JldHVybiB0aGlzLl9sYXN0VG91Y2hZPWUudG91Y2hlc1swXS5wYWdlWSwwIT09dCYmKHRoaXMuX3ZpZXdwb3J0RWxlbWVudC5zY3JvbGxUb3ArPXQsdGhpcy5fYnViYmxlU2Nyb2xsKGUsdCkpfX07Yz1zKFtyKDQsaC5JQnVmZmVyU2VydmljZSkscig1LGguSU9wdGlvbnNTZXJ2aWNlKSxyKDYsYS5JQ2hhclNpemVTZXJ2aWNlKSxyKDcsYS5JUmVuZGVyU2VydmljZSkscig4LGEuSUNvcmVCcm93c2VyU2VydmljZSldLGMpLHQuVmlld3BvcnQ9Y30sMzEwNzpmdW5jdGlvbihlLHQsaSl7dmFyIHM9dGhpcyYmdGhpcy5fX2RlY29yYXRlfHxmdW5jdGlvbihlLHQsaSxzKXt2YXIgcixuPWFyZ3VtZW50cy5sZW5ndGgsbz1uPDM/dDpudWxsPT09cz9zPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxpKTpzO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBSZWZsZWN0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBSZWZsZWN0LmRlY29yYXRlKW89UmVmbGVjdC5kZWNvcmF0ZShlLHQsaSxzKTtlbHNlIGZvcih2YXIgYT1lLmxlbmd0aC0xO2E+PTA7YS0tKShyPWVbYV0pJiYobz0objwzP3Iobyk6bj4zP3IodCxpLG8pOnIodCxpKSl8fG8pO3JldHVybiBuPjMmJm8mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGksbyksb30scj10aGlzJiZ0aGlzLl9fcGFyYW18fGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkscyl7dChpLHMsZSl9fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJ1ZmZlckRlY29yYXRpb25SZW5kZXJlcj12b2lkIDA7Y29uc3Qgbj1pKDM2NTYpLG89aSg0NzI1KSxhPWkoODQ0KSxoPWkoMjU4NSk7bGV0IGM9Y2xhc3MgZXh0ZW5kcyBhLkRpc3Bvc2FibGV7Y29uc3RydWN0b3IoZSx0LGkscyl7c3VwZXIoKSx0aGlzLl9zY3JlZW5FbGVtZW50PWUsdGhpcy5fYnVmZmVyU2VydmljZT10LHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlPWksdGhpcy5fcmVuZGVyU2VydmljZT1zLHRoaXMuX2RlY29yYXRpb25FbGVtZW50cz1uZXcgTWFwLHRoaXMuX2FsdEJ1ZmZlcklzQWN0aXZlPSExLHRoaXMuX2RpbWVuc2lvbnNDaGFuZ2VkPSExLHRoaXMuX2NvbnRhaW5lcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMuX2NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwieHRlcm0tZGVjb3JhdGlvbi1jb250YWluZXJcIiksdGhpcy5fc2NyZWVuRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLl9jb250YWluZXIpLHRoaXMucmVnaXN0ZXIodGhpcy5fcmVuZGVyU2VydmljZS5vblJlbmRlcmVkVmlld3BvcnRDaGFuZ2UoKCgpPT50aGlzLl9xdWV1ZVJlZnJlc2goKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX3JlbmRlclNlcnZpY2Uub25EaW1lbnNpb25zQ2hhbmdlKCgoKT0+e3RoaXMuX2RpbWVuc2lvbnNDaGFuZ2VkPSEwLHRoaXMuX3F1ZXVlUmVmcmVzaCgpfSkpKSx0aGlzLnJlZ2lzdGVyKCgwLG4uYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh3aW5kb3csXCJyZXNpemVcIiwoKCk9PnRoaXMuX3F1ZXVlUmVmcmVzaCgpKSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLm9uQnVmZmVyQWN0aXZhdGUoKCgpPT57dGhpcy5fYWx0QnVmZmVySXNBY3RpdmU9dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXI9PT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMuYWx0fSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlLm9uRGVjb3JhdGlvblJlZ2lzdGVyZWQoKCgpPT50aGlzLl9xdWV1ZVJlZnJlc2goKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlLm9uRGVjb3JhdGlvblJlbW92ZWQoKGU9PnRoaXMuX3JlbW92ZURlY29yYXRpb24oZSkpKSl9ZGlzcG9zZSgpe3RoaXMuX2NvbnRhaW5lci5yZW1vdmUoKSx0aGlzLl9kZWNvcmF0aW9uRWxlbWVudHMuY2xlYXIoKSxzdXBlci5kaXNwb3NlKCl9X3F1ZXVlUmVmcmVzaCgpe3ZvaWQgMD09PXRoaXMuX2FuaW1hdGlvbkZyYW1lJiYodGhpcy5fYW5pbWF0aW9uRnJhbWU9dGhpcy5fcmVuZGVyU2VydmljZS5hZGRSZWZyZXNoQ2FsbGJhY2soKCgpPT57dGhpcy5yZWZyZXNoRGVjb3JhdGlvbnMoKSx0aGlzLl9hbmltYXRpb25GcmFtZT12b2lkIDB9KSkpfXJlZnJlc2hEZWNvcmF0aW9ucygpe2Zvcihjb25zdCBlIG9mIHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlLmRlY29yYXRpb25zKXRoaXMuX3JlbmRlckRlY29yYXRpb24oZSk7dGhpcy5fZGltZW5zaW9uc0NoYW5nZWQ9ITF9X3JlbmRlckRlY29yYXRpb24oZSl7dGhpcy5fcmVmcmVzaFN0eWxlKGUpLHRoaXMuX2RpbWVuc2lvbnNDaGFuZ2VkJiZ0aGlzLl9yZWZyZXNoWFBvc2l0aW9uKGUpfV9jcmVhdGVFbGVtZW50KGUpe3ZhciB0O2NvbnN0IGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpLmNsYXNzTGlzdC5hZGQoXCJ4dGVybS1kZWNvcmF0aW9uXCIpLGkuc3R5bGUud2lkdGg9YCR7TWF0aC5yb3VuZCgoZS5vcHRpb25zLndpZHRofHwxKSp0aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoKX1weGAsaS5zdHlsZS5oZWlnaHQ9KGUub3B0aW9ucy5oZWlnaHR8fDEpKnRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0K1wicHhcIixpLnN0eWxlLnRvcD0oZS5tYXJrZXIubGluZS10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMuYWN0aXZlLnlkaXNwKSp0aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbEhlaWdodCtcInB4XCIsaS5zdHlsZS5saW5lSGVpZ2h0PWAke3RoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0fXB4YDtjb25zdCBzPW51bGwhPT0odD1lLm9wdGlvbnMueCkmJnZvaWQgMCE9PXQ/dDowO3JldHVybiBzJiZzPnRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyYmKGkuc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksdGhpcy5fcmVmcmVzaFhQb3NpdGlvbihlLGkpLGl9X3JlZnJlc2hTdHlsZShlKXtjb25zdCB0PWUubWFya2VyLmxpbmUtdGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLmFjdGl2ZS55ZGlzcDtpZih0PDB8fHQ+PXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyllLmVsZW1lbnQmJihlLmVsZW1lbnQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIixlLm9uUmVuZGVyRW1pdHRlci5maXJlKGUuZWxlbWVudCkpO2Vsc2V7bGV0IGk9dGhpcy5fZGVjb3JhdGlvbkVsZW1lbnRzLmdldChlKTtpfHwoZS5vbkRpc3Bvc2UoKCgpPT50aGlzLl9yZW1vdmVEZWNvcmF0aW9uKGUpKSksaT10aGlzLl9jcmVhdGVFbGVtZW50KGUpLGUuZWxlbWVudD1pLHRoaXMuX2RlY29yYXRpb25FbGVtZW50cy5zZXQoZSxpKSx0aGlzLl9jb250YWluZXIuYXBwZW5kQ2hpbGQoaSkpLGkuc3R5bGUudG9wPXQqdGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLmFjdHVhbENlbGxIZWlnaHQrXCJweFwiLGkuc3R5bGUuZGlzcGxheT10aGlzLl9hbHRCdWZmZXJJc0FjdGl2ZT9cIm5vbmVcIjpcImJsb2NrXCIsZS5vblJlbmRlckVtaXR0ZXIuZmlyZShpKX19X3JlZnJlc2hYUG9zaXRpb24oZSx0PWUuZWxlbWVudCl7dmFyIGk7aWYoIXQpcmV0dXJuO2NvbnN0IHM9bnVsbCE9PShpPWUub3B0aW9ucy54KSYmdm9pZCAwIT09aT9pOjA7XCJyaWdodFwiPT09KGUub3B0aW9ucy5hbmNob3J8fFwibGVmdFwiKT90LnN0eWxlLnJpZ2h0PXM/cyp0aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoK1wicHhcIjpcIlwiOnQuc3R5bGUubGVmdD1zP3MqdGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLmFjdHVhbENlbGxXaWR0aCtcInB4XCI6XCJcIn1fcmVtb3ZlRGVjb3JhdGlvbihlKXt2YXIgdDtudWxsPT09KHQ9dGhpcy5fZGVjb3JhdGlvbkVsZW1lbnRzLmdldChlKSl8fHZvaWQgMD09PXR8fHQucmVtb3ZlKCksdGhpcy5fZGVjb3JhdGlvbkVsZW1lbnRzLmRlbGV0ZShlKX19O2M9cyhbcigxLGguSUJ1ZmZlclNlcnZpY2UpLHIoMixoLklEZWNvcmF0aW9uU2VydmljZSkscigzLG8uSVJlbmRlclNlcnZpY2UpXSxjKSx0LkJ1ZmZlckRlY29yYXRpb25SZW5kZXJlcj1jfSw1ODcxOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Db2xvclpvbmVTdG9yZT12b2lkIDAsdC5Db2xvclpvbmVTdG9yZT1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuX3pvbmVzPVtdLHRoaXMuX3pvbmVQb29sPVtdLHRoaXMuX3pvbmVQb29sSW5kZXg9MCx0aGlzLl9saW5lUGFkZGluZz17ZnVsbDowLGxlZnQ6MCxjZW50ZXI6MCxyaWdodDowfX1nZXQgem9uZXMoKXtyZXR1cm4gdGhpcy5fem9uZVBvb2wubGVuZ3RoPU1hdGgubWluKHRoaXMuX3pvbmVQb29sLmxlbmd0aCx0aGlzLl96b25lcy5sZW5ndGgpLHRoaXMuX3pvbmVzfWNsZWFyKCl7dGhpcy5fem9uZXMubGVuZ3RoPTAsdGhpcy5fem9uZVBvb2xJbmRleD0wfWFkZERlY29yYXRpb24oZSl7aWYoZS5vcHRpb25zLm92ZXJ2aWV3UnVsZXJPcHRpb25zKXtmb3IoY29uc3QgdCBvZiB0aGlzLl96b25lcylpZih0LmNvbG9yPT09ZS5vcHRpb25zLm92ZXJ2aWV3UnVsZXJPcHRpb25zLmNvbG9yJiZ0LnBvc2l0aW9uPT09ZS5vcHRpb25zLm92ZXJ2aWV3UnVsZXJPcHRpb25zLnBvc2l0aW9uKXtpZih0aGlzLl9saW5lSW50ZXJzZWN0c1pvbmUodCxlLm1hcmtlci5saW5lKSlyZXR1cm47aWYodGhpcy5fbGluZUFkamFjZW50VG9ab25lKHQsZS5tYXJrZXIubGluZSxlLm9wdGlvbnMub3ZlcnZpZXdSdWxlck9wdGlvbnMucG9zaXRpb24pKXJldHVybiB2b2lkIHRoaXMuX2FkZExpbmVUb1pvbmUodCxlLm1hcmtlci5saW5lKX1pZih0aGlzLl96b25lUG9vbEluZGV4PHRoaXMuX3pvbmVQb29sLmxlbmd0aClyZXR1cm4gdGhpcy5fem9uZVBvb2xbdGhpcy5fem9uZVBvb2xJbmRleF0uY29sb3I9ZS5vcHRpb25zLm92ZXJ2aWV3UnVsZXJPcHRpb25zLmNvbG9yLHRoaXMuX3pvbmVQb29sW3RoaXMuX3pvbmVQb29sSW5kZXhdLnBvc2l0aW9uPWUub3B0aW9ucy5vdmVydmlld1J1bGVyT3B0aW9ucy5wb3NpdGlvbix0aGlzLl96b25lUG9vbFt0aGlzLl96b25lUG9vbEluZGV4XS5zdGFydEJ1ZmZlckxpbmU9ZS5tYXJrZXIubGluZSx0aGlzLl96b25lUG9vbFt0aGlzLl96b25lUG9vbEluZGV4XS5lbmRCdWZmZXJMaW5lPWUubWFya2VyLmxpbmUsdm9pZCB0aGlzLl96b25lcy5wdXNoKHRoaXMuX3pvbmVQb29sW3RoaXMuX3pvbmVQb29sSW5kZXgrK10pO3RoaXMuX3pvbmVzLnB1c2goe2NvbG9yOmUub3B0aW9ucy5vdmVydmlld1J1bGVyT3B0aW9ucy5jb2xvcixwb3NpdGlvbjplLm9wdGlvbnMub3ZlcnZpZXdSdWxlck9wdGlvbnMucG9zaXRpb24sc3RhcnRCdWZmZXJMaW5lOmUubWFya2VyLmxpbmUsZW5kQnVmZmVyTGluZTplLm1hcmtlci5saW5lfSksdGhpcy5fem9uZVBvb2wucHVzaCh0aGlzLl96b25lc1t0aGlzLl96b25lcy5sZW5ndGgtMV0pLHRoaXMuX3pvbmVQb29sSW5kZXgrK319c2V0UGFkZGluZyhlKXt0aGlzLl9saW5lUGFkZGluZz1lfV9saW5lSW50ZXJzZWN0c1pvbmUoZSx0KXtyZXR1cm4gdD49ZS5zdGFydEJ1ZmZlckxpbmUmJnQ8PWUuZW5kQnVmZmVyTGluZX1fbGluZUFkamFjZW50VG9ab25lKGUsdCxpKXtyZXR1cm4gdD49ZS5zdGFydEJ1ZmZlckxpbmUtdGhpcy5fbGluZVBhZGRpbmdbaXx8XCJmdWxsXCJdJiZ0PD1lLmVuZEJ1ZmZlckxpbmUrdGhpcy5fbGluZVBhZGRpbmdbaXx8XCJmdWxsXCJdfV9hZGRMaW5lVG9ab25lKGUsdCl7ZS5zdGFydEJ1ZmZlckxpbmU9TWF0aC5taW4oZS5zdGFydEJ1ZmZlckxpbmUsdCksZS5lbmRCdWZmZXJMaW5lPU1hdGgubWF4KGUuZW5kQnVmZmVyTGluZSx0KX19fSw1NzQ0OmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuT3ZlcnZpZXdSdWxlclJlbmRlcmVyPXZvaWQgMDtjb25zdCBuPWkoNTg3MSksbz1pKDM2NTYpLGE9aSg0NzI1KSxoPWkoODQ0KSxjPWkoMjU4NSksbD17ZnVsbDowLGxlZnQ6MCxjZW50ZXI6MCxyaWdodDowfSxkPXtmdWxsOjAsbGVmdDowLGNlbnRlcjowLHJpZ2h0OjB9LF89e2Z1bGw6MCxsZWZ0OjAsY2VudGVyOjAscmlnaHQ6MH07bGV0IHU9Y2xhc3MgZXh0ZW5kcyBoLkRpc3Bvc2FibGV7Y29uc3RydWN0b3IoZSx0LGkscyxyLG8sYSl7dmFyIGg7c3VwZXIoKSx0aGlzLl92aWV3cG9ydEVsZW1lbnQ9ZSx0aGlzLl9zY3JlZW5FbGVtZW50PXQsdGhpcy5fYnVmZmVyU2VydmljZT1pLHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlPXMsdGhpcy5fcmVuZGVyU2VydmljZT1yLHRoaXMuX29wdGlvbnNTZXJ2aWNlPW8sdGhpcy5fY29yZUJyb3dzZVNlcnZpY2U9YSx0aGlzLl9jb2xvclpvbmVTdG9yZT1uZXcgbi5Db2xvclpvbmVTdG9yZSx0aGlzLl9zaG91bGRVcGRhdGVEaW1lbnNpb25zPSEwLHRoaXMuX3Nob3VsZFVwZGF0ZUFuY2hvcj0hMCx0aGlzLl9sYXN0S25vd25CdWZmZXJMZW5ndGg9MCx0aGlzLl9jYW52YXM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSx0aGlzLl9jYW52YXMuY2xhc3NMaXN0LmFkZChcInh0ZXJtLWRlY29yYXRpb24tb3ZlcnZpZXctcnVsZXJcIiksdGhpcy5fcmVmcmVzaENhbnZhc0RpbWVuc2lvbnMoKSxudWxsPT09KGg9dGhpcy5fdmlld3BvcnRFbGVtZW50LnBhcmVudEVsZW1lbnQpfHx2b2lkIDA9PT1ofHxoLmluc2VydEJlZm9yZSh0aGlzLl9jYW52YXMsdGhpcy5fdmlld3BvcnRFbGVtZW50KTtjb25zdCBjPXRoaXMuX2NhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7aWYoIWMpdGhyb3cgbmV3IEVycm9yKFwiQ3R4IGNhbm5vdCBiZSBudWxsXCIpO3RoaXMuX2N0eD1jLHRoaXMuX3JlZ2lzdGVyRGVjb3JhdGlvbkxpc3RlbmVycygpLHRoaXMuX3JlZ2lzdGVyQnVmZmVyQ2hhbmdlTGlzdGVuZXJzKCksdGhpcy5fcmVnaXN0ZXJEaW1lbnNpb25DaGFuZ2VMaXN0ZW5lcnMoKX1nZXQgX3dpZHRoKCl7cmV0dXJuIHRoaXMuX29wdGlvbnNTZXJ2aWNlLm9wdGlvbnMub3ZlcnZpZXdSdWxlcldpZHRofHwwfV9yZWdpc3RlckRlY29yYXRpb25MaXN0ZW5lcnMoKXt0aGlzLnJlZ2lzdGVyKHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlLm9uRGVjb3JhdGlvblJlZ2lzdGVyZWQoKCgpPT50aGlzLl9xdWV1ZVJlZnJlc2godm9pZCAwLCEwKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlLm9uRGVjb3JhdGlvblJlbW92ZWQoKCgpPT50aGlzLl9xdWV1ZVJlZnJlc2godm9pZCAwLCEwKSkpKX1fcmVnaXN0ZXJCdWZmZXJDaGFuZ2VMaXN0ZW5lcnMoKXt0aGlzLnJlZ2lzdGVyKHRoaXMuX3JlbmRlclNlcnZpY2Uub25SZW5kZXJlZFZpZXdwb3J0Q2hhbmdlKCgoKT0+dGhpcy5fcXVldWVSZWZyZXNoKCkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMub25CdWZmZXJBY3RpdmF0ZSgoKCk9Pnt0aGlzLl9jYW52YXMuc3R5bGUuZGlzcGxheT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcj09PXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVycy5hbHQ/XCJub25lXCI6XCJibG9ja1wifSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2J1ZmZlclNlcnZpY2Uub25TY3JvbGwoKCgpPT57dGhpcy5fbGFzdEtub3duQnVmZmVyTGVuZ3RoIT09dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLm5vcm1hbC5saW5lcy5sZW5ndGgmJih0aGlzLl9yZWZyZXNoRHJhd0hlaWdodENvbnN0YW50cygpLHRoaXMuX3JlZnJlc2hDb2xvclpvbmVQYWRkaW5nKCkpfSkpKX1fcmVnaXN0ZXJEaW1lbnNpb25DaGFuZ2VMaXN0ZW5lcnMoKXt0aGlzLnJlZ2lzdGVyKHRoaXMuX3JlbmRlclNlcnZpY2Uub25SZW5kZXIoKCgpPT57dGhpcy5fY29udGFpbmVySGVpZ2h0JiZ0aGlzLl9jb250YWluZXJIZWlnaHQ9PT10aGlzLl9zY3JlZW5FbGVtZW50LmNsaWVudEhlaWdodHx8KHRoaXMuX3F1ZXVlUmVmcmVzaCghMCksdGhpcy5fY29udGFpbmVySGVpZ2h0PXRoaXMuX3NjcmVlbkVsZW1lbnQuY2xpZW50SGVpZ2h0KX0pKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9vcHRpb25zU2VydmljZS5vbk9wdGlvbkNoYW5nZSgoZT0+e1wib3ZlcnZpZXdSdWxlcldpZHRoXCI9PT1lJiZ0aGlzLl9xdWV1ZVJlZnJlc2goITApfSkpKSx0aGlzLnJlZ2lzdGVyKCgwLG8uYWRkRGlzcG9zYWJsZURvbUxpc3RlbmVyKSh0aGlzLl9jb3JlQnJvd3NlU2VydmljZS53aW5kb3csXCJyZXNpemVcIiwoKCk9Pnt0aGlzLl9xdWV1ZVJlZnJlc2goITApfSkpKSx0aGlzLl9xdWV1ZVJlZnJlc2goITApfWRpc3Bvc2UoKXt2YXIgZTtudWxsPT09KGU9dGhpcy5fY2FudmFzKXx8dm9pZCAwPT09ZXx8ZS5yZW1vdmUoKSxzdXBlci5kaXNwb3NlKCl9X3JlZnJlc2hEcmF3Q29uc3RhbnRzKCl7Y29uc3QgZT1NYXRoLmZsb29yKHRoaXMuX2NhbnZhcy53aWR0aC8zKSx0PU1hdGguY2VpbCh0aGlzLl9jYW52YXMud2lkdGgvMyk7ZC5mdWxsPXRoaXMuX2NhbnZhcy53aWR0aCxkLmxlZnQ9ZSxkLmNlbnRlcj10LGQucmlnaHQ9ZSx0aGlzLl9yZWZyZXNoRHJhd0hlaWdodENvbnN0YW50cygpLF8uZnVsbD0wLF8ubGVmdD0wLF8uY2VudGVyPWQubGVmdCxfLnJpZ2h0PWQubGVmdCtkLmNlbnRlcn1fcmVmcmVzaERyYXdIZWlnaHRDb25zdGFudHMoKXtsLmZ1bGw9TWF0aC5yb3VuZCgyKnRoaXMuX2NvcmVCcm93c2VTZXJ2aWNlLmRwcik7Y29uc3QgZT10aGlzLl9jYW52YXMuaGVpZ2h0L3RoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLmxpbmVzLmxlbmd0aCx0PU1hdGgucm91bmQoTWF0aC5tYXgoTWF0aC5taW4oZSwxMiksNikqdGhpcy5fY29yZUJyb3dzZVNlcnZpY2UuZHByKTtsLmxlZnQ9dCxsLmNlbnRlcj10LGwucmlnaHQ9dH1fcmVmcmVzaENvbG9yWm9uZVBhZGRpbmcoKXt0aGlzLl9jb2xvclpvbmVTdG9yZS5zZXRQYWRkaW5nKHtmdWxsOk1hdGguZmxvb3IodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLmFjdGl2ZS5saW5lcy5sZW5ndGgvKHRoaXMuX2NhbnZhcy5oZWlnaHQtMSkqbC5mdWxsKSxsZWZ0Ok1hdGguZmxvb3IodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLmFjdGl2ZS5saW5lcy5sZW5ndGgvKHRoaXMuX2NhbnZhcy5oZWlnaHQtMSkqbC5sZWZ0KSxjZW50ZXI6TWF0aC5mbG9vcih0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMuYWN0aXZlLmxpbmVzLmxlbmd0aC8odGhpcy5fY2FudmFzLmhlaWdodC0xKSpsLmNlbnRlcikscmlnaHQ6TWF0aC5mbG9vcih0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMuYWN0aXZlLmxpbmVzLmxlbmd0aC8odGhpcy5fY2FudmFzLmhlaWdodC0xKSpsLnJpZ2h0KX0pLHRoaXMuX2xhc3RLbm93bkJ1ZmZlckxlbmd0aD10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMubm9ybWFsLmxpbmVzLmxlbmd0aH1fcmVmcmVzaENhbnZhc0RpbWVuc2lvbnMoKXt0aGlzLl9jYW52YXMuc3R5bGUud2lkdGg9YCR7dGhpcy5fd2lkdGh9cHhgLHRoaXMuX2NhbnZhcy53aWR0aD1NYXRoLnJvdW5kKHRoaXMuX3dpZHRoKnRoaXMuX2NvcmVCcm93c2VTZXJ2aWNlLmRwciksdGhpcy5fY2FudmFzLnN0eWxlLmhlaWdodD1gJHt0aGlzLl9zY3JlZW5FbGVtZW50LmNsaWVudEhlaWdodH1weGAsdGhpcy5fY2FudmFzLmhlaWdodD1NYXRoLnJvdW5kKHRoaXMuX3NjcmVlbkVsZW1lbnQuY2xpZW50SGVpZ2h0KnRoaXMuX2NvcmVCcm93c2VTZXJ2aWNlLmRwciksdGhpcy5fcmVmcmVzaERyYXdDb25zdGFudHMoKSx0aGlzLl9yZWZyZXNoQ29sb3Jab25lUGFkZGluZygpfV9yZWZyZXNoRGVjb3JhdGlvbnMoKXt0aGlzLl9zaG91bGRVcGRhdGVEaW1lbnNpb25zJiZ0aGlzLl9yZWZyZXNoQ2FudmFzRGltZW5zaW9ucygpLHRoaXMuX2N0eC5jbGVhclJlY3QoMCwwLHRoaXMuX2NhbnZhcy53aWR0aCx0aGlzLl9jYW52YXMuaGVpZ2h0KSx0aGlzLl9jb2xvclpvbmVTdG9yZS5jbGVhcigpO2Zvcihjb25zdCBlIG9mIHRoaXMuX2RlY29yYXRpb25TZXJ2aWNlLmRlY29yYXRpb25zKXRoaXMuX2NvbG9yWm9uZVN0b3JlLmFkZERlY29yYXRpb24oZSk7dGhpcy5fY3R4LmxpbmVXaWR0aD0xO2NvbnN0IGU9dGhpcy5fY29sb3Jab25lU3RvcmUuem9uZXM7Zm9yKGNvbnN0IHQgb2YgZSlcImZ1bGxcIiE9PXQucG9zaXRpb24mJnRoaXMuX3JlbmRlckNvbG9yWm9uZSh0KTtmb3IoY29uc3QgdCBvZiBlKVwiZnVsbFwiPT09dC5wb3NpdGlvbiYmdGhpcy5fcmVuZGVyQ29sb3Jab25lKHQpO3RoaXMuX3Nob3VsZFVwZGF0ZURpbWVuc2lvbnM9ITEsdGhpcy5fc2hvdWxkVXBkYXRlQW5jaG9yPSExfV9yZW5kZXJDb2xvclpvbmUoZSl7dGhpcy5fY3R4LmZpbGxTdHlsZT1lLmNvbG9yLHRoaXMuX2N0eC5maWxsUmVjdChfW2UucG9zaXRpb258fFwiZnVsbFwiXSxNYXRoLnJvdW5kKCh0aGlzLl9jYW52YXMuaGVpZ2h0LTEpKihlLnN0YXJ0QnVmZmVyTGluZS90aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMuYWN0aXZlLmxpbmVzLmxlbmd0aCktbFtlLnBvc2l0aW9ufHxcImZ1bGxcIl0vMiksZFtlLnBvc2l0aW9ufHxcImZ1bGxcIl0sTWF0aC5yb3VuZCgodGhpcy5fY2FudmFzLmhlaWdodC0xKSooKGUuZW5kQnVmZmVyTGluZS1lLnN0YXJ0QnVmZmVyTGluZSkvdGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLmFjdGl2ZS5saW5lcy5sZW5ndGgpK2xbZS5wb3NpdGlvbnx8XCJmdWxsXCJdKSl9X3F1ZXVlUmVmcmVzaChlLHQpe3RoaXMuX3Nob3VsZFVwZGF0ZURpbWVuc2lvbnM9ZXx8dGhpcy5fc2hvdWxkVXBkYXRlRGltZW5zaW9ucyx0aGlzLl9zaG91bGRVcGRhdGVBbmNob3I9dHx8dGhpcy5fc2hvdWxkVXBkYXRlQW5jaG9yLHZvaWQgMD09PXRoaXMuX2FuaW1hdGlvbkZyYW1lJiYodGhpcy5fYW5pbWF0aW9uRnJhbWU9dGhpcy5fY29yZUJyb3dzZVNlcnZpY2Uud2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKCk9Pnt0aGlzLl9yZWZyZXNoRGVjb3JhdGlvbnMoKSx0aGlzLl9hbmltYXRpb25GcmFtZT12b2lkIDB9KSkpfX07dT1zKFtyKDIsYy5JQnVmZmVyU2VydmljZSkscigzLGMuSURlY29yYXRpb25TZXJ2aWNlKSxyKDQsYS5JUmVuZGVyU2VydmljZSkscig1LGMuSU9wdGlvbnNTZXJ2aWNlKSxyKDYsYS5JQ29yZUJyb3dzZXJTZXJ2aWNlKV0sdSksdC5PdmVydmlld1J1bGVyUmVuZGVyZXI9dX0sMjk1MDpmdW5jdGlvbihlLHQsaSl7dmFyIHM9dGhpcyYmdGhpcy5fX2RlY29yYXRlfHxmdW5jdGlvbihlLHQsaSxzKXt2YXIgcixuPWFyZ3VtZW50cy5sZW5ndGgsbz1uPDM/dDpudWxsPT09cz9zPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxpKTpzO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBSZWZsZWN0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBSZWZsZWN0LmRlY29yYXRlKW89UmVmbGVjdC5kZWNvcmF0ZShlLHQsaSxzKTtlbHNlIGZvcih2YXIgYT1lLmxlbmd0aC0xO2E+PTA7YS0tKShyPWVbYV0pJiYobz0objwzP3Iobyk6bj4zP3IodCxpLG8pOnIodCxpKSl8fG8pO3JldHVybiBuPjMmJm8mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGksbyksb30scj10aGlzJiZ0aGlzLl9fcGFyYW18fGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkscyl7dChpLHMsZSl9fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkNvbXBvc2l0aW9uSGVscGVyPXZvaWQgMDtjb25zdCBuPWkoNDcyNSksbz1pKDI1ODUpLGE9aSgyNTg0KTtsZXQgaD1jbGFzc3tjb25zdHJ1Y3RvcihlLHQsaSxzLHIsbil7dGhpcy5fdGV4dGFyZWE9ZSx0aGlzLl9jb21wb3NpdGlvblZpZXc9dCx0aGlzLl9idWZmZXJTZXJ2aWNlPWksdGhpcy5fb3B0aW9uc1NlcnZpY2U9cyx0aGlzLl9jb3JlU2VydmljZT1yLHRoaXMuX3JlbmRlclNlcnZpY2U9bix0aGlzLl9pc0NvbXBvc2luZz0hMSx0aGlzLl9pc1NlbmRpbmdDb21wb3NpdGlvbj0hMSx0aGlzLl9jb21wb3NpdGlvblBvc2l0aW9uPXtzdGFydDowLGVuZDowfSx0aGlzLl9kYXRhQWxyZWFkeVNlbnQ9XCJcIn1nZXQgaXNDb21wb3NpbmcoKXtyZXR1cm4gdGhpcy5faXNDb21wb3Npbmd9Y29tcG9zaXRpb25zdGFydCgpe3RoaXMuX2lzQ29tcG9zaW5nPSEwLHRoaXMuX2NvbXBvc2l0aW9uUG9zaXRpb24uc3RhcnQ9dGhpcy5fdGV4dGFyZWEudmFsdWUubGVuZ3RoLHRoaXMuX2NvbXBvc2l0aW9uVmlldy50ZXh0Q29udGVudD1cIlwiLHRoaXMuX2RhdGFBbHJlYWR5U2VudD1cIlwiLHRoaXMuX2NvbXBvc2l0aW9uVmlldy5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpfWNvbXBvc2l0aW9udXBkYXRlKGUpe3RoaXMuX2NvbXBvc2l0aW9uVmlldy50ZXh0Q29udGVudD1lLmRhdGEsdGhpcy51cGRhdGVDb21wb3NpdGlvbkVsZW1lbnRzKCksc2V0VGltZW91dCgoKCk9Pnt0aGlzLl9jb21wb3NpdGlvblBvc2l0aW9uLmVuZD10aGlzLl90ZXh0YXJlYS52YWx1ZS5sZW5ndGh9KSwwKX1jb21wb3NpdGlvbmVuZCgpe3RoaXMuX2ZpbmFsaXplQ29tcG9zaXRpb24oITApfWtleWRvd24oZSl7aWYodGhpcy5faXNDb21wb3Npbmd8fHRoaXMuX2lzU2VuZGluZ0NvbXBvc2l0aW9uKXtpZigyMjk9PT1lLmtleUNvZGUpcmV0dXJuITE7aWYoMTY9PT1lLmtleUNvZGV8fDE3PT09ZS5rZXlDb2RlfHwxOD09PWUua2V5Q29kZSlyZXR1cm4hMTt0aGlzLl9maW5hbGl6ZUNvbXBvc2l0aW9uKCExKX1yZXR1cm4gMjI5IT09ZS5rZXlDb2RlfHwodGhpcy5faGFuZGxlQW55VGV4dGFyZWFDaGFuZ2VzKCksITEpfV9maW5hbGl6ZUNvbXBvc2l0aW9uKGUpe2lmKHRoaXMuX2NvbXBvc2l0aW9uVmlldy5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpLHRoaXMuX2lzQ29tcG9zaW5nPSExLGUpe2NvbnN0IGU9e3N0YXJ0OnRoaXMuX2NvbXBvc2l0aW9uUG9zaXRpb24uc3RhcnQsZW5kOnRoaXMuX2NvbXBvc2l0aW9uUG9zaXRpb24uZW5kfTt0aGlzLl9pc1NlbmRpbmdDb21wb3NpdGlvbj0hMCxzZXRUaW1lb3V0KCgoKT0+e2lmKHRoaXMuX2lzU2VuZGluZ0NvbXBvc2l0aW9uKXtsZXQgdDt0aGlzLl9pc1NlbmRpbmdDb21wb3NpdGlvbj0hMSxlLnN0YXJ0Kz10aGlzLl9kYXRhQWxyZWFkeVNlbnQubGVuZ3RoLHQ9dGhpcy5faXNDb21wb3Npbmc/dGhpcy5fdGV4dGFyZWEudmFsdWUuc3Vic3RyaW5nKGUuc3RhcnQsZS5lbmQpOnRoaXMuX3RleHRhcmVhLnZhbHVlLnN1YnN0cmluZyhlLnN0YXJ0KSx0Lmxlbmd0aD4wJiZ0aGlzLl9jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KHQsITApfX0pLDApfWVsc2V7dGhpcy5faXNTZW5kaW5nQ29tcG9zaXRpb249ITE7Y29uc3QgZT10aGlzLl90ZXh0YXJlYS52YWx1ZS5zdWJzdHJpbmcodGhpcy5fY29tcG9zaXRpb25Qb3NpdGlvbi5zdGFydCx0aGlzLl9jb21wb3NpdGlvblBvc2l0aW9uLmVuZCk7dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChlLCEwKX19X2hhbmRsZUFueVRleHRhcmVhQ2hhbmdlcygpe2NvbnN0IGU9dGhpcy5fdGV4dGFyZWEudmFsdWU7c2V0VGltZW91dCgoKCk9PntpZighdGhpcy5faXNDb21wb3Npbmcpe2NvbnN0IHQ9dGhpcy5fdGV4dGFyZWEudmFsdWUsaT10LnJlcGxhY2UoZSxcIlwiKTt0aGlzLl9kYXRhQWxyZWFkeVNlbnQ9aSx0Lmxlbmd0aD5lLmxlbmd0aD90aGlzLl9jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KGksITApOnQubGVuZ3RoPGUubGVuZ3RoP3RoaXMuX2NvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQoYCR7YS5DMC5ERUx9YCwhMCk6dC5sZW5ndGg9PT1lLmxlbmd0aCYmdCE9PWUmJnRoaXMuX2NvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQodCwhMCl9fSksMCl9dXBkYXRlQ29tcG9zaXRpb25FbGVtZW50cyhlKXtpZih0aGlzLl9pc0NvbXBvc2luZyl7aWYodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIuaXNDdXJzb3JJblZpZXdwb3J0KXtjb25zdCBlPU1hdGgubWluKHRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLngsdGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLTEpLHQ9dGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLmFjdHVhbENlbGxIZWlnaHQsaT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55KnRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0LHM9ZSp0aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoO3RoaXMuX2NvbXBvc2l0aW9uVmlldy5zdHlsZS5sZWZ0PXMrXCJweFwiLHRoaXMuX2NvbXBvc2l0aW9uVmlldy5zdHlsZS50b3A9aStcInB4XCIsdGhpcy5fY29tcG9zaXRpb25WaWV3LnN0eWxlLmhlaWdodD10K1wicHhcIix0aGlzLl9jb21wb3NpdGlvblZpZXcuc3R5bGUubGluZUhlaWdodD10K1wicHhcIix0aGlzLl9jb21wb3NpdGlvblZpZXcuc3R5bGUuZm9udEZhbWlseT10aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmZvbnRGYW1pbHksdGhpcy5fY29tcG9zaXRpb25WaWV3LnN0eWxlLmZvbnRTaXplPXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuZm9udFNpemUrXCJweFwiO2NvbnN0IHI9dGhpcy5fY29tcG9zaXRpb25WaWV3LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3RoaXMuX3RleHRhcmVhLnN0eWxlLmxlZnQ9cytcInB4XCIsdGhpcy5fdGV4dGFyZWEuc3R5bGUudG9wPWkrXCJweFwiLHRoaXMuX3RleHRhcmVhLnN0eWxlLndpZHRoPU1hdGgubWF4KHIud2lkdGgsMSkrXCJweFwiLHRoaXMuX3RleHRhcmVhLnN0eWxlLmhlaWdodD1NYXRoLm1heChyLmhlaWdodCwxKStcInB4XCIsdGhpcy5fdGV4dGFyZWEuc3R5bGUubGluZUhlaWdodD1yLmhlaWdodCtcInB4XCJ9ZXx8c2V0VGltZW91dCgoKCk9PnRoaXMudXBkYXRlQ29tcG9zaXRpb25FbGVtZW50cyghMCkpLDApfX19O2g9cyhbcigyLG8uSUJ1ZmZlclNlcnZpY2UpLHIoMyxvLklPcHRpb25zU2VydmljZSkscig0LG8uSUNvcmVTZXJ2aWNlKSxyKDUsbi5JUmVuZGVyU2VydmljZSldLGgpLHQuQ29tcG9zaXRpb25IZWxwZXI9aH0sOTgwNjooZSx0KT0+e2Z1bmN0aW9uIGkoZSx0LGkpe2NvbnN0IHM9aS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxyPWUuZ2V0Q29tcHV0ZWRTdHlsZShpKSxuPXBhcnNlSW50KHIuZ2V0UHJvcGVydHlWYWx1ZShcInBhZGRpbmctbGVmdFwiKSksbz1wYXJzZUludChyLmdldFByb3BlcnR5VmFsdWUoXCJwYWRkaW5nLXRvcFwiKSk7cmV0dXJuW3QuY2xpZW50WC1zLmxlZnQtbix0LmNsaWVudFktcy50b3Atb119T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5nZXRDb29yZHM9dC5nZXRDb29yZHNSZWxhdGl2ZVRvRWxlbWVudD12b2lkIDAsdC5nZXRDb29yZHNSZWxhdGl2ZVRvRWxlbWVudD1pLHQuZ2V0Q29vcmRzPWZ1bmN0aW9uKGUsdCxzLHIsbixvLGEsaCxjKXtpZighbylyZXR1cm47Y29uc3QgbD1pKGUsdCxzKTtyZXR1cm4gbD8obFswXT1NYXRoLmNlaWwoKGxbMF0rKGM/YS8yOjApKS9hKSxsWzFdPU1hdGguY2VpbChsWzFdL2gpLGxbMF09TWF0aC5taW4oTWF0aC5tYXgobFswXSwxKSxyKyhjPzE6MCkpLGxbMV09TWF0aC5taW4oTWF0aC5tYXgobFsxXSwxKSxuKSxsKTp2b2lkIDB9fSw5NTA0OihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0Lm1vdmVUb0NlbGxTZXF1ZW5jZT12b2lkIDA7Y29uc3Qgcz1pKDI1ODQpO2Z1bmN0aW9uIHIoZSx0LGkscyl7Y29uc3Qgcj1lLW4oaSxlKSxhPXQtbihpLHQpLGw9TWF0aC5hYnMoci1hKS1mdW5jdGlvbihlLHQsaSl7bGV0IHM9MDtjb25zdCByPWUtbihpLGUpLGE9dC1uKGksdCk7Zm9yKGxldCBuPTA7bjxNYXRoLmFicyhyLWEpO24rKyl7Y29uc3QgYT1cIkFcIj09PW8oZSx0KT8tMToxLGg9aS5idWZmZXIubGluZXMuZ2V0KHIrYSpuKTsobnVsbD09aD92b2lkIDA6aC5pc1dyYXBwZWQpJiZzKyt9cmV0dXJuIHN9KGUsdCxpKTtyZXR1cm4gYyhsLGgobyhlLHQpLHMpKX1mdW5jdGlvbiBuKGUsdCl7bGV0IGk9MCxzPWUuYnVmZmVyLmxpbmVzLmdldCh0KSxyPW51bGw9PXM/dm9pZCAwOnMuaXNXcmFwcGVkO2Zvcig7ciYmdD49MCYmdDxlLnJvd3M7KWkrKyxzPWUuYnVmZmVyLmxpbmVzLmdldCgtLXQpLHI9bnVsbD09cz92b2lkIDA6cy5pc1dyYXBwZWQ7cmV0dXJuIGl9ZnVuY3Rpb24gbyhlLHQpe3JldHVybiBlPnQ/XCJBXCI6XCJCXCJ9ZnVuY3Rpb24gYShlLHQsaSxzLHIsbil7bGV0IG89ZSxhPXQsaD1cIlwiO2Zvcig7byE9PWl8fGEhPT1zOylvKz1yPzE6LTEsciYmbz5uLmNvbHMtMT8oaCs9bi5idWZmZXIudHJhbnNsYXRlQnVmZmVyTGluZVRvU3RyaW5nKGEsITEsZSxvKSxvPTAsZT0wLGErKyk6IXImJm88MCYmKGgrPW4uYnVmZmVyLnRyYW5zbGF0ZUJ1ZmZlckxpbmVUb1N0cmluZyhhLCExLDAsZSsxKSxvPW4uY29scy0xLGU9byxhLS0pO3JldHVybiBoK24uYnVmZmVyLnRyYW5zbGF0ZUJ1ZmZlckxpbmVUb1N0cmluZyhhLCExLGUsbyl9ZnVuY3Rpb24gaChlLHQpe2NvbnN0IGk9dD9cIk9cIjpcIltcIjtyZXR1cm4gcy5DMC5FU0MraStlfWZ1bmN0aW9uIGMoZSx0KXtlPU1hdGguZmxvb3IoZSk7bGV0IGk9XCJcIjtmb3IobGV0IHM9MDtzPGU7cysrKWkrPXQ7cmV0dXJuIGl9dC5tb3ZlVG9DZWxsU2VxdWVuY2U9ZnVuY3Rpb24oZSx0LGkscyl7Y29uc3Qgbz1pLmJ1ZmZlci54LGw9aS5idWZmZXIueTtpZighaS5idWZmZXIuaGFzU2Nyb2xsYmFjaylyZXR1cm4gZnVuY3Rpb24oZSx0LGkscyxvLGwpe3JldHVybiAwPT09cih0LHMsbyxsKS5sZW5ndGg/XCJcIjpjKGEoZSx0LGUsdC1uKG8sdCksITEsbykubGVuZ3RoLGgoXCJEXCIsbCkpfShvLGwsMCx0LGkscykrcihsLHQsaSxzKStmdW5jdGlvbihlLHQsaSxzLG8sbCl7bGV0IGQ7ZD1yKHQscyxvLGwpLmxlbmd0aD4wP3MtbihvLHMpOnQ7Y29uc3QgXz1zLHU9ZnVuY3Rpb24oZSx0LGkscyxvLGEpe2xldCBoO3JldHVybiBoPXIoaSxzLG8sYSkubGVuZ3RoPjA/cy1uKG8scyk6dCxlPGkmJmg8PXN8fGU+PWkmJmg8cz9cIkNcIjpcIkRcIn0oZSx0LGkscyxvLGwpO3JldHVybiBjKGEoZSxkLGksXyxcIkNcIj09PXUsbykubGVuZ3RoLGgodSxsKSl9KG8sbCxlLHQsaSxzKTtsZXQgZDtpZihsPT09dClyZXR1cm4gZD1vPmU/XCJEXCI6XCJDXCIsYyhNYXRoLmFicyhvLWUpLGgoZCxzKSk7ZD1sPnQ/XCJEXCI6XCJDXCI7Y29uc3QgXz1NYXRoLmFicyhsLXQpO3JldHVybiBjKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuY29scy1lfShsPnQ/ZTpvLGkpKyhfLTEpKmkuY29scysxKygobD50P286ZSktMSksaChkLHMpKX19LDgwMzY6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVEVYVF9CQVNFTElORT10LkRJTV9PUEFDSVRZPXQuSU5WRVJURURfREVGQVVMVF9DT0xPUj12b2lkIDA7Y29uc3Qgcz1pKDYxMTQpO3QuSU5WRVJURURfREVGQVVMVF9DT0xPUj0yNTcsdC5ESU1fT1BBQ0lUWT0uNSx0LlRFWFRfQkFTRUxJTkU9cy5pc0ZpcmVmb3h8fHMuaXNMZWdhY3lFZGdlP1wiYm90dG9tXCI6XCJpZGVvZ3JhcGhpY1wifSwxNzUyOihlLHQpPT57ZnVuY3Rpb24gaShlKXtyZXR1cm4gNTc1MDg8PWUmJmU8PTU3NTU4fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZXhjbHVkZUZyb21Db250cmFzdFJhdGlvRGVtYW5kcz10LmlzUmVzdHJpY3RlZFBvd2VybGluZUdseXBoPXQuaXNQb3dlcmxpbmVHbHlwaD10LnRocm93SWZGYWxzeT12b2lkIDAsdC50aHJvd0lmRmFsc3k9ZnVuY3Rpb24oZSl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKFwidmFsdWUgbXVzdCBub3QgYmUgZmFsc3lcIik7cmV0dXJuIGV9LHQuaXNQb3dlcmxpbmVHbHlwaD1pLHQuaXNSZXN0cmljdGVkUG93ZXJsaW5lR2x5cGg9ZnVuY3Rpb24oZSl7cmV0dXJuIDU3NTIwPD1lJiZlPD01NzUyN30sdC5leGNsdWRlRnJvbUNvbnRyYXN0UmF0aW9EZW1hbmRzPWZ1bmN0aW9uKGUpe3JldHVybiBpKGUpfHxmdW5jdGlvbihlKXtyZXR1cm4gOTQ3Mjw9ZSYmZTw9OTYzMX0oZSl9fSwxMjk2OmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9tUmVuZGVyZXI9dm9pZCAwO2NvbnN0IG49aSgzNzg3KSxvPWkoODAzNiksYT1pKDg0NCksaD1pKDQ3MjUpLGM9aSgyNTg1KSxsPWkoODQ2MCksZD1pKDgwNTUpLF89aSg5NjMxKSx1PVwieHRlcm0tZG9tLXJlbmRlcmVyLW93bmVyLVwiLGY9XCJ4dGVybS1mb2N1c1wiO2xldCB2PTEsZz1jbGFzcyBleHRlbmRzIGEuRGlzcG9zYWJsZXtjb25zdHJ1Y3RvcihlLHQsaSxzLHIsbyxhLGgsYyxsKXtzdXBlcigpLHRoaXMuX2NvbG9ycz1lLHRoaXMuX2VsZW1lbnQ9dCx0aGlzLl9zY3JlZW5FbGVtZW50PWksdGhpcy5fdmlld3BvcnRFbGVtZW50PXMsdGhpcy5fbGlua2lmaWVyMj1yLHRoaXMuX2NoYXJTaXplU2VydmljZT1hLHRoaXMuX29wdGlvbnNTZXJ2aWNlPWgsdGhpcy5fYnVmZmVyU2VydmljZT1jLHRoaXMuX2NvcmVCcm93c2VyU2VydmljZT1sLHRoaXMuX3Rlcm1pbmFsQ2xhc3M9disrLHRoaXMuX3Jvd0VsZW1lbnRzPVtdLHRoaXMuX3Jvd0NvbnRhaW5lcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMuX3Jvd0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwieHRlcm0tcm93c1wiKSx0aGlzLl9yb3dDb250YWluZXIuc3R5bGUubGluZUhlaWdodD1cIm5vcm1hbFwiLHRoaXMuX3Jvd0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKSx0aGlzLl9yZWZyZXNoUm93RWxlbWVudHModGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLHRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyksdGhpcy5fc2VsZWN0aW9uQ29udGFpbmVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdGhpcy5fc2VsZWN0aW9uQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ4dGVybS1zZWxlY3Rpb25cIiksdGhpcy5fc2VsZWN0aW9uQ29udGFpbmVyLnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLHRoaXMuZGltZW5zaW9ucz17c2NhbGVkQ2hhcldpZHRoOjAsc2NhbGVkQ2hhckhlaWdodDowLHNjYWxlZENlbGxXaWR0aDowLHNjYWxlZENlbGxIZWlnaHQ6MCxzY2FsZWRDaGFyTGVmdDowLHNjYWxlZENoYXJUb3A6MCxzY2FsZWRDYW52YXNXaWR0aDowLHNjYWxlZENhbnZhc0hlaWdodDowLGNhbnZhc1dpZHRoOjAsY2FudmFzSGVpZ2h0OjAsYWN0dWFsQ2VsbFdpZHRoOjAsYWN0dWFsQ2VsbEhlaWdodDowfSx0aGlzLl91cGRhdGVEaW1lbnNpb25zKCksdGhpcy5faW5qZWN0Q3NzKCksdGhpcy5fcm93RmFjdG9yeT1vLmNyZWF0ZUluc3RhbmNlKG4uRG9tUmVuZGVyZXJSb3dGYWN0b3J5LGRvY3VtZW50LHRoaXMuX2NvbG9ycyksdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKHUrdGhpcy5fdGVybWluYWxDbGFzcyksdGhpcy5fc2NyZWVuRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLl9yb3dDb250YWluZXIpLHRoaXMuX3NjcmVlbkVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5fc2VsZWN0aW9uQ29udGFpbmVyKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2xpbmtpZmllcjIub25TaG93TGlua1VuZGVybGluZSgoZT0+dGhpcy5fb25MaW5rSG92ZXIoZSkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9saW5raWZpZXIyLm9uSGlkZUxpbmtVbmRlcmxpbmUoKGU9PnRoaXMuX29uTGlua0xlYXZlKGUpKSkpfWdldCBvblJlcXVlc3RSZWRyYXcoKXtyZXR1cm4obmV3IGwuRXZlbnRFbWl0dGVyKS5ldmVudH1kaXNwb3NlKCl7dGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHUrdGhpcy5fdGVybWluYWxDbGFzcyksKDAsXy5yZW1vdmVFbGVtZW50RnJvbVBhcmVudCkodGhpcy5fcm93Q29udGFpbmVyLHRoaXMuX3NlbGVjdGlvbkNvbnRhaW5lcix0aGlzLl90aGVtZVN0eWxlRWxlbWVudCx0aGlzLl9kaW1lbnNpb25zU3R5bGVFbGVtZW50KSxzdXBlci5kaXNwb3NlKCl9X3VwZGF0ZURpbWVuc2lvbnMoKXtjb25zdCBlPXRoaXMuX2NvcmVCcm93c2VyU2VydmljZS5kcHI7dGhpcy5kaW1lbnNpb25zLnNjYWxlZENoYXJXaWR0aD10aGlzLl9jaGFyU2l6ZVNlcnZpY2Uud2lkdGgqZSx0aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2hhckhlaWdodD1NYXRoLmNlaWwodGhpcy5fY2hhclNpemVTZXJ2aWNlLmhlaWdodCplKSx0aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2VsbFdpZHRoPXRoaXMuZGltZW5zaW9ucy5zY2FsZWRDaGFyV2lkdGgrTWF0aC5yb3VuZCh0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmxldHRlclNwYWNpbmcpLHRoaXMuZGltZW5zaW9ucy5zY2FsZWRDZWxsSGVpZ2h0PU1hdGguZmxvb3IodGhpcy5kaW1lbnNpb25zLnNjYWxlZENoYXJIZWlnaHQqdGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5saW5lSGVpZ2h0KSx0aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2hhckxlZnQ9MCx0aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2hhclRvcD0wLHRoaXMuZGltZW5zaW9ucy5zY2FsZWRDYW52YXNXaWR0aD10aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2VsbFdpZHRoKnRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyx0aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2FudmFzSGVpZ2h0PXRoaXMuZGltZW5zaW9ucy5zY2FsZWRDZWxsSGVpZ2h0KnRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyx0aGlzLmRpbWVuc2lvbnMuY2FudmFzV2lkdGg9TWF0aC5yb3VuZCh0aGlzLmRpbWVuc2lvbnMuc2NhbGVkQ2FudmFzV2lkdGgvZSksdGhpcy5kaW1lbnNpb25zLmNhbnZhc0hlaWdodD1NYXRoLnJvdW5kKHRoaXMuZGltZW5zaW9ucy5zY2FsZWRDYW52YXNIZWlnaHQvZSksdGhpcy5kaW1lbnNpb25zLmFjdHVhbENlbGxXaWR0aD10aGlzLmRpbWVuc2lvbnMuY2FudmFzV2lkdGgvdGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLHRoaXMuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0PXRoaXMuZGltZW5zaW9ucy5jYW52YXNIZWlnaHQvdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzO2Zvcihjb25zdCBlIG9mIHRoaXMuX3Jvd0VsZW1lbnRzKWUuc3R5bGUud2lkdGg9YCR7dGhpcy5kaW1lbnNpb25zLmNhbnZhc1dpZHRofXB4YCxlLnN0eWxlLmhlaWdodD1gJHt0aGlzLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbEhlaWdodH1weGAsZS5zdHlsZS5saW5lSGVpZ2h0PWAke3RoaXMuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0fXB4YCxlLnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCI7dGhpcy5fZGltZW5zaW9uc1N0eWxlRWxlbWVudHx8KHRoaXMuX2RpbWVuc2lvbnNTdHlsZUVsZW1lbnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpLHRoaXMuX3NjcmVlbkVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5fZGltZW5zaW9uc1N0eWxlRWxlbWVudCkpO2NvbnN0IHQ9YCR7dGhpcy5fdGVybWluYWxTZWxlY3Rvcn0gLnh0ZXJtLXJvd3Mgc3BhbiB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgaGVpZ2h0OiAxMDAlOyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB3aWR0aDogJHt0aGlzLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRofXB4fWA7dGhpcy5fZGltZW5zaW9uc1N0eWxlRWxlbWVudC50ZXh0Q29udGVudD10LHRoaXMuX3NlbGVjdGlvbkNvbnRhaW5lci5zdHlsZS5oZWlnaHQ9dGhpcy5fdmlld3BvcnRFbGVtZW50LnN0eWxlLmhlaWdodCx0aGlzLl9zY3JlZW5FbGVtZW50LnN0eWxlLndpZHRoPWAke3RoaXMuZGltZW5zaW9ucy5jYW52YXNXaWR0aH1weGAsdGhpcy5fc2NyZWVuRWxlbWVudC5zdHlsZS5oZWlnaHQ9YCR7dGhpcy5kaW1lbnNpb25zLmNhbnZhc0hlaWdodH1weGB9c2V0Q29sb3JzKGUpe3RoaXMuX2NvbG9ycz1lLHRoaXMuX2luamVjdENzcygpfV9pbmplY3RDc3MoKXt0aGlzLl90aGVtZVN0eWxlRWxlbWVudHx8KHRoaXMuX3RoZW1lU3R5bGVFbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSx0aGlzLl9zY3JlZW5FbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuX3RoZW1lU3R5bGVFbGVtZW50KSk7bGV0IGU9YCR7dGhpcy5fdGVybWluYWxTZWxlY3Rvcn0gLnh0ZXJtLXJvd3MgeyBjb2xvcjogJHt0aGlzLl9jb2xvcnMuZm9yZWdyb3VuZC5jc3N9OyBmb250LWZhbWlseTogJHt0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmZvbnRGYW1pbHl9OyBmb250LXNpemU6ICR7dGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5mb250U2l6ZX1weDt9YDtlKz1gJHt0aGlzLl90ZXJtaW5hbFNlbGVjdG9yfSBzcGFuOm5vdCguJHtuLkJPTERfQ0xBU1N9KSB7IGZvbnQtd2VpZ2h0OiAke3RoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuZm9udFdlaWdodH07fSR7dGhpcy5fdGVybWluYWxTZWxlY3Rvcn0gc3Bhbi4ke24uQk9MRF9DTEFTU30geyBmb250LXdlaWdodDogJHt0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmZvbnRXZWlnaHRCb2xkfTt9JHt0aGlzLl90ZXJtaW5hbFNlbGVjdG9yfSBzcGFuLiR7bi5JVEFMSUNfQ0xBU1N9IHsgZm9udC1zdHlsZTogaXRhbGljO31gLGUrPVwiQGtleWZyYW1lcyBibGlua19ib3hfc2hhZG93X1wiK3RoaXMuX3Rlcm1pbmFsQ2xhc3MrXCIgeyA1MCUgeyAgYm94LXNoYWRvdzogbm9uZTsgfX1cIixlKz1cIkBrZXlmcmFtZXMgYmxpbmtfYmxvY2tfXCIrdGhpcy5fdGVybWluYWxDbGFzcytcIiB7IDAlIHtcIitgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoaXMuX2NvbG9ycy5jdXJzb3IuY3NzfTtgK2AgIGNvbG9yOiAke3RoaXMuX2NvbG9ycy5jdXJzb3JBY2NlbnQuY3NzfTsgfSA1MCUge2ArYCAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGlzLl9jb2xvcnMuY3Vyc29yQWNjZW50LmNzc307YCtgICBjb2xvcjogJHt0aGlzLl9jb2xvcnMuY3Vyc29yLmNzc307IH19YCxlKz1gJHt0aGlzLl90ZXJtaW5hbFNlbGVjdG9yfSAueHRlcm0tcm93czpub3QoLnh0ZXJtLWZvY3VzKSAuJHtuLkNVUlNPUl9DTEFTU30uJHtuLkNVUlNPUl9TVFlMRV9CTE9DS19DTEFTU30geyBvdXRsaW5lOiAxcHggc29saWQgJHt0aGlzLl9jb2xvcnMuY3Vyc29yLmNzc307IG91dGxpbmUtb2Zmc2V0OiAtMXB4O30ke3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9IC54dGVybS1yb3dzLnh0ZXJtLWZvY3VzIC4ke24uQ1VSU09SX0NMQVNTfS4ke24uQ1VSU09SX0JMSU5LX0NMQVNTfTpub3QoLiR7bi5DVVJTT1JfU1RZTEVfQkxPQ0tfQ0xBU1N9KSB7IGFuaW1hdGlvbjogYmxpbmtfYm94X3NoYWRvd19gK3RoaXMuX3Rlcm1pbmFsQ2xhc3MrXCIgMXMgc3RlcC1lbmQgaW5maW5pdGU7fVwiK2Ake3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9IC54dGVybS1yb3dzLnh0ZXJtLWZvY3VzIC4ke24uQ1VSU09SX0NMQVNTfS4ke24uQ1VSU09SX0JMSU5LX0NMQVNTfS4ke24uQ1VSU09SX1NUWUxFX0JMT0NLX0NMQVNTfSB7IGFuaW1hdGlvbjogYmxpbmtfYmxvY2tfYCt0aGlzLl90ZXJtaW5hbENsYXNzK1wiIDFzIHN0ZXAtZW5kIGluZmluaXRlO31cIitgJHt0aGlzLl90ZXJtaW5hbFNlbGVjdG9yfSAueHRlcm0tcm93cy54dGVybS1mb2N1cyAuJHtuLkNVUlNPUl9DTEFTU30uJHtuLkNVUlNPUl9TVFlMRV9CTE9DS19DTEFTU30ge2ArYCBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoaXMuX2NvbG9ycy5jdXJzb3IuY3NzfTtgK2AgY29sb3I6ICR7dGhpcy5fY29sb3JzLmN1cnNvckFjY2VudC5jc3N9O31gK2Ake3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9IC54dGVybS1yb3dzIC4ke24uQ1VSU09SX0NMQVNTfS4ke24uQ1VSU09SX1NUWUxFX0JBUl9DTEFTU30ge2ArYCBib3gtc2hhZG93OiAke3RoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuY3Vyc29yV2lkdGh9cHggMCAwICR7dGhpcy5fY29sb3JzLmN1cnNvci5jc3N9IGluc2V0O31gK2Ake3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9IC54dGVybS1yb3dzIC4ke24uQ1VSU09SX0NMQVNTfS4ke24uQ1VSU09SX1NUWUxFX1VOREVSTElORV9DTEFTU30ge2ArYCBib3gtc2hhZG93OiAwIC0xcHggMCAke3RoaXMuX2NvbG9ycy5jdXJzb3IuY3NzfSBpbnNldDt9YCxlKz1gJHt0aGlzLl90ZXJtaW5hbFNlbGVjdG9yfSAueHRlcm0tc2VsZWN0aW9uIHsgcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDA7IGxlZnQ6IDA7IHotaW5kZXg6IDE7IHBvaW50ZXItZXZlbnRzOiBub25lO30ke3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9LmZvY3VzIC54dGVybS1zZWxlY3Rpb24gZGl2IHsgcG9zaXRpb246IGFic29sdXRlOyBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoaXMuX2NvbG9ycy5zZWxlY3Rpb25CYWNrZ3JvdW5kT3BhcXVlLmNzc307fSR7dGhpcy5fdGVybWluYWxTZWxlY3Rvcn0gLnh0ZXJtLXNlbGVjdGlvbiBkaXYgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGJhY2tncm91bmQtY29sb3I6ICR7dGhpcy5fY29sb3JzLnNlbGVjdGlvbkluYWN0aXZlQmFja2dyb3VuZE9wYXF1ZS5jc3N9O31gLHRoaXMuX2NvbG9ycy5hbnNpLmZvckVhY2goKCh0LGkpPT57ZSs9YCR7dGhpcy5fdGVybWluYWxTZWxlY3Rvcn0gLnh0ZXJtLWZnLSR7aX0geyBjb2xvcjogJHt0LmNzc307IH0ke3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9IC54dGVybS1iZy0ke2l9IHsgYmFja2dyb3VuZC1jb2xvcjogJHt0LmNzc307IH1gfSkpLGUrPWAke3RoaXMuX3Rlcm1pbmFsU2VsZWN0b3J9IC54dGVybS1mZy0ke28uSU5WRVJURURfREVGQVVMVF9DT0xPUn0geyBjb2xvcjogJHtkLmNvbG9yLm9wYXF1ZSh0aGlzLl9jb2xvcnMuYmFja2dyb3VuZCkuY3NzfTsgfSR7dGhpcy5fdGVybWluYWxTZWxlY3Rvcn0gLnh0ZXJtLWJnLSR7by5JTlZFUlRFRF9ERUZBVUxUX0NPTE9SfSB7IGJhY2tncm91bmQtY29sb3I6ICR7dGhpcy5fY29sb3JzLmZvcmVncm91bmQuY3NzfTsgfWAsdGhpcy5fdGhlbWVTdHlsZUVsZW1lbnQudGV4dENvbnRlbnQ9ZX1vbkRldmljZVBpeGVsUmF0aW9DaGFuZ2UoKXt0aGlzLl91cGRhdGVEaW1lbnNpb25zKCl9X3JlZnJlc2hSb3dFbGVtZW50cyhlLHQpe2ZvcihsZXQgZT10aGlzLl9yb3dFbGVtZW50cy5sZW5ndGg7ZTw9dDtlKyspe2NvbnN0IGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt0aGlzLl9yb3dDb250YWluZXIuYXBwZW5kQ2hpbGQoZSksdGhpcy5fcm93RWxlbWVudHMucHVzaChlKX1mb3IoO3RoaXMuX3Jvd0VsZW1lbnRzLmxlbmd0aD50Oyl0aGlzLl9yb3dDb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fcm93RWxlbWVudHMucG9wKCkpfW9uUmVzaXplKGUsdCl7dGhpcy5fcmVmcmVzaFJvd0VsZW1lbnRzKGUsdCksdGhpcy5fdXBkYXRlRGltZW5zaW9ucygpfW9uQ2hhclNpemVDaGFuZ2VkKCl7dGhpcy5fdXBkYXRlRGltZW5zaW9ucygpfW9uQmx1cigpe3RoaXMuX3Jvd0NvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKGYpfW9uRm9jdXMoKXt0aGlzLl9yb3dDb250YWluZXIuY2xhc3NMaXN0LmFkZChmKX1vblNlbGVjdGlvbkNoYW5nZWQoZSx0LGkpe2Zvcig7dGhpcy5fc2VsZWN0aW9uQ29udGFpbmVyLmNoaWxkcmVuLmxlbmd0aDspdGhpcy5fc2VsZWN0aW9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuX3NlbGVjdGlvbkNvbnRhaW5lci5jaGlsZHJlblswXSk7aWYodGhpcy5fcm93RmFjdG9yeS5vblNlbGVjdGlvbkNoYW5nZWQoZSx0LGkpLHRoaXMucmVuZGVyUm93cygwLHRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cy0xKSwhZXx8IXQpcmV0dXJuO2NvbnN0IHM9ZVsxXS10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55ZGlzcCxyPXRbMV0tdGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIueWRpc3Asbj1NYXRoLm1heChzLDApLG89TWF0aC5taW4ocix0aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MtMSk7aWYobj49dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzfHxvPDApcmV0dXJuO2NvbnN0IGE9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO2lmKGkpe2NvbnN0IGk9ZVswXT50WzBdO2EuYXBwZW5kQ2hpbGQodGhpcy5fY3JlYXRlU2VsZWN0aW9uRWxlbWVudChuLGk/dFswXTplWzBdLGk/ZVswXTp0WzBdLG8tbisxKSl9ZWxzZXtjb25zdCBpPXM9PT1uP2VbMF06MCxoPW49PT1yP3RbMF06dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzO2EuYXBwZW5kQ2hpbGQodGhpcy5fY3JlYXRlU2VsZWN0aW9uRWxlbWVudChuLGksaCkpO2NvbnN0IGM9by1uLTE7aWYoYS5hcHBlbmRDaGlsZCh0aGlzLl9jcmVhdGVTZWxlY3Rpb25FbGVtZW50KG4rMSwwLHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyxjKSksbiE9PW8pe2NvbnN0IGU9cj09PW8/dFswXTp0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHM7YS5hcHBlbmRDaGlsZCh0aGlzLl9jcmVhdGVTZWxlY3Rpb25FbGVtZW50KG8sMCxlKSl9fXRoaXMuX3NlbGVjdGlvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChhKX1fY3JlYXRlU2VsZWN0aW9uRWxlbWVudChlLHQsaSxzPTEpe2NvbnN0IHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtyZXR1cm4gci5zdHlsZS5oZWlnaHQ9cyp0aGlzLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbEhlaWdodCtcInB4XCIsci5zdHlsZS50b3A9ZSp0aGlzLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbEhlaWdodCtcInB4XCIsci5zdHlsZS5sZWZ0PXQqdGhpcy5kaW1lbnNpb25zLmFjdHVhbENlbGxXaWR0aCtcInB4XCIsci5zdHlsZS53aWR0aD10aGlzLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoKihpLXQpK1wicHhcIixyfW9uQ3Vyc29yTW92ZSgpe31vbk9wdGlvbnNDaGFuZ2VkKCl7dGhpcy5fdXBkYXRlRGltZW5zaW9ucygpLHRoaXMuX2luamVjdENzcygpfWNsZWFyKCl7Zm9yKGNvbnN0IGUgb2YgdGhpcy5fcm93RWxlbWVudHMpZS5pbm5lclRleHQ9XCJcIn1yZW5kZXJSb3dzKGUsdCl7Y29uc3QgaT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55YmFzZSt0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55LHM9TWF0aC5taW4odGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIueCx0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtMSkscj10aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmN1cnNvckJsaW5rO2ZvcihsZXQgbj1lO248PXQ7bisrKXtjb25zdCBlPXRoaXMuX3Jvd0VsZW1lbnRzW25dO2UuaW5uZXJUZXh0PVwiXCI7Y29uc3QgdD1uK3RoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnlkaXNwLG89dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIubGluZXMuZ2V0KHQpLGE9dGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5jdXJzb3JTdHlsZTtlLmFwcGVuZENoaWxkKHRoaXMuX3Jvd0ZhY3RvcnkuY3JlYXRlUm93KG8sdCx0PT09aSxhLHMscix0aGlzLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoLHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scykpfX1nZXQgX3Rlcm1pbmFsU2VsZWN0b3IoKXtyZXR1cm5gLiR7dX0ke3RoaXMuX3Rlcm1pbmFsQ2xhc3N9YH1fb25MaW5rSG92ZXIoZSl7dGhpcy5fc2V0Q2VsbFVuZGVybGluZShlLngxLGUueDIsZS55MSxlLnkyLGUuY29scywhMCl9X29uTGlua0xlYXZlKGUpe3RoaXMuX3NldENlbGxVbmRlcmxpbmUoZS54MSxlLngyLGUueTEsZS55MixlLmNvbHMsITEpfV9zZXRDZWxsVW5kZXJsaW5lKGUsdCxpLHMscixuKXtmb3IoO2UhPT10fHxpIT09czspe2NvbnN0IHQ9dGhpcy5fcm93RWxlbWVudHNbaV07aWYoIXQpcmV0dXJuO2NvbnN0IHM9dC5jaGlsZHJlbltlXTtzJiYocy5zdHlsZS50ZXh0RGVjb3JhdGlvbj1uP1widW5kZXJsaW5lXCI6XCJub25lXCIpLCsrZT49ciYmKGU9MCxpKyspfX19O2c9cyhbcig1LGMuSUluc3RhbnRpYXRpb25TZXJ2aWNlKSxyKDYsaC5JQ2hhclNpemVTZXJ2aWNlKSxyKDcsYy5JT3B0aW9uc1NlcnZpY2UpLHIoOCxjLklCdWZmZXJTZXJ2aWNlKSxyKDksaC5JQ29yZUJyb3dzZXJTZXJ2aWNlKV0sZyksdC5Eb21SZW5kZXJlcj1nfSwzNzg3OmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRG9tUmVuZGVyZXJSb3dGYWN0b3J5PXQuQ1VSU09SX1NUWUxFX1VOREVSTElORV9DTEFTUz10LkNVUlNPUl9TVFlMRV9CQVJfQ0xBU1M9dC5DVVJTT1JfU1RZTEVfQkxPQ0tfQ0xBU1M9dC5DVVJTT1JfQkxJTktfQ0xBU1M9dC5DVVJTT1JfQ0xBU1M9dC5TVFJJS0VUSFJPVUdIX0NMQVNTPXQuVU5ERVJMSU5FX0NMQVNTPXQuSVRBTElDX0NMQVNTPXQuRElNX0NMQVNTPXQuQk9MRF9DTEFTUz12b2lkIDA7Y29uc3Qgbj1pKDgwMzYpLG89aSg2NDMpLGE9aSg1MTEpLGg9aSgyNTg1KSxjPWkoODA1NSksbD1pKDQ3MjUpLGQ9aSg0MjY5KSxfPWkoMTc1MiksdT1pKDM3MzQpO3QuQk9MRF9DTEFTUz1cInh0ZXJtLWJvbGRcIix0LkRJTV9DTEFTUz1cInh0ZXJtLWRpbVwiLHQuSVRBTElDX0NMQVNTPVwieHRlcm0taXRhbGljXCIsdC5VTkRFUkxJTkVfQ0xBU1M9XCJ4dGVybS11bmRlcmxpbmVcIix0LlNUUklLRVRIUk9VR0hfQ0xBU1M9XCJ4dGVybS1zdHJpa2V0aHJvdWdoXCIsdC5DVVJTT1JfQ0xBU1M9XCJ4dGVybS1jdXJzb3JcIix0LkNVUlNPUl9CTElOS19DTEFTUz1cInh0ZXJtLWN1cnNvci1ibGlua1wiLHQuQ1VSU09SX1NUWUxFX0JMT0NLX0NMQVNTPVwieHRlcm0tY3Vyc29yLWJsb2NrXCIsdC5DVVJTT1JfU1RZTEVfQkFSX0NMQVNTPVwieHRlcm0tY3Vyc29yLWJhclwiLHQuQ1VSU09SX1NUWUxFX1VOREVSTElORV9DTEFTUz1cInh0ZXJtLWN1cnNvci11bmRlcmxpbmVcIjtsZXQgZj1jbGFzc3tjb25zdHJ1Y3RvcihlLHQsaSxzLHIsbixvKXt0aGlzLl9kb2N1bWVudD1lLHRoaXMuX2NvbG9ycz10LHRoaXMuX2NoYXJhY3RlckpvaW5lclNlcnZpY2U9aSx0aGlzLl9vcHRpb25zU2VydmljZT1zLHRoaXMuX2NvcmVCcm93c2VyU2VydmljZT1yLHRoaXMuX2NvcmVTZXJ2aWNlPW4sdGhpcy5fZGVjb3JhdGlvblNlcnZpY2U9byx0aGlzLl93b3JrQ2VsbD1uZXcgYS5DZWxsRGF0YSx0aGlzLl9jb2x1bW5TZWxlY3RNb2RlPSExfXNldENvbG9ycyhlKXt0aGlzLl9jb2xvcnM9ZX1vblNlbGVjdGlvbkNoYW5nZWQoZSx0LGkpe3RoaXMuX3NlbGVjdGlvblN0YXJ0PWUsdGhpcy5fc2VsZWN0aW9uRW5kPXQsdGhpcy5fY29sdW1uU2VsZWN0TW9kZT1pfWNyZWF0ZVJvdyhlLGkscyxyLGEsaCxsLF8pe2NvbnN0IGY9dGhpcy5fZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGc9dGhpcy5fY2hhcmFjdGVySm9pbmVyU2VydmljZS5nZXRKb2luZWRDaGFyYWN0ZXJzKGkpO2xldCBwPTA7Zm9yKGxldCB0PU1hdGgubWluKGUubGVuZ3RoLF8pLTE7dD49MDt0LS0paWYoZS5sb2FkQ2VsbCh0LHRoaXMuX3dvcmtDZWxsKS5nZXRDb2RlKCkhPT1vLk5VTExfQ0VMTF9DT0RFfHxzJiZ0PT09YSl7cD10KzE7YnJlYWt9Zm9yKGxldCBfPTA7XzxwO18rKyl7ZS5sb2FkQ2VsbChfLHRoaXMuX3dvcmtDZWxsKTtsZXQgcD10aGlzLl93b3JrQ2VsbC5nZXRXaWR0aCgpO2lmKDA9PT1wKWNvbnRpbnVlO2xldCBTPSExLG09XyxDPXRoaXMuX3dvcmtDZWxsO2lmKGcubGVuZ3RoPjAmJl89PT1nWzBdWzBdKXtTPSEwO2NvbnN0IHQ9Zy5zaGlmdCgpO0M9bmV3IGQuSm9pbmVkQ2VsbERhdGEodGhpcy5fd29ya0NlbGwsZS50cmFuc2xhdGVUb1N0cmluZyghMCx0WzBdLHRbMV0pLHRbMV0tdFswXSksbT10WzFdLTEscD1DLmdldFdpZHRoKCl9Y29uc3QgYj10aGlzLl9kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtpZihwPjEmJihiLnN0eWxlLndpZHRoPWwqcCtcInB4XCIpLFMmJihiLnN0eWxlLmRpc3BsYXk9XCJpbmxpbmVcIixhPj1fJiZhPD1tJiYoYT1fKSksIXRoaXMuX2NvcmVTZXJ2aWNlLmlzQ3Vyc29ySGlkZGVuJiZzJiZfPT09YSlzd2l0Y2goYi5jbGFzc0xpc3QuYWRkKHQuQ1VSU09SX0NMQVNTKSxoJiZiLmNsYXNzTGlzdC5hZGQodC5DVVJTT1JfQkxJTktfQ0xBU1MpLHIpe2Nhc2VcImJhclwiOmIuY2xhc3NMaXN0LmFkZCh0LkNVUlNPUl9TVFlMRV9CQVJfQ0xBU1MpO2JyZWFrO2Nhc2VcInVuZGVybGluZVwiOmIuY2xhc3NMaXN0LmFkZCh0LkNVUlNPUl9TVFlMRV9VTkRFUkxJTkVfQ0xBU1MpO2JyZWFrO2RlZmF1bHQ6Yi5jbGFzc0xpc3QuYWRkKHQuQ1VSU09SX1NUWUxFX0JMT0NLX0NMQVNTKX1pZihDLmlzQm9sZCgpJiZiLmNsYXNzTGlzdC5hZGQodC5CT0xEX0NMQVNTKSxDLmlzSXRhbGljKCkmJmIuY2xhc3NMaXN0LmFkZCh0LklUQUxJQ19DTEFTUyksQy5pc0RpbSgpJiZiLmNsYXNzTGlzdC5hZGQodC5ESU1fQ0xBU1MpLEMuaXNJbnZpc2libGUoKT9iLnRleHRDb250ZW50PW8uV0hJVEVTUEFDRV9DRUxMX0NIQVI6Yi50ZXh0Q29udGVudD1DLmdldENoYXJzKCl8fG8uV0hJVEVTUEFDRV9DRUxMX0NIQVIsQy5pc1VuZGVybGluZSgpJiYoYi5jbGFzc0xpc3QuYWRkKGAke3QuVU5ERVJMSU5FX0NMQVNTfS0ke0MuZXh0ZW5kZWQudW5kZXJsaW5lU3R5bGV9YCksXCIgXCI9PT1iLnRleHRDb250ZW50JiYoYi5pbm5lckhUTUw9XCImbmJzcDtcIiksIUMuaXNVbmRlcmxpbmVDb2xvckRlZmF1bHQoKSkpaWYoQy5pc1VuZGVybGluZUNvbG9yUkdCKCkpYi5zdHlsZS50ZXh0RGVjb3JhdGlvbkNvbG9yPWByZ2IoJHt1LkF0dHJpYnV0ZURhdGEudG9Db2xvclJHQihDLmdldFVuZGVybGluZUNvbG9yKCkpLmpvaW4oXCIsXCIpfSlgO2Vsc2V7bGV0IGU9Qy5nZXRVbmRlcmxpbmVDb2xvcigpO3RoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuZHJhd0JvbGRUZXh0SW5CcmlnaHRDb2xvcnMmJkMuaXNCb2xkKCkmJmU8OCYmKGUrPTgpLGIuc3R5bGUudGV4dERlY29yYXRpb25Db2xvcj10aGlzLl9jb2xvcnMuYW5zaVtlXS5jc3N9Qy5pc1N0cmlrZXRocm91Z2goKSYmYi5jbGFzc0xpc3QuYWRkKHQuU1RSSUtFVEhST1VHSF9DTEFTUyk7bGV0IHk9Qy5nZXRGZ0NvbG9yKCksdz1DLmdldEZnQ29sb3JNb2RlKCksRT1DLmdldEJnQ29sb3IoKSxMPUMuZ2V0QmdDb2xvck1vZGUoKTtjb25zdCBSPSEhQy5pc0ludmVyc2UoKTtpZihSKXtjb25zdCBlPXk7eT1FLEU9ZTtjb25zdCB0PXc7dz1MLEw9dH1sZXQgayxELEE9ITE7dGhpcy5fZGVjb3JhdGlvblNlcnZpY2UuZm9yRWFjaERlY29yYXRpb25BdENlbGwoXyxpLHZvaWQgMCwoZT0+e1widG9wXCIhPT1lLm9wdGlvbnMubGF5ZXImJkF8fChlLmJhY2tncm91bmRDb2xvclJHQiYmKEw9NTAzMzE2NDgsRT1lLmJhY2tncm91bmRDb2xvclJHQi5yZ2JhPj44JjE2Nzc3MjE1LGs9ZS5iYWNrZ3JvdW5kQ29sb3JSR0IpLGUuZm9yZWdyb3VuZENvbG9yUkdCJiYodz01MDMzMTY0OCx5PWUuZm9yZWdyb3VuZENvbG9yUkdCLnJnYmE+PjgmMTY3NzcyMTUsRD1lLmZvcmVncm91bmRDb2xvclJHQiksQT1cInRvcFwiPT09ZS5vcHRpb25zLmxheWVyKX0pKTtjb25zdCB4PXRoaXMuX2lzQ2VsbEluU2VsZWN0aW9uKF8saSk7bGV0IEI7c3dpdGNoKEF8fHRoaXMuX2NvbG9ycy5zZWxlY3Rpb25Gb3JlZ3JvdW5kJiZ4JiYodz01MDMzMTY0OCx5PXRoaXMuX2NvbG9ycy5zZWxlY3Rpb25Gb3JlZ3JvdW5kLnJnYmE+PjgmMTY3NzcyMTUsRD10aGlzLl9jb2xvcnMuc2VsZWN0aW9uRm9yZWdyb3VuZCkseCYmKGs9dGhpcy5fY29yZUJyb3dzZXJTZXJ2aWNlLmlzRm9jdXNlZD90aGlzLl9jb2xvcnMuc2VsZWN0aW9uQmFja2dyb3VuZE9wYXF1ZTp0aGlzLl9jb2xvcnMuc2VsZWN0aW9uSW5hY3RpdmVCYWNrZ3JvdW5kT3BhcXVlLEE9ITApLEEmJmIuY2xhc3NMaXN0LmFkZChcInh0ZXJtLWRlY29yYXRpb24tdG9wXCIpLEwpe2Nhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpCPXRoaXMuX2NvbG9ycy5hbnNpW0VdLGIuY2xhc3NMaXN0LmFkZChgeHRlcm0tYmctJHtFfWApO2JyZWFrO2Nhc2UgNTAzMzE2NDg6Qj1jLnJnYmEudG9Db2xvcihFPj4xNixFPj44JjI1NSwyNTUmRSksdGhpcy5fYWRkU3R5bGUoYixgYmFja2dyb3VuZC1jb2xvcjojJHt2KChFPj4+MCkudG9TdHJpbmcoMTYpLFwiMFwiLDYpfWApO2JyZWFrO2RlZmF1bHQ6Uj8oQj10aGlzLl9jb2xvcnMuZm9yZWdyb3VuZCxiLmNsYXNzTGlzdC5hZGQoYHh0ZXJtLWJnLSR7bi5JTlZFUlRFRF9ERUZBVUxUX0NPTE9SfWApKTpCPXRoaXMuX2NvbG9ycy5iYWNrZ3JvdW5kfXN3aXRjaChrfHxDLmlzRGltKCkmJihrPWMuY29sb3IubXVsdGlwbHlPcGFjaXR5KEIsLjUpKSx3KXtjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Qy5pc0JvbGQoKSYmeTw4JiZ0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmRyYXdCb2xkVGV4dEluQnJpZ2h0Q29sb3JzJiYoeSs9OCksdGhpcy5fYXBwbHlNaW5pbXVtQ29udHJhc3QoYixCLHRoaXMuX2NvbG9ycy5hbnNpW3ldLEMsayx2b2lkIDApfHxiLmNsYXNzTGlzdC5hZGQoYHh0ZXJtLWZnLSR7eX1gKTticmVhaztjYXNlIDUwMzMxNjQ4OmNvbnN0IGU9Yy5yZ2JhLnRvQ29sb3IoeT4+MTYmMjU1LHk+PjgmMjU1LDI1NSZ5KTt0aGlzLl9hcHBseU1pbmltdW1Db250cmFzdChiLEIsZSxDLGssRCl8fHRoaXMuX2FkZFN0eWxlKGIsYGNvbG9yOiMke3YoeS50b1N0cmluZygxNiksXCIwXCIsNil9YCk7YnJlYWs7ZGVmYXVsdDp0aGlzLl9hcHBseU1pbmltdW1Db250cmFzdChiLEIsdGhpcy5fY29sb3JzLmZvcmVncm91bmQsQyxrLHZvaWQgMCl8fFImJmIuY2xhc3NMaXN0LmFkZChgeHRlcm0tZmctJHtuLklOVkVSVEVEX0RFRkFVTFRfQ09MT1J9YCl9Zi5hcHBlbmRDaGlsZChiKSxfPW19cmV0dXJuIGZ9X2FwcGx5TWluaW11bUNvbnRyYXN0KGUsdCxpLHMscixuKXtpZigxPT09dGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5taW5pbXVtQ29udHJhc3RSYXRpb3x8KDAsXy5leGNsdWRlRnJvbUNvbnRyYXN0UmF0aW9EZW1hbmRzKShzLmdldENvZGUoKSkpcmV0dXJuITE7bGV0IG87cmV0dXJuIHJ8fG58fChvPXRoaXMuX2NvbG9ycy5jb250cmFzdENhY2hlLmdldENvbG9yKHQucmdiYSxpLnJnYmEpKSx2b2lkIDA9PT1vJiYobz1jLmNvbG9yLmVuc3VyZUNvbnRyYXN0UmF0aW8ocnx8dCxufHxpLHRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMubWluaW11bUNvbnRyYXN0UmF0aW8pLHRoaXMuX2NvbG9ycy5jb250cmFzdENhY2hlLnNldENvbG9yKChyfHx0KS5yZ2JhLChufHxpKS5yZ2JhLG51bGwhPW8/bzpudWxsKSksISFvJiYodGhpcy5fYWRkU3R5bGUoZSxgY29sb3I6JHtvLmNzc31gKSwhMCl9X2FkZFN0eWxlKGUsdCl7ZS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLGAke2UuZ2V0QXR0cmlidXRlKFwic3R5bGVcIil8fFwiXCJ9JHt0fTtgKX1faXNDZWxsSW5TZWxlY3Rpb24oZSx0KXtjb25zdCBpPXRoaXMuX3NlbGVjdGlvblN0YXJ0LHM9dGhpcy5fc2VsZWN0aW9uRW5kO3JldHVybiEoIWl8fCFzKSYmKHRoaXMuX2NvbHVtblNlbGVjdE1vZGU/aVswXTw9c1swXT9lPj1pWzBdJiZ0Pj1pWzFdJiZlPHNbMF0mJnQ8PXNbMV06ZTxpWzBdJiZ0Pj1pWzFdJiZlPj1zWzBdJiZ0PD1zWzFdOnQ+aVsxXSYmdDxzWzFdfHxpWzFdPT09c1sxXSYmdD09PWlbMV0mJmU+PWlbMF0mJmU8c1swXXx8aVsxXTxzWzFdJiZ0PT09c1sxXSYmZTxzWzBdfHxpWzFdPHNbMV0mJnQ9PT1pWzFdJiZlPj1pWzBdKX19O2Z1bmN0aW9uIHYoZSx0LGkpe2Zvcig7ZS5sZW5ndGg8aTspZT10K2U7cmV0dXJuIGV9Zj1zKFtyKDIsbC5JQ2hhcmFjdGVySm9pbmVyU2VydmljZSkscigzLGguSU9wdGlvbnNTZXJ2aWNlKSxyKDQsbC5JQ29yZUJyb3dzZXJTZXJ2aWNlKSxyKDUsaC5JQ29yZVNlcnZpY2UpLHIoNixoLklEZWNvcmF0aW9uU2VydmljZSldLGYpLHQuRG9tUmVuZGVyZXJSb3dGYWN0b3J5PWZ9LDQ1NjooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuU2VsZWN0aW9uTW9kZWw9dm9pZCAwLHQuU2VsZWN0aW9uTW9kZWw9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dGhpcy5fYnVmZmVyU2VydmljZT1lLHRoaXMuaXNTZWxlY3RBbGxBY3RpdmU9ITEsdGhpcy5zZWxlY3Rpb25TdGFydExlbmd0aD0wfWNsZWFyU2VsZWN0aW9uKCl7dGhpcy5zZWxlY3Rpb25TdGFydD12b2lkIDAsdGhpcy5zZWxlY3Rpb25FbmQ9dm9pZCAwLHRoaXMuaXNTZWxlY3RBbGxBY3RpdmU9ITEsdGhpcy5zZWxlY3Rpb25TdGFydExlbmd0aD0wfWdldCBmaW5hbFNlbGVjdGlvblN0YXJ0KCl7cmV0dXJuIHRoaXMuaXNTZWxlY3RBbGxBY3RpdmU/WzAsMF06dGhpcy5zZWxlY3Rpb25FbmQmJnRoaXMuc2VsZWN0aW9uU3RhcnQmJnRoaXMuYXJlU2VsZWN0aW9uVmFsdWVzUmV2ZXJzZWQoKT90aGlzLnNlbGVjdGlvbkVuZDp0aGlzLnNlbGVjdGlvblN0YXJ0fWdldCBmaW5hbFNlbGVjdGlvbkVuZCgpe2lmKHRoaXMuaXNTZWxlY3RBbGxBY3RpdmUpcmV0dXJuW3RoaXMuX2J1ZmZlclNlcnZpY2UuY29scyx0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55YmFzZSt0aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MtMV07aWYodGhpcy5zZWxlY3Rpb25TdGFydCl7aWYoIXRoaXMuc2VsZWN0aW9uRW5kfHx0aGlzLmFyZVNlbGVjdGlvblZhbHVlc1JldmVyc2VkKCkpe2NvbnN0IGU9dGhpcy5zZWxlY3Rpb25TdGFydFswXSt0aGlzLnNlbGVjdGlvblN0YXJ0TGVuZ3RoO3JldHVybiBlPnRoaXMuX2J1ZmZlclNlcnZpY2UuY29scz9lJXRoaXMuX2J1ZmZlclNlcnZpY2UuY29scz09MD9bdGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLHRoaXMuc2VsZWN0aW9uU3RhcnRbMV0rTWF0aC5mbG9vcihlL3RoaXMuX2J1ZmZlclNlcnZpY2UuY29scyktMV06W2UldGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLHRoaXMuc2VsZWN0aW9uU3RhcnRbMV0rTWF0aC5mbG9vcihlL3RoaXMuX2J1ZmZlclNlcnZpY2UuY29scyldOltlLHRoaXMuc2VsZWN0aW9uU3RhcnRbMV1dfWlmKHRoaXMuc2VsZWN0aW9uU3RhcnRMZW5ndGgmJnRoaXMuc2VsZWN0aW9uRW5kWzFdPT09dGhpcy5zZWxlY3Rpb25TdGFydFsxXSl7Y29uc3QgZT10aGlzLnNlbGVjdGlvblN0YXJ0WzBdK3RoaXMuc2VsZWN0aW9uU3RhcnRMZW5ndGg7cmV0dXJuIGU+dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzP1tlJXRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyx0aGlzLnNlbGVjdGlvblN0YXJ0WzFdK01hdGguZmxvb3IoZS90aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMpXTpbTWF0aC5tYXgoZSx0aGlzLnNlbGVjdGlvbkVuZFswXSksdGhpcy5zZWxlY3Rpb25FbmRbMV1dfXJldHVybiB0aGlzLnNlbGVjdGlvbkVuZH19YXJlU2VsZWN0aW9uVmFsdWVzUmV2ZXJzZWQoKXtjb25zdCBlPXRoaXMuc2VsZWN0aW9uU3RhcnQsdD10aGlzLnNlbGVjdGlvbkVuZDtyZXR1cm4hKCFlfHwhdCkmJihlWzFdPnRbMV18fGVbMV09PT10WzFdJiZlWzBdPnRbMF0pfW9uVHJpbShlKXtyZXR1cm4gdGhpcy5zZWxlY3Rpb25TdGFydCYmKHRoaXMuc2VsZWN0aW9uU3RhcnRbMV0tPWUpLHRoaXMuc2VsZWN0aW9uRW5kJiYodGhpcy5zZWxlY3Rpb25FbmRbMV0tPWUpLHRoaXMuc2VsZWN0aW9uRW5kJiZ0aGlzLnNlbGVjdGlvbkVuZFsxXTwwPyh0aGlzLmNsZWFyU2VsZWN0aW9uKCksITApOih0aGlzLnNlbGVjdGlvblN0YXJ0JiZ0aGlzLnNlbGVjdGlvblN0YXJ0WzFdPDAmJih0aGlzLnNlbGVjdGlvblN0YXJ0WzFdPTApLCExKX19fSw0Mjg6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LGkscyl7dmFyIHIsbj1hcmd1bWVudHMubGVuZ3RoLG89bjwzP3Q6bnVsbD09PXM/cz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk6cztpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlvPVJlZmxlY3QuZGVjb3JhdGUoZSx0LGkscyk7ZWxzZSBmb3IodmFyIGE9ZS5sZW5ndGgtMTthPj0wO2EtLSkocj1lW2FdKSYmKG89KG48Mz9yKG8pOm4+Mz9yKHQsaSxvKTpyKHQsaSkpfHxvKTtyZXR1cm4gbj4zJiZvJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLG8pLG99LHI9dGhpcyYmdGhpcy5fX3BhcmFtfHxmdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihpLHMpe3QoaSxzLGUpfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5DaGFyU2l6ZVNlcnZpY2U9dm9pZCAwO2NvbnN0IG49aSgyNTg1KSxvPWkoODQ2MCk7bGV0IGE9Y2xhc3N7Y29uc3RydWN0b3IoZSx0LGkpe3RoaXMuX29wdGlvbnNTZXJ2aWNlPWksdGhpcy53aWR0aD0wLHRoaXMuaGVpZ2h0PTAsdGhpcy5fb25DaGFyU2l6ZUNoYW5nZT1uZXcgby5FdmVudEVtaXR0ZXIsdGhpcy5fbWVhc3VyZVN0cmF0ZWd5PW5ldyBoKGUsdCx0aGlzLl9vcHRpb25zU2VydmljZSl9Z2V0IGhhc1ZhbGlkU2l6ZSgpe3JldHVybiB0aGlzLndpZHRoPjAmJnRoaXMuaGVpZ2h0PjB9Z2V0IG9uQ2hhclNpemVDaGFuZ2UoKXtyZXR1cm4gdGhpcy5fb25DaGFyU2l6ZUNoYW5nZS5ldmVudH1tZWFzdXJlKCl7Y29uc3QgZT10aGlzLl9tZWFzdXJlU3RyYXRlZ3kubWVhc3VyZSgpO2Uud2lkdGg9PT10aGlzLndpZHRoJiZlLmhlaWdodD09PXRoaXMuaGVpZ2h0fHwodGhpcy53aWR0aD1lLndpZHRoLHRoaXMuaGVpZ2h0PWUuaGVpZ2h0LHRoaXMuX29uQ2hhclNpemVDaGFuZ2UuZmlyZSgpKX19O2E9cyhbcigyLG4uSU9wdGlvbnNTZXJ2aWNlKV0sYSksdC5DaGFyU2l6ZVNlcnZpY2U9YTtjbGFzcyBoe2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLl9kb2N1bWVudD1lLHRoaXMuX3BhcmVudEVsZW1lbnQ9dCx0aGlzLl9vcHRpb25zU2VydmljZT1pLHRoaXMuX3Jlc3VsdD17d2lkdGg6MCxoZWlnaHQ6MH0sdGhpcy5fbWVhc3VyZUVsZW1lbnQ9dGhpcy5fZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIiksdGhpcy5fbWVhc3VyZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInh0ZXJtLWNoYXItbWVhc3VyZS1lbGVtZW50XCIpLHRoaXMuX21lYXN1cmVFbGVtZW50LnRleHRDb250ZW50PVwiV1wiLHRoaXMuX21lYXN1cmVFbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLHRoaXMuX3BhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5fbWVhc3VyZUVsZW1lbnQpfW1lYXN1cmUoKXt0aGlzLl9tZWFzdXJlRWxlbWVudC5zdHlsZS5mb250RmFtaWx5PXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuZm9udEZhbWlseSx0aGlzLl9tZWFzdXJlRWxlbWVudC5zdHlsZS5mb250U2l6ZT1gJHt0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmZvbnRTaXplfXB4YDtjb25zdCBlPXRoaXMuX21lYXN1cmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybiAwIT09ZS53aWR0aCYmMCE9PWUuaGVpZ2h0JiYodGhpcy5fcmVzdWx0LndpZHRoPWUud2lkdGgsdGhpcy5fcmVzdWx0LmhlaWdodD1NYXRoLmNlaWwoZS5oZWlnaHQpKSx0aGlzLl9yZXN1bHR9fX0sNDI2OTpmdW5jdGlvbihlLHQsaSl7dmFyIHM9dGhpcyYmdGhpcy5fX2RlY29yYXRlfHxmdW5jdGlvbihlLHQsaSxzKXt2YXIgcixuPWFyZ3VtZW50cy5sZW5ndGgsbz1uPDM/dDpudWxsPT09cz9zPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxpKTpzO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBSZWZsZWN0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBSZWZsZWN0LmRlY29yYXRlKW89UmVmbGVjdC5kZWNvcmF0ZShlLHQsaSxzKTtlbHNlIGZvcih2YXIgYT1lLmxlbmd0aC0xO2E+PTA7YS0tKShyPWVbYV0pJiYobz0objwzP3Iobyk6bj4zP3IodCxpLG8pOnIodCxpKSl8fG8pO3JldHVybiBuPjMmJm8mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGksbyksb30scj10aGlzJiZ0aGlzLl9fcGFyYW18fGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkscyl7dChpLHMsZSl9fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkNoYXJhY3RlckpvaW5lclNlcnZpY2U9dC5Kb2luZWRDZWxsRGF0YT12b2lkIDA7Y29uc3Qgbj1pKDM3MzQpLG89aSg2NDMpLGE9aSg1MTEpLGg9aSgyNTg1KTtjbGFzcyBjIGV4dGVuZHMgbi5BdHRyaWJ1dGVEYXRhe2NvbnN0cnVjdG9yKGUsdCxpKXtzdXBlcigpLHRoaXMuY29udGVudD0wLHRoaXMuY29tYmluZWREYXRhPVwiXCIsdGhpcy5mZz1lLmZnLHRoaXMuYmc9ZS5iZyx0aGlzLmNvbWJpbmVkRGF0YT10LHRoaXMuX3dpZHRoPWl9aXNDb21iaW5lZCgpe3JldHVybiAyMDk3MTUyfWdldFdpZHRoKCl7cmV0dXJuIHRoaXMuX3dpZHRofWdldENoYXJzKCl7cmV0dXJuIHRoaXMuY29tYmluZWREYXRhfWdldENvZGUoKXtyZXR1cm4gMjA5NzE1MX1zZXRGcm9tQ2hhckRhdGEoZSl7dGhyb3cgbmV3IEVycm9yKFwibm90IGltcGxlbWVudGVkXCIpfWdldEFzQ2hhckRhdGEoKXtyZXR1cm5bdGhpcy5mZyx0aGlzLmdldENoYXJzKCksdGhpcy5nZXRXaWR0aCgpLHRoaXMuZ2V0Q29kZSgpXX19dC5Kb2luZWRDZWxsRGF0YT1jO2xldCBsPWNsYXNzIGV7Y29uc3RydWN0b3IoZSl7dGhpcy5fYnVmZmVyU2VydmljZT1lLHRoaXMuX2NoYXJhY3RlckpvaW5lcnM9W10sdGhpcy5fbmV4dENoYXJhY3RlckpvaW5lcklkPTAsdGhpcy5fd29ya0NlbGw9bmV3IGEuQ2VsbERhdGF9cmVnaXN0ZXIoZSl7Y29uc3QgdD17aWQ6dGhpcy5fbmV4dENoYXJhY3RlckpvaW5lcklkKyssaGFuZGxlcjplfTtyZXR1cm4gdGhpcy5fY2hhcmFjdGVySm9pbmVycy5wdXNoKHQpLHQuaWR9ZGVyZWdpc3RlcihlKXtmb3IobGV0IHQ9MDt0PHRoaXMuX2NoYXJhY3RlckpvaW5lcnMubGVuZ3RoO3QrKylpZih0aGlzLl9jaGFyYWN0ZXJKb2luZXJzW3RdLmlkPT09ZSlyZXR1cm4gdGhpcy5fY2hhcmFjdGVySm9pbmVycy5zcGxpY2UodCwxKSwhMDtyZXR1cm4hMX1nZXRKb2luZWRDaGFyYWN0ZXJzKGUpe2lmKDA9PT10aGlzLl9jaGFyYWN0ZXJKb2luZXJzLmxlbmd0aClyZXR1cm5bXTtjb25zdCB0PXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLmxpbmVzLmdldChlKTtpZighdHx8MD09PXQubGVuZ3RoKXJldHVybltdO2NvbnN0IGk9W10scz10LnRyYW5zbGF0ZVRvU3RyaW5nKCEwKTtsZXQgcj0wLG49MCxhPTAsaD10LmdldEZnKDApLGM9dC5nZXRCZygwKTtmb3IobGV0IGU9MDtlPHQuZ2V0VHJpbW1lZExlbmd0aCgpO2UrKylpZih0LmxvYWRDZWxsKGUsdGhpcy5fd29ya0NlbGwpLDAhPT10aGlzLl93b3JrQ2VsbC5nZXRXaWR0aCgpKXtpZih0aGlzLl93b3JrQ2VsbC5mZyE9PWh8fHRoaXMuX3dvcmtDZWxsLmJnIT09Yyl7aWYoZS1yPjEpe2NvbnN0IGU9dGhpcy5fZ2V0Sm9pbmVkUmFuZ2VzKHMsYSxuLHQscik7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0KyspaS5wdXNoKGVbdF0pfXI9ZSxhPW4saD10aGlzLl93b3JrQ2VsbC5mZyxjPXRoaXMuX3dvcmtDZWxsLmJnfW4rPXRoaXMuX3dvcmtDZWxsLmdldENoYXJzKCkubGVuZ3RofHxvLldISVRFU1BBQ0VfQ0VMTF9DSEFSLmxlbmd0aH1pZih0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtcj4xKXtjb25zdCBlPXRoaXMuX2dldEpvaW5lZFJhbmdlcyhzLGEsbix0LHIpO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKWkucHVzaChlW3RdKX1yZXR1cm4gaX1fZ2V0Sm9pbmVkUmFuZ2VzKHQsaSxzLHIsbil7Y29uc3Qgbz10LnN1YnN0cmluZyhpLHMpO2xldCBhPVtdO3RyeXthPXRoaXMuX2NoYXJhY3RlckpvaW5lcnNbMF0uaGFuZGxlcihvKX1jYXRjaChlKXtjb25zb2xlLmVycm9yKGUpfWZvcihsZXQgdD0xO3Q8dGhpcy5fY2hhcmFjdGVySm9pbmVycy5sZW5ndGg7dCsrKXRyeXtjb25zdCBpPXRoaXMuX2NoYXJhY3RlckpvaW5lcnNbdF0uaGFuZGxlcihvKTtmb3IobGV0IHQ9MDt0PGkubGVuZ3RoO3QrKyllLl9tZXJnZVJhbmdlcyhhLGlbdF0pfWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSl9cmV0dXJuIHRoaXMuX3N0cmluZ1Jhbmdlc1RvQ2VsbFJhbmdlcyhhLHIsbiksYX1fc3RyaW5nUmFuZ2VzVG9DZWxsUmFuZ2VzKGUsdCxpKXtsZXQgcz0wLHI9ITEsbj0wLGE9ZVtzXTtpZihhKXtmb3IobGV0IGg9aTtoPHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scztoKyspe2NvbnN0IGk9dC5nZXRXaWR0aChoKSxjPXQuZ2V0U3RyaW5nKGgpLmxlbmd0aHx8by5XSElURVNQQUNFX0NFTExfQ0hBUi5sZW5ndGg7aWYoMCE9PWkpe2lmKCFyJiZhWzBdPD1uJiYoYVswXT1oLHI9ITApLGFbMV08PW4pe2lmKGFbMV09aCxhPWVbKytzXSwhYSlicmVhazthWzBdPD1uPyhhWzBdPWgscj0hMCk6cj0hMX1uKz1jfX1hJiYoYVsxXT10aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMpfX1zdGF0aWMgX21lcmdlUmFuZ2VzKGUsdCl7bGV0IGk9ITE7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspe2NvbnN0IHI9ZVtzXTtpZihpKXtpZih0WzFdPD1yWzBdKXJldHVybiBlW3MtMV1bMV09dFsxXSxlO2lmKHRbMV08PXJbMV0pcmV0dXJuIGVbcy0xXVsxXT1NYXRoLm1heCh0WzFdLHJbMV0pLGUuc3BsaWNlKHMsMSksZTtlLnNwbGljZShzLDEpLHMtLX1lbHNle2lmKHRbMV08PXJbMF0pcmV0dXJuIGUuc3BsaWNlKHMsMCx0KSxlO2lmKHRbMV08PXJbMV0pcmV0dXJuIHJbMF09TWF0aC5taW4odFswXSxyWzBdKSxlO3RbMF08clsxXSYmKHJbMF09TWF0aC5taW4odFswXSxyWzBdKSxpPSEwKX19cmV0dXJuIGk/ZVtlLmxlbmd0aC0xXVsxXT10WzFdOmUucHVzaCh0KSxlfX07bD1zKFtyKDAsaC5JQnVmZmVyU2VydmljZSldLGwpLHQuQ2hhcmFjdGVySm9pbmVyU2VydmljZT1sfSw1MTE0OihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Db3JlQnJvd3NlclNlcnZpY2U9dm9pZCAwLHQuQ29yZUJyb3dzZXJTZXJ2aWNlPWNsYXNze2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5fdGV4dGFyZWE9ZSx0aGlzLndpbmRvdz10fWdldCBkcHIoKXtyZXR1cm4gdGhpcy53aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb31nZXQgaXNGb2N1c2VkKCl7cmV0dXJuKHRoaXMuX3RleHRhcmVhLmdldFJvb3ROb2RlP3RoaXMuX3RleHRhcmVhLmdldFJvb3ROb2RlKCk6dGhpcy5fdGV4dGFyZWEub3duZXJEb2N1bWVudCkuYWN0aXZlRWxlbWVudD09PXRoaXMuX3RleHRhcmVhJiZ0aGlzLl90ZXh0YXJlYS5vd25lckRvY3VtZW50Lmhhc0ZvY3VzKCl9fX0sODkzNDpmdW5jdGlvbihlLHQsaSl7dmFyIHM9dGhpcyYmdGhpcy5fX2RlY29yYXRlfHxmdW5jdGlvbihlLHQsaSxzKXt2YXIgcixuPWFyZ3VtZW50cy5sZW5ndGgsbz1uPDM/dDpudWxsPT09cz9zPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxpKTpzO2lmKFwib2JqZWN0XCI9PXR5cGVvZiBSZWZsZWN0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBSZWZsZWN0LmRlY29yYXRlKW89UmVmbGVjdC5kZWNvcmF0ZShlLHQsaSxzKTtlbHNlIGZvcih2YXIgYT1lLmxlbmd0aC0xO2E+PTA7YS0tKShyPWVbYV0pJiYobz0objwzP3Iobyk6bj4zP3IodCxpLG8pOnIodCxpKSl8fG8pO3JldHVybiBuPjMmJm8mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGksbyksb30scj10aGlzJiZ0aGlzLl9fcGFyYW18fGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkscyl7dChpLHMsZSl9fTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0Lk1vdXNlU2VydmljZT12b2lkIDA7Y29uc3Qgbj1pKDQ3MjUpLG89aSg5ODA2KTtsZXQgYT1jbGFzc3tjb25zdHJ1Y3RvcihlLHQpe3RoaXMuX3JlbmRlclNlcnZpY2U9ZSx0aGlzLl9jaGFyU2l6ZVNlcnZpY2U9dH1nZXRDb29yZHMoZSx0LGkscyxyKXtyZXR1cm4oMCxvLmdldENvb3Jkcykod2luZG93LGUsdCxpLHMsdGhpcy5fY2hhclNpemVTZXJ2aWNlLmhhc1ZhbGlkU2l6ZSx0aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoLHRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0LHIpfWdldE1vdXNlUmVwb3J0Q29vcmRzKGUsdCl7Y29uc3QgaT0oMCxvLmdldENvb3Jkc1JlbGF0aXZlVG9FbGVtZW50KSh3aW5kb3csZSx0KTtpZighKCF0aGlzLl9jaGFyU2l6ZVNlcnZpY2UuaGFzVmFsaWRTaXplfHxpWzBdPDB8fGlbMV08MHx8aVswXT49dGhpcy5fcmVuZGVyU2VydmljZS5kaW1lbnNpb25zLmNhbnZhc1dpZHRofHxpWzFdPj10aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuY2FudmFzSGVpZ2h0KSlyZXR1cm57Y29sOk1hdGguZmxvb3IoaVswXS90aGlzLl9yZW5kZXJTZXJ2aWNlLmRpbWVuc2lvbnMuYWN0dWFsQ2VsbFdpZHRoKSxyb3c6TWF0aC5mbG9vcihpWzFdL3RoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5hY3R1YWxDZWxsSGVpZ2h0KSx4Ok1hdGguZmxvb3IoaVswXSkseTpNYXRoLmZsb29yKGlbMV0pfX19O2E9cyhbcigwLG4uSVJlbmRlclNlcnZpY2UpLHIoMSxuLklDaGFyU2l6ZVNlcnZpY2UpXSxhKSx0Lk1vdXNlU2VydmljZT1hfSwzMjMwOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuUmVuZGVyU2VydmljZT12b2lkIDA7Y29uc3Qgbj1pKDYxOTMpLG89aSg4NDYwKSxhPWkoODQ0KSxoPWkoNTU5NiksYz1pKDM2NTYpLGw9aSgyNTg1KSxkPWkoNDcyNSk7bGV0IF89Y2xhc3MgZXh0ZW5kcyBhLkRpc3Bvc2FibGV7Y29uc3RydWN0b3IoZSx0LGkscyxyLGEsbCxkKXtpZihzdXBlcigpLHRoaXMuX3JlbmRlcmVyPWUsdGhpcy5fcm93Q291bnQ9dCx0aGlzLl9jaGFyU2l6ZVNlcnZpY2U9cix0aGlzLl9pc1BhdXNlZD0hMSx0aGlzLl9uZWVkc0Z1bGxSZWZyZXNoPSExLHRoaXMuX2lzTmV4dFJlbmRlclJlZHJhd09ubHk9ITAsdGhpcy5fbmVlZHNTZWxlY3Rpb25SZWZyZXNoPSExLHRoaXMuX2NhbnZhc1dpZHRoPTAsdGhpcy5fY2FudmFzSGVpZ2h0PTAsdGhpcy5fc2VsZWN0aW9uU3RhdGU9e3N0YXJ0OnZvaWQgMCxlbmQ6dm9pZCAwLGNvbHVtblNlbGVjdE1vZGU6ITF9LHRoaXMuX29uRGltZW5zaW9uc0NoYW5nZT1uZXcgby5FdmVudEVtaXR0ZXIsdGhpcy5fb25SZW5kZXJlZFZpZXdwb3J0Q2hhbmdlPW5ldyBvLkV2ZW50RW1pdHRlcix0aGlzLl9vblJlbmRlcj1uZXcgby5FdmVudEVtaXR0ZXIsdGhpcy5fb25SZWZyZXNoUmVxdWVzdD1uZXcgby5FdmVudEVtaXR0ZXIsdGhpcy5yZWdpc3Rlcih7ZGlzcG9zZTooKT0+dGhpcy5fcmVuZGVyZXIuZGlzcG9zZSgpfSksdGhpcy5fcmVuZGVyRGVib3VuY2VyPW5ldyBuLlJlbmRlckRlYm91bmNlcihkLndpbmRvdywoKGUsdCk9PnRoaXMuX3JlbmRlclJvd3MoZSx0KSkpLHRoaXMucmVnaXN0ZXIodGhpcy5fcmVuZGVyRGVib3VuY2VyKSx0aGlzLl9zY3JlZW5EcHJNb25pdG9yPW5ldyBoLlNjcmVlbkRwck1vbml0b3IoZC53aW5kb3cpLHRoaXMuX3NjcmVlbkRwck1vbml0b3Iuc2V0TGlzdGVuZXIoKCgpPT50aGlzLm9uRGV2aWNlUGl4ZWxSYXRpb0NoYW5nZSgpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9zY3JlZW5EcHJNb25pdG9yKSx0aGlzLnJlZ2lzdGVyKGwub25SZXNpemUoKCgpPT50aGlzLl9mdWxsUmVmcmVzaCgpKSkpLHRoaXMucmVnaXN0ZXIobC5idWZmZXJzLm9uQnVmZmVyQWN0aXZhdGUoKCgpPT57dmFyIGU7cmV0dXJuIG51bGw9PT0oZT10aGlzLl9yZW5kZXJlcil8fHZvaWQgMD09PWU/dm9pZCAwOmUuY2xlYXIoKX0pKSksdGhpcy5yZWdpc3RlcihzLm9uT3B0aW9uQ2hhbmdlKCgoKT0+dGhpcy5faGFuZGxlT3B0aW9uc0NoYW5nZWQoKSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2NoYXJTaXplU2VydmljZS5vbkNoYXJTaXplQ2hhbmdlKCgoKT0+dGhpcy5vbkNoYXJTaXplQ2hhbmdlZCgpKSkpLHRoaXMucmVnaXN0ZXIoYS5vbkRlY29yYXRpb25SZWdpc3RlcmVkKCgoKT0+dGhpcy5fZnVsbFJlZnJlc2goKSkpKSx0aGlzLnJlZ2lzdGVyKGEub25EZWNvcmF0aW9uUmVtb3ZlZCgoKCk9PnRoaXMuX2Z1bGxSZWZyZXNoKCkpKSksdGhpcy5fcmVuZGVyZXIub25SZXF1ZXN0UmVkcmF3KChlPT50aGlzLnJlZnJlc2hSb3dzKGUuc3RhcnQsZS5lbmQsITApKSksdGhpcy5yZWdpc3RlcigoMCxjLmFkZERpc3Bvc2FibGVEb21MaXN0ZW5lcikoZC53aW5kb3csXCJyZXNpemVcIiwoKCk9PnRoaXMub25EZXZpY2VQaXhlbFJhdGlvQ2hhbmdlKCkpKSksXCJJbnRlcnNlY3Rpb25PYnNlcnZlclwiaW4gZC53aW5kb3cpe2NvbnN0IGU9bmV3IGQud2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyKChlPT50aGlzLl9vbkludGVyc2VjdGlvbkNoYW5nZShlW2UubGVuZ3RoLTFdKSkse3RocmVzaG9sZDowfSk7ZS5vYnNlcnZlKGkpLHRoaXMucmVnaXN0ZXIoe2Rpc3Bvc2U6KCk9PmUuZGlzY29ubmVjdCgpfSl9fWdldCBvbkRpbWVuc2lvbnNDaGFuZ2UoKXtyZXR1cm4gdGhpcy5fb25EaW1lbnNpb25zQ2hhbmdlLmV2ZW50fWdldCBvblJlbmRlcmVkVmlld3BvcnRDaGFuZ2UoKXtyZXR1cm4gdGhpcy5fb25SZW5kZXJlZFZpZXdwb3J0Q2hhbmdlLmV2ZW50fWdldCBvblJlbmRlcigpe3JldHVybiB0aGlzLl9vblJlbmRlci5ldmVudH1nZXQgb25SZWZyZXNoUmVxdWVzdCgpe3JldHVybiB0aGlzLl9vblJlZnJlc2hSZXF1ZXN0LmV2ZW50fWdldCBkaW1lbnNpb25zKCl7cmV0dXJuIHRoaXMuX3JlbmRlcmVyLmRpbWVuc2lvbnN9X29uSW50ZXJzZWN0aW9uQ2hhbmdlKGUpe3RoaXMuX2lzUGF1c2VkPXZvaWQgMD09PWUuaXNJbnRlcnNlY3Rpbmc/MD09PWUuaW50ZXJzZWN0aW9uUmF0aW86IWUuaXNJbnRlcnNlY3RpbmcsdGhpcy5faXNQYXVzZWR8fHRoaXMuX2NoYXJTaXplU2VydmljZS5oYXNWYWxpZFNpemV8fHRoaXMuX2NoYXJTaXplU2VydmljZS5tZWFzdXJlKCksIXRoaXMuX2lzUGF1c2VkJiZ0aGlzLl9uZWVkc0Z1bGxSZWZyZXNoJiYodGhpcy5yZWZyZXNoUm93cygwLHRoaXMuX3Jvd0NvdW50LTEpLHRoaXMuX25lZWRzRnVsbFJlZnJlc2g9ITEpfXJlZnJlc2hSb3dzKGUsdCxpPSExKXt0aGlzLl9pc1BhdXNlZD90aGlzLl9uZWVkc0Z1bGxSZWZyZXNoPSEwOihpfHwodGhpcy5faXNOZXh0UmVuZGVyUmVkcmF3T25seT0hMSksdGhpcy5fcmVuZGVyRGVib3VuY2VyLnJlZnJlc2goZSx0LHRoaXMuX3Jvd0NvdW50KSl9X3JlbmRlclJvd3MoZSx0KXt0aGlzLl9yZW5kZXJlci5yZW5kZXJSb3dzKGUsdCksdGhpcy5fbmVlZHNTZWxlY3Rpb25SZWZyZXNoJiYodGhpcy5fcmVuZGVyZXIub25TZWxlY3Rpb25DaGFuZ2VkKHRoaXMuX3NlbGVjdGlvblN0YXRlLnN0YXJ0LHRoaXMuX3NlbGVjdGlvblN0YXRlLmVuZCx0aGlzLl9zZWxlY3Rpb25TdGF0ZS5jb2x1bW5TZWxlY3RNb2RlKSx0aGlzLl9uZWVkc1NlbGVjdGlvblJlZnJlc2g9ITEpLHRoaXMuX2lzTmV4dFJlbmRlclJlZHJhd09ubHl8fHRoaXMuX29uUmVuZGVyZWRWaWV3cG9ydENoYW5nZS5maXJlKHtzdGFydDplLGVuZDp0fSksdGhpcy5fb25SZW5kZXIuZmlyZSh7c3RhcnQ6ZSxlbmQ6dH0pLHRoaXMuX2lzTmV4dFJlbmRlclJlZHJhd09ubHk9ITB9cmVzaXplKGUsdCl7dGhpcy5fcm93Q291bnQ9dCx0aGlzLl9maXJlT25DYW52YXNSZXNpemUoKX1faGFuZGxlT3B0aW9uc0NoYW5nZWQoKXt0aGlzLl9yZW5kZXJlci5vbk9wdGlvbnNDaGFuZ2VkKCksdGhpcy5yZWZyZXNoUm93cygwLHRoaXMuX3Jvd0NvdW50LTEpLHRoaXMuX2ZpcmVPbkNhbnZhc1Jlc2l6ZSgpfV9maXJlT25DYW52YXNSZXNpemUoKXt0aGlzLl9yZW5kZXJlci5kaW1lbnNpb25zLmNhbnZhc1dpZHRoPT09dGhpcy5fY2FudmFzV2lkdGgmJnRoaXMuX3JlbmRlcmVyLmRpbWVuc2lvbnMuY2FudmFzSGVpZ2h0PT09dGhpcy5fY2FudmFzSGVpZ2h0fHx0aGlzLl9vbkRpbWVuc2lvbnNDaGFuZ2UuZmlyZSh0aGlzLl9yZW5kZXJlci5kaW1lbnNpb25zKX1kaXNwb3NlKCl7c3VwZXIuZGlzcG9zZSgpfXNldFJlbmRlcmVyKGUpe3RoaXMuX3JlbmRlcmVyLmRpc3Bvc2UoKSx0aGlzLl9yZW5kZXJlcj1lLHRoaXMuX3JlbmRlcmVyLm9uUmVxdWVzdFJlZHJhdygoZT0+dGhpcy5yZWZyZXNoUm93cyhlLnN0YXJ0LGUuZW5kLCEwKSkpLHRoaXMuX25lZWRzU2VsZWN0aW9uUmVmcmVzaD0hMCx0aGlzLl9mdWxsUmVmcmVzaCgpfWFkZFJlZnJlc2hDYWxsYmFjayhlKXtyZXR1cm4gdGhpcy5fcmVuZGVyRGVib3VuY2VyLmFkZFJlZnJlc2hDYWxsYmFjayhlKX1fZnVsbFJlZnJlc2goKXt0aGlzLl9pc1BhdXNlZD90aGlzLl9uZWVkc0Z1bGxSZWZyZXNoPSEwOnRoaXMucmVmcmVzaFJvd3MoMCx0aGlzLl9yb3dDb3VudC0xKX1jbGVhclRleHR1cmVBdGxhcygpe3ZhciBlLHQ7bnVsbD09PSh0PW51bGw9PT0oZT10aGlzLl9yZW5kZXJlcil8fHZvaWQgMD09PWU/dm9pZCAwOmUuY2xlYXJUZXh0dXJlQXRsYXMpfHx2b2lkIDA9PT10fHx0LmNhbGwoZSksdGhpcy5fZnVsbFJlZnJlc2goKX1zZXRDb2xvcnMoZSl7dGhpcy5fcmVuZGVyZXIuc2V0Q29sb3JzKGUpLHRoaXMuX2Z1bGxSZWZyZXNoKCl9b25EZXZpY2VQaXhlbFJhdGlvQ2hhbmdlKCl7dGhpcy5fY2hhclNpemVTZXJ2aWNlLm1lYXN1cmUoKSx0aGlzLl9yZW5kZXJlci5vbkRldmljZVBpeGVsUmF0aW9DaGFuZ2UoKSx0aGlzLnJlZnJlc2hSb3dzKDAsdGhpcy5fcm93Q291bnQtMSl9b25SZXNpemUoZSx0KXt0aGlzLl9yZW5kZXJlci5vblJlc2l6ZShlLHQpLHRoaXMuX2Z1bGxSZWZyZXNoKCl9b25DaGFyU2l6ZUNoYW5nZWQoKXt0aGlzLl9yZW5kZXJlci5vbkNoYXJTaXplQ2hhbmdlZCgpfW9uQmx1cigpe3RoaXMuX3JlbmRlcmVyLm9uQmx1cigpfW9uRm9jdXMoKXt0aGlzLl9yZW5kZXJlci5vbkZvY3VzKCl9b25TZWxlY3Rpb25DaGFuZ2VkKGUsdCxpKXt0aGlzLl9zZWxlY3Rpb25TdGF0ZS5zdGFydD1lLHRoaXMuX3NlbGVjdGlvblN0YXRlLmVuZD10LHRoaXMuX3NlbGVjdGlvblN0YXRlLmNvbHVtblNlbGVjdE1vZGU9aSx0aGlzLl9yZW5kZXJlci5vblNlbGVjdGlvbkNoYW5nZWQoZSx0LGkpfW9uQ3Vyc29yTW92ZSgpe3RoaXMuX3JlbmRlcmVyLm9uQ3Vyc29yTW92ZSgpfWNsZWFyKCl7dGhpcy5fcmVuZGVyZXIuY2xlYXIoKX19O189cyhbcigzLGwuSU9wdGlvbnNTZXJ2aWNlKSxyKDQsZC5JQ2hhclNpemVTZXJ2aWNlKSxyKDUsbC5JRGVjb3JhdGlvblNlcnZpY2UpLHIoNixsLklCdWZmZXJTZXJ2aWNlKSxyKDcsZC5JQ29yZUJyb3dzZXJTZXJ2aWNlKV0sXyksdC5SZW5kZXJTZXJ2aWNlPV99LDkzMTI6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LGkscyl7dmFyIHIsbj1hcmd1bWVudHMubGVuZ3RoLG89bjwzP3Q6bnVsbD09PXM/cz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk6cztpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlvPVJlZmxlY3QuZGVjb3JhdGUoZSx0LGkscyk7ZWxzZSBmb3IodmFyIGE9ZS5sZW5ndGgtMTthPj0wO2EtLSkocj1lW2FdKSYmKG89KG48Mz9yKG8pOm4+Mz9yKHQsaSxvKTpyKHQsaSkpfHxvKTtyZXR1cm4gbj4zJiZvJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLG8pLG99LHI9dGhpcyYmdGhpcy5fX3BhcmFtfHxmdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihpLHMpe3QoaSxzLGUpfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5TZWxlY3Rpb25TZXJ2aWNlPXZvaWQgMDtjb25zdCBuPWkoNjExNCksbz1pKDQ1NiksYT1pKDUxMSksaD1pKDg0NjApLGM9aSg0NzI1KSxsPWkoMjU4NSksZD1pKDk4MDYpLF89aSg5NTA0KSx1PWkoODQ0KSxmPWkoNDg0MSksdj1TdHJpbmcuZnJvbUNoYXJDb2RlKDE2MCksZz1uZXcgUmVnRXhwKHYsXCJnXCIpO2xldCBwPWNsYXNzIGV4dGVuZHMgdS5EaXNwb3NhYmxle2NvbnN0cnVjdG9yKGUsdCxpLHMscixuLGMsbCxkKXtzdXBlcigpLHRoaXMuX2VsZW1lbnQ9ZSx0aGlzLl9zY3JlZW5FbGVtZW50PXQsdGhpcy5fbGlua2lmaWVyPWksdGhpcy5fYnVmZmVyU2VydmljZT1zLHRoaXMuX2NvcmVTZXJ2aWNlPXIsdGhpcy5fbW91c2VTZXJ2aWNlPW4sdGhpcy5fb3B0aW9uc1NlcnZpY2U9Yyx0aGlzLl9yZW5kZXJTZXJ2aWNlPWwsdGhpcy5fY29yZUJyb3dzZXJTZXJ2aWNlPWQsdGhpcy5fZHJhZ1Njcm9sbEFtb3VudD0wLHRoaXMuX2VuYWJsZWQ9ITAsdGhpcy5fd29ya0NlbGw9bmV3IGEuQ2VsbERhdGEsdGhpcy5fbW91c2VEb3duVGltZVN0YW1wPTAsdGhpcy5fb2xkSGFzU2VsZWN0aW9uPSExLHRoaXMuX29sZFNlbGVjdGlvblN0YXJ0PXZvaWQgMCx0aGlzLl9vbGRTZWxlY3Rpb25FbmQ9dm9pZCAwLHRoaXMuX29uTGludXhNb3VzZVNlbGVjdGlvbj10aGlzLnJlZ2lzdGVyKG5ldyBoLkV2ZW50RW1pdHRlciksdGhpcy5fb25SZWRyYXdSZXF1ZXN0PXRoaXMucmVnaXN0ZXIobmV3IGguRXZlbnRFbWl0dGVyKSx0aGlzLl9vblNlbGVjdGlvbkNoYW5nZT10aGlzLnJlZ2lzdGVyKG5ldyBoLkV2ZW50RW1pdHRlciksdGhpcy5fb25SZXF1ZXN0U2Nyb2xsTGluZXM9dGhpcy5yZWdpc3RlcihuZXcgaC5FdmVudEVtaXR0ZXIpLHRoaXMuX21vdXNlTW92ZUxpc3RlbmVyPWU9PnRoaXMuX29uTW91c2VNb3ZlKGUpLHRoaXMuX21vdXNlVXBMaXN0ZW5lcj1lPT50aGlzLl9vbk1vdXNlVXAoZSksdGhpcy5fY29yZVNlcnZpY2Uub25Vc2VySW5wdXQoKCgpPT57dGhpcy5oYXNTZWxlY3Rpb24mJnRoaXMuY2xlYXJTZWxlY3Rpb24oKX0pKSx0aGlzLl90cmltTGlzdGVuZXI9dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIubGluZXMub25UcmltKChlPT50aGlzLl9vblRyaW0oZSkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVycy5vbkJ1ZmZlckFjdGl2YXRlKChlPT50aGlzLl9vbkJ1ZmZlckFjdGl2YXRlKGUpKSkpLHRoaXMuZW5hYmxlKCksdGhpcy5fbW9kZWw9bmV3IG8uU2VsZWN0aW9uTW9kZWwodGhpcy5fYnVmZmVyU2VydmljZSksdGhpcy5fYWN0aXZlU2VsZWN0aW9uTW9kZT0wfWdldCBvbkxpbnV4TW91c2VTZWxlY3Rpb24oKXtyZXR1cm4gdGhpcy5fb25MaW51eE1vdXNlU2VsZWN0aW9uLmV2ZW50fWdldCBvblJlcXVlc3RSZWRyYXcoKXtyZXR1cm4gdGhpcy5fb25SZWRyYXdSZXF1ZXN0LmV2ZW50fWdldCBvblNlbGVjdGlvbkNoYW5nZSgpe3JldHVybiB0aGlzLl9vblNlbGVjdGlvbkNoYW5nZS5ldmVudH1nZXQgb25SZXF1ZXN0U2Nyb2xsTGluZXMoKXtyZXR1cm4gdGhpcy5fb25SZXF1ZXN0U2Nyb2xsTGluZXMuZXZlbnR9ZGlzcG9zZSgpe3RoaXMuX3JlbW92ZU1vdXNlRG93bkxpc3RlbmVycygpfXJlc2V0KCl7dGhpcy5jbGVhclNlbGVjdGlvbigpfWRpc2FibGUoKXt0aGlzLmNsZWFyU2VsZWN0aW9uKCksdGhpcy5fZW5hYmxlZD0hMX1lbmFibGUoKXt0aGlzLl9lbmFibGVkPSEwfWdldCBzZWxlY3Rpb25TdGFydCgpe3JldHVybiB0aGlzLl9tb2RlbC5maW5hbFNlbGVjdGlvblN0YXJ0fWdldCBzZWxlY3Rpb25FbmQoKXtyZXR1cm4gdGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25FbmR9Z2V0IGhhc1NlbGVjdGlvbigpe2NvbnN0IGU9dGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25TdGFydCx0PXRoaXMuX21vZGVsLmZpbmFsU2VsZWN0aW9uRW5kO3JldHVybiEoIWV8fCF0fHxlWzBdPT09dFswXSYmZVsxXT09PXRbMV0pfWdldCBzZWxlY3Rpb25UZXh0KCl7Y29uc3QgZT10aGlzLl9tb2RlbC5maW5hbFNlbGVjdGlvblN0YXJ0LHQ9dGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25FbmQ7aWYoIWV8fCF0KXJldHVyblwiXCI7Y29uc3QgaT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcixzPVtdO2lmKDM9PT10aGlzLl9hY3RpdmVTZWxlY3Rpb25Nb2RlKXtpZihlWzBdPT09dFswXSlyZXR1cm5cIlwiO2NvbnN0IHI9ZVswXTx0WzBdP2VbMF06dFswXSxuPWVbMF08dFswXT90WzBdOmVbMF07Zm9yKGxldCBvPWVbMV07bzw9dFsxXTtvKyspe2NvbnN0IGU9aS50cmFuc2xhdGVCdWZmZXJMaW5lVG9TdHJpbmcobywhMCxyLG4pO3MucHVzaChlKX19ZWxzZXtjb25zdCByPWVbMV09PT10WzFdP3RbMF06dm9pZCAwO3MucHVzaChpLnRyYW5zbGF0ZUJ1ZmZlckxpbmVUb1N0cmluZyhlWzFdLCEwLGVbMF0scikpO2ZvcihsZXQgcj1lWzFdKzE7cjw9dFsxXS0xO3IrKyl7Y29uc3QgZT1pLmxpbmVzLmdldChyKSx0PWkudHJhbnNsYXRlQnVmZmVyTGluZVRvU3RyaW5nKHIsITApOyhudWxsPT1lP3ZvaWQgMDplLmlzV3JhcHBlZCk/c1tzLmxlbmd0aC0xXSs9dDpzLnB1c2godCl9aWYoZVsxXSE9PXRbMV0pe2NvbnN0IGU9aS5saW5lcy5nZXQodFsxXSkscj1pLnRyYW5zbGF0ZUJ1ZmZlckxpbmVUb1N0cmluZyh0WzFdLCEwLDAsdFswXSk7ZSYmZS5pc1dyYXBwZWQ/c1tzLmxlbmd0aC0xXSs9cjpzLnB1c2gocil9fXJldHVybiBzLm1hcCgoZT0+ZS5yZXBsYWNlKGcsXCIgXCIpKSkuam9pbihuLmlzV2luZG93cz9cIlxcclxcblwiOlwiXFxuXCIpfWNsZWFyU2VsZWN0aW9uKCl7dGhpcy5fbW9kZWwuY2xlYXJTZWxlY3Rpb24oKSx0aGlzLl9yZW1vdmVNb3VzZURvd25MaXN0ZW5lcnMoKSx0aGlzLnJlZnJlc2goKSx0aGlzLl9vblNlbGVjdGlvbkNoYW5nZS5maXJlKCl9cmVmcmVzaChlKXt0aGlzLl9yZWZyZXNoQW5pbWF0aW9uRnJhbWV8fCh0aGlzLl9yZWZyZXNoQW5pbWF0aW9uRnJhbWU9dGhpcy5fY29yZUJyb3dzZXJTZXJ2aWNlLndpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCgpPT50aGlzLl9yZWZyZXNoKCkpKSksbi5pc0xpbnV4JiZlJiZ0aGlzLnNlbGVjdGlvblRleHQubGVuZ3RoJiZ0aGlzLl9vbkxpbnV4TW91c2VTZWxlY3Rpb24uZmlyZSh0aGlzLnNlbGVjdGlvblRleHQpfV9yZWZyZXNoKCl7dGhpcy5fcmVmcmVzaEFuaW1hdGlvbkZyYW1lPXZvaWQgMCx0aGlzLl9vblJlZHJhd1JlcXVlc3QuZmlyZSh7c3RhcnQ6dGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25TdGFydCxlbmQ6dGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25FbmQsY29sdW1uU2VsZWN0TW9kZTozPT09dGhpcy5fYWN0aXZlU2VsZWN0aW9uTW9kZX0pfV9pc0NsaWNrSW5TZWxlY3Rpb24oZSl7Y29uc3QgdD10aGlzLl9nZXRNb3VzZUJ1ZmZlckNvb3JkcyhlKSxpPXRoaXMuX21vZGVsLmZpbmFsU2VsZWN0aW9uU3RhcnQscz10aGlzLl9tb2RlbC5maW5hbFNlbGVjdGlvbkVuZDtyZXR1cm4hIShpJiZzJiZ0KSYmdGhpcy5fYXJlQ29vcmRzSW5TZWxlY3Rpb24odCxpLHMpfWlzQ2VsbEluU2VsZWN0aW9uKGUsdCl7Y29uc3QgaT10aGlzLl9tb2RlbC5maW5hbFNlbGVjdGlvblN0YXJ0LHM9dGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25FbmQ7cmV0dXJuISghaXx8IXMpJiZ0aGlzLl9hcmVDb29yZHNJblNlbGVjdGlvbihbZSx0XSxpLHMpfV9hcmVDb29yZHNJblNlbGVjdGlvbihlLHQsaSl7cmV0dXJuIGVbMV0+dFsxXSYmZVsxXTxpWzFdfHx0WzFdPT09aVsxXSYmZVsxXT09PXRbMV0mJmVbMF0+PXRbMF0mJmVbMF08aVswXXx8dFsxXTxpWzFdJiZlWzFdPT09aVsxXSYmZVswXTxpWzBdfHx0WzFdPGlbMV0mJmVbMV09PT10WzFdJiZlWzBdPj10WzBdfV9zZWxlY3RXb3JkQXRDdXJzb3IoZSx0KXt2YXIgaSxzO2NvbnN0IHI9bnVsbD09PShzPW51bGw9PT0oaT10aGlzLl9saW5raWZpZXIuY3VycmVudExpbmspfHx2b2lkIDA9PT1pP3ZvaWQgMDppLmxpbmspfHx2b2lkIDA9PT1zP3ZvaWQgMDpzLnJhbmdlO2lmKHIpcmV0dXJuIHRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0PVtyLnN0YXJ0LngtMSxyLnN0YXJ0LnktMV0sdGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnRMZW5ndGg9KDAsZi5nZXRSYW5nZUxlbmd0aCkocix0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMpLHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZD12b2lkIDAsITA7Y29uc3Qgbj10aGlzLl9nZXRNb3VzZUJ1ZmZlckNvb3JkcyhlKTtyZXR1cm4hIW4mJih0aGlzLl9zZWxlY3RXb3JkQXQobix0KSx0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmQ9dm9pZCAwLCEwKX1zZWxlY3RBbGwoKXt0aGlzLl9tb2RlbC5pc1NlbGVjdEFsbEFjdGl2ZT0hMCx0aGlzLnJlZnJlc2goKSx0aGlzLl9vblNlbGVjdGlvbkNoYW5nZS5maXJlKCl9c2VsZWN0TGluZXMoZSx0KXt0aGlzLl9tb2RlbC5jbGVhclNlbGVjdGlvbigpLGU9TWF0aC5tYXgoZSwwKSx0PU1hdGgubWluKHQsdGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIubGluZXMubGVuZ3RoLTEpLHRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0PVswLGVdLHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZD1bdGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLHRdLHRoaXMucmVmcmVzaCgpLHRoaXMuX29uU2VsZWN0aW9uQ2hhbmdlLmZpcmUoKX1fb25UcmltKGUpe3RoaXMuX21vZGVsLm9uVHJpbShlKSYmdGhpcy5yZWZyZXNoKCl9X2dldE1vdXNlQnVmZmVyQ29vcmRzKGUpe2NvbnN0IHQ9dGhpcy5fbW91c2VTZXJ2aWNlLmdldENvb3JkcyhlLHRoaXMuX3NjcmVlbkVsZW1lbnQsdGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLHRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cywhMCk7aWYodClyZXR1cm4gdFswXS0tLHRbMV0tLSx0WzFdKz10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55ZGlzcCx0fV9nZXRNb3VzZUV2ZW50U2Nyb2xsQW1vdW50KGUpe2xldCB0PSgwLGQuZ2V0Q29vcmRzUmVsYXRpdmVUb0VsZW1lbnQpKHRoaXMuX2NvcmVCcm93c2VyU2VydmljZS53aW5kb3csZSx0aGlzLl9zY3JlZW5FbGVtZW50KVsxXTtjb25zdCBpPXRoaXMuX3JlbmRlclNlcnZpY2UuZGltZW5zaW9ucy5jYW52YXNIZWlnaHQ7cmV0dXJuIHQ+PTAmJnQ8PWk/MDoodD5pJiYodC09aSksdD1NYXRoLm1pbihNYXRoLm1heCh0LC01MCksNTApLHQvPTUwLHQvTWF0aC5hYnModCkrTWF0aC5yb3VuZCgxNCp0KSl9c2hvdWxkRm9yY2VTZWxlY3Rpb24oZSl7cmV0dXJuIG4uaXNNYWM/ZS5hbHRLZXkmJnRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMubWFjT3B0aW9uQ2xpY2tGb3JjZXNTZWxlY3Rpb246ZS5zaGlmdEtleX1vbk1vdXNlRG93bihlKXtpZih0aGlzLl9tb3VzZURvd25UaW1lU3RhbXA9ZS50aW1lU3RhbXAsKDIhPT1lLmJ1dHRvbnx8IXRoaXMuaGFzU2VsZWN0aW9uKSYmMD09PWUuYnV0dG9uKXtpZighdGhpcy5fZW5hYmxlZCl7aWYoIXRoaXMuc2hvdWxkRm9yY2VTZWxlY3Rpb24oZSkpcmV0dXJuO2Uuc3RvcFByb3BhZ2F0aW9uKCl9ZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuX2RyYWdTY3JvbGxBbW91bnQ9MCx0aGlzLl9lbmFibGVkJiZlLnNoaWZ0S2V5P3RoaXMuX29uSW5jcmVtZW50YWxDbGljayhlKToxPT09ZS5kZXRhaWw/dGhpcy5fb25TaW5nbGVDbGljayhlKToyPT09ZS5kZXRhaWw/dGhpcy5fb25Eb3VibGVDbGljayhlKTozPT09ZS5kZXRhaWwmJnRoaXMuX29uVHJpcGxlQ2xpY2soZSksdGhpcy5fYWRkTW91c2VEb3duTGlzdGVuZXJzKCksdGhpcy5yZWZyZXNoKCEwKX19X2FkZE1vdXNlRG93bkxpc3RlbmVycygpe3RoaXMuX3NjcmVlbkVsZW1lbnQub3duZXJEb2N1bWVudCYmKHRoaXMuX3NjcmVlbkVsZW1lbnQub3duZXJEb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsdGhpcy5fbW91c2VNb3ZlTGlzdGVuZXIpLHRoaXMuX3NjcmVlbkVsZW1lbnQub3duZXJEb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLHRoaXMuX21vdXNlVXBMaXN0ZW5lcikpLHRoaXMuX2RyYWdTY3JvbGxJbnRlcnZhbFRpbWVyPXRoaXMuX2NvcmVCcm93c2VyU2VydmljZS53aW5kb3cuc2V0SW50ZXJ2YWwoKCgpPT50aGlzLl9kcmFnU2Nyb2xsKCkpLDUwKX1fcmVtb3ZlTW91c2VEb3duTGlzdGVuZXJzKCl7dGhpcy5fc2NyZWVuRWxlbWVudC5vd25lckRvY3VtZW50JiYodGhpcy5fc2NyZWVuRWxlbWVudC5vd25lckRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIix0aGlzLl9tb3VzZU1vdmVMaXN0ZW5lciksdGhpcy5fc2NyZWVuRWxlbWVudC5vd25lckRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsdGhpcy5fbW91c2VVcExpc3RlbmVyKSksdGhpcy5fY29yZUJyb3dzZXJTZXJ2aWNlLndpbmRvdy5jbGVhckludGVydmFsKHRoaXMuX2RyYWdTY3JvbGxJbnRlcnZhbFRpbWVyKSx0aGlzLl9kcmFnU2Nyb2xsSW50ZXJ2YWxUaW1lcj12b2lkIDB9X29uSW5jcmVtZW50YWxDbGljayhlKXt0aGlzLl9tb2RlbC5zZWxlY3Rpb25TdGFydCYmKHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZD10aGlzLl9nZXRNb3VzZUJ1ZmZlckNvb3JkcyhlKSl9X29uU2luZ2xlQ2xpY2soZSl7aWYodGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnRMZW5ndGg9MCx0aGlzLl9tb2RlbC5pc1NlbGVjdEFsbEFjdGl2ZT0hMSx0aGlzLl9hY3RpdmVTZWxlY3Rpb25Nb2RlPXRoaXMuc2hvdWxkQ29sdW1uU2VsZWN0KGUpPzM6MCx0aGlzLl9tb2RlbC5zZWxlY3Rpb25TdGFydD10aGlzLl9nZXRNb3VzZUJ1ZmZlckNvb3JkcyhlKSwhdGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnQpcmV0dXJuO3RoaXMuX21vZGVsLnNlbGVjdGlvbkVuZD12b2lkIDA7Y29uc3QgdD10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci5saW5lcy5nZXQodGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnRbMV0pO3QmJnQubGVuZ3RoIT09dGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnRbMF0mJjA9PT10Lmhhc1dpZHRoKHRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0WzBdKSYmdGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnRbMF0rK31fb25Eb3VibGVDbGljayhlKXt0aGlzLl9zZWxlY3RXb3JkQXRDdXJzb3IoZSwhMCkmJih0aGlzLl9hY3RpdmVTZWxlY3Rpb25Nb2RlPTEpfV9vblRyaXBsZUNsaWNrKGUpe2NvbnN0IHQ9dGhpcy5fZ2V0TW91c2VCdWZmZXJDb29yZHMoZSk7dCYmKHRoaXMuX2FjdGl2ZVNlbGVjdGlvbk1vZGU9Mix0aGlzLl9zZWxlY3RMaW5lQXQodFsxXSkpfXNob3VsZENvbHVtblNlbGVjdChlKXtyZXR1cm4gZS5hbHRLZXkmJiEobi5pc01hYyYmdGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5tYWNPcHRpb25DbGlja0ZvcmNlc1NlbGVjdGlvbil9X29uTW91c2VNb3ZlKGUpe2lmKGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksIXRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0KXJldHVybjtjb25zdCB0PXRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZD9bdGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kWzBdLHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZFsxXV06bnVsbDtpZih0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmQ9dGhpcy5fZ2V0TW91c2VCdWZmZXJDb29yZHMoZSksIXRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZClyZXR1cm4gdm9pZCB0aGlzLnJlZnJlc2goITApOzI9PT10aGlzLl9hY3RpdmVTZWxlY3Rpb25Nb2RlP3RoaXMuX21vZGVsLnNlbGVjdGlvbkVuZFsxXTx0aGlzLl9tb2RlbC5zZWxlY3Rpb25TdGFydFsxXT90aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmRbMF09MDp0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmRbMF09dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzOjE9PT10aGlzLl9hY3RpdmVTZWxlY3Rpb25Nb2RlJiZ0aGlzLl9zZWxlY3RUb1dvcmRBdCh0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmQpLHRoaXMuX2RyYWdTY3JvbGxBbW91bnQ9dGhpcy5fZ2V0TW91c2VFdmVudFNjcm9sbEFtb3VudChlKSwzIT09dGhpcy5fYWN0aXZlU2VsZWN0aW9uTW9kZSYmKHRoaXMuX2RyYWdTY3JvbGxBbW91bnQ+MD90aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmRbMF09dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzOnRoaXMuX2RyYWdTY3JvbGxBbW91bnQ8MCYmKHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZFswXT0wKSk7Y29uc3QgaT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcjtpZih0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmRbMV08aS5saW5lcy5sZW5ndGgpe2NvbnN0IGU9aS5saW5lcy5nZXQodGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kWzFdKTtlJiYwPT09ZS5oYXNXaWR0aCh0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmRbMF0pJiZ0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmRbMF0rK310JiZ0WzBdPT09dGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kWzBdJiZ0WzFdPT09dGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kWzFdfHx0aGlzLnJlZnJlc2goITApfV9kcmFnU2Nyb2xsKCl7aWYodGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kJiZ0aGlzLl9tb2RlbC5zZWxlY3Rpb25TdGFydCYmdGhpcy5fZHJhZ1Njcm9sbEFtb3VudCl7dGhpcy5fb25SZXF1ZXN0U2Nyb2xsTGluZXMuZmlyZSh7YW1vdW50OnRoaXMuX2RyYWdTY3JvbGxBbW91bnQsc3VwcHJlc3NTY3JvbGxFdmVudDohMX0pO2NvbnN0IGU9dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXI7dGhpcy5fZHJhZ1Njcm9sbEFtb3VudD4wPygzIT09dGhpcy5fYWN0aXZlU2VsZWN0aW9uTW9kZSYmKHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZFswXT10aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMpLHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZFsxXT1NYXRoLm1pbihlLnlkaXNwK3RoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyxlLmxpbmVzLmxlbmd0aC0xKSk6KDMhPT10aGlzLl9hY3RpdmVTZWxlY3Rpb25Nb2RlJiYodGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kWzBdPTApLHRoaXMuX21vZGVsLnNlbGVjdGlvbkVuZFsxXT1lLnlkaXNwKSx0aGlzLnJlZnJlc2goKX19X29uTW91c2VVcChlKXtjb25zdCB0PWUudGltZVN0YW1wLXRoaXMuX21vdXNlRG93blRpbWVTdGFtcDtpZih0aGlzLl9yZW1vdmVNb3VzZURvd25MaXN0ZW5lcnMoKSx0aGlzLnNlbGVjdGlvblRleHQubGVuZ3RoPD0xJiZ0PDUwMCYmZS5hbHRLZXkmJnRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuYWx0Q2xpY2tNb3Zlc0N1cnNvcil7aWYodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIueWJhc2U9PT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55ZGlzcCl7Y29uc3QgdD10aGlzLl9tb3VzZVNlcnZpY2UuZ2V0Q29vcmRzKGUsdGhpcy5fZWxlbWVudCx0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMsdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLCExKTtpZih0JiZ2b2lkIDAhPT10WzBdJiZ2b2lkIDAhPT10WzFdKXtjb25zdCBlPSgwLF8ubW92ZVRvQ2VsbFNlcXVlbmNlKSh0WzBdLTEsdFsxXS0xLHRoaXMuX2J1ZmZlclNlcnZpY2UsdGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLmFwcGxpY2F0aW9uQ3Vyc29yS2V5cyk7dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChlLCEwKX19fWVsc2UgdGhpcy5fZmlyZUV2ZW50SWZTZWxlY3Rpb25DaGFuZ2VkKCl9X2ZpcmVFdmVudElmU2VsZWN0aW9uQ2hhbmdlZCgpe2NvbnN0IGU9dGhpcy5fbW9kZWwuZmluYWxTZWxlY3Rpb25TdGFydCx0PXRoaXMuX21vZGVsLmZpbmFsU2VsZWN0aW9uRW5kLGk9ISghZXx8IXR8fGVbMF09PT10WzBdJiZlWzFdPT09dFsxXSk7aT9lJiZ0JiYodGhpcy5fb2xkU2VsZWN0aW9uU3RhcnQmJnRoaXMuX29sZFNlbGVjdGlvbkVuZCYmZVswXT09PXRoaXMuX29sZFNlbGVjdGlvblN0YXJ0WzBdJiZlWzFdPT09dGhpcy5fb2xkU2VsZWN0aW9uU3RhcnRbMV0mJnRbMF09PT10aGlzLl9vbGRTZWxlY3Rpb25FbmRbMF0mJnRbMV09PT10aGlzLl9vbGRTZWxlY3Rpb25FbmRbMV18fHRoaXMuX2ZpcmVPblNlbGVjdGlvbkNoYW5nZShlLHQsaSkpOnRoaXMuX29sZEhhc1NlbGVjdGlvbiYmdGhpcy5fZmlyZU9uU2VsZWN0aW9uQ2hhbmdlKGUsdCxpKX1fZmlyZU9uU2VsZWN0aW9uQ2hhbmdlKGUsdCxpKXt0aGlzLl9vbGRTZWxlY3Rpb25TdGFydD1lLHRoaXMuX29sZFNlbGVjdGlvbkVuZD10LHRoaXMuX29sZEhhc1NlbGVjdGlvbj1pLHRoaXMuX29uU2VsZWN0aW9uQ2hhbmdlLmZpcmUoKX1fb25CdWZmZXJBY3RpdmF0ZShlKXt0aGlzLmNsZWFyU2VsZWN0aW9uKCksdGhpcy5fdHJpbUxpc3RlbmVyLmRpc3Bvc2UoKSx0aGlzLl90cmltTGlzdGVuZXI9ZS5hY3RpdmVCdWZmZXIubGluZXMub25UcmltKChlPT50aGlzLl9vblRyaW0oZSkpKX1fY29udmVydFZpZXdwb3J0Q29sVG9DaGFyYWN0ZXJJbmRleChlLHQpe2xldCBpPXRbMF07Zm9yKGxldCBzPTA7dFswXT49cztzKyspe2NvbnN0IHI9ZS5sb2FkQ2VsbChzLHRoaXMuX3dvcmtDZWxsKS5nZXRDaGFycygpLmxlbmd0aDswPT09dGhpcy5fd29ya0NlbGwuZ2V0V2lkdGgoKT9pLS06cj4xJiZ0WzBdIT09cyYmKGkrPXItMSl9cmV0dXJuIGl9c2V0U2VsZWN0aW9uKGUsdCxpKXt0aGlzLl9tb2RlbC5jbGVhclNlbGVjdGlvbigpLHRoaXMuX3JlbW92ZU1vdXNlRG93bkxpc3RlbmVycygpLHRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0PVtlLHRdLHRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0TGVuZ3RoPWksdGhpcy5yZWZyZXNoKCksdGhpcy5fZmlyZUV2ZW50SWZTZWxlY3Rpb25DaGFuZ2VkKCl9cmlnaHRDbGlja1NlbGVjdChlKXt0aGlzLl9pc0NsaWNrSW5TZWxlY3Rpb24oZSl8fCh0aGlzLl9zZWxlY3RXb3JkQXRDdXJzb3IoZSwhMSkmJnRoaXMucmVmcmVzaCghMCksdGhpcy5fZmlyZUV2ZW50SWZTZWxlY3Rpb25DaGFuZ2VkKCkpfV9nZXRXb3JkQXQoZSx0LGk9ITAscz0hMCl7aWYoZVswXT49dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzKXJldHVybjtjb25zdCByPXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLG49ci5saW5lcy5nZXQoZVsxXSk7aWYoIW4pcmV0dXJuO2NvbnN0IG89ci50cmFuc2xhdGVCdWZmZXJMaW5lVG9TdHJpbmcoZVsxXSwhMSk7bGV0IGE9dGhpcy5fY29udmVydFZpZXdwb3J0Q29sVG9DaGFyYWN0ZXJJbmRleChuLGUpLGg9YTtjb25zdCBjPWVbMF0tYTtsZXQgbD0wLGQ9MCxfPTAsdT0wO2lmKFwiIFwiPT09by5jaGFyQXQoYSkpe2Zvcig7YT4wJiZcIiBcIj09PW8uY2hhckF0KGEtMSk7KWEtLTtmb3IoO2g8by5sZW5ndGgmJlwiIFwiPT09by5jaGFyQXQoaCsxKTspaCsrfWVsc2V7bGV0IHQ9ZVswXSxpPWVbMF07MD09PW4uZ2V0V2lkdGgodCkmJihsKyssdC0tKSwyPT09bi5nZXRXaWR0aChpKSYmKGQrKyxpKyspO2NvbnN0IHM9bi5nZXRTdHJpbmcoaSkubGVuZ3RoO2ZvcihzPjEmJih1Kz1zLTEsaCs9cy0xKTt0PjAmJmE+MCYmIXRoaXMuX2lzQ2hhcldvcmRTZXBhcmF0b3Iobi5sb2FkQ2VsbCh0LTEsdGhpcy5fd29ya0NlbGwpKTspe24ubG9hZENlbGwodC0xLHRoaXMuX3dvcmtDZWxsKTtjb25zdCBlPXRoaXMuX3dvcmtDZWxsLmdldENoYXJzKCkubGVuZ3RoOzA9PT10aGlzLl93b3JrQ2VsbC5nZXRXaWR0aCgpPyhsKyssdC0tKTplPjEmJihfKz1lLTEsYS09ZS0xKSxhLS0sdC0tfWZvcig7aTxuLmxlbmd0aCYmaCsxPG8ubGVuZ3RoJiYhdGhpcy5faXNDaGFyV29yZFNlcGFyYXRvcihuLmxvYWRDZWxsKGkrMSx0aGlzLl93b3JrQ2VsbCkpOyl7bi5sb2FkQ2VsbChpKzEsdGhpcy5fd29ya0NlbGwpO2NvbnN0IGU9dGhpcy5fd29ya0NlbGwuZ2V0Q2hhcnMoKS5sZW5ndGg7Mj09PXRoaXMuX3dvcmtDZWxsLmdldFdpZHRoKCk/KGQrKyxpKyspOmU+MSYmKHUrPWUtMSxoKz1lLTEpLGgrKyxpKyt9fWgrKztsZXQgZj1hK2MtbCtfLHY9TWF0aC5taW4odGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLGgtYStsK2QtXy11KTtpZih0fHxcIlwiIT09by5zbGljZShhLGgpLnRyaW0oKSl7aWYoaSYmMD09PWYmJjMyIT09bi5nZXRDb2RlUG9pbnQoMCkpe2NvbnN0IHQ9ci5saW5lcy5nZXQoZVsxXS0xKTtpZih0JiZuLmlzV3JhcHBlZCYmMzIhPT10LmdldENvZGVQb2ludCh0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtMSkpe2NvbnN0IHQ9dGhpcy5fZ2V0V29yZEF0KFt0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtMSxlWzFdLTFdLCExLCEwLCExKTtpZih0KXtjb25zdCBlPXRoaXMuX2J1ZmZlclNlcnZpY2UuY29scy10LnN0YXJ0O2YtPWUsdis9ZX19fWlmKHMmJmYrdj09PXRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyYmMzIhPT1uLmdldENvZGVQb2ludCh0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtMSkpe2NvbnN0IHQ9ci5saW5lcy5nZXQoZVsxXSsxKTtpZigobnVsbD09dD92b2lkIDA6dC5pc1dyYXBwZWQpJiYzMiE9PXQuZ2V0Q29kZVBvaW50KDApKXtjb25zdCB0PXRoaXMuX2dldFdvcmRBdChbMCxlWzFdKzFdLCExLCExLCEwKTt0JiYodis9dC5sZW5ndGgpfX1yZXR1cm57c3RhcnQ6ZixsZW5ndGg6dn19fV9zZWxlY3RXb3JkQXQoZSx0KXtjb25zdCBpPXRoaXMuX2dldFdvcmRBdChlLHQpO2lmKGkpe2Zvcig7aS5zdGFydDwwOylpLnN0YXJ0Kz10aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMsZVsxXS0tO3RoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0PVtpLnN0YXJ0LGVbMV1dLHRoaXMuX21vZGVsLnNlbGVjdGlvblN0YXJ0TGVuZ3RoPWkubGVuZ3RofX1fc2VsZWN0VG9Xb3JkQXQoZSl7Y29uc3QgdD10aGlzLl9nZXRXb3JkQXQoZSwhMCk7aWYodCl7bGV0IGk9ZVsxXTtmb3IoO3Quc3RhcnQ8MDspdC5zdGFydCs9dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLGktLTtpZighdGhpcy5fbW9kZWwuYXJlU2VsZWN0aW9uVmFsdWVzUmV2ZXJzZWQoKSlmb3IoO3Quc3RhcnQrdC5sZW5ndGg+dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzOyl0Lmxlbmd0aC09dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzLGkrKzt0aGlzLl9tb2RlbC5zZWxlY3Rpb25FbmQ9W3RoaXMuX21vZGVsLmFyZVNlbGVjdGlvblZhbHVlc1JldmVyc2VkKCk/dC5zdGFydDp0LnN0YXJ0K3QubGVuZ3RoLGldfX1faXNDaGFyV29yZFNlcGFyYXRvcihlKXtyZXR1cm4gMCE9PWUuZ2V0V2lkdGgoKSYmdGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy53b3JkU2VwYXJhdG9yLmluZGV4T2YoZS5nZXRDaGFycygpKT49MH1fc2VsZWN0TGluZUF0KGUpe2NvbnN0IHQ9dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIuZ2V0V3JhcHBlZFJhbmdlRm9yTGluZShlKSxpPXtzdGFydDp7eDowLHk6dC5maXJzdH0sZW5kOnt4OnRoaXMuX2J1ZmZlclNlcnZpY2UuY29scy0xLHk6dC5sYXN0fX07dGhpcy5fbW9kZWwuc2VsZWN0aW9uU3RhcnQ9WzAsdC5maXJzdF0sdGhpcy5fbW9kZWwuc2VsZWN0aW9uRW5kPXZvaWQgMCx0aGlzLl9tb2RlbC5zZWxlY3Rpb25TdGFydExlbmd0aD0oMCxmLmdldFJhbmdlTGVuZ3RoKShpLHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyl9fTtwPXMoW3IoMyxsLklCdWZmZXJTZXJ2aWNlKSxyKDQsbC5JQ29yZVNlcnZpY2UpLHIoNSxjLklNb3VzZVNlcnZpY2UpLHIoNixsLklPcHRpb25zU2VydmljZSkscig3LGMuSVJlbmRlclNlcnZpY2UpLHIoOCxjLklDb3JlQnJvd3NlclNlcnZpY2UpXSxwKSx0LlNlbGVjdGlvblNlcnZpY2U9cH0sNDcyNTooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5JQ2hhcmFjdGVySm9pbmVyU2VydmljZT10LklTZWxlY3Rpb25TZXJ2aWNlPXQuSVJlbmRlclNlcnZpY2U9dC5JTW91c2VTZXJ2aWNlPXQuSUNvcmVCcm93c2VyU2VydmljZT10LklDaGFyU2l6ZVNlcnZpY2U9dm9pZCAwO2NvbnN0IHM9aSg4MzQzKTt0LklDaGFyU2l6ZVNlcnZpY2U9KDAscy5jcmVhdGVEZWNvcmF0b3IpKFwiQ2hhclNpemVTZXJ2aWNlXCIpLHQuSUNvcmVCcm93c2VyU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJDb3JlQnJvd3NlclNlcnZpY2VcIiksdC5JTW91c2VTZXJ2aWNlPSgwLHMuY3JlYXRlRGVjb3JhdG9yKShcIk1vdXNlU2VydmljZVwiKSx0LklSZW5kZXJTZXJ2aWNlPSgwLHMuY3JlYXRlRGVjb3JhdG9yKShcIlJlbmRlclNlcnZpY2VcIiksdC5JU2VsZWN0aW9uU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJTZWxlY3Rpb25TZXJ2aWNlXCIpLHQuSUNoYXJhY3RlckpvaW5lclNlcnZpY2U9KDAscy5jcmVhdGVEZWNvcmF0b3IpKFwiQ2hhcmFjdGVySm9pbmVyU2VydmljZVwiKX0sNjM0OTooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5DaXJjdWxhckxpc3Q9dm9pZCAwO2NvbnN0IHM9aSg4NDYwKTt0LkNpcmN1bGFyTGlzdD1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9tYXhMZW5ndGg9ZSx0aGlzLm9uRGVsZXRlRW1pdHRlcj1uZXcgcy5FdmVudEVtaXR0ZXIsdGhpcy5vbkluc2VydEVtaXR0ZXI9bmV3IHMuRXZlbnRFbWl0dGVyLHRoaXMub25UcmltRW1pdHRlcj1uZXcgcy5FdmVudEVtaXR0ZXIsdGhpcy5fYXJyYXk9bmV3IEFycmF5KHRoaXMuX21heExlbmd0aCksdGhpcy5fc3RhcnRJbmRleD0wLHRoaXMuX2xlbmd0aD0wfWdldCBvbkRlbGV0ZSgpe3JldHVybiB0aGlzLm9uRGVsZXRlRW1pdHRlci5ldmVudH1nZXQgb25JbnNlcnQoKXtyZXR1cm4gdGhpcy5vbkluc2VydEVtaXR0ZXIuZXZlbnR9Z2V0IG9uVHJpbSgpe3JldHVybiB0aGlzLm9uVHJpbUVtaXR0ZXIuZXZlbnR9Z2V0IG1heExlbmd0aCgpe3JldHVybiB0aGlzLl9tYXhMZW5ndGh9c2V0IG1heExlbmd0aChlKXtpZih0aGlzLl9tYXhMZW5ndGg9PT1lKXJldHVybjtjb25zdCB0PW5ldyBBcnJheShlKTtmb3IobGV0IGk9MDtpPE1hdGgubWluKGUsdGhpcy5sZW5ndGgpO2krKyl0W2ldPXRoaXMuX2FycmF5W3RoaXMuX2dldEN5Y2xpY0luZGV4KGkpXTt0aGlzLl9hcnJheT10LHRoaXMuX21heExlbmd0aD1lLHRoaXMuX3N0YXJ0SW5kZXg9MH1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuX2xlbmd0aH1zZXQgbGVuZ3RoKGUpe2lmKGU+dGhpcy5fbGVuZ3RoKWZvcihsZXQgdD10aGlzLl9sZW5ndGg7dDxlO3QrKyl0aGlzLl9hcnJheVt0XT12b2lkIDA7dGhpcy5fbGVuZ3RoPWV9Z2V0KGUpe3JldHVybiB0aGlzLl9hcnJheVt0aGlzLl9nZXRDeWNsaWNJbmRleChlKV19c2V0KGUsdCl7dGhpcy5fYXJyYXlbdGhpcy5fZ2V0Q3ljbGljSW5kZXgoZSldPXR9cHVzaChlKXt0aGlzLl9hcnJheVt0aGlzLl9nZXRDeWNsaWNJbmRleCh0aGlzLl9sZW5ndGgpXT1lLHRoaXMuX2xlbmd0aD09PXRoaXMuX21heExlbmd0aD8odGhpcy5fc3RhcnRJbmRleD0rK3RoaXMuX3N0YXJ0SW5kZXgldGhpcy5fbWF4TGVuZ3RoLHRoaXMub25UcmltRW1pdHRlci5maXJlKDEpKTp0aGlzLl9sZW5ndGgrK31yZWN5Y2xlKCl7aWYodGhpcy5fbGVuZ3RoIT09dGhpcy5fbWF4TGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbiBvbmx5IHJlY3ljbGUgd2hlbiB0aGUgYnVmZmVyIGlzIGZ1bGxcIik7cmV0dXJuIHRoaXMuX3N0YXJ0SW5kZXg9Kyt0aGlzLl9zdGFydEluZGV4JXRoaXMuX21heExlbmd0aCx0aGlzLm9uVHJpbUVtaXR0ZXIuZmlyZSgxKSx0aGlzLl9hcnJheVt0aGlzLl9nZXRDeWNsaWNJbmRleCh0aGlzLl9sZW5ndGgtMSldfWdldCBpc0Z1bGwoKXtyZXR1cm4gdGhpcy5fbGVuZ3RoPT09dGhpcy5fbWF4TGVuZ3RofXBvcCgpe3JldHVybiB0aGlzLl9hcnJheVt0aGlzLl9nZXRDeWNsaWNJbmRleCh0aGlzLl9sZW5ndGgtLS0xKV19c3BsaWNlKGUsdCwuLi5pKXtpZih0KXtmb3IobGV0IGk9ZTtpPHRoaXMuX2xlbmd0aC10O2krKyl0aGlzLl9hcnJheVt0aGlzLl9nZXRDeWNsaWNJbmRleChpKV09dGhpcy5fYXJyYXlbdGhpcy5fZ2V0Q3ljbGljSW5kZXgoaSt0KV07dGhpcy5fbGVuZ3RoLT10LHRoaXMub25EZWxldGVFbWl0dGVyLmZpcmUoe2luZGV4OmUsYW1vdW50OnR9KX1mb3IobGV0IHQ9dGhpcy5fbGVuZ3RoLTE7dD49ZTt0LS0pdGhpcy5fYXJyYXlbdGhpcy5fZ2V0Q3ljbGljSW5kZXgodCtpLmxlbmd0aCldPXRoaXMuX2FycmF5W3RoaXMuX2dldEN5Y2xpY0luZGV4KHQpXTtmb3IobGV0IHQ9MDt0PGkubGVuZ3RoO3QrKyl0aGlzLl9hcnJheVt0aGlzLl9nZXRDeWNsaWNJbmRleChlK3QpXT1pW3RdO2lmKGkubGVuZ3RoJiZ0aGlzLm9uSW5zZXJ0RW1pdHRlci5maXJlKHtpbmRleDplLGFtb3VudDppLmxlbmd0aH0pLHRoaXMuX2xlbmd0aCtpLmxlbmd0aD50aGlzLl9tYXhMZW5ndGgpe2NvbnN0IGU9dGhpcy5fbGVuZ3RoK2kubGVuZ3RoLXRoaXMuX21heExlbmd0aDt0aGlzLl9zdGFydEluZGV4Kz1lLHRoaXMuX2xlbmd0aD10aGlzLl9tYXhMZW5ndGgsdGhpcy5vblRyaW1FbWl0dGVyLmZpcmUoZSl9ZWxzZSB0aGlzLl9sZW5ndGgrPWkubGVuZ3RofXRyaW1TdGFydChlKXtlPnRoaXMuX2xlbmd0aCYmKGU9dGhpcy5fbGVuZ3RoKSx0aGlzLl9zdGFydEluZGV4Kz1lLHRoaXMuX2xlbmd0aC09ZSx0aGlzLm9uVHJpbUVtaXR0ZXIuZmlyZShlKX1zaGlmdEVsZW1lbnRzKGUsdCxpKXtpZighKHQ8PTApKXtpZihlPDB8fGU+PXRoaXMuX2xlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJzdGFydCBhcmd1bWVudCBvdXQgb2YgcmFuZ2VcIik7aWYoZStpPDApdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNoaWZ0IGVsZW1lbnRzIGluIGxpc3QgYmV5b25kIGluZGV4IDBcIik7aWYoaT4wKXtmb3IobGV0IHM9dC0xO3M+PTA7cy0tKXRoaXMuc2V0KGUrcytpLHRoaXMuZ2V0KGUrcykpO2NvbnN0IHM9ZSt0K2ktdGhpcy5fbGVuZ3RoO2lmKHM+MClmb3IodGhpcy5fbGVuZ3RoKz1zO3RoaXMuX2xlbmd0aD50aGlzLl9tYXhMZW5ndGg7KXRoaXMuX2xlbmd0aC0tLHRoaXMuX3N0YXJ0SW5kZXgrKyx0aGlzLm9uVHJpbUVtaXR0ZXIuZmlyZSgxKX1lbHNlIGZvcihsZXQgcz0wO3M8dDtzKyspdGhpcy5zZXQoZStzK2ksdGhpcy5nZXQoZStzKSl9fV9nZXRDeWNsaWNJbmRleChlKXtyZXR1cm4odGhpcy5fc3RhcnRJbmRleCtlKSV0aGlzLl9tYXhMZW5ndGh9fX0sMTQzOTooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuY2xvbmU9dm9pZCAwLHQuY2xvbmU9ZnVuY3Rpb24gZSh0LGk9NSl7aWYoXCJvYmplY3RcIiE9dHlwZW9mIHQpcmV0dXJuIHQ7Y29uc3Qgcz1BcnJheS5pc0FycmF5KHQpP1tdOnt9O2Zvcihjb25zdCByIGluIHQpc1tyXT1pPD0xP3Rbcl06dFtyXSYmZSh0W3JdLGktMSk7cmV0dXJuIHN9fSw4MDU1OihlLHQpPT57dmFyIGkscyxyO2Z1bmN0aW9uIG4oZSl7Y29uc3QgdD1lLnRvU3RyaW5nKDE2KTtyZXR1cm4gdC5sZW5ndGg8Mj9cIjBcIit0OnR9ZnVuY3Rpb24gbyhlLHQpe3JldHVybiBlPHQ/KHQrLjA1KS8oZSsuMDUpOihlKy4wNSkvKHQrLjA1KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmNvbnRyYXN0UmF0aW89dC50b1BhZGRlZEhleD10LnJnYmE9dC5yZ2I9dC5jc3M9dC5jb2xvcj10LmNoYW5uZWxzPXZvaWQgMCxmdW5jdGlvbihlKXtlLnRvQ3NzPWZ1bmN0aW9uKGUsdCxpLHMpe3JldHVybiB2b2lkIDAhPT1zP2AjJHtuKGUpfSR7bih0KX0ke24oaSl9JHtuKHMpfWA6YCMke24oZSl9JHtuKHQpfSR7bihpKX1gfSxlLnRvUmdiYT1mdW5jdGlvbihlLHQsaSxzPTI1NSl7cmV0dXJuKGU8PDI0fHQ8PDE2fGk8PDh8cyk+Pj4wfX0oaT10LmNoYW5uZWxzfHwodC5jaGFubmVscz17fSkpLGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSx0KXtjb25zdCBzPU1hdGgucm91bmQoMjU1KnQpLFtuLG8sYV09ci50b0NoYW5uZWxzKGUucmdiYSk7cmV0dXJue2NzczppLnRvQ3NzKG4sbyxhLHMpLHJnYmE6aS50b1JnYmEobixvLGEscyl9fWUuYmxlbmQ9ZnVuY3Rpb24oZSx0KXtjb25zdCBzPSgyNTUmdC5yZ2JhKS8yNTU7aWYoMT09PXMpcmV0dXJue2Nzczp0LmNzcyxyZ2JhOnQucmdiYX07Y29uc3Qgcj10LnJnYmE+PjI0JjI1NSxuPXQucmdiYT4+MTYmMjU1LG89dC5yZ2JhPj44JjI1NSxhPWUucmdiYT4+MjQmMjU1LGg9ZS5yZ2JhPj4xNiYyNTUsYz1lLnJnYmE+PjgmMjU1LGw9YStNYXRoLnJvdW5kKChyLWEpKnMpLGQ9aCtNYXRoLnJvdW5kKChuLWgpKnMpLF89YytNYXRoLnJvdW5kKChvLWMpKnMpO3JldHVybntjc3M6aS50b0NzcyhsLGQsXykscmdiYTppLnRvUmdiYShsLGQsXyl9fSxlLmlzT3BhcXVlPWZ1bmN0aW9uKGUpe3JldHVybiAyNTU9PSgyNTUmZS5yZ2JhKX0sZS5lbnN1cmVDb250cmFzdFJhdGlvPWZ1bmN0aW9uKGUsdCxpKXtjb25zdCBzPXIuZW5zdXJlQ29udHJhc3RSYXRpbyhlLnJnYmEsdC5yZ2JhLGkpO2lmKHMpcmV0dXJuIHIudG9Db2xvcihzPj4yNCYyNTUscz4+MTYmMjU1LHM+PjgmMjU1KX0sZS5vcGFxdWU9ZnVuY3Rpb24oZSl7Y29uc3QgdD0oMjU1fGUucmdiYSk+Pj4wLFtzLG4sb109ci50b0NoYW5uZWxzKHQpO3JldHVybntjc3M6aS50b0NzcyhzLG4sbykscmdiYTp0fX0sZS5vcGFjaXR5PXQsZS5tdWx0aXBseU9wYWNpdHk9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdChlLCgyNTUmZS5yZ2JhKSppLzI1NSl9LGUudG9Db2xvclJHQj1mdW5jdGlvbihlKXtyZXR1cm5bZS5yZ2JhPj4yNCYyNTUsZS5yZ2JhPj4xNiYyNTUsZS5yZ2JhPj44JjI1NV19fSh0LmNvbG9yfHwodC5jb2xvcj17fSkpLCh0LmNzc3x8KHQuY3NzPXt9KSkudG9Db2xvcj1mdW5jdGlvbihlKXtpZihlLm1hdGNoKC8jWzAtOWEtZl17Myw4fS9pKSlzd2l0Y2goZS5sZW5ndGgpe2Nhc2UgNDp7Y29uc3QgdD1wYXJzZUludChlLnNsaWNlKDEsMikucmVwZWF0KDIpLDE2KSxpPXBhcnNlSW50KGUuc2xpY2UoMiwzKS5yZXBlYXQoMiksMTYpLHM9cGFyc2VJbnQoZS5zbGljZSgzLDQpLnJlcGVhdCgyKSwxNik7cmV0dXJuIHIudG9Db2xvcih0LGkscyl9Y2FzZSA1Ontjb25zdCB0PXBhcnNlSW50KGUuc2xpY2UoMSwyKS5yZXBlYXQoMiksMTYpLGk9cGFyc2VJbnQoZS5zbGljZSgyLDMpLnJlcGVhdCgyKSwxNikscz1wYXJzZUludChlLnNsaWNlKDMsNCkucmVwZWF0KDIpLDE2KSxuPXBhcnNlSW50KGUuc2xpY2UoNCw1KS5yZXBlYXQoMiksMTYpO3JldHVybiByLnRvQ29sb3IodCxpLHMsbil9Y2FzZSA3OnJldHVybntjc3M6ZSxyZ2JhOihwYXJzZUludChlLnNsaWNlKDEpLDE2KTw8OHwyNTUpPj4+MH07Y2FzZSA5OnJldHVybntjc3M6ZSxyZ2JhOnBhcnNlSW50KGUuc2xpY2UoMSksMTYpPj4+MH19Y29uc3QgdD1lLm1hdGNoKC9yZ2JhP1xcKFxccyooXFxkezEsM30pXFxzKixcXHMqKFxcZHsxLDN9KVxccyosXFxzKihcXGR7MSwzfSlcXHMqKCxcXHMqKDB8MXxcXGQ/XFwuKFxcZCspKVxccyopP1xcKS8pO2lmKHQpe2NvbnN0IGU9cGFyc2VJbnQodFsxXSksaT1wYXJzZUludCh0WzJdKSxzPXBhcnNlSW50KHRbM10pLG49TWF0aC5yb3VuZCgyNTUqKHZvaWQgMD09PXRbNV0/MTpwYXJzZUZsb2F0KHRbNV0pKSk7cmV0dXJuIHIudG9Db2xvcihlLGkscyxuKX10aHJvdyBuZXcgRXJyb3IoXCJjc3MudG9Db2xvcjogVW5zdXBwb3J0ZWQgY3NzIGZvcm1hdFwiKX0sZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHQsaSl7Y29uc3Qgcz1lLzI1NSxyPXQvMjU1LG49aS8yNTU7cmV0dXJuLjIxMjYqKHM8PS4wMzkyOD9zLzEyLjkyOk1hdGgucG93KChzKy4wNTUpLzEuMDU1LDIuNCkpKy43MTUyKihyPD0uMDM5Mjg/ci8xMi45MjpNYXRoLnBvdygocisuMDU1KS8xLjA1NSwyLjQpKSsuMDcyMioobjw9LjAzOTI4P24vMTIuOTI6TWF0aC5wb3coKG4rLjA1NSkvMS4wNTUsMi40KSl9ZS5yZWxhdGl2ZUx1bWluYW5jZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmUpfSxlLnJlbGF0aXZlTHVtaW5hbmNlMj10fShzPXQucmdifHwodC5yZ2I9e30pKSxmdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUsdCxpKXtjb25zdCByPWU+PjI0JjI1NSxuPWU+PjE2JjI1NSxhPWU+PjgmMjU1O2xldCBoPXQ+PjI0JjI1NSxjPXQ+PjE2JjI1NSxsPXQ+PjgmMjU1LGQ9byhzLnJlbGF0aXZlTHVtaW5hbmNlMihoLGMsbCkscy5yZWxhdGl2ZUx1bWluYW5jZTIocixuLGEpKTtmb3IoO2Q8aSYmKGg+MHx8Yz4wfHxsPjApOyloLT1NYXRoLm1heCgwLE1hdGguY2VpbCguMSpoKSksYy09TWF0aC5tYXgoMCxNYXRoLmNlaWwoLjEqYykpLGwtPU1hdGgubWF4KDAsTWF0aC5jZWlsKC4xKmwpKSxkPW8ocy5yZWxhdGl2ZUx1bWluYW5jZTIoaCxjLGwpLHMucmVsYXRpdmVMdW1pbmFuY2UyKHIsbixhKSk7cmV0dXJuKGg8PDI0fGM8PDE2fGw8PDh8MjU1KT4+PjB9ZnVuY3Rpb24gcihlLHQsaSl7Y29uc3Qgcj1lPj4yNCYyNTUsbj1lPj4xNiYyNTUsYT1lPj44JjI1NTtsZXQgaD10Pj4yNCYyNTUsYz10Pj4xNiYyNTUsbD10Pj44JjI1NSxkPW8ocy5yZWxhdGl2ZUx1bWluYW5jZTIoaCxjLGwpLHMucmVsYXRpdmVMdW1pbmFuY2UyKHIsbixhKSk7Zm9yKDtkPGkmJihoPDI1NXx8YzwyNTV8fGw8MjU1KTspaD1NYXRoLm1pbigyNTUsaCtNYXRoLmNlaWwoLjEqKDI1NS1oKSkpLGM9TWF0aC5taW4oMjU1LGMrTWF0aC5jZWlsKC4xKigyNTUtYykpKSxsPU1hdGgubWluKDI1NSxsK01hdGguY2VpbCguMSooMjU1LWwpKSksZD1vKHMucmVsYXRpdmVMdW1pbmFuY2UyKGgsYyxsKSxzLnJlbGF0aXZlTHVtaW5hbmNlMihyLG4sYSkpO3JldHVybihoPDwyNHxjPDwxNnxsPDw4fDI1NSk+Pj4wfWUuZW5zdXJlQ29udHJhc3RSYXRpbz1mdW5jdGlvbihlLGksbil7Y29uc3QgYT1zLnJlbGF0aXZlTHVtaW5hbmNlKGU+PjgpLGg9cy5yZWxhdGl2ZUx1bWluYW5jZShpPj44KTtpZihvKGEsaCk8bil7aWYoaDxhKXtjb25zdCBoPXQoZSxpLG4pLGM9byhhLHMucmVsYXRpdmVMdW1pbmFuY2UoaD4+OCkpO2lmKGM8bil7Y29uc3QgdD1yKGUsaSxuKTtyZXR1cm4gYz5vKGEscy5yZWxhdGl2ZUx1bWluYW5jZSh0Pj44KSk/aDp0fXJldHVybiBofWNvbnN0IGM9cihlLGksbiksbD1vKGEscy5yZWxhdGl2ZUx1bWluYW5jZShjPj44KSk7aWYobDxuKXtjb25zdCByPXQoZSxpLG4pO3JldHVybiBsPm8oYSxzLnJlbGF0aXZlTHVtaW5hbmNlKHI+PjgpKT9jOnJ9cmV0dXJuIGN9fSxlLnJlZHVjZUx1bWluYW5jZT10LGUuaW5jcmVhc2VMdW1pbmFuY2U9cixlLnRvQ2hhbm5lbHM9ZnVuY3Rpb24oZSl7cmV0dXJuW2U+PjI0JjI1NSxlPj4xNiYyNTUsZT4+OCYyNTUsMjU1JmVdfSxlLnRvQ29sb3I9ZnVuY3Rpb24oZSx0LHMscil7cmV0dXJue2NzczppLnRvQ3NzKGUsdCxzLHIpLHJnYmE6aS50b1JnYmEoZSx0LHMscil9fX0ocj10LnJnYmF8fCh0LnJnYmE9e30pKSx0LnRvUGFkZGVkSGV4PW4sdC5jb250cmFzdFJhdGlvPW99LDg5Njk6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ29yZVRlcm1pbmFsPXZvaWQgMDtjb25zdCBzPWkoODQ0KSxyPWkoMjU4NSksbj1pKDQzNDgpLG89aSg3ODY2KSxhPWkoNzQ0KSxoPWkoNzMwMiksYz1pKDY5NzUpLGw9aSg4NDYwKSxkPWkoMTc1MyksXz1pKDM3MzApLHU9aSgxNDgwKSxmPWkoNzk5NCksdj1pKDkyODIpLGc9aSg1NDM1KSxwPWkoNTk4MSksUz1pKDI2NjApO2xldCBtPSExO2NsYXNzIEMgZXh0ZW5kcyBzLkRpc3Bvc2FibGV7Y29uc3RydWN0b3IoZSl7c3VwZXIoKSx0aGlzLl9vbkJpbmFyeT1uZXcgbC5FdmVudEVtaXR0ZXIsdGhpcy5fb25EYXRhPW5ldyBsLkV2ZW50RW1pdHRlcix0aGlzLl9vbkxpbmVGZWVkPW5ldyBsLkV2ZW50RW1pdHRlcix0aGlzLl9vblJlc2l6ZT1uZXcgbC5FdmVudEVtaXR0ZXIsdGhpcy5fb25TY3JvbGw9bmV3IGwuRXZlbnRFbWl0dGVyLHRoaXMuX29uV3JpdGVQYXJzZWQ9bmV3IGwuRXZlbnRFbWl0dGVyLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlPW5ldyBuLkluc3RhbnRpYXRpb25TZXJ2aWNlLHRoaXMub3B0aW9uc1NlcnZpY2U9bmV3IGguT3B0aW9uc1NlcnZpY2UoZSksdGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2Uuc2V0U2VydmljZShyLklPcHRpb25zU2VydmljZSx0aGlzLm9wdGlvbnNTZXJ2aWNlKSx0aGlzLl9idWZmZXJTZXJ2aWNlPXRoaXMucmVnaXN0ZXIodGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2UuY3JlYXRlSW5zdGFuY2UoYS5CdWZmZXJTZXJ2aWNlKSksdGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2Uuc2V0U2VydmljZShyLklCdWZmZXJTZXJ2aWNlLHRoaXMuX2J1ZmZlclNlcnZpY2UpLHRoaXMuX2xvZ1NlcnZpY2U9dGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2UuY3JlYXRlSW5zdGFuY2Uoby5Mb2dTZXJ2aWNlKSx0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5zZXRTZXJ2aWNlKHIuSUxvZ1NlcnZpY2UsdGhpcy5fbG9nU2VydmljZSksdGhpcy5jb3JlU2VydmljZT10aGlzLnJlZ2lzdGVyKHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKGMuQ29yZVNlcnZpY2UsKCgpPT50aGlzLnNjcm9sbFRvQm90dG9tKCkpKSksdGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2Uuc2V0U2VydmljZShyLklDb3JlU2VydmljZSx0aGlzLmNvcmVTZXJ2aWNlKSx0aGlzLmNvcmVNb3VzZVNlcnZpY2U9dGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2UuY3JlYXRlSW5zdGFuY2UoZC5Db3JlTW91c2VTZXJ2aWNlKSx0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5zZXRTZXJ2aWNlKHIuSUNvcmVNb3VzZVNlcnZpY2UsdGhpcy5jb3JlTW91c2VTZXJ2aWNlKSx0aGlzLl9kaXJ0eVJvd1NlcnZpY2U9dGhpcy5faW5zdGFudGlhdGlvblNlcnZpY2UuY3JlYXRlSW5zdGFuY2UoXy5EaXJ0eVJvd1NlcnZpY2UpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2Uoci5JRGlydHlSb3dTZXJ2aWNlLHRoaXMuX2RpcnR5Um93U2VydmljZSksdGhpcy51bmljb2RlU2VydmljZT10aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5jcmVhdGVJbnN0YW5jZSh1LlVuaWNvZGVTZXJ2aWNlKSx0aGlzLl9pbnN0YW50aWF0aW9uU2VydmljZS5zZXRTZXJ2aWNlKHIuSVVuaWNvZGVTZXJ2aWNlLHRoaXMudW5pY29kZVNlcnZpY2UpLHRoaXMuX2NoYXJzZXRTZXJ2aWNlPXRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKGYuQ2hhcnNldFNlcnZpY2UpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2Uoci5JQ2hhcnNldFNlcnZpY2UsdGhpcy5fY2hhcnNldFNlcnZpY2UpLHRoaXMuX29zY0xpbmtTZXJ2aWNlPXRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLmNyZWF0ZUluc3RhbmNlKFMuT3NjTGlua1NlcnZpY2UpLHRoaXMuX2luc3RhbnRpYXRpb25TZXJ2aWNlLnNldFNlcnZpY2Uoci5JT3NjTGlua1NlcnZpY2UsdGhpcy5fb3NjTGlua1NlcnZpY2UpLHRoaXMuX2lucHV0SGFuZGxlcj1uZXcgZy5JbnB1dEhhbmRsZXIodGhpcy5fYnVmZmVyU2VydmljZSx0aGlzLl9jaGFyc2V0U2VydmljZSx0aGlzLmNvcmVTZXJ2aWNlLHRoaXMuX2RpcnR5Um93U2VydmljZSx0aGlzLl9sb2dTZXJ2aWNlLHRoaXMub3B0aW9uc1NlcnZpY2UsdGhpcy5fb3NjTGlua1NlcnZpY2UsdGhpcy5jb3JlTW91c2VTZXJ2aWNlLHRoaXMudW5pY29kZVNlcnZpY2UpLHRoaXMucmVnaXN0ZXIoKDAsbC5mb3J3YXJkRXZlbnQpKHRoaXMuX2lucHV0SGFuZGxlci5vbkxpbmVGZWVkLHRoaXMuX29uTGluZUZlZWQpKSx0aGlzLnJlZ2lzdGVyKHRoaXMuX2lucHV0SGFuZGxlciksdGhpcy5yZWdpc3RlcigoMCxsLmZvcndhcmRFdmVudCkodGhpcy5fYnVmZmVyU2VydmljZS5vblJlc2l6ZSx0aGlzLl9vblJlc2l6ZSkpLHRoaXMucmVnaXN0ZXIoKDAsbC5mb3J3YXJkRXZlbnQpKHRoaXMuY29yZVNlcnZpY2Uub25EYXRhLHRoaXMuX29uRGF0YSkpLHRoaXMucmVnaXN0ZXIoKDAsbC5mb3J3YXJkRXZlbnQpKHRoaXMuY29yZVNlcnZpY2Uub25CaW5hcnksdGhpcy5fb25CaW5hcnkpKSx0aGlzLnJlZ2lzdGVyKHRoaXMub3B0aW9uc1NlcnZpY2Uub25PcHRpb25DaGFuZ2UoKGU9PnRoaXMuX3VwZGF0ZU9wdGlvbnMoZSkpKSksdGhpcy5yZWdpc3Rlcih0aGlzLl9idWZmZXJTZXJ2aWNlLm9uU2Nyb2xsKChlPT57dGhpcy5fb25TY3JvbGwuZmlyZSh7cG9zaXRpb246dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIueWRpc3Asc291cmNlOjB9KSx0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya1JhbmdlRGlydHkodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIuc2Nyb2xsVG9wLHRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnNjcm9sbEJvdHRvbSl9KSkpLHRoaXMucmVnaXN0ZXIodGhpcy5faW5wdXRIYW5kbGVyLm9uU2Nyb2xsKChlPT57dGhpcy5fb25TY3JvbGwuZmlyZSh7cG9zaXRpb246dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIueWRpc3Asc291cmNlOjB9KSx0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya1JhbmdlRGlydHkodGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIuc2Nyb2xsVG9wLHRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLnNjcm9sbEJvdHRvbSl9KSkpLHRoaXMuX3dyaXRlQnVmZmVyPW5ldyBwLldyaXRlQnVmZmVyKCgoZSx0KT0+dGhpcy5faW5wdXRIYW5kbGVyLnBhcnNlKGUsdCkpKSx0aGlzLnJlZ2lzdGVyKCgwLGwuZm9yd2FyZEV2ZW50KSh0aGlzLl93cml0ZUJ1ZmZlci5vbldyaXRlUGFyc2VkLHRoaXMuX29uV3JpdGVQYXJzZWQpKX1nZXQgb25CaW5hcnkoKXtyZXR1cm4gdGhpcy5fb25CaW5hcnkuZXZlbnR9Z2V0IG9uRGF0YSgpe3JldHVybiB0aGlzLl9vbkRhdGEuZXZlbnR9Z2V0IG9uTGluZUZlZWQoKXtyZXR1cm4gdGhpcy5fb25MaW5lRmVlZC5ldmVudH1nZXQgb25SZXNpemUoKXtyZXR1cm4gdGhpcy5fb25SZXNpemUuZXZlbnR9Z2V0IG9uV3JpdGVQYXJzZWQoKXtyZXR1cm4gdGhpcy5fb25Xcml0ZVBhcnNlZC5ldmVudH1nZXQgb25TY3JvbGwoKXtyZXR1cm4gdGhpcy5fb25TY3JvbGxBcGl8fCh0aGlzLl9vblNjcm9sbEFwaT1uZXcgbC5FdmVudEVtaXR0ZXIsdGhpcy5yZWdpc3Rlcih0aGlzLl9vblNjcm9sbC5ldmVudCgoZT0+e3ZhciB0O251bGw9PT0odD10aGlzLl9vblNjcm9sbEFwaSl8fHZvaWQgMD09PXR8fHQuZmlyZShlLnBvc2l0aW9uKX0pKSkpLHRoaXMuX29uU2Nyb2xsQXBpLmV2ZW50fWdldCBjb2xzKCl7cmV0dXJuIHRoaXMuX2J1ZmZlclNlcnZpY2UuY29sc31nZXQgcm93cygpe3JldHVybiB0aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3N9Z2V0IGJ1ZmZlcnMoKXtyZXR1cm4gdGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzfWdldCBvcHRpb25zKCl7cmV0dXJuIHRoaXMub3B0aW9uc1NlcnZpY2Uub3B0aW9uc31zZXQgb3B0aW9ucyhlKXtmb3IoY29uc3QgdCBpbiBlKXRoaXMub3B0aW9uc1NlcnZpY2Uub3B0aW9uc1t0XT1lW3RdfWRpc3Bvc2UoKXt2YXIgZTt0aGlzLl9pc0Rpc3Bvc2VkfHwoc3VwZXIuZGlzcG9zZSgpLG51bGw9PT0oZT10aGlzLl93aW5kb3dzTW9kZSl8fHZvaWQgMD09PWV8fGUuZGlzcG9zZSgpLHRoaXMuX3dpbmRvd3NNb2RlPXZvaWQgMCl9d3JpdGUoZSx0KXt0aGlzLl93cml0ZUJ1ZmZlci53cml0ZShlLHQpfXdyaXRlU3luYyhlLHQpe3RoaXMuX2xvZ1NlcnZpY2UubG9nTGV2ZWw8PXIuTG9nTGV2ZWxFbnVtLldBUk4mJiFtJiYodGhpcy5fbG9nU2VydmljZS53YXJuKFwid3JpdGVTeW5jIGlzIHVucmVsaWFibGUgYW5kIHdpbGwgYmUgcmVtb3ZlZCBzb29uLlwiKSxtPSEwKSx0aGlzLl93cml0ZUJ1ZmZlci53cml0ZVN5bmMoZSx0KX1yZXNpemUoZSx0KXtpc05hTihlKXx8aXNOYU4odCl8fChlPU1hdGgubWF4KGUsYS5NSU5JTVVNX0NPTFMpLHQ9TWF0aC5tYXgodCxhLk1JTklNVU1fUk9XUyksdGhpcy5fYnVmZmVyU2VydmljZS5yZXNpemUoZSx0KSl9c2Nyb2xsKGUsdD0hMSl7dGhpcy5fYnVmZmVyU2VydmljZS5zY3JvbGwoZSx0KX1zY3JvbGxMaW5lcyhlLHQsaSl7dGhpcy5fYnVmZmVyU2VydmljZS5zY3JvbGxMaW5lcyhlLHQsaSl9c2Nyb2xsUGFnZXMoZSl7dGhpcy5fYnVmZmVyU2VydmljZS5zY3JvbGxQYWdlcyhlKX1zY3JvbGxUb1RvcCgpe3RoaXMuX2J1ZmZlclNlcnZpY2Uuc2Nyb2xsVG9Ub3AoKX1zY3JvbGxUb0JvdHRvbSgpe3RoaXMuX2J1ZmZlclNlcnZpY2Uuc2Nyb2xsVG9Cb3R0b20oKX1zY3JvbGxUb0xpbmUoZSl7dGhpcy5fYnVmZmVyU2VydmljZS5zY3JvbGxUb0xpbmUoZSl9cmVnaXN0ZXJFc2NIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMuX2lucHV0SGFuZGxlci5yZWdpc3RlckVzY0hhbmRsZXIoZSx0KX1yZWdpc3RlckRjc0hhbmRsZXIoZSx0KXtyZXR1cm4gdGhpcy5faW5wdXRIYW5kbGVyLnJlZ2lzdGVyRGNzSGFuZGxlcihlLHQpfXJlZ2lzdGVyQ3NpSGFuZGxlcihlLHQpe3JldHVybiB0aGlzLl9pbnB1dEhhbmRsZXIucmVnaXN0ZXJDc2lIYW5kbGVyKGUsdCl9cmVnaXN0ZXJPc2NIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMuX2lucHV0SGFuZGxlci5yZWdpc3Rlck9zY0hhbmRsZXIoZSx0KX1fc2V0dXAoKXt0aGlzLm9wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMud2luZG93c01vZGUmJnRoaXMuX2VuYWJsZVdpbmRvd3NNb2RlKCl9cmVzZXQoKXt0aGlzLl9pbnB1dEhhbmRsZXIucmVzZXQoKSx0aGlzLl9idWZmZXJTZXJ2aWNlLnJlc2V0KCksdGhpcy5fY2hhcnNldFNlcnZpY2UucmVzZXQoKSx0aGlzLmNvcmVTZXJ2aWNlLnJlc2V0KCksdGhpcy5jb3JlTW91c2VTZXJ2aWNlLnJlc2V0KCl9X3VwZGF0ZU9wdGlvbnMoZSl7dmFyIHQ7c3dpdGNoKGUpe2Nhc2VcInNjcm9sbGJhY2tcIjp0aGlzLmJ1ZmZlcnMucmVzaXplKHRoaXMuY29scyx0aGlzLnJvd3MpO2JyZWFrO2Nhc2VcIndpbmRvd3NNb2RlXCI6dGhpcy5vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLndpbmRvd3NNb2RlP3RoaXMuX2VuYWJsZVdpbmRvd3NNb2RlKCk6KG51bGw9PT0odD10aGlzLl93aW5kb3dzTW9kZSl8fHZvaWQgMD09PXR8fHQuZGlzcG9zZSgpLHRoaXMuX3dpbmRvd3NNb2RlPXZvaWQgMCl9fV9lbmFibGVXaW5kb3dzTW9kZSgpe2lmKCF0aGlzLl93aW5kb3dzTW9kZSl7Y29uc3QgZT1bXTtlLnB1c2godGhpcy5vbkxpbmVGZWVkKHYudXBkYXRlV2luZG93c01vZGVXcmFwcGVkU3RhdGUuYmluZChudWxsLHRoaXMuX2J1ZmZlclNlcnZpY2UpKSksZS5wdXNoKHRoaXMucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIkhcIn0sKCgpPT4oKDAsdi51cGRhdGVXaW5kb3dzTW9kZVdyYXBwZWRTdGF0ZSkodGhpcy5fYnVmZmVyU2VydmljZSksITEpKSkpLHRoaXMuX3dpbmRvd3NNb2RlPXtkaXNwb3NlOigpPT57Zm9yKGNvbnN0IHQgb2YgZSl0LmRpc3Bvc2UoKX19fX19dC5Db3JlVGVybWluYWw9Q30sODQ2MDooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuZm9yd2FyZEV2ZW50PXQuRXZlbnRFbWl0dGVyPXZvaWQgMCx0LkV2ZW50RW1pdHRlcj1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuX2xpc3RlbmVycz1bXSx0aGlzLl9kaXNwb3NlZD0hMX1nZXQgZXZlbnQoKXtyZXR1cm4gdGhpcy5fZXZlbnR8fCh0aGlzLl9ldmVudD1lPT4odGhpcy5fbGlzdGVuZXJzLnB1c2goZSkse2Rpc3Bvc2U6KCk9PntpZighdGhpcy5fZGlzcG9zZWQpZm9yKGxldCB0PTA7dDx0aGlzLl9saXN0ZW5lcnMubGVuZ3RoO3QrKylpZih0aGlzLl9saXN0ZW5lcnNbdF09PT1lKXJldHVybiB2b2lkIHRoaXMuX2xpc3RlbmVycy5zcGxpY2UodCwxKX19KSksdGhpcy5fZXZlbnR9ZmlyZShlLHQpe2NvbnN0IGk9W107Zm9yKGxldCBlPTA7ZTx0aGlzLl9saXN0ZW5lcnMubGVuZ3RoO2UrKylpLnB1c2godGhpcy5fbGlzdGVuZXJzW2VdKTtmb3IobGV0IHM9MDtzPGkubGVuZ3RoO3MrKylpW3NdLmNhbGwodm9pZCAwLGUsdCl9ZGlzcG9zZSgpe3RoaXMuX2xpc3RlbmVycyYmKHRoaXMuX2xpc3RlbmVycy5sZW5ndGg9MCksdGhpcy5fZGlzcG9zZWQ9ITB9fSx0LmZvcndhcmRFdmVudD1mdW5jdGlvbihlLHQpe3JldHVybiBlKChlPT50LmZpcmUoZSkpKX19LDU0MzU6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuSW5wdXRIYW5kbGVyPXQuV2luZG93c09wdGlvbnNSZXBvcnRUeXBlPXZvaWQgMDtjb25zdCBzPWkoMjU4NCkscj1pKDcxMTYpLG49aSgyMDE1KSxvPWkoODQ0KSxhPWkoNDgyKSxoPWkoODQzNyksYz1pKDg0NjApLGw9aSg2NDMpLGQ9aSg1MTEpLF89aSgzNzM0KSx1PWkoMjU4NSksZj1pKDYyNDIpLHY9aSg2MzUxKSxnPWkoNTk0MSkscD17XCIoXCI6MCxcIilcIjoxLFwiKlwiOjIsXCIrXCI6MyxcIi1cIjoxLFwiLlwiOjJ9LFM9MTMxMDcyO2Z1bmN0aW9uIG0oZSx0KXtpZihlPjI0KXJldHVybiB0LnNldFdpbkxpbmVzfHwhMTtzd2l0Y2goZSl7Y2FzZSAxOnJldHVybiEhdC5yZXN0b3JlV2luO2Nhc2UgMjpyZXR1cm4hIXQubWluaW1pemVXaW47Y2FzZSAzOnJldHVybiEhdC5zZXRXaW5Qb3NpdGlvbjtjYXNlIDQ6cmV0dXJuISF0LnNldFdpblNpemVQaXhlbHM7Y2FzZSA1OnJldHVybiEhdC5yYWlzZVdpbjtjYXNlIDY6cmV0dXJuISF0Lmxvd2VyV2luO2Nhc2UgNzpyZXR1cm4hIXQucmVmcmVzaFdpbjtjYXNlIDg6cmV0dXJuISF0LnNldFdpblNpemVDaGFycztjYXNlIDk6cmV0dXJuISF0Lm1heGltaXplV2luO2Nhc2UgMTA6cmV0dXJuISF0LmZ1bGxzY3JlZW5XaW47Y2FzZSAxMTpyZXR1cm4hIXQuZ2V0V2luU3RhdGU7Y2FzZSAxMzpyZXR1cm4hIXQuZ2V0V2luUG9zaXRpb247Y2FzZSAxNDpyZXR1cm4hIXQuZ2V0V2luU2l6ZVBpeGVscztjYXNlIDE1OnJldHVybiEhdC5nZXRTY3JlZW5TaXplUGl4ZWxzO2Nhc2UgMTY6cmV0dXJuISF0LmdldENlbGxTaXplUGl4ZWxzO2Nhc2UgMTg6cmV0dXJuISF0LmdldFdpblNpemVDaGFycztjYXNlIDE5OnJldHVybiEhdC5nZXRTY3JlZW5TaXplQ2hhcnM7Y2FzZSAyMDpyZXR1cm4hIXQuZ2V0SWNvblRpdGxlO2Nhc2UgMjE6cmV0dXJuISF0LmdldFdpblRpdGxlO2Nhc2UgMjI6cmV0dXJuISF0LnB1c2hUaXRsZTtjYXNlIDIzOnJldHVybiEhdC5wb3BUaXRsZTtjYXNlIDI0OnJldHVybiEhdC5zZXRXaW5MaW5lc31yZXR1cm4hMX12YXIgQzshZnVuY3Rpb24oZSl7ZVtlLkdFVF9XSU5fU0laRV9QSVhFTFM9MF09XCJHRVRfV0lOX1NJWkVfUElYRUxTXCIsZVtlLkdFVF9DRUxMX1NJWkVfUElYRUxTPTFdPVwiR0VUX0NFTExfU0laRV9QSVhFTFNcIn0oQz10LldpbmRvd3NPcHRpb25zUmVwb3J0VHlwZXx8KHQuV2luZG93c09wdGlvbnNSZXBvcnRUeXBlPXt9KSk7Y2xhc3MgYiBleHRlbmRzIG8uRGlzcG9zYWJsZXtjb25zdHJ1Y3RvcihlLHQsaSxvLGwsXyx1LGcscCxTPW5ldyBuLkVzY2FwZVNlcXVlbmNlUGFyc2VyKXtzdXBlcigpLHRoaXMuX2J1ZmZlclNlcnZpY2U9ZSx0aGlzLl9jaGFyc2V0U2VydmljZT10LHRoaXMuX2NvcmVTZXJ2aWNlPWksdGhpcy5fZGlydHlSb3dTZXJ2aWNlPW8sdGhpcy5fbG9nU2VydmljZT1sLHRoaXMuX29wdGlvbnNTZXJ2aWNlPV8sdGhpcy5fb3NjTGlua1NlcnZpY2U9dSx0aGlzLl9jb3JlTW91c2VTZXJ2aWNlPWcsdGhpcy5fdW5pY29kZVNlcnZpY2U9cCx0aGlzLl9wYXJzZXI9Uyx0aGlzLl9wYXJzZUJ1ZmZlcj1uZXcgVWludDMyQXJyYXkoNDA5NiksdGhpcy5fc3RyaW5nRGVjb2Rlcj1uZXcgYS5TdHJpbmdUb1V0ZjMyLHRoaXMuX3V0ZjhEZWNvZGVyPW5ldyBhLlV0ZjhUb1V0ZjMyLHRoaXMuX3dvcmtDZWxsPW5ldyBkLkNlbGxEYXRhLHRoaXMuX3dpbmRvd1RpdGxlPVwiXCIsdGhpcy5faWNvbk5hbWU9XCJcIix0aGlzLl93aW5kb3dUaXRsZVN0YWNrPVtdLHRoaXMuX2ljb25OYW1lU3RhY2s9W10sdGhpcy5fY3VyQXR0ckRhdGE9aC5ERUZBVUxUX0FUVFJfREFUQS5jbG9uZSgpLHRoaXMuX2VyYXNlQXR0ckRhdGFJbnRlcm5hbD1oLkRFRkFVTFRfQVRUUl9EQVRBLmNsb25lKCksdGhpcy5fb25SZXF1ZXN0QmVsbD1uZXcgYy5FdmVudEVtaXR0ZXIsdGhpcy5fb25SZXF1ZXN0UmVmcmVzaFJvd3M9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX29uUmVxdWVzdFJlc2V0PW5ldyBjLkV2ZW50RW1pdHRlcix0aGlzLl9vblJlcXVlc3RTZW5kRm9jdXM9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXI9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX29uUmVxdWVzdFdpbmRvd3NPcHRpb25zUmVwb3J0PW5ldyBjLkV2ZW50RW1pdHRlcix0aGlzLl9vbkExMXlDaGFyPW5ldyBjLkV2ZW50RW1pdHRlcix0aGlzLl9vbkExMXlUYWI9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX29uQ3Vyc29yTW92ZT1uZXcgYy5FdmVudEVtaXR0ZXIsdGhpcy5fb25MaW5lRmVlZD1uZXcgYy5FdmVudEVtaXR0ZXIsdGhpcy5fb25TY3JvbGw9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX29uVGl0bGVDaGFuZ2U9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX29uQ29sb3I9bmV3IGMuRXZlbnRFbWl0dGVyLHRoaXMuX3BhcnNlU3RhY2s9e3BhdXNlZDohMSxjdXJzb3JTdGFydFg6MCxjdXJzb3JTdGFydFk6MCxkZWNvZGVkTGVuZ3RoOjAscG9zaXRpb246MH0sdGhpcy5fc3BlY2lhbENvbG9ycz1bMjU2LDI1NywyNThdLHRoaXMucmVnaXN0ZXIodGhpcy5fcGFyc2VyKSx0aGlzLl9hY3RpdmVCdWZmZXI9dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXIsdGhpcy5yZWdpc3Rlcih0aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcnMub25CdWZmZXJBY3RpdmF0ZSgoZT0+dGhpcy5fYWN0aXZlQnVmZmVyPWUuYWN0aXZlQnVmZmVyKSkpLHRoaXMuX3BhcnNlci5zZXRDc2lIYW5kbGVyRmFsbGJhY2soKChlLHQpPT57dGhpcy5fbG9nU2VydmljZS5kZWJ1ZyhcIlVua25vd24gQ1NJIGNvZGU6IFwiLHtpZGVudGlmaWVyOnRoaXMuX3BhcnNlci5pZGVudFRvU3RyaW5nKGUpLHBhcmFtczp0LnRvQXJyYXkoKX0pfSkpLHRoaXMuX3BhcnNlci5zZXRFc2NIYW5kbGVyRmFsbGJhY2soKGU9Pnt0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiVW5rbm93biBFU0MgY29kZTogXCIse2lkZW50aWZpZXI6dGhpcy5fcGFyc2VyLmlkZW50VG9TdHJpbmcoZSl9KX0pKSx0aGlzLl9wYXJzZXIuc2V0RXhlY3V0ZUhhbmRsZXJGYWxsYmFjaygoZT0+e3RoaXMuX2xvZ1NlcnZpY2UuZGVidWcoXCJVbmtub3duIEVYRUNVVEUgY29kZTogXCIse2NvZGU6ZX0pfSkpLHRoaXMuX3BhcnNlci5zZXRPc2NIYW5kbGVyRmFsbGJhY2soKChlLHQsaSk9Pnt0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiVW5rbm93biBPU0MgY29kZTogXCIse2lkZW50aWZpZXI6ZSxhY3Rpb246dCxkYXRhOml9KX0pKSx0aGlzLl9wYXJzZXIuc2V0RGNzSGFuZGxlckZhbGxiYWNrKCgoZSx0LGkpPT57XCJIT09LXCI9PT10JiYoaT1pLnRvQXJyYXkoKSksdGhpcy5fbG9nU2VydmljZS5kZWJ1ZyhcIlVua25vd24gRENTIGNvZGU6IFwiLHtpZGVudGlmaWVyOnRoaXMuX3BhcnNlci5pZGVudFRvU3RyaW5nKGUpLGFjdGlvbjp0LHBheWxvYWQ6aX0pfSkpLHRoaXMuX3BhcnNlci5zZXRQcmludEhhbmRsZXIoKChlLHQsaSk9PnRoaXMucHJpbnQoZSx0LGkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJAXCJ9LChlPT50aGlzLmluc2VydENoYXJzKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIiBcIixmaW5hbDpcIkBcIn0sKGU9PnRoaXMuc2Nyb2xsTGVmdChlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiQVwifSwoZT0+dGhpcy5jdXJzb3JVcChlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIgXCIsZmluYWw6XCJBXCJ9LChlPT50aGlzLnNjcm9sbFJpZ2h0KGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJCXCJ9LChlPT50aGlzLmN1cnNvckRvd24oZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIkNcIn0sKGU9PnRoaXMuY3Vyc29yRm9yd2FyZChlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiRFwifSwoZT0+dGhpcy5jdXJzb3JCYWNrd2FyZChlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiRVwifSwoZT0+dGhpcy5jdXJzb3JOZXh0TGluZShlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiRlwifSwoZT0+dGhpcy5jdXJzb3JQcmVjZWRpbmdMaW5lKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJHXCJ9LChlPT50aGlzLmN1cnNvckNoYXJBYnNvbHV0ZShlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiSFwifSwoZT0+dGhpcy5jdXJzb3JQb3NpdGlvbihlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiSVwifSwoZT0+dGhpcy5jdXJzb3JGb3J3YXJkVGFiKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJKXCJ9LChlPT50aGlzLmVyYXNlSW5EaXNwbGF5KGUsITEpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7cHJlZml4OlwiP1wiLGZpbmFsOlwiSlwifSwoZT0+dGhpcy5lcmFzZUluRGlzcGxheShlLCEwKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiS1wifSwoZT0+dGhpcy5lcmFzZUluTGluZShlLCExKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe3ByZWZpeDpcIj9cIixmaW5hbDpcIktcIn0sKGU9PnRoaXMuZXJhc2VJbkxpbmUoZSwhMCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIkxcIn0sKGU9PnRoaXMuaW5zZXJ0TGluZXMoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIk1cIn0sKGU9PnRoaXMuZGVsZXRlTGluZXMoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIlBcIn0sKGU9PnRoaXMuZGVsZXRlQ2hhcnMoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIlNcIn0sKGU9PnRoaXMuc2Nyb2xsVXAoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIlRcIn0sKGU9PnRoaXMuc2Nyb2xsRG93bihlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiWFwifSwoZT0+dGhpcy5lcmFzZUNoYXJzKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJaXCJ9LChlPT50aGlzLmN1cnNvckJhY2t3YXJkVGFiKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJgXCJ9LChlPT50aGlzLmNoYXJQb3NBYnNvbHV0ZShlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiYVwifSwoZT0+dGhpcy5oUG9zaXRpb25SZWxhdGl2ZShlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiYlwifSwoZT0+dGhpcy5yZXBlYXRQcmVjZWRpbmdDaGFyYWN0ZXIoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcImNcIn0sKGU9PnRoaXMuc2VuZERldmljZUF0dHJpYnV0ZXNQcmltYXJ5KGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7cHJlZml4OlwiPlwiLGZpbmFsOlwiY1wifSwoZT0+dGhpcy5zZW5kRGV2aWNlQXR0cmlidXRlc1NlY29uZGFyeShlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiZFwifSwoZT0+dGhpcy5saW5lUG9zQWJzb2x1dGUoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcImVcIn0sKGU9PnRoaXMudlBvc2l0aW9uUmVsYXRpdmUoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcImZcIn0sKGU9PnRoaXMuaFZQb3NpdGlvbihlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiZ1wifSwoZT0+dGhpcy50YWJDbGVhcihlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwiaFwifSwoZT0+dGhpcy5zZXRNb2RlKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7cHJlZml4OlwiP1wiLGZpbmFsOlwiaFwifSwoZT0+dGhpcy5zZXRNb2RlUHJpdmF0ZShlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwibFwifSwoZT0+dGhpcy5yZXNldE1vZGUoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtwcmVmaXg6XCI/XCIsZmluYWw6XCJsXCJ9LChlPT50aGlzLnJlc2V0TW9kZVByaXZhdGUoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIm1cIn0sKGU9PnRoaXMuY2hhckF0dHJpYnV0ZXMoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcIm5cIn0sKGU9PnRoaXMuZGV2aWNlU3RhdHVzKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7cHJlZml4OlwiP1wiLGZpbmFsOlwiblwifSwoZT0+dGhpcy5kZXZpY2VTdGF0dXNQcml2YXRlKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIiFcIixmaW5hbDpcInBcIn0sKGU9PnRoaXMuc29mdFJlc2V0KGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIiBcIixmaW5hbDpcInFcIn0sKGU9PnRoaXMuc2V0Q3Vyc29yU3R5bGUoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcInJcIn0sKGU9PnRoaXMuc2V0U2Nyb2xsUmVnaW9uKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7ZmluYWw6XCJzXCJ9LChlPT50aGlzLnNhdmVDdXJzb3IoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtmaW5hbDpcInRcIn0sKGU9PnRoaXMud2luZG93T3B0aW9ucyhlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ZpbmFsOlwidVwifSwoZT0+dGhpcy5yZXN0b3JlQ3Vyc29yKGUpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIidcIixmaW5hbDpcIn1cIn0sKGU9PnRoaXMuaW5zZXJ0Q29sdW1ucyhlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCInXCIsZmluYWw6XCJ+XCJ9LChlPT50aGlzLmRlbGV0ZUNvbHVtbnMoZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKHtpbnRlcm1lZGlhdGVzOidcIicsZmluYWw6XCJxXCJ9LChlPT50aGlzLnNlbGVjdFByb3RlY3RlZChlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIkXCIsZmluYWw6XCJwXCJ9LChlPT50aGlzLnJlcXVlc3RNb2RlKGUsITApKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyQ3NpSGFuZGxlcih7cHJlZml4OlwiP1wiLGludGVybWVkaWF0ZXM6XCIkXCIsZmluYWw6XCJwXCJ9LChlPT50aGlzLnJlcXVlc3RNb2RlKGUsITEpKSksdGhpcy5fcGFyc2VyLnNldEV4ZWN1dGVIYW5kbGVyKHMuQzAuQkVMLCgoKT0+dGhpcy5iZWxsKCkpKSx0aGlzLl9wYXJzZXIuc2V0RXhlY3V0ZUhhbmRsZXIocy5DMC5MRiwoKCk9PnRoaXMubGluZUZlZWQoKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMwLlZULCgoKT0+dGhpcy5saW5lRmVlZCgpKSksdGhpcy5fcGFyc2VyLnNldEV4ZWN1dGVIYW5kbGVyKHMuQzAuRkYsKCgpPT50aGlzLmxpbmVGZWVkKCkpKSx0aGlzLl9wYXJzZXIuc2V0RXhlY3V0ZUhhbmRsZXIocy5DMC5DUiwoKCk9PnRoaXMuY2FycmlhZ2VSZXR1cm4oKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMwLkJTLCgoKT0+dGhpcy5iYWNrc3BhY2UoKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMwLkhULCgoKT0+dGhpcy50YWIoKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMwLlNPLCgoKT0+dGhpcy5zaGlmdE91dCgpKSksdGhpcy5fcGFyc2VyLnNldEV4ZWN1dGVIYW5kbGVyKHMuQzAuU0ksKCgpPT50aGlzLnNoaWZ0SW4oKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMxLklORCwoKCk9PnRoaXMuaW5kZXgoKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMxLk5FTCwoKCk9PnRoaXMubmV4dExpbmUoKSkpLHRoaXMuX3BhcnNlci5zZXRFeGVjdXRlSGFuZGxlcihzLkMxLkhUUywoKCk9PnRoaXMudGFiU2V0KCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJPc2NIYW5kbGVyKDAsbmV3IGYuT3NjSGFuZGxlcigoZT0+KHRoaXMuc2V0VGl0bGUoZSksdGhpcy5zZXRJY29uTmFtZShlKSwhMCkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyT3NjSGFuZGxlcigxLG5ldyBmLk9zY0hhbmRsZXIoKGU9PnRoaXMuc2V0SWNvbk5hbWUoZSkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyT3NjSGFuZGxlcigyLG5ldyBmLk9zY0hhbmRsZXIoKGU9PnRoaXMuc2V0VGl0bGUoZSkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyT3NjSGFuZGxlcig0LG5ldyBmLk9zY0hhbmRsZXIoKGU9PnRoaXMuc2V0T3JSZXBvcnRJbmRleGVkQ29sb3IoZSkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyT3NjSGFuZGxlcig4LG5ldyBmLk9zY0hhbmRsZXIoKGU9PnRoaXMuc2V0SHlwZXJsaW5rKGUpKSkpLHRoaXMuX3BhcnNlci5yZWdpc3Rlck9zY0hhbmRsZXIoMTAsbmV3IGYuT3NjSGFuZGxlcigoZT0+dGhpcy5zZXRPclJlcG9ydEZnQ29sb3IoZSkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyT3NjSGFuZGxlcigxMSxuZXcgZi5Pc2NIYW5kbGVyKChlPT50aGlzLnNldE9yUmVwb3J0QmdDb2xvcihlKSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJPc2NIYW5kbGVyKDEyLG5ldyBmLk9zY0hhbmRsZXIoKGU9PnRoaXMuc2V0T3JSZXBvcnRDdXJzb3JDb2xvcihlKSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJPc2NIYW5kbGVyKDEwNCxuZXcgZi5Pc2NIYW5kbGVyKChlPT50aGlzLnJlc3RvcmVJbmRleGVkQ29sb3IoZSkpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyT3NjSGFuZGxlcigxMTAsbmV3IGYuT3NjSGFuZGxlcigoZT0+dGhpcy5yZXN0b3JlRmdDb2xvcihlKSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJPc2NIYW5kbGVyKDExMSxuZXcgZi5Pc2NIYW5kbGVyKChlPT50aGlzLnJlc3RvcmVCZ0NvbG9yKGUpKSkpLHRoaXMuX3BhcnNlci5yZWdpc3Rlck9zY0hhbmRsZXIoMTEyLG5ldyBmLk9zY0hhbmRsZXIoKGU9PnRoaXMucmVzdG9yZUN1cnNvckNvbG9yKGUpKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ZpbmFsOlwiN1wifSwoKCk9PnRoaXMuc2F2ZUN1cnNvcigpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7ZmluYWw6XCI4XCJ9LCgoKT0+dGhpcy5yZXN0b3JlQ3Vyc29yKCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIkRcIn0sKCgpPT50aGlzLmluZGV4KCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIkVcIn0sKCgpPT50aGlzLm5leHRMaW5lKCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIkhcIn0sKCgpPT50aGlzLnRhYlNldCgpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7ZmluYWw6XCJNXCJ9LCgoKT0+dGhpcy5yZXZlcnNlSW5kZXgoKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ZpbmFsOlwiPVwifSwoKCk9PnRoaXMua2V5cGFkQXBwbGljYXRpb25Nb2RlKCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIj5cIn0sKCgpPT50aGlzLmtleXBhZE51bWVyaWNNb2RlKCkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcImNcIn0sKCgpPT50aGlzLmZ1bGxSZXNldCgpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7ZmluYWw6XCJuXCJ9LCgoKT0+dGhpcy5zZXRnTGV2ZWwoMikpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIm9cIn0sKCgpPT50aGlzLnNldGdMZXZlbCgzKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ZpbmFsOlwifFwifSwoKCk9PnRoaXMuc2V0Z0xldmVsKDMpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7ZmluYWw6XCJ9XCJ9LCgoKT0+dGhpcy5zZXRnTGV2ZWwoMikpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIn5cIn0sKCgpPT50aGlzLnNldGdMZXZlbCgxKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIlXCIsZmluYWw6XCJAXCJ9LCgoKT0+dGhpcy5zZWxlY3REZWZhdWx0Q2hhcnNldCgpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIiVcIixmaW5hbDpcIkdcIn0sKCgpPT50aGlzLnNlbGVjdERlZmF1bHRDaGFyc2V0KCkpKTtmb3IoY29uc3QgZSBpbiByLkNIQVJTRVRTKXRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIoXCIsZmluYWw6ZX0sKCgpPT50aGlzLnNlbGVjdENoYXJzZXQoXCIoXCIrZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtpbnRlcm1lZGlhdGVzOlwiKVwiLGZpbmFsOmV9LCgoKT0+dGhpcy5zZWxlY3RDaGFyc2V0KFwiKVwiK2UpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIipcIixmaW5hbDplfSwoKCk9PnRoaXMuc2VsZWN0Q2hhcnNldChcIipcIitlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIrXCIsZmluYWw6ZX0sKCgpPT50aGlzLnNlbGVjdENoYXJzZXQoXCIrXCIrZSkpKSx0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtpbnRlcm1lZGlhdGVzOlwiLVwiLGZpbmFsOmV9LCgoKT0+dGhpcy5zZWxlY3RDaGFyc2V0KFwiLVwiK2UpKSksdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRXNjSGFuZGxlcih7aW50ZXJtZWRpYXRlczpcIi5cIixmaW5hbDplfSwoKCk9PnRoaXMuc2VsZWN0Q2hhcnNldChcIi5cIitlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckVzY0hhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIvXCIsZmluYWw6ZX0sKCgpPT50aGlzLnNlbGVjdENoYXJzZXQoXCIvXCIrZSkpKTt0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKHtpbnRlcm1lZGlhdGVzOlwiI1wiLGZpbmFsOlwiOFwifSwoKCk9PnRoaXMuc2NyZWVuQWxpZ25tZW50UGF0dGVybigpKSksdGhpcy5fcGFyc2VyLnNldEVycm9ySGFuZGxlcigoZT0+KHRoaXMuX2xvZ1NlcnZpY2UuZXJyb3IoXCJQYXJzaW5nIGVycm9yOiBcIixlKSxlKSkpLHRoaXMuX3BhcnNlci5yZWdpc3RlckRjc0hhbmRsZXIoe2ludGVybWVkaWF0ZXM6XCIkXCIsZmluYWw6XCJxXCJ9LG5ldyB2LkRjc0hhbmRsZXIoKChlLHQpPT50aGlzLnJlcXVlc3RTdGF0dXNTdHJpbmcoZSx0KSkpKX1nZXRBdHRyRGF0YSgpe3JldHVybiB0aGlzLl9jdXJBdHRyRGF0YX1nZXQgb25SZXF1ZXN0QmVsbCgpe3JldHVybiB0aGlzLl9vblJlcXVlc3RCZWxsLmV2ZW50fWdldCBvblJlcXVlc3RSZWZyZXNoUm93cygpe3JldHVybiB0aGlzLl9vblJlcXVlc3RSZWZyZXNoUm93cy5ldmVudH1nZXQgb25SZXF1ZXN0UmVzZXQoKXtyZXR1cm4gdGhpcy5fb25SZXF1ZXN0UmVzZXQuZXZlbnR9Z2V0IG9uUmVxdWVzdFNlbmRGb2N1cygpe3JldHVybiB0aGlzLl9vblJlcXVlc3RTZW5kRm9jdXMuZXZlbnR9Z2V0IG9uUmVxdWVzdFN5bmNTY3JvbGxCYXIoKXtyZXR1cm4gdGhpcy5fb25SZXF1ZXN0U3luY1Njcm9sbEJhci5ldmVudH1nZXQgb25SZXF1ZXN0V2luZG93c09wdGlvbnNSZXBvcnQoKXtyZXR1cm4gdGhpcy5fb25SZXF1ZXN0V2luZG93c09wdGlvbnNSZXBvcnQuZXZlbnR9Z2V0IG9uQTExeUNoYXIoKXtyZXR1cm4gdGhpcy5fb25BMTF5Q2hhci5ldmVudH1nZXQgb25BMTF5VGFiKCl7cmV0dXJuIHRoaXMuX29uQTExeVRhYi5ldmVudH1nZXQgb25DdXJzb3JNb3ZlKCl7cmV0dXJuIHRoaXMuX29uQ3Vyc29yTW92ZS5ldmVudH1nZXQgb25MaW5lRmVlZCgpe3JldHVybiB0aGlzLl9vbkxpbmVGZWVkLmV2ZW50fWdldCBvblNjcm9sbCgpe3JldHVybiB0aGlzLl9vblNjcm9sbC5ldmVudH1nZXQgb25UaXRsZUNoYW5nZSgpe3JldHVybiB0aGlzLl9vblRpdGxlQ2hhbmdlLmV2ZW50fWdldCBvbkNvbG9yKCl7cmV0dXJuIHRoaXMuX29uQ29sb3IuZXZlbnR9ZGlzcG9zZSgpe3N1cGVyLmRpc3Bvc2UoKX1fcHJlc2VydmVTdGFjayhlLHQsaSxzKXt0aGlzLl9wYXJzZVN0YWNrLnBhdXNlZD0hMCx0aGlzLl9wYXJzZVN0YWNrLmN1cnNvclN0YXJ0WD1lLHRoaXMuX3BhcnNlU3RhY2suY3Vyc29yU3RhcnRZPXQsdGhpcy5fcGFyc2VTdGFjay5kZWNvZGVkTGVuZ3RoPWksdGhpcy5fcGFyc2VTdGFjay5wb3NpdGlvbj1zfV9sb2dTbG93UmVzb2x2aW5nQXN5bmMoZSl7dGhpcy5fbG9nU2VydmljZS5sb2dMZXZlbDw9dS5Mb2dMZXZlbEVudW0uV0FSTiYmUHJvbWlzZS5yYWNlKFtlLG5ldyBQcm9taXNlKCgoZSx0KT0+c2V0VGltZW91dCgoKCk9PnQoXCIjU0xPV19USU1FT1VUXCIpKSw1ZTMpKSldKS5jYXRjaCgoZT0+e2lmKFwiI1NMT1dfVElNRU9VVFwiIT09ZSl0aHJvdyBlO2NvbnNvbGUud2FybihcImFzeW5jIHBhcnNlciBoYW5kbGVyIHRha2luZyBsb25nZXIgdGhhbiA1MDAwIG1zXCIpfSkpfXBhcnNlKGUsdCl7bGV0IGkscz10aGlzLl9hY3RpdmVCdWZmZXIueCxyPXRoaXMuX2FjdGl2ZUJ1ZmZlci55LG49MDtjb25zdCBvPXRoaXMuX3BhcnNlU3RhY2sucGF1c2VkO2lmKG8pe2lmKGk9dGhpcy5fcGFyc2VyLnBhcnNlKHRoaXMuX3BhcnNlQnVmZmVyLHRoaXMuX3BhcnNlU3RhY2suZGVjb2RlZExlbmd0aCx0KSlyZXR1cm4gdGhpcy5fbG9nU2xvd1Jlc29sdmluZ0FzeW5jKGkpLGk7cz10aGlzLl9wYXJzZVN0YWNrLmN1cnNvclN0YXJ0WCxyPXRoaXMuX3BhcnNlU3RhY2suY3Vyc29yU3RhcnRZLHRoaXMuX3BhcnNlU3RhY2sucGF1c2VkPSExLGUubGVuZ3RoPlMmJihuPXRoaXMuX3BhcnNlU3RhY2sucG9zaXRpb24rUyl9aWYodGhpcy5fbG9nU2VydmljZS5sb2dMZXZlbDw9dS5Mb2dMZXZlbEVudW0uREVCVUcmJnRoaXMuX2xvZ1NlcnZpY2UuZGVidWcoXCJwYXJzaW5nIGRhdGFcIisoXCJzdHJpbmdcIj09dHlwZW9mIGU/YCBcIiR7ZX1cImA6YCBcIiR7QXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGUsKGU9PlN0cmluZy5mcm9tQ2hhckNvZGUoZSkpKS5qb2luKFwiXCIpfVwiYCksXCJzdHJpbmdcIj09dHlwZW9mIGU/ZS5zcGxpdChcIlwiKS5tYXAoKGU9PmUuY2hhckNvZGVBdCgwKSkpOmUpLHRoaXMuX3BhcnNlQnVmZmVyLmxlbmd0aDxlLmxlbmd0aCYmdGhpcy5fcGFyc2VCdWZmZXIubGVuZ3RoPFMmJih0aGlzLl9wYXJzZUJ1ZmZlcj1uZXcgVWludDMyQXJyYXkoTWF0aC5taW4oZS5sZW5ndGgsUykpKSxvfHx0aGlzLl9kaXJ0eVJvd1NlcnZpY2UuY2xlYXJSYW5nZSgpLGUubGVuZ3RoPlMpZm9yKGxldCB0PW47dDxlLmxlbmd0aDt0Kz1TKXtjb25zdCBuPXQrUzxlLmxlbmd0aD90K1M6ZS5sZW5ndGgsbz1cInN0cmluZ1wiPT10eXBlb2YgZT90aGlzLl9zdHJpbmdEZWNvZGVyLmRlY29kZShlLnN1YnN0cmluZyh0LG4pLHRoaXMuX3BhcnNlQnVmZmVyKTp0aGlzLl91dGY4RGVjb2Rlci5kZWNvZGUoZS5zdWJhcnJheSh0LG4pLHRoaXMuX3BhcnNlQnVmZmVyKTtpZihpPXRoaXMuX3BhcnNlci5wYXJzZSh0aGlzLl9wYXJzZUJ1ZmZlcixvKSlyZXR1cm4gdGhpcy5fcHJlc2VydmVTdGFjayhzLHIsbyx0KSx0aGlzLl9sb2dTbG93UmVzb2x2aW5nQXN5bmMoaSksaX1lbHNlIGlmKCFvKXtjb25zdCB0PVwic3RyaW5nXCI9PXR5cGVvZiBlP3RoaXMuX3N0cmluZ0RlY29kZXIuZGVjb2RlKGUsdGhpcy5fcGFyc2VCdWZmZXIpOnRoaXMuX3V0ZjhEZWNvZGVyLmRlY29kZShlLHRoaXMuX3BhcnNlQnVmZmVyKTtpZihpPXRoaXMuX3BhcnNlci5wYXJzZSh0aGlzLl9wYXJzZUJ1ZmZlcix0KSlyZXR1cm4gdGhpcy5fcHJlc2VydmVTdGFjayhzLHIsdCwwKSx0aGlzLl9sb2dTbG93UmVzb2x2aW5nQXN5bmMoaSksaX10aGlzLl9hY3RpdmVCdWZmZXIueD09PXMmJnRoaXMuX2FjdGl2ZUJ1ZmZlci55PT09cnx8dGhpcy5fb25DdXJzb3JNb3ZlLmZpcmUoKSx0aGlzLl9vblJlcXVlc3RSZWZyZXNoUm93cy5maXJlKHRoaXMuX2RpcnR5Um93U2VydmljZS5zdGFydCx0aGlzLl9kaXJ0eVJvd1NlcnZpY2UuZW5kKX1wcmludChlLHQsaSl7bGV0IHMscjtjb25zdCBuPXRoaXMuX2NoYXJzZXRTZXJ2aWNlLmNoYXJzZXQsbz10aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcmVlblJlYWRlck1vZGUsaD10aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMsYz10aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMud3JhcGFyb3VuZCxkPXRoaXMuX2NvcmVTZXJ2aWNlLm1vZGVzLmluc2VydE1vZGUsXz10aGlzLl9jdXJBdHRyRGF0YTtsZXQgdT10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuZ2V0KHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIueSk7dGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIueSksdGhpcy5fYWN0aXZlQnVmZmVyLngmJmktdD4wJiYyPT09dS5nZXRXaWR0aCh0aGlzLl9hY3RpdmVCdWZmZXIueC0xKSYmdS5zZXRDZWxsRnJvbUNvZGVQb2ludCh0aGlzLl9hY3RpdmVCdWZmZXIueC0xLDAsMSxfLmZnLF8uYmcsXy5leHRlbmRlZCk7Zm9yKGxldCBmPXQ7ZjxpOysrZil7aWYocz1lW2ZdLHI9dGhpcy5fdW5pY29kZVNlcnZpY2Uud2N3aWR0aChzKSxzPDEyNyYmbil7Y29uc3QgZT1uW1N0cmluZy5mcm9tQ2hhckNvZGUocyldO2UmJihzPWUuY2hhckNvZGVBdCgwKSl9aWYobyYmdGhpcy5fb25BMTF5Q2hhci5maXJlKCgwLGEuc3RyaW5nRnJvbUNvZGVQb2ludCkocykpLHZvaWQgMCE9PXRoaXMuX2N1cnJlbnRMaW5rSWQmJnRoaXMuX29zY0xpbmtTZXJ2aWNlLmFkZExpbmVUb0xpbmsodGhpcy5fY3VycmVudExpbmtJZCx0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnkpLHJ8fCF0aGlzLl9hY3RpdmVCdWZmZXIueCl7aWYodGhpcy5fYWN0aXZlQnVmZmVyLngrci0xPj1oKWlmKGMpe2Zvcig7dGhpcy5fYWN0aXZlQnVmZmVyLng8aDspdS5zZXRDZWxsRnJvbUNvZGVQb2ludCh0aGlzLl9hY3RpdmVCdWZmZXIueCsrLDAsMSxfLmZnLF8uYmcsXy5leHRlbmRlZCk7dGhpcy5fYWN0aXZlQnVmZmVyLng9MCx0aGlzLl9hY3RpdmVCdWZmZXIueSsrLHRoaXMuX2FjdGl2ZUJ1ZmZlci55PT09dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSsxPyh0aGlzLl9hY3RpdmVCdWZmZXIueS0tLHRoaXMuX2J1ZmZlclNlcnZpY2Uuc2Nyb2xsKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSwhMCkpOih0aGlzLl9hY3RpdmVCdWZmZXIueT49dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzJiYodGhpcy5fYWN0aXZlQnVmZmVyLnk9dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLTEpLHRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5nZXQodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK3RoaXMuX2FjdGl2ZUJ1ZmZlci55KS5pc1dyYXBwZWQ9ITApLHU9dGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLmdldCh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnkpfWVsc2UgaWYodGhpcy5fYWN0aXZlQnVmZmVyLng9aC0xLDI9PT1yKWNvbnRpbnVlO2lmKGQmJih1Lmluc2VydENlbGxzKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LHIsdGhpcy5fYWN0aXZlQnVmZmVyLmdldE51bGxDZWxsKF8pLF8pLDI9PT11LmdldFdpZHRoKGgtMSkmJnUuc2V0Q2VsbEZyb21Db2RlUG9pbnQoaC0xLGwuTlVMTF9DRUxMX0NPREUsbC5OVUxMX0NFTExfV0lEVEgsXy5mZyxfLmJnLF8uZXh0ZW5kZWQpKSx1LnNldENlbGxGcm9tQ29kZVBvaW50KHRoaXMuX2FjdGl2ZUJ1ZmZlci54KysscyxyLF8uZmcsXy5iZyxfLmV4dGVuZGVkKSxyPjApZm9yKDstLXI7KXUuc2V0Q2VsbEZyb21Db2RlUG9pbnQodGhpcy5fYWN0aXZlQnVmZmVyLngrKywwLDAsXy5mZyxfLmJnLF8uZXh0ZW5kZWQpfWVsc2UgdS5nZXRXaWR0aCh0aGlzLl9hY3RpdmVCdWZmZXIueC0xKT91LmFkZENvZGVwb2ludFRvQ2VsbCh0aGlzLl9hY3RpdmVCdWZmZXIueC0xLHMpOnUuYWRkQ29kZXBvaW50VG9DZWxsKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LTIscyl9aS10PjAmJih1LmxvYWRDZWxsKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LTEsdGhpcy5fd29ya0NlbGwpLDI9PT10aGlzLl93b3JrQ2VsbC5nZXRXaWR0aCgpfHx0aGlzLl93b3JrQ2VsbC5nZXRDb2RlKCk+NjU1MzU/dGhpcy5fcGFyc2VyLnByZWNlZGluZ0NvZGVwb2ludD0wOnRoaXMuX3dvcmtDZWxsLmlzQ29tYmluZWQoKT90aGlzLl9wYXJzZXIucHJlY2VkaW5nQ29kZXBvaW50PXRoaXMuX3dvcmtDZWxsLmdldENoYXJzKCkuY2hhckNvZGVBdCgwKTp0aGlzLl9wYXJzZXIucHJlY2VkaW5nQ29kZXBvaW50PXRoaXMuX3dvcmtDZWxsLmNvbnRlbnQpLHRoaXMuX2FjdGl2ZUJ1ZmZlci54PGgmJmktdD4wJiYwPT09dS5nZXRXaWR0aCh0aGlzLl9hY3RpdmVCdWZmZXIueCkmJiF1Lmhhc0NvbnRlbnQodGhpcy5fYWN0aXZlQnVmZmVyLngpJiZ1LnNldENlbGxGcm9tQ29kZVBvaW50KHRoaXMuX2FjdGl2ZUJ1ZmZlci54LDAsMSxfLmZnLF8uYmcsXy5leHRlbmRlZCksdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIueSl9cmVnaXN0ZXJDc2lIYW5kbGVyKGUsdCl7cmV0dXJuXCJ0XCIhPT1lLmZpbmFsfHxlLnByZWZpeHx8ZS5pbnRlcm1lZGlhdGVzP3RoaXMuX3BhcnNlci5yZWdpc3RlckNzaUhhbmRsZXIoZSx0KTp0aGlzLl9wYXJzZXIucmVnaXN0ZXJDc2lIYW5kbGVyKGUsKGU9PiFtKGUucGFyYW1zWzBdLHRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMud2luZG93T3B0aW9ucyl8fHQoZSkpKX1yZWdpc3RlckRjc0hhbmRsZXIoZSx0KXtyZXR1cm4gdGhpcy5fcGFyc2VyLnJlZ2lzdGVyRGNzSGFuZGxlcihlLG5ldyB2LkRjc0hhbmRsZXIodCkpfXJlZ2lzdGVyRXNjSGFuZGxlcihlLHQpe3JldHVybiB0aGlzLl9wYXJzZXIucmVnaXN0ZXJFc2NIYW5kbGVyKGUsdCl9cmVnaXN0ZXJPc2NIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMuX3BhcnNlci5yZWdpc3Rlck9zY0hhbmRsZXIoZSxuZXcgZi5Pc2NIYW5kbGVyKHQpKX1iZWxsKCl7cmV0dXJuIHRoaXMuX29uUmVxdWVzdEJlbGwuZmlyZSgpLCEwfWxpbmVGZWVkKCl7cmV0dXJuIHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnkpLHRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMuY29udmVydEVvbCYmKHRoaXMuX2FjdGl2ZUJ1ZmZlci54PTApLHRoaXMuX2FjdGl2ZUJ1ZmZlci55KyssdGhpcy5fYWN0aXZlQnVmZmVyLnk9PT10aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tKzE/KHRoaXMuX2FjdGl2ZUJ1ZmZlci55LS0sdGhpcy5fYnVmZmVyU2VydmljZS5zY3JvbGwodGhpcy5fZXJhc2VBdHRyRGF0YSgpKSk6dGhpcy5fYWN0aXZlQnVmZmVyLnk+PXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyYmKHRoaXMuX2FjdGl2ZUJ1ZmZlci55PXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cy0xKSx0aGlzLl9hY3RpdmVCdWZmZXIueD49dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzJiZ0aGlzLl9hY3RpdmVCdWZmZXIueC0tLHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnkpLHRoaXMuX29uTGluZUZlZWQuZmlyZSgpLCEwfWNhcnJpYWdlUmV0dXJuKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUJ1ZmZlci54PTAsITB9YmFja3NwYWNlKCl7dmFyIGU7aWYoIXRoaXMuX2NvcmVTZXJ2aWNlLmRlY1ByaXZhdGVNb2Rlcy5yZXZlcnNlV3JhcGFyb3VuZClyZXR1cm4gdGhpcy5fcmVzdHJpY3RDdXJzb3IoKSx0aGlzLl9hY3RpdmVCdWZmZXIueD4wJiZ0aGlzLl9hY3RpdmVCdWZmZXIueC0tLCEwO2lmKHRoaXMuX3Jlc3RyaWN0Q3Vyc29yKHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyksdGhpcy5fYWN0aXZlQnVmZmVyLng+MCl0aGlzLl9hY3RpdmVCdWZmZXIueC0tO2Vsc2UgaWYoMD09PXRoaXMuX2FjdGl2ZUJ1ZmZlci54JiZ0aGlzLl9hY3RpdmVCdWZmZXIueT50aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsVG9wJiZ0aGlzLl9hY3RpdmVCdWZmZXIueTw9dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSYmKG51bGw9PT0oZT10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuZ2V0KHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIueSkpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmlzV3JhcHBlZCkpe3RoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5nZXQodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK3RoaXMuX2FjdGl2ZUJ1ZmZlci55KS5pc1dyYXBwZWQ9ITEsdGhpcy5fYWN0aXZlQnVmZmVyLnktLSx0aGlzLl9hY3RpdmVCdWZmZXIueD10aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtMTtjb25zdCBlPXRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5nZXQodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK3RoaXMuX2FjdGl2ZUJ1ZmZlci55KTtlLmhhc1dpZHRoKHRoaXMuX2FjdGl2ZUJ1ZmZlci54KSYmIWUuaGFzQ29udGVudCh0aGlzLl9hY3RpdmVCdWZmZXIueCkmJnRoaXMuX2FjdGl2ZUJ1ZmZlci54LS19cmV0dXJuIHRoaXMuX3Jlc3RyaWN0Q3Vyc29yKCksITB9dGFiKCl7aWYodGhpcy5fYWN0aXZlQnVmZmVyLng+PXRoaXMuX2J1ZmZlclNlcnZpY2UuY29scylyZXR1cm4hMDtjb25zdCBlPXRoaXMuX2FjdGl2ZUJ1ZmZlci54O3JldHVybiB0aGlzLl9hY3RpdmVCdWZmZXIueD10aGlzLl9hY3RpdmVCdWZmZXIubmV4dFN0b3AoKSx0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcmVlblJlYWRlck1vZGUmJnRoaXMuX29uQTExeVRhYi5maXJlKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LWUpLCEwfXNoaWZ0T3V0KCl7cmV0dXJuIHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdMZXZlbCgxKSwhMH1zaGlmdEluKCl7cmV0dXJuIHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdMZXZlbCgwKSwhMH1fcmVzdHJpY3RDdXJzb3IoZT10aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMtMSl7dGhpcy5fYWN0aXZlQnVmZmVyLng9TWF0aC5taW4oZSxNYXRoLm1heCgwLHRoaXMuX2FjdGl2ZUJ1ZmZlci54KSksdGhpcy5fYWN0aXZlQnVmZmVyLnk9dGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLm9yaWdpbj9NYXRoLm1pbih0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tLE1hdGgubWF4KHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3AsdGhpcy5fYWN0aXZlQnVmZmVyLnkpKTpNYXRoLm1pbih0aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MtMSxNYXRoLm1heCgwLHRoaXMuX2FjdGl2ZUJ1ZmZlci55KSksdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIueSl9X3NldEN1cnNvcihlLHQpe3RoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnkpLHRoaXMuX2NvcmVTZXJ2aWNlLmRlY1ByaXZhdGVNb2Rlcy5vcmlnaW4/KHRoaXMuX2FjdGl2ZUJ1ZmZlci54PWUsdGhpcy5fYWN0aXZlQnVmZmVyLnk9dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcCt0KToodGhpcy5fYWN0aXZlQnVmZmVyLng9ZSx0aGlzLl9hY3RpdmVCdWZmZXIueT10KSx0aGlzLl9yZXN0cmljdEN1cnNvcigpLHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnkpfV9tb3ZlQ3Vyc29yKGUsdCl7dGhpcy5fcmVzdHJpY3RDdXJzb3IoKSx0aGlzLl9zZXRDdXJzb3IodGhpcy5fYWN0aXZlQnVmZmVyLngrZSx0aGlzLl9hY3RpdmVCdWZmZXIueSt0KX1jdXJzb3JVcChlKXtjb25zdCB0PXRoaXMuX2FjdGl2ZUJ1ZmZlci55LXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3A7cmV0dXJuIHQ+PTA/dGhpcy5fbW92ZUN1cnNvcigwLC1NYXRoLm1pbih0LGUucGFyYW1zWzBdfHwxKSk6dGhpcy5fbW92ZUN1cnNvcigwLC0oZS5wYXJhbXNbMF18fDEpKSwhMH1jdXJzb3JEb3duKGUpe2NvbnN0IHQ9dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbS10aGlzLl9hY3RpdmVCdWZmZXIueTtyZXR1cm4gdD49MD90aGlzLl9tb3ZlQ3Vyc29yKDAsTWF0aC5taW4odCxlLnBhcmFtc1swXXx8MSkpOnRoaXMuX21vdmVDdXJzb3IoMCxlLnBhcmFtc1swXXx8MSksITB9Y3Vyc29yRm9yd2FyZChlKXtyZXR1cm4gdGhpcy5fbW92ZUN1cnNvcihlLnBhcmFtc1swXXx8MSwwKSwhMH1jdXJzb3JCYWNrd2FyZChlKXtyZXR1cm4gdGhpcy5fbW92ZUN1cnNvcigtKGUucGFyYW1zWzBdfHwxKSwwKSwhMH1jdXJzb3JOZXh0TGluZShlKXtyZXR1cm4gdGhpcy5jdXJzb3JEb3duKGUpLHRoaXMuX2FjdGl2ZUJ1ZmZlci54PTAsITB9Y3Vyc29yUHJlY2VkaW5nTGluZShlKXtyZXR1cm4gdGhpcy5jdXJzb3JVcChlKSx0aGlzLl9hY3RpdmVCdWZmZXIueD0wLCEwfWN1cnNvckNoYXJBYnNvbHV0ZShlKXtyZXR1cm4gdGhpcy5fc2V0Q3Vyc29yKChlLnBhcmFtc1swXXx8MSktMSx0aGlzLl9hY3RpdmVCdWZmZXIueSksITB9Y3Vyc29yUG9zaXRpb24oZSl7cmV0dXJuIHRoaXMuX3NldEN1cnNvcihlLmxlbmd0aD49Mj8oZS5wYXJhbXNbMV18fDEpLTE6MCwoZS5wYXJhbXNbMF18fDEpLTEpLCEwfWNoYXJQb3NBYnNvbHV0ZShlKXtyZXR1cm4gdGhpcy5fc2V0Q3Vyc29yKChlLnBhcmFtc1swXXx8MSktMSx0aGlzLl9hY3RpdmVCdWZmZXIueSksITB9aFBvc2l0aW9uUmVsYXRpdmUoZSl7cmV0dXJuIHRoaXMuX21vdmVDdXJzb3IoZS5wYXJhbXNbMF18fDEsMCksITB9bGluZVBvc0Fic29sdXRlKGUpe3JldHVybiB0aGlzLl9zZXRDdXJzb3IodGhpcy5fYWN0aXZlQnVmZmVyLngsKGUucGFyYW1zWzBdfHwxKS0xKSwhMH12UG9zaXRpb25SZWxhdGl2ZShlKXtyZXR1cm4gdGhpcy5fbW92ZUN1cnNvcigwLGUucGFyYW1zWzBdfHwxKSwhMH1oVlBvc2l0aW9uKGUpe3JldHVybiB0aGlzLmN1cnNvclBvc2l0aW9uKGUpLCEwfXRhYkNsZWFyKGUpe2NvbnN0IHQ9ZS5wYXJhbXNbMF07cmV0dXJuIDA9PT10P2RlbGV0ZSB0aGlzLl9hY3RpdmVCdWZmZXIudGFic1t0aGlzLl9hY3RpdmVCdWZmZXIueF06Mz09PXQmJih0aGlzLl9hY3RpdmVCdWZmZXIudGFicz17fSksITB9Y3Vyc29yRm9yd2FyZFRhYihlKXtpZih0aGlzLl9hY3RpdmVCdWZmZXIueD49dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzKXJldHVybiEwO2xldCB0PWUucGFyYW1zWzBdfHwxO2Zvcig7dC0tOyl0aGlzLl9hY3RpdmVCdWZmZXIueD10aGlzLl9hY3RpdmVCdWZmZXIubmV4dFN0b3AoKTtyZXR1cm4hMH1jdXJzb3JCYWNrd2FyZFRhYihlKXtpZih0aGlzLl9hY3RpdmVCdWZmZXIueD49dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzKXJldHVybiEwO2xldCB0PWUucGFyYW1zWzBdfHwxO2Zvcig7dC0tOyl0aGlzLl9hY3RpdmVCdWZmZXIueD10aGlzLl9hY3RpdmVCdWZmZXIucHJldlN0b3AoKTtyZXR1cm4hMH1zZWxlY3RQcm90ZWN0ZWQoZSl7Y29uc3QgdD1lLnBhcmFtc1swXTtyZXR1cm4gMT09PXQmJih0aGlzLl9jdXJBdHRyRGF0YS5iZ3w9NTM2ODcwOTEyKSwyIT09dCYmMCE9PXR8fCh0aGlzLl9jdXJBdHRyRGF0YS5iZyY9LTUzNjg3MDkxMyksITB9X2VyYXNlSW5CdWZmZXJMaW5lKGUsdCxpLHM9ITEscj0hMSl7Y29uc3Qgbj10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuZ2V0KHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZStlKTtuLnJlcGxhY2VDZWxscyh0LGksdGhpcy5fYWN0aXZlQnVmZmVyLmdldE51bGxDZWxsKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksdGhpcy5fZXJhc2VBdHRyRGF0YSgpLHIpLHMmJihuLmlzV3JhcHBlZD0hMSl9X3Jlc2V0QnVmZmVyTGluZShlLHQ9ITEpe2NvbnN0IGk9dGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLmdldCh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrZSk7aS5maWxsKHRoaXMuX2FjdGl2ZUJ1ZmZlci5nZXROdWxsQ2VsbCh0aGlzLl9lcmFzZUF0dHJEYXRhKCkpLHQpLHRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLmNsZWFyTWFya2Vycyh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrZSksaS5pc1dyYXBwZWQ9ITF9ZXJhc2VJbkRpc3BsYXkoZSx0PSExKXtsZXQgaTtzd2l0Y2godGhpcy5fcmVzdHJpY3RDdXJzb3IodGhpcy5fYnVmZmVyU2VydmljZS5jb2xzKSxlLnBhcmFtc1swXSl7Y2FzZSAwOmZvcihpPXRoaXMuX2FjdGl2ZUJ1ZmZlci55LHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkoaSksdGhpcy5fZXJhc2VJbkJ1ZmZlckxpbmUoaSsrLHRoaXMuX2FjdGl2ZUJ1ZmZlci54LHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scywwPT09dGhpcy5fYWN0aXZlQnVmZmVyLngsdCk7aTx0aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3M7aSsrKXRoaXMuX3Jlc2V0QnVmZmVyTGluZShpLHQpO3RoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkoaSk7YnJlYWs7Y2FzZSAxOmZvcihpPXRoaXMuX2FjdGl2ZUJ1ZmZlci55LHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkoaSksdGhpcy5fZXJhc2VJbkJ1ZmZlckxpbmUoaSwwLHRoaXMuX2FjdGl2ZUJ1ZmZlci54KzEsITAsdCksdGhpcy5fYWN0aXZlQnVmZmVyLngrMT49dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzJiYodGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLmdldChpKzEpLmlzV3JhcHBlZD0hMSk7aS0tOyl0aGlzLl9yZXNldEJ1ZmZlckxpbmUoaSx0KTt0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya0RpcnR5KDApO2JyZWFrO2Nhc2UgMjpmb3IoaT10aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MsdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eShpLTEpO2ktLTspdGhpcy5fcmVzZXRCdWZmZXJMaW5lKGksdCk7dGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eSgwKTticmVhaztjYXNlIDM6Y29uc3QgZT10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMubGVuZ3RoLXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cztlPjAmJih0aGlzLl9hY3RpdmVCdWZmZXIubGluZXMudHJpbVN0YXJ0KGUpLHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZT1NYXRoLm1heCh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UtZSwwKSx0aGlzLl9hY3RpdmVCdWZmZXIueWRpc3A9TWF0aC5tYXgodGhpcy5fYWN0aXZlQnVmZmVyLnlkaXNwLWUsMCksdGhpcy5fb25TY3JvbGwuZmlyZSgwKSl9cmV0dXJuITB9ZXJhc2VJbkxpbmUoZSx0PSExKXtzd2l0Y2godGhpcy5fcmVzdHJpY3RDdXJzb3IodGhpcy5fYnVmZmVyU2VydmljZS5jb2xzKSxlLnBhcmFtc1swXSl7Y2FzZSAwOnRoaXMuX2VyYXNlSW5CdWZmZXJMaW5lKHRoaXMuX2FjdGl2ZUJ1ZmZlci55LHRoaXMuX2FjdGl2ZUJ1ZmZlci54LHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scywwPT09dGhpcy5fYWN0aXZlQnVmZmVyLngsdCk7YnJlYWs7Y2FzZSAxOnRoaXMuX2VyYXNlSW5CdWZmZXJMaW5lKHRoaXMuX2FjdGl2ZUJ1ZmZlci55LDAsdGhpcy5fYWN0aXZlQnVmZmVyLngrMSwhMSx0KTticmVhaztjYXNlIDI6dGhpcy5fZXJhc2VJbkJ1ZmZlckxpbmUodGhpcy5fYWN0aXZlQnVmZmVyLnksMCx0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHMsITAsdCl9cmV0dXJuIHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnkpLCEwfWluc2VydExpbmVzKGUpe3RoaXMuX3Jlc3RyaWN0Q3Vyc29yKCk7bGV0IHQ9ZS5wYXJhbXNbMF18fDE7aWYodGhpcy5fYWN0aXZlQnVmZmVyLnk+dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbXx8dGhpcy5fYWN0aXZlQnVmZmVyLnk8dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcClyZXR1cm4hMDtjb25zdCBpPXRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIueSxzPXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cy0xLXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b20scj10aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MtMSt0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UtcysxO2Zvcig7dC0tOyl0aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuc3BsaWNlKHItMSwxKSx0aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuc3BsaWNlKGksMCx0aGlzLl9hY3RpdmVCdWZmZXIuZ2V0QmxhbmtMaW5lKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSkpO3JldHVybiB0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya1JhbmdlRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnksdGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSksdGhpcy5fYWN0aXZlQnVmZmVyLng9MCwhMH1kZWxldGVMaW5lcyhlKXt0aGlzLl9yZXN0cmljdEN1cnNvcigpO2xldCB0PWUucGFyYW1zWzBdfHwxO2lmKHRoaXMuX2FjdGl2ZUJ1ZmZlci55PnRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b218fHRoaXMuX2FjdGl2ZUJ1ZmZlci55PHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3ApcmV0dXJuITA7Y29uc3QgaT10aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnk7bGV0IHM7Zm9yKHM9dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLTEtdGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSxzPXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cy0xK3RoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZS1zO3QtLTspdGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLnNwbGljZShpLDEpLHRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5zcGxpY2UocywwLHRoaXMuX2FjdGl2ZUJ1ZmZlci5nZXRCbGFua0xpbmUodGhpcy5fZXJhc2VBdHRyRGF0YSgpKSk7cmV0dXJuIHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrUmFuZ2VEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIueSx0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tKSx0aGlzLl9hY3RpdmVCdWZmZXIueD0wLCEwfWluc2VydENoYXJzKGUpe3RoaXMuX3Jlc3RyaWN0Q3Vyc29yKCk7Y29uc3QgdD10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuZ2V0KHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIueSk7cmV0dXJuIHQmJih0Lmluc2VydENlbGxzKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LGUucGFyYW1zWzBdfHwxLHRoaXMuX2FjdGl2ZUJ1ZmZlci5nZXROdWxsQ2VsbCh0aGlzLl9lcmFzZUF0dHJEYXRhKCkpLHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIueSkpLCEwfWRlbGV0ZUNoYXJzKGUpe3RoaXMuX3Jlc3RyaWN0Q3Vyc29yKCk7Y29uc3QgdD10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuZ2V0KHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIueSk7cmV0dXJuIHQmJih0LmRlbGV0ZUNlbGxzKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LGUucGFyYW1zWzBdfHwxLHRoaXMuX2FjdGl2ZUJ1ZmZlci5nZXROdWxsQ2VsbCh0aGlzLl9lcmFzZUF0dHJEYXRhKCkpLHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIueSkpLCEwfXNjcm9sbFVwKGUpe2xldCB0PWUucGFyYW1zWzBdfHwxO2Zvcig7dC0tOyl0aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuc3BsaWNlKHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsVG9wLDEpLHRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5zcGxpY2UodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK3RoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b20sMCx0aGlzLl9hY3RpdmVCdWZmZXIuZ2V0QmxhbmtMaW5lKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSkpO3JldHVybiB0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya1JhbmdlRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcCx0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tKSwhMH1zY3JvbGxEb3duKGUpe2xldCB0PWUucGFyYW1zWzBdfHwxO2Zvcig7dC0tOyl0aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuc3BsaWNlKHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZSt0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tLDEpLHRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5zcGxpY2UodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK3RoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3AsMCx0aGlzLl9hY3RpdmVCdWZmZXIuZ2V0QmxhbmtMaW5lKGguREVGQVVMVF9BVFRSX0RBVEEpKTtyZXR1cm4gdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtSYW5nZURpcnR5KHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3AsdGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSksITB9c2Nyb2xsTGVmdChlKXtpZih0aGlzLl9hY3RpdmVCdWZmZXIueT50aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tfHx0aGlzLl9hY3RpdmVCdWZmZXIueTx0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsVG9wKXJldHVybiEwO2NvbnN0IHQ9ZS5wYXJhbXNbMF18fDE7Zm9yKGxldCBlPXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3A7ZTw9dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbTsrK2Upe2NvbnN0IGk9dGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLmdldCh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrZSk7aS5kZWxldGVDZWxscygwLHQsdGhpcy5fYWN0aXZlQnVmZmVyLmdldE51bGxDZWxsKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksdGhpcy5fZXJhc2VBdHRyRGF0YSgpKSxpLmlzV3JhcHBlZD0hMX1yZXR1cm4gdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtSYW5nZURpcnR5KHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3AsdGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSksITB9c2Nyb2xsUmlnaHQoZSl7aWYodGhpcy5fYWN0aXZlQnVmZmVyLnk+dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbXx8dGhpcy5fYWN0aXZlQnVmZmVyLnk8dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcClyZXR1cm4hMDtjb25zdCB0PWUucGFyYW1zWzBdfHwxO2ZvcihsZXQgZT10aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsVG9wO2U8PXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b207KytlKXtjb25zdCBpPXRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5nZXQodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK2UpO2kuaW5zZXJ0Q2VsbHMoMCx0LHRoaXMuX2FjdGl2ZUJ1ZmZlci5nZXROdWxsQ2VsbCh0aGlzLl9lcmFzZUF0dHJEYXRhKCkpLHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksaS5pc1dyYXBwZWQ9ITF9cmV0dXJuIHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrUmFuZ2VEaXJ0eSh0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsVG9wLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b20pLCEwfWluc2VydENvbHVtbnMoZSl7aWYodGhpcy5fYWN0aXZlQnVmZmVyLnk+dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbXx8dGhpcy5fYWN0aXZlQnVmZmVyLnk8dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcClyZXR1cm4hMDtjb25zdCB0PWUucGFyYW1zWzBdfHwxO2ZvcihsZXQgZT10aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsVG9wO2U8PXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b207KytlKXtjb25zdCBpPXRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5nZXQodGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK2UpO2kuaW5zZXJ0Q2VsbHModGhpcy5fYWN0aXZlQnVmZmVyLngsdCx0aGlzLl9hY3RpdmVCdWZmZXIuZ2V0TnVsbENlbGwodGhpcy5fZXJhc2VBdHRyRGF0YSgpKSx0aGlzLl9lcmFzZUF0dHJEYXRhKCkpLGkuaXNXcmFwcGVkPSExfXJldHVybiB0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya1JhbmdlRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcCx0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tKSwhMH1kZWxldGVDb2x1bW5zKGUpe2lmKHRoaXMuX2FjdGl2ZUJ1ZmZlci55PnRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b218fHRoaXMuX2FjdGl2ZUJ1ZmZlci55PHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3ApcmV0dXJuITA7Y29uc3QgdD1lLnBhcmFtc1swXXx8MTtmb3IobGV0IGU9dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcDtlPD10aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tOysrZSl7Y29uc3QgaT10aGlzLl9hY3RpdmVCdWZmZXIubGluZXMuZ2V0KHRoaXMuX2FjdGl2ZUJ1ZmZlci55YmFzZStlKTtpLmRlbGV0ZUNlbGxzKHRoaXMuX2FjdGl2ZUJ1ZmZlci54LHQsdGhpcy5fYWN0aXZlQnVmZmVyLmdldE51bGxDZWxsKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksdGhpcy5fZXJhc2VBdHRyRGF0YSgpKSxpLmlzV3JhcHBlZD0hMX1yZXR1cm4gdGhpcy5fZGlydHlSb3dTZXJ2aWNlLm1hcmtSYW5nZURpcnR5KHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3AsdGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbEJvdHRvbSksITB9ZXJhc2VDaGFycyhlKXt0aGlzLl9yZXN0cmljdEN1cnNvcigpO2NvbnN0IHQ9dGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLmdldCh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnkpO3JldHVybiB0JiYodC5yZXBsYWNlQ2VsbHModGhpcy5fYWN0aXZlQnVmZmVyLngsdGhpcy5fYWN0aXZlQnVmZmVyLngrKGUucGFyYW1zWzBdfHwxKSx0aGlzLl9hY3RpdmVCdWZmZXIuZ2V0TnVsbENlbGwodGhpcy5fZXJhc2VBdHRyRGF0YSgpKSx0aGlzLl9lcmFzZUF0dHJEYXRhKCkpLHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnkpKSwhMH1yZXBlYXRQcmVjZWRpbmdDaGFyYWN0ZXIoZSl7aWYoIXRoaXMuX3BhcnNlci5wcmVjZWRpbmdDb2RlcG9pbnQpcmV0dXJuITA7Y29uc3QgdD1lLnBhcmFtc1swXXx8MSxpPW5ldyBVaW50MzJBcnJheSh0KTtmb3IobGV0IGU9MDtlPHQ7KytlKWlbZV09dGhpcy5fcGFyc2VyLnByZWNlZGluZ0NvZGVwb2ludDtyZXR1cm4gdGhpcy5wcmludChpLDAsaS5sZW5ndGgpLCEwfXNlbmREZXZpY2VBdHRyaWJ1dGVzUHJpbWFyeShlKXtyZXR1cm4gZS5wYXJhbXNbMF0+MHx8KHRoaXMuX2lzKFwieHRlcm1cIil8fHRoaXMuX2lzKFwicnh2dC11bmljb2RlXCIpfHx0aGlzLl9pcyhcInNjcmVlblwiKT90aGlzLl9jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KHMuQzAuRVNDK1wiWz8xOzJjXCIpOnRoaXMuX2lzKFwibGludXhcIikmJnRoaXMuX2NvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQocy5DMC5FU0MrXCJbPzZjXCIpKSwhMH1zZW5kRGV2aWNlQXR0cmlidXRlc1NlY29uZGFyeShlKXtyZXR1cm4gZS5wYXJhbXNbMF0+MHx8KHRoaXMuX2lzKFwieHRlcm1cIik/dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChzLkMwLkVTQytcIls+MDsyNzY7MGNcIik6dGhpcy5faXMoXCJyeHZ0LXVuaWNvZGVcIik/dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChzLkMwLkVTQytcIls+ODU7OTU7MGNcIik6dGhpcy5faXMoXCJsaW51eFwiKT90aGlzLl9jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KGUucGFyYW1zWzBdK1wiY1wiKTp0aGlzLl9pcyhcInNjcmVlblwiKSYmdGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChzLkMwLkVTQytcIls+ODM7NDAwMDM7MGNcIikpLCEwfV9pcyhlKXtyZXR1cm4gMD09PSh0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnRlcm1OYW1lK1wiXCIpLmluZGV4T2YoZSl9c2V0TW9kZShlKXtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKylzd2l0Y2goZS5wYXJhbXNbdF0pe2Nhc2UgNDp0aGlzLl9jb3JlU2VydmljZS5tb2Rlcy5pbnNlcnRNb2RlPSEwO2JyZWFrO2Nhc2UgMjA6dGhpcy5fb3B0aW9uc1NlcnZpY2Uub3B0aW9ucy5jb252ZXJ0RW9sPSEwfXJldHVybiEwfXNldE1vZGVQcml2YXRlKGUpe2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXN3aXRjaChlLnBhcmFtc1t0XSl7Y2FzZSAxOnRoaXMuX2NvcmVTZXJ2aWNlLmRlY1ByaXZhdGVNb2Rlcy5hcHBsaWNhdGlvbkN1cnNvcktleXM9ITA7YnJlYWs7Y2FzZSAyOnRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdDaGFyc2V0KDAsci5ERUZBVUxUX0NIQVJTRVQpLHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdDaGFyc2V0KDEsci5ERUZBVUxUX0NIQVJTRVQpLHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdDaGFyc2V0KDIsci5ERUZBVUxUX0NIQVJTRVQpLHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdDaGFyc2V0KDMsci5ERUZBVUxUX0NIQVJTRVQpO2JyZWFrO2Nhc2UgMzp0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLndpbmRvd09wdGlvbnMuc2V0V2luTGluZXMmJih0aGlzLl9idWZmZXJTZXJ2aWNlLnJlc2l6ZSgxMzIsdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzKSx0aGlzLl9vblJlcXVlc3RSZXNldC5maXJlKCkpO2JyZWFrO2Nhc2UgNjp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMub3JpZ2luPSEwLHRoaXMuX3NldEN1cnNvcigwLDApO2JyZWFrO2Nhc2UgNzp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMud3JhcGFyb3VuZD0hMDticmVhaztjYXNlIDEyOnRoaXMuX29wdGlvbnNTZXJ2aWNlLm9wdGlvbnMuY3Vyc29yQmxpbms9ITA7YnJlYWs7Y2FzZSA0NTp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMucmV2ZXJzZVdyYXBhcm91bmQ9ITA7YnJlYWs7Y2FzZSA2Njp0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiU2VyaWFsIHBvcnQgcmVxdWVzdGVkIGFwcGxpY2F0aW9uIGtleXBhZC5cIiksdGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLmFwcGxpY2F0aW9uS2V5cGFkPSEwLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIuZmlyZSgpO2JyZWFrO2Nhc2UgOTp0aGlzLl9jb3JlTW91c2VTZXJ2aWNlLmFjdGl2ZVByb3RvY29sPVwiWDEwXCI7YnJlYWs7Y2FzZSAxZTM6dGhpcy5fY29yZU1vdXNlU2VydmljZS5hY3RpdmVQcm90b2NvbD1cIlZUMjAwXCI7YnJlYWs7Y2FzZSAxMDAyOnRoaXMuX2NvcmVNb3VzZVNlcnZpY2UuYWN0aXZlUHJvdG9jb2w9XCJEUkFHXCI7YnJlYWs7Y2FzZSAxMDAzOnRoaXMuX2NvcmVNb3VzZVNlcnZpY2UuYWN0aXZlUHJvdG9jb2w9XCJBTllcIjticmVhaztjYXNlIDEwMDQ6dGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLnNlbmRGb2N1cz0hMCx0aGlzLl9vblJlcXVlc3RTZW5kRm9jdXMuZmlyZSgpO2JyZWFrO2Nhc2UgMTAwNTp0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiREVDU0VUIDEwMDUgbm90IHN1cHBvcnRlZCAoc2VlICMyNTA3KVwiKTticmVhaztjYXNlIDEwMDY6dGhpcy5fY29yZU1vdXNlU2VydmljZS5hY3RpdmVFbmNvZGluZz1cIlNHUlwiO2JyZWFrO2Nhc2UgMTAxNTp0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiREVDU0VUIDEwMTUgbm90IHN1cHBvcnRlZCAoc2VlICMyNTA3KVwiKTticmVhaztjYXNlIDEwMTY6dGhpcy5fY29yZU1vdXNlU2VydmljZS5hY3RpdmVFbmNvZGluZz1cIlNHUl9QSVhFTFNcIjticmVhaztjYXNlIDI1OnRoaXMuX2NvcmVTZXJ2aWNlLmlzQ3Vyc29ySGlkZGVuPSExO2JyZWFrO2Nhc2UgMTA0ODp0aGlzLnNhdmVDdXJzb3IoKTticmVhaztjYXNlIDEwNDk6dGhpcy5zYXZlQ3Vyc29yKCk7Y2FzZSA0NzpjYXNlIDEwNDc6dGhpcy5fYnVmZmVyU2VydmljZS5idWZmZXJzLmFjdGl2YXRlQWx0QnVmZmVyKHRoaXMuX2VyYXNlQXR0ckRhdGEoKSksdGhpcy5fY29yZVNlcnZpY2UuaXNDdXJzb3JJbml0aWFsaXplZD0hMCx0aGlzLl9vblJlcXVlc3RSZWZyZXNoUm93cy5maXJlKDAsdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLTEpLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIuZmlyZSgpO2JyZWFrO2Nhc2UgMjAwNDp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMuYnJhY2tldGVkUGFzdGVNb2RlPSEwfXJldHVybiEwfXJlc2V0TW9kZShlKXtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKylzd2l0Y2goZS5wYXJhbXNbdF0pe2Nhc2UgNDp0aGlzLl9jb3JlU2VydmljZS5tb2Rlcy5pbnNlcnRNb2RlPSExO2JyZWFrO2Nhc2UgMjA6dGhpcy5fb3B0aW9uc1NlcnZpY2Uub3B0aW9ucy5jb252ZXJ0RW9sPSExfXJldHVybiEwfXJlc2V0TW9kZVByaXZhdGUoZSl7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspc3dpdGNoKGUucGFyYW1zW3RdKXtjYXNlIDE6dGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLmFwcGxpY2F0aW9uQ3Vyc29yS2V5cz0hMTticmVhaztjYXNlIDM6dGhpcy5fb3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy53aW5kb3dPcHRpb25zLnNldFdpbkxpbmVzJiYodGhpcy5fYnVmZmVyU2VydmljZS5yZXNpemUoODAsdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzKSx0aGlzLl9vblJlcXVlc3RSZXNldC5maXJlKCkpO2JyZWFrO2Nhc2UgNjp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMub3JpZ2luPSExLHRoaXMuX3NldEN1cnNvcigwLDApO2JyZWFrO2Nhc2UgNzp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMud3JhcGFyb3VuZD0hMTticmVhaztjYXNlIDEyOnRoaXMuX29wdGlvbnNTZXJ2aWNlLm9wdGlvbnMuY3Vyc29yQmxpbms9ITE7YnJlYWs7Y2FzZSA0NTp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMucmV2ZXJzZVdyYXBhcm91bmQ9ITE7YnJlYWs7Y2FzZSA2Njp0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiU3dpdGNoaW5nIGJhY2sgdG8gbm9ybWFsIGtleXBhZC5cIiksdGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLmFwcGxpY2F0aW9uS2V5cGFkPSExLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIuZmlyZSgpO2JyZWFrO2Nhc2UgOTpjYXNlIDFlMzpjYXNlIDEwMDI6Y2FzZSAxMDAzOnRoaXMuX2NvcmVNb3VzZVNlcnZpY2UuYWN0aXZlUHJvdG9jb2w9XCJOT05FXCI7YnJlYWs7Y2FzZSAxMDA0OnRoaXMuX2NvcmVTZXJ2aWNlLmRlY1ByaXZhdGVNb2Rlcy5zZW5kRm9jdXM9ITE7YnJlYWs7Y2FzZSAxMDA1OnRoaXMuX2xvZ1NlcnZpY2UuZGVidWcoXCJERUNSU1QgMTAwNSBub3Qgc3VwcG9ydGVkIChzZWUgIzI1MDcpXCIpO2JyZWFrO2Nhc2UgMTAwNjpjYXNlIDEwMTY6dGhpcy5fY29yZU1vdXNlU2VydmljZS5hY3RpdmVFbmNvZGluZz1cIkRFRkFVTFRcIjticmVhaztjYXNlIDEwMTU6dGhpcy5fbG9nU2VydmljZS5kZWJ1ZyhcIkRFQ1JTVCAxMDE1IG5vdCBzdXBwb3J0ZWQgKHNlZSAjMjUwNylcIik7YnJlYWs7Y2FzZSAyNTp0aGlzLl9jb3JlU2VydmljZS5pc0N1cnNvckhpZGRlbj0hMDticmVhaztjYXNlIDEwNDg6dGhpcy5yZXN0b3JlQ3Vyc29yKCk7YnJlYWs7Y2FzZSAxMDQ5OmNhc2UgNDc6Y2FzZSAxMDQ3OnRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVycy5hY3RpdmF0ZU5vcm1hbEJ1ZmZlcigpLDEwNDk9PT1lLnBhcmFtc1t0XSYmdGhpcy5yZXN0b3JlQ3Vyc29yKCksdGhpcy5fY29yZVNlcnZpY2UuaXNDdXJzb3JJbml0aWFsaXplZD0hMCx0aGlzLl9vblJlcXVlc3RSZWZyZXNoUm93cy5maXJlKDAsdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLTEpLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIuZmlyZSgpO2JyZWFrO2Nhc2UgMjAwNDp0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMuYnJhY2tldGVkUGFzdGVNb2RlPSExfXJldHVybiEwfXJlcXVlc3RNb2RlKGUsdCl7Y29uc3QgaT10aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMse2FjdGl2ZVByb3RvY29sOnIsYWN0aXZlRW5jb2Rpbmc6bn09dGhpcy5fY29yZU1vdXNlU2VydmljZSxvPXRoaXMuX2NvcmVTZXJ2aWNlLHtidWZmZXJzOmEsY29sczpofT10aGlzLl9idWZmZXJTZXJ2aWNlLHthY3RpdmU6YyxhbHQ6bH09YSxkPXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMsXz1lPT5lPzE6Mix1PWUucGFyYW1zWzBdO3JldHVybiBmPXUsdj10PzI9PT11PzM6ND09PXU/XyhvLm1vZGVzLmluc2VydE1vZGUpOjEyPT09dT80OjIwPT09dT9fKGQuY29udmVydEVvbCk6MDoxPT09dT9fKGkuYXBwbGljYXRpb25DdXJzb3JLZXlzKTozPT09dT9kLndpbmRvd09wdGlvbnMuc2V0V2luTGluZXM/ODA9PT1oPzI6MTMyPT09aD8xOjA6MDo2PT09dT9fKGkub3JpZ2luKTo3PT09dT9fKGkud3JhcGFyb3VuZCk6OD09PXU/Mzo5PT09dT9fKFwiWDEwXCI9PT1yKToxMj09PXU/XyhkLmN1cnNvckJsaW5rKToyNT09PXU/Xyghby5pc0N1cnNvckhpZGRlbik6NDU9PT11P18oaS5yZXZlcnNlV3JhcGFyb3VuZCk6NjY9PT11P18oaS5hcHBsaWNhdGlvbktleXBhZCk6MWUzPT09dT9fKFwiVlQyMDBcIj09PXIpOjEwMDI9PT11P18oXCJEUkFHXCI9PT1yKToxMDAzPT09dT9fKFwiQU5ZXCI9PT1yKToxMDA0PT09dT9fKGkuc2VuZEZvY3VzKToxMDA1PT09dT80OjEwMDY9PT11P18oXCJTR1JcIj09PW4pOjEwMTU9PT11PzQ6MTAxNj09PXU/XyhcIlNHUl9QSVhFTFNcIj09PW4pOjEwNDg9PT11PzE6NDc9PT11fHwxMDQ3PT09dXx8MTA0OT09PXU/XyhjPT09bCk6MjAwND09PXU/XyhpLmJyYWNrZXRlZFBhc3RlTW9kZSk6MCxvLnRyaWdnZXJEYXRhRXZlbnQoYCR7cy5DMC5FU0N9WyR7dD9cIlwiOlwiP1wifSR7Zn07JHt2fSR5YCksITA7dmFyIGYsdn1fdXBkYXRlQXR0ckNvbG9yKGUsdCxpLHMscil7cmV0dXJuIDI9PT10PyhlfD01MDMzMTY0OCxlJj0tMTY3NzcyMTYsZXw9Xy5BdHRyaWJ1dGVEYXRhLmZyb21Db2xvclJHQihbaSxzLHJdKSk6NT09PXQmJihlJj0tNTAzMzE5MDQsZXw9MzM1NTQ0MzJ8MjU1JmkpLGV9X2V4dHJhY3RDb2xvcihlLHQsaSl7Y29uc3Qgcz1bMCwwLC0xLDAsMCwwXTtsZXQgcj0wLG49MDtkb3tpZihzW24rcl09ZS5wYXJhbXNbdCtuXSxlLmhhc1N1YlBhcmFtcyh0K24pKXtjb25zdCBpPWUuZ2V0U3ViUGFyYW1zKHQrbik7bGV0IG89MDtkb3s1PT09c1sxXSYmKHI9MSksc1tuK28rMStyXT1pW29dfXdoaWxlKCsrbzxpLmxlbmd0aCYmbytuKzErcjxzLmxlbmd0aCk7YnJlYWt9aWYoNT09PXNbMV0mJm4rcj49Mnx8Mj09PXNbMV0mJm4rcj49NSlicmVhaztzWzFdJiYocj0xKX13aGlsZSgrK24rdDxlLmxlbmd0aCYmbityPHMubGVuZ3RoKTtmb3IobGV0IGU9MjtlPHMubGVuZ3RoOysrZSktMT09PXNbZV0mJihzW2VdPTApO3N3aXRjaChzWzBdKXtjYXNlIDM4OmkuZmc9dGhpcy5fdXBkYXRlQXR0ckNvbG9yKGkuZmcsc1sxXSxzWzNdLHNbNF0sc1s1XSk7YnJlYWs7Y2FzZSA0ODppLmJnPXRoaXMuX3VwZGF0ZUF0dHJDb2xvcihpLmJnLHNbMV0sc1szXSxzWzRdLHNbNV0pO2JyZWFrO2Nhc2UgNTg6aS5leHRlbmRlZD1pLmV4dGVuZGVkLmNsb25lKCksaS5leHRlbmRlZC51bmRlcmxpbmVDb2xvcj10aGlzLl91cGRhdGVBdHRyQ29sb3IoaS5leHRlbmRlZC51bmRlcmxpbmVDb2xvcixzWzFdLHNbM10sc1s0XSxzWzVdKX1yZXR1cm4gbn1fcHJvY2Vzc1VuZGVybGluZShlLHQpe3QuZXh0ZW5kZWQ9dC5leHRlbmRlZC5jbG9uZSgpLCghfmV8fGU+NSkmJihlPTEpLHQuZXh0ZW5kZWQudW5kZXJsaW5lU3R5bGU9ZSx0LmZnfD0yNjg0MzU0NTYsMD09PWUmJih0LmZnJj0tMjY4NDM1NDU3KSx0LnVwZGF0ZUV4dGVuZGVkKCl9Y2hhckF0dHJpYnV0ZXMoZSl7aWYoMT09PWUubGVuZ3RoJiYwPT09ZS5wYXJhbXNbMF0pcmV0dXJuIHRoaXMuX2N1ckF0dHJEYXRhLmZnPWguREVGQVVMVF9BVFRSX0RBVEEuZmcsdGhpcy5fY3VyQXR0ckRhdGEuYmc9aC5ERUZBVUxUX0FUVFJfREFUQS5iZywhMDtjb25zdCB0PWUubGVuZ3RoO2xldCBpO2NvbnN0IHM9dGhpcy5fY3VyQXR0ckRhdGE7Zm9yKGxldCByPTA7cjx0O3IrKylpPWUucGFyYW1zW3JdLGk+PTMwJiZpPD0zNz8ocy5mZyY9LTUwMzMxOTA0LHMuZmd8PTE2Nzc3MjE2fGktMzApOmk+PTQwJiZpPD00Nz8ocy5iZyY9LTUwMzMxOTA0LHMuYmd8PTE2Nzc3MjE2fGktNDApOmk+PTkwJiZpPD05Nz8ocy5mZyY9LTUwMzMxOTA0LHMuZmd8PTE2Nzc3MjI0fGktOTApOmk+PTEwMCYmaTw9MTA3PyhzLmJnJj0tNTAzMzE5MDQscy5iZ3w9MTY3NzcyMjR8aS0xMDApOjA9PT1pPyhzLmZnPWguREVGQVVMVF9BVFRSX0RBVEEuZmcscy5iZz1oLkRFRkFVTFRfQVRUUl9EQVRBLmJnKToxPT09aT9zLmZnfD0xMzQyMTc3Mjg6Mz09PWk/cy5iZ3w9NjcxMDg4NjQ6ND09PWk/KHMuZmd8PTI2ODQzNTQ1Nix0aGlzLl9wcm9jZXNzVW5kZXJsaW5lKGUuaGFzU3ViUGFyYW1zKHIpP2UuZ2V0U3ViUGFyYW1zKHIpWzBdOjEscykpOjU9PT1pP3MuZmd8PTUzNjg3MDkxMjo3PT09aT9zLmZnfD02NzEwODg2NDo4PT09aT9zLmZnfD0xMDczNzQxODI0Ojk9PT1pP3MuZmd8PTIxNDc0ODM2NDg6Mj09PWk/cy5iZ3w9MTM0MjE3NzI4OjIxPT09aT90aGlzLl9wcm9jZXNzVW5kZXJsaW5lKDIscyk6MjI9PT1pPyhzLmZnJj0tMTM0MjE3NzI5LHMuYmcmPS0xMzQyMTc3MjkpOjIzPT09aT9zLmJnJj0tNjcxMDg4NjU6MjQ9PT1pPyhzLmZnJj0tMjY4NDM1NDU3LHRoaXMuX3Byb2Nlc3NVbmRlcmxpbmUoMCxzKSk6MjU9PT1pP3MuZmcmPS01MzY4NzA5MTM6Mjc9PT1pP3MuZmcmPS02NzEwODg2NToyOD09PWk/cy5mZyY9LTEwNzM3NDE4MjU6Mjk9PT1pP3MuZmcmPTIxNDc0ODM2NDc6Mzk9PT1pPyhzLmZnJj0tNjcxMDg4NjQscy5mZ3w9MTY3NzcyMTUmaC5ERUZBVUxUX0FUVFJfREFUQS5mZyk6NDk9PT1pPyhzLmJnJj0tNjcxMDg4NjQscy5iZ3w9MTY3NzcyMTUmaC5ERUZBVUxUX0FUVFJfREFUQS5iZyk6Mzg9PT1pfHw0OD09PWl8fDU4PT09aT9yKz10aGlzLl9leHRyYWN0Q29sb3IoZSxyLHMpOjU5PT09aT8ocy5leHRlbmRlZD1zLmV4dGVuZGVkLmNsb25lKCkscy5leHRlbmRlZC51bmRlcmxpbmVDb2xvcj0tMSxzLnVwZGF0ZUV4dGVuZGVkKCkpOjEwMD09PWk/KHMuZmcmPS02NzEwODg2NCxzLmZnfD0xNjc3NzIxNSZoLkRFRkFVTFRfQVRUUl9EQVRBLmZnLHMuYmcmPS02NzEwODg2NCxzLmJnfD0xNjc3NzIxNSZoLkRFRkFVTFRfQVRUUl9EQVRBLmJnKTp0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiVW5rbm93biBTR1IgYXR0cmlidXRlOiAlZC5cIixpKTtyZXR1cm4hMH1kZXZpY2VTdGF0dXMoZSl7c3dpdGNoKGUucGFyYW1zWzBdKXtjYXNlIDU6dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChgJHtzLkMwLkVTQ31bMG5gKTticmVhaztjYXNlIDY6Y29uc3QgZT10aGlzLl9hY3RpdmVCdWZmZXIueSsxLHQ9dGhpcy5fYWN0aXZlQnVmZmVyLngrMTt0aGlzLl9jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KGAke3MuQzAuRVNDfVske2V9OyR7dH1SYCl9cmV0dXJuITB9ZGV2aWNlU3RhdHVzUHJpdmF0ZShlKXtpZig2PT09ZS5wYXJhbXNbMF0pe2NvbnN0IGU9dGhpcy5fYWN0aXZlQnVmZmVyLnkrMSx0PXRoaXMuX2FjdGl2ZUJ1ZmZlci54KzE7dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChgJHtzLkMwLkVTQ31bPyR7ZX07JHt0fVJgKX1yZXR1cm4hMH1zb2Z0UmVzZXQoZSl7cmV0dXJuIHRoaXMuX2NvcmVTZXJ2aWNlLmlzQ3Vyc29ySGlkZGVuPSExLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIuZmlyZSgpLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3A9MCx0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tPXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cy0xLHRoaXMuX2N1ckF0dHJEYXRhPWguREVGQVVMVF9BVFRSX0RBVEEuY2xvbmUoKSx0aGlzLl9jb3JlU2VydmljZS5yZXNldCgpLHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnJlc2V0KCksdGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkWD0wLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zYXZlZFk9dGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zYXZlZEN1ckF0dHJEYXRhLmZnPXRoaXMuX2N1ckF0dHJEYXRhLmZnLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zYXZlZEN1ckF0dHJEYXRhLmJnPXRoaXMuX2N1ckF0dHJEYXRhLmJnLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zYXZlZENoYXJzZXQ9dGhpcy5fY2hhcnNldFNlcnZpY2UuY2hhcnNldCx0aGlzLl9jb3JlU2VydmljZS5kZWNQcml2YXRlTW9kZXMub3JpZ2luPSExLCEwfXNldEN1cnNvclN0eWxlKGUpe2NvbnN0IHQ9ZS5wYXJhbXNbMF18fDE7c3dpdGNoKHQpe2Nhc2UgMTpjYXNlIDI6dGhpcy5fb3B0aW9uc1NlcnZpY2Uub3B0aW9ucy5jdXJzb3JTdHlsZT1cImJsb2NrXCI7YnJlYWs7Y2FzZSAzOmNhc2UgNDp0aGlzLl9vcHRpb25zU2VydmljZS5vcHRpb25zLmN1cnNvclN0eWxlPVwidW5kZXJsaW5lXCI7YnJlYWs7Y2FzZSA1OmNhc2UgNjp0aGlzLl9vcHRpb25zU2VydmljZS5vcHRpb25zLmN1cnNvclN0eWxlPVwiYmFyXCJ9Y29uc3QgaT10JTI9PTE7cmV0dXJuIHRoaXMuX29wdGlvbnNTZXJ2aWNlLm9wdGlvbnMuY3Vyc29yQmxpbms9aSwhMH1zZXRTY3JvbGxSZWdpb24oZSl7Y29uc3QgdD1lLnBhcmFtc1swXXx8MTtsZXQgaTtyZXR1cm4oZS5sZW5ndGg8Mnx8KGk9ZS5wYXJhbXNbMV0pPnRoaXMuX2J1ZmZlclNlcnZpY2Uucm93c3x8MD09PWkpJiYoaT10aGlzLl9idWZmZXJTZXJ2aWNlLnJvd3MpLGk+dCYmKHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3A9dC0xLHRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b209aS0xLHRoaXMuX3NldEN1cnNvcigwLDApKSwhMH13aW5kb3dPcHRpb25zKGUpe2lmKCFtKGUucGFyYW1zWzBdLHRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMud2luZG93T3B0aW9ucykpcmV0dXJuITA7Y29uc3QgdD1lLmxlbmd0aD4xP2UucGFyYW1zWzFdOjA7c3dpdGNoKGUucGFyYW1zWzBdKXtjYXNlIDE0OjIhPT10JiZ0aGlzLl9vblJlcXVlc3RXaW5kb3dzT3B0aW9uc1JlcG9ydC5maXJlKEMuR0VUX1dJTl9TSVpFX1BJWEVMUyk7YnJlYWs7Y2FzZSAxNjp0aGlzLl9vblJlcXVlc3RXaW5kb3dzT3B0aW9uc1JlcG9ydC5maXJlKEMuR0VUX0NFTExfU0laRV9QSVhFTFMpO2JyZWFrO2Nhc2UgMTg6dGhpcy5fYnVmZmVyU2VydmljZSYmdGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckRhdGFFdmVudChgJHtzLkMwLkVTQ31bODske3RoaXMuX2J1ZmZlclNlcnZpY2Uucm93c307JHt0aGlzLl9idWZmZXJTZXJ2aWNlLmNvbHN9dGApO2JyZWFrO2Nhc2UgMjI6MCE9PXQmJjIhPT10fHwodGhpcy5fd2luZG93VGl0bGVTdGFjay5wdXNoKHRoaXMuX3dpbmRvd1RpdGxlKSx0aGlzLl93aW5kb3dUaXRsZVN0YWNrLmxlbmd0aD4xMCYmdGhpcy5fd2luZG93VGl0bGVTdGFjay5zaGlmdCgpKSwwIT09dCYmMSE9PXR8fCh0aGlzLl9pY29uTmFtZVN0YWNrLnB1c2godGhpcy5faWNvbk5hbWUpLHRoaXMuX2ljb25OYW1lU3RhY2subGVuZ3RoPjEwJiZ0aGlzLl9pY29uTmFtZVN0YWNrLnNoaWZ0KCkpO2JyZWFrO2Nhc2UgMjM6MCE9PXQmJjIhPT10fHx0aGlzLl93aW5kb3dUaXRsZVN0YWNrLmxlbmd0aCYmdGhpcy5zZXRUaXRsZSh0aGlzLl93aW5kb3dUaXRsZVN0YWNrLnBvcCgpKSwwIT09dCYmMSE9PXR8fHRoaXMuX2ljb25OYW1lU3RhY2subGVuZ3RoJiZ0aGlzLnNldEljb25OYW1lKHRoaXMuX2ljb25OYW1lU3RhY2sucG9wKCkpfXJldHVybiEwfXNhdmVDdXJzb3IoZSl7cmV0dXJuIHRoaXMuX2FjdGl2ZUJ1ZmZlci5zYXZlZFg9dGhpcy5fYWN0aXZlQnVmZmVyLngsdGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkWT10aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnksdGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ3VyQXR0ckRhdGEuZmc9dGhpcy5fY3VyQXR0ckRhdGEuZmcsdGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ3VyQXR0ckRhdGEuYmc9dGhpcy5fY3VyQXR0ckRhdGEuYmcsdGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ2hhcnNldD10aGlzLl9jaGFyc2V0U2VydmljZS5jaGFyc2V0LCEwfXJlc3RvcmVDdXJzb3IoZSl7cmV0dXJuIHRoaXMuX2FjdGl2ZUJ1ZmZlci54PXRoaXMuX2FjdGl2ZUJ1ZmZlci5zYXZlZFh8fDAsdGhpcy5fYWN0aXZlQnVmZmVyLnk9TWF0aC5tYXgodGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkWS10aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UsMCksdGhpcy5fY3VyQXR0ckRhdGEuZmc9dGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ3VyQXR0ckRhdGEuZmcsdGhpcy5fY3VyQXR0ckRhdGEuYmc9dGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ3VyQXR0ckRhdGEuYmcsdGhpcy5fY2hhcnNldFNlcnZpY2UuY2hhcnNldD10aGlzLl9zYXZlZENoYXJzZXQsdGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ2hhcnNldCYmKHRoaXMuX2NoYXJzZXRTZXJ2aWNlLmNoYXJzZXQ9dGhpcy5fYWN0aXZlQnVmZmVyLnNhdmVkQ2hhcnNldCksdGhpcy5fcmVzdHJpY3RDdXJzb3IoKSwhMH1zZXRUaXRsZShlKXtyZXR1cm4gdGhpcy5fd2luZG93VGl0bGU9ZSx0aGlzLl9vblRpdGxlQ2hhbmdlLmZpcmUoZSksITB9c2V0SWNvbk5hbWUoZSl7cmV0dXJuIHRoaXMuX2ljb25OYW1lPWUsITB9c2V0T3JSZXBvcnRJbmRleGVkQ29sb3IoZSl7Y29uc3QgdD1bXSxpPWUuc3BsaXQoXCI7XCIpO2Zvcig7aS5sZW5ndGg+MTspe2NvbnN0IGU9aS5zaGlmdCgpLHM9aS5zaGlmdCgpO2lmKC9eXFxkKyQvLmV4ZWMoZSkpe2NvbnN0IGk9cGFyc2VJbnQoZSk7aWYoMDw9aSYmaTwyNTYpaWYoXCI/XCI9PT1zKXQucHVzaCh7dHlwZTowLGluZGV4Oml9KTtlbHNle2NvbnN0IGU9KDAsZy5wYXJzZUNvbG9yKShzKTtlJiZ0LnB1c2goe3R5cGU6MSxpbmRleDppLGNvbG9yOmV9KX19fXJldHVybiB0Lmxlbmd0aCYmdGhpcy5fb25Db2xvci5maXJlKHQpLCEwfXNldEh5cGVybGluayhlKXtjb25zdCB0PWUuc3BsaXQoXCI7XCIpO3JldHVybiEodC5sZW5ndGg8MikmJih0WzFdP3RoaXMuX2NyZWF0ZUh5cGVybGluayh0WzBdLHRbMV0pOiF0WzBdJiZ0aGlzLl9maW5pc2hIeXBlcmxpbmsoKSl9X2NyZWF0ZUh5cGVybGluayhlLHQpe3ZvaWQgMCE9PXRoaXMuX2N1cnJlbnRMaW5rSWQmJnRoaXMuX2ZpbmlzaEh5cGVybGluaygpO2NvbnN0IGk9ZS5zcGxpdChcIjpcIik7bGV0IHM7Y29uc3Qgcj1pLmZpbmRJbmRleCgoZT0+ZS5zdGFydHNXaXRoKFwiaWQ9XCIpKSk7cmV0dXJuLTEhPT1yJiYocz1pW3JdLnNsaWNlKDMpfHx2b2lkIDApLHRoaXMuX2N1ckF0dHJEYXRhLmV4dGVuZGVkPXRoaXMuX2N1ckF0dHJEYXRhLmV4dGVuZGVkLmNsb25lKCksdGhpcy5fY3VycmVudExpbmtJZD10aGlzLl9vc2NMaW5rU2VydmljZS5yZWdpc3Rlckxpbmsoe2lkOnMsdXJpOnR9KSx0aGlzLl9jdXJBdHRyRGF0YS5leHRlbmRlZC51cmxJZD10aGlzLl9jdXJyZW50TGlua0lkLHRoaXMuX2N1ckF0dHJEYXRhLnVwZGF0ZUV4dGVuZGVkKCksITB9X2ZpbmlzaEh5cGVybGluaygpe3JldHVybiB0aGlzLl9jdXJBdHRyRGF0YS5leHRlbmRlZD10aGlzLl9jdXJBdHRyRGF0YS5leHRlbmRlZC5jbG9uZSgpLHRoaXMuX2N1ckF0dHJEYXRhLmV4dGVuZGVkLnVybElkPTAsdGhpcy5fY3VyQXR0ckRhdGEudXBkYXRlRXh0ZW5kZWQoKSx0aGlzLl9jdXJyZW50TGlua0lkPXZvaWQgMCwhMH1fc2V0T3JSZXBvcnRTcGVjaWFsQ29sb3IoZSx0KXtjb25zdCBpPWUuc3BsaXQoXCI7XCIpO2ZvcihsZXQgZT0wO2U8aS5sZW5ndGgmJiEodD49dGhpcy5fc3BlY2lhbENvbG9ycy5sZW5ndGgpOysrZSwrK3QpaWYoXCI/XCI9PT1pW2VdKXRoaXMuX29uQ29sb3IuZmlyZShbe3R5cGU6MCxpbmRleDp0aGlzLl9zcGVjaWFsQ29sb3JzW3RdfV0pO2Vsc2V7Y29uc3Qgcz0oMCxnLnBhcnNlQ29sb3IpKGlbZV0pO3MmJnRoaXMuX29uQ29sb3IuZmlyZShbe3R5cGU6MSxpbmRleDp0aGlzLl9zcGVjaWFsQ29sb3JzW3RdLGNvbG9yOnN9XSl9cmV0dXJuITB9c2V0T3JSZXBvcnRGZ0NvbG9yKGUpe3JldHVybiB0aGlzLl9zZXRPclJlcG9ydFNwZWNpYWxDb2xvcihlLDApfXNldE9yUmVwb3J0QmdDb2xvcihlKXtyZXR1cm4gdGhpcy5fc2V0T3JSZXBvcnRTcGVjaWFsQ29sb3IoZSwxKX1zZXRPclJlcG9ydEN1cnNvckNvbG9yKGUpe3JldHVybiB0aGlzLl9zZXRPclJlcG9ydFNwZWNpYWxDb2xvcihlLDIpfXJlc3RvcmVJbmRleGVkQ29sb3IoZSl7aWYoIWUpcmV0dXJuIHRoaXMuX29uQ29sb3IuZmlyZShbe3R5cGU6Mn1dKSwhMDtjb25zdCB0PVtdLGk9ZS5zcGxpdChcIjtcIik7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDsrK2UpaWYoL15cXGQrJC8uZXhlYyhpW2VdKSl7Y29uc3Qgcz1wYXJzZUludChpW2VdKTswPD1zJiZzPDI1NiYmdC5wdXNoKHt0eXBlOjIsaW5kZXg6c30pfXJldHVybiB0Lmxlbmd0aCYmdGhpcy5fb25Db2xvci5maXJlKHQpLCEwfXJlc3RvcmVGZ0NvbG9yKGUpe3JldHVybiB0aGlzLl9vbkNvbG9yLmZpcmUoW3t0eXBlOjIsaW5kZXg6MjU2fV0pLCEwfXJlc3RvcmVCZ0NvbG9yKGUpe3JldHVybiB0aGlzLl9vbkNvbG9yLmZpcmUoW3t0eXBlOjIsaW5kZXg6MjU3fV0pLCEwfXJlc3RvcmVDdXJzb3JDb2xvcihlKXtyZXR1cm4gdGhpcy5fb25Db2xvci5maXJlKFt7dHlwZToyLGluZGV4OjI1OH1dKSwhMH1uZXh0TGluZSgpe3JldHVybiB0aGlzLl9hY3RpdmVCdWZmZXIueD0wLHRoaXMuaW5kZXgoKSwhMH1rZXlwYWRBcHBsaWNhdGlvbk1vZGUoKXtyZXR1cm4gdGhpcy5fbG9nU2VydmljZS5kZWJ1ZyhcIlNlcmlhbCBwb3J0IHJlcXVlc3RlZCBhcHBsaWNhdGlvbiBrZXlwYWQuXCIpLHRoaXMuX2NvcmVTZXJ2aWNlLmRlY1ByaXZhdGVNb2Rlcy5hcHBsaWNhdGlvbktleXBhZD0hMCx0aGlzLl9vblJlcXVlc3RTeW5jU2Nyb2xsQmFyLmZpcmUoKSwhMH1rZXlwYWROdW1lcmljTW9kZSgpe3JldHVybiB0aGlzLl9sb2dTZXJ2aWNlLmRlYnVnKFwiU3dpdGNoaW5nIGJhY2sgdG8gbm9ybWFsIGtleXBhZC5cIiksdGhpcy5fY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzLmFwcGxpY2F0aW9uS2V5cGFkPSExLHRoaXMuX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIuZmlyZSgpLCEwfXNlbGVjdERlZmF1bHRDaGFyc2V0KCl7cmV0dXJuIHRoaXMuX2NoYXJzZXRTZXJ2aWNlLnNldGdMZXZlbCgwKSx0aGlzLl9jaGFyc2V0U2VydmljZS5zZXRnQ2hhcnNldCgwLHIuREVGQVVMVF9DSEFSU0VUKSwhMH1zZWxlY3RDaGFyc2V0KGUpe3JldHVybiAyIT09ZS5sZW5ndGg/KHRoaXMuc2VsZWN0RGVmYXVsdENoYXJzZXQoKSwhMCk6KFwiL1wiPT09ZVswXXx8dGhpcy5fY2hhcnNldFNlcnZpY2Uuc2V0Z0NoYXJzZXQocFtlWzBdXSxyLkNIQVJTRVRTW2VbMV1dfHxyLkRFRkFVTFRfQ0hBUlNFVCksITApfWluZGV4KCl7cmV0dXJuIHRoaXMuX3Jlc3RyaWN0Q3Vyc29yKCksdGhpcy5fYWN0aXZlQnVmZmVyLnkrKyx0aGlzLl9hY3RpdmVCdWZmZXIueT09PXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxCb3R0b20rMT8odGhpcy5fYWN0aXZlQnVmZmVyLnktLSx0aGlzLl9idWZmZXJTZXJ2aWNlLnNjcm9sbCh0aGlzLl9lcmFzZUF0dHJEYXRhKCkpKTp0aGlzLl9hY3RpdmVCdWZmZXIueT49dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzJiYodGhpcy5fYWN0aXZlQnVmZmVyLnk9dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLTEpLHRoaXMuX3Jlc3RyaWN0Q3Vyc29yKCksITB9dGFiU2V0KCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUJ1ZmZlci50YWJzW3RoaXMuX2FjdGl2ZUJ1ZmZlci54XT0hMCwhMH1yZXZlcnNlSW5kZXgoKXtpZih0aGlzLl9yZXN0cmljdEN1cnNvcigpLHRoaXMuX2FjdGl2ZUJ1ZmZlci55PT09dGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcCl7Y29uc3QgZT10aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tLXRoaXMuX2FjdGl2ZUJ1ZmZlci5zY3JvbGxUb3A7dGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLnNoaWZ0RWxlbWVudHModGhpcy5fYWN0aXZlQnVmZmVyLnliYXNlK3RoaXMuX2FjdGl2ZUJ1ZmZlci55LGUsMSksdGhpcy5fYWN0aXZlQnVmZmVyLmxpbmVzLnNldCh0aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnksdGhpcy5fYWN0aXZlQnVmZmVyLmdldEJsYW5rTGluZSh0aGlzLl9lcmFzZUF0dHJEYXRhKCkpKSx0aGlzLl9kaXJ0eVJvd1NlcnZpY2UubWFya1JhbmdlRGlydHkodGhpcy5fYWN0aXZlQnVmZmVyLnNjcm9sbFRvcCx0aGlzLl9hY3RpdmVCdWZmZXIuc2Nyb2xsQm90dG9tKX1lbHNlIHRoaXMuX2FjdGl2ZUJ1ZmZlci55LS0sdGhpcy5fcmVzdHJpY3RDdXJzb3IoKTtyZXR1cm4hMH1mdWxsUmVzZXQoKXtyZXR1cm4gdGhpcy5fcGFyc2VyLnJlc2V0KCksdGhpcy5fb25SZXF1ZXN0UmVzZXQuZmlyZSgpLCEwfXJlc2V0KCl7dGhpcy5fY3VyQXR0ckRhdGE9aC5ERUZBVUxUX0FUVFJfREFUQS5jbG9uZSgpLHRoaXMuX2VyYXNlQXR0ckRhdGFJbnRlcm5hbD1oLkRFRkFVTFRfQVRUUl9EQVRBLmNsb25lKCl9X2VyYXNlQXR0ckRhdGEoKXtyZXR1cm4gdGhpcy5fZXJhc2VBdHRyRGF0YUludGVybmFsLmJnJj0tNjcxMDg4NjQsdGhpcy5fZXJhc2VBdHRyRGF0YUludGVybmFsLmJnfD02NzEwODg2MyZ0aGlzLl9jdXJBdHRyRGF0YS5iZyx0aGlzLl9lcmFzZUF0dHJEYXRhSW50ZXJuYWx9c2V0Z0xldmVsKGUpe3JldHVybiB0aGlzLl9jaGFyc2V0U2VydmljZS5zZXRnTGV2ZWwoZSksITB9c2NyZWVuQWxpZ25tZW50UGF0dGVybigpe2NvbnN0IGU9bmV3IGQuQ2VsbERhdGE7ZS5jb250ZW50PTE8PDIyfFwiRVwiLmNoYXJDb2RlQXQoMCksZS5mZz10aGlzLl9jdXJBdHRyRGF0YS5mZyxlLmJnPXRoaXMuX2N1ckF0dHJEYXRhLmJnLHRoaXMuX3NldEN1cnNvcigwLDApO2ZvcihsZXQgdD0wO3Q8dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzOysrdCl7Y29uc3QgaT10aGlzLl9hY3RpdmVCdWZmZXIueWJhc2UrdGhpcy5fYWN0aXZlQnVmZmVyLnkrdCxzPXRoaXMuX2FjdGl2ZUJ1ZmZlci5saW5lcy5nZXQoaSk7cyYmKHMuZmlsbChlKSxzLmlzV3JhcHBlZD0hMSl9cmV0dXJuIHRoaXMuX2RpcnR5Um93U2VydmljZS5tYXJrQWxsRGlydHkoKSx0aGlzLl9zZXRDdXJzb3IoMCwwKSwhMH1yZXF1ZXN0U3RhdHVzU3RyaW5nKGUsdCl7Y29uc3QgaT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcixyPXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnM7cmV0dXJuKGU9Pih0aGlzLl9jb3JlU2VydmljZS50cmlnZ2VyRGF0YUV2ZW50KGAke3MuQzAuRVNDfSR7ZX0ke3MuQzAuRVNDfVxcXFxgKSwhMCkpKCdcInEnPT09ZT9gUDEkciR7dGhpcy5fY3VyQXR0ckRhdGEuaXNQcm90ZWN0ZWQoKT8xOjB9XCJxYDonXCJwJz09PWU/J1AxJHI2MTsxXCJwJzpcInJcIj09PWU/YFAxJHIke2kuc2Nyb2xsVG9wKzF9OyR7aS5zY3JvbGxCb3R0b20rMX1yYDpcIm1cIj09PWU/XCJQMSRyMG1cIjpcIiBxXCI9PT1lP2BQMSRyJHt7YmxvY2s6Mix1bmRlcmxpbmU6NCxiYXI6Nn1bci5jdXJzb3JTdHlsZV0tKHIuY3Vyc29yQmxpbms/MTowKX0gcWA6XCJQMCRyXCIpfX10LklucHV0SGFuZGxlcj1ifSw4NDQ6KGUsdCk9PntmdW5jdGlvbiBpKGUpe2Zvcihjb25zdCB0IG9mIGUpdC5kaXNwb3NlKCk7ZS5sZW5ndGg9MH1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmdldERpc3Bvc2VBcnJheURpc3Bvc2FibGU9dC5kaXNwb3NlQXJyYXk9dC50b0Rpc3Bvc2FibGU9dC5EaXNwb3NhYmxlPXZvaWQgMCx0LkRpc3Bvc2FibGU9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLl9kaXNwb3NhYmxlcz1bXSx0aGlzLl9pc0Rpc3Bvc2VkPSExfWRpc3Bvc2UoKXt0aGlzLl9pc0Rpc3Bvc2VkPSEwO2Zvcihjb25zdCBlIG9mIHRoaXMuX2Rpc3Bvc2FibGVzKWUuZGlzcG9zZSgpO3RoaXMuX2Rpc3Bvc2FibGVzLmxlbmd0aD0wfXJlZ2lzdGVyKGUpe3JldHVybiB0aGlzLl9kaXNwb3NhYmxlcy5wdXNoKGUpLGV9dW5yZWdpc3RlcihlKXtjb25zdCB0PXRoaXMuX2Rpc3Bvc2FibGVzLmluZGV4T2YoZSk7LTEhPT10JiZ0aGlzLl9kaXNwb3NhYmxlcy5zcGxpY2UodCwxKX19LHQudG9EaXNwb3NhYmxlPWZ1bmN0aW9uKGUpe3JldHVybntkaXNwb3NlOmV9fSx0LmRpc3Bvc2VBcnJheT1pLHQuZ2V0RGlzcG9zZUFycmF5RGlzcG9zYWJsZT1mdW5jdGlvbihlKXtyZXR1cm57ZGlzcG9zZTooKT0+aShlKX19fSwxNTA1OihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Gb3VyS2V5TWFwPXQuVHdvS2V5TWFwPXZvaWQgMDtjbGFzcyBpe2NvbnN0cnVjdG9yKCl7dGhpcy5fZGF0YT17fX1zZXQoZSx0LGkpe3RoaXMuX2RhdGFbZV18fCh0aGlzLl9kYXRhW2VdPXt9KSx0aGlzLl9kYXRhW2VdW3RdPWl9Z2V0KGUsdCl7cmV0dXJuIHRoaXMuX2RhdGFbZV0/dGhpcy5fZGF0YVtlXVt0XTp2b2lkIDB9Y2xlYXIoKXt0aGlzLl9kYXRhPXt9fX10LlR3b0tleU1hcD1pLHQuRm91cktleU1hcD1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuX2RhdGE9bmV3IGl9c2V0KGUsdCxzLHIsbil7dGhpcy5fZGF0YS5nZXQoZSx0KXx8dGhpcy5fZGF0YS5zZXQoZSx0LG5ldyBpKSx0aGlzLl9kYXRhLmdldChlLHQpLnNldChzLHIsbil9Z2V0KGUsdCxpLHMpe3ZhciByO3JldHVybiBudWxsPT09KHI9dGhpcy5fZGF0YS5nZXQoZSx0KSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuZ2V0KGkscyl9Y2xlYXIoKXt0aGlzLl9kYXRhLmNsZWFyKCl9fX0sNjExNDooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuaXNMaW51eD10LmlzV2luZG93cz10LmlzSXBob25lPXQuaXNJcGFkPXQuaXNNYWM9dC5pc1NhZmFyaT10LmlzTGVnYWN5RWRnZT10LmlzRmlyZWZveD12b2lkIDA7Y29uc3QgaT1cInVuZGVmaW5lZFwiPT10eXBlb2YgbmF2aWdhdG9yLHM9aT9cIm5vZGVcIjpuYXZpZ2F0b3IudXNlckFnZW50LHI9aT9cIm5vZGVcIjpuYXZpZ2F0b3IucGxhdGZvcm07dC5pc0ZpcmVmb3g9cy5pbmNsdWRlcyhcIkZpcmVmb3hcIiksdC5pc0xlZ2FjeUVkZ2U9cy5pbmNsdWRlcyhcIkVkZ2VcIiksdC5pc1NhZmFyaT0vXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KHMpLHQuaXNNYWM9W1wiTWFjaW50b3NoXCIsXCJNYWNJbnRlbFwiLFwiTWFjUFBDXCIsXCJNYWM2OEtcIl0uaW5jbHVkZXMociksdC5pc0lwYWQ9XCJpUGFkXCI9PT1yLHQuaXNJcGhvbmU9XCJpUGhvbmVcIj09PXIsdC5pc1dpbmRvd3M9W1wiV2luZG93c1wiLFwiV2luMTZcIixcIldpbjMyXCIsXCJXaW5DRVwiXS5pbmNsdWRlcyhyKSx0LmlzTGludXg9ci5pbmRleE9mKFwiTGludXhcIik+PTB9LDYxMDY6KGUsdCk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlNvcnRlZExpc3Q9dm9pZCAwO2xldCBpPTA7dC5Tb3J0ZWRMaXN0PWNsYXNze2NvbnN0cnVjdG9yKGUpe3RoaXMuX2dldEtleT1lLHRoaXMuX2FycmF5PVtdfWNsZWFyKCl7dGhpcy5fYXJyYXkubGVuZ3RoPTB9aW5zZXJ0KGUpezAhPT10aGlzLl9hcnJheS5sZW5ndGg/KGk9dGhpcy5fc2VhcmNoKHRoaXMuX2dldEtleShlKSwwLHRoaXMuX2FycmF5Lmxlbmd0aC0xKSx0aGlzLl9hcnJheS5zcGxpY2UoaSwwLGUpKTp0aGlzLl9hcnJheS5wdXNoKGUpfWRlbGV0ZShlKXtpZigwPT09dGhpcy5fYXJyYXkubGVuZ3RoKXJldHVybiExO2NvbnN0IHQ9dGhpcy5fZ2V0S2V5KGUpO2lmKHZvaWQgMD09PXQpcmV0dXJuITE7aWYoaT10aGlzLl9zZWFyY2godCwwLHRoaXMuX2FycmF5Lmxlbmd0aC0xKSwtMT09PWkpcmV0dXJuITE7aWYodGhpcy5fZ2V0S2V5KHRoaXMuX2FycmF5W2ldKSE9PXQpcmV0dXJuITE7ZG97aWYodGhpcy5fYXJyYXlbaV09PT1lKXJldHVybiB0aGlzLl9hcnJheS5zcGxpY2UoaSwxKSwhMH13aGlsZSgrK2k8dGhpcy5fYXJyYXkubGVuZ3RoJiZ0aGlzLl9nZXRLZXkodGhpcy5fYXJyYXlbaV0pPT09dCk7cmV0dXJuITF9KmdldEtleUl0ZXJhdG9yKGUpe2lmKDAhPT10aGlzLl9hcnJheS5sZW5ndGgmJihpPXRoaXMuX3NlYXJjaChlLDAsdGhpcy5fYXJyYXkubGVuZ3RoLTEpLCEoaTwwfHxpPj10aGlzLl9hcnJheS5sZW5ndGgpJiZ0aGlzLl9nZXRLZXkodGhpcy5fYXJyYXlbaV0pPT09ZSkpZG97eWllbGQgdGhpcy5fYXJyYXlbaV19d2hpbGUoKytpPHRoaXMuX2FycmF5Lmxlbmd0aCYmdGhpcy5fZ2V0S2V5KHRoaXMuX2FycmF5W2ldKT09PWUpfWZvckVhY2hCeUtleShlLHQpe2lmKDAhPT10aGlzLl9hcnJheS5sZW5ndGgmJihpPXRoaXMuX3NlYXJjaChlLDAsdGhpcy5fYXJyYXkubGVuZ3RoLTEpLCEoaTwwfHxpPj10aGlzLl9hcnJheS5sZW5ndGgpJiZ0aGlzLl9nZXRLZXkodGhpcy5fYXJyYXlbaV0pPT09ZSkpZG97dCh0aGlzLl9hcnJheVtpXSl9d2hpbGUoKytpPHRoaXMuX2FycmF5Lmxlbmd0aCYmdGhpcy5fZ2V0S2V5KHRoaXMuX2FycmF5W2ldKT09PWUpfXZhbHVlcygpe3JldHVybiB0aGlzLl9hcnJheS52YWx1ZXMoKX1fc2VhcmNoKGUsdCxpKXtpZihpPHQpcmV0dXJuIHQ7bGV0IHM9TWF0aC5mbG9vcigodCtpKS8yKTtjb25zdCByPXRoaXMuX2dldEtleSh0aGlzLl9hcnJheVtzXSk7aWYocj5lKXJldHVybiB0aGlzLl9zZWFyY2goZSx0LHMtMSk7aWYocjxlKXJldHVybiB0aGlzLl9zZWFyY2goZSxzKzEsaSk7Zm9yKDtzPjAmJnRoaXMuX2dldEtleSh0aGlzLl9hcnJheVtzLTFdKT09PWU7KXMtLTtyZXR1cm4gc319fSw4MjczOihlLHQpPT57ZnVuY3Rpb24gaShlLHQsaT0wLHM9ZS5sZW5ndGgpe2lmKGk+PWUubGVuZ3RoKXJldHVybiBlO2k9KGUubGVuZ3RoK2kpJWUubGVuZ3RoLHM9cz49ZS5sZW5ndGg/ZS5sZW5ndGg6KGUubGVuZ3RoK3MpJWUubGVuZ3RoO2ZvcihsZXQgcj1pO3I8czsrK3IpZVtyXT10O3JldHVybiBlfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuY29uY2F0PXQuZmlsbEZhbGxiYWNrPXQuZmlsbD12b2lkIDAsdC5maWxsPWZ1bmN0aW9uKGUsdCxzLHIpe3JldHVybiBlLmZpbGw/ZS5maWxsKHQscyxyKTppKGUsdCxzLHIpfSx0LmZpbGxGYWxsYmFjaz1pLHQuY29uY2F0PWZ1bmN0aW9uKGUsdCl7Y29uc3QgaT1uZXcgZS5jb25zdHJ1Y3RvcihlLmxlbmd0aCt0Lmxlbmd0aCk7cmV0dXJuIGkuc2V0KGUpLGkuc2V0KHQsZS5sZW5ndGgpLGl9fSw5MjgyOihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LnVwZGF0ZVdpbmRvd3NNb2RlV3JhcHBlZFN0YXRlPXZvaWQgMDtjb25zdCBzPWkoNjQzKTt0LnVwZGF0ZVdpbmRvd3NNb2RlV3JhcHBlZFN0YXRlPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5idWZmZXIubGluZXMuZ2V0KGUuYnVmZmVyLnliYXNlK2UuYnVmZmVyLnktMSksaT1udWxsPT10P3ZvaWQgMDp0LmdldChlLmNvbHMtMSkscj1lLmJ1ZmZlci5saW5lcy5nZXQoZS5idWZmZXIueWJhc2UrZS5idWZmZXIueSk7ciYmaSYmKHIuaXNXcmFwcGVkPWlbcy5DSEFSX0RBVEFfQ09ERV9JTkRFWF0hPT1zLk5VTExfQ0VMTF9DT0RFJiZpW3MuQ0hBUl9EQVRBX0NPREVfSU5ERVhdIT09cy5XSElURVNQQUNFX0NFTExfQ09ERSl9fSwzNzM0OihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5FeHRlbmRlZEF0dHJzPXQuQXR0cmlidXRlRGF0YT12b2lkIDA7Y2xhc3MgaXtjb25zdHJ1Y3Rvcigpe3RoaXMuZmc9MCx0aGlzLmJnPTAsdGhpcy5leHRlbmRlZD1uZXcgc31zdGF0aWMgdG9Db2xvclJHQihlKXtyZXR1cm5bZT4+PjE2JjI1NSxlPj4+OCYyNTUsMjU1JmVdfXN0YXRpYyBmcm9tQ29sb3JSR0IoZSl7cmV0dXJuKDI1NSZlWzBdKTw8MTZ8KDI1NSZlWzFdKTw8OHwyNTUmZVsyXX1jbG9uZSgpe2NvbnN0IGU9bmV3IGk7cmV0dXJuIGUuZmc9dGhpcy5mZyxlLmJnPXRoaXMuYmcsZS5leHRlbmRlZD10aGlzLmV4dGVuZGVkLmNsb25lKCksZX1pc0ludmVyc2UoKXtyZXR1cm4gNjcxMDg4NjQmdGhpcy5mZ31pc0JvbGQoKXtyZXR1cm4gMTM0MjE3NzI4JnRoaXMuZmd9aXNVbmRlcmxpbmUoKXtyZXR1cm4gdGhpcy5oYXNFeHRlbmRlZEF0dHJzKCkmJjAhPT10aGlzLmV4dGVuZGVkLnVuZGVybGluZVN0eWxlPzE6MjY4NDM1NDU2JnRoaXMuZmd9aXNCbGluaygpe3JldHVybiA1MzY4NzA5MTImdGhpcy5mZ31pc0ludmlzaWJsZSgpe3JldHVybiAxMDczNzQxODI0JnRoaXMuZmd9aXNJdGFsaWMoKXtyZXR1cm4gNjcxMDg4NjQmdGhpcy5iZ31pc0RpbSgpe3JldHVybiAxMzQyMTc3MjgmdGhpcy5iZ31pc1N0cmlrZXRocm91Z2goKXtyZXR1cm4gMjE0NzQ4MzY0OCZ0aGlzLmZnfWlzUHJvdGVjdGVkKCl7cmV0dXJuIDUzNjg3MDkxMiZ0aGlzLmJnfWdldEZnQ29sb3JNb2RlKCl7cmV0dXJuIDUwMzMxNjQ4JnRoaXMuZmd9Z2V0QmdDb2xvck1vZGUoKXtyZXR1cm4gNTAzMzE2NDgmdGhpcy5iZ31pc0ZnUkdCKCl7cmV0dXJuIDUwMzMxNjQ4PT0oNTAzMzE2NDgmdGhpcy5mZyl9aXNCZ1JHQigpe3JldHVybiA1MDMzMTY0OD09KDUwMzMxNjQ4JnRoaXMuYmcpfWlzRmdQYWxldHRlKCl7cmV0dXJuIDE2Nzc3MjE2PT0oNTAzMzE2NDgmdGhpcy5mZyl8fDMzNTU0NDMyPT0oNTAzMzE2NDgmdGhpcy5mZyl9aXNCZ1BhbGV0dGUoKXtyZXR1cm4gMTY3NzcyMTY9PSg1MDMzMTY0OCZ0aGlzLmJnKXx8MzM1NTQ0MzI9PSg1MDMzMTY0OCZ0aGlzLmJnKX1pc0ZnRGVmYXVsdCgpe3JldHVybiAwPT0oNTAzMzE2NDgmdGhpcy5mZyl9aXNCZ0RlZmF1bHQoKXtyZXR1cm4gMD09KDUwMzMxNjQ4JnRoaXMuYmcpfWlzQXR0cmlidXRlRGVmYXVsdCgpe3JldHVybiAwPT09dGhpcy5mZyYmMD09PXRoaXMuYmd9Z2V0RmdDb2xvcigpe3N3aXRjaCg1MDMzMTY0OCZ0aGlzLmZnKXtjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6cmV0dXJuIDI1NSZ0aGlzLmZnO2Nhc2UgNTAzMzE2NDg6cmV0dXJuIDE2Nzc3MjE1JnRoaXMuZmc7ZGVmYXVsdDpyZXR1cm4tMX19Z2V0QmdDb2xvcigpe3N3aXRjaCg1MDMzMTY0OCZ0aGlzLmJnKXtjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6cmV0dXJuIDI1NSZ0aGlzLmJnO2Nhc2UgNTAzMzE2NDg6cmV0dXJuIDE2Nzc3MjE1JnRoaXMuYmc7ZGVmYXVsdDpyZXR1cm4tMX19aGFzRXh0ZW5kZWRBdHRycygpe3JldHVybiAyNjg0MzU0NTYmdGhpcy5iZ311cGRhdGVFeHRlbmRlZCgpe3RoaXMuZXh0ZW5kZWQuaXNFbXB0eSgpP3RoaXMuYmcmPS0yNjg0MzU0NTc6dGhpcy5iZ3w9MjY4NDM1NDU2fWdldFVuZGVybGluZUNvbG9yKCl7aWYoMjY4NDM1NDU2JnRoaXMuYmcmJn50aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yKXN3aXRjaCg1MDMzMTY0OCZ0aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yKXtjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6cmV0dXJuIDI1NSZ0aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yO2Nhc2UgNTAzMzE2NDg6cmV0dXJuIDE2Nzc3MjE1JnRoaXMuZXh0ZW5kZWQudW5kZXJsaW5lQ29sb3I7ZGVmYXVsdDpyZXR1cm4gdGhpcy5nZXRGZ0NvbG9yKCl9cmV0dXJuIHRoaXMuZ2V0RmdDb2xvcigpfWdldFVuZGVybGluZUNvbG9yTW9kZSgpe3JldHVybiAyNjg0MzU0NTYmdGhpcy5iZyYmfnRoaXMuZXh0ZW5kZWQudW5kZXJsaW5lQ29sb3I/NTAzMzE2NDgmdGhpcy5leHRlbmRlZC51bmRlcmxpbmVDb2xvcjp0aGlzLmdldEZnQ29sb3JNb2RlKCl9aXNVbmRlcmxpbmVDb2xvclJHQigpe3JldHVybiAyNjg0MzU0NTYmdGhpcy5iZyYmfnRoaXMuZXh0ZW5kZWQudW5kZXJsaW5lQ29sb3I/NTAzMzE2NDg9PSg1MDMzMTY0OCZ0aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yKTp0aGlzLmlzRmdSR0IoKX1pc1VuZGVybGluZUNvbG9yUGFsZXR0ZSgpe3JldHVybiAyNjg0MzU0NTYmdGhpcy5iZyYmfnRoaXMuZXh0ZW5kZWQudW5kZXJsaW5lQ29sb3I/MTY3NzcyMTY9PSg1MDMzMTY0OCZ0aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yKXx8MzM1NTQ0MzI9PSg1MDMzMTY0OCZ0aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yKTp0aGlzLmlzRmdQYWxldHRlKCl9aXNVbmRlcmxpbmVDb2xvckRlZmF1bHQoKXtyZXR1cm4gMjY4NDM1NDU2JnRoaXMuYmcmJn50aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yPzA9PSg1MDMzMTY0OCZ0aGlzLmV4dGVuZGVkLnVuZGVybGluZUNvbG9yKTp0aGlzLmlzRmdEZWZhdWx0KCl9Z2V0VW5kZXJsaW5lU3R5bGUoKXtyZXR1cm4gMjY4NDM1NDU2JnRoaXMuZmc/MjY4NDM1NDU2JnRoaXMuYmc/dGhpcy5leHRlbmRlZC51bmRlcmxpbmVTdHlsZToxOjB9fXQuQXR0cmlidXRlRGF0YT1pO2NsYXNzIHN7Y29uc3RydWN0b3IoZT0wLHQ9MCl7dGhpcy5fZXh0PTAsdGhpcy5fdXJsSWQ9MCx0aGlzLl9leHQ9ZSx0aGlzLl91cmxJZD10fWdldCBleHQoKXtyZXR1cm4gdGhpcy5fdXJsSWQ/LTQ2OTc2MjA0OSZ0aGlzLl9leHR8dGhpcy51bmRlcmxpbmVTdHlsZTw8MjY6dGhpcy5fZXh0fXNldCBleHQoZSl7dGhpcy5fZXh0PWV9Z2V0IHVuZGVybGluZVN0eWxlKCl7cmV0dXJuIHRoaXMuX3VybElkPzU6KDQ2OTc2MjA0OCZ0aGlzLl9leHQpPj4yNn1zZXQgdW5kZXJsaW5lU3R5bGUoZSl7dGhpcy5fZXh0Jj0tNDY5NzYyMDQ5LHRoaXMuX2V4dHw9ZTw8MjYmNDY5NzYyMDQ4fWdldCB1bmRlcmxpbmVDb2xvcigpe3JldHVybiA2NzEwODg2MyZ0aGlzLl9leHR9c2V0IHVuZGVybGluZUNvbG9yKGUpe3RoaXMuX2V4dCY9LTY3MTA4ODY0LHRoaXMuX2V4dHw9NjcxMDg4NjMmZX1nZXQgdXJsSWQoKXtyZXR1cm4gdGhpcy5fdXJsSWR9c2V0IHVybElkKGUpe3RoaXMuX3VybElkPWV9Y2xvbmUoKXtyZXR1cm4gbmV3IHModGhpcy5fZXh0LHRoaXMuX3VybElkKX1pc0VtcHR5KCl7cmV0dXJuIDA9PT10aGlzLnVuZGVybGluZVN0eWxlJiYwPT09dGhpcy5fdXJsSWR9fXQuRXh0ZW5kZWRBdHRycz1zfSw5MDkyOihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJ1ZmZlclN0cmluZ0l0ZXJhdG9yPXQuQnVmZmVyPXQuTUFYX0JVRkZFUl9TSVpFPXZvaWQgMDtjb25zdCBzPWkoNjM0OSkscj1pKDg0MzcpLG49aSg1MTEpLG89aSg2NDMpLGE9aSg0NjM0KSxoPWkoNDg2MyksYz1pKDcxMTYpLGw9aSgzNzM0KTt0Lk1BWF9CVUZGRVJfU0laRT00Mjk0OTY3Mjk1LHQuQnVmZmVyPWNsYXNze2NvbnN0cnVjdG9yKGUsdCxpKXt0aGlzLl9oYXNTY3JvbGxiYWNrPWUsdGhpcy5fb3B0aW9uc1NlcnZpY2U9dCx0aGlzLl9idWZmZXJTZXJ2aWNlPWksdGhpcy55ZGlzcD0wLHRoaXMueWJhc2U9MCx0aGlzLnk9MCx0aGlzLng9MCx0aGlzLnNhdmVkWT0wLHRoaXMuc2F2ZWRYPTAsdGhpcy5zYXZlZEN1ckF0dHJEYXRhPXIuREVGQVVMVF9BVFRSX0RBVEEuY2xvbmUoKSx0aGlzLnNhdmVkQ2hhcnNldD1jLkRFRkFVTFRfQ0hBUlNFVCx0aGlzLm1hcmtlcnM9W10sdGhpcy5fbnVsbENlbGw9bi5DZWxsRGF0YS5mcm9tQ2hhckRhdGEoWzAsby5OVUxMX0NFTExfQ0hBUixvLk5VTExfQ0VMTF9XSURUSCxvLk5VTExfQ0VMTF9DT0RFXSksdGhpcy5fd2hpdGVzcGFjZUNlbGw9bi5DZWxsRGF0YS5mcm9tQ2hhckRhdGEoWzAsby5XSElURVNQQUNFX0NFTExfQ0hBUixvLldISVRFU1BBQ0VfQ0VMTF9XSURUSCxvLldISVRFU1BBQ0VfQ0VMTF9DT0RFXSksdGhpcy5faXNDbGVhcmluZz0hMSx0aGlzLl9jb2xzPXRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyx0aGlzLl9yb3dzPXRoaXMuX2J1ZmZlclNlcnZpY2Uucm93cyx0aGlzLmxpbmVzPW5ldyBzLkNpcmN1bGFyTGlzdCh0aGlzLl9nZXRDb3JyZWN0QnVmZmVyTGVuZ3RoKHRoaXMuX3Jvd3MpKSx0aGlzLnNjcm9sbFRvcD0wLHRoaXMuc2Nyb2xsQm90dG9tPXRoaXMuX3Jvd3MtMSx0aGlzLnNldHVwVGFiU3RvcHMoKX1nZXROdWxsQ2VsbChlKXtyZXR1cm4gZT8odGhpcy5fbnVsbENlbGwuZmc9ZS5mZyx0aGlzLl9udWxsQ2VsbC5iZz1lLmJnLHRoaXMuX251bGxDZWxsLmV4dGVuZGVkPWUuZXh0ZW5kZWQpOih0aGlzLl9udWxsQ2VsbC5mZz0wLHRoaXMuX251bGxDZWxsLmJnPTAsdGhpcy5fbnVsbENlbGwuZXh0ZW5kZWQ9bmV3IGwuRXh0ZW5kZWRBdHRycyksdGhpcy5fbnVsbENlbGx9Z2V0V2hpdGVzcGFjZUNlbGwoZSl7cmV0dXJuIGU/KHRoaXMuX3doaXRlc3BhY2VDZWxsLmZnPWUuZmcsdGhpcy5fd2hpdGVzcGFjZUNlbGwuYmc9ZS5iZyx0aGlzLl93aGl0ZXNwYWNlQ2VsbC5leHRlbmRlZD1lLmV4dGVuZGVkKToodGhpcy5fd2hpdGVzcGFjZUNlbGwuZmc9MCx0aGlzLl93aGl0ZXNwYWNlQ2VsbC5iZz0wLHRoaXMuX3doaXRlc3BhY2VDZWxsLmV4dGVuZGVkPW5ldyBsLkV4dGVuZGVkQXR0cnMpLHRoaXMuX3doaXRlc3BhY2VDZWxsfWdldEJsYW5rTGluZShlLHQpe3JldHVybiBuZXcgci5CdWZmZXJMaW5lKHRoaXMuX2J1ZmZlclNlcnZpY2UuY29scyx0aGlzLmdldE51bGxDZWxsKGUpLHQpfWdldCBoYXNTY3JvbGxiYWNrKCl7cmV0dXJuIHRoaXMuX2hhc1Njcm9sbGJhY2smJnRoaXMubGluZXMubWF4TGVuZ3RoPnRoaXMuX3Jvd3N9Z2V0IGlzQ3Vyc29ySW5WaWV3cG9ydCgpe2NvbnN0IGU9dGhpcy55YmFzZSt0aGlzLnktdGhpcy55ZGlzcDtyZXR1cm4gZT49MCYmZTx0aGlzLl9yb3dzfV9nZXRDb3JyZWN0QnVmZmVyTGVuZ3RoKGUpe2lmKCF0aGlzLl9oYXNTY3JvbGxiYWNrKXJldHVybiBlO2NvbnN0IGk9ZSt0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLnNjcm9sbGJhY2s7cmV0dXJuIGk+dC5NQVhfQlVGRkVSX1NJWkU/dC5NQVhfQlVGRkVSX1NJWkU6aX1maWxsVmlld3BvcnRSb3dzKGUpe2lmKDA9PT10aGlzLmxpbmVzLmxlbmd0aCl7dm9pZCAwPT09ZSYmKGU9ci5ERUZBVUxUX0FUVFJfREFUQSk7bGV0IHQ9dGhpcy5fcm93cztmb3IoO3QtLTspdGhpcy5saW5lcy5wdXNoKHRoaXMuZ2V0QmxhbmtMaW5lKGUpKX19Y2xlYXIoKXt0aGlzLnlkaXNwPTAsdGhpcy55YmFzZT0wLHRoaXMueT0wLHRoaXMueD0wLHRoaXMubGluZXM9bmV3IHMuQ2lyY3VsYXJMaXN0KHRoaXMuX2dldENvcnJlY3RCdWZmZXJMZW5ndGgodGhpcy5fcm93cykpLHRoaXMuc2Nyb2xsVG9wPTAsdGhpcy5zY3JvbGxCb3R0b209dGhpcy5fcm93cy0xLHRoaXMuc2V0dXBUYWJTdG9wcygpfXJlc2l6ZShlLHQpe2NvbnN0IGk9dGhpcy5nZXROdWxsQ2VsbChyLkRFRkFVTFRfQVRUUl9EQVRBKSxzPXRoaXMuX2dldENvcnJlY3RCdWZmZXJMZW5ndGgodCk7aWYocz50aGlzLmxpbmVzLm1heExlbmd0aCYmKHRoaXMubGluZXMubWF4TGVuZ3RoPXMpLHRoaXMubGluZXMubGVuZ3RoPjApe2lmKHRoaXMuX2NvbHM8ZSlmb3IobGV0IHQ9MDt0PHRoaXMubGluZXMubGVuZ3RoO3QrKyl0aGlzLmxpbmVzLmdldCh0KS5yZXNpemUoZSxpKTtsZXQgbj0wO2lmKHRoaXMuX3Jvd3M8dClmb3IobGV0IHM9dGhpcy5fcm93cztzPHQ7cysrKXRoaXMubGluZXMubGVuZ3RoPHQrdGhpcy55YmFzZSYmKHRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMud2luZG93c01vZGU/dGhpcy5saW5lcy5wdXNoKG5ldyByLkJ1ZmZlckxpbmUoZSxpKSk6dGhpcy55YmFzZT4wJiZ0aGlzLmxpbmVzLmxlbmd0aDw9dGhpcy55YmFzZSt0aGlzLnkrbisxPyh0aGlzLnliYXNlLS0sbisrLHRoaXMueWRpc3A+MCYmdGhpcy55ZGlzcC0tKTp0aGlzLmxpbmVzLnB1c2gobmV3IHIuQnVmZmVyTGluZShlLGkpKSk7ZWxzZSBmb3IobGV0IGU9dGhpcy5fcm93cztlPnQ7ZS0tKXRoaXMubGluZXMubGVuZ3RoPnQrdGhpcy55YmFzZSYmKHRoaXMubGluZXMubGVuZ3RoPnRoaXMueWJhc2UrdGhpcy55KzE/dGhpcy5saW5lcy5wb3AoKToodGhpcy55YmFzZSsrLHRoaXMueWRpc3ArKykpO2lmKHM8dGhpcy5saW5lcy5tYXhMZW5ndGgpe2NvbnN0IGU9dGhpcy5saW5lcy5sZW5ndGgtcztlPjAmJih0aGlzLmxpbmVzLnRyaW1TdGFydChlKSx0aGlzLnliYXNlPU1hdGgubWF4KHRoaXMueWJhc2UtZSwwKSx0aGlzLnlkaXNwPU1hdGgubWF4KHRoaXMueWRpc3AtZSwwKSx0aGlzLnNhdmVkWT1NYXRoLm1heCh0aGlzLnNhdmVkWS1lLDApKSx0aGlzLmxpbmVzLm1heExlbmd0aD1zfXRoaXMueD1NYXRoLm1pbih0aGlzLngsZS0xKSx0aGlzLnk9TWF0aC5taW4odGhpcy55LHQtMSksbiYmKHRoaXMueSs9biksdGhpcy5zYXZlZFg9TWF0aC5taW4odGhpcy5zYXZlZFgsZS0xKSx0aGlzLnNjcm9sbFRvcD0wfWlmKHRoaXMuc2Nyb2xsQm90dG9tPXQtMSx0aGlzLl9pc1JlZmxvd0VuYWJsZWQmJih0aGlzLl9yZWZsb3coZSx0KSx0aGlzLl9jb2xzPmUpKWZvcihsZXQgdD0wO3Q8dGhpcy5saW5lcy5sZW5ndGg7dCsrKXRoaXMubGluZXMuZ2V0KHQpLnJlc2l6ZShlLGkpO3RoaXMuX2NvbHM9ZSx0aGlzLl9yb3dzPXR9Z2V0IF9pc1JlZmxvd0VuYWJsZWQoKXtyZXR1cm4gdGhpcy5faGFzU2Nyb2xsYmFjayYmIXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMud2luZG93c01vZGV9X3JlZmxvdyhlLHQpe3RoaXMuX2NvbHMhPT1lJiYoZT50aGlzLl9jb2xzP3RoaXMuX3JlZmxvd0xhcmdlcihlLHQpOnRoaXMuX3JlZmxvd1NtYWxsZXIoZSx0KSl9X3JlZmxvd0xhcmdlcihlLHQpe2NvbnN0IGk9KDAsYS5yZWZsb3dMYXJnZXJHZXRMaW5lc1RvUmVtb3ZlKSh0aGlzLmxpbmVzLHRoaXMuX2NvbHMsZSx0aGlzLnliYXNlK3RoaXMueSx0aGlzLmdldE51bGxDZWxsKHIuREVGQVVMVF9BVFRSX0RBVEEpKTtpZihpLmxlbmd0aD4wKXtjb25zdCBzPSgwLGEucmVmbG93TGFyZ2VyQ3JlYXRlTmV3TGF5b3V0KSh0aGlzLmxpbmVzLGkpOygwLGEucmVmbG93TGFyZ2VyQXBwbHlOZXdMYXlvdXQpKHRoaXMubGluZXMscy5sYXlvdXQpLHRoaXMuX3JlZmxvd0xhcmdlckFkanVzdFZpZXdwb3J0KGUsdCxzLmNvdW50UmVtb3ZlZCl9fV9yZWZsb3dMYXJnZXJBZGp1c3RWaWV3cG9ydChlLHQsaSl7Y29uc3Qgcz10aGlzLmdldE51bGxDZWxsKHIuREVGQVVMVF9BVFRSX0RBVEEpO2xldCBuPWk7Zm9yKDtuLS0gPjA7KTA9PT10aGlzLnliYXNlPyh0aGlzLnk+MCYmdGhpcy55LS0sdGhpcy5saW5lcy5sZW5ndGg8dCYmdGhpcy5saW5lcy5wdXNoKG5ldyByLkJ1ZmZlckxpbmUoZSxzKSkpOih0aGlzLnlkaXNwPT09dGhpcy55YmFzZSYmdGhpcy55ZGlzcC0tLHRoaXMueWJhc2UtLSk7dGhpcy5zYXZlZFk9TWF0aC5tYXgodGhpcy5zYXZlZFktaSwwKX1fcmVmbG93U21hbGxlcihlLHQpe2NvbnN0IGk9dGhpcy5nZXROdWxsQ2VsbChyLkRFRkFVTFRfQVRUUl9EQVRBKSxzPVtdO2xldCBuPTA7Zm9yKGxldCBvPXRoaXMubGluZXMubGVuZ3RoLTE7bz49MDtvLS0pe2xldCBoPXRoaXMubGluZXMuZ2V0KG8pO2lmKCFofHwhaC5pc1dyYXBwZWQmJmguZ2V0VHJpbW1lZExlbmd0aCgpPD1lKWNvbnRpbnVlO2NvbnN0IGM9W2hdO2Zvcig7aC5pc1dyYXBwZWQmJm8+MDspaD10aGlzLmxpbmVzLmdldCgtLW8pLGMudW5zaGlmdChoKTtjb25zdCBsPXRoaXMueWJhc2UrdGhpcy55O2lmKGw+PW8mJmw8bytjLmxlbmd0aCljb250aW51ZTtjb25zdCBkPWNbYy5sZW5ndGgtMV0uZ2V0VHJpbW1lZExlbmd0aCgpLF89KDAsYS5yZWZsb3dTbWFsbGVyR2V0TmV3TGluZUxlbmd0aHMpKGMsdGhpcy5fY29scyxlKSx1PV8ubGVuZ3RoLWMubGVuZ3RoO2xldCBmO2Y9MD09PXRoaXMueWJhc2UmJnRoaXMueSE9PXRoaXMubGluZXMubGVuZ3RoLTE/TWF0aC5tYXgoMCx0aGlzLnktdGhpcy5saW5lcy5tYXhMZW5ndGgrdSk6TWF0aC5tYXgoMCx0aGlzLmxpbmVzLmxlbmd0aC10aGlzLmxpbmVzLm1heExlbmd0aCt1KTtjb25zdCB2PVtdO2ZvcihsZXQgZT0wO2U8dTtlKyspe2NvbnN0IGU9dGhpcy5nZXRCbGFua0xpbmUoci5ERUZBVUxUX0FUVFJfREFUQSwhMCk7di5wdXNoKGUpfXYubGVuZ3RoPjAmJihzLnB1c2goe3N0YXJ0Om8rYy5sZW5ndGgrbixuZXdMaW5lczp2fSksbis9di5sZW5ndGgpLGMucHVzaCguLi52KTtsZXQgZz1fLmxlbmd0aC0xLHA9X1tnXTswPT09cCYmKGctLSxwPV9bZ10pO2xldCBTPWMubGVuZ3RoLXUtMSxtPWQ7Zm9yKDtTPj0wOyl7Y29uc3QgZT1NYXRoLm1pbihtLHApO2lmKHZvaWQgMD09PWNbZ10pYnJlYWs7aWYoY1tnXS5jb3B5Q2VsbHNGcm9tKGNbU10sbS1lLHAtZSxlLCEwKSxwLT1lLDA9PT1wJiYoZy0tLHA9X1tnXSksbS09ZSwwPT09bSl7Uy0tO2NvbnN0IGU9TWF0aC5tYXgoUywwKTttPSgwLGEuZ2V0V3JhcHBlZExpbmVUcmltbWVkTGVuZ3RoKShjLGUsdGhpcy5fY29scyl9fWZvcihsZXQgdD0wO3Q8Yy5sZW5ndGg7dCsrKV9bdF08ZSYmY1t0XS5zZXRDZWxsKF9bdF0saSk7bGV0IEM9dS1mO2Zvcig7Qy0tID4wOykwPT09dGhpcy55YmFzZT90aGlzLnk8dC0xPyh0aGlzLnkrKyx0aGlzLmxpbmVzLnBvcCgpKToodGhpcy55YmFzZSsrLHRoaXMueWRpc3ArKyk6dGhpcy55YmFzZTxNYXRoLm1pbih0aGlzLmxpbmVzLm1heExlbmd0aCx0aGlzLmxpbmVzLmxlbmd0aCtuKS10JiYodGhpcy55YmFzZT09PXRoaXMueWRpc3AmJnRoaXMueWRpc3ArKyx0aGlzLnliYXNlKyspO3RoaXMuc2F2ZWRZPU1hdGgubWluKHRoaXMuc2F2ZWRZK3UsdGhpcy55YmFzZSt0LTEpfWlmKHMubGVuZ3RoPjApe2NvbnN0IGU9W10sdD1bXTtmb3IobGV0IGU9MDtlPHRoaXMubGluZXMubGVuZ3RoO2UrKyl0LnB1c2godGhpcy5saW5lcy5nZXQoZSkpO2NvbnN0IGk9dGhpcy5saW5lcy5sZW5ndGg7bGV0IHI9aS0xLG89MCxhPXNbb107dGhpcy5saW5lcy5sZW5ndGg9TWF0aC5taW4odGhpcy5saW5lcy5tYXhMZW5ndGgsdGhpcy5saW5lcy5sZW5ndGgrbik7bGV0IGg9MDtmb3IobGV0IGM9TWF0aC5taW4odGhpcy5saW5lcy5tYXhMZW5ndGgtMSxpK24tMSk7Yz49MDtjLS0paWYoYSYmYS5zdGFydD5yK2gpe2ZvcihsZXQgZT1hLm5ld0xpbmVzLmxlbmd0aC0xO2U+PTA7ZS0tKXRoaXMubGluZXMuc2V0KGMtLSxhLm5ld0xpbmVzW2VdKTtjKyssZS5wdXNoKHtpbmRleDpyKzEsYW1vdW50OmEubmV3TGluZXMubGVuZ3RofSksaCs9YS5uZXdMaW5lcy5sZW5ndGgsYT1zWysrb119ZWxzZSB0aGlzLmxpbmVzLnNldChjLHRbci0tXSk7bGV0IGM9MDtmb3IobGV0IHQ9ZS5sZW5ndGgtMTt0Pj0wO3QtLSllW3RdLmluZGV4Kz1jLHRoaXMubGluZXMub25JbnNlcnRFbWl0dGVyLmZpcmUoZVt0XSksYys9ZVt0XS5hbW91bnQ7Y29uc3QgbD1NYXRoLm1heCgwLGkrbi10aGlzLmxpbmVzLm1heExlbmd0aCk7bD4wJiZ0aGlzLmxpbmVzLm9uVHJpbUVtaXR0ZXIuZmlyZShsKX19c3RyaW5nSW5kZXhUb0J1ZmZlckluZGV4KGUsdCxpPSExKXtmb3IoO3Q7KXtjb25zdCBzPXRoaXMubGluZXMuZ2V0KGUpO2lmKCFzKXJldHVyblstMSwtMV07Y29uc3Qgcj1pP3MuZ2V0VHJpbW1lZExlbmd0aCgpOnMubGVuZ3RoO2ZvcihsZXQgaT0wO2k8cjsrK2kpaWYocy5nZXQoaSlbby5DSEFSX0RBVEFfV0lEVEhfSU5ERVhdJiYodC09cy5nZXQoaSlbby5DSEFSX0RBVEFfQ0hBUl9JTkRFWF0ubGVuZ3RofHwxKSx0PDApcmV0dXJuW2UsaV07ZSsrfXJldHVybltlLDBdfXRyYW5zbGF0ZUJ1ZmZlckxpbmVUb1N0cmluZyhlLHQsaT0wLHMpe2NvbnN0IHI9dGhpcy5saW5lcy5nZXQoZSk7cmV0dXJuIHI/ci50cmFuc2xhdGVUb1N0cmluZyh0LGkscyk6XCJcIn1nZXRXcmFwcGVkUmFuZ2VGb3JMaW5lKGUpe2xldCB0PWUsaT1lO2Zvcig7dD4wJiZ0aGlzLmxpbmVzLmdldCh0KS5pc1dyYXBwZWQ7KXQtLTtmb3IoO2krMTx0aGlzLmxpbmVzLmxlbmd0aCYmdGhpcy5saW5lcy5nZXQoaSsxKS5pc1dyYXBwZWQ7KWkrKztyZXR1cm57Zmlyc3Q6dCxsYXN0Oml9fXNldHVwVGFiU3RvcHMoZSl7Zm9yKG51bGwhPWU/dGhpcy50YWJzW2VdfHwoZT10aGlzLnByZXZTdG9wKGUpKToodGhpcy50YWJzPXt9LGU9MCk7ZTx0aGlzLl9jb2xzO2UrPXRoaXMuX29wdGlvbnNTZXJ2aWNlLnJhd09wdGlvbnMudGFiU3RvcFdpZHRoKXRoaXMudGFic1tlXT0hMH1wcmV2U3RvcChlKXtmb3IobnVsbD09ZSYmKGU9dGhpcy54KTshdGhpcy50YWJzWy0tZV0mJmU+MDspO3JldHVybiBlPj10aGlzLl9jb2xzP3RoaXMuX2NvbHMtMTplPDA/MDplfW5leHRTdG9wKGUpe2ZvcihudWxsPT1lJiYoZT10aGlzLngpOyF0aGlzLnRhYnNbKytlXSYmZTx0aGlzLl9jb2xzOyk7cmV0dXJuIGU+PXRoaXMuX2NvbHM/dGhpcy5fY29scy0xOmU8MD8wOmV9Y2xlYXJNYXJrZXJzKGUpe3RoaXMuX2lzQ2xlYXJpbmc9ITA7Zm9yKGxldCB0PTA7dDx0aGlzLm1hcmtlcnMubGVuZ3RoO3QrKyl0aGlzLm1hcmtlcnNbdF0ubGluZT09PWUmJih0aGlzLm1hcmtlcnNbdF0uZGlzcG9zZSgpLHRoaXMubWFya2Vycy5zcGxpY2UodC0tLDEpKTt0aGlzLl9pc0NsZWFyaW5nPSExfWNsZWFyQWxsTWFya2Vycygpe3RoaXMuX2lzQ2xlYXJpbmc9ITA7Zm9yKGxldCBlPTA7ZTx0aGlzLm1hcmtlcnMubGVuZ3RoO2UrKyl0aGlzLm1hcmtlcnNbZV0uZGlzcG9zZSgpLHRoaXMubWFya2Vycy5zcGxpY2UoZS0tLDEpO3RoaXMuX2lzQ2xlYXJpbmc9ITF9YWRkTWFya2VyKGUpe2NvbnN0IHQ9bmV3IGguTWFya2VyKGUpO3JldHVybiB0aGlzLm1hcmtlcnMucHVzaCh0KSx0LnJlZ2lzdGVyKHRoaXMubGluZXMub25UcmltKChlPT57dC5saW5lLT1lLHQubGluZTwwJiZ0LmRpc3Bvc2UoKX0pKSksdC5yZWdpc3Rlcih0aGlzLmxpbmVzLm9uSW5zZXJ0KChlPT57dC5saW5lPj1lLmluZGV4JiYodC5saW5lKz1lLmFtb3VudCl9KSkpLHQucmVnaXN0ZXIodGhpcy5saW5lcy5vbkRlbGV0ZSgoZT0+e3QubGluZT49ZS5pbmRleCYmdC5saW5lPGUuaW5kZXgrZS5hbW91bnQmJnQuZGlzcG9zZSgpLHQubGluZT5lLmluZGV4JiYodC5saW5lLT1lLmFtb3VudCl9KSkpLHQucmVnaXN0ZXIodC5vbkRpc3Bvc2UoKCgpPT50aGlzLl9yZW1vdmVNYXJrZXIodCkpKSksdH1fcmVtb3ZlTWFya2VyKGUpe3RoaXMuX2lzQ2xlYXJpbmd8fHRoaXMubWFya2Vycy5zcGxpY2UodGhpcy5tYXJrZXJzLmluZGV4T2YoZSksMSl9aXRlcmF0b3IoZSx0LGkscyxyKXtyZXR1cm4gbmV3IGQodGhpcyxlLHQsaSxzLHIpfX07Y2xhc3MgZHtjb25zdHJ1Y3RvcihlLHQsaT0wLHM9ZS5saW5lcy5sZW5ndGgscj0wLG49MCl7dGhpcy5fYnVmZmVyPWUsdGhpcy5fdHJpbVJpZ2h0PXQsdGhpcy5fc3RhcnRJbmRleD1pLHRoaXMuX2VuZEluZGV4PXMsdGhpcy5fc3RhcnRPdmVyc2Nhbj1yLHRoaXMuX2VuZE92ZXJzY2FuPW4sdGhpcy5fc3RhcnRJbmRleDwwJiYodGhpcy5fc3RhcnRJbmRleD0wKSx0aGlzLl9lbmRJbmRleD50aGlzLl9idWZmZXIubGluZXMubGVuZ3RoJiYodGhpcy5fZW5kSW5kZXg9dGhpcy5fYnVmZmVyLmxpbmVzLmxlbmd0aCksdGhpcy5fY3VycmVudD10aGlzLl9zdGFydEluZGV4fWhhc05leHQoKXtyZXR1cm4gdGhpcy5fY3VycmVudDx0aGlzLl9lbmRJbmRleH1uZXh0KCl7Y29uc3QgZT10aGlzLl9idWZmZXIuZ2V0V3JhcHBlZFJhbmdlRm9yTGluZSh0aGlzLl9jdXJyZW50KTtlLmZpcnN0PHRoaXMuX3N0YXJ0SW5kZXgtdGhpcy5fc3RhcnRPdmVyc2NhbiYmKGUuZmlyc3Q9dGhpcy5fc3RhcnRJbmRleC10aGlzLl9zdGFydE92ZXJzY2FuKSxlLmxhc3Q+dGhpcy5fZW5kSW5kZXgrdGhpcy5fZW5kT3ZlcnNjYW4mJihlLmxhc3Q9dGhpcy5fZW5kSW5kZXgrdGhpcy5fZW5kT3ZlcnNjYW4pLGUuZmlyc3Q9TWF0aC5tYXgoZS5maXJzdCwwKSxlLmxhc3Q9TWF0aC5taW4oZS5sYXN0LHRoaXMuX2J1ZmZlci5saW5lcy5sZW5ndGgpO2xldCB0PVwiXCI7Zm9yKGxldCBpPWUuZmlyc3Q7aTw9ZS5sYXN0OysraSl0Kz10aGlzLl9idWZmZXIudHJhbnNsYXRlQnVmZmVyTGluZVRvU3RyaW5nKGksdGhpcy5fdHJpbVJpZ2h0KTtyZXR1cm4gdGhpcy5fY3VycmVudD1lLmxhc3QrMSx7cmFuZ2U6ZSxjb250ZW50OnR9fX10LkJ1ZmZlclN0cmluZ0l0ZXJhdG9yPWR9LDg0Mzc6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQnVmZmVyTGluZT10LkRFRkFVTFRfQVRUUl9EQVRBPXZvaWQgMDtjb25zdCBzPWkoNDgyKSxyPWkoNjQzKSxuPWkoNTExKSxvPWkoMzczNCk7dC5ERUZBVUxUX0FUVFJfREFUQT1PYmplY3QuZnJlZXplKG5ldyBvLkF0dHJpYnV0ZURhdGEpO2NvbnN0IGE9e3N0YXJ0SW5kZXg6MH07Y2xhc3MgaHtjb25zdHJ1Y3RvcihlLHQsaT0hMSl7dGhpcy5pc1dyYXBwZWQ9aSx0aGlzLl9jb21iaW5lZD17fSx0aGlzLl9leHRlbmRlZEF0dHJzPXt9LHRoaXMuX2RhdGE9bmV3IFVpbnQzMkFycmF5KDMqZSk7Y29uc3Qgcz10fHxuLkNlbGxEYXRhLmZyb21DaGFyRGF0YShbMCxyLk5VTExfQ0VMTF9DSEFSLHIuTlVMTF9DRUxMX1dJRFRILHIuTlVMTF9DRUxMX0NPREVdKTtmb3IobGV0IHQ9MDt0PGU7Kyt0KXRoaXMuc2V0Q2VsbCh0LHMpO3RoaXMubGVuZ3RoPWV9Z2V0KGUpe2NvbnN0IHQ9dGhpcy5fZGF0YVszKmUrMF0saT0yMDk3MTUxJnQ7cmV0dXJuW3RoaXMuX2RhdGFbMyplKzFdLDIwOTcxNTImdD90aGlzLl9jb21iaW5lZFtlXTppPygwLHMuc3RyaW5nRnJvbUNvZGVQb2ludCkoaSk6XCJcIix0Pj4yMiwyMDk3MTUyJnQ/dGhpcy5fY29tYmluZWRbZV0uY2hhckNvZGVBdCh0aGlzLl9jb21iaW5lZFtlXS5sZW5ndGgtMSk6aV19c2V0KGUsdCl7dGhpcy5fZGF0YVszKmUrMV09dFtyLkNIQVJfREFUQV9BVFRSX0lOREVYXSx0W3IuQ0hBUl9EQVRBX0NIQVJfSU5ERVhdLmxlbmd0aD4xPyh0aGlzLl9jb21iaW5lZFtlXT10WzFdLHRoaXMuX2RhdGFbMyplKzBdPTIwOTcxNTJ8ZXx0W3IuQ0hBUl9EQVRBX1dJRFRIX0lOREVYXTw8MjIpOnRoaXMuX2RhdGFbMyplKzBdPXRbci5DSEFSX0RBVEFfQ0hBUl9JTkRFWF0uY2hhckNvZGVBdCgwKXx0W3IuQ0hBUl9EQVRBX1dJRFRIX0lOREVYXTw8MjJ9Z2V0V2lkdGgoZSl7cmV0dXJuIHRoaXMuX2RhdGFbMyplKzBdPj4yMn1oYXNXaWR0aChlKXtyZXR1cm4gMTI1ODI5MTImdGhpcy5fZGF0YVszKmUrMF19Z2V0RmcoZSl7cmV0dXJuIHRoaXMuX2RhdGFbMyplKzFdfWdldEJnKGUpe3JldHVybiB0aGlzLl9kYXRhWzMqZSsyXX1oYXNDb250ZW50KGUpe3JldHVybiA0MTk0MzAzJnRoaXMuX2RhdGFbMyplKzBdfWdldENvZGVQb2ludChlKXtjb25zdCB0PXRoaXMuX2RhdGFbMyplKzBdO3JldHVybiAyMDk3MTUyJnQ/dGhpcy5fY29tYmluZWRbZV0uY2hhckNvZGVBdCh0aGlzLl9jb21iaW5lZFtlXS5sZW5ndGgtMSk6MjA5NzE1MSZ0fWlzQ29tYmluZWQoZSl7cmV0dXJuIDIwOTcxNTImdGhpcy5fZGF0YVszKmUrMF19Z2V0U3RyaW5nKGUpe2NvbnN0IHQ9dGhpcy5fZGF0YVszKmUrMF07cmV0dXJuIDIwOTcxNTImdD90aGlzLl9jb21iaW5lZFtlXToyMDk3MTUxJnQ/KDAscy5zdHJpbmdGcm9tQ29kZVBvaW50KSgyMDk3MTUxJnQpOlwiXCJ9aXNQcm90ZWN0ZWQoZSl7cmV0dXJuIDUzNjg3MDkxMiZ0aGlzLl9kYXRhWzMqZSsyXX1sb2FkQ2VsbChlLHQpe3JldHVybiBhLnN0YXJ0SW5kZXg9MyplLHQuY29udGVudD10aGlzLl9kYXRhW2Euc3RhcnRJbmRleCswXSx0LmZnPXRoaXMuX2RhdGFbYS5zdGFydEluZGV4KzFdLHQuYmc9dGhpcy5fZGF0YVthLnN0YXJ0SW5kZXgrMl0sMjA5NzE1MiZ0LmNvbnRlbnQmJih0LmNvbWJpbmVkRGF0YT10aGlzLl9jb21iaW5lZFtlXSksMjY4NDM1NDU2JnQuYmcmJih0LmV4dGVuZGVkPXRoaXMuX2V4dGVuZGVkQXR0cnNbZV0pLHR9c2V0Q2VsbChlLHQpezIwOTcxNTImdC5jb250ZW50JiYodGhpcy5fY29tYmluZWRbZV09dC5jb21iaW5lZERhdGEpLDI2ODQzNTQ1NiZ0LmJnJiYodGhpcy5fZXh0ZW5kZWRBdHRyc1tlXT10LmV4dGVuZGVkKSx0aGlzLl9kYXRhWzMqZSswXT10LmNvbnRlbnQsdGhpcy5fZGF0YVszKmUrMV09dC5mZyx0aGlzLl9kYXRhWzMqZSsyXT10LmJnfXNldENlbGxGcm9tQ29kZVBvaW50KGUsdCxpLHMscixuKXsyNjg0MzU0NTYmciYmKHRoaXMuX2V4dGVuZGVkQXR0cnNbZV09biksdGhpcy5fZGF0YVszKmUrMF09dHxpPDwyMix0aGlzLl9kYXRhWzMqZSsxXT1zLHRoaXMuX2RhdGFbMyplKzJdPXJ9YWRkQ29kZXBvaW50VG9DZWxsKGUsdCl7bGV0IGk9dGhpcy5fZGF0YVszKmUrMF07MjA5NzE1MiZpP3RoaXMuX2NvbWJpbmVkW2VdKz0oMCxzLnN0cmluZ0Zyb21Db2RlUG9pbnQpKHQpOigyMDk3MTUxJmk/KHRoaXMuX2NvbWJpbmVkW2VdPSgwLHMuc3RyaW5nRnJvbUNvZGVQb2ludCkoMjA5NzE1MSZpKSsoMCxzLnN0cmluZ0Zyb21Db2RlUG9pbnQpKHQpLGkmPS0yMDk3MTUyLGl8PTIwOTcxNTIpOmk9dHwxPDwyMix0aGlzLl9kYXRhWzMqZSswXT1pKX1pbnNlcnRDZWxscyhlLHQsaSxzKXtpZigoZSU9dGhpcy5sZW5ndGgpJiYyPT09dGhpcy5nZXRXaWR0aChlLTEpJiZ0aGlzLnNldENlbGxGcm9tQ29kZVBvaW50KGUtMSwwLDEsKG51bGw9PXM/dm9pZCAwOnMuZmcpfHwwLChudWxsPT1zP3ZvaWQgMDpzLmJnKXx8MCwobnVsbD09cz92b2lkIDA6cy5leHRlbmRlZCl8fG5ldyBvLkV4dGVuZGVkQXR0cnMpLHQ8dGhpcy5sZW5ndGgtZSl7Y29uc3Qgcz1uZXcgbi5DZWxsRGF0YTtmb3IobGV0IGk9dGhpcy5sZW5ndGgtZS10LTE7aT49MDstLWkpdGhpcy5zZXRDZWxsKGUrdCtpLHRoaXMubG9hZENlbGwoZStpLHMpKTtmb3IobGV0IHM9MDtzPHQ7KytzKXRoaXMuc2V0Q2VsbChlK3MsaSl9ZWxzZSBmb3IobGV0IHQ9ZTt0PHRoaXMubGVuZ3RoOysrdCl0aGlzLnNldENlbGwodCxpKTsyPT09dGhpcy5nZXRXaWR0aCh0aGlzLmxlbmd0aC0xKSYmdGhpcy5zZXRDZWxsRnJvbUNvZGVQb2ludCh0aGlzLmxlbmd0aC0xLDAsMSwobnVsbD09cz92b2lkIDA6cy5mZyl8fDAsKG51bGw9PXM/dm9pZCAwOnMuYmcpfHwwLChudWxsPT1zP3ZvaWQgMDpzLmV4dGVuZGVkKXx8bmV3IG8uRXh0ZW5kZWRBdHRycyl9ZGVsZXRlQ2VsbHMoZSx0LGkscyl7aWYoZSU9dGhpcy5sZW5ndGgsdDx0aGlzLmxlbmd0aC1lKXtjb25zdCBzPW5ldyBuLkNlbGxEYXRhO2ZvcihsZXQgaT0wO2k8dGhpcy5sZW5ndGgtZS10OysraSl0aGlzLnNldENlbGwoZStpLHRoaXMubG9hZENlbGwoZSt0K2kscykpO2ZvcihsZXQgZT10aGlzLmxlbmd0aC10O2U8dGhpcy5sZW5ndGg7KytlKXRoaXMuc2V0Q2VsbChlLGkpfWVsc2UgZm9yKGxldCB0PWU7dDx0aGlzLmxlbmd0aDsrK3QpdGhpcy5zZXRDZWxsKHQsaSk7ZSYmMj09PXRoaXMuZ2V0V2lkdGgoZS0xKSYmdGhpcy5zZXRDZWxsRnJvbUNvZGVQb2ludChlLTEsMCwxLChudWxsPT1zP3ZvaWQgMDpzLmZnKXx8MCwobnVsbD09cz92b2lkIDA6cy5iZyl8fDAsKG51bGw9PXM/dm9pZCAwOnMuZXh0ZW5kZWQpfHxuZXcgby5FeHRlbmRlZEF0dHJzKSwwIT09dGhpcy5nZXRXaWR0aChlKXx8dGhpcy5oYXNDb250ZW50KGUpfHx0aGlzLnNldENlbGxGcm9tQ29kZVBvaW50KGUsMCwxLChudWxsPT1zP3ZvaWQgMDpzLmZnKXx8MCwobnVsbD09cz92b2lkIDA6cy5iZyl8fDAsKG51bGw9PXM/dm9pZCAwOnMuZXh0ZW5kZWQpfHxuZXcgby5FeHRlbmRlZEF0dHJzKX1yZXBsYWNlQ2VsbHMoZSx0LGkscyxyPSExKXtpZihyKWZvcihlJiYyPT09dGhpcy5nZXRXaWR0aChlLTEpJiYhdGhpcy5pc1Byb3RlY3RlZChlLTEpJiZ0aGlzLnNldENlbGxGcm9tQ29kZVBvaW50KGUtMSwwLDEsKG51bGw9PXM/dm9pZCAwOnMuZmcpfHwwLChudWxsPT1zP3ZvaWQgMDpzLmJnKXx8MCwobnVsbD09cz92b2lkIDA6cy5leHRlbmRlZCl8fG5ldyBvLkV4dGVuZGVkQXR0cnMpLHQ8dGhpcy5sZW5ndGgmJjI9PT10aGlzLmdldFdpZHRoKHQtMSkmJiF0aGlzLmlzUHJvdGVjdGVkKHQpJiZ0aGlzLnNldENlbGxGcm9tQ29kZVBvaW50KHQsMCwxLChudWxsPT1zP3ZvaWQgMDpzLmZnKXx8MCwobnVsbD09cz92b2lkIDA6cy5iZyl8fDAsKG51bGw9PXM/dm9pZCAwOnMuZXh0ZW5kZWQpfHxuZXcgby5FeHRlbmRlZEF0dHJzKTtlPHQmJmU8dGhpcy5sZW5ndGg7KXRoaXMuaXNQcm90ZWN0ZWQoZSl8fHRoaXMuc2V0Q2VsbChlLGkpLGUrKztlbHNlIGZvcihlJiYyPT09dGhpcy5nZXRXaWR0aChlLTEpJiZ0aGlzLnNldENlbGxGcm9tQ29kZVBvaW50KGUtMSwwLDEsKG51bGw9PXM/dm9pZCAwOnMuZmcpfHwwLChudWxsPT1zP3ZvaWQgMDpzLmJnKXx8MCwobnVsbD09cz92b2lkIDA6cy5leHRlbmRlZCl8fG5ldyBvLkV4dGVuZGVkQXR0cnMpLHQ8dGhpcy5sZW5ndGgmJjI9PT10aGlzLmdldFdpZHRoKHQtMSkmJnRoaXMuc2V0Q2VsbEZyb21Db2RlUG9pbnQodCwwLDEsKG51bGw9PXM/dm9pZCAwOnMuZmcpfHwwLChudWxsPT1zP3ZvaWQgMDpzLmJnKXx8MCwobnVsbD09cz92b2lkIDA6cy5leHRlbmRlZCl8fG5ldyBvLkV4dGVuZGVkQXR0cnMpO2U8dCYmZTx0aGlzLmxlbmd0aDspdGhpcy5zZXRDZWxsKGUrKyxpKX1yZXNpemUoZSx0KXtpZihlIT09dGhpcy5sZW5ndGgpe2lmKGU+dGhpcy5sZW5ndGgpe2NvbnN0IGk9bmV3IFVpbnQzMkFycmF5KDMqZSk7dGhpcy5sZW5ndGgmJigzKmU8dGhpcy5fZGF0YS5sZW5ndGg/aS5zZXQodGhpcy5fZGF0YS5zdWJhcnJheSgwLDMqZSkpOmkuc2V0KHRoaXMuX2RhdGEpKSx0aGlzLl9kYXRhPWk7Zm9yKGxldCBpPXRoaXMubGVuZ3RoO2k8ZTsrK2kpdGhpcy5zZXRDZWxsKGksdCl9ZWxzZSBpZihlKXtjb25zdCB0PW5ldyBVaW50MzJBcnJheSgzKmUpO3Quc2V0KHRoaXMuX2RhdGEuc3ViYXJyYXkoMCwzKmUpKSx0aGlzLl9kYXRhPXQ7Y29uc3QgaT1PYmplY3Qua2V5cyh0aGlzLl9jb21iaW5lZCk7Zm9yKGxldCB0PTA7dDxpLmxlbmd0aDt0Kyspe2NvbnN0IHM9cGFyc2VJbnQoaVt0XSwxMCk7cz49ZSYmZGVsZXRlIHRoaXMuX2NvbWJpbmVkW3NdfX1lbHNlIHRoaXMuX2RhdGE9bmV3IFVpbnQzMkFycmF5KDApLHRoaXMuX2NvbWJpbmVkPXt9O3RoaXMubGVuZ3RoPWV9fWZpbGwoZSx0PSExKXtpZih0KWZvcihsZXQgdD0wO3Q8dGhpcy5sZW5ndGg7Kyt0KXRoaXMuaXNQcm90ZWN0ZWQodCl8fHRoaXMuc2V0Q2VsbCh0LGUpO2Vsc2V7dGhpcy5fY29tYmluZWQ9e30sdGhpcy5fZXh0ZW5kZWRBdHRycz17fTtmb3IobGV0IHQ9MDt0PHRoaXMubGVuZ3RoOysrdCl0aGlzLnNldENlbGwodCxlKX19Y29weUZyb20oZSl7dGhpcy5sZW5ndGghPT1lLmxlbmd0aD90aGlzLl9kYXRhPW5ldyBVaW50MzJBcnJheShlLl9kYXRhKTp0aGlzLl9kYXRhLnNldChlLl9kYXRhKSx0aGlzLmxlbmd0aD1lLmxlbmd0aCx0aGlzLl9jb21iaW5lZD17fTtmb3IoY29uc3QgdCBpbiBlLl9jb21iaW5lZCl0aGlzLl9jb21iaW5lZFt0XT1lLl9jb21iaW5lZFt0XTt0aGlzLl9leHRlbmRlZEF0dHJzPXt9O2Zvcihjb25zdCB0IGluIGUuX2V4dGVuZGVkQXR0cnMpdGhpcy5fZXh0ZW5kZWRBdHRyc1t0XT1lLl9leHRlbmRlZEF0dHJzW3RdO3RoaXMuaXNXcmFwcGVkPWUuaXNXcmFwcGVkfWNsb25lKCl7Y29uc3QgZT1uZXcgaCgwKTtlLl9kYXRhPW5ldyBVaW50MzJBcnJheSh0aGlzLl9kYXRhKSxlLmxlbmd0aD10aGlzLmxlbmd0aDtmb3IoY29uc3QgdCBpbiB0aGlzLl9jb21iaW5lZCllLl9jb21iaW5lZFt0XT10aGlzLl9jb21iaW5lZFt0XTtmb3IoY29uc3QgdCBpbiB0aGlzLl9leHRlbmRlZEF0dHJzKWUuX2V4dGVuZGVkQXR0cnNbdF09dGhpcy5fZXh0ZW5kZWRBdHRyc1t0XTtyZXR1cm4gZS5pc1dyYXBwZWQ9dGhpcy5pc1dyYXBwZWQsZX1nZXRUcmltbWVkTGVuZ3RoKCl7Zm9yKGxldCBlPXRoaXMubGVuZ3RoLTE7ZT49MDstLWUpaWYoNDE5NDMwMyZ0aGlzLl9kYXRhWzMqZSswXSlyZXR1cm4gZSsodGhpcy5fZGF0YVszKmUrMF0+PjIyKTtyZXR1cm4gMH1jb3B5Q2VsbHNGcm9tKGUsdCxpLHMscil7Y29uc3Qgbj1lLl9kYXRhO2lmKHIpZm9yKGxldCByPXMtMTtyPj0wO3ItLSl7Zm9yKGxldCBlPTA7ZTwzO2UrKyl0aGlzLl9kYXRhWzMqKGkrcikrZV09blszKih0K3IpK2VdOzI2ODQzNTQ1NiZuWzMqKHQrcikrMl0mJih0aGlzLl9leHRlbmRlZEF0dHJzW2krcl09ZS5fZXh0ZW5kZWRBdHRyc1t0K3JdKX1lbHNlIGZvcihsZXQgcj0wO3I8cztyKyspe2ZvcihsZXQgZT0wO2U8MztlKyspdGhpcy5fZGF0YVszKihpK3IpK2VdPW5bMyoodCtyKStlXTsyNjg0MzU0NTYmblszKih0K3IpKzJdJiYodGhpcy5fZXh0ZW5kZWRBdHRyc1tpK3JdPWUuX2V4dGVuZGVkQXR0cnNbdCtyXSl9Y29uc3Qgbz1PYmplY3Qua2V5cyhlLl9jb21iaW5lZCk7Zm9yKGxldCBzPTA7czxvLmxlbmd0aDtzKyspe2NvbnN0IHI9cGFyc2VJbnQob1tzXSwxMCk7cj49dCYmKHRoaXMuX2NvbWJpbmVkW3ItdCtpXT1lLl9jb21iaW5lZFtyXSl9fXRyYW5zbGF0ZVRvU3RyaW5nKGU9ITEsdD0wLGk9dGhpcy5sZW5ndGgpe2UmJihpPU1hdGgubWluKGksdGhpcy5nZXRUcmltbWVkTGVuZ3RoKCkpKTtsZXQgbj1cIlwiO2Zvcig7dDxpOyl7Y29uc3QgZT10aGlzLl9kYXRhWzMqdCswXSxpPTIwOTcxNTEmZTtuKz0yMDk3MTUyJmU/dGhpcy5fY29tYmluZWRbdF06aT8oMCxzLnN0cmluZ0Zyb21Db2RlUG9pbnQpKGkpOnIuV0hJVEVTUEFDRV9DRUxMX0NIQVIsdCs9ZT4+MjJ8fDF9cmV0dXJuIG59fXQuQnVmZmVyTGluZT1ofSw0ODQxOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5nZXRSYW5nZUxlbmd0aD12b2lkIDAsdC5nZXRSYW5nZUxlbmd0aD1mdW5jdGlvbihlLHQpe2lmKGUuc3RhcnQueT5lLmVuZC55KXRocm93IG5ldyBFcnJvcihgQnVmZmVyIHJhbmdlIGVuZCAoJHtlLmVuZC54fSwgJHtlLmVuZC55fSkgY2Fubm90IGJlIGJlZm9yZSBzdGFydCAoJHtlLnN0YXJ0Lnh9LCAke2Uuc3RhcnQueX0pYCk7cmV0dXJuIHQqKGUuZW5kLnktZS5zdGFydC55KSsoZS5lbmQueC1lLnN0YXJ0LngrMSl9fSw0NjM0OihlLHQpPT57ZnVuY3Rpb24gaShlLHQsaSl7aWYodD09PWUubGVuZ3RoLTEpcmV0dXJuIGVbdF0uZ2V0VHJpbW1lZExlbmd0aCgpO2NvbnN0IHM9IWVbdF0uaGFzQ29udGVudChpLTEpJiYxPT09ZVt0XS5nZXRXaWR0aChpLTEpLHI9Mj09PWVbdCsxXS5nZXRXaWR0aCgwKTtyZXR1cm4gcyYmcj9pLTE6aX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmdldFdyYXBwZWRMaW5lVHJpbW1lZExlbmd0aD10LnJlZmxvd1NtYWxsZXJHZXROZXdMaW5lTGVuZ3Rocz10LnJlZmxvd0xhcmdlckFwcGx5TmV3TGF5b3V0PXQucmVmbG93TGFyZ2VyQ3JlYXRlTmV3TGF5b3V0PXQucmVmbG93TGFyZ2VyR2V0TGluZXNUb1JlbW92ZT12b2lkIDAsdC5yZWZsb3dMYXJnZXJHZXRMaW5lc1RvUmVtb3ZlPWZ1bmN0aW9uKGUsdCxzLHIsbil7Y29uc3Qgbz1bXTtmb3IobGV0IGE9MDthPGUubGVuZ3RoLTE7YSsrKXtsZXQgaD1hLGM9ZS5nZXQoKytoKTtpZighYy5pc1dyYXBwZWQpY29udGludWU7Y29uc3QgbD1bZS5nZXQoYSldO2Zvcig7aDxlLmxlbmd0aCYmYy5pc1dyYXBwZWQ7KWwucHVzaChjKSxjPWUuZ2V0KCsraCk7aWYocj49YSYmcjxoKXthKz1sLmxlbmd0aC0xO2NvbnRpbnVlfWxldCBkPTAsXz1pKGwsZCx0KSx1PTEsZj0wO2Zvcig7dTxsLmxlbmd0aDspe2NvbnN0IGU9aShsLHUsdCkscj1lLWYsbz1zLV8sYT1NYXRoLm1pbihyLG8pO2xbZF0uY29weUNlbGxzRnJvbShsW3VdLGYsXyxhLCExKSxfKz1hLF89PT1zJiYoZCsrLF89MCksZis9YSxmPT09ZSYmKHUrKyxmPTApLDA9PT1fJiYwIT09ZCYmMj09PWxbZC0xXS5nZXRXaWR0aChzLTEpJiYobFtkXS5jb3B5Q2VsbHNGcm9tKGxbZC0xXSxzLTEsXysrLDEsITEpLGxbZC0xXS5zZXRDZWxsKHMtMSxuKSl9bFtkXS5yZXBsYWNlQ2VsbHMoXyxzLG4pO2xldCB2PTA7Zm9yKGxldCBlPWwubGVuZ3RoLTE7ZT4wJiYoZT5kfHwwPT09bFtlXS5nZXRUcmltbWVkTGVuZ3RoKCkpO2UtLSl2Kys7dj4wJiYoby5wdXNoKGErbC5sZW5ndGgtdiksby5wdXNoKHYpKSxhKz1sLmxlbmd0aC0xfXJldHVybiBvfSx0LnJlZmxvd0xhcmdlckNyZWF0ZU5ld0xheW91dD1mdW5jdGlvbihlLHQpe2NvbnN0IGk9W107bGV0IHM9MCxyPXRbc10sbj0wO2ZvcihsZXQgbz0wO288ZS5sZW5ndGg7bysrKWlmKHI9PT1vKXtjb25zdCBpPXRbKytzXTtlLm9uRGVsZXRlRW1pdHRlci5maXJlKHtpbmRleDpvLW4sYW1vdW50Oml9KSxvKz1pLTEsbis9aSxyPXRbKytzXX1lbHNlIGkucHVzaChvKTtyZXR1cm57bGF5b3V0OmksY291bnRSZW1vdmVkOm59fSx0LnJlZmxvd0xhcmdlckFwcGx5TmV3TGF5b3V0PWZ1bmN0aW9uKGUsdCl7Y29uc3QgaT1bXTtmb3IobGV0IHM9MDtzPHQubGVuZ3RoO3MrKylpLnB1c2goZS5nZXQodFtzXSkpO2ZvcihsZXQgdD0wO3Q8aS5sZW5ndGg7dCsrKWUuc2V0KHQsaVt0XSk7ZS5sZW5ndGg9dC5sZW5ndGh9LHQucmVmbG93U21hbGxlckdldE5ld0xpbmVMZW5ndGhzPWZ1bmN0aW9uKGUsdCxzKXtjb25zdCByPVtdLG49ZS5tYXAoKChzLHIpPT5pKGUscix0KSkpLnJlZHVjZSgoKGUsdCk9PmUrdCkpO2xldCBvPTAsYT0wLGg9MDtmb3IoO2g8bjspe2lmKG4taDxzKXtyLnB1c2gobi1oKTticmVha31vKz1zO2NvbnN0IGM9aShlLGEsdCk7bz5jJiYoby09YyxhKyspO2NvbnN0IGw9Mj09PWVbYV0uZ2V0V2lkdGgoby0xKTtsJiZvLS07Y29uc3QgZD1sP3MtMTpzO3IucHVzaChkKSxoKz1kfXJldHVybiByfSx0LmdldFdyYXBwZWRMaW5lVHJpbW1lZExlbmd0aD1pfSw1Mjk1OihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJ1ZmZlclNldD12b2lkIDA7Y29uc3Qgcz1pKDkwOTIpLHI9aSg4NDYwKSxuPWkoODQ0KTtjbGFzcyBvIGV4dGVuZHMgbi5EaXNwb3NhYmxle2NvbnN0cnVjdG9yKGUsdCl7c3VwZXIoKSx0aGlzLl9vcHRpb25zU2VydmljZT1lLHRoaXMuX2J1ZmZlclNlcnZpY2U9dCx0aGlzLl9vbkJ1ZmZlckFjdGl2YXRlPXRoaXMucmVnaXN0ZXIobmV3IHIuRXZlbnRFbWl0dGVyKSx0aGlzLnJlc2V0KCl9Z2V0IG9uQnVmZmVyQWN0aXZhdGUoKXtyZXR1cm4gdGhpcy5fb25CdWZmZXJBY3RpdmF0ZS5ldmVudH1yZXNldCgpe3RoaXMuX25vcm1hbD1uZXcgcy5CdWZmZXIoITAsdGhpcy5fb3B0aW9uc1NlcnZpY2UsdGhpcy5fYnVmZmVyU2VydmljZSksdGhpcy5fbm9ybWFsLmZpbGxWaWV3cG9ydFJvd3MoKSx0aGlzLl9hbHQ9bmV3IHMuQnVmZmVyKCExLHRoaXMuX29wdGlvbnNTZXJ2aWNlLHRoaXMuX2J1ZmZlclNlcnZpY2UpLHRoaXMuX2FjdGl2ZUJ1ZmZlcj10aGlzLl9ub3JtYWwsdGhpcy5fb25CdWZmZXJBY3RpdmF0ZS5maXJlKHthY3RpdmVCdWZmZXI6dGhpcy5fbm9ybWFsLGluYWN0aXZlQnVmZmVyOnRoaXMuX2FsdH0pLHRoaXMuc2V0dXBUYWJTdG9wcygpfWdldCBhbHQoKXtyZXR1cm4gdGhpcy5fYWx0fWdldCBhY3RpdmUoKXtyZXR1cm4gdGhpcy5fYWN0aXZlQnVmZmVyfWdldCBub3JtYWwoKXtyZXR1cm4gdGhpcy5fbm9ybWFsfWFjdGl2YXRlTm9ybWFsQnVmZmVyKCl7dGhpcy5fYWN0aXZlQnVmZmVyIT09dGhpcy5fbm9ybWFsJiYodGhpcy5fbm9ybWFsLng9dGhpcy5fYWx0LngsdGhpcy5fbm9ybWFsLnk9dGhpcy5fYWx0LnksdGhpcy5fYWx0LmNsZWFyQWxsTWFya2VycygpLHRoaXMuX2FsdC5jbGVhcigpLHRoaXMuX2FjdGl2ZUJ1ZmZlcj10aGlzLl9ub3JtYWwsdGhpcy5fb25CdWZmZXJBY3RpdmF0ZS5maXJlKHthY3RpdmVCdWZmZXI6dGhpcy5fbm9ybWFsLGluYWN0aXZlQnVmZmVyOnRoaXMuX2FsdH0pKX1hY3RpdmF0ZUFsdEJ1ZmZlcihlKXt0aGlzLl9hY3RpdmVCdWZmZXIhPT10aGlzLl9hbHQmJih0aGlzLl9hbHQuZmlsbFZpZXdwb3J0Um93cyhlKSx0aGlzLl9hbHQueD10aGlzLl9ub3JtYWwueCx0aGlzLl9hbHQueT10aGlzLl9ub3JtYWwueSx0aGlzLl9hY3RpdmVCdWZmZXI9dGhpcy5fYWx0LHRoaXMuX29uQnVmZmVyQWN0aXZhdGUuZmlyZSh7YWN0aXZlQnVmZmVyOnRoaXMuX2FsdCxpbmFjdGl2ZUJ1ZmZlcjp0aGlzLl9ub3JtYWx9KSl9cmVzaXplKGUsdCl7dGhpcy5fbm9ybWFsLnJlc2l6ZShlLHQpLHRoaXMuX2FsdC5yZXNpemUoZSx0KX1zZXR1cFRhYlN0b3BzKGUpe3RoaXMuX25vcm1hbC5zZXR1cFRhYlN0b3BzKGUpLHRoaXMuX2FsdC5zZXR1cFRhYlN0b3BzKGUpfX10LkJ1ZmZlclNldD1vfSw1MTE6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ2VsbERhdGE9dm9pZCAwO2NvbnN0IHM9aSg0ODIpLHI9aSg2NDMpLG49aSgzNzM0KTtjbGFzcyBvIGV4dGVuZHMgbi5BdHRyaWJ1dGVEYXRhe2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLmNvbnRlbnQ9MCx0aGlzLmZnPTAsdGhpcy5iZz0wLHRoaXMuZXh0ZW5kZWQ9bmV3IG4uRXh0ZW5kZWRBdHRycyx0aGlzLmNvbWJpbmVkRGF0YT1cIlwifXN0YXRpYyBmcm9tQ2hhckRhdGEoZSl7Y29uc3QgdD1uZXcgbztyZXR1cm4gdC5zZXRGcm9tQ2hhckRhdGEoZSksdH1pc0NvbWJpbmVkKCl7cmV0dXJuIDIwOTcxNTImdGhpcy5jb250ZW50fWdldFdpZHRoKCl7cmV0dXJuIHRoaXMuY29udGVudD4+MjJ9Z2V0Q2hhcnMoKXtyZXR1cm4gMjA5NzE1MiZ0aGlzLmNvbnRlbnQ/dGhpcy5jb21iaW5lZERhdGE6MjA5NzE1MSZ0aGlzLmNvbnRlbnQ/KDAscy5zdHJpbmdGcm9tQ29kZVBvaW50KSgyMDk3MTUxJnRoaXMuY29udGVudCk6XCJcIn1nZXRDb2RlKCl7cmV0dXJuIHRoaXMuaXNDb21iaW5lZCgpP3RoaXMuY29tYmluZWREYXRhLmNoYXJDb2RlQXQodGhpcy5jb21iaW5lZERhdGEubGVuZ3RoLTEpOjIwOTcxNTEmdGhpcy5jb250ZW50fXNldEZyb21DaGFyRGF0YShlKXt0aGlzLmZnPWVbci5DSEFSX0RBVEFfQVRUUl9JTkRFWF0sdGhpcy5iZz0wO2xldCB0PSExO2lmKGVbci5DSEFSX0RBVEFfQ0hBUl9JTkRFWF0ubGVuZ3RoPjIpdD0hMDtlbHNlIGlmKDI9PT1lW3IuQ0hBUl9EQVRBX0NIQVJfSU5ERVhdLmxlbmd0aCl7Y29uc3QgaT1lW3IuQ0hBUl9EQVRBX0NIQVJfSU5ERVhdLmNoYXJDb2RlQXQoMCk7aWYoNTUyOTY8PWkmJmk8PTU2MzE5KXtjb25zdCBzPWVbci5DSEFSX0RBVEFfQ0hBUl9JTkRFWF0uY2hhckNvZGVBdCgxKTs1NjMyMDw9cyYmczw9NTczNDM/dGhpcy5jb250ZW50PTEwMjQqKGktNTUyOTYpK3MtNTYzMjArNjU1MzZ8ZVtyLkNIQVJfREFUQV9XSURUSF9JTkRFWF08PDIyOnQ9ITB9ZWxzZSB0PSEwfWVsc2UgdGhpcy5jb250ZW50PWVbci5DSEFSX0RBVEFfQ0hBUl9JTkRFWF0uY2hhckNvZGVBdCgwKXxlW3IuQ0hBUl9EQVRBX1dJRFRIX0lOREVYXTw8MjI7dCYmKHRoaXMuY29tYmluZWREYXRhPWVbci5DSEFSX0RBVEFfQ0hBUl9JTkRFWF0sdGhpcy5jb250ZW50PTIwOTcxNTJ8ZVtyLkNIQVJfREFUQV9XSURUSF9JTkRFWF08PDIyKX1nZXRBc0NoYXJEYXRhKCl7cmV0dXJuW3RoaXMuZmcsdGhpcy5nZXRDaGFycygpLHRoaXMuZ2V0V2lkdGgoKSx0aGlzLmdldENvZGUoKV19fXQuQ2VsbERhdGE9b30sNjQzOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5XSElURVNQQUNFX0NFTExfQ09ERT10LldISVRFU1BBQ0VfQ0VMTF9XSURUSD10LldISVRFU1BBQ0VfQ0VMTF9DSEFSPXQuTlVMTF9DRUxMX0NPREU9dC5OVUxMX0NFTExfV0lEVEg9dC5OVUxMX0NFTExfQ0hBUj10LkNIQVJfREFUQV9DT0RFX0lOREVYPXQuQ0hBUl9EQVRBX1dJRFRIX0lOREVYPXQuQ0hBUl9EQVRBX0NIQVJfSU5ERVg9dC5DSEFSX0RBVEFfQVRUUl9JTkRFWD10LkRFRkFVTFRfRVhUPXQuREVGQVVMVF9BVFRSPXQuREVGQVVMVF9DT0xPUj12b2lkIDAsdC5ERUZBVUxUX0NPTE9SPTI1Nix0LkRFRkFVTFRfQVRUUj0yNTZ8dC5ERUZBVUxUX0NPTE9SPDw5LHQuREVGQVVMVF9FWFQ9MCx0LkNIQVJfREFUQV9BVFRSX0lOREVYPTAsdC5DSEFSX0RBVEFfQ0hBUl9JTkRFWD0xLHQuQ0hBUl9EQVRBX1dJRFRIX0lOREVYPTIsdC5DSEFSX0RBVEFfQ09ERV9JTkRFWD0zLHQuTlVMTF9DRUxMX0NIQVI9XCJcIix0Lk5VTExfQ0VMTF9XSURUSD0xLHQuTlVMTF9DRUxMX0NPREU9MCx0LldISVRFU1BBQ0VfQ0VMTF9DSEFSPVwiIFwiLHQuV0hJVEVTUEFDRV9DRUxMX1dJRFRIPTEsdC5XSElURVNQQUNFX0NFTExfQ09ERT0zMn0sNDg2MzooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5NYXJrZXI9dm9pZCAwO2NvbnN0IHM9aSg4NDYwKSxyPWkoODQ0KTtjbGFzcyBuIGV4dGVuZHMgci5EaXNwb3NhYmxle2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksdGhpcy5saW5lPWUsdGhpcy5faWQ9bi5fbmV4dElkKyssdGhpcy5pc0Rpc3Bvc2VkPSExLHRoaXMuX29uRGlzcG9zZT1uZXcgcy5FdmVudEVtaXR0ZXJ9Z2V0IGlkKCl7cmV0dXJuIHRoaXMuX2lkfWdldCBvbkRpc3Bvc2UoKXtyZXR1cm4gdGhpcy5fb25EaXNwb3NlLmV2ZW50fWRpc3Bvc2UoKXt0aGlzLmlzRGlzcG9zZWR8fCh0aGlzLmlzRGlzcG9zZWQ9ITAsdGhpcy5saW5lPS0xLHRoaXMuX29uRGlzcG9zZS5maXJlKCksc3VwZXIuZGlzcG9zZSgpKX19dC5NYXJrZXI9bixuLl9uZXh0SWQ9MX0sNzExNjooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuREVGQVVMVF9DSEFSU0VUPXQuQ0hBUlNFVFM9dm9pZCAwLHQuQ0hBUlNFVFM9e30sdC5ERUZBVUxUX0NIQVJTRVQ9dC5DSEFSU0VUUy5CLHQuQ0hBUlNFVFNbMF09e1wiYFwiOlwi4peGXCIsYTpcIuKWklwiLGI6XCLikIlcIixjOlwi4pCMXCIsZDpcIuKQjVwiLGU6XCLikIpcIixmOlwiwrBcIixnOlwiwrFcIixoOlwi4pCkXCIsaTpcIuKQi1wiLGo6XCLilJhcIixrOlwi4pSQXCIsbDpcIuKUjFwiLG06XCLilJRcIixuOlwi4pS8XCIsbzpcIuKOulwiLHA6XCLijrtcIixxOlwi4pSAXCIscjpcIuKOvFwiLHM6XCLijr1cIix0Olwi4pScXCIsdTpcIuKUpFwiLHY6XCLilLRcIix3Olwi4pSsXCIseDpcIuKUglwiLHk6XCLiiaRcIix6Olwi4omlXCIsXCJ7XCI6XCLPgFwiLFwifFwiOlwi4omgXCIsXCJ9XCI6XCLCo1wiLFwiflwiOlwiwrdcIn0sdC5DSEFSU0VUUy5BPXtcIiNcIjpcIsKjXCJ9LHQuQ0hBUlNFVFMuQj12b2lkIDAsdC5DSEFSU0VUU1s0XT17XCIjXCI6XCLCo1wiLFwiQFwiOlwiwr5cIixcIltcIjpcImlqXCIsXCJcXFxcXCI6XCLCvVwiLFwiXVwiOlwifFwiLFwie1wiOlwiwqhcIixcInxcIjpcImZcIixcIn1cIjpcIsK8XCIsXCJ+XCI6XCLCtFwifSx0LkNIQVJTRVRTLkM9dC5DSEFSU0VUU1s1XT17XCJbXCI6XCLDhFwiLFwiXFxcXFwiOlwiw5ZcIixcIl1cIjpcIsOFXCIsXCJeXCI6XCLDnFwiLFwiYFwiOlwiw6lcIixcIntcIjpcIsOkXCIsXCJ8XCI6XCLDtlwiLFwifVwiOlwiw6VcIixcIn5cIjpcIsO8XCJ9LHQuQ0hBUlNFVFMuUj17XCIjXCI6XCLCo1wiLFwiQFwiOlwiw6BcIixcIltcIjpcIsKwXCIsXCJcXFxcXCI6XCLDp1wiLFwiXVwiOlwiwqdcIixcIntcIjpcIsOpXCIsXCJ8XCI6XCLDuVwiLFwifVwiOlwiw6hcIixcIn5cIjpcIsKoXCJ9LHQuQ0hBUlNFVFMuUT17XCJAXCI6XCLDoFwiLFwiW1wiOlwiw6JcIixcIlxcXFxcIjpcIsOnXCIsXCJdXCI6XCLDqlwiLFwiXlwiOlwiw65cIixcImBcIjpcIsO0XCIsXCJ7XCI6XCLDqVwiLFwifFwiOlwiw7lcIixcIn1cIjpcIsOoXCIsXCJ+XCI6XCLDu1wifSx0LkNIQVJTRVRTLks9e1wiQFwiOlwiwqdcIixcIltcIjpcIsOEXCIsXCJcXFxcXCI6XCLDllwiLFwiXVwiOlwiw5xcIixcIntcIjpcIsOkXCIsXCJ8XCI6XCLDtlwiLFwifVwiOlwiw7xcIixcIn5cIjpcIsOfXCJ9LHQuQ0hBUlNFVFMuWT17XCIjXCI6XCLCo1wiLFwiQFwiOlwiwqdcIixcIltcIjpcIsKwXCIsXCJcXFxcXCI6XCLDp1wiLFwiXVwiOlwiw6lcIixcImBcIjpcIsO5XCIsXCJ7XCI6XCLDoFwiLFwifFwiOlwiw7JcIixcIn1cIjpcIsOoXCIsXCJ+XCI6XCLDrFwifSx0LkNIQVJTRVRTLkU9dC5DSEFSU0VUU1s2XT17XCJAXCI6XCLDhFwiLFwiW1wiOlwiw4ZcIixcIlxcXFxcIjpcIsOYXCIsXCJdXCI6XCLDhVwiLFwiXlwiOlwiw5xcIixcImBcIjpcIsOkXCIsXCJ7XCI6XCLDplwiLFwifFwiOlwiw7hcIixcIn1cIjpcIsOlXCIsXCJ+XCI6XCLDvFwifSx0LkNIQVJTRVRTLlo9e1wiI1wiOlwiwqNcIixcIkBcIjpcIsKnXCIsXCJbXCI6XCLCoVwiLFwiXFxcXFwiOlwiw5FcIixcIl1cIjpcIsK/XCIsXCJ7XCI6XCLCsFwiLFwifFwiOlwiw7FcIixcIn1cIjpcIsOnXCJ9LHQuQ0hBUlNFVFMuSD10LkNIQVJTRVRTWzddPXtcIkBcIjpcIsOJXCIsXCJbXCI6XCLDhFwiLFwiXFxcXFwiOlwiw5ZcIixcIl1cIjpcIsOFXCIsXCJeXCI6XCLDnFwiLFwiYFwiOlwiw6lcIixcIntcIjpcIsOkXCIsXCJ8XCI6XCLDtlwiLFwifVwiOlwiw6VcIixcIn5cIjpcIsO8XCJ9LHQuQ0hBUlNFVFNbXCI9XCJdPXtcIiNcIjpcIsO5XCIsXCJAXCI6XCLDoFwiLFwiW1wiOlwiw6lcIixcIlxcXFxcIjpcIsOnXCIsXCJdXCI6XCLDqlwiLFwiXlwiOlwiw65cIixfOlwiw6hcIixcImBcIjpcIsO0XCIsXCJ7XCI6XCLDpFwiLFwifFwiOlwiw7ZcIixcIn1cIjpcIsO8XCIsXCJ+XCI6XCLDu1wifX0sMjU4NDooZSx0KT0+e3ZhciBpLHM7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5DMV9FU0NBUEVEPXQuQzE9dC5DMD12b2lkIDAsZnVuY3Rpb24oZSl7ZS5OVUw9XCJcXDBcIixlLlNPSD1cIlx1MDAwMVwiLGUuU1RYPVwiXHUwMDAyXCIsZS5FVFg9XCJcdTAwMDNcIixlLkVPVD1cIlx1MDAwNFwiLGUuRU5RPVwiXHUwMDA1XCIsZS5BQ0s9XCJcdTAwMDZcIixlLkJFTD1cIlx1MDAwN1wiLGUuQlM9XCJcXGJcIixlLkhUPVwiXFx0XCIsZS5MRj1cIlxcblwiLGUuVlQ9XCJcXHZcIixlLkZGPVwiXFxmXCIsZS5DUj1cIlxcclwiLGUuU089XCJcdTAwMGVcIixlLlNJPVwiXHUwMDBmXCIsZS5ETEU9XCJcdTAwMTBcIixlLkRDMT1cIlx1MDAxMVwiLGUuREMyPVwiXHUwMDEyXCIsZS5EQzM9XCJcdTAwMTNcIixlLkRDND1cIlx1MDAxNFwiLGUuTkFLPVwiXHUwMDE1XCIsZS5TWU49XCJcdTAwMTZcIixlLkVUQj1cIlx1MDAxN1wiLGUuQ0FOPVwiXHUwMDE4XCIsZS5FTT1cIlx1MDAxOVwiLGUuU1VCPVwiXHUwMDFhXCIsZS5FU0M9XCJcdTAwMWJcIixlLkZTPVwiXHUwMDFjXCIsZS5HUz1cIlx1MDAxZFwiLGUuUlM9XCJcdTAwMWVcIixlLlVTPVwiXHUwMDFmXCIsZS5TUD1cIiBcIixlLkRFTD1cIn9cIn0oaT10LkMwfHwodC5DMD17fSkpLChzPXQuQzF8fCh0LkMxPXt9KSkuUEFEPVwiwoBcIixzLkhPUD1cIsKBXCIscy5CUEg9XCLCglwiLHMuTkJIPVwiwoNcIixzLklORD1cIsKEXCIscy5ORUw9XCLChVwiLHMuU1NBPVwiwoZcIixzLkVTQT1cIsKHXCIscy5IVFM9XCLCiFwiLHMuSFRKPVwiwolcIixzLlZUUz1cIsKKXCIscy5QTEQ9XCLCi1wiLHMuUExVPVwiwoxcIixzLlJJPVwiwo1cIixzLlNTMj1cIsKOXCIscy5TUzM9XCLCj1wiLHMuRENTPVwiwpBcIixzLlBVMT1cIsKRXCIscy5QVTI9XCLCklwiLHMuU1RTPVwiwpNcIixzLkNDSD1cIsKUXCIscy5NVz1cIsKVXCIscy5TUEE9XCLCllwiLHMuRVBBPVwiwpdcIixzLlNPUz1cIsKYXCIscy5TR0NJPVwiwplcIixzLlNDST1cIsKaXCIscy5DU0k9XCLCm1wiLHMuU1Q9XCLCnFwiLHMuT1NDPVwiwp1cIixzLlBNPVwiwp5cIixzLkFQQz1cIsKfXCIsKHQuQzFfRVNDQVBFRHx8KHQuQzFfRVNDQVBFRD17fSkpLlNUPWAke2kuRVNDfVxcXFxgfSw3Mzk5OihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmV2YWx1YXRlS2V5Ym9hcmRFdmVudD12b2lkIDA7Y29uc3Qgcz1pKDI1ODQpLHI9ezQ4OltcIjBcIixcIilcIl0sNDk6W1wiMVwiLFwiIVwiXSw1MDpbXCIyXCIsXCJAXCJdLDUxOltcIjNcIixcIiNcIl0sNTI6W1wiNFwiLFwiJFwiXSw1MzpbXCI1XCIsXCIlXCJdLDU0OltcIjZcIixcIl5cIl0sNTU6W1wiN1wiLFwiJlwiXSw1NjpbXCI4XCIsXCIqXCJdLDU3OltcIjlcIixcIihcIl0sMTg2OltcIjtcIixcIjpcIl0sMTg3OltcIj1cIixcIitcIl0sMTg4OltcIixcIixcIjxcIl0sMTg5OltcIi1cIixcIl9cIl0sMTkwOltcIi5cIixcIj5cIl0sMTkxOltcIi9cIixcIj9cIl0sMTkyOltcImBcIixcIn5cIl0sMjE5OltcIltcIixcIntcIl0sMjIwOltcIlxcXFxcIixcInxcIl0sMjIxOltcIl1cIixcIn1cIl0sMjIyOltcIidcIiwnXCInXX07dC5ldmFsdWF0ZUtleWJvYXJkRXZlbnQ9ZnVuY3Rpb24oZSx0LGksbil7Y29uc3Qgbz17dHlwZTowLGNhbmNlbDohMSxrZXk6dm9pZCAwfSxhPShlLnNoaWZ0S2V5PzE6MCl8KGUuYWx0S2V5PzI6MCl8KGUuY3RybEtleT80OjApfChlLm1ldGFLZXk/ODowKTtzd2l0Y2goZS5rZXlDb2RlKXtjYXNlIDA6XCJVSUtleUlucHV0VXBBcnJvd1wiPT09ZS5rZXk/by5rZXk9dD9zLkMwLkVTQytcIk9BXCI6cy5DMC5FU0MrXCJbQVwiOlwiVUlLZXlJbnB1dExlZnRBcnJvd1wiPT09ZS5rZXk/by5rZXk9dD9zLkMwLkVTQytcIk9EXCI6cy5DMC5FU0MrXCJbRFwiOlwiVUlLZXlJbnB1dFJpZ2h0QXJyb3dcIj09PWUua2V5P28ua2V5PXQ/cy5DMC5FU0MrXCJPQ1wiOnMuQzAuRVNDK1wiW0NcIjpcIlVJS2V5SW5wdXREb3duQXJyb3dcIj09PWUua2V5JiYoby5rZXk9dD9zLkMwLkVTQytcIk9CXCI6cy5DMC5FU0MrXCJbQlwiKTticmVhaztjYXNlIDg6aWYoZS5hbHRLZXkpe28ua2V5PXMuQzAuRVNDK3MuQzAuREVMO2JyZWFrfW8ua2V5PXMuQzAuREVMO2JyZWFrO2Nhc2UgOTppZihlLnNoaWZ0S2V5KXtvLmtleT1zLkMwLkVTQytcIltaXCI7YnJlYWt9by5rZXk9cy5DMC5IVCxvLmNhbmNlbD0hMDticmVhaztjYXNlIDEzOm8ua2V5PWUuYWx0S2V5P3MuQzAuRVNDK3MuQzAuQ1I6cy5DMC5DUixvLmNhbmNlbD0hMDticmVhaztjYXNlIDI3Om8ua2V5PXMuQzAuRVNDLGUuYWx0S2V5JiYoby5rZXk9cy5DMC5FU0Mrcy5DMC5FU0MpLG8uY2FuY2VsPSEwO2JyZWFrO2Nhc2UgMzc6aWYoZS5tZXRhS2V5KWJyZWFrO2E/KG8ua2V5PXMuQzAuRVNDK1wiWzE7XCIrKGErMSkrXCJEXCIsby5rZXk9PT1zLkMwLkVTQytcIlsxOzNEXCImJihvLmtleT1zLkMwLkVTQysoaT9cImJcIjpcIlsxOzVEXCIpKSk6by5rZXk9dD9zLkMwLkVTQytcIk9EXCI6cy5DMC5FU0MrXCJbRFwiO2JyZWFrO2Nhc2UgMzk6aWYoZS5tZXRhS2V5KWJyZWFrO2E/KG8ua2V5PXMuQzAuRVNDK1wiWzE7XCIrKGErMSkrXCJDXCIsby5rZXk9PT1zLkMwLkVTQytcIlsxOzNDXCImJihvLmtleT1zLkMwLkVTQysoaT9cImZcIjpcIlsxOzVDXCIpKSk6by5rZXk9dD9zLkMwLkVTQytcIk9DXCI6cy5DMC5FU0MrXCJbQ1wiO2JyZWFrO2Nhc2UgMzg6aWYoZS5tZXRhS2V5KWJyZWFrO2E/KG8ua2V5PXMuQzAuRVNDK1wiWzE7XCIrKGErMSkrXCJBXCIsaXx8by5rZXkhPT1zLkMwLkVTQytcIlsxOzNBXCJ8fChvLmtleT1zLkMwLkVTQytcIlsxOzVBXCIpKTpvLmtleT10P3MuQzAuRVNDK1wiT0FcIjpzLkMwLkVTQytcIltBXCI7YnJlYWs7Y2FzZSA0MDppZihlLm1ldGFLZXkpYnJlYWs7YT8oby5rZXk9cy5DMC5FU0MrXCJbMTtcIisoYSsxKStcIkJcIixpfHxvLmtleSE9PXMuQzAuRVNDK1wiWzE7M0JcInx8KG8ua2V5PXMuQzAuRVNDK1wiWzE7NUJcIikpOm8ua2V5PXQ/cy5DMC5FU0MrXCJPQlwiOnMuQzAuRVNDK1wiW0JcIjticmVhaztjYXNlIDQ1OmUuc2hpZnRLZXl8fGUuY3RybEtleXx8KG8ua2V5PXMuQzAuRVNDK1wiWzJ+XCIpO2JyZWFrO2Nhc2UgNDY6by5rZXk9YT9zLkMwLkVTQytcIlszO1wiKyhhKzEpK1wiflwiOnMuQzAuRVNDK1wiWzN+XCI7YnJlYWs7Y2FzZSAzNjpvLmtleT1hP3MuQzAuRVNDK1wiWzE7XCIrKGErMSkrXCJIXCI6dD9zLkMwLkVTQytcIk9IXCI6cy5DMC5FU0MrXCJbSFwiO2JyZWFrO2Nhc2UgMzU6by5rZXk9YT9zLkMwLkVTQytcIlsxO1wiKyhhKzEpK1wiRlwiOnQ/cy5DMC5FU0MrXCJPRlwiOnMuQzAuRVNDK1wiW0ZcIjticmVhaztjYXNlIDMzOmUuc2hpZnRLZXk/by50eXBlPTI6ZS5jdHJsS2V5P28ua2V5PXMuQzAuRVNDK1wiWzU7XCIrKGErMSkrXCJ+XCI6by5rZXk9cy5DMC5FU0MrXCJbNX5cIjticmVhaztjYXNlIDM0OmUuc2hpZnRLZXk/by50eXBlPTM6ZS5jdHJsS2V5P28ua2V5PXMuQzAuRVNDK1wiWzY7XCIrKGErMSkrXCJ+XCI6by5rZXk9cy5DMC5FU0MrXCJbNn5cIjticmVhaztjYXNlIDExMjpvLmtleT1hP3MuQzAuRVNDK1wiWzE7XCIrKGErMSkrXCJQXCI6cy5DMC5FU0MrXCJPUFwiO2JyZWFrO2Nhc2UgMTEzOm8ua2V5PWE/cy5DMC5FU0MrXCJbMTtcIisoYSsxKStcIlFcIjpzLkMwLkVTQytcIk9RXCI7YnJlYWs7Y2FzZSAxMTQ6by5rZXk9YT9zLkMwLkVTQytcIlsxO1wiKyhhKzEpK1wiUlwiOnMuQzAuRVNDK1wiT1JcIjticmVhaztjYXNlIDExNTpvLmtleT1hP3MuQzAuRVNDK1wiWzE7XCIrKGErMSkrXCJTXCI6cy5DMC5FU0MrXCJPU1wiO2JyZWFrO2Nhc2UgMTE2Om8ua2V5PWE/cy5DMC5FU0MrXCJbMTU7XCIrKGErMSkrXCJ+XCI6cy5DMC5FU0MrXCJbMTV+XCI7YnJlYWs7Y2FzZSAxMTc6by5rZXk9YT9zLkMwLkVTQytcIlsxNztcIisoYSsxKStcIn5cIjpzLkMwLkVTQytcIlsxN35cIjticmVhaztjYXNlIDExODpvLmtleT1hP3MuQzAuRVNDK1wiWzE4O1wiKyhhKzEpK1wiflwiOnMuQzAuRVNDK1wiWzE4flwiO2JyZWFrO2Nhc2UgMTE5Om8ua2V5PWE/cy5DMC5FU0MrXCJbMTk7XCIrKGErMSkrXCJ+XCI6cy5DMC5FU0MrXCJbMTl+XCI7YnJlYWs7Y2FzZSAxMjA6by5rZXk9YT9zLkMwLkVTQytcIlsyMDtcIisoYSsxKStcIn5cIjpzLkMwLkVTQytcIlsyMH5cIjticmVhaztjYXNlIDEyMTpvLmtleT1hP3MuQzAuRVNDK1wiWzIxO1wiKyhhKzEpK1wiflwiOnMuQzAuRVNDK1wiWzIxflwiO2JyZWFrO2Nhc2UgMTIyOm8ua2V5PWE/cy5DMC5FU0MrXCJbMjM7XCIrKGErMSkrXCJ+XCI6cy5DMC5FU0MrXCJbMjN+XCI7YnJlYWs7Y2FzZSAxMjM6by5rZXk9YT9zLkMwLkVTQytcIlsyNDtcIisoYSsxKStcIn5cIjpzLkMwLkVTQytcIlsyNH5cIjticmVhaztkZWZhdWx0OmlmKCFlLmN0cmxLZXl8fGUuc2hpZnRLZXl8fGUuYWx0S2V5fHxlLm1ldGFLZXkpaWYoaSYmIW58fCFlLmFsdEtleXx8ZS5tZXRhS2V5KSFpfHxlLmFsdEtleXx8ZS5jdHJsS2V5fHxlLnNoaWZ0S2V5fHwhZS5tZXRhS2V5P2Uua2V5JiYhZS5jdHJsS2V5JiYhZS5hbHRLZXkmJiFlLm1ldGFLZXkmJmUua2V5Q29kZT49NDgmJjE9PT1lLmtleS5sZW5ndGg/by5rZXk9ZS5rZXk6ZS5rZXkmJmUuY3RybEtleSYmKFwiX1wiPT09ZS5rZXkmJihvLmtleT1zLkMwLlVTKSxcIkBcIj09PWUua2V5JiYoby5rZXk9cy5DMC5OVUwpKTo2NT09PWUua2V5Q29kZSYmKG8udHlwZT0xKTtlbHNle2NvbnN0IHQ9cltlLmtleUNvZGVdLGk9bnVsbD09dD92b2lkIDA6dFtlLnNoaWZ0S2V5PzE6MF07aWYoaSlvLmtleT1zLkMwLkVTQytpO2Vsc2UgaWYoZS5rZXlDb2RlPj02NSYmZS5rZXlDb2RlPD05MCl7Y29uc3QgdD1lLmN0cmxLZXk/ZS5rZXlDb2RlLTY0OmUua2V5Q29kZSszMjtsZXQgaT1TdHJpbmcuZnJvbUNoYXJDb2RlKHQpO2Uuc2hpZnRLZXkmJihpPWkudG9VcHBlckNhc2UoKSksby5rZXk9cy5DMC5FU0MraX1lbHNlIGlmKFwiRGVhZFwiPT09ZS5rZXkmJmUuY29kZS5zdGFydHNXaXRoKFwiS2V5XCIpKXtsZXQgdD1lLmNvZGUuc2xpY2UoMyw0KTtlLnNoaWZ0S2V5fHwodD10LnRvTG93ZXJDYXNlKCkpLG8ua2V5PXMuQzAuRVNDK3Qsby5jYW5jZWw9ITB9fWVsc2UgZS5rZXlDb2RlPj02NSYmZS5rZXlDb2RlPD05MD9vLmtleT1TdHJpbmcuZnJvbUNoYXJDb2RlKGUua2V5Q29kZS02NCk6MzI9PT1lLmtleUNvZGU/by5rZXk9cy5DMC5OVUw6ZS5rZXlDb2RlPj01MSYmZS5rZXlDb2RlPD01NT9vLmtleT1TdHJpbmcuZnJvbUNoYXJDb2RlKGUua2V5Q29kZS01MSsyNyk6NTY9PT1lLmtleUNvZGU/by5rZXk9cy5DMC5ERUw6MjE5PT09ZS5rZXlDb2RlP28ua2V5PXMuQzAuRVNDOjIyMD09PWUua2V5Q29kZT9vLmtleT1zLkMwLkZTOjIyMT09PWUua2V5Q29kZSYmKG8ua2V5PXMuQzAuR1MpfXJldHVybiBvfX0sNDgyOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5VdGY4VG9VdGYzMj10LlN0cmluZ1RvVXRmMzI9dC51dGYzMlRvU3RyaW5nPXQuc3RyaW5nRnJvbUNvZGVQb2ludD12b2lkIDAsdC5zdHJpbmdGcm9tQ29kZVBvaW50PWZ1bmN0aW9uKGUpe3JldHVybiBlPjY1NTM1PyhlLT02NTUzNixTdHJpbmcuZnJvbUNoYXJDb2RlKDU1Mjk2KyhlPj4xMCkpK1N0cmluZy5mcm9tQ2hhckNvZGUoZSUxMDI0KzU2MzIwKSk6U3RyaW5nLmZyb21DaGFyQ29kZShlKX0sdC51dGYzMlRvU3RyaW5nPWZ1bmN0aW9uKGUsdD0wLGk9ZS5sZW5ndGgpe2xldCBzPVwiXCI7Zm9yKGxldCByPXQ7cjxpOysrcil7bGV0IHQ9ZVtyXTt0PjY1NTM1Pyh0LT02NTUzNixzKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU1Mjk2Kyh0Pj4xMCkpK1N0cmluZy5mcm9tQ2hhckNvZGUodCUxMDI0KzU2MzIwKSk6cys9U3RyaW5nLmZyb21DaGFyQ29kZSh0KX1yZXR1cm4gc30sdC5TdHJpbmdUb1V0ZjMyPWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5faW50ZXJpbT0wfWNsZWFyKCl7dGhpcy5faW50ZXJpbT0wfWRlY29kZShlLHQpe2NvbnN0IGk9ZS5sZW5ndGg7aWYoIWkpcmV0dXJuIDA7bGV0IHM9MCxyPTA7aWYodGhpcy5faW50ZXJpbSl7Y29uc3QgaT1lLmNoYXJDb2RlQXQocisrKTs1NjMyMDw9aSYmaTw9NTczNDM/dFtzKytdPTEwMjQqKHRoaXMuX2ludGVyaW0tNTUyOTYpK2ktNTYzMjArNjU1MzY6KHRbcysrXT10aGlzLl9pbnRlcmltLHRbcysrXT1pKSx0aGlzLl9pbnRlcmltPTB9Zm9yKGxldCBuPXI7bjxpOysrbil7Y29uc3Qgcj1lLmNoYXJDb2RlQXQobik7aWYoNTUyOTY8PXImJnI8PTU2MzE5KXtpZigrK24+PWkpcmV0dXJuIHRoaXMuX2ludGVyaW09cixzO2NvbnN0IG89ZS5jaGFyQ29kZUF0KG4pOzU2MzIwPD1vJiZvPD01NzM0Mz90W3MrK109MTAyNCooci01NTI5Nikrby01NjMyMCs2NTUzNjoodFtzKytdPXIsdFtzKytdPW8pfWVsc2UgNjUyNzkhPT1yJiYodFtzKytdPXIpfXJldHVybiBzfX0sdC5VdGY4VG9VdGYzMj1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuaW50ZXJpbT1uZXcgVWludDhBcnJheSgzKX1jbGVhcigpe3RoaXMuaW50ZXJpbS5maWxsKDApfWRlY29kZShlLHQpe2NvbnN0IGk9ZS5sZW5ndGg7aWYoIWkpcmV0dXJuIDA7bGV0IHMscixuLG8sYT0wLGg9MCxjPTA7aWYodGhpcy5pbnRlcmltWzBdKXtsZXQgcz0hMSxyPXRoaXMuaW50ZXJpbVswXTtyJj0xOTI9PSgyMjQmcik/MzE6MjI0PT0oMjQwJnIpPzE1Ojc7bGV0IG4sbz0wO2Zvcig7KG49NjMmdGhpcy5pbnRlcmltWysrb10pJiZvPDQ7KXI8PD02LHJ8PW47Y29uc3QgaD0xOTI9PSgyMjQmdGhpcy5pbnRlcmltWzBdKT8yOjIyND09KDI0MCZ0aGlzLmludGVyaW1bMF0pPzM6NCxsPWgtbztmb3IoO2M8bDspe2lmKGM+PWkpcmV0dXJuIDA7aWYobj1lW2MrK10sMTI4IT0oMTkyJm4pKXtjLS0scz0hMDticmVha310aGlzLmludGVyaW1bbysrXT1uLHI8PD02LHJ8PTYzJm59c3x8KDI9PT1oP3I8MTI4P2MtLTp0W2ErK109cjozPT09aD9yPDIwNDh8fHI+PTU1Mjk2JiZyPD01NzM0M3x8NjUyNzk9PT1yfHwodFthKytdPXIpOnI8NjU1MzZ8fHI+MTExNDExMXx8KHRbYSsrXT1yKSksdGhpcy5pbnRlcmltLmZpbGwoMCl9Y29uc3QgbD1pLTQ7bGV0IGQ9Yztmb3IoO2Q8aTspe2Zvcig7ISghKGQ8bCl8fDEyOCYocz1lW2RdKXx8MTI4JihyPWVbZCsxXSl8fDEyOCYobj1lW2QrMl0pfHwxMjgmKG89ZVtkKzNdKSk7KXRbYSsrXT1zLHRbYSsrXT1yLHRbYSsrXT1uLHRbYSsrXT1vLGQrPTQ7aWYocz1lW2QrK10sczwxMjgpdFthKytdPXM7ZWxzZSBpZigxOTI9PSgyMjQmcykpe2lmKGQ+PWkpcmV0dXJuIHRoaXMuaW50ZXJpbVswXT1zLGE7aWYocj1lW2QrK10sMTI4IT0oMTkyJnIpKXtkLS07Y29udGludWV9aWYoaD0oMzEmcyk8PDZ8NjMmcixoPDEyOCl7ZC0tO2NvbnRpbnVlfXRbYSsrXT1ofWVsc2UgaWYoMjI0PT0oMjQwJnMpKXtpZihkPj1pKXJldHVybiB0aGlzLmludGVyaW1bMF09cyxhO2lmKHI9ZVtkKytdLDEyOCE9KDE5MiZyKSl7ZC0tO2NvbnRpbnVlfWlmKGQ+PWkpcmV0dXJuIHRoaXMuaW50ZXJpbVswXT1zLHRoaXMuaW50ZXJpbVsxXT1yLGE7aWYobj1lW2QrK10sMTI4IT0oMTkyJm4pKXtkLS07Y29udGludWV9aWYoaD0oMTUmcyk8PDEyfCg2MyZyKTw8Nnw2MyZuLGg8MjA0OHx8aD49NTUyOTYmJmg8PTU3MzQzfHw2NTI3OT09PWgpY29udGludWU7dFthKytdPWh9ZWxzZSBpZigyNDA9PSgyNDgmcykpe2lmKGQ+PWkpcmV0dXJuIHRoaXMuaW50ZXJpbVswXT1zLGE7aWYocj1lW2QrK10sMTI4IT0oMTkyJnIpKXtkLS07Y29udGludWV9aWYoZD49aSlyZXR1cm4gdGhpcy5pbnRlcmltWzBdPXMsdGhpcy5pbnRlcmltWzFdPXIsYTtpZihuPWVbZCsrXSwxMjghPSgxOTImbikpe2QtLTtjb250aW51ZX1pZihkPj1pKXJldHVybiB0aGlzLmludGVyaW1bMF09cyx0aGlzLmludGVyaW1bMV09cix0aGlzLmludGVyaW1bMl09bixhO2lmKG89ZVtkKytdLDEyOCE9KDE5MiZvKSl7ZC0tO2NvbnRpbnVlfWlmKGg9KDcmcyk8PDE4fCg2MyZyKTw8MTJ8KDYzJm4pPDw2fDYzJm8saDw2NTUzNnx8aD4xMTE0MTExKWNvbnRpbnVlO3RbYSsrXT1ofX1yZXR1cm4gYX19fSwyMjU6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuVW5pY29kZVY2PXZvaWQgMDtjb25zdCBzPWkoODI3Mykscj1bWzc2OCw4NzldLFsxMTU1LDExNThdLFsxMTYwLDExNjFdLFsxNDI1LDE0NjldLFsxNDcxLDE0NzFdLFsxNDczLDE0NzRdLFsxNDc2LDE0NzddLFsxNDc5LDE0NzldLFsxNTM2LDE1MzldLFsxNTUyLDE1NTddLFsxNjExLDE2MzBdLFsxNjQ4LDE2NDhdLFsxNzUwLDE3NjRdLFsxNzY3LDE3NjhdLFsxNzcwLDE3NzNdLFsxODA3LDE4MDddLFsxODA5LDE4MDldLFsxODQwLDE4NjZdLFsxOTU4LDE5NjhdLFsyMDI3LDIwMzVdLFsyMzA1LDIzMDZdLFsyMzY0LDIzNjRdLFsyMzY5LDIzNzZdLFsyMzgxLDIzODFdLFsyMzg1LDIzODhdLFsyNDAyLDI0MDNdLFsyNDMzLDI0MzNdLFsyNDkyLDI0OTJdLFsyNDk3LDI1MDBdLFsyNTA5LDI1MDldLFsyNTMwLDI1MzFdLFsyNTYxLDI1NjJdLFsyNjIwLDI2MjBdLFsyNjI1LDI2MjZdLFsyNjMxLDI2MzJdLFsyNjM1LDI2MzddLFsyNjcyLDI2NzNdLFsyNjg5LDI2OTBdLFsyNzQ4LDI3NDhdLFsyNzUzLDI3NTddLFsyNzU5LDI3NjBdLFsyNzY1LDI3NjVdLFsyNzg2LDI3ODddLFsyODE3LDI4MTddLFsyODc2LDI4NzZdLFsyODc5LDI4NzldLFsyODgxLDI4ODNdLFsyODkzLDI4OTNdLFsyOTAyLDI5MDJdLFsyOTQ2LDI5NDZdLFszMDA4LDMwMDhdLFszMDIxLDMwMjFdLFszMTM0LDMxMzZdLFszMTQyLDMxNDRdLFszMTQ2LDMxNDldLFszMTU3LDMxNThdLFszMjYwLDMyNjBdLFszMjYzLDMyNjNdLFszMjcwLDMyNzBdLFszMjc2LDMyNzddLFszMjk4LDMyOTldLFszMzkzLDMzOTVdLFszNDA1LDM0MDVdLFszNTMwLDM1MzBdLFszNTM4LDM1NDBdLFszNTQyLDM1NDJdLFszNjMzLDM2MzNdLFszNjM2LDM2NDJdLFszNjU1LDM2NjJdLFszNzYxLDM3NjFdLFszNzY0LDM3NjldLFszNzcxLDM3NzJdLFszNzg0LDM3ODldLFszODY0LDM4NjVdLFszODkzLDM4OTNdLFszODk1LDM4OTVdLFszODk3LDM4OTddLFszOTUzLDM5NjZdLFszOTY4LDM5NzJdLFszOTc0LDM5NzVdLFszOTg0LDM5OTFdLFszOTkzLDQwMjhdLFs0MDM4LDQwMzhdLFs0MTQxLDQxNDRdLFs0MTQ2LDQxNDZdLFs0MTUwLDQxNTFdLFs0MTUzLDQxNTNdLFs0MTg0LDQxODVdLFs0NDQ4LDQ2MDddLFs0OTU5LDQ5NTldLFs1OTA2LDU5MDhdLFs1OTM4LDU5NDBdLFs1OTcwLDU5NzFdLFs2MDAyLDYwMDNdLFs2MDY4LDYwNjldLFs2MDcxLDYwNzddLFs2MDg2LDYwODZdLFs2MDg5LDYwOTldLFs2MTA5LDYxMDldLFs2MTU1LDYxNTddLFs2MzEzLDYzMTNdLFs2NDMyLDY0MzRdLFs2NDM5LDY0NDBdLFs2NDUwLDY0NTBdLFs2NDU3LDY0NTldLFs2Njc5LDY2ODBdLFs2OTEyLDY5MTVdLFs2OTY0LDY5NjRdLFs2OTY2LDY5NzBdLFs2OTcyLDY5NzJdLFs2OTc4LDY5NzhdLFs3MDE5LDcwMjddLFs3NjE2LDc2MjZdLFs3Njc4LDc2NzldLFs4MjAzLDgyMDddLFs4MjM0LDgyMzhdLFs4Mjg4LDgyOTFdLFs4Mjk4LDgzMDNdLFs4NDAwLDg0MzFdLFsxMjMzMCwxMjMzNV0sWzEyNDQxLDEyNDQyXSxbNDMwMTQsNDMwMTRdLFs0MzAxOSw0MzAxOV0sWzQzMDQ1LDQzMDQ2XSxbNjQyODYsNjQyODZdLFs2NTAyNCw2NTAzOV0sWzY1MDU2LDY1MDU5XSxbNjUyNzksNjUyNzldLFs2NTUyOSw2NTUzMV1dLG49W1s2ODA5Nyw2ODA5OV0sWzY4MTAxLDY4MTAyXSxbNjgxMDgsNjgxMTFdLFs2ODE1Miw2ODE1NF0sWzY4MTU5LDY4MTU5XSxbMTE5MTQzLDExOTE0NV0sWzExOTE1NSwxMTkxNzBdLFsxMTkxNzMsMTE5MTc5XSxbMTE5MjEwLDExOTIxM10sWzExOTM2MiwxMTkzNjRdLFs5MTc1MDUsOTE3NTA1XSxbOTE3NTM2LDkxNzYzMV0sWzkxNzc2MCw5MTc5OTldXTtsZXQgbzt0LlVuaWNvZGVWNj1jbGFzc3tjb25zdHJ1Y3Rvcigpe2lmKHRoaXMudmVyc2lvbj1cIjZcIiwhbyl7bz1uZXcgVWludDhBcnJheSg2NTUzNiksKDAscy5maWxsKShvLDEpLG9bMF09MCwoMCxzLmZpbGwpKG8sMCwxLDMyKSwoMCxzLmZpbGwpKG8sMCwxMjcsMTYwKSwoMCxzLmZpbGwpKG8sMiw0MzUyLDQ0NDgpLG9bOTAwMV09MixvWzkwMDJdPTIsKDAscy5maWxsKShvLDIsMTE5MDQsNDIxOTIpLG9bMTIzNTFdPTEsKDAscy5maWxsKShvLDIsNDQwMzIsNTUyMDQpLCgwLHMuZmlsbCkobywyLDYzNzQ0LDY0MjU2KSwoMCxzLmZpbGwpKG8sMiw2NTA0MCw2NTA1MCksKDAscy5maWxsKShvLDIsNjUwNzIsNjUxMzYpLCgwLHMuZmlsbCkobywyLDY1MjgwLDY1Mzc3KSwoMCxzLmZpbGwpKG8sMiw2NTUwNCw2NTUxMSk7Zm9yKGxldCBlPTA7ZTxyLmxlbmd0aDsrK2UpKDAscy5maWxsKShvLDAscltlXVswXSxyW2VdWzFdKzEpfX13Y3dpZHRoKGUpe3JldHVybiBlPDMyPzA6ZTwxMjc/MTplPDY1NTM2P29bZV06ZnVuY3Rpb24oZSx0KXtsZXQgaSxzPTAscj10Lmxlbmd0aC0xO2lmKGU8dFswXVswXXx8ZT50W3JdWzFdKXJldHVybiExO2Zvcig7cj49czspaWYoaT1zK3I+PjEsZT50W2ldWzFdKXM9aSsxO2Vsc2V7aWYoIShlPHRbaV1bMF0pKXJldHVybiEwO3I9aS0xfXJldHVybiExfShlLG4pPzA6ZT49MTMxMDcyJiZlPD0xOTY2MDV8fGU+PTE5NjYwOCYmZTw9MjYyMTQxPzI6MX19fSw1OTgxOihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LldyaXRlQnVmZmVyPXZvaWQgMDtjb25zdCBzPWkoODQ2MCkscj1cInVuZGVmaW5lZFwiPT10eXBlb2YgcXVldWVNaWNyb3Rhc2s/ZT0+e1Byb21pc2UucmVzb2x2ZSgpLnRoZW4oZSl9OnF1ZXVlTWljcm90YXNrO3QuV3JpdGVCdWZmZXI9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dGhpcy5fYWN0aW9uPWUsdGhpcy5fd3JpdGVCdWZmZXI9W10sdGhpcy5fY2FsbGJhY2tzPVtdLHRoaXMuX3BlbmRpbmdEYXRhPTAsdGhpcy5fYnVmZmVyT2Zmc2V0PTAsdGhpcy5faXNTeW5jV3JpdGluZz0hMSx0aGlzLl9zeW5jQ2FsbHM9MCx0aGlzLl9vbldyaXRlUGFyc2VkPW5ldyBzLkV2ZW50RW1pdHRlcn1nZXQgb25Xcml0ZVBhcnNlZCgpe3JldHVybiB0aGlzLl9vbldyaXRlUGFyc2VkLmV2ZW50fXdyaXRlU3luYyhlLHQpe2lmKHZvaWQgMCE9PXQmJnRoaXMuX3N5bmNDYWxscz50KXJldHVybiB2b2lkKHRoaXMuX3N5bmNDYWxscz0wKTtpZih0aGlzLl9wZW5kaW5nRGF0YSs9ZS5sZW5ndGgsdGhpcy5fd3JpdGVCdWZmZXIucHVzaChlKSx0aGlzLl9jYWxsYmFja3MucHVzaCh2b2lkIDApLHRoaXMuX3N5bmNDYWxscysrLHRoaXMuX2lzU3luY1dyaXRpbmcpcmV0dXJuO2xldCBpO2Zvcih0aGlzLl9pc1N5bmNXcml0aW5nPSEwO2k9dGhpcy5fd3JpdGVCdWZmZXIuc2hpZnQoKTspe3RoaXMuX2FjdGlvbihpKTtjb25zdCBlPXRoaXMuX2NhbGxiYWNrcy5zaGlmdCgpO2UmJmUoKX10aGlzLl9wZW5kaW5nRGF0YT0wLHRoaXMuX2J1ZmZlck9mZnNldD0yMTQ3NDgzNjQ3LHRoaXMuX2lzU3luY1dyaXRpbmc9ITEsdGhpcy5fc3luY0NhbGxzPTB9d3JpdGUoZSx0KXtpZih0aGlzLl9wZW5kaW5nRGF0YT41ZTcpdGhyb3cgbmV3IEVycm9yKFwid3JpdGUgZGF0YSBkaXNjYXJkZWQsIHVzZSBmbG93IGNvbnRyb2wgdG8gYXZvaWQgbG9zaW5nIGRhdGFcIik7dGhpcy5fd3JpdGVCdWZmZXIubGVuZ3RofHwodGhpcy5fYnVmZmVyT2Zmc2V0PTAsc2V0VGltZW91dCgoKCk9PnRoaXMuX2lubmVyV3JpdGUoKSkpKSx0aGlzLl9wZW5kaW5nRGF0YSs9ZS5sZW5ndGgsdGhpcy5fd3JpdGVCdWZmZXIucHVzaChlKSx0aGlzLl9jYWxsYmFja3MucHVzaCh0KX1faW5uZXJXcml0ZShlPTAsdD0hMCl7Y29uc3QgaT1lfHxEYXRlLm5vdygpO2Zvcig7dGhpcy5fd3JpdGVCdWZmZXIubGVuZ3RoPnRoaXMuX2J1ZmZlck9mZnNldDspe2NvbnN0IGU9dGhpcy5fd3JpdGVCdWZmZXJbdGhpcy5fYnVmZmVyT2Zmc2V0XSxzPXRoaXMuX2FjdGlvbihlLHQpO2lmKHMpe2NvbnN0IGU9ZT0+RGF0ZS5ub3coKS1pPj0xMj9zZXRUaW1lb3V0KCgoKT0+dGhpcy5faW5uZXJXcml0ZSgwLGUpKSk6dGhpcy5faW5uZXJXcml0ZShpLGUpO3JldHVybiB2b2lkIHMuY2F0Y2goKGU9PihyKCgoKT0+e3Rocm93IGV9KSksUHJvbWlzZS5yZXNvbHZlKCExKSkpKS50aGVuKGUpfWNvbnN0IG49dGhpcy5fY2FsbGJhY2tzW3RoaXMuX2J1ZmZlck9mZnNldF07aWYobiYmbigpLHRoaXMuX2J1ZmZlck9mZnNldCsrLHRoaXMuX3BlbmRpbmdEYXRhLT1lLmxlbmd0aCxEYXRlLm5vdygpLWk+PTEyKWJyZWFrfXRoaXMuX3dyaXRlQnVmZmVyLmxlbmd0aD50aGlzLl9idWZmZXJPZmZzZXQ/KHRoaXMuX2J1ZmZlck9mZnNldD41MCYmKHRoaXMuX3dyaXRlQnVmZmVyPXRoaXMuX3dyaXRlQnVmZmVyLnNsaWNlKHRoaXMuX2J1ZmZlck9mZnNldCksdGhpcy5fY2FsbGJhY2tzPXRoaXMuX2NhbGxiYWNrcy5zbGljZSh0aGlzLl9idWZmZXJPZmZzZXQpLHRoaXMuX2J1ZmZlck9mZnNldD0wKSxzZXRUaW1lb3V0KCgoKT0+dGhpcy5faW5uZXJXcml0ZSgpKSkpOih0aGlzLl93cml0ZUJ1ZmZlci5sZW5ndGg9MCx0aGlzLl9jYWxsYmFja3MubGVuZ3RoPTAsdGhpcy5fcGVuZGluZ0RhdGE9MCx0aGlzLl9idWZmZXJPZmZzZXQ9MCksdGhpcy5fb25Xcml0ZVBhcnNlZC5maXJlKCl9fX0sNTk0MTooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQudG9SZ2JTdHJpbmc9dC5wYXJzZUNvbG9yPXZvaWQgMDtjb25zdCBpPS9eKFtcXGRhLWZdKVxcLyhbXFxkYS1mXSlcXC8oW1xcZGEtZl0pJHxeKFtcXGRhLWZdezJ9KVxcLyhbXFxkYS1mXXsyfSlcXC8oW1xcZGEtZl17Mn0pJHxeKFtcXGRhLWZdezN9KVxcLyhbXFxkYS1mXXszfSlcXC8oW1xcZGEtZl17M30pJHxeKFtcXGRhLWZdezR9KVxcLyhbXFxkYS1mXXs0fSlcXC8oW1xcZGEtZl17NH0pJC8scz0vXltcXGRhLWZdKyQvO2Z1bmN0aW9uIHIoZSx0KXtjb25zdCBpPWUudG9TdHJpbmcoMTYpLHM9aS5sZW5ndGg8Mj9cIjBcIitpOmk7c3dpdGNoKHQpe2Nhc2UgNDpyZXR1cm4gaVswXTtjYXNlIDg6cmV0dXJuIHM7Y2FzZSAxMjpyZXR1cm4ocytzKS5zbGljZSgwLDMpO2RlZmF1bHQ6cmV0dXJuIHMrc319dC5wYXJzZUNvbG9yPWZ1bmN0aW9uKGUpe2lmKCFlKXJldHVybjtsZXQgdD1lLnRvTG93ZXJDYXNlKCk7aWYoMD09PXQuaW5kZXhPZihcInJnYjpcIikpe3Q9dC5zbGljZSg0KTtjb25zdCBlPWkuZXhlYyh0KTtpZihlKXtjb25zdCB0PWVbMV0/MTU6ZVs0XT8yNTU6ZVs3XT80MDk1OjY1NTM1O3JldHVybltNYXRoLnJvdW5kKHBhcnNlSW50KGVbMV18fGVbNF18fGVbN118fGVbMTBdLDE2KS90KjI1NSksTWF0aC5yb3VuZChwYXJzZUludChlWzJdfHxlWzVdfHxlWzhdfHxlWzExXSwxNikvdCoyNTUpLE1hdGgucm91bmQocGFyc2VJbnQoZVszXXx8ZVs2XXx8ZVs5XXx8ZVsxMl0sMTYpL3QqMjU1KV19fWVsc2UgaWYoMD09PXQuaW5kZXhPZihcIiNcIikmJih0PXQuc2xpY2UoMSkscy5leGVjKHQpJiZbMyw2LDksMTJdLmluY2x1ZGVzKHQubGVuZ3RoKSkpe2NvbnN0IGU9dC5sZW5ndGgvMyxpPVswLDAsMF07Zm9yKGxldCBzPTA7czwzOysrcyl7Y29uc3Qgcj1wYXJzZUludCh0LnNsaWNlKGUqcyxlKnMrZSksMTYpO2lbc109MT09PWU/cjw8NDoyPT09ZT9yOjM9PT1lP3I+PjQ6cj4+OH1yZXR1cm4gaX19LHQudG9SZ2JTdHJpbmc9ZnVuY3Rpb24oZSx0PTE2KXtjb25zdFtpLHMsbl09ZTtyZXR1cm5gcmdiOiR7cihpLHQpfS8ke3Iocyx0KX0vJHtyKG4sdCl9YH19LDU3NzA6KGUsdCk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlBBWUxPQURfTElNSVQ9dm9pZCAwLHQuUEFZTE9BRF9MSU1JVD0xZTd9LDYzNTE6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuRGNzSGFuZGxlcj10LkRjc1BhcnNlcj12b2lkIDA7Y29uc3Qgcz1pKDQ4Mikscj1pKDg3NDIpLG49aSg1NzcwKSxvPVtdO3QuRGNzUGFyc2VyPWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5faGFuZGxlcnM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9hY3RpdmU9byx0aGlzLl9pZGVudD0wLHRoaXMuX2hhbmRsZXJGYj0oKT0+e30sdGhpcy5fc3RhY2s9e3BhdXNlZDohMSxsb29wUG9zaXRpb246MCxmYWxsVGhyb3VnaDohMX19ZGlzcG9zZSgpe3RoaXMuX2hhbmRsZXJzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5faGFuZGxlckZiPSgpPT57fSx0aGlzLl9hY3RpdmU9b31yZWdpc3RlckhhbmRsZXIoZSx0KXt2b2lkIDA9PT10aGlzLl9oYW5kbGVyc1tlXSYmKHRoaXMuX2hhbmRsZXJzW2VdPVtdKTtjb25zdCBpPXRoaXMuX2hhbmRsZXJzW2VdO3JldHVybiBpLnB1c2godCkse2Rpc3Bvc2U6KCk9Pntjb25zdCBlPWkuaW5kZXhPZih0KTstMSE9PWUmJmkuc3BsaWNlKGUsMSl9fX1jbGVhckhhbmRsZXIoZSl7dGhpcy5faGFuZGxlcnNbZV0mJmRlbGV0ZSB0aGlzLl9oYW5kbGVyc1tlXX1zZXRIYW5kbGVyRmFsbGJhY2soZSl7dGhpcy5faGFuZGxlckZiPWV9cmVzZXQoKXtpZih0aGlzLl9hY3RpdmUubGVuZ3RoKWZvcihsZXQgZT10aGlzLl9zdGFjay5wYXVzZWQ/dGhpcy5fc3RhY2subG9vcFBvc2l0aW9uLTE6dGhpcy5fYWN0aXZlLmxlbmd0aC0xO2U+PTA7LS1lKXRoaXMuX2FjdGl2ZVtlXS51bmhvb2soITEpO3RoaXMuX3N0YWNrLnBhdXNlZD0hMSx0aGlzLl9hY3RpdmU9byx0aGlzLl9pZGVudD0wfWhvb2soZSx0KXtpZih0aGlzLnJlc2V0KCksdGhpcy5faWRlbnQ9ZSx0aGlzLl9hY3RpdmU9dGhpcy5faGFuZGxlcnNbZV18fG8sdGhpcy5fYWN0aXZlLmxlbmd0aClmb3IobGV0IGU9dGhpcy5fYWN0aXZlLmxlbmd0aC0xO2U+PTA7ZS0tKXRoaXMuX2FjdGl2ZVtlXS5ob29rKHQpO2Vsc2UgdGhpcy5faGFuZGxlckZiKHRoaXMuX2lkZW50LFwiSE9PS1wiLHQpfXB1dChlLHQsaSl7aWYodGhpcy5fYWN0aXZlLmxlbmd0aClmb3IobGV0IHM9dGhpcy5fYWN0aXZlLmxlbmd0aC0xO3M+PTA7cy0tKXRoaXMuX2FjdGl2ZVtzXS5wdXQoZSx0LGkpO2Vsc2UgdGhpcy5faGFuZGxlckZiKHRoaXMuX2lkZW50LFwiUFVUXCIsKDAscy51dGYzMlRvU3RyaW5nKShlLHQsaSkpfXVuaG9vayhlLHQ9ITApe2lmKHRoaXMuX2FjdGl2ZS5sZW5ndGgpe2xldCBpPSExLHM9dGhpcy5fYWN0aXZlLmxlbmd0aC0xLHI9ITE7aWYodGhpcy5fc3RhY2sucGF1c2VkJiYocz10aGlzLl9zdGFjay5sb29wUG9zaXRpb24tMSxpPXQscj10aGlzLl9zdGFjay5mYWxsVGhyb3VnaCx0aGlzLl9zdGFjay5wYXVzZWQ9ITEpLCFyJiYhMT09PWkpe2Zvcig7cz49MCYmKGk9dGhpcy5fYWN0aXZlW3NdLnVuaG9vayhlKSwhMCE9PWkpO3MtLSlpZihpIGluc3RhbmNlb2YgUHJvbWlzZSlyZXR1cm4gdGhpcy5fc3RhY2sucGF1c2VkPSEwLHRoaXMuX3N0YWNrLmxvb3BQb3NpdGlvbj1zLHRoaXMuX3N0YWNrLmZhbGxUaHJvdWdoPSExLGk7cy0tfWZvcig7cz49MDtzLS0paWYoaT10aGlzLl9hY3RpdmVbc10udW5ob29rKCExKSxpIGluc3RhbmNlb2YgUHJvbWlzZSlyZXR1cm4gdGhpcy5fc3RhY2sucGF1c2VkPSEwLHRoaXMuX3N0YWNrLmxvb3BQb3NpdGlvbj1zLHRoaXMuX3N0YWNrLmZhbGxUaHJvdWdoPSEwLGl9ZWxzZSB0aGlzLl9oYW5kbGVyRmIodGhpcy5faWRlbnQsXCJVTkhPT0tcIixlKTt0aGlzLl9hY3RpdmU9byx0aGlzLl9pZGVudD0wfX07Y29uc3QgYT1uZXcgci5QYXJhbXM7YS5hZGRQYXJhbSgwKSx0LkRjc0hhbmRsZXI9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dGhpcy5faGFuZGxlcj1lLHRoaXMuX2RhdGE9XCJcIix0aGlzLl9wYXJhbXM9YSx0aGlzLl9oaXRMaW1pdD0hMX1ob29rKGUpe3RoaXMuX3BhcmFtcz1lLmxlbmd0aD4xfHxlLnBhcmFtc1swXT9lLmNsb25lKCk6YSx0aGlzLl9kYXRhPVwiXCIsdGhpcy5faGl0TGltaXQ9ITF9cHV0KGUsdCxpKXt0aGlzLl9oaXRMaW1pdHx8KHRoaXMuX2RhdGErPSgwLHMudXRmMzJUb1N0cmluZykoZSx0LGkpLHRoaXMuX2RhdGEubGVuZ3RoPm4uUEFZTE9BRF9MSU1JVCYmKHRoaXMuX2RhdGE9XCJcIix0aGlzLl9oaXRMaW1pdD0hMCkpfXVuaG9vayhlKXtsZXQgdD0hMTtpZih0aGlzLl9oaXRMaW1pdCl0PSExO2Vsc2UgaWYoZSYmKHQ9dGhpcy5faGFuZGxlcih0aGlzLl9kYXRhLHRoaXMuX3BhcmFtcyksdCBpbnN0YW5jZW9mIFByb21pc2UpKXJldHVybiB0LnRoZW4oKGU9Pih0aGlzLl9wYXJhbXM9YSx0aGlzLl9kYXRhPVwiXCIsdGhpcy5faGl0TGltaXQ9ITEsZSkpKTtyZXR1cm4gdGhpcy5fcGFyYW1zPWEsdGhpcy5fZGF0YT1cIlwiLHRoaXMuX2hpdExpbWl0PSExLHR9fX0sMjAxNTooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Fc2NhcGVTZXF1ZW5jZVBhcnNlcj10LlZUNTAwX1RSQU5TSVRJT05fVEFCTEU9dC5UcmFuc2l0aW9uVGFibGU9dm9pZCAwO2NvbnN0IHM9aSg4NDQpLHI9aSg4MjczKSxuPWkoODc0Miksbz1pKDYyNDIpLGE9aSg2MzUxKTtjbGFzcyBoe2NvbnN0cnVjdG9yKGUpe3RoaXMudGFibGU9bmV3IFVpbnQ4QXJyYXkoZSl9c2V0RGVmYXVsdChlLHQpeygwLHIuZmlsbCkodGhpcy50YWJsZSxlPDw0fHQpfWFkZChlLHQsaSxzKXt0aGlzLnRhYmxlW3Q8PDh8ZV09aTw8NHxzfWFkZE1hbnkoZSx0LGkscyl7Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspdGhpcy50YWJsZVt0PDw4fGVbcl1dPWk8PDR8c319dC5UcmFuc2l0aW9uVGFibGU9aDtjb25zdCBjPTE2MDt0LlZUNTAwX1RSQU5TSVRJT05fVEFCTEU9ZnVuY3Rpb24oKXtjb25zdCBlPW5ldyBoKDQwOTUpLHQ9QXJyYXkuYXBwbHkobnVsbCxBcnJheSgyNTYpKS5tYXAoKChlLHQpPT50KSksaT0oZSxpKT0+dC5zbGljZShlLGkpLHM9aSgzMiwxMjcpLHI9aSgwLDI0KTtyLnB1c2goMjUpLHIucHVzaC5hcHBseShyLGkoMjgsMzIpKTtjb25zdCBuPWkoMCwxNCk7bGV0IG87Zm9yKG8gaW4gZS5zZXREZWZhdWx0KDEsMCksZS5hZGRNYW55KHMsMCwyLDApLG4pZS5hZGRNYW55KFsyNCwyNiwxNTMsMTU0XSxvLDMsMCksZS5hZGRNYW55KGkoMTI4LDE0NCksbywzLDApLGUuYWRkTWFueShpKDE0NCwxNTIpLG8sMywwKSxlLmFkZCgxNTYsbywwLDApLGUuYWRkKDI3LG8sMTEsMSksZS5hZGQoMTU3LG8sNCw4KSxlLmFkZE1hbnkoWzE1MiwxNTgsMTU5XSxvLDAsNyksZS5hZGQoMTU1LG8sMTEsMyksZS5hZGQoMTQ0LG8sMTEsOSk7cmV0dXJuIGUuYWRkTWFueShyLDAsMywwKSxlLmFkZE1hbnkociwxLDMsMSksZS5hZGQoMTI3LDEsMCwxKSxlLmFkZE1hbnkociw4LDAsOCksZS5hZGRNYW55KHIsMywzLDMpLGUuYWRkKDEyNywzLDAsMyksZS5hZGRNYW55KHIsNCwzLDQpLGUuYWRkKDEyNyw0LDAsNCksZS5hZGRNYW55KHIsNiwzLDYpLGUuYWRkTWFueShyLDUsMyw1KSxlLmFkZCgxMjcsNSwwLDUpLGUuYWRkTWFueShyLDIsMywyKSxlLmFkZCgxMjcsMiwwLDIpLGUuYWRkKDkzLDEsNCw4KSxlLmFkZE1hbnkocyw4LDUsOCksZS5hZGQoMTI3LDgsNSw4KSxlLmFkZE1hbnkoWzE1NiwyNywyNCwyNiw3XSw4LDYsMCksZS5hZGRNYW55KGkoMjgsMzIpLDgsMCw4KSxlLmFkZE1hbnkoWzg4LDk0LDk1XSwxLDAsNyksZS5hZGRNYW55KHMsNywwLDcpLGUuYWRkTWFueShyLDcsMCw3KSxlLmFkZCgxNTYsNywwLDApLGUuYWRkKDEyNyw3LDAsNyksZS5hZGQoOTEsMSwxMSwzKSxlLmFkZE1hbnkoaSg2NCwxMjcpLDMsNywwKSxlLmFkZE1hbnkoaSg0OCw2MCksMyw4LDQpLGUuYWRkTWFueShbNjAsNjEsNjIsNjNdLDMsOSw0KSxlLmFkZE1hbnkoaSg0OCw2MCksNCw4LDQpLGUuYWRkTWFueShpKDY0LDEyNyksNCw3LDApLGUuYWRkTWFueShbNjAsNjEsNjIsNjNdLDQsMCw2KSxlLmFkZE1hbnkoaSgzMiw2NCksNiwwLDYpLGUuYWRkKDEyNyw2LDAsNiksZS5hZGRNYW55KGkoNjQsMTI3KSw2LDAsMCksZS5hZGRNYW55KGkoMzIsNDgpLDMsOSw1KSxlLmFkZE1hbnkoaSgzMiw0OCksNSw5LDUpLGUuYWRkTWFueShpKDQ4LDY0KSw1LDAsNiksZS5hZGRNYW55KGkoNjQsMTI3KSw1LDcsMCksZS5hZGRNYW55KGkoMzIsNDgpLDQsOSw1KSxlLmFkZE1hbnkoaSgzMiw0OCksMSw5LDIpLGUuYWRkTWFueShpKDMyLDQ4KSwyLDksMiksZS5hZGRNYW55KGkoNDgsMTI3KSwyLDEwLDApLGUuYWRkTWFueShpKDQ4LDgwKSwxLDEwLDApLGUuYWRkTWFueShpKDgxLDg4KSwxLDEwLDApLGUuYWRkTWFueShbODksOTAsOTJdLDEsMTAsMCksZS5hZGRNYW55KGkoOTYsMTI3KSwxLDEwLDApLGUuYWRkKDgwLDEsMTEsOSksZS5hZGRNYW55KHIsOSwwLDkpLGUuYWRkKDEyNyw5LDAsOSksZS5hZGRNYW55KGkoMjgsMzIpLDksMCw5KSxlLmFkZE1hbnkoaSgzMiw0OCksOSw5LDEyKSxlLmFkZE1hbnkoaSg0OCw2MCksOSw4LDEwKSxlLmFkZE1hbnkoWzYwLDYxLDYyLDYzXSw5LDksMTApLGUuYWRkTWFueShyLDExLDAsMTEpLGUuYWRkTWFueShpKDMyLDEyOCksMTEsMCwxMSksZS5hZGRNYW55KGkoMjgsMzIpLDExLDAsMTEpLGUuYWRkTWFueShyLDEwLDAsMTApLGUuYWRkKDEyNywxMCwwLDEwKSxlLmFkZE1hbnkoaSgyOCwzMiksMTAsMCwxMCksZS5hZGRNYW55KGkoNDgsNjApLDEwLDgsMTApLGUuYWRkTWFueShbNjAsNjEsNjIsNjNdLDEwLDAsMTEpLGUuYWRkTWFueShpKDMyLDQ4KSwxMCw5LDEyKSxlLmFkZE1hbnkociwxMiwwLDEyKSxlLmFkZCgxMjcsMTIsMCwxMiksZS5hZGRNYW55KGkoMjgsMzIpLDEyLDAsMTIpLGUuYWRkTWFueShpKDMyLDQ4KSwxMiw5LDEyKSxlLmFkZE1hbnkoaSg0OCw2NCksMTIsMCwxMSksZS5hZGRNYW55KGkoNjQsMTI3KSwxMiwxMiwxMyksZS5hZGRNYW55KGkoNjQsMTI3KSwxMCwxMiwxMyksZS5hZGRNYW55KGkoNjQsMTI3KSw5LDEyLDEzKSxlLmFkZE1hbnkociwxMywxMywxMyksZS5hZGRNYW55KHMsMTMsMTMsMTMpLGUuYWRkKDEyNywxMywwLDEzKSxlLmFkZE1hbnkoWzI3LDE1NiwyNCwyNl0sMTMsMTQsMCksZS5hZGQoYywwLDIsMCksZS5hZGQoYyw4LDUsOCksZS5hZGQoYyw2LDAsNiksZS5hZGQoYywxMSwwLDExKSxlLmFkZChjLDEzLDEzLDEzKSxlfSgpO2NsYXNzIGwgZXh0ZW5kcyBzLkRpc3Bvc2FibGV7Y29uc3RydWN0b3IoZT10LlZUNTAwX1RSQU5TSVRJT05fVEFCTEUpe3N1cGVyKCksdGhpcy5fdHJhbnNpdGlvbnM9ZSx0aGlzLl9wYXJzZVN0YWNrPXtzdGF0ZTowLGhhbmRsZXJzOltdLGhhbmRsZXJQb3M6MCx0cmFuc2l0aW9uOjAsY2h1bmtQb3M6MH0sdGhpcy5pbml0aWFsU3RhdGU9MCx0aGlzLmN1cnJlbnRTdGF0ZT10aGlzLmluaXRpYWxTdGF0ZSx0aGlzLl9wYXJhbXM9bmV3IG4uUGFyYW1zLHRoaXMuX3BhcmFtcy5hZGRQYXJhbSgwKSx0aGlzLl9jb2xsZWN0PTAsdGhpcy5wcmVjZWRpbmdDb2RlcG9pbnQ9MCx0aGlzLl9wcmludEhhbmRsZXJGYj0oZSx0LGkpPT57fSx0aGlzLl9leGVjdXRlSGFuZGxlckZiPWU9Pnt9LHRoaXMuX2NzaUhhbmRsZXJGYj0oZSx0KT0+e30sdGhpcy5fZXNjSGFuZGxlckZiPWU9Pnt9LHRoaXMuX2Vycm9ySGFuZGxlckZiPWU9PmUsdGhpcy5fcHJpbnRIYW5kbGVyPXRoaXMuX3ByaW50SGFuZGxlckZiLHRoaXMuX2V4ZWN1dGVIYW5kbGVycz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2NzaUhhbmRsZXJzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZXNjSGFuZGxlcnM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9vc2NQYXJzZXI9bmV3IG8uT3NjUGFyc2VyLHRoaXMuX2Rjc1BhcnNlcj1uZXcgYS5EY3NQYXJzZXIsdGhpcy5fZXJyb3JIYW5kbGVyPXRoaXMuX2Vycm9ySGFuZGxlckZiLHRoaXMucmVnaXN0ZXJFc2NIYW5kbGVyKHtmaW5hbDpcIlxcXFxcIn0sKCgpPT4hMCkpfV9pZGVudGlmaWVyKGUsdD1bNjQsMTI2XSl7bGV0IGk9MDtpZihlLnByZWZpeCl7aWYoZS5wcmVmaXgubGVuZ3RoPjEpdGhyb3cgbmV3IEVycm9yKFwib25seSBvbmUgYnl0ZSBhcyBwcmVmaXggc3VwcG9ydGVkXCIpO2lmKGk9ZS5wcmVmaXguY2hhckNvZGVBdCgwKSxpJiY2MD5pfHxpPjYzKXRocm93IG5ldyBFcnJvcihcInByZWZpeCBtdXN0IGJlIGluIHJhbmdlIDB4M2MgLi4gMHgzZlwiKX1pZihlLmludGVybWVkaWF0ZXMpe2lmKGUuaW50ZXJtZWRpYXRlcy5sZW5ndGg+Mil0aHJvdyBuZXcgRXJyb3IoXCJvbmx5IHR3byBieXRlcyBhcyBpbnRlcm1lZGlhdGVzIGFyZSBzdXBwb3J0ZWRcIik7Zm9yKGxldCB0PTA7dDxlLmludGVybWVkaWF0ZXMubGVuZ3RoOysrdCl7Y29uc3Qgcz1lLmludGVybWVkaWF0ZXMuY2hhckNvZGVBdCh0KTtpZigzMj5zfHxzPjQ3KXRocm93IG5ldyBFcnJvcihcImludGVybWVkaWF0ZSBtdXN0IGJlIGluIHJhbmdlIDB4MjAgLi4gMHgyZlwiKTtpPDw9OCxpfD1zfX1pZigxIT09ZS5maW5hbC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiZmluYWwgbXVzdCBiZSBhIHNpbmdsZSBieXRlXCIpO2NvbnN0IHM9ZS5maW5hbC5jaGFyQ29kZUF0KDApO2lmKHRbMF0+c3x8cz50WzFdKXRocm93IG5ldyBFcnJvcihgZmluYWwgbXVzdCBiZSBpbiByYW5nZSAke3RbMF19IC4uICR7dFsxXX1gKTtyZXR1cm4gaTw8PTgsaXw9cyxpfWlkZW50VG9TdHJpbmcoZSl7Y29uc3QgdD1bXTtmb3IoO2U7KXQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKDI1NSZlKSksZT4+PTg7cmV0dXJuIHQucmV2ZXJzZSgpLmpvaW4oXCJcIil9ZGlzcG9zZSgpe3RoaXMuX2NzaUhhbmRsZXJzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZXhlY3V0ZUhhbmRsZXJzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZXNjSGFuZGxlcnM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9vc2NQYXJzZXIuZGlzcG9zZSgpLHRoaXMuX2Rjc1BhcnNlci5kaXNwb3NlKCl9c2V0UHJpbnRIYW5kbGVyKGUpe3RoaXMuX3ByaW50SGFuZGxlcj1lfWNsZWFyUHJpbnRIYW5kbGVyKCl7dGhpcy5fcHJpbnRIYW5kbGVyPXRoaXMuX3ByaW50SGFuZGxlckZifXJlZ2lzdGVyRXNjSGFuZGxlcihlLHQpe2NvbnN0IGk9dGhpcy5faWRlbnRpZmllcihlLFs0OCwxMjZdKTt2b2lkIDA9PT10aGlzLl9lc2NIYW5kbGVyc1tpXSYmKHRoaXMuX2VzY0hhbmRsZXJzW2ldPVtdKTtjb25zdCBzPXRoaXMuX2VzY0hhbmRsZXJzW2ldO3JldHVybiBzLnB1c2godCkse2Rpc3Bvc2U6KCk9Pntjb25zdCBlPXMuaW5kZXhPZih0KTstMSE9PWUmJnMuc3BsaWNlKGUsMSl9fX1jbGVhckVzY0hhbmRsZXIoZSl7dGhpcy5fZXNjSGFuZGxlcnNbdGhpcy5faWRlbnRpZmllcihlLFs0OCwxMjZdKV0mJmRlbGV0ZSB0aGlzLl9lc2NIYW5kbGVyc1t0aGlzLl9pZGVudGlmaWVyKGUsWzQ4LDEyNl0pXX1zZXRFc2NIYW5kbGVyRmFsbGJhY2soZSl7dGhpcy5fZXNjSGFuZGxlckZiPWV9c2V0RXhlY3V0ZUhhbmRsZXIoZSx0KXt0aGlzLl9leGVjdXRlSGFuZGxlcnNbZS5jaGFyQ29kZUF0KDApXT10fWNsZWFyRXhlY3V0ZUhhbmRsZXIoZSl7dGhpcy5fZXhlY3V0ZUhhbmRsZXJzW2UuY2hhckNvZGVBdCgwKV0mJmRlbGV0ZSB0aGlzLl9leGVjdXRlSGFuZGxlcnNbZS5jaGFyQ29kZUF0KDApXX1zZXRFeGVjdXRlSGFuZGxlckZhbGxiYWNrKGUpe3RoaXMuX2V4ZWN1dGVIYW5kbGVyRmI9ZX1yZWdpc3RlckNzaUhhbmRsZXIoZSx0KXtjb25zdCBpPXRoaXMuX2lkZW50aWZpZXIoZSk7dm9pZCAwPT09dGhpcy5fY3NpSGFuZGxlcnNbaV0mJih0aGlzLl9jc2lIYW5kbGVyc1tpXT1bXSk7Y29uc3Qgcz10aGlzLl9jc2lIYW5kbGVyc1tpXTtyZXR1cm4gcy5wdXNoKHQpLHtkaXNwb3NlOigpPT57Y29uc3QgZT1zLmluZGV4T2YodCk7LTEhPT1lJiZzLnNwbGljZShlLDEpfX19Y2xlYXJDc2lIYW5kbGVyKGUpe3RoaXMuX2NzaUhhbmRsZXJzW3RoaXMuX2lkZW50aWZpZXIoZSldJiZkZWxldGUgdGhpcy5fY3NpSGFuZGxlcnNbdGhpcy5faWRlbnRpZmllcihlKV19c2V0Q3NpSGFuZGxlckZhbGxiYWNrKGUpe3RoaXMuX2NzaUhhbmRsZXJGYj1lfXJlZ2lzdGVyRGNzSGFuZGxlcihlLHQpe3JldHVybiB0aGlzLl9kY3NQYXJzZXIucmVnaXN0ZXJIYW5kbGVyKHRoaXMuX2lkZW50aWZpZXIoZSksdCl9Y2xlYXJEY3NIYW5kbGVyKGUpe3RoaXMuX2Rjc1BhcnNlci5jbGVhckhhbmRsZXIodGhpcy5faWRlbnRpZmllcihlKSl9c2V0RGNzSGFuZGxlckZhbGxiYWNrKGUpe3RoaXMuX2Rjc1BhcnNlci5zZXRIYW5kbGVyRmFsbGJhY2soZSl9cmVnaXN0ZXJPc2NIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMuX29zY1BhcnNlci5yZWdpc3RlckhhbmRsZXIoZSx0KX1jbGVhck9zY0hhbmRsZXIoZSl7dGhpcy5fb3NjUGFyc2VyLmNsZWFySGFuZGxlcihlKX1zZXRPc2NIYW5kbGVyRmFsbGJhY2soZSl7dGhpcy5fb3NjUGFyc2VyLnNldEhhbmRsZXJGYWxsYmFjayhlKX1zZXRFcnJvckhhbmRsZXIoZSl7dGhpcy5fZXJyb3JIYW5kbGVyPWV9Y2xlYXJFcnJvckhhbmRsZXIoKXt0aGlzLl9lcnJvckhhbmRsZXI9dGhpcy5fZXJyb3JIYW5kbGVyRmJ9cmVzZXQoKXt0aGlzLmN1cnJlbnRTdGF0ZT10aGlzLmluaXRpYWxTdGF0ZSx0aGlzLl9vc2NQYXJzZXIucmVzZXQoKSx0aGlzLl9kY3NQYXJzZXIucmVzZXQoKSx0aGlzLl9wYXJhbXMucmVzZXQoKSx0aGlzLl9wYXJhbXMuYWRkUGFyYW0oMCksdGhpcy5fY29sbGVjdD0wLHRoaXMucHJlY2VkaW5nQ29kZXBvaW50PTAsMCE9PXRoaXMuX3BhcnNlU3RhY2suc3RhdGUmJih0aGlzLl9wYXJzZVN0YWNrLnN0YXRlPTIsdGhpcy5fcGFyc2VTdGFjay5oYW5kbGVycz1bXSl9X3ByZXNlcnZlU3RhY2soZSx0LGkscyxyKXt0aGlzLl9wYXJzZVN0YWNrLnN0YXRlPWUsdGhpcy5fcGFyc2VTdGFjay5oYW5kbGVycz10LHRoaXMuX3BhcnNlU3RhY2suaGFuZGxlclBvcz1pLHRoaXMuX3BhcnNlU3RhY2sudHJhbnNpdGlvbj1zLHRoaXMuX3BhcnNlU3RhY2suY2h1bmtQb3M9cn1wYXJzZShlLHQsaSl7bGV0IHMscj0wLG49MCxvPTA7aWYodGhpcy5fcGFyc2VTdGFjay5zdGF0ZSlpZigyPT09dGhpcy5fcGFyc2VTdGFjay5zdGF0ZSl0aGlzLl9wYXJzZVN0YWNrLnN0YXRlPTAsbz10aGlzLl9wYXJzZVN0YWNrLmNodW5rUG9zKzE7ZWxzZXtpZih2b2lkIDA9PT1pfHwxPT09dGhpcy5fcGFyc2VTdGFjay5zdGF0ZSl0aHJvdyB0aGlzLl9wYXJzZVN0YWNrLnN0YXRlPTEsbmV3IEVycm9yKFwiaW1wcm9wZXIgY29udGludWF0aW9uIGR1ZSB0byBwcmV2aW91cyBhc3luYyBoYW5kbGVyLCBnaXZpbmcgdXAgcGFyc2luZ1wiKTtjb25zdCB0PXRoaXMuX3BhcnNlU3RhY2suaGFuZGxlcnM7bGV0IG49dGhpcy5fcGFyc2VTdGFjay5oYW5kbGVyUG9zLTE7c3dpdGNoKHRoaXMuX3BhcnNlU3RhY2suc3RhdGUpe2Nhc2UgMzppZighMT09PWkmJm4+LTEpZm9yKDtuPj0wJiYocz10W25dKHRoaXMuX3BhcmFtcyksITAhPT1zKTtuLS0paWYocyBpbnN0YW5jZW9mIFByb21pc2UpcmV0dXJuIHRoaXMuX3BhcnNlU3RhY2suaGFuZGxlclBvcz1uLHM7dGhpcy5fcGFyc2VTdGFjay5oYW5kbGVycz1bXTticmVhaztjYXNlIDQ6aWYoITE9PT1pJiZuPi0xKWZvcig7bj49MCYmKHM9dFtuXSgpLCEwIT09cyk7bi0tKWlmKHMgaW5zdGFuY2VvZiBQcm9taXNlKXJldHVybiB0aGlzLl9wYXJzZVN0YWNrLmhhbmRsZXJQb3M9bixzO3RoaXMuX3BhcnNlU3RhY2suaGFuZGxlcnM9W107YnJlYWs7Y2FzZSA2OmlmKHI9ZVt0aGlzLl9wYXJzZVN0YWNrLmNodW5rUG9zXSxzPXRoaXMuX2Rjc1BhcnNlci51bmhvb2soMjQhPT1yJiYyNiE9PXIsaSkscylyZXR1cm4gczsyNz09PXImJih0aGlzLl9wYXJzZVN0YWNrLnRyYW5zaXRpb258PTEpLHRoaXMuX3BhcmFtcy5yZXNldCgpLHRoaXMuX3BhcmFtcy5hZGRQYXJhbSgwKSx0aGlzLl9jb2xsZWN0PTA7YnJlYWs7Y2FzZSA1OmlmKHI9ZVt0aGlzLl9wYXJzZVN0YWNrLmNodW5rUG9zXSxzPXRoaXMuX29zY1BhcnNlci5lbmQoMjQhPT1yJiYyNiE9PXIsaSkscylyZXR1cm4gczsyNz09PXImJih0aGlzLl9wYXJzZVN0YWNrLnRyYW5zaXRpb258PTEpLHRoaXMuX3BhcmFtcy5yZXNldCgpLHRoaXMuX3BhcmFtcy5hZGRQYXJhbSgwKSx0aGlzLl9jb2xsZWN0PTB9dGhpcy5fcGFyc2VTdGFjay5zdGF0ZT0wLG89dGhpcy5fcGFyc2VTdGFjay5jaHVua1BvcysxLHRoaXMucHJlY2VkaW5nQ29kZXBvaW50PTAsdGhpcy5jdXJyZW50U3RhdGU9MTUmdGhpcy5fcGFyc2VTdGFjay50cmFuc2l0aW9ufWZvcihsZXQgaT1vO2k8dDsrK2kpe3N3aXRjaChyPWVbaV0sbj10aGlzLl90cmFuc2l0aW9ucy50YWJsZVt0aGlzLmN1cnJlbnRTdGF0ZTw8OHwocjwxNjA/cjpjKV0sbj4+NCl7Y2FzZSAyOmZvcihsZXQgcz1pKzE7Oysrcyl7aWYocz49dHx8KHI9ZVtzXSk8MzJ8fHI+MTI2JiZyPGMpe3RoaXMuX3ByaW50SGFuZGxlcihlLGkscyksaT1zLTE7YnJlYWt9aWYoKytzPj10fHwocj1lW3NdKTwzMnx8cj4xMjYmJnI8Yyl7dGhpcy5fcHJpbnRIYW5kbGVyKGUsaSxzKSxpPXMtMTticmVha31pZigrK3M+PXR8fChyPWVbc10pPDMyfHxyPjEyNiYmcjxjKXt0aGlzLl9wcmludEhhbmRsZXIoZSxpLHMpLGk9cy0xO2JyZWFrfWlmKCsrcz49dHx8KHI9ZVtzXSk8MzJ8fHI+MTI2JiZyPGMpe3RoaXMuX3ByaW50SGFuZGxlcihlLGkscyksaT1zLTE7YnJlYWt9fWJyZWFrO2Nhc2UgMzp0aGlzLl9leGVjdXRlSGFuZGxlcnNbcl0/dGhpcy5fZXhlY3V0ZUhhbmRsZXJzW3JdKCk6dGhpcy5fZXhlY3V0ZUhhbmRsZXJGYihyKSx0aGlzLnByZWNlZGluZ0NvZGVwb2ludD0wO2JyZWFrO2Nhc2UgMDpicmVhaztjYXNlIDE6aWYodGhpcy5fZXJyb3JIYW5kbGVyKHtwb3NpdGlvbjppLGNvZGU6cixjdXJyZW50U3RhdGU6dGhpcy5jdXJyZW50U3RhdGUsY29sbGVjdDp0aGlzLl9jb2xsZWN0LHBhcmFtczp0aGlzLl9wYXJhbXMsYWJvcnQ6ITF9KS5hYm9ydClyZXR1cm47YnJlYWs7Y2FzZSA3OmNvbnN0IG89dGhpcy5fY3NpSGFuZGxlcnNbdGhpcy5fY29sbGVjdDw8OHxyXTtsZXQgYT1vP28ubGVuZ3RoLTE6LTE7Zm9yKDthPj0wJiYocz1vW2FdKHRoaXMuX3BhcmFtcyksITAhPT1zKTthLS0paWYocyBpbnN0YW5jZW9mIFByb21pc2UpcmV0dXJuIHRoaXMuX3ByZXNlcnZlU3RhY2soMyxvLGEsbixpKSxzO2E8MCYmdGhpcy5fY3NpSGFuZGxlckZiKHRoaXMuX2NvbGxlY3Q8PDh8cix0aGlzLl9wYXJhbXMpLHRoaXMucHJlY2VkaW5nQ29kZXBvaW50PTA7YnJlYWs7Y2FzZSA4OmRve3N3aXRjaChyKXtjYXNlIDU5OnRoaXMuX3BhcmFtcy5hZGRQYXJhbSgwKTticmVhaztjYXNlIDU4OnRoaXMuX3BhcmFtcy5hZGRTdWJQYXJhbSgtMSk7YnJlYWs7ZGVmYXVsdDp0aGlzLl9wYXJhbXMuYWRkRGlnaXQoci00OCl9fXdoaWxlKCsraTx0JiYocj1lW2ldKT40NyYmcjw2MCk7aS0tO2JyZWFrO2Nhc2UgOTp0aGlzLl9jb2xsZWN0PDw9OCx0aGlzLl9jb2xsZWN0fD1yO2JyZWFrO2Nhc2UgMTA6Y29uc3QgaD10aGlzLl9lc2NIYW5kbGVyc1t0aGlzLl9jb2xsZWN0PDw4fHJdO2xldCBsPWg/aC5sZW5ndGgtMTotMTtmb3IoO2w+PTAmJihzPWhbbF0oKSwhMCE9PXMpO2wtLSlpZihzIGluc3RhbmNlb2YgUHJvbWlzZSlyZXR1cm4gdGhpcy5fcHJlc2VydmVTdGFjayg0LGgsbCxuLGkpLHM7bDwwJiZ0aGlzLl9lc2NIYW5kbGVyRmIodGhpcy5fY29sbGVjdDw8OHxyKSx0aGlzLnByZWNlZGluZ0NvZGVwb2ludD0wO2JyZWFrO2Nhc2UgMTE6dGhpcy5fcGFyYW1zLnJlc2V0KCksdGhpcy5fcGFyYW1zLmFkZFBhcmFtKDApLHRoaXMuX2NvbGxlY3Q9MDticmVhaztjYXNlIDEyOnRoaXMuX2Rjc1BhcnNlci5ob29rKHRoaXMuX2NvbGxlY3Q8PDh8cix0aGlzLl9wYXJhbXMpO2JyZWFrO2Nhc2UgMTM6Zm9yKGxldCBzPWkrMTs7KytzKWlmKHM+PXR8fDI0PT09KHI9ZVtzXSl8fDI2PT09cnx8Mjc9PT1yfHxyPjEyNyYmcjxjKXt0aGlzLl9kY3NQYXJzZXIucHV0KGUsaSxzKSxpPXMtMTticmVha31icmVhaztjYXNlIDE0OmlmKHM9dGhpcy5fZGNzUGFyc2VyLnVuaG9vaygyNCE9PXImJjI2IT09cikscylyZXR1cm4gdGhpcy5fcHJlc2VydmVTdGFjayg2LFtdLDAsbixpKSxzOzI3PT09ciYmKG58PTEpLHRoaXMuX3BhcmFtcy5yZXNldCgpLHRoaXMuX3BhcmFtcy5hZGRQYXJhbSgwKSx0aGlzLl9jb2xsZWN0PTAsdGhpcy5wcmVjZWRpbmdDb2RlcG9pbnQ9MDticmVhaztjYXNlIDQ6dGhpcy5fb3NjUGFyc2VyLnN0YXJ0KCk7YnJlYWs7Y2FzZSA1OmZvcihsZXQgcz1pKzE7O3MrKylpZihzPj10fHwocj1lW3NdKTwzMnx8cj4xMjcmJnI8Yyl7dGhpcy5fb3NjUGFyc2VyLnB1dChlLGkscyksaT1zLTE7YnJlYWt9YnJlYWs7Y2FzZSA2OmlmKHM9dGhpcy5fb3NjUGFyc2VyLmVuZCgyNCE9PXImJjI2IT09cikscylyZXR1cm4gdGhpcy5fcHJlc2VydmVTdGFjayg1LFtdLDAsbixpKSxzOzI3PT09ciYmKG58PTEpLHRoaXMuX3BhcmFtcy5yZXNldCgpLHRoaXMuX3BhcmFtcy5hZGRQYXJhbSgwKSx0aGlzLl9jb2xsZWN0PTAsdGhpcy5wcmVjZWRpbmdDb2RlcG9pbnQ9MH10aGlzLmN1cnJlbnRTdGF0ZT0xNSZufX19dC5Fc2NhcGVTZXF1ZW5jZVBhcnNlcj1sfSw2MjQyOihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0Lk9zY0hhbmRsZXI9dC5Pc2NQYXJzZXI9dm9pZCAwO2NvbnN0IHM9aSg1NzcwKSxyPWkoNDgyKSxuPVtdO3QuT3NjUGFyc2VyPWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5fc3RhdGU9MCx0aGlzLl9hY3RpdmU9bix0aGlzLl9pZD0tMSx0aGlzLl9oYW5kbGVycz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2hhbmRsZXJGYj0oKT0+e30sdGhpcy5fc3RhY2s9e3BhdXNlZDohMSxsb29wUG9zaXRpb246MCxmYWxsVGhyb3VnaDohMX19cmVnaXN0ZXJIYW5kbGVyKGUsdCl7dm9pZCAwPT09dGhpcy5faGFuZGxlcnNbZV0mJih0aGlzLl9oYW5kbGVyc1tlXT1bXSk7Y29uc3QgaT10aGlzLl9oYW5kbGVyc1tlXTtyZXR1cm4gaS5wdXNoKHQpLHtkaXNwb3NlOigpPT57Y29uc3QgZT1pLmluZGV4T2YodCk7LTEhPT1lJiZpLnNwbGljZShlLDEpfX19Y2xlYXJIYW5kbGVyKGUpe3RoaXMuX2hhbmRsZXJzW2VdJiZkZWxldGUgdGhpcy5faGFuZGxlcnNbZV19c2V0SGFuZGxlckZhbGxiYWNrKGUpe3RoaXMuX2hhbmRsZXJGYj1lfWRpc3Bvc2UoKXt0aGlzLl9oYW5kbGVycz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2hhbmRsZXJGYj0oKT0+e30sdGhpcy5fYWN0aXZlPW59cmVzZXQoKXtpZigyPT09dGhpcy5fc3RhdGUpZm9yKGxldCBlPXRoaXMuX3N0YWNrLnBhdXNlZD90aGlzLl9zdGFjay5sb29wUG9zaXRpb24tMTp0aGlzLl9hY3RpdmUubGVuZ3RoLTE7ZT49MDstLWUpdGhpcy5fYWN0aXZlW2VdLmVuZCghMSk7dGhpcy5fc3RhY2sucGF1c2VkPSExLHRoaXMuX2FjdGl2ZT1uLHRoaXMuX2lkPS0xLHRoaXMuX3N0YXRlPTB9X3N0YXJ0KCl7aWYodGhpcy5fYWN0aXZlPXRoaXMuX2hhbmRsZXJzW3RoaXMuX2lkXXx8bix0aGlzLl9hY3RpdmUubGVuZ3RoKWZvcihsZXQgZT10aGlzLl9hY3RpdmUubGVuZ3RoLTE7ZT49MDtlLS0pdGhpcy5fYWN0aXZlW2VdLnN0YXJ0KCk7ZWxzZSB0aGlzLl9oYW5kbGVyRmIodGhpcy5faWQsXCJTVEFSVFwiKX1fcHV0KGUsdCxpKXtpZih0aGlzLl9hY3RpdmUubGVuZ3RoKWZvcihsZXQgcz10aGlzLl9hY3RpdmUubGVuZ3RoLTE7cz49MDtzLS0pdGhpcy5fYWN0aXZlW3NdLnB1dChlLHQsaSk7ZWxzZSB0aGlzLl9oYW5kbGVyRmIodGhpcy5faWQsXCJQVVRcIiwoMCxyLnV0ZjMyVG9TdHJpbmcpKGUsdCxpKSl9c3RhcnQoKXt0aGlzLnJlc2V0KCksdGhpcy5fc3RhdGU9MX1wdXQoZSx0LGkpe2lmKDMhPT10aGlzLl9zdGF0ZSl7aWYoMT09PXRoaXMuX3N0YXRlKWZvcig7dDxpOyl7Y29uc3QgaT1lW3QrK107aWYoNTk9PT1pKXt0aGlzLl9zdGF0ZT0yLHRoaXMuX3N0YXJ0KCk7YnJlYWt9aWYoaTw0OHx8NTc8aSlyZXR1cm4gdm9pZCh0aGlzLl9zdGF0ZT0zKTstMT09PXRoaXMuX2lkJiYodGhpcy5faWQ9MCksdGhpcy5faWQ9MTAqdGhpcy5faWQraS00OH0yPT09dGhpcy5fc3RhdGUmJmktdD4wJiZ0aGlzLl9wdXQoZSx0LGkpfX1lbmQoZSx0PSEwKXtpZigwIT09dGhpcy5fc3RhdGUpe2lmKDMhPT10aGlzLl9zdGF0ZSlpZigxPT09dGhpcy5fc3RhdGUmJnRoaXMuX3N0YXJ0KCksdGhpcy5fYWN0aXZlLmxlbmd0aCl7bGV0IGk9ITEscz10aGlzLl9hY3RpdmUubGVuZ3RoLTEscj0hMTtpZih0aGlzLl9zdGFjay5wYXVzZWQmJihzPXRoaXMuX3N0YWNrLmxvb3BQb3NpdGlvbi0xLGk9dCxyPXRoaXMuX3N0YWNrLmZhbGxUaHJvdWdoLHRoaXMuX3N0YWNrLnBhdXNlZD0hMSksIXImJiExPT09aSl7Zm9yKDtzPj0wJiYoaT10aGlzLl9hY3RpdmVbc10uZW5kKGUpLCEwIT09aSk7cy0tKWlmKGkgaW5zdGFuY2VvZiBQcm9taXNlKXJldHVybiB0aGlzLl9zdGFjay5wYXVzZWQ9ITAsdGhpcy5fc3RhY2subG9vcFBvc2l0aW9uPXMsdGhpcy5fc3RhY2suZmFsbFRocm91Z2g9ITEsaTtzLS19Zm9yKDtzPj0wO3MtLSlpZihpPXRoaXMuX2FjdGl2ZVtzXS5lbmQoITEpLGkgaW5zdGFuY2VvZiBQcm9taXNlKXJldHVybiB0aGlzLl9zdGFjay5wYXVzZWQ9ITAsdGhpcy5fc3RhY2subG9vcFBvc2l0aW9uPXMsdGhpcy5fc3RhY2suZmFsbFRocm91Z2g9ITAsaX1lbHNlIHRoaXMuX2hhbmRsZXJGYih0aGlzLl9pZCxcIkVORFwiLGUpO3RoaXMuX2FjdGl2ZT1uLHRoaXMuX2lkPS0xLHRoaXMuX3N0YXRlPTB9fX0sdC5Pc2NIYW5kbGVyPWNsYXNze2NvbnN0cnVjdG9yKGUpe3RoaXMuX2hhbmRsZXI9ZSx0aGlzLl9kYXRhPVwiXCIsdGhpcy5faGl0TGltaXQ9ITF9c3RhcnQoKXt0aGlzLl9kYXRhPVwiXCIsdGhpcy5faGl0TGltaXQ9ITF9cHV0KGUsdCxpKXt0aGlzLl9oaXRMaW1pdHx8KHRoaXMuX2RhdGErPSgwLHIudXRmMzJUb1N0cmluZykoZSx0LGkpLHRoaXMuX2RhdGEubGVuZ3RoPnMuUEFZTE9BRF9MSU1JVCYmKHRoaXMuX2RhdGE9XCJcIix0aGlzLl9oaXRMaW1pdD0hMCkpfWVuZChlKXtsZXQgdD0hMTtpZih0aGlzLl9oaXRMaW1pdCl0PSExO2Vsc2UgaWYoZSYmKHQ9dGhpcy5faGFuZGxlcih0aGlzLl9kYXRhKSx0IGluc3RhbmNlb2YgUHJvbWlzZSkpcmV0dXJuIHQudGhlbigoZT0+KHRoaXMuX2RhdGE9XCJcIix0aGlzLl9oaXRMaW1pdD0hMSxlKSkpO3JldHVybiB0aGlzLl9kYXRhPVwiXCIsdGhpcy5faGl0TGltaXQ9ITEsdH19fSw4NzQyOihlLHQpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5QYXJhbXM9dm9pZCAwO2NvbnN0IGk9MjE0NzQ4MzY0NztjbGFzcyBze2NvbnN0cnVjdG9yKGU9MzIsdD0zMil7aWYodGhpcy5tYXhMZW5ndGg9ZSx0aGlzLm1heFN1YlBhcmFtc0xlbmd0aD10LHQ+MjU2KXRocm93IG5ldyBFcnJvcihcIm1heFN1YlBhcmFtc0xlbmd0aCBtdXN0IG5vdCBiZSBncmVhdGVyIHRoYW4gMjU2XCIpO3RoaXMucGFyYW1zPW5ldyBJbnQzMkFycmF5KGUpLHRoaXMubGVuZ3RoPTAsdGhpcy5fc3ViUGFyYW1zPW5ldyBJbnQzMkFycmF5KHQpLHRoaXMuX3N1YlBhcmFtc0xlbmd0aD0wLHRoaXMuX3N1YlBhcmFtc0lkeD1uZXcgVWludDE2QXJyYXkoZSksdGhpcy5fcmVqZWN0RGlnaXRzPSExLHRoaXMuX3JlamVjdFN1YkRpZ2l0cz0hMSx0aGlzLl9kaWdpdElzU3ViPSExfXN0YXRpYyBmcm9tQXJyYXkoZSl7Y29uc3QgdD1uZXcgcztpZighZS5sZW5ndGgpcmV0dXJuIHQ7Zm9yKGxldCBpPUFycmF5LmlzQXJyYXkoZVswXSk/MTowO2k8ZS5sZW5ndGg7KytpKXtjb25zdCBzPWVbaV07aWYoQXJyYXkuaXNBcnJheShzKSlmb3IobGV0IGU9MDtlPHMubGVuZ3RoOysrZSl0LmFkZFN1YlBhcmFtKHNbZV0pO2Vsc2UgdC5hZGRQYXJhbShzKX1yZXR1cm4gdH1jbG9uZSgpe2NvbnN0IGU9bmV3IHModGhpcy5tYXhMZW5ndGgsdGhpcy5tYXhTdWJQYXJhbXNMZW5ndGgpO3JldHVybiBlLnBhcmFtcy5zZXQodGhpcy5wYXJhbXMpLGUubGVuZ3RoPXRoaXMubGVuZ3RoLGUuX3N1YlBhcmFtcy5zZXQodGhpcy5fc3ViUGFyYW1zKSxlLl9zdWJQYXJhbXNMZW5ndGg9dGhpcy5fc3ViUGFyYW1zTGVuZ3RoLGUuX3N1YlBhcmFtc0lkeC5zZXQodGhpcy5fc3ViUGFyYW1zSWR4KSxlLl9yZWplY3REaWdpdHM9dGhpcy5fcmVqZWN0RGlnaXRzLGUuX3JlamVjdFN1YkRpZ2l0cz10aGlzLl9yZWplY3RTdWJEaWdpdHMsZS5fZGlnaXRJc1N1Yj10aGlzLl9kaWdpdElzU3ViLGV9dG9BcnJheSgpe2NvbnN0IGU9W107Zm9yKGxldCB0PTA7dDx0aGlzLmxlbmd0aDsrK3Qpe2UucHVzaCh0aGlzLnBhcmFtc1t0XSk7Y29uc3QgaT10aGlzLl9zdWJQYXJhbXNJZHhbdF0+Pjgscz0yNTUmdGhpcy5fc3ViUGFyYW1zSWR4W3RdO3MtaT4wJiZlLnB1c2goQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5fc3ViUGFyYW1zLGkscykpfXJldHVybiBlfXJlc2V0KCl7dGhpcy5sZW5ndGg9MCx0aGlzLl9zdWJQYXJhbXNMZW5ndGg9MCx0aGlzLl9yZWplY3REaWdpdHM9ITEsdGhpcy5fcmVqZWN0U3ViRGlnaXRzPSExLHRoaXMuX2RpZ2l0SXNTdWI9ITF9YWRkUGFyYW0oZSl7aWYodGhpcy5fZGlnaXRJc1N1Yj0hMSx0aGlzLmxlbmd0aD49dGhpcy5tYXhMZW5ndGgpdGhpcy5fcmVqZWN0RGlnaXRzPSEwO2Vsc2V7aWYoZTwtMSl0aHJvdyBuZXcgRXJyb3IoXCJ2YWx1ZXMgbGVzc2VyIHRoYW4gLTEgYXJlIG5vdCBhbGxvd2VkXCIpO3RoaXMuX3N1YlBhcmFtc0lkeFt0aGlzLmxlbmd0aF09dGhpcy5fc3ViUGFyYW1zTGVuZ3RoPDw4fHRoaXMuX3N1YlBhcmFtc0xlbmd0aCx0aGlzLnBhcmFtc1t0aGlzLmxlbmd0aCsrXT1lPmk/aTplfX1hZGRTdWJQYXJhbShlKXtpZih0aGlzLl9kaWdpdElzU3ViPSEwLHRoaXMubGVuZ3RoKWlmKHRoaXMuX3JlamVjdERpZ2l0c3x8dGhpcy5fc3ViUGFyYW1zTGVuZ3RoPj10aGlzLm1heFN1YlBhcmFtc0xlbmd0aCl0aGlzLl9yZWplY3RTdWJEaWdpdHM9ITA7ZWxzZXtpZihlPC0xKXRocm93IG5ldyBFcnJvcihcInZhbHVlcyBsZXNzZXIgdGhhbiAtMSBhcmUgbm90IGFsbG93ZWRcIik7dGhpcy5fc3ViUGFyYW1zW3RoaXMuX3N1YlBhcmFtc0xlbmd0aCsrXT1lPmk/aTplLHRoaXMuX3N1YlBhcmFtc0lkeFt0aGlzLmxlbmd0aC0xXSsrfX1oYXNTdWJQYXJhbXMoZSl7cmV0dXJuKDI1NSZ0aGlzLl9zdWJQYXJhbXNJZHhbZV0pLSh0aGlzLl9zdWJQYXJhbXNJZHhbZV0+PjgpPjB9Z2V0U3ViUGFyYW1zKGUpe2NvbnN0IHQ9dGhpcy5fc3ViUGFyYW1zSWR4W2VdPj44LGk9MjU1JnRoaXMuX3N1YlBhcmFtc0lkeFtlXTtyZXR1cm4gaS10PjA/dGhpcy5fc3ViUGFyYW1zLnN1YmFycmF5KHQsaSk6bnVsbH1nZXRTdWJQYXJhbXNBbGwoKXtjb25zdCBlPXt9O2ZvcihsZXQgdD0wO3Q8dGhpcy5sZW5ndGg7Kyt0KXtjb25zdCBpPXRoaXMuX3N1YlBhcmFtc0lkeFt0XT4+OCxzPTI1NSZ0aGlzLl9zdWJQYXJhbXNJZHhbdF07cy1pPjAmJihlW3RdPXRoaXMuX3N1YlBhcmFtcy5zbGljZShpLHMpKX1yZXR1cm4gZX1hZGREaWdpdChlKXtsZXQgdDtpZih0aGlzLl9yZWplY3REaWdpdHN8fCEodD10aGlzLl9kaWdpdElzU3ViP3RoaXMuX3N1YlBhcmFtc0xlbmd0aDp0aGlzLmxlbmd0aCl8fHRoaXMuX2RpZ2l0SXNTdWImJnRoaXMuX3JlamVjdFN1YkRpZ2l0cylyZXR1cm47Y29uc3Qgcz10aGlzLl9kaWdpdElzU3ViP3RoaXMuX3N1YlBhcmFtczp0aGlzLnBhcmFtcyxyPXNbdC0xXTtzW3QtMV09fnI/TWF0aC5taW4oMTAqcitlLGkpOmV9fXQuUGFyYW1zPXN9LDU3NDE6KGUsdCk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkFkZG9uTWFuYWdlcj12b2lkIDAsdC5BZGRvbk1hbmFnZXI9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLl9hZGRvbnM9W119ZGlzcG9zZSgpe2ZvcihsZXQgZT10aGlzLl9hZGRvbnMubGVuZ3RoLTE7ZT49MDtlLS0pdGhpcy5fYWRkb25zW2VdLmluc3RhbmNlLmRpc3Bvc2UoKX1sb2FkQWRkb24oZSx0KXtjb25zdCBpPXtpbnN0YW5jZTp0LGRpc3Bvc2U6dC5kaXNwb3NlLGlzRGlzcG9zZWQ6ITF9O3RoaXMuX2FkZG9ucy5wdXNoKGkpLHQuZGlzcG9zZT0oKT0+dGhpcy5fd3JhcHBlZEFkZG9uRGlzcG9zZShpKSx0LmFjdGl2YXRlKGUpfV93cmFwcGVkQWRkb25EaXNwb3NlKGUpe2lmKGUuaXNEaXNwb3NlZClyZXR1cm47bGV0IHQ9LTE7Zm9yKGxldCBpPTA7aTx0aGlzLl9hZGRvbnMubGVuZ3RoO2krKylpZih0aGlzLl9hZGRvbnNbaV09PT1lKXt0PWk7YnJlYWt9aWYoLTE9PT10KXRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBkaXNwb3NlIGFuIGFkZG9uIHRoYXQgaGFzIG5vdCBiZWVuIGxvYWRlZFwiKTtlLmlzRGlzcG9zZWQ9ITAsZS5kaXNwb3NlLmFwcGx5KGUuaW5zdGFuY2UpLHRoaXMuX2FkZG9ucy5zcGxpY2UodCwxKX19fSw4NzcxOihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJ1ZmZlckFwaVZpZXc9dm9pZCAwO2NvbnN0IHM9aSgzNzg1KSxyPWkoNTExKTt0LkJ1ZmZlckFwaVZpZXc9Y2xhc3N7Y29uc3RydWN0b3IoZSx0KXt0aGlzLl9idWZmZXI9ZSx0aGlzLnR5cGU9dH1pbml0KGUpe3JldHVybiB0aGlzLl9idWZmZXI9ZSx0aGlzfWdldCBjdXJzb3JZKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci55fWdldCBjdXJzb3JYKCl7cmV0dXJuIHRoaXMuX2J1ZmZlci54fWdldCB2aWV3cG9ydFkoKXtyZXR1cm4gdGhpcy5fYnVmZmVyLnlkaXNwfWdldCBiYXNlWSgpe3JldHVybiB0aGlzLl9idWZmZXIueWJhc2V9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLl9idWZmZXIubGluZXMubGVuZ3RofWdldExpbmUoZSl7Y29uc3QgdD10aGlzLl9idWZmZXIubGluZXMuZ2V0KGUpO2lmKHQpcmV0dXJuIG5ldyBzLkJ1ZmZlckxpbmVBcGlWaWV3KHQpfWdldE51bGxDZWxsKCl7cmV0dXJuIG5ldyByLkNlbGxEYXRhfX19LDM3ODU6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQnVmZmVyTGluZUFwaVZpZXc9dm9pZCAwO2NvbnN0IHM9aSg1MTEpO3QuQnVmZmVyTGluZUFwaVZpZXc9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dGhpcy5fbGluZT1lfWdldCBpc1dyYXBwZWQoKXtyZXR1cm4gdGhpcy5fbGluZS5pc1dyYXBwZWR9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLl9saW5lLmxlbmd0aH1nZXRDZWxsKGUsdCl7aWYoIShlPDB8fGU+PXRoaXMuX2xpbmUubGVuZ3RoKSlyZXR1cm4gdD8odGhpcy5fbGluZS5sb2FkQ2VsbChlLHQpLHQpOnRoaXMuX2xpbmUubG9hZENlbGwoZSxuZXcgcy5DZWxsRGF0YSl9dHJhbnNsYXRlVG9TdHJpbmcoZSx0LGkpe3JldHVybiB0aGlzLl9saW5lLnRyYW5zbGF0ZVRvU3RyaW5nKGUsdCxpKX19fSw4Mjg1OihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LkJ1ZmZlck5hbWVzcGFjZUFwaT12b2lkIDA7Y29uc3Qgcz1pKDg3NzEpLHI9aSg4NDYwKTt0LkJ1ZmZlck5hbWVzcGFjZUFwaT1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9jb3JlPWUsdGhpcy5fb25CdWZmZXJDaGFuZ2U9bmV3IHIuRXZlbnRFbWl0dGVyLHRoaXMuX25vcm1hbD1uZXcgcy5CdWZmZXJBcGlWaWV3KHRoaXMuX2NvcmUuYnVmZmVycy5ub3JtYWwsXCJub3JtYWxcIiksdGhpcy5fYWx0ZXJuYXRlPW5ldyBzLkJ1ZmZlckFwaVZpZXcodGhpcy5fY29yZS5idWZmZXJzLmFsdCxcImFsdGVybmF0ZVwiKSx0aGlzLl9jb3JlLmJ1ZmZlcnMub25CdWZmZXJBY3RpdmF0ZSgoKCk9PnRoaXMuX29uQnVmZmVyQ2hhbmdlLmZpcmUodGhpcy5hY3RpdmUpKSl9Z2V0IG9uQnVmZmVyQ2hhbmdlKCl7cmV0dXJuIHRoaXMuX29uQnVmZmVyQ2hhbmdlLmV2ZW50fWdldCBhY3RpdmUoKXtpZih0aGlzLl9jb3JlLmJ1ZmZlcnMuYWN0aXZlPT09dGhpcy5fY29yZS5idWZmZXJzLm5vcm1hbClyZXR1cm4gdGhpcy5ub3JtYWw7aWYodGhpcy5fY29yZS5idWZmZXJzLmFjdGl2ZT09PXRoaXMuX2NvcmUuYnVmZmVycy5hbHQpcmV0dXJuIHRoaXMuYWx0ZXJuYXRlO3Rocm93IG5ldyBFcnJvcihcIkFjdGl2ZSBidWZmZXIgaXMgbmVpdGhlciBub3JtYWwgbm9yIGFsdGVybmF0ZVwiKX1nZXQgbm9ybWFsKCl7cmV0dXJuIHRoaXMuX25vcm1hbC5pbml0KHRoaXMuX2NvcmUuYnVmZmVycy5ub3JtYWwpfWdldCBhbHRlcm5hdGUoKXtyZXR1cm4gdGhpcy5fYWx0ZXJuYXRlLmluaXQodGhpcy5fY29yZS5idWZmZXJzLmFsdCl9fX0sNzk3NTooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuUGFyc2VyQXBpPXZvaWQgMCx0LlBhcnNlckFwaT1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9jb3JlPWV9cmVnaXN0ZXJDc2lIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMuX2NvcmUucmVnaXN0ZXJDc2lIYW5kbGVyKGUsKGU9PnQoZS50b0FycmF5KCkpKSl9YWRkQ3NpSGFuZGxlcihlLHQpe3JldHVybiB0aGlzLnJlZ2lzdGVyQ3NpSGFuZGxlcihlLHQpfXJlZ2lzdGVyRGNzSGFuZGxlcihlLHQpe3JldHVybiB0aGlzLl9jb3JlLnJlZ2lzdGVyRGNzSGFuZGxlcihlLCgoZSxpKT0+dChlLGkudG9BcnJheSgpKSkpfWFkZERjc0hhbmRsZXIoZSx0KXtyZXR1cm4gdGhpcy5yZWdpc3RlckRjc0hhbmRsZXIoZSx0KX1yZWdpc3RlckVzY0hhbmRsZXIoZSx0KXtyZXR1cm4gdGhpcy5fY29yZS5yZWdpc3RlckVzY0hhbmRsZXIoZSx0KX1hZGRFc2NIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMucmVnaXN0ZXJFc2NIYW5kbGVyKGUsdCl9cmVnaXN0ZXJPc2NIYW5kbGVyKGUsdCl7cmV0dXJuIHRoaXMuX2NvcmUucmVnaXN0ZXJPc2NIYW5kbGVyKGUsdCl9YWRkT3NjSGFuZGxlcihlLHQpe3JldHVybiB0aGlzLnJlZ2lzdGVyT3NjSGFuZGxlcihlLHQpfX19LDcwOTA6KGUsdCk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LlVuaWNvZGVBcGk9dm9pZCAwLHQuVW5pY29kZUFwaT1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9jb3JlPWV9cmVnaXN0ZXIoZSl7dGhpcy5fY29yZS51bmljb2RlU2VydmljZS5yZWdpc3RlcihlKX1nZXQgdmVyc2lvbnMoKXtyZXR1cm4gdGhpcy5fY29yZS51bmljb2RlU2VydmljZS52ZXJzaW9uc31nZXQgYWN0aXZlVmVyc2lvbigpe3JldHVybiB0aGlzLl9jb3JlLnVuaWNvZGVTZXJ2aWNlLmFjdGl2ZVZlcnNpb259c2V0IGFjdGl2ZVZlcnNpb24oZSl7dGhpcy5fY29yZS51bmljb2RlU2VydmljZS5hY3RpdmVWZXJzaW9uPWV9fX0sNzQ0OmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQnVmZmVyU2VydmljZT10Lk1JTklNVU1fUk9XUz10Lk1JTklNVU1fQ09MUz12b2lkIDA7Y29uc3Qgbj1pKDI1ODUpLG89aSg1Mjk1KSxhPWkoODQ2MCksaD1pKDg0NCk7dC5NSU5JTVVNX0NPTFM9Mix0Lk1JTklNVU1fUk9XUz0xO2xldCBjPWNsYXNzIGV4dGVuZHMgaC5EaXNwb3NhYmxle2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksdGhpcy5pc1VzZXJTY3JvbGxpbmc9ITEsdGhpcy5fb25SZXNpemU9bmV3IGEuRXZlbnRFbWl0dGVyLHRoaXMuX29uU2Nyb2xsPW5ldyBhLkV2ZW50RW1pdHRlcix0aGlzLmNvbHM9TWF0aC5tYXgoZS5yYXdPcHRpb25zLmNvbHN8fDAsdC5NSU5JTVVNX0NPTFMpLHRoaXMucm93cz1NYXRoLm1heChlLnJhd09wdGlvbnMucm93c3x8MCx0Lk1JTklNVU1fUk9XUyksdGhpcy5idWZmZXJzPW5ldyBvLkJ1ZmZlclNldChlLHRoaXMpfWdldCBvblJlc2l6ZSgpe3JldHVybiB0aGlzLl9vblJlc2l6ZS5ldmVudH1nZXQgb25TY3JvbGwoKXtyZXR1cm4gdGhpcy5fb25TY3JvbGwuZXZlbnR9Z2V0IGJ1ZmZlcigpe3JldHVybiB0aGlzLmJ1ZmZlcnMuYWN0aXZlfWRpc3Bvc2UoKXtzdXBlci5kaXNwb3NlKCksdGhpcy5idWZmZXJzLmRpc3Bvc2UoKX1yZXNpemUoZSx0KXt0aGlzLmNvbHM9ZSx0aGlzLnJvd3M9dCx0aGlzLmJ1ZmZlcnMucmVzaXplKGUsdCksdGhpcy5idWZmZXJzLnNldHVwVGFiU3RvcHModGhpcy5jb2xzKSx0aGlzLl9vblJlc2l6ZS5maXJlKHtjb2xzOmUscm93czp0fSl9cmVzZXQoKXt0aGlzLmJ1ZmZlcnMucmVzZXQoKSx0aGlzLmlzVXNlclNjcm9sbGluZz0hMX1zY3JvbGwoZSx0PSExKXtjb25zdCBpPXRoaXMuYnVmZmVyO2xldCBzO3M9dGhpcy5fY2FjaGVkQmxhbmtMaW5lLHMmJnMubGVuZ3RoPT09dGhpcy5jb2xzJiZzLmdldEZnKDApPT09ZS5mZyYmcy5nZXRCZygwKT09PWUuYmd8fChzPWkuZ2V0QmxhbmtMaW5lKGUsdCksdGhpcy5fY2FjaGVkQmxhbmtMaW5lPXMpLHMuaXNXcmFwcGVkPXQ7Y29uc3Qgcj1pLnliYXNlK2kuc2Nyb2xsVG9wLG49aS55YmFzZStpLnNjcm9sbEJvdHRvbTtpZigwPT09aS5zY3JvbGxUb3Ape2NvbnN0IGU9aS5saW5lcy5pc0Z1bGw7bj09PWkubGluZXMubGVuZ3RoLTE/ZT9pLmxpbmVzLnJlY3ljbGUoKS5jb3B5RnJvbShzKTppLmxpbmVzLnB1c2gocy5jbG9uZSgpKTppLmxpbmVzLnNwbGljZShuKzEsMCxzLmNsb25lKCkpLGU/dGhpcy5pc1VzZXJTY3JvbGxpbmcmJihpLnlkaXNwPU1hdGgubWF4KGkueWRpc3AtMSwwKSk6KGkueWJhc2UrKyx0aGlzLmlzVXNlclNjcm9sbGluZ3x8aS55ZGlzcCsrKX1lbHNle2NvbnN0IGU9bi1yKzE7aS5saW5lcy5zaGlmdEVsZW1lbnRzKHIrMSxlLTEsLTEpLGkubGluZXMuc2V0KG4scy5jbG9uZSgpKX10aGlzLmlzVXNlclNjcm9sbGluZ3x8KGkueWRpc3A9aS55YmFzZSksdGhpcy5fb25TY3JvbGwuZmlyZShpLnlkaXNwKX1zY3JvbGxMaW5lcyhlLHQsaSl7Y29uc3Qgcz10aGlzLmJ1ZmZlcjtpZihlPDApe2lmKDA9PT1zLnlkaXNwKXJldHVybjt0aGlzLmlzVXNlclNjcm9sbGluZz0hMH1lbHNlIGUrcy55ZGlzcD49cy55YmFzZSYmKHRoaXMuaXNVc2VyU2Nyb2xsaW5nPSExKTtjb25zdCByPXMueWRpc3A7cy55ZGlzcD1NYXRoLm1heChNYXRoLm1pbihzLnlkaXNwK2Uscy55YmFzZSksMCksciE9PXMueWRpc3AmJih0fHx0aGlzLl9vblNjcm9sbC5maXJlKHMueWRpc3ApKX1zY3JvbGxQYWdlcyhlKXt0aGlzLnNjcm9sbExpbmVzKGUqKHRoaXMucm93cy0xKSl9c2Nyb2xsVG9Ub3AoKXt0aGlzLnNjcm9sbExpbmVzKC10aGlzLmJ1ZmZlci55ZGlzcCl9c2Nyb2xsVG9Cb3R0b20oKXt0aGlzLnNjcm9sbExpbmVzKHRoaXMuYnVmZmVyLnliYXNlLXRoaXMuYnVmZmVyLnlkaXNwKX1zY3JvbGxUb0xpbmUoZSl7Y29uc3QgdD1lLXRoaXMuYnVmZmVyLnlkaXNwOzAhPT10JiZ0aGlzLnNjcm9sbExpbmVzKHQpfX07Yz1zKFtyKDAsbi5JT3B0aW9uc1NlcnZpY2UpXSxjKSx0LkJ1ZmZlclNlcnZpY2U9Y30sNzk5NDooZSx0KT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ2hhcnNldFNlcnZpY2U9dm9pZCAwLHQuQ2hhcnNldFNlcnZpY2U9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLmdsZXZlbD0wLHRoaXMuX2NoYXJzZXRzPVtdfXJlc2V0KCl7dGhpcy5jaGFyc2V0PXZvaWQgMCx0aGlzLl9jaGFyc2V0cz1bXSx0aGlzLmdsZXZlbD0wfXNldGdMZXZlbChlKXt0aGlzLmdsZXZlbD1lLHRoaXMuY2hhcnNldD10aGlzLl9jaGFyc2V0c1tlXX1zZXRnQ2hhcnNldChlLHQpe3RoaXMuX2NoYXJzZXRzW2VdPXQsdGhpcy5nbGV2ZWw9PT1lJiYodGhpcy5jaGFyc2V0PXQpfX19LDE3NTM6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LGkscyl7dmFyIHIsbj1hcmd1bWVudHMubGVuZ3RoLG89bjwzP3Q6bnVsbD09PXM/cz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk6cztpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlvPVJlZmxlY3QuZGVjb3JhdGUoZSx0LGkscyk7ZWxzZSBmb3IodmFyIGE9ZS5sZW5ndGgtMTthPj0wO2EtLSkocj1lW2FdKSYmKG89KG48Mz9yKG8pOm4+Mz9yKHQsaSxvKTpyKHQsaSkpfHxvKTtyZXR1cm4gbj4zJiZvJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLG8pLG99LHI9dGhpcyYmdGhpcy5fX3BhcmFtfHxmdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihpLHMpe3QoaSxzLGUpfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Db3JlTW91c2VTZXJ2aWNlPXZvaWQgMDtjb25zdCBuPWkoMjU4NSksbz1pKDg0NjApLGE9e05PTkU6e2V2ZW50czowLHJlc3RyaWN0OigpPT4hMX0sWDEwOntldmVudHM6MSxyZXN0cmljdDplPT40IT09ZS5idXR0b24mJjE9PT1lLmFjdGlvbiYmKGUuY3RybD0hMSxlLmFsdD0hMSxlLnNoaWZ0PSExLCEwKX0sVlQyMDA6e2V2ZW50czoxOSxyZXN0cmljdDplPT4zMiE9PWUuYWN0aW9ufSxEUkFHOntldmVudHM6MjMscmVzdHJpY3Q6ZT0+MzIhPT1lLmFjdGlvbnx8MyE9PWUuYnV0dG9ufSxBTlk6e2V2ZW50czozMSxyZXN0cmljdDplPT4hMH19O2Z1bmN0aW9uIGgoZSx0KXtsZXQgaT0oZS5jdHJsPzE2OjApfChlLnNoaWZ0PzQ6MCl8KGUuYWx0Pzg6MCk7cmV0dXJuIDQ9PT1lLmJ1dHRvbj8oaXw9NjQsaXw9ZS5hY3Rpb24pOihpfD0zJmUuYnV0dG9uLDQmZS5idXR0b24mJihpfD02NCksOCZlLmJ1dHRvbiYmKGl8PTEyOCksMzI9PT1lLmFjdGlvbj9pfD0zMjowIT09ZS5hY3Rpb258fHR8fChpfD0zKSksaX1jb25zdCBjPVN0cmluZy5mcm9tQ2hhckNvZGUsbD17REVGQVVMVDplPT57Y29uc3QgdD1baChlLCExKSszMixlLmNvbCszMixlLnJvdyszMl07cmV0dXJuIHRbMF0+MjU1fHx0WzFdPjI1NXx8dFsyXT4yNTU/XCJcIjpgXHUwMDFiW00ke2ModFswXSl9JHtjKHRbMV0pfSR7Yyh0WzJdKX1gfSxTR1I6ZT0+e2NvbnN0IHQ9MD09PWUuYWN0aW9uJiY0IT09ZS5idXR0b24/XCJtXCI6XCJNXCI7cmV0dXJuYFx1MDAxYls8JHtoKGUsITApfTske2UuY29sfTske2Uucm93fSR7dH1gfSxTR1JfUElYRUxTOmU9Pntjb25zdCB0PTA9PT1lLmFjdGlvbiYmNCE9PWUuYnV0dG9uP1wibVwiOlwiTVwiO3JldHVybmBcdTAwMWJbPCR7aChlLCEwKX07JHtlLnh9OyR7ZS55fSR7dH1gfX07bGV0IGQ9Y2xhc3N7Y29uc3RydWN0b3IoZSx0KXt0aGlzLl9idWZmZXJTZXJ2aWNlPWUsdGhpcy5fY29yZVNlcnZpY2U9dCx0aGlzLl9wcm90b2NvbHM9e30sdGhpcy5fZW5jb2RpbmdzPXt9LHRoaXMuX2FjdGl2ZVByb3RvY29sPVwiXCIsdGhpcy5fYWN0aXZlRW5jb2Rpbmc9XCJcIix0aGlzLl9vblByb3RvY29sQ2hhbmdlPW5ldyBvLkV2ZW50RW1pdHRlcix0aGlzLl9sYXN0RXZlbnQ9bnVsbDtmb3IoY29uc3QgZSBvZiBPYmplY3Qua2V5cyhhKSl0aGlzLmFkZFByb3RvY29sKGUsYVtlXSk7Zm9yKGNvbnN0IGUgb2YgT2JqZWN0LmtleXMobCkpdGhpcy5hZGRFbmNvZGluZyhlLGxbZV0pO3RoaXMucmVzZXQoKX1hZGRQcm90b2NvbChlLHQpe3RoaXMuX3Byb3RvY29sc1tlXT10fWFkZEVuY29kaW5nKGUsdCl7dGhpcy5fZW5jb2RpbmdzW2VdPXR9Z2V0IGFjdGl2ZVByb3RvY29sKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZVByb3RvY29sfWdldCBhcmVNb3VzZUV2ZW50c0FjdGl2ZSgpe3JldHVybiAwIT09dGhpcy5fcHJvdG9jb2xzW3RoaXMuX2FjdGl2ZVByb3RvY29sXS5ldmVudHN9c2V0IGFjdGl2ZVByb3RvY29sKGUpe2lmKCF0aGlzLl9wcm90b2NvbHNbZV0pdGhyb3cgbmV3IEVycm9yKGB1bmtub3duIHByb3RvY29sIFwiJHtlfVwiYCk7dGhpcy5fYWN0aXZlUHJvdG9jb2w9ZSx0aGlzLl9vblByb3RvY29sQ2hhbmdlLmZpcmUodGhpcy5fcHJvdG9jb2xzW2VdLmV2ZW50cyl9Z2V0IGFjdGl2ZUVuY29kaW5nKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZUVuY29kaW5nfXNldCBhY3RpdmVFbmNvZGluZyhlKXtpZighdGhpcy5fZW5jb2RpbmdzW2VdKXRocm93IG5ldyBFcnJvcihgdW5rbm93biBlbmNvZGluZyBcIiR7ZX1cImApO3RoaXMuX2FjdGl2ZUVuY29kaW5nPWV9cmVzZXQoKXt0aGlzLmFjdGl2ZVByb3RvY29sPVwiTk9ORVwiLHRoaXMuYWN0aXZlRW5jb2Rpbmc9XCJERUZBVUxUXCIsdGhpcy5fbGFzdEV2ZW50PW51bGx9Z2V0IG9uUHJvdG9jb2xDaGFuZ2UoKXtyZXR1cm4gdGhpcy5fb25Qcm90b2NvbENoYW5nZS5ldmVudH10cmlnZ2VyTW91c2VFdmVudChlKXtpZihlLmNvbDwwfHxlLmNvbD49dGhpcy5fYnVmZmVyU2VydmljZS5jb2xzfHxlLnJvdzwwfHxlLnJvdz49dGhpcy5fYnVmZmVyU2VydmljZS5yb3dzKXJldHVybiExO2lmKDQ9PT1lLmJ1dHRvbiYmMzI9PT1lLmFjdGlvbilyZXR1cm4hMTtpZigzPT09ZS5idXR0b24mJjMyIT09ZS5hY3Rpb24pcmV0dXJuITE7aWYoNCE9PWUuYnV0dG9uJiYoMj09PWUuYWN0aW9ufHwzPT09ZS5hY3Rpb24pKXJldHVybiExO2lmKGUuY29sKyssZS5yb3crKywzMj09PWUuYWN0aW9uJiZ0aGlzLl9sYXN0RXZlbnQmJnRoaXMuX2VxdWFsRXZlbnRzKHRoaXMuX2xhc3RFdmVudCxlLFwiU0dSX1BJWEVMU1wiPT09dGhpcy5fYWN0aXZlRW5jb2RpbmcpKXJldHVybiExO2lmKCF0aGlzLl9wcm90b2NvbHNbdGhpcy5fYWN0aXZlUHJvdG9jb2xdLnJlc3RyaWN0KGUpKXJldHVybiExO2NvbnN0IHQ9dGhpcy5fZW5jb2RpbmdzW3RoaXMuX2FjdGl2ZUVuY29kaW5nXShlKTtyZXR1cm4gdCYmKFwiREVGQVVMVFwiPT09dGhpcy5fYWN0aXZlRW5jb2Rpbmc/dGhpcy5fY29yZVNlcnZpY2UudHJpZ2dlckJpbmFyeUV2ZW50KHQpOnRoaXMuX2NvcmVTZXJ2aWNlLnRyaWdnZXJEYXRhRXZlbnQodCwhMCkpLHRoaXMuX2xhc3RFdmVudD1lLCEwfWV4cGxhaW5FdmVudHMoZSl7cmV0dXJue2Rvd246ISEoMSZlKSx1cDohISgyJmUpLGRyYWc6ISEoNCZlKSxtb3ZlOiEhKDgmZSksd2hlZWw6ISEoMTYmZSl9fV9lcXVhbEV2ZW50cyhlLHQsaSl7aWYoaSl7aWYoZS54IT09dC54KXJldHVybiExO2lmKGUueSE9PXQueSlyZXR1cm4hMX1lbHNle2lmKGUuY29sIT09dC5jb2wpcmV0dXJuITE7aWYoZS5yb3chPT10LnJvdylyZXR1cm4hMX1yZXR1cm4gZS5idXR0b249PT10LmJ1dHRvbiYmZS5hY3Rpb249PT10LmFjdGlvbiYmZS5jdHJsPT09dC5jdHJsJiZlLmFsdD09PXQuYWx0JiZlLnNoaWZ0PT09dC5zaGlmdH19O2Q9cyhbcigwLG4uSUJ1ZmZlclNlcnZpY2UpLHIoMSxuLklDb3JlU2VydmljZSldLGQpLHQuQ29yZU1vdXNlU2VydmljZT1kfSw2OTc1OmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuQ29yZVNlcnZpY2U9dm9pZCAwO2NvbnN0IG49aSgyNTg1KSxvPWkoODQ2MCksYT1pKDE0MzkpLGg9aSg4NDQpLGM9T2JqZWN0LmZyZWV6ZSh7aW5zZXJ0TW9kZTohMX0pLGw9T2JqZWN0LmZyZWV6ZSh7YXBwbGljYXRpb25DdXJzb3JLZXlzOiExLGFwcGxpY2F0aW9uS2V5cGFkOiExLGJyYWNrZXRlZFBhc3RlTW9kZTohMSxvcmlnaW46ITEscmV2ZXJzZVdyYXBhcm91bmQ6ITEsc2VuZEZvY3VzOiExLHdyYXBhcm91bmQ6ITB9KTtsZXQgZD1jbGFzcyBleHRlbmRzIGguRGlzcG9zYWJsZXtjb25zdHJ1Y3RvcihlLHQsaSxzKXtzdXBlcigpLHRoaXMuX2J1ZmZlclNlcnZpY2U9dCx0aGlzLl9sb2dTZXJ2aWNlPWksdGhpcy5fb3B0aW9uc1NlcnZpY2U9cyx0aGlzLmlzQ3Vyc29ySW5pdGlhbGl6ZWQ9ITEsdGhpcy5pc0N1cnNvckhpZGRlbj0hMSx0aGlzLl9vbkRhdGE9dGhpcy5yZWdpc3RlcihuZXcgby5FdmVudEVtaXR0ZXIpLHRoaXMuX29uVXNlcklucHV0PXRoaXMucmVnaXN0ZXIobmV3IG8uRXZlbnRFbWl0dGVyKSx0aGlzLl9vbkJpbmFyeT10aGlzLnJlZ2lzdGVyKG5ldyBvLkV2ZW50RW1pdHRlciksdGhpcy5fc2Nyb2xsVG9Cb3R0b209ZSx0aGlzLnJlZ2lzdGVyKHtkaXNwb3NlOigpPT50aGlzLl9zY3JvbGxUb0JvdHRvbT12b2lkIDB9KSx0aGlzLm1vZGVzPSgwLGEuY2xvbmUpKGMpLHRoaXMuZGVjUHJpdmF0ZU1vZGVzPSgwLGEuY2xvbmUpKGwpfWdldCBvbkRhdGEoKXtyZXR1cm4gdGhpcy5fb25EYXRhLmV2ZW50fWdldCBvblVzZXJJbnB1dCgpe3JldHVybiB0aGlzLl9vblVzZXJJbnB1dC5ldmVudH1nZXQgb25CaW5hcnkoKXtyZXR1cm4gdGhpcy5fb25CaW5hcnkuZXZlbnR9cmVzZXQoKXt0aGlzLm1vZGVzPSgwLGEuY2xvbmUpKGMpLHRoaXMuZGVjUHJpdmF0ZU1vZGVzPSgwLGEuY2xvbmUpKGwpfXRyaWdnZXJEYXRhRXZlbnQoZSx0PSExKXtpZih0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmRpc2FibGVTdGRpbilyZXR1cm47Y29uc3QgaT10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlcjtpLnliYXNlIT09aS55ZGlzcCYmdGhpcy5fc2Nyb2xsVG9Cb3R0b20oKSx0JiZ0aGlzLl9vblVzZXJJbnB1dC5maXJlKCksdGhpcy5fbG9nU2VydmljZS5kZWJ1Zyhgc2VuZGluZyBkYXRhIFwiJHtlfVwiYCwoKCk9PmUuc3BsaXQoXCJcIikubWFwKChlPT5lLmNoYXJDb2RlQXQoMCkpKSkpLHRoaXMuX29uRGF0YS5maXJlKGUpfXRyaWdnZXJCaW5hcnlFdmVudChlKXt0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmRpc2FibGVTdGRpbnx8KHRoaXMuX2xvZ1NlcnZpY2UuZGVidWcoYHNlbmRpbmcgYmluYXJ5IFwiJHtlfVwiYCwoKCk9PmUuc3BsaXQoXCJcIikubWFwKChlPT5lLmNoYXJDb2RlQXQoMCkpKSkpLHRoaXMuX29uQmluYXJ5LmZpcmUoZSkpfX07ZD1zKFtyKDEsbi5JQnVmZmVyU2VydmljZSkscigyLG4uSUxvZ1NlcnZpY2UpLHIoMyxuLklPcHRpb25zU2VydmljZSldLGQpLHQuQ29yZVNlcnZpY2U9ZH0sOTA3NDooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5EZWNvcmF0aW9uU2VydmljZT12b2lkIDA7Y29uc3Qgcz1pKDgwNTUpLHI9aSg4NDYwKSxuPWkoODQ0KSxvPWkoNjEwNiksYT17eG1pbjowLHhtYXg6MH07Y2xhc3MgaCBleHRlbmRzIG4uRGlzcG9zYWJsZXtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5fZGVjb3JhdGlvbnM9bmV3IG8uU29ydGVkTGlzdCgoZT0+bnVsbD09ZT92b2lkIDA6ZS5tYXJrZXIubGluZSkpLHRoaXMuX29uRGVjb3JhdGlvblJlZ2lzdGVyZWQ9dGhpcy5yZWdpc3RlcihuZXcgci5FdmVudEVtaXR0ZXIpLHRoaXMuX29uRGVjb3JhdGlvblJlbW92ZWQ9dGhpcy5yZWdpc3RlcihuZXcgci5FdmVudEVtaXR0ZXIpfWdldCBvbkRlY29yYXRpb25SZWdpc3RlcmVkKCl7cmV0dXJuIHRoaXMuX29uRGVjb3JhdGlvblJlZ2lzdGVyZWQuZXZlbnR9Z2V0IG9uRGVjb3JhdGlvblJlbW92ZWQoKXtyZXR1cm4gdGhpcy5fb25EZWNvcmF0aW9uUmVtb3ZlZC5ldmVudH1nZXQgZGVjb3JhdGlvbnMoKXtyZXR1cm4gdGhpcy5fZGVjb3JhdGlvbnMudmFsdWVzKCl9cmVnaXN0ZXJEZWNvcmF0aW9uKGUpe2lmKGUubWFya2VyLmlzRGlzcG9zZWQpcmV0dXJuO2NvbnN0IHQ9bmV3IGMoZSk7aWYodCl7Y29uc3QgZT10Lm1hcmtlci5vbkRpc3Bvc2UoKCgpPT50LmRpc3Bvc2UoKSkpO3Qub25EaXNwb3NlKCgoKT0+e3QmJih0aGlzLl9kZWNvcmF0aW9ucy5kZWxldGUodCkmJnRoaXMuX29uRGVjb3JhdGlvblJlbW92ZWQuZmlyZSh0KSxlLmRpc3Bvc2UoKSl9KSksdGhpcy5fZGVjb3JhdGlvbnMuaW5zZXJ0KHQpLHRoaXMuX29uRGVjb3JhdGlvblJlZ2lzdGVyZWQuZmlyZSh0KX1yZXR1cm4gdH1yZXNldCgpe2Zvcihjb25zdCBlIG9mIHRoaXMuX2RlY29yYXRpb25zLnZhbHVlcygpKWUuZGlzcG9zZSgpO3RoaXMuX2RlY29yYXRpb25zLmNsZWFyKCl9KmdldERlY29yYXRpb25zQXRDZWxsKGUsdCxpKXt2YXIgcyxyLG47bGV0IG89MCxhPTA7Zm9yKGNvbnN0IGggb2YgdGhpcy5fZGVjb3JhdGlvbnMuZ2V0S2V5SXRlcmF0b3IodCkpbz1udWxsIT09KHM9aC5vcHRpb25zLngpJiZ2b2lkIDAhPT1zP3M6MCxhPW8rKG51bGwhPT0ocj1oLm9wdGlvbnMud2lkdGgpJiZ2b2lkIDAhPT1yP3I6MSksZT49byYmZTxhJiYoIWl8fChudWxsIT09KG49aC5vcHRpb25zLmxheWVyKSYmdm9pZCAwIT09bj9uOlwiYm90dG9tXCIpPT09aSkmJih5aWVsZCBoKX1mb3JFYWNoRGVjb3JhdGlvbkF0Q2VsbChlLHQsaSxzKXt0aGlzLl9kZWNvcmF0aW9ucy5mb3JFYWNoQnlLZXkodCwodD0+e3ZhciByLG4sbzthLnhtaW49bnVsbCE9PShyPXQub3B0aW9ucy54KSYmdm9pZCAwIT09cj9yOjAsYS54bWF4PWEueG1pbisobnVsbCE9PShuPXQub3B0aW9ucy53aWR0aCkmJnZvaWQgMCE9PW4/bjoxKSxlPj1hLnhtaW4mJmU8YS54bWF4JiYoIWl8fChudWxsIT09KG89dC5vcHRpb25zLmxheWVyKSYmdm9pZCAwIT09bz9vOlwiYm90dG9tXCIpPT09aSkmJnModCl9KSl9ZGlzcG9zZSgpe2Zvcihjb25zdCBlIG9mIHRoaXMuX2RlY29yYXRpb25zLnZhbHVlcygpKXRoaXMuX29uRGVjb3JhdGlvblJlbW92ZWQuZmlyZShlKTt0aGlzLnJlc2V0KCl9fXQuRGVjb3JhdGlvblNlcnZpY2U9aDtjbGFzcyBjIGV4dGVuZHMgbi5EaXNwb3NhYmxle2NvbnN0cnVjdG9yKGUpe3N1cGVyKCksdGhpcy5vcHRpb25zPWUsdGhpcy5pc0Rpc3Bvc2VkPSExLHRoaXMub25SZW5kZXJFbWl0dGVyPXRoaXMucmVnaXN0ZXIobmV3IHIuRXZlbnRFbWl0dGVyKSx0aGlzLm9uUmVuZGVyPXRoaXMub25SZW5kZXJFbWl0dGVyLmV2ZW50LHRoaXMuX29uRGlzcG9zZT10aGlzLnJlZ2lzdGVyKG5ldyByLkV2ZW50RW1pdHRlciksdGhpcy5vbkRpc3Bvc2U9dGhpcy5fb25EaXNwb3NlLmV2ZW50LHRoaXMuX2NhY2hlZEJnPW51bGwsdGhpcy5fY2FjaGVkRmc9bnVsbCx0aGlzLm1hcmtlcj1lLm1hcmtlcix0aGlzLm9wdGlvbnMub3ZlcnZpZXdSdWxlck9wdGlvbnMmJiF0aGlzLm9wdGlvbnMub3ZlcnZpZXdSdWxlck9wdGlvbnMucG9zaXRpb24mJih0aGlzLm9wdGlvbnMub3ZlcnZpZXdSdWxlck9wdGlvbnMucG9zaXRpb249XCJmdWxsXCIpfWdldCBiYWNrZ3JvdW5kQ29sb3JSR0IoKXtyZXR1cm4gbnVsbD09PXRoaXMuX2NhY2hlZEJnJiYodGhpcy5vcHRpb25zLmJhY2tncm91bmRDb2xvcj90aGlzLl9jYWNoZWRCZz1zLmNzcy50b0NvbG9yKHRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IpOnRoaXMuX2NhY2hlZEJnPXZvaWQgMCksdGhpcy5fY2FjaGVkQmd9Z2V0IGZvcmVncm91bmRDb2xvclJHQigpe3JldHVybiBudWxsPT09dGhpcy5fY2FjaGVkRmcmJih0aGlzLm9wdGlvbnMuZm9yZWdyb3VuZENvbG9yP3RoaXMuX2NhY2hlZEZnPXMuY3NzLnRvQ29sb3IodGhpcy5vcHRpb25zLmZvcmVncm91bmRDb2xvcik6dGhpcy5fY2FjaGVkRmc9dm9pZCAwKSx0aGlzLl9jYWNoZWRGZ31kaXNwb3NlKCl7dGhpcy5faXNEaXNwb3NlZHx8KHRoaXMuX2lzRGlzcG9zZWQ9ITAsdGhpcy5fb25EaXNwb3NlLmZpcmUoKSxzdXBlci5kaXNwb3NlKCkpfX19LDM3MzA6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LGkscyl7dmFyIHIsbj1hcmd1bWVudHMubGVuZ3RoLG89bjwzP3Q6bnVsbD09PXM/cz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk6cztpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlvPVJlZmxlY3QuZGVjb3JhdGUoZSx0LGkscyk7ZWxzZSBmb3IodmFyIGE9ZS5sZW5ndGgtMTthPj0wO2EtLSkocj1lW2FdKSYmKG89KG48Mz9yKG8pOm4+Mz9yKHQsaSxvKTpyKHQsaSkpfHxvKTtyZXR1cm4gbj4zJiZvJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLG8pLG99LHI9dGhpcyYmdGhpcy5fX3BhcmFtfHxmdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihpLHMpe3QoaSxzLGUpfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5EaXJ0eVJvd1NlcnZpY2U9dm9pZCAwO2NvbnN0IG49aSgyNTg1KTtsZXQgbz1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9idWZmZXJTZXJ2aWNlPWUsdGhpcy5jbGVhclJhbmdlKCl9Z2V0IHN0YXJ0KCl7cmV0dXJuIHRoaXMuX3N0YXJ0fWdldCBlbmQoKXtyZXR1cm4gdGhpcy5fZW5kfWNsZWFyUmFuZ2UoKXt0aGlzLl9zdGFydD10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55LHRoaXMuX2VuZD10aGlzLl9idWZmZXJTZXJ2aWNlLmJ1ZmZlci55fW1hcmtEaXJ0eShlKXtlPHRoaXMuX3N0YXJ0P3RoaXMuX3N0YXJ0PWU6ZT50aGlzLl9lbmQmJih0aGlzLl9lbmQ9ZSl9bWFya1JhbmdlRGlydHkoZSx0KXtpZihlPnQpe2NvbnN0IGk9ZTtlPXQsdD1pfWU8dGhpcy5fc3RhcnQmJih0aGlzLl9zdGFydD1lKSx0PnRoaXMuX2VuZCYmKHRoaXMuX2VuZD10KX1tYXJrQWxsRGlydHkoKXt0aGlzLm1hcmtSYW5nZURpcnR5KDAsdGhpcy5fYnVmZmVyU2VydmljZS5yb3dzLTEpfX07bz1zKFtyKDAsbi5JQnVmZmVyU2VydmljZSldLG8pLHQuRGlydHlSb3dTZXJ2aWNlPW99LDQzNDg6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuSW5zdGFudGlhdGlvblNlcnZpY2U9dC5TZXJ2aWNlQ29sbGVjdGlvbj12b2lkIDA7Y29uc3Qgcz1pKDI1ODUpLHI9aSg4MzQzKTtjbGFzcyBue2NvbnN0cnVjdG9yKC4uLmUpe3RoaXMuX2VudHJpZXM9bmV3IE1hcDtmb3IoY29uc3RbdCxpXW9mIGUpdGhpcy5zZXQodCxpKX1zZXQoZSx0KXtjb25zdCBpPXRoaXMuX2VudHJpZXMuZ2V0KGUpO3JldHVybiB0aGlzLl9lbnRyaWVzLnNldChlLHQpLGl9Zm9yRWFjaChlKXt0aGlzLl9lbnRyaWVzLmZvckVhY2goKCh0LGkpPT5lKGksdCkpKX1oYXMoZSl7cmV0dXJuIHRoaXMuX2VudHJpZXMuaGFzKGUpfWdldChlKXtyZXR1cm4gdGhpcy5fZW50cmllcy5nZXQoZSl9fXQuU2VydmljZUNvbGxlY3Rpb249bix0Lkluc3RhbnRpYXRpb25TZXJ2aWNlPWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5fc2VydmljZXM9bmV3IG4sdGhpcy5fc2VydmljZXMuc2V0KHMuSUluc3RhbnRpYXRpb25TZXJ2aWNlLHRoaXMpfXNldFNlcnZpY2UoZSx0KXt0aGlzLl9zZXJ2aWNlcy5zZXQoZSx0KX1nZXRTZXJ2aWNlKGUpe3JldHVybiB0aGlzLl9zZXJ2aWNlcy5nZXQoZSl9Y3JlYXRlSW5zdGFuY2UoZSwuLi50KXtjb25zdCBpPSgwLHIuZ2V0U2VydmljZURlcGVuZGVuY2llcykoZSkuc29ydCgoKGUsdCk9PmUuaW5kZXgtdC5pbmRleCkpLHM9W107Zm9yKGNvbnN0IHQgb2YgaSl7Y29uc3QgaT10aGlzLl9zZXJ2aWNlcy5nZXQodC5pZCk7aWYoIWkpdGhyb3cgbmV3IEVycm9yKGBbY3JlYXRlSW5zdGFuY2VdICR7ZS5uYW1lfSBkZXBlbmRzIG9uIFVOS05PV04gc2VydmljZSAke3QuaWR9LmApO3MucHVzaChpKX1jb25zdCBuPWkubGVuZ3RoPjA/aVswXS5pbmRleDp0Lmxlbmd0aDtpZih0Lmxlbmd0aCE9PW4pdGhyb3cgbmV3IEVycm9yKGBbY3JlYXRlSW5zdGFuY2VdIEZpcnN0IHNlcnZpY2UgZGVwZW5kZW5jeSBvZiAke2UubmFtZX0gYXQgcG9zaXRpb24gJHtuKzF9IGNvbmZsaWN0cyB3aXRoICR7dC5sZW5ndGh9IHN0YXRpYyBhcmd1bWVudHNgKTtyZXR1cm4gbmV3IGUoLi4uWy4uLnQsLi4uc10pfX19LDc4NjY6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LGkscyl7dmFyIHIsbj1hcmd1bWVudHMubGVuZ3RoLG89bjwzP3Q6bnVsbD09PXM/cz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsaSk6cztpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlvPVJlZmxlY3QuZGVjb3JhdGUoZSx0LGkscyk7ZWxzZSBmb3IodmFyIGE9ZS5sZW5ndGgtMTthPj0wO2EtLSkocj1lW2FdKSYmKG89KG48Mz9yKG8pOm4+Mz9yKHQsaSxvKTpyKHQsaSkpfHxvKTtyZXR1cm4gbj4zJiZvJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLG8pLG99LHI9dGhpcyYmdGhpcy5fX3BhcmFtfHxmdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihpLHMpe3QoaSxzLGUpfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Mb2dTZXJ2aWNlPXZvaWQgMDtjb25zdCBuPWkoMjU4NSksbz17ZGVidWc6bi5Mb2dMZXZlbEVudW0uREVCVUcsaW5mbzpuLkxvZ0xldmVsRW51bS5JTkZPLHdhcm46bi5Mb2dMZXZlbEVudW0uV0FSTixlcnJvcjpuLkxvZ0xldmVsRW51bS5FUlJPUixvZmY6bi5Mb2dMZXZlbEVudW0uT0ZGfTtsZXQgYT1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9vcHRpb25zU2VydmljZT1lLHRoaXMubG9nTGV2ZWw9bi5Mb2dMZXZlbEVudW0uT0ZGLHRoaXMuX3VwZGF0ZUxvZ0xldmVsKCksdGhpcy5fb3B0aW9uc1NlcnZpY2Uub25PcHRpb25DaGFuZ2UoKGU9PntcImxvZ0xldmVsXCI9PT1lJiZ0aGlzLl91cGRhdGVMb2dMZXZlbCgpfSkpfV91cGRhdGVMb2dMZXZlbCgpe3RoaXMubG9nTGV2ZWw9b1t0aGlzLl9vcHRpb25zU2VydmljZS5yYXdPcHRpb25zLmxvZ0xldmVsXX1fZXZhbExhenlPcHRpb25hbFBhcmFtcyhlKXtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKylcImZ1bmN0aW9uXCI9PXR5cGVvZiBlW3RdJiYoZVt0XT1lW3RdKCkpfV9sb2coZSx0LGkpe3RoaXMuX2V2YWxMYXp5T3B0aW9uYWxQYXJhbXMoaSksZS5jYWxsKGNvbnNvbGUsXCJ4dGVybS5qczogXCIrdCwuLi5pKX1kZWJ1ZyhlLC4uLnQpe3RoaXMubG9nTGV2ZWw8PW4uTG9nTGV2ZWxFbnVtLkRFQlVHJiZ0aGlzLl9sb2coY29uc29sZS5sb2csZSx0KX1pbmZvKGUsLi4udCl7dGhpcy5sb2dMZXZlbDw9bi5Mb2dMZXZlbEVudW0uSU5GTyYmdGhpcy5fbG9nKGNvbnNvbGUuaW5mbyxlLHQpfXdhcm4oZSwuLi50KXt0aGlzLmxvZ0xldmVsPD1uLkxvZ0xldmVsRW51bS5XQVJOJiZ0aGlzLl9sb2coY29uc29sZS53YXJuLGUsdCl9ZXJyb3IoZSwuLi50KXt0aGlzLmxvZ0xldmVsPD1uLkxvZ0xldmVsRW51bS5FUlJPUiYmdGhpcy5fbG9nKGNvbnNvbGUuZXJyb3IsZSx0KX19O2E9cyhbcigwLG4uSU9wdGlvbnNTZXJ2aWNlKV0sYSksdC5Mb2dTZXJ2aWNlPWF9LDczMDI6KGUsdCxpKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuT3B0aW9uc1NlcnZpY2U9dC5ERUZBVUxUX09QVElPTlM9dm9pZCAwO2NvbnN0IHM9aSg4NDYwKSxyPWkoNjExNCk7dC5ERUZBVUxUX09QVElPTlM9e2NvbHM6ODAscm93czoyNCxjdXJzb3JCbGluazohMSxjdXJzb3JTdHlsZTpcImJsb2NrXCIsY3Vyc29yV2lkdGg6MSxjdXN0b21HbHlwaHM6ITAsZHJhd0JvbGRUZXh0SW5CcmlnaHRDb2xvcnM6ITAsZmFzdFNjcm9sbE1vZGlmaWVyOlwiYWx0XCIsZmFzdFNjcm9sbFNlbnNpdGl2aXR5OjUsZm9udEZhbWlseTpcImNvdXJpZXItbmV3LCBjb3VyaWVyLCBtb25vc3BhY2VcIixmb250U2l6ZToxNSxmb250V2VpZ2h0Olwibm9ybWFsXCIsZm9udFdlaWdodEJvbGQ6XCJib2xkXCIsbGluZUhlaWdodDoxLGxldHRlclNwYWNpbmc6MCxsaW5rSGFuZGxlcjpudWxsLGxvZ0xldmVsOlwiaW5mb1wiLHNjcm9sbGJhY2s6MWUzLHNjcm9sbFNlbnNpdGl2aXR5OjEsc2NyZWVuUmVhZGVyTW9kZTohMSxzbW9vdGhTY3JvbGxEdXJhdGlvbjowLG1hY09wdGlvbklzTWV0YTohMSxtYWNPcHRpb25DbGlja0ZvcmNlc1NlbGVjdGlvbjohMSxtaW5pbXVtQ29udHJhc3RSYXRpbzoxLGRpc2FibGVTdGRpbjohMSxhbGxvd1Byb3Bvc2VkQXBpOiExLGFsbG93VHJhbnNwYXJlbmN5OiExLHRhYlN0b3BXaWR0aDo4LHRoZW1lOnt9LHJpZ2h0Q2xpY2tTZWxlY3RzV29yZDpyLmlzTWFjLHdpbmRvd09wdGlvbnM6e30sd2luZG93c01vZGU6ITEsd29yZFNlcGFyYXRvcjpcIiAoKVtde30nLFxcXCJgXCIsYWx0Q2xpY2tNb3Zlc0N1cnNvcjohMCxjb252ZXJ0RW9sOiExLHRlcm1OYW1lOlwieHRlcm1cIixjYW5jZWxFdmVudHM6ITEsb3ZlcnZpZXdSdWxlcldpZHRoOjB9O2NvbnN0IG49W1wibm9ybWFsXCIsXCJib2xkXCIsXCIxMDBcIixcIjIwMFwiLFwiMzAwXCIsXCI0MDBcIixcIjUwMFwiLFwiNjAwXCIsXCI3MDBcIixcIjgwMFwiLFwiOTAwXCJdO3QuT3B0aW9uc1NlcnZpY2U9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dGhpcy5fb25PcHRpb25DaGFuZ2U9bmV3IHMuRXZlbnRFbWl0dGVyO2NvbnN0IGk9T2JqZWN0LmFzc2lnbih7fSx0LkRFRkFVTFRfT1BUSU9OUyk7Zm9yKGNvbnN0IHQgaW4gZSlpZih0IGluIGkpdHJ5e2NvbnN0IHM9ZVt0XTtpW3RdPXRoaXMuX3Nhbml0aXplQW5kVmFsaWRhdGVPcHRpb24odCxzKX1jYXRjaChlKXtjb25zb2xlLmVycm9yKGUpfXRoaXMucmF3T3B0aW9ucz1pLHRoaXMub3B0aW9ucz1PYmplY3QuYXNzaWduKHt9LGkpLHRoaXMuX3NldHVwT3B0aW9ucygpfWdldCBvbk9wdGlvbkNoYW5nZSgpe3JldHVybiB0aGlzLl9vbk9wdGlvbkNoYW5nZS5ldmVudH1fc2V0dXBPcHRpb25zKCl7Y29uc3QgZT1lPT57aWYoIShlIGluIHQuREVGQVVMVF9PUFRJT05TKSl0aHJvdyBuZXcgRXJyb3IoYE5vIG9wdGlvbiB3aXRoIGtleSBcIiR7ZX1cImApO3JldHVybiB0aGlzLnJhd09wdGlvbnNbZV19LGk9KGUsaSk9PntpZighKGUgaW4gdC5ERUZBVUxUX09QVElPTlMpKXRocm93IG5ldyBFcnJvcihgTm8gb3B0aW9uIHdpdGgga2V5IFwiJHtlfVwiYCk7aT10aGlzLl9zYW5pdGl6ZUFuZFZhbGlkYXRlT3B0aW9uKGUsaSksdGhpcy5yYXdPcHRpb25zW2VdIT09aSYmKHRoaXMucmF3T3B0aW9uc1tlXT1pLHRoaXMuX29uT3B0aW9uQ2hhbmdlLmZpcmUoZSkpfTtmb3IoY29uc3QgdCBpbiB0aGlzLnJhd09wdGlvbnMpe2NvbnN0IHM9e2dldDplLmJpbmQodGhpcyx0KSxzZXQ6aS5iaW5kKHRoaXMsdCl9O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLm9wdGlvbnMsdCxzKX19X3Nhbml0aXplQW5kVmFsaWRhdGVPcHRpb24oZSxpKXtzd2l0Y2goZSl7Y2FzZVwiY3Vyc29yU3R5bGVcIjppZihpfHwoaT10LkRFRkFVTFRfT1BUSU9OU1tlXSksIWZ1bmN0aW9uKGUpe3JldHVyblwiYmxvY2tcIj09PWV8fFwidW5kZXJsaW5lXCI9PT1lfHxcImJhclwiPT09ZX0oaSkpdGhyb3cgbmV3IEVycm9yKGBcIiR7aX1cIiBpcyBub3QgYSB2YWxpZCB2YWx1ZSBmb3IgJHtlfWApO2JyZWFrO2Nhc2VcIndvcmRTZXBhcmF0b3JcIjppfHwoaT10LkRFRkFVTFRfT1BUSU9OU1tlXSk7YnJlYWs7Y2FzZVwiZm9udFdlaWdodFwiOmNhc2VcImZvbnRXZWlnaHRCb2xkXCI6aWYoXCJudW1iZXJcIj09dHlwZW9mIGkmJjE8PWkmJmk8PTFlMylicmVhaztpPW4uaW5jbHVkZXMoaSk/aTp0LkRFRkFVTFRfT1BUSU9OU1tlXTticmVhaztjYXNlXCJjdXJzb3JXaWR0aFwiOmk9TWF0aC5mbG9vcihpKTtjYXNlXCJsaW5lSGVpZ2h0XCI6Y2FzZVwidGFiU3RvcFdpZHRoXCI6aWYoaTwxKXRocm93IG5ldyBFcnJvcihgJHtlfSBjYW5ub3QgYmUgbGVzcyB0aGFuIDEsIHZhbHVlOiAke2l9YCk7YnJlYWs7Y2FzZVwibWluaW11bUNvbnRyYXN0UmF0aW9cIjppPU1hdGgubWF4KDEsTWF0aC5taW4oMjEsTWF0aC5yb3VuZCgxMCppKS8xMCkpO2JyZWFrO2Nhc2VcInNjcm9sbGJhY2tcIjppZigoaT1NYXRoLm1pbihpLDQyOTQ5NjcyOTUpKTwwKXRocm93IG5ldyBFcnJvcihgJHtlfSBjYW5ub3QgYmUgbGVzcyB0aGFuIDAsIHZhbHVlOiAke2l9YCk7YnJlYWs7Y2FzZVwiZmFzdFNjcm9sbFNlbnNpdGl2aXR5XCI6Y2FzZVwic2Nyb2xsU2Vuc2l0aXZpdHlcIjppZihpPD0wKXRocm93IG5ldyBFcnJvcihgJHtlfSBjYW5ub3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDAsIHZhbHVlOiAke2l9YCk7Y2FzZVwicm93c1wiOmNhc2VcImNvbHNcIjppZighaSYmMCE9PWkpdGhyb3cgbmV3IEVycm9yKGAke2V9IG11c3QgYmUgbnVtZXJpYywgdmFsdWU6ICR7aX1gKX1yZXR1cm4gaX19fSwyNjYwOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxpLHMpe3ZhciByLG49YXJndW1lbnRzLmxlbmd0aCxvPW48Mz90Om51bGw9PT1zP3M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGkpOnM7aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpbz1SZWZsZWN0LmRlY29yYXRlKGUsdCxpLHMpO2Vsc2UgZm9yKHZhciBhPWUubGVuZ3RoLTE7YT49MDthLS0pKHI9ZVthXSkmJihvPShuPDM/cihvKTpuPjM/cih0LGksbyk6cih0LGkpKXx8byk7cmV0dXJuIG4+MyYmbyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSxvKSxvfSxyPXRoaXMmJnRoaXMuX19wYXJhbXx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oaSxzKXt0KGkscyxlKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuT3NjTGlua1NlcnZpY2U9dm9pZCAwO2NvbnN0IG49aSgyNTg1KTtsZXQgbz1jbGFzc3tjb25zdHJ1Y3RvcihlKXt0aGlzLl9idWZmZXJTZXJ2aWNlPWUsdGhpcy5fbmV4dElkPTEsdGhpcy5fZW50cmllc1dpdGhJZD1uZXcgTWFwLHRoaXMuX2RhdGFCeUxpbmtJZD1uZXcgTWFwfXJlZ2lzdGVyTGluayhlKXtjb25zdCB0PXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyO2lmKHZvaWQgMD09PWUuaWQpe2NvbnN0IGk9dC5hZGRNYXJrZXIodC55YmFzZSt0LnkpLHM9e2RhdGE6ZSxpZDp0aGlzLl9uZXh0SWQrKyxsaW5lczpbaV19O3JldHVybiBpLm9uRGlzcG9zZSgoKCk9PnRoaXMuX3JlbW92ZU1hcmtlckZyb21MaW5rKHMsaSkpKSx0aGlzLl9kYXRhQnlMaW5rSWQuc2V0KHMuaWQscykscy5pZH1jb25zdCBpPWUscz10aGlzLl9nZXRFbnRyeUlkS2V5KGkpLHI9dGhpcy5fZW50cmllc1dpdGhJZC5nZXQocyk7aWYocilyZXR1cm4gdGhpcy5hZGRMaW5lVG9MaW5rKHIuaWQsdC55YmFzZSt0LnkpLHIuaWQ7Y29uc3Qgbj10LmFkZE1hcmtlcih0LnliYXNlK3QueSksbz17aWQ6dGhpcy5fbmV4dElkKyssa2V5OnRoaXMuX2dldEVudHJ5SWRLZXkoaSksZGF0YTppLGxpbmVzOltuXX07cmV0dXJuIG4ub25EaXNwb3NlKCgoKT0+dGhpcy5fcmVtb3ZlTWFya2VyRnJvbUxpbmsobyxuKSkpLHRoaXMuX2VudHJpZXNXaXRoSWQuc2V0KG8ua2V5LG8pLHRoaXMuX2RhdGFCeUxpbmtJZC5zZXQoby5pZCxvKSxvLmlkfWFkZExpbmVUb0xpbmsoZSx0KXtjb25zdCBpPXRoaXMuX2RhdGFCeUxpbmtJZC5nZXQoZSk7aWYoaSYmaS5saW5lcy5ldmVyeSgoZT0+ZS5saW5lIT09dCkpKXtjb25zdCBlPXRoaXMuX2J1ZmZlclNlcnZpY2UuYnVmZmVyLmFkZE1hcmtlcih0KTtpLmxpbmVzLnB1c2goZSksZS5vbkRpc3Bvc2UoKCgpPT50aGlzLl9yZW1vdmVNYXJrZXJGcm9tTGluayhpLGUpKSl9fWdldExpbmtEYXRhKGUpe3ZhciB0O3JldHVybiBudWxsPT09KHQ9dGhpcy5fZGF0YUJ5TGlua0lkLmdldChlKSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZGF0YX1fZ2V0RW50cnlJZEtleShlKXtyZXR1cm5gJHtlLmlkfTs7JHtlLnVyaX1gfV9yZW1vdmVNYXJrZXJGcm9tTGluayhlLHQpe2NvbnN0IGk9ZS5saW5lcy5pbmRleE9mKHQpOy0xIT09aSYmKGUubGluZXMuc3BsaWNlKGksMSksMD09PWUubGluZXMubGVuZ3RoJiYodm9pZCAwIT09ZS5kYXRhLmlkJiZ0aGlzLl9lbnRyaWVzV2l0aElkLmRlbGV0ZShlLmtleSksdGhpcy5fZGF0YUJ5TGlua0lkLmRlbGV0ZShlLmlkKSkpfX07bz1zKFtyKDAsbi5JQnVmZmVyU2VydmljZSldLG8pLHQuT3NjTGlua1NlcnZpY2U9b30sODM0MzooZSx0KT0+e2Z1bmN0aW9uIGkoZSx0LGkpe3QuZGkkdGFyZ2V0PT09dD90LmRpJGRlcGVuZGVuY2llcy5wdXNoKHtpZDplLGluZGV4Oml9KToodC5kaSRkZXBlbmRlbmNpZXM9W3tpZDplLGluZGV4Oml9XSx0LmRpJHRhcmdldD10KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LmNyZWF0ZURlY29yYXRvcj10LmdldFNlcnZpY2VEZXBlbmRlbmNpZXM9dC5zZXJ2aWNlUmVnaXN0cnk9dm9pZCAwLHQuc2VydmljZVJlZ2lzdHJ5PW5ldyBNYXAsdC5nZXRTZXJ2aWNlRGVwZW5kZW5jaWVzPWZ1bmN0aW9uKGUpe3JldHVybiBlLmRpJGRlcGVuZGVuY2llc3x8W119LHQuY3JlYXRlRGVjb3JhdG9yPWZ1bmN0aW9uKGUpe2lmKHQuc2VydmljZVJlZ2lzdHJ5LmhhcyhlKSlyZXR1cm4gdC5zZXJ2aWNlUmVnaXN0cnkuZ2V0KGUpO2NvbnN0IHM9ZnVuY3Rpb24oZSx0LHIpe2lmKDMhPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkBJU2VydmljZU5hbWUtZGVjb3JhdG9yIGNhbiBvbmx5IGJlIHVzZWQgdG8gZGVjb3JhdGUgYSBwYXJhbWV0ZXJcIik7aShzLGUscil9O3JldHVybiBzLnRvU3RyaW5nPSgpPT5lLHQuc2VydmljZVJlZ2lzdHJ5LnNldChlLHMpLHN9fSwyNTg1OihlLHQsaSk9PntPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSx0LklEZWNvcmF0aW9uU2VydmljZT10LklVbmljb2RlU2VydmljZT10LklPc2NMaW5rU2VydmljZT10LklPcHRpb25zU2VydmljZT10LklMb2dTZXJ2aWNlPXQuTG9nTGV2ZWxFbnVtPXQuSUluc3RhbnRpYXRpb25TZXJ2aWNlPXQuSURpcnR5Um93U2VydmljZT10LklDaGFyc2V0U2VydmljZT10LklDb3JlU2VydmljZT10LklDb3JlTW91c2VTZXJ2aWNlPXQuSUJ1ZmZlclNlcnZpY2U9dm9pZCAwO2NvbnN0IHM9aSg4MzQzKTt2YXIgcjt0LklCdWZmZXJTZXJ2aWNlPSgwLHMuY3JlYXRlRGVjb3JhdG9yKShcIkJ1ZmZlclNlcnZpY2VcIiksdC5JQ29yZU1vdXNlU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJDb3JlTW91c2VTZXJ2aWNlXCIpLHQuSUNvcmVTZXJ2aWNlPSgwLHMuY3JlYXRlRGVjb3JhdG9yKShcIkNvcmVTZXJ2aWNlXCIpLHQuSUNoYXJzZXRTZXJ2aWNlPSgwLHMuY3JlYXRlRGVjb3JhdG9yKShcIkNoYXJzZXRTZXJ2aWNlXCIpLHQuSURpcnR5Um93U2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJEaXJ0eVJvd1NlcnZpY2VcIiksdC5JSW5zdGFudGlhdGlvblNlcnZpY2U9KDAscy5jcmVhdGVEZWNvcmF0b3IpKFwiSW5zdGFudGlhdGlvblNlcnZpY2VcIiksKHI9dC5Mb2dMZXZlbEVudW18fCh0LkxvZ0xldmVsRW51bT17fSkpW3IuREVCVUc9MF09XCJERUJVR1wiLHJbci5JTkZPPTFdPVwiSU5GT1wiLHJbci5XQVJOPTJdPVwiV0FSTlwiLHJbci5FUlJPUj0zXT1cIkVSUk9SXCIscltyLk9GRj00XT1cIk9GRlwiLHQuSUxvZ1NlcnZpY2U9KDAscy5jcmVhdGVEZWNvcmF0b3IpKFwiTG9nU2VydmljZVwiKSx0LklPcHRpb25zU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJPcHRpb25zU2VydmljZVwiKSx0LklPc2NMaW5rU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJPc2NMaW5rU2VydmljZVwiKSx0LklVbmljb2RlU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJVbmljb2RlU2VydmljZVwiKSx0LklEZWNvcmF0aW9uU2VydmljZT0oMCxzLmNyZWF0ZURlY29yYXRvcikoXCJEZWNvcmF0aW9uU2VydmljZVwiKX0sMTQ4MDooZSx0LGkpPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5Vbmljb2RlU2VydmljZT12b2lkIDA7Y29uc3Qgcz1pKDg0NjApLHI9aSgyMjUpO3QuVW5pY29kZVNlcnZpY2U9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLl9wcm92aWRlcnM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9hY3RpdmU9XCJcIix0aGlzLl9vbkNoYW5nZT1uZXcgcy5FdmVudEVtaXR0ZXI7Y29uc3QgZT1uZXcgci5Vbmljb2RlVjY7dGhpcy5yZWdpc3RlcihlKSx0aGlzLl9hY3RpdmU9ZS52ZXJzaW9uLHRoaXMuX2FjdGl2ZVByb3ZpZGVyPWV9Z2V0IG9uQ2hhbmdlKCl7cmV0dXJuIHRoaXMuX29uQ2hhbmdlLmV2ZW50fWdldCB2ZXJzaW9ucygpe3JldHVybiBPYmplY3Qua2V5cyh0aGlzLl9wcm92aWRlcnMpfWdldCBhY3RpdmVWZXJzaW9uKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZX1zZXQgYWN0aXZlVmVyc2lvbihlKXtpZighdGhpcy5fcHJvdmlkZXJzW2VdKXRocm93IG5ldyBFcnJvcihgdW5rbm93biBVbmljb2RlIHZlcnNpb24gXCIke2V9XCJgKTt0aGlzLl9hY3RpdmU9ZSx0aGlzLl9hY3RpdmVQcm92aWRlcj10aGlzLl9wcm92aWRlcnNbZV0sdGhpcy5fb25DaGFuZ2UuZmlyZShlKX1yZWdpc3RlcihlKXt0aGlzLl9wcm92aWRlcnNbZS52ZXJzaW9uXT1lfXdjd2lkdGgoZSl7cmV0dXJuIHRoaXMuX2FjdGl2ZVByb3ZpZGVyLndjd2lkdGgoZSl9Z2V0U3RyaW5nQ2VsbFdpZHRoKGUpe2xldCB0PTA7Y29uc3QgaT1lLmxlbmd0aDtmb3IobGV0IHM9MDtzPGk7KytzKXtsZXQgcj1lLmNoYXJDb2RlQXQocyk7aWYoNTUyOTY8PXImJnI8PTU2MzE5KXtpZigrK3M+PWkpcmV0dXJuIHQrdGhpcy53Y3dpZHRoKHIpO2NvbnN0IG49ZS5jaGFyQ29kZUF0KHMpOzU2MzIwPD1uJiZuPD01NzM0Mz9yPTEwMjQqKHItNTUyOTYpK24tNTYzMjArNjU1MzY6dCs9dGhpcy53Y3dpZHRoKG4pfXQrPXRoaXMud2N3aWR0aChyKX1yZXR1cm4gdH19fX0sdD17fTtmdW5jdGlvbiBpKHMpe3ZhciByPXRbc107aWYodm9pZCAwIT09cilyZXR1cm4gci5leHBvcnRzO3ZhciBuPXRbc109e2V4cG9ydHM6e319O3JldHVybiBlW3NdLmNhbGwobi5leHBvcnRzLG4sbi5leHBvcnRzLGkpLG4uZXhwb3J0c312YXIgcz17fTtyZXR1cm4oKCk9Pnt2YXIgZT1zO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGUuVGVybWluYWw9dm9pZCAwO2NvbnN0IHQ9aSgzMjM2KSxyPWkoOTA0Miksbj1pKDc5NzUpLG89aSg3MDkwKSxhPWkoNTc0MSksaD1pKDgyODUpLGM9W1wiY29sc1wiLFwicm93c1wiXTtlLlRlcm1pbmFsPWNsYXNze2NvbnN0cnVjdG9yKGUpe3RoaXMuX2NvcmU9bmV3IHQuVGVybWluYWwoZSksdGhpcy5fYWRkb25NYW5hZ2VyPW5ldyBhLkFkZG9uTWFuYWdlcix0aGlzLl9wdWJsaWNPcHRpb25zPU9iamVjdC5hc3NpZ24oe30sdGhpcy5fY29yZS5vcHRpb25zKTtjb25zdCBpPWU9PnRoaXMuX2NvcmUub3B0aW9uc1tlXSxzPShlLHQpPT57dGhpcy5fY2hlY2tSZWFkb25seU9wdGlvbnMoZSksdGhpcy5fY29yZS5vcHRpb25zW2VdPXR9O2Zvcihjb25zdCBlIGluIHRoaXMuX2NvcmUub3B0aW9ucyl7Y29uc3QgdD17Z2V0OmkuYmluZCh0aGlzLGUpLHNldDpzLmJpbmQodGhpcyxlKX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMuX3B1YmxpY09wdGlvbnMsZSx0KX19X2NoZWNrUmVhZG9ubHlPcHRpb25zKGUpe2lmKGMuaW5jbHVkZXMoZSkpdGhyb3cgbmV3IEVycm9yKGBPcHRpb24gXCIke2V9XCIgY2FuIG9ubHkgYmUgc2V0IGluIHRoZSBjb25zdHJ1Y3RvcmApfV9jaGVja1Byb3Bvc2VkQXBpKCl7aWYoIXRoaXMuX2NvcmUub3B0aW9uc1NlcnZpY2UucmF3T3B0aW9ucy5hbGxvd1Byb3Bvc2VkQXBpKXRocm93IG5ldyBFcnJvcihcIllvdSBtdXN0IHNldCB0aGUgYWxsb3dQcm9wb3NlZEFwaSBvcHRpb24gdG8gdHJ1ZSB0byB1c2UgcHJvcG9zZWQgQVBJXCIpfWdldCBvbkJlbGwoKXtyZXR1cm4gdGhpcy5fY29yZS5vbkJlbGx9Z2V0IG9uQmluYXJ5KCl7cmV0dXJuIHRoaXMuX2NvcmUub25CaW5hcnl9Z2V0IG9uQ3Vyc29yTW92ZSgpe3JldHVybiB0aGlzLl9jb3JlLm9uQ3Vyc29yTW92ZX1nZXQgb25EYXRhKCl7cmV0dXJuIHRoaXMuX2NvcmUub25EYXRhfWdldCBvbktleSgpe3JldHVybiB0aGlzLl9jb3JlLm9uS2V5fWdldCBvbkxpbmVGZWVkKCl7cmV0dXJuIHRoaXMuX2NvcmUub25MaW5lRmVlZH1nZXQgb25SZW5kZXIoKXtyZXR1cm4gdGhpcy5fY29yZS5vblJlbmRlcn1nZXQgb25SZXNpemUoKXtyZXR1cm4gdGhpcy5fY29yZS5vblJlc2l6ZX1nZXQgb25TY3JvbGwoKXtyZXR1cm4gdGhpcy5fY29yZS5vblNjcm9sbH1nZXQgb25TZWxlY3Rpb25DaGFuZ2UoKXtyZXR1cm4gdGhpcy5fY29yZS5vblNlbGVjdGlvbkNoYW5nZX1nZXQgb25UaXRsZUNoYW5nZSgpe3JldHVybiB0aGlzLl9jb3JlLm9uVGl0bGVDaGFuZ2V9Z2V0IG9uV3JpdGVQYXJzZWQoKXtyZXR1cm4gdGhpcy5fY29yZS5vbldyaXRlUGFyc2VkfWdldCBlbGVtZW50KCl7cmV0dXJuIHRoaXMuX2NvcmUuZWxlbWVudH1nZXQgcGFyc2VyKCl7cmV0dXJuIHRoaXMuX2NoZWNrUHJvcG9zZWRBcGkoKSx0aGlzLl9wYXJzZXJ8fCh0aGlzLl9wYXJzZXI9bmV3IG4uUGFyc2VyQXBpKHRoaXMuX2NvcmUpKSx0aGlzLl9wYXJzZXJ9Z2V0IHVuaWNvZGUoKXtyZXR1cm4gdGhpcy5fY2hlY2tQcm9wb3NlZEFwaSgpLG5ldyBvLlVuaWNvZGVBcGkodGhpcy5fY29yZSl9Z2V0IHRleHRhcmVhKCl7cmV0dXJuIHRoaXMuX2NvcmUudGV4dGFyZWF9Z2V0IHJvd3MoKXtyZXR1cm4gdGhpcy5fY29yZS5yb3dzfWdldCBjb2xzKCl7cmV0dXJuIHRoaXMuX2NvcmUuY29sc31nZXQgYnVmZmVyKCl7cmV0dXJuIHRoaXMuX2NoZWNrUHJvcG9zZWRBcGkoKSx0aGlzLl9idWZmZXJ8fCh0aGlzLl9idWZmZXI9bmV3IGguQnVmZmVyTmFtZXNwYWNlQXBpKHRoaXMuX2NvcmUpKSx0aGlzLl9idWZmZXJ9Z2V0IG1hcmtlcnMoKXtyZXR1cm4gdGhpcy5fY2hlY2tQcm9wb3NlZEFwaSgpLHRoaXMuX2NvcmUubWFya2Vyc31nZXQgbW9kZXMoKXtjb25zdCBlPXRoaXMuX2NvcmUuY29yZVNlcnZpY2UuZGVjUHJpdmF0ZU1vZGVzO2xldCB0PVwibm9uZVwiO3N3aXRjaCh0aGlzLl9jb3JlLmNvcmVNb3VzZVNlcnZpY2UuYWN0aXZlUHJvdG9jb2wpe2Nhc2VcIlgxMFwiOnQ9XCJ4MTBcIjticmVhaztjYXNlXCJWVDIwMFwiOnQ9XCJ2dDIwMFwiO2JyZWFrO2Nhc2VcIkRSQUdcIjp0PVwiZHJhZ1wiO2JyZWFrO2Nhc2VcIkFOWVwiOnQ9XCJhbnlcIn1yZXR1cm57YXBwbGljYXRpb25DdXJzb3JLZXlzTW9kZTplLmFwcGxpY2F0aW9uQ3Vyc29yS2V5cyxhcHBsaWNhdGlvbktleXBhZE1vZGU6ZS5hcHBsaWNhdGlvbktleXBhZCxicmFja2V0ZWRQYXN0ZU1vZGU6ZS5icmFja2V0ZWRQYXN0ZU1vZGUsaW5zZXJ0TW9kZTp0aGlzLl9jb3JlLmNvcmVTZXJ2aWNlLm1vZGVzLmluc2VydE1vZGUsbW91c2VUcmFja2luZ01vZGU6dCxvcmlnaW5Nb2RlOmUub3JpZ2luLHJldmVyc2VXcmFwYXJvdW5kTW9kZTplLnJldmVyc2VXcmFwYXJvdW5kLHNlbmRGb2N1c01vZGU6ZS5zZW5kRm9jdXMsd3JhcGFyb3VuZE1vZGU6ZS53cmFwYXJvdW5kfX1nZXQgb3B0aW9ucygpe3JldHVybiB0aGlzLl9wdWJsaWNPcHRpb25zfXNldCBvcHRpb25zKGUpe2Zvcihjb25zdCB0IGluIGUpdGhpcy5fcHVibGljT3B0aW9uc1t0XT1lW3RdfWJsdXIoKXt0aGlzLl9jb3JlLmJsdXIoKX1mb2N1cygpe3RoaXMuX2NvcmUuZm9jdXMoKX1yZXNpemUoZSx0KXt0aGlzLl92ZXJpZnlJbnRlZ2VycyhlLHQpLHRoaXMuX2NvcmUucmVzaXplKGUsdCl9b3BlbihlKXt0aGlzLl9jb3JlLm9wZW4oZSl9YXR0YWNoQ3VzdG9tS2V5RXZlbnRIYW5kbGVyKGUpe3RoaXMuX2NvcmUuYXR0YWNoQ3VzdG9tS2V5RXZlbnRIYW5kbGVyKGUpfXJlZ2lzdGVyTGlua1Byb3ZpZGVyKGUpe3JldHVybiB0aGlzLl9jaGVja1Byb3Bvc2VkQXBpKCksdGhpcy5fY29yZS5yZWdpc3RlckxpbmtQcm92aWRlcihlKX1yZWdpc3RlckNoYXJhY3RlckpvaW5lcihlKXtyZXR1cm4gdGhpcy5fY2hlY2tQcm9wb3NlZEFwaSgpLHRoaXMuX2NvcmUucmVnaXN0ZXJDaGFyYWN0ZXJKb2luZXIoZSl9ZGVyZWdpc3RlckNoYXJhY3RlckpvaW5lcihlKXt0aGlzLl9jaGVja1Byb3Bvc2VkQXBpKCksdGhpcy5fY29yZS5kZXJlZ2lzdGVyQ2hhcmFjdGVySm9pbmVyKGUpfXJlZ2lzdGVyTWFya2VyKGU9MCl7cmV0dXJuIHRoaXMuX3ZlcmlmeUludGVnZXJzKGUpLHRoaXMuX2NvcmUuYWRkTWFya2VyKGUpfXJlZ2lzdGVyRGVjb3JhdGlvbihlKXt2YXIgdCxpLHM7cmV0dXJuIHRoaXMuX2NoZWNrUHJvcG9zZWRBcGkoKSx0aGlzLl92ZXJpZnlQb3NpdGl2ZUludGVnZXJzKG51bGwhPT0odD1lLngpJiZ2b2lkIDAhPT10P3Q6MCxudWxsIT09KGk9ZS53aWR0aCkmJnZvaWQgMCE9PWk/aTowLG51bGwhPT0ocz1lLmhlaWdodCkmJnZvaWQgMCE9PXM/czowKSx0aGlzLl9jb3JlLnJlZ2lzdGVyRGVjb3JhdGlvbihlKX1oYXNTZWxlY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29yZS5oYXNTZWxlY3Rpb24oKX1zZWxlY3QoZSx0LGkpe3RoaXMuX3ZlcmlmeUludGVnZXJzKGUsdCxpKSx0aGlzLl9jb3JlLnNlbGVjdChlLHQsaSl9Z2V0U2VsZWN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvcmUuZ2V0U2VsZWN0aW9uKCl9Z2V0U2VsZWN0aW9uUG9zaXRpb24oKXtyZXR1cm4gdGhpcy5fY29yZS5nZXRTZWxlY3Rpb25Qb3NpdGlvbigpfWNsZWFyU2VsZWN0aW9uKCl7dGhpcy5fY29yZS5jbGVhclNlbGVjdGlvbigpfXNlbGVjdEFsbCgpe3RoaXMuX2NvcmUuc2VsZWN0QWxsKCl9c2VsZWN0TGluZXMoZSx0KXt0aGlzLl92ZXJpZnlJbnRlZ2VycyhlLHQpLHRoaXMuX2NvcmUuc2VsZWN0TGluZXMoZSx0KX1kaXNwb3NlKCl7dGhpcy5fYWRkb25NYW5hZ2VyLmRpc3Bvc2UoKSx0aGlzLl9jb3JlLmRpc3Bvc2UoKX1zY3JvbGxMaW5lcyhlKXt0aGlzLl92ZXJpZnlJbnRlZ2VycyhlKSx0aGlzLl9jb3JlLnNjcm9sbExpbmVzKGUpfXNjcm9sbFBhZ2VzKGUpe3RoaXMuX3ZlcmlmeUludGVnZXJzKGUpLHRoaXMuX2NvcmUuc2Nyb2xsUGFnZXMoZSl9c2Nyb2xsVG9Ub3AoKXt0aGlzLl9jb3JlLnNjcm9sbFRvVG9wKCl9c2Nyb2xsVG9Cb3R0b20oKXt0aGlzLl9jb3JlLnNjcm9sbFRvQm90dG9tKCl9c2Nyb2xsVG9MaW5lKGUpe3RoaXMuX3ZlcmlmeUludGVnZXJzKGUpLHRoaXMuX2NvcmUuc2Nyb2xsVG9MaW5lKGUpfWNsZWFyKCl7dGhpcy5fY29yZS5jbGVhcigpfXdyaXRlKGUsdCl7dGhpcy5fY29yZS53cml0ZShlLHQpfXdyaXRlbG4oZSx0KXt0aGlzLl9jb3JlLndyaXRlKGUpLHRoaXMuX2NvcmUud3JpdGUoXCJcXHJcXG5cIix0KX1wYXN0ZShlKXt0aGlzLl9jb3JlLnBhc3RlKGUpfXJlZnJlc2goZSx0KXt0aGlzLl92ZXJpZnlJbnRlZ2VycyhlLHQpLHRoaXMuX2NvcmUucmVmcmVzaChlLHQpfXJlc2V0KCl7dGhpcy5fY29yZS5yZXNldCgpfWNsZWFyVGV4dHVyZUF0bGFzKCl7dGhpcy5fY29yZS5jbGVhclRleHR1cmVBdGxhcygpfWxvYWRBZGRvbihlKXtyZXR1cm4gdGhpcy5fYWRkb25NYW5hZ2VyLmxvYWRBZGRvbih0aGlzLGUpfXN0YXRpYyBnZXQgc3RyaW5ncygpe3JldHVybiByfV92ZXJpZnlJbnRlZ2VycyguLi5lKXtmb3IoY29uc3QgdCBvZiBlKWlmKHQ9PT0xLzB8fGlzTmFOKHQpfHx0JTEhPTApdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBBUEkgb25seSBhY2NlcHRzIGludGVnZXJzXCIpfV92ZXJpZnlQb3NpdGl2ZUludGVnZXJzKC4uLmUpe2Zvcihjb25zdCB0IG9mIGUpaWYodCYmKHQ9PT0xLzB8fGlzTmFOKHQpfHx0JTEhPTB8fHQ8MCkpdGhyb3cgbmV3IEVycm9yKFwiVGhpcyBBUEkgb25seSBhY2NlcHRzIHBvc2l0aXZlIGludGVnZXJzXCIpfX19KSgpLHN9KSgpfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eHRlcm0uanMubWFwIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZnVuY3Rpb24gc3R5bGlzX21pbiAoVykge1xuICBmdW5jdGlvbiBNKGQsIGMsIGUsIGgsIGEpIHtcbiAgICBmb3IgKHZhciBtID0gMCwgYiA9IDAsIHYgPSAwLCBuID0gMCwgcSwgZywgeCA9IDAsIEsgPSAwLCBrLCB1ID0gayA9IHEgPSAwLCBsID0gMCwgciA9IDAsIEkgPSAwLCB0ID0gMCwgQiA9IGUubGVuZ3RoLCBKID0gQiAtIDEsIHksIGYgPSAnJywgcCA9ICcnLCBGID0gJycsIEcgPSAnJywgQzsgbCA8IEI7KSB7XG4gICAgICBnID0gZS5jaGFyQ29kZUF0KGwpO1xuICAgICAgbCA9PT0gSiAmJiAwICE9PSBiICsgbiArIHYgKyBtICYmICgwICE9PSBiICYmIChnID0gNDcgPT09IGIgPyAxMCA6IDQ3KSwgbiA9IHYgPSBtID0gMCwgQisrLCBKKyspO1xuXG4gICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICBpZiAobCA9PT0gSiAmJiAoMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKSwgMCA8IGYudHJpbSgpLmxlbmd0aCkpIHtcbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICBmICs9IGUuY2hhckF0KGwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGcgPSA1OTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgZiA9IGYudHJpbSgpO1xuICAgICAgICAgICAgcSA9IGYuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgICAgIGsgPSAxO1xuXG4gICAgICAgICAgICBmb3IgKHQgPSArK2w7IGwgPCBCOykge1xuICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgICAgICAgIGsrKztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgICAgICAgICBrLS07XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgYToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh1ID0gbCArIDE7IHUgPCBKOyArK3UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlLmNoYXJDb2RlQXQodSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQyID09PSBnICYmIDQyID09PSBlLmNoYXJDb2RlQXQodSAtIDEpICYmIGwgKyAyICE9PSB1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQ3ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1O1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgICAgZm9yICg7IGwrKyA8IEogJiYgZS5jaGFyQ29kZUF0KGwpICE9PSBnOykge1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoMCA9PT0gaykgYnJlYWs7XG4gICAgICAgICAgICAgIGwrKztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgayA9IGUuc3Vic3RyaW5nKHQsIGwpO1xuICAgICAgICAgICAgMCA9PT0gcSAmJiAocSA9IChmID0gZi5yZXBsYWNlKGNhLCAnJykudHJpbSgpKS5jaGFyQ29kZUF0KDApKTtcblxuICAgICAgICAgICAgc3dpdGNoIChxKSB7XG4gICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKTtcbiAgICAgICAgICAgICAgICBnID0gZi5jaGFyQ29kZUF0KDEpO1xuXG4gICAgICAgICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA5OlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICByID0gYztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHIgPSBPO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIHIsIGssIGcsIGEgKyAxKTtcbiAgICAgICAgICAgICAgICB0ID0gay5sZW5ndGg7XG4gICAgICAgICAgICAgICAgMCA8IEEgJiYgKHIgPSBYKE8sIGYsIEkpLCBDID0gSCgzLCBrLCByLCBjLCBELCB6LCB0LCBnLCBhLCBoKSwgZiA9IHIuam9pbignJyksIHZvaWQgMCAhPT0gQyAmJiAwID09PSAodCA9IChrID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGcgPSAwLCBrID0gJycpKTtcbiAgICAgICAgICAgICAgICBpZiAoMCA8IHQpIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICAgICAgICAgIGYgPSBmLnJlcGxhY2UoZGEsIGVhKTtcblxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA3OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGZhLCAnJDEgJDInKTtcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyAneycgKyBrICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICBrID0gMSA9PT0gdyB8fCAyID09PSB3ICYmIEwoJ0AnICsgaywgMykgPyAnQC13ZWJraXQtJyArIGsgKyAnQCcgKyBrIDogJ0AnICsgaztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgaywgMTEyID09PSBoICYmIChrID0gKHAgKz0gaywgJycpKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgayA9ICcnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgayA9IE0oYywgWChjLCBmLCBJKSwgaywgaCwgYSArIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBGICs9IGs7XG4gICAgICAgICAgICBrID0gSSA9IHIgPSB1ID0gcSA9IDA7XG4gICAgICAgICAgICBmID0gJyc7XG4gICAgICAgICAgICBnID0gZS5jaGFyQ29kZUF0KCsrbCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGNhc2UgNTk6XG4gICAgICAgICAgICBmID0gKDAgPCByID8gZi5yZXBsYWNlKE4sICcnKSA6IGYpLnRyaW0oKTtcbiAgICAgICAgICAgIGlmICgxIDwgKHQgPSBmLmxlbmd0aCkpIHN3aXRjaCAoMCA9PT0gdSAmJiAocSA9IGYuY2hhckNvZGVBdCgwKSwgNDUgPT09IHEgfHwgOTYgPCBxICYmIDEyMyA+IHEpICYmICh0ID0gKGYgPSBmLnJlcGxhY2UoJyAnLCAnOicpKS5sZW5ndGgpLCAwIDwgQSAmJiB2b2lkIDAgIT09IChDID0gSCgxLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCkpICYmIDAgPT09ICh0ID0gKGYgPSBDLnRyaW0oKSkubGVuZ3RoKSAmJiAoZiA9ICdcXHgwMFxceDAwJyksIHEgPSBmLmNoYXJDb2RlQXQoMCksIGcgPSBmLmNoYXJDb2RlQXQoMSksIHEpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgaWYgKDEwNSA9PT0gZyB8fCA5OSA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgRyArPSBmICsgZS5jaGFyQXQobCk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICA1OCAhPT0gZi5jaGFyQ29kZUF0KHQgLSAxKSAmJiAocCArPSBQKGYsIHEsIGcsIGYuY2hhckNvZGVBdCgyKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgSSA9IHIgPSB1ID0gcSA9IDA7XG4gICAgICAgICAgICBmID0gJyc7XG4gICAgICAgICAgICBnID0gZS5jaGFyQ29kZUF0KCsrbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgIGNhc2UgMTM6XG4gICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgNDcgPT09IGIgPyBiID0gMCA6IDAgPT09IDEgKyBxICYmIDEwNyAhPT0gaCAmJiAwIDwgZi5sZW5ndGggJiYgKHIgPSAxLCBmICs9ICdcXHgwMCcpO1xuICAgICAgICAgIDAgPCBBICogWSAmJiBIKDAsIGYsIGMsIGQsIEQsIHosIHAubGVuZ3RoLCBoLCBhLCBoKTtcbiAgICAgICAgICB6ID0gMTtcbiAgICAgICAgICBEKys7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgICAgIHorKztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHorKztcbiAgICAgICAgICB5ID0gZS5jaGFyQXQobCk7XG5cbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgbSArIGIpIHN3aXRjaCAoeCkge1xuICAgICAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgICAgICAgIHkgPSAnJztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgIDMyICE9PSBnICYmICh5ID0gJyAnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFwwJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXGYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMTpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcdic7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgKHIgPSBJID0gMSwgeSA9ICdcXGYnICsgeSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEwODpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBiICsgbSArIEUgJiYgMCA8IHUpIHN3aXRjaCAobCAtIHUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAxMTIgPT09IHggJiYgNTggPT09IGUuY2hhckNvZGVBdChsIC0gMykgJiYgKEUgPSB4KTtcblxuICAgICAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgICAgIDExMSA9PT0gSyAmJiAoRSA9IEspO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgKHUgPSBsKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgIDAgPT09IGIgKyB2ICsgbiArIG0gJiYgKHIgPSAxLCB5ICs9ICdcXHInKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAwID09PSBiICYmIChuID0gbiA9PT0gZyA/IDAgOiAwID09PSBuID8gZyA6IG4pO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyB2ICYmIG0rKztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTM6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtLS07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQxOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgdi0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBiICsgbSkge1xuICAgICAgICAgICAgICAgIGlmICgwID09PSBxKSBzd2l0Y2ggKDIgKiB4ICsgMyAqIEspIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgNTMzOlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHYrKztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICsgdSArIGsgJiYgKGsgPSAxKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICBpZiAoISgwIDwgbiArIG0gKyB2KSkgc3dpdGNoIChiKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgc3dpdGNoICgyICogZyArIDMgKiBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjM1OlxuICAgICAgICAgICAgICAgICAgICAgIGIgPSA0NztcbiAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBjYXNlIDIyMDpcbiAgICAgICAgICAgICAgICAgICAgICB0ID0gbCwgYiA9IDQyO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICA0NyA9PT0gZyAmJiA0MiA9PT0geCAmJiB0ICsgMiAhPT0gbCAmJiAoMzMgPT09IGUuY2hhckNvZGVBdCh0ICsgMikgJiYgKHAgKz0gZS5zdWJzdHJpbmcodCwgbCArIDEpKSwgeSA9ICcnLCBiID0gMCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAwID09PSBiICYmIChmICs9IHkpO1xuICAgICAgfVxuXG4gICAgICBLID0geDtcbiAgICAgIHggPSBnO1xuICAgICAgbCsrO1xuICAgIH1cblxuICAgIHQgPSBwLmxlbmd0aDtcblxuICAgIGlmICgwIDwgdCkge1xuICAgICAgciA9IGM7XG4gICAgICBpZiAoMCA8IEEgJiYgKEMgPSBIKDIsIHAsIHIsIGQsIEQsIHosIHQsIGgsIGEsIGgpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHAgPSBDKS5sZW5ndGgpKSByZXR1cm4gRyArIHAgKyBGO1xuICAgICAgcCA9IHIuam9pbignLCcpICsgJ3snICsgcCArICd9JztcblxuICAgICAgaWYgKDAgIT09IHcgKiBFKSB7XG4gICAgICAgIDIgIT09IHcgfHwgTChwLCAyKSB8fCAoRSA9IDApO1xuXG4gICAgICAgIHN3aXRjaCAoRSkge1xuICAgICAgICAgIGNhc2UgMTExOlxuICAgICAgICAgICAgcCA9IHAucmVwbGFjZShoYSwgJzotbW96LSQxJykgKyBwO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDExMjpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoUSwgJzo6LXdlYmtpdC1pbnB1dC0kMScpICsgcC5yZXBsYWNlKFEsICc6Oi1tb3otJDEnKSArIHAucmVwbGFjZShRLCAnOi1tcy1pbnB1dC0kMScpICsgcDtcbiAgICAgICAgfVxuXG4gICAgICAgIEUgPSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBHICsgcCArIEY7XG4gIH1cblxuICBmdW5jdGlvbiBYKGQsIGMsIGUpIHtcbiAgICB2YXIgaCA9IGMudHJpbSgpLnNwbGl0KGlhKTtcbiAgICBjID0gaDtcbiAgICB2YXIgYSA9IGgubGVuZ3RoLFxuICAgICAgICBtID0gZC5sZW5ndGg7XG5cbiAgICBzd2l0Y2ggKG0pIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgdmFyIGIgPSAwO1xuXG4gICAgICAgIGZvciAoZCA9IDAgPT09IG0gPyAnJyA6IGRbMF0gKyAnICc7IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBjW2JdID0gWihkLCBjW2JdLCBlKS50cmltKCk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdmFyIHYgPSBiID0gMDtcblxuICAgICAgICBmb3IgKGMgPSBbXTsgYiA8IGE7ICsrYikge1xuICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgbTsgKytuKSB7XG4gICAgICAgICAgICBjW3YrK10gPSBaKGRbbl0gKyAnICcsIGhbYl0sIGUpLnRyaW0oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHJldHVybiBjO1xuICB9XG5cbiAgZnVuY3Rpb24gWihkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLmNoYXJDb2RlQXQoMCk7XG4gICAgMzMgPiBoICYmIChoID0gKGMgPSBjLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICBzd2l0Y2ggKGgpIHtcbiAgICAgIGNhc2UgMzg6XG4gICAgICAgIHJldHVybiBjLnJlcGxhY2UoRiwgJyQxJyArIGQudHJpbSgpKTtcblxuICAgICAgY2FzZSA1ODpcbiAgICAgICAgcmV0dXJuIGQudHJpbSgpICsgYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgwIDwgMSAqIGUgJiYgMCA8IGMuaW5kZXhPZignXFxmJykpIHJldHVybiBjLnJlcGxhY2UoRiwgKDU4ID09PSBkLmNoYXJDb2RlQXQoMCkgPyAnJyA6ICckMScpICsgZC50cmltKCkpO1xuICAgIH1cblxuICAgIHJldHVybiBkICsgYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFAoZCwgYywgZSwgaCkge1xuICAgIHZhciBhID0gZCArICc7JyxcbiAgICAgICAgbSA9IDIgKiBjICsgMyAqIGUgKyA0ICogaDtcblxuICAgIGlmICg5NDQgPT09IG0pIHtcbiAgICAgIGQgPSBhLmluZGV4T2YoJzonLCA5KSArIDE7XG4gICAgICB2YXIgYiA9IGEuc3Vic3RyaW5nKGQsIGEubGVuZ3RoIC0gMSkudHJpbSgpO1xuICAgICAgYiA9IGEuc3Vic3RyaW5nKDAsIGQpLnRyaW0oKSArIGIgKyAnOyc7XG4gICAgICByZXR1cm4gMSA9PT0gdyB8fCAyID09PSB3ICYmIEwoYiwgMSkgPyAnLXdlYmtpdC0nICsgYiArIGIgOiBiO1xuICAgIH1cblxuICAgIGlmICgwID09PSB3IHx8IDIgPT09IHcgJiYgIUwoYSwgMSkpIHJldHVybiBhO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDEwMTU6XG4gICAgICAgIHJldHVybiA5NyA9PT0gYS5jaGFyQ29kZUF0KDEwKSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgOTUxOlxuICAgICAgICByZXR1cm4gMTE2ID09PSBhLmNoYXJDb2RlQXQoMykgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk2MzpcbiAgICAgICAgcmV0dXJuIDExMCA9PT0gYS5jaGFyQ29kZUF0KDUpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSAxMDA5OlxuICAgICAgICBpZiAoMTAwICE9PSBhLmNoYXJDb2RlQXQoNCkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2OTpcbiAgICAgIGNhc2UgOTQyOlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDk3ODpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tb3otJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMTk6XG4gICAgICBjYXNlIDk4MzpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tb3otJyArIGEgKyAnLW1zLScgKyBhICsgYTtcblxuICAgICAgY2FzZSA4ODM6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDgpKSByZXR1cm4gJy13ZWJraXQtJyArIGEgKyBhO1xuICAgICAgICBpZiAoMCA8IGEuaW5kZXhPZignaW1hZ2Utc2V0KCcsIDExKSkgcmV0dXJuIGEucmVwbGFjZShqYSwgJyQxLXdlYmtpdC0kMicpICsgYTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMyOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg0KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNSkpIHtcbiAgICAgICAgICBjYXNlIDEwMzpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtJyArIGEucmVwbGFjZSgnLWdyb3cnLCAnJykgKyAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnZ3JvdycsICdwb3NpdGl2ZScpICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdzaHJpbmsnLCAnbmVnYXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDk4OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdiYXNpcycsICdwcmVmZXJyZWQtc2l6ZScpICsgYTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5NjQ6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgMTAyMzpcbiAgICAgICAgaWYgKDk5ICE9PSBhLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuICAgICAgICBiID0gYS5zdWJzdHJpbmcoYS5pbmRleE9mKCc6JywgMTUpKS5yZXBsYWNlKCdmbGV4LScsICcnKS5yZXBsYWNlKCdzcGFjZS1iZXR3ZWVuJywgJ2p1c3RpZnknKTtcbiAgICAgICAgcmV0dXJuICctd2Via2l0LWJveC1wYWNrJyArIGIgKyAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1wYWNrJyArIGIgKyBhO1xuXG4gICAgICBjYXNlIDEwMDU6XG4gICAgICAgIHJldHVybiBrYS50ZXN0KGEpID8gYS5yZXBsYWNlKGFhLCAnOi13ZWJraXQtJykgKyBhLnJlcGxhY2UoYWEsICc6LW1vei0nKSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDFlMzpcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKDEzKS50cmltKCk7XG4gICAgICAgIGMgPSBiLmluZGV4T2YoJy0nKSArIDE7XG5cbiAgICAgICAgc3dpdGNoIChiLmNoYXJDb2RlQXQoMCkgKyBiLmNoYXJDb2RlQXQoYykpIHtcbiAgICAgICAgICBjYXNlIDIyNjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjMyOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAndGItcmwnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICdscicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDE3OlxuICAgICAgICBpZiAoLTEgPT09IGEuaW5kZXhPZignc3RpY2t5JywgOSkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3NTpcbiAgICAgICAgYyA9IChhID0gZCkubGVuZ3RoIC0gMTA7XG4gICAgICAgIGIgPSAoMzMgPT09IGEuY2hhckNvZGVBdChjKSA/IGEuc3Vic3RyaW5nKDAsIGMpIDogYSkuc3Vic3RyaW5nKGQuaW5kZXhPZignOicsIDcpICsgMSkudHJpbSgpO1xuXG4gICAgICAgIHN3aXRjaCAobSA9IGIuY2hhckNvZGVBdCgwKSArIChiLmNoYXJDb2RlQXQoNykgfCAwKSkge1xuICAgICAgICAgIGNhc2UgMjAzOlxuICAgICAgICAgICAgaWYgKDExMSA+IGIuY2hhckNvZGVBdCg4KSkgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIGEgPSBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMDc6XG4gICAgICAgICAgY2FzZSAxMDI6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyAoMTAyIDwgbSA/ICdpbmxpbmUtJyA6ICcnKSArICdib3gnKSArICc7JyArIGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy1tcy0nICsgYiArICdib3gnKSArICc7JyArIGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYSArICc7JztcblxuICAgICAgY2FzZSA5Mzg6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDUpKSBzd2l0Y2ggKGEuY2hhckNvZGVBdCg2KSkge1xuICAgICAgICAgIGNhc2UgMTA1OlxuICAgICAgICAgICAgcmV0dXJuIGIgPSBhLnJlcGxhY2UoJy1pdGVtcycsICcnKSwgJy13ZWJraXQtJyArIGEgKyAnLXdlYmtpdC1ib3gtJyArIGIgKyAnLW1zLWZsZXgtJyArIGIgKyBhO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtaXRlbS0nICsgYS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1saW5lLXBhY2snICsgYS5yZXBsYWNlKCdhbGlnbi1jb250ZW50JywgJycpLnJlcGxhY2UoYmEsICcnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTczOlxuICAgICAgY2FzZSA5ODk6XG4gICAgICAgIGlmICg0NSAhPT0gYS5jaGFyQ29kZUF0KDMpIHx8IDEyMiA9PT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5MzE6XG4gICAgICBjYXNlIDk1MzpcbiAgICAgICAgaWYgKCEwID09PSBsYS50ZXN0KGQpKSByZXR1cm4gMTE1ID09PSAoYiA9IGQuc3Vic3RyaW5nKGQuaW5kZXhPZignOicpICsgMSkpLmNoYXJDb2RlQXQoMCkgPyBQKGQucmVwbGFjZSgnc3RyZXRjaCcsICdmaWxsLWF2YWlsYWJsZScpLCBjLCBlLCBoKS5yZXBsYWNlKCc6ZmlsbC1hdmFpbGFibGUnLCAnOnN0cmV0Y2gnKSA6IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyBhLnJlcGxhY2UoYiwgJy1tb3otJyArIGIucmVwbGFjZSgnZmlsbC0nLCAnJykpICsgYTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTYyOlxuICAgICAgICBpZiAoYSA9ICctd2Via2l0LScgKyBhICsgKDEwMiA9PT0gYS5jaGFyQ29kZUF0KDUpID8gJy1tcy0nICsgYSA6ICcnKSArIGEsIDIxMSA9PT0gZSArIGggJiYgMTA1ID09PSBhLmNoYXJDb2RlQXQoMTMpICYmIDAgPCBhLmluZGV4T2YoJ3RyYW5zZm9ybScsIDEwKSkgcmV0dXJuIGEuc3Vic3RyaW5nKDAsIGEuaW5kZXhPZignOycsIDI3KSArIDEpLnJlcGxhY2UobWEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgfVxuXG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICBmdW5jdGlvbiBMKGQsIGMpIHtcbiAgICB2YXIgZSA9IGQuaW5kZXhPZigxID09PSBjID8gJzonIDogJ3snKSxcbiAgICAgICAgaCA9IGQuc3Vic3RyaW5nKDAsIDMgIT09IGMgPyBlIDogMTApO1xuICAgIGUgPSBkLnN1YnN0cmluZyhlICsgMSwgZC5sZW5ndGggLSAxKTtcbiAgICByZXR1cm4gUigyICE9PSBjID8gaCA6IGgucmVwbGFjZShuYSwgJyQxJyksIGUsIGMpO1xuICB9XG5cbiAgZnVuY3Rpb24gZWEoZCwgYykge1xuICAgIHZhciBlID0gUChjLCBjLmNoYXJDb2RlQXQoMCksIGMuY2hhckNvZGVBdCgxKSwgYy5jaGFyQ29kZUF0KDIpKTtcbiAgICByZXR1cm4gZSAhPT0gYyArICc7JyA/IGUucmVwbGFjZShvYSwgJyBvciAoJDEpJykuc3Vic3RyaW5nKDQpIDogJygnICsgYyArICcpJztcbiAgfVxuXG4gIGZ1bmN0aW9uIEgoZCwgYywgZSwgaCwgYSwgbSwgYiwgdiwgbiwgcSkge1xuICAgIGZvciAodmFyIGcgPSAwLCB4ID0gYywgdzsgZyA8IEE7ICsrZykge1xuICAgICAgc3dpdGNoICh3ID0gU1tnXS5jYWxsKEIsIGQsIHgsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpKSB7XG4gICAgICAgIGNhc2Ugdm9pZCAwOlxuICAgICAgICBjYXNlICExOlxuICAgICAgICBjYXNlICEwOlxuICAgICAgICBjYXNlIG51bGw6XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB4ID0gdztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoeCAhPT0gYykgcmV0dXJuIHg7XG4gIH1cblxuICBmdW5jdGlvbiBUKGQpIHtcbiAgICBzd2l0Y2ggKGQpIHtcbiAgICAgIGNhc2Ugdm9pZCAwOlxuICAgICAgY2FzZSBudWxsOlxuICAgICAgICBBID0gUy5sZW5ndGggPSAwO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBkKSBTW0ErK10gPSBkO2Vsc2UgaWYgKCdvYmplY3QnID09PSB0eXBlb2YgZCkgZm9yICh2YXIgYyA9IDAsIGUgPSBkLmxlbmd0aDsgYyA8IGU7ICsrYykge1xuICAgICAgICAgIFQoZFtjXSk7XG4gICAgICAgIH0gZWxzZSBZID0gISFkIHwgMDtcbiAgICB9XG5cbiAgICByZXR1cm4gVDtcbiAgfVxuXG4gIGZ1bmN0aW9uIFUoZCkge1xuICAgIGQgPSBkLnByZWZpeDtcbiAgICB2b2lkIDAgIT09IGQgJiYgKFIgPSBudWxsLCBkID8gJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIGQgPyB3ID0gMSA6ICh3ID0gMiwgUiA9IGQpIDogdyA9IDApO1xuICAgIHJldHVybiBVO1xuICB9XG5cbiAgZnVuY3Rpb24gQihkLCBjKSB7XG4gICAgdmFyIGUgPSBkO1xuICAgIDMzID4gZS5jaGFyQ29kZUF0KDApICYmIChlID0gZS50cmltKCkpO1xuICAgIFYgPSBlO1xuICAgIGUgPSBbVl07XG5cbiAgICBpZiAoMCA8IEEpIHtcbiAgICAgIHZhciBoID0gSCgtMSwgYywgZSwgZSwgRCwgeiwgMCwgMCwgMCwgMCk7XG4gICAgICB2b2lkIDAgIT09IGggJiYgJ3N0cmluZycgPT09IHR5cGVvZiBoICYmIChjID0gaCk7XG4gICAgfVxuXG4gICAgdmFyIGEgPSBNKE8sIGUsIGMsIDAsIDApO1xuICAgIDAgPCBBICYmIChoID0gSCgtMiwgYSwgZSwgZSwgRCwgeiwgYS5sZW5ndGgsIDAsIDAsIDApLCB2b2lkIDAgIT09IGggJiYgKGEgPSBoKSk7XG4gICAgViA9ICcnO1xuICAgIEUgPSAwO1xuICAgIHogPSBEID0gMTtcbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIHZhciBjYSA9IC9eXFwwKy9nLFxuICAgICAgTiA9IC9bXFwwXFxyXFxmXS9nLFxuICAgICAgYWEgPSAvOiAqL2csXG4gICAgICBrYSA9IC96b298Z3JhLyxcbiAgICAgIG1hID0gLyhbLDogXSkodHJhbnNmb3JtKS9nLFxuICAgICAgaWEgPSAvLFxccis/L2csXG4gICAgICBGID0gLyhbXFx0XFxyXFxuIF0pKlxcZj8mL2csXG4gICAgICBmYSA9IC9AKGtcXHcrKVxccyooXFxTKilcXHMqLyxcbiAgICAgIFEgPSAvOjoocGxhY2UpL2csXG4gICAgICBoYSA9IC86KHJlYWQtb25seSkvZyxcbiAgICAgIEcgPSAvW3N2aF1cXHcrLVt0YmxyXXsyfS8sXG4gICAgICBkYSA9IC9cXChcXHMqKC4qKVxccypcXCkvZyxcbiAgICAgIG9hID0gLyhbXFxzXFxTXSo/KTsvZyxcbiAgICAgIGJhID0gLy1zZWxmfGZsZXgtL2csXG4gICAgICBuYSA9IC9bXl0qPyg6W3JwXVtlbF1hW1xcdy1dKylbXl0qLyxcbiAgICAgIGxhID0gL3N0cmV0Y2h8OlxccypcXHcrXFwtKD86Y29udGV8YXZhaWwpLyxcbiAgICAgIGphID0gLyhbXi1dKShpbWFnZS1zZXRcXCgpLyxcbiAgICAgIHogPSAxLFxuICAgICAgRCA9IDEsXG4gICAgICBFID0gMCxcbiAgICAgIHcgPSAxLFxuICAgICAgTyA9IFtdLFxuICAgICAgUyA9IFtdLFxuICAgICAgQSA9IDAsXG4gICAgICBSID0gbnVsbCxcbiAgICAgIFkgPSAwLFxuICAgICAgViA9ICcnO1xuICBCLnVzZSA9IFQ7XG4gIEIuc2V0ID0gVTtcbiAgdm9pZCAwICE9PSBXICYmIFUoVyk7XG4gIHJldHVybiBCO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHlsaXNfbWluO1xuIiwidmFyIHVuaXRsZXNzS2V5cyA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IDEsXG4gIGJvcmRlckltYWdlT3V0c2V0OiAxLFxuICBib3JkZXJJbWFnZVNsaWNlOiAxLFxuICBib3JkZXJJbWFnZVdpZHRoOiAxLFxuICBib3hGbGV4OiAxLFxuICBib3hGbGV4R3JvdXA6IDEsXG4gIGJveE9yZGluYWxHcm91cDogMSxcbiAgY29sdW1uQ291bnQ6IDEsXG4gIGNvbHVtbnM6IDEsXG4gIGZsZXg6IDEsXG4gIGZsZXhHcm93OiAxLFxuICBmbGV4UG9zaXRpdmU6IDEsXG4gIGZsZXhTaHJpbms6IDEsXG4gIGZsZXhOZWdhdGl2ZTogMSxcbiAgZmxleE9yZGVyOiAxLFxuICBncmlkUm93OiAxLFxuICBncmlkUm93RW5kOiAxLFxuICBncmlkUm93U3BhbjogMSxcbiAgZ3JpZFJvd1N0YXJ0OiAxLFxuICBncmlkQ29sdW1uOiAxLFxuICBncmlkQ29sdW1uRW5kOiAxLFxuICBncmlkQ29sdW1uU3BhbjogMSxcbiAgZ3JpZENvbHVtblN0YXJ0OiAxLFxuICBtc0dyaWRSb3c6IDEsXG4gIG1zR3JpZFJvd1NwYW46IDEsXG4gIG1zR3JpZENvbHVtbjogMSxcbiAgbXNHcmlkQ29sdW1uU3BhbjogMSxcbiAgZm9udFdlaWdodDogMSxcbiAgbGluZUhlaWdodDogMSxcbiAgb3BhY2l0eTogMSxcbiAgb3JkZXI6IDEsXG4gIG9ycGhhbnM6IDEsXG4gIHRhYlNpemU6IDEsXG4gIHdpZG93czogMSxcbiAgekluZGV4OiAxLFxuICB6b29tOiAxLFxuICBXZWJraXRMaW5lQ2xhbXA6IDEsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IDEsXG4gIGZsb29kT3BhY2l0eTogMSxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgc3Ryb2tlT3BhY2l0eTogMSxcbiAgc3Ryb2tlV2lkdGg6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5cztcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWJicnxhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxlbnRlcktleUhpbnR8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9hZGluZ3xsb29wfGxvd3xtYXJnaW5IZWlnaHR8bWFyZ2luV2lkdGh8bWF4fG1heExlbmd0aHxtZWRpYXxtZWRpYUdyb3VwfG1ldGhvZHxtaW58bWluTGVuZ3RofG11bHRpcGxlfG11dGVkfG5hbWV8bm9uY2V8bm9WYWxpZGF0ZXxvcGVufG9wdGltdW18cGF0dGVybnxwbGFjZWhvbGRlcnxwbGF5c0lubGluZXxwb3N0ZXJ8cHJlbG9hZHxwcm9maWxlfHJhZGlvR3JvdXB8cmVhZE9ubHl8cmVmZXJyZXJQb2xpY3l8cmVsfHJlcXVpcmVkfHJldmVyc2VkfHJvbGV8cm93c3xyb3dTcGFufHNhbmRib3h8c2NvcGV8c2NvcGVkfHNjcm9sbGluZ3xzZWFtbGVzc3xzZWxlY3RlZHxzaGFwZXxzaXplfHNpemVzfHNsb3R8c3BhbnxzcGVsbENoZWNrfHNyY3xzcmNEb2N8c3JjTGFuZ3xzcmNTZXR8c3RhcnR8c3RlcHxzdHlsZXxzdW1tYXJ5fHRhYkluZGV4fHRhcmdldHx0aXRsZXx0cmFuc2xhdGV8dHlwZXx1c2VNYXB8dmFsdWV8d2lkdGh8d21vZGV8d3JhcHxhYm91dHxkYXRhdHlwZXxpbmxpc3R8cHJlZml4fHByb3BlcnR5fHJlc291cmNlfHR5cGVvZnx2b2NhYnxhdXRvQ2FwaXRhbGl6ZXxhdXRvQ29ycmVjdHxhdXRvU2F2ZXxjb2xvcnxpbmNyZW1lbnRhbHxmYWxsYmFja3xpbmVydHxpdGVtUHJvcHxpdGVtU2NvcGV8aXRlbVR5cGV8aXRlbUlEfGl0ZW1SZWZ8b258b3B0aW9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGlzUHJvcFZhbGlkID0gLyogI19fUFVSRV9fICovbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpc1Byb3BWYWxpZDtcbiIsImZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiIsImltcG9ydHt0eXBlT2YgYXMgZSxpc0VsZW1lbnQgYXMgdCxpc1ZhbGlkRWxlbWVudFR5cGUgYXMgbn1mcm9tXCJyZWFjdC1pc1wiO2ltcG9ydCByLHt1c2VTdGF0ZSBhcyBvLHVzZUNvbnRleHQgYXMgcyx1c2VNZW1vIGFzIGksdXNlRWZmZWN0IGFzIGEsdXNlUmVmIGFzIGMsY3JlYXRlRWxlbWVudCBhcyB1LHVzZURlYnVnVmFsdWUgYXMgbCx1c2VMYXlvdXRFZmZlY3QgYXMgZH1mcm9tXCJyZWFjdFwiO2ltcG9ydCBoIGZyb21cInNoYWxsb3dlcXVhbFwiO2ltcG9ydCBwIGZyb21cIkBlbW90aW9uL3N0eWxpc1wiO2ltcG9ydCBmIGZyb21cIkBlbW90aW9uL3VuaXRsZXNzXCI7aW1wb3J0IG0gZnJvbVwiQGVtb3Rpb24vaXMtcHJvcC12YWxpZFwiO2ltcG9ydCB5IGZyb21cImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI7ZnVuY3Rpb24gdigpe3JldHVybih2PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbilPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGc9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49W2VbMF1dLHI9MCxvPXQubGVuZ3RoO3I8bztyKz0xKW4ucHVzaCh0W3JdLGVbcisxXSk7cmV0dXJuIG59LFM9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJbb2JqZWN0IE9iamVjdF1cIj09PSh0LnRvU3RyaW5nP3QudG9TdHJpbmcoKTpPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpJiYhZSh0KX0sdz1PYmplY3QuZnJlZXplKFtdKSxFPU9iamVjdC5mcmVlemUoe30pO2Z1bmN0aW9uIGIoZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZX1mdW5jdGlvbiBfKGUpe3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwic3RyaW5nXCI9PXR5cGVvZiBlJiZlfHxlLmRpc3BsYXlOYW1lfHxlLm5hbWV8fFwiQ29tcG9uZW50XCJ9ZnVuY3Rpb24gTihlKXtyZXR1cm4gZSYmXCJzdHJpbmdcIj09dHlwZW9mIGUuc3R5bGVkQ29tcG9uZW50SWR9dmFyIEE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJihwcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfQVRUUnx8cHJvY2Vzcy5lbnYuU0NfQVRUUil8fFwiZGF0YS1zdHlsZWRcIixDPVwiNS4zLjZcIixJPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJlwiSFRNTEVsZW1lbnRcImluIHdpbmRvdyxQPUJvb2xlYW4oXCJib29sZWFuXCI9PXR5cGVvZiBTQ19ESVNBQkxFX1NQRUVEWT9TQ19ESVNBQkxFX1NQRUVEWTpcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmdm9pZCAwIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZJiZcIlwiIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZP1wiZmFsc2VcIiE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSYmcHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZ2b2lkIDAhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWSYmXCJcIiE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZP1wiZmFsc2VcIiE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZJiZwcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWTpcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKSxPPXt9LFI9XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj97MTpcIkNhbm5vdCBjcmVhdGUgc3R5bGVkLWNvbXBvbmVudCBmb3IgY29tcG9uZW50OiAlcy5cXG5cXG5cIiwyOlwiQ2FuJ3QgY29sbGVjdCBzdHlsZXMgb25jZSB5b3UndmUgY29uc3VtZWQgYSBgU2VydmVyU3R5bGVTaGVldGAncyBzdHlsZXMhIGBTZXJ2ZXJTdHlsZVNoZWV0YCBpcyBhIG9uZSBvZmYgaW5zdGFuY2UgZm9yIGVhY2ggc2VydmVyLXNpZGUgcmVuZGVyIGN5Y2xlLlxcblxcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcmV1c2UgaXQgYWNyb3NzIHJlbmRlcnM/XFxuLSBBcmUgeW91IGFjY2lkZW50YWxseSBjYWxsaW5nIGNvbGxlY3RTdHlsZXMgdHdpY2U/XFxuXFxuXCIsMzpcIlN0cmVhbWluZyBTU1IgaXMgb25seSBzdXBwb3J0ZWQgaW4gYSBOb2RlLmpzIGVudmlyb25tZW50OyBQbGVhc2UgZG8gbm90IHRyeSB0byBjYWxsIHRoaXMgbWV0aG9kIGluIHRoZSBicm93c2VyLlxcblxcblwiLDQ6XCJUaGUgYFN0eWxlU2hlZXRNYW5hZ2VyYCBleHBlY3RzIGEgdmFsaWQgdGFyZ2V0IG9yIHNoZWV0IHByb3AhXFxuXFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIGNsaWVudCBhbmQgaXMgeW91ciB0YXJnZXQgZmFsc3k/XFxuLSBEb2VzIHRoaXMgZXJyb3Igb2NjdXIgb24gdGhlIHNlcnZlciBhbmQgaXMgdGhlIHNoZWV0IGZhbHN5P1xcblxcblwiLDU6XCJUaGUgY2xvbmUgbWV0aG9kIGNhbm5vdCBiZSB1c2VkIG9uIHRoZSBjbGllbnQhXFxuXFxuLSBBcmUgeW91IHJ1bm5pbmcgaW4gYSBjbGllbnQtbGlrZSBlbnZpcm9ubWVudCBvbiB0aGUgc2VydmVyP1xcbi0gQXJlIHlvdSB0cnlpbmcgdG8gcnVuIFNTUiBvbiB0aGUgY2xpZW50P1xcblxcblwiLDY6XCJUcnlpbmcgdG8gaW5zZXJ0IGEgbmV3IHN0eWxlIHRhZywgYnV0IHRoZSBnaXZlbiBOb2RlIGlzIHVubW91bnRlZCFcXG5cXG4tIEFyZSB5b3UgdXNpbmcgYSBjdXN0b20gdGFyZ2V0IHRoYXQgaXNuJ3QgbW91bnRlZD9cXG4tIERvZXMgeW91ciBkb2N1bWVudCBub3QgaGF2ZSBhIHZhbGlkIGhlYWQgZWxlbWVudD9cXG4tIEhhdmUgeW91IGFjY2lkZW50YWxseSByZW1vdmVkIGEgc3R5bGUgdGFnIG1hbnVhbGx5P1xcblxcblwiLDc6J1RoZW1lUHJvdmlkZXI6IFBsZWFzZSByZXR1cm4gYW4gb2JqZWN0IGZyb20geW91ciBcInRoZW1lXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuJyw4OidUaGVtZVByb3ZpZGVyOiBQbGVhc2UgbWFrZSB5b3VyIFwidGhlbWVcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG4nLDk6XCJNaXNzaW5nIGRvY3VtZW50IGA8aGVhZD5gXFxuXFxuXCIsMTA6XCJDYW5ub3QgZmluZCBhIFN0eWxlU2hlZXQgaW5zdGFuY2UuIFVzdWFsbHkgdGhpcyBoYXBwZW5zIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSBjb3BpZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgbG9hZGVkIGF0IG9uY2UuIENoZWNrIG91dCB0aGlzIGlzc3VlIGZvciBob3cgdG8gdHJvdWJsZXNob290IGFuZCBmaXggdGhlIGNvbW1vbiBjYXNlcyB3aGVyZSB0aGlzIHNpdHVhdGlvbiBjYW4gaGFwcGVuOiBodHRwczovL2dpdGh1Yi5jb20vc3R5bGVkLWNvbXBvbmVudHMvc3R5bGVkLWNvbXBvbmVudHMvaXNzdWVzLzE5NDEjaXNzdWVjb21tZW50LTQxNzg2MjAyMVxcblxcblwiLDExOlwiX1RoaXMgZXJyb3Igd2FzIHJlcGxhY2VkIHdpdGggYSBkZXYtdGltZSB3YXJuaW5nLCBpdCB3aWxsIGJlIGRlbGV0ZWQgZm9yIHY0IGZpbmFsLl8gW2NyZWF0ZUdsb2JhbFN0eWxlXSByZWNlaXZlZCBjaGlsZHJlbiB3aGljaCB3aWxsIG5vdCBiZSByZW5kZXJlZC4gUGxlYXNlIHVzZSB0aGUgY29tcG9uZW50IHdpdGhvdXQgcGFzc2luZyBjaGlsZHJlbiBlbGVtZW50cy5cXG5cXG5cIiwxMjpcIkl0IHNlZW1zIHlvdSBhcmUgaW50ZXJwb2xhdGluZyBhIGtleWZyYW1lIGRlY2xhcmF0aW9uICglcykgaW50byBhbiB1bnRhZ2dlZCBzdHJpbmcuIFRoaXMgd2FzIHN1cHBvcnRlZCBpbiBzdHlsZWQtY29tcG9uZW50cyB2MywgYnV0IGlzIG5vdCBsb25nZXIgc3VwcG9ydGVkIGluIHY0IGFzIGtleWZyYW1lcyBhcmUgbm93IGluamVjdGVkIG9uLWRlbWFuZC4gUGxlYXNlIHdyYXAgeW91ciBzdHJpbmcgaW4gdGhlIGNzc1xcXFxgXFxcXGAgaGVscGVyIHdoaWNoIGVuc3VyZXMgdGhlIHN0eWxlcyBhcmUgaW5qZWN0ZWQgY29ycmVjdGx5LiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYXBpI2Nzc1xcblxcblwiLDEzOlwiJXMgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlxcblxcblwiLDE0OidUaGVtZVByb3ZpZGVyOiBcInRoZW1lXCIgcHJvcCBpcyByZXF1aXJlZC5cXG5cXG4nLDE1OlwiQSBzdHlsaXMgcGx1Z2luIGhhcyBiZWVuIHN1cHBsaWVkIHRoYXQgaXMgbm90IG5hbWVkLiBXZSBuZWVkIGEgbmFtZSBmb3IgZWFjaCBwbHVnaW4gdG8gYmUgYWJsZSB0byBwcmV2ZW50IHN0eWxpbmcgY29sbGlzaW9ucyBiZXR3ZWVuIGRpZmZlcmVudCBzdHlsaXMgY29uZmlndXJhdGlvbnMgd2l0aGluIHRoZSBzYW1lIGFwcC4gQmVmb3JlIHlvdSBwYXNzIHlvdXIgcGx1Z2luIHRvIGA8U3R5bGVTaGVldE1hbmFnZXIgc3R5bGlzUGx1Z2lucz17W119PmAsIHBsZWFzZSBtYWtlIHN1cmUgZWFjaCBwbHVnaW4gaXMgdW5pcXVlbHktbmFtZWQsIGUuZy5cXG5cXG5gYGBqc1xcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShpbXBvcnRlZFBsdWdpbiwgJ25hbWUnLCB7IHZhbHVlOiAnc29tZS11bmlxdWUtbmFtZScgfSk7XFxuYGBgXFxuXFxuXCIsMTY6XCJSZWFjaGVkIHRoZSBsaW1pdCBvZiBob3cgbWFueSBzdHlsZWQgY29tcG9uZW50cyBtYXkgYmUgY3JlYXRlZCBhdCBncm91cCAlcy5cXG5Zb3UgbWF5IG9ubHkgY3JlYXRlIHVwIHRvIDEsMDczLDc0MSw4MjQgY29tcG9uZW50cy4gSWYgeW91J3JlIGNyZWF0aW5nIGNvbXBvbmVudHMgZHluYW1pY2FsbHksXFxuYXMgZm9yIGluc3RhbmNlIGluIHlvdXIgcmVuZGVyIG1ldGhvZCB0aGVuIHlvdSBtYXkgYmUgcnVubmluZyBpbnRvIHRoaXMgbGltaXRhdGlvbi5cXG5cXG5cIiwxNzpcIkNTU1N0eWxlU2hlZXQgY291bGQgbm90IGJlIGZvdW5kIG9uIEhUTUxTdHlsZUVsZW1lbnQuXFxuSGFzIHN0eWxlZC1jb21wb25lbnRzJyBzdHlsZSB0YWcgYmVlbiB1bm1vdW50ZWQgb3IgYWx0ZXJlZCBieSBhbm90aGVyIHNjcmlwdD9cXG5cIn06e307ZnVuY3Rpb24gRCgpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoPD0wP3ZvaWQgMDphcmd1bWVudHNbMF0sdD1bXSxuPTEscj1hcmd1bWVudHMubGVuZ3RoO248cjtuKz0xKXQucHVzaChuPDB8fGFyZ3VtZW50cy5sZW5ndGg8PW4/dm9pZCAwOmFyZ3VtZW50c1tuXSk7cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZT1lLnJlcGxhY2UoLyVbYS16XS8sdCl9KSksZX1mdW5jdGlvbiBqKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTt0aHJvd1wicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/bmV3IEVycm9yKFwiQW4gZXJyb3Igb2NjdXJyZWQuIFNlZSBodHRwczovL2dpdC5pby9KVUlhRSNcIitlK1wiIGZvciBtb3JlIGluZm9ybWF0aW9uLlwiKyhuLmxlbmd0aD4wP1wiIEFyZ3M6IFwiK24uam9pbihcIiwgXCIpOlwiXCIpKTpuZXcgRXJyb3IoRC5hcHBseSh2b2lkIDAsW1JbZV1dLmNvbmNhdChuKSkudHJpbSgpKX12YXIgVD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5ncm91cFNpemVzPW5ldyBVaW50MzJBcnJheSg1MTIpLHRoaXMubGVuZ3RoPTUxMix0aGlzLnRhZz1lfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmluZGV4T2ZHcm91cD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MCxuPTA7bjxlO24rKyl0Kz10aGlzLmdyb3VwU2l6ZXNbbl07cmV0dXJuIHR9LHQuaW5zZXJ0UnVsZXM9ZnVuY3Rpb24oZSx0KXtpZihlPj10aGlzLmdyb3VwU2l6ZXMubGVuZ3RoKXtmb3IodmFyIG49dGhpcy5ncm91cFNpemVzLHI9bi5sZW5ndGgsbz1yO2U+PW87KShvPDw9MSk8MCYmaigxNixcIlwiK2UpO3RoaXMuZ3JvdXBTaXplcz1uZXcgVWludDMyQXJyYXkobyksdGhpcy5ncm91cFNpemVzLnNldChuKSx0aGlzLmxlbmd0aD1vO2Zvcih2YXIgcz1yO3M8bztzKyspdGhpcy5ncm91cFNpemVzW3NdPTB9Zm9yKHZhciBpPXRoaXMuaW5kZXhPZkdyb3VwKGUrMSksYT0wLGM9dC5sZW5ndGg7YTxjO2ErKyl0aGlzLnRhZy5pbnNlcnRSdWxlKGksdFthXSkmJih0aGlzLmdyb3VwU2l6ZXNbZV0rKyxpKyspfSx0LmNsZWFyR3JvdXA9ZnVuY3Rpb24oZSl7aWYoZTx0aGlzLmxlbmd0aCl7dmFyIHQ9dGhpcy5ncm91cFNpemVzW2VdLG49dGhpcy5pbmRleE9mR3JvdXAoZSkscj1uK3Q7dGhpcy5ncm91cFNpemVzW2VdPTA7Zm9yKHZhciBvPW47bzxyO28rKyl0aGlzLnRhZy5kZWxldGVSdWxlKG4pfX0sdC5nZXRHcm91cD1mdW5jdGlvbihlKXt2YXIgdD1cIlwiO2lmKGU+PXRoaXMubGVuZ3RofHwwPT09dGhpcy5ncm91cFNpemVzW2VdKXJldHVybiB0O2Zvcih2YXIgbj10aGlzLmdyb3VwU2l6ZXNbZV0scj10aGlzLmluZGV4T2ZHcm91cChlKSxvPXIrbixzPXI7czxvO3MrKyl0Kz10aGlzLnRhZy5nZXRSdWxlKHMpK1wiLyohc2MqL1xcblwiO3JldHVybiB0fSxlfSgpLHg9bmV3IE1hcCxrPW5ldyBNYXAsVj0xLEI9ZnVuY3Rpb24oZSl7aWYoeC5oYXMoZSkpcmV0dXJuIHguZ2V0KGUpO2Zvcig7ay5oYXMoVik7KVYrKzt2YXIgdD1WKys7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKCgwfHQpPDB8fHQ+MTw8MzApJiZqKDE2LFwiXCIrdCkseC5zZXQoZSx0KSxrLnNldCh0LGUpLHR9LHo9ZnVuY3Rpb24oZSl7cmV0dXJuIGsuZ2V0KGUpfSxNPWZ1bmN0aW9uKGUsdCl7dD49ViYmKFY9dCsxKSx4LnNldChlLHQpLGsuc2V0KHQsZSl9LEc9XCJzdHlsZVtcIitBKyddW2RhdGEtc3R5bGVkLXZlcnNpb249XCI1LjMuNlwiXScsTD1uZXcgUmVnRXhwKFwiXlwiK0ErJ1xcXFwuZyhcXFxcZCspXFxcXFtpZD1cIihbXFxcXHdcXFxcZC1dKylcIlxcXFxdLio/XCIoW15cIl0qKScpLEY9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcixvPW4uc3BsaXQoXCIsXCIpLHM9MCxpPW8ubGVuZ3RoO3M8aTtzKyspKHI9b1tzXSkmJmUucmVnaXN0ZXJOYW1lKHQscil9LFk9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49KHQudGV4dENvbnRlbnR8fFwiXCIpLnNwbGl0KFwiLyohc2MqL1xcblwiKSxyPVtdLG89MCxzPW4ubGVuZ3RoO288cztvKyspe3ZhciBpPW5bb10udHJpbSgpO2lmKGkpe3ZhciBhPWkubWF0Y2goTCk7aWYoYSl7dmFyIGM9MHxwYXJzZUludChhWzFdLDEwKSx1PWFbMl07MCE9PWMmJihNKHUsYyksRihlLHUsYVszXSksZS5nZXRUYWcoKS5pbnNlcnRSdWxlcyhjLHIpKSxyLmxlbmd0aD0wfWVsc2Ugci5wdXNoKGkpfX19LHE9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgX193ZWJwYWNrX25vbmNlX18/X193ZWJwYWNrX25vbmNlX186bnVsbH0sSD1mdW5jdGlvbihlKXt2YXIgdD1kb2N1bWVudC5oZWFkLG49ZXx8dCxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSxvPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmNoaWxkTm9kZXMsbj10Lmxlbmd0aDtuPj0wO24tLSl7dmFyIHI9dFtuXTtpZihyJiYxPT09ci5ub2RlVHlwZSYmci5oYXNBdHRyaWJ1dGUoQSkpcmV0dXJuIHJ9fShuKSxzPXZvaWQgMCE9PW8/by5uZXh0U2libGluZzpudWxsO3Iuc2V0QXR0cmlidXRlKEEsXCJhY3RpdmVcIiksci5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN0eWxlZC12ZXJzaW9uXCIsXCI1LjMuNlwiKTt2YXIgaT1xKCk7cmV0dXJuIGkmJnIuc2V0QXR0cmlidXRlKFwibm9uY2VcIixpKSxuLmluc2VydEJlZm9yZShyLHMpLHJ9LCQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3ZhciB0PXRoaXMuZWxlbWVudD1IKGUpO3QuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIikpLHRoaXMuc2hlZXQ9ZnVuY3Rpb24oZSl7aWYoZS5zaGVldClyZXR1cm4gZS5zaGVldDtmb3IodmFyIHQ9ZG9jdW1lbnQuc3R5bGVTaGVldHMsbj0wLHI9dC5sZW5ndGg7bjxyO24rKyl7dmFyIG89dFtuXTtpZihvLm93bmVyTm9kZT09PWUpcmV0dXJuIG99aigxNyl9KHQpLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gdGhpcy5zaGVldC5pbnNlcnRSdWxlKHQsZSksdGhpcy5sZW5ndGgrKywhMH1jYXRjaChlKXtyZXR1cm4hMX19LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLnNoZWV0LmRlbGV0ZVJ1bGUoZSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuc2hlZXQuY3NzUnVsZXNbZV07cmV0dXJuIHZvaWQgMCE9PXQmJlwic3RyaW5nXCI9PXR5cGVvZiB0LmNzc1RleHQ/dC5jc3NUZXh0OlwiXCJ9LGV9KCksVz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dmFyIHQ9dGhpcy5lbGVtZW50PUgoZSk7dGhpcy5ub2Rlcz10LmNoaWxkTm9kZXMsdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7aWYoZTw9dGhpcy5sZW5ndGgmJmU+PTApe3ZhciBuPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpLHI9dGhpcy5ub2Rlc1tlXTtyZXR1cm4gdGhpcy5lbGVtZW50Lmluc2VydEJlZm9yZShuLHJ8fG51bGwpLHRoaXMubGVuZ3RoKyssITB9cmV0dXJuITF9LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLmVsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5ub2Rlc1tlXSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPHRoaXMubGVuZ3RoP3RoaXMubm9kZXNbZV0udGV4dENvbnRlbnQ6XCJcIn0sZX0oKSxVPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLnJ1bGVzPVtdLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe3JldHVybiBlPD10aGlzLmxlbmd0aCYmKHRoaXMucnVsZXMuc3BsaWNlKGUsMCx0KSx0aGlzLmxlbmd0aCsrLCEwKX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMucnVsZXMuc3BsaWNlKGUsMSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPHRoaXMubGVuZ3RoP3RoaXMucnVsZXNbZV06XCJcIn0sZX0oKSxKPUksWD17aXNTZXJ2ZXI6IUksdXNlQ1NTT01JbmplY3Rpb246IVB9LFo9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXt2b2lkIDA9PT1lJiYoZT1FKSx2b2lkIDA9PT10JiYodD17fSksdGhpcy5vcHRpb25zPXYoe30sWCx7fSxlKSx0aGlzLmdzPXQsdGhpcy5uYW1lcz1uZXcgTWFwKG4pLHRoaXMuc2VydmVyPSEhZS5pc1NlcnZlciwhdGhpcy5zZXJ2ZXImJkkmJkomJihKPSExLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEcpLG49MCxyPXQubGVuZ3RoO248cjtuKyspe3ZhciBvPXRbbl07byYmXCJhY3RpdmVcIiE9PW8uZ2V0QXR0cmlidXRlKEEpJiYoWShlLG8pLG8ucGFyZW50Tm9kZSYmby5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG8pKX19KHRoaXMpKX1lLnJlZ2lzdGVySWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEIoZSl9O3ZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LnJlY29uc3RydWN0V2l0aE9wdGlvbnM9ZnVuY3Rpb24odCxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49ITApLG5ldyBlKHYoe30sdGhpcy5vcHRpb25zLHt9LHQpLHRoaXMuZ3MsbiYmdGhpcy5uYW1lc3x8dm9pZCAwKX0sdC5hbGxvY2F0ZUdTSW5zdGFuY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ3NbZV09KHRoaXMuZ3NbZV18fDApKzF9LHQuZ2V0VGFnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGFnfHwodGhpcy50YWc9KG49KHQ9dGhpcy5vcHRpb25zKS5pc1NlcnZlcixyPXQudXNlQ1NTT01JbmplY3Rpb24sbz10LnRhcmdldCxlPW4/bmV3IFUobyk6cj9uZXcgJChvKTpuZXcgVyhvKSxuZXcgVChlKSkpO3ZhciBlLHQsbixyLG99LHQuaGFzTmFtZUZvcklkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMubmFtZXMuaGFzKGUpJiZ0aGlzLm5hbWVzLmdldChlKS5oYXModCl9LHQucmVnaXN0ZXJOYW1lPWZ1bmN0aW9uKGUsdCl7aWYoQihlKSx0aGlzLm5hbWVzLmhhcyhlKSl0aGlzLm5hbWVzLmdldChlKS5hZGQodCk7ZWxzZXt2YXIgbj1uZXcgU2V0O24uYWRkKHQpLHRoaXMubmFtZXMuc2V0KGUsbil9fSx0Lmluc2VydFJ1bGVzPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLnJlZ2lzdGVyTmFtZShlLHQpLHRoaXMuZ2V0VGFnKCkuaW5zZXJ0UnVsZXMoQihlKSxuKX0sdC5jbGVhck5hbWVzPWZ1bmN0aW9uKGUpe3RoaXMubmFtZXMuaGFzKGUpJiZ0aGlzLm5hbWVzLmdldChlKS5jbGVhcigpfSx0LmNsZWFyUnVsZXM9ZnVuY3Rpb24oZSl7dGhpcy5nZXRUYWcoKS5jbGVhckdyb3VwKEIoZSkpLHRoaXMuY2xlYXJOYW1lcyhlKX0sdC5jbGVhclRhZz1mdW5jdGlvbigpe3RoaXMudGFnPXZvaWQgMH0sdC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5nZXRUYWcoKSxuPXQubGVuZ3RoLHI9XCJcIixvPTA7bzxuO28rKyl7dmFyIHM9eihvKTtpZih2b2lkIDAhPT1zKXt2YXIgaT1lLm5hbWVzLmdldChzKSxhPXQuZ2V0R3JvdXAobyk7aWYoaSYmYSYmaS5zaXplKXt2YXIgYz1BK1wiLmdcIitvKydbaWQ9XCInK3MrJ1wiXScsdT1cIlwiO3ZvaWQgMCE9PWkmJmkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5sZW5ndGg+MCYmKHUrPWUrXCIsXCIpfSkpLHIrPVwiXCIrYStjKyd7Y29udGVudDpcIicrdSsnXCJ9Lyohc2MqL1xcbid9fX1yZXR1cm4gcn0odGhpcyl9LGV9KCksSz0vKGEpKGQpL2dpLFE9ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZSsoZT4yNT8zOTo5NykpfTtmdW5jdGlvbiBlZShlKXt2YXIgdCxuPVwiXCI7Zm9yKHQ9TWF0aC5hYnMoZSk7dD41Mjt0PXQvNTJ8MCluPVEodCU1MikrbjtyZXR1cm4oUSh0JTUyKStuKS5yZXBsYWNlKEssXCIkMS0kMlwiKX12YXIgdGU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dC5sZW5ndGg7bjspZT0zMyplXnQuY2hhckNvZGVBdCgtLW4pO3JldHVybiBlfSxuZT1mdW5jdGlvbihlKXtyZXR1cm4gdGUoNTM4MSxlKX07ZnVuY3Rpb24gcmUoZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kz0xKXt2YXIgbj1lW3RdO2lmKGIobikmJiFOKG4pKXJldHVybiExfXJldHVybiEwfXZhciBvZT1uZShcIjUuMy42XCIpLHNlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dGhpcy5ydWxlcz1lLHRoaXMuc3RhdGljUnVsZXNJZD1cIlwiLHRoaXMuaXNTdGF0aWM9XCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHZvaWQgMD09PW58fG4uaXNTdGF0aWMpJiZyZShlKSx0aGlzLmNvbXBvbmVudElkPXQsdGhpcy5iYXNlSGFzaD10ZShvZSx0KSx0aGlzLmJhc2VTdHlsZT1uLFoucmVnaXN0ZXJJZCh0KX1yZXR1cm4gZS5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXMuY29tcG9uZW50SWQsbz1bXTtpZih0aGlzLmJhc2VTdHlsZSYmby5wdXNoKHRoaXMuYmFzZVN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGUsdCxuKSksdGhpcy5pc1N0YXRpYyYmIW4uaGFzaClpZih0aGlzLnN0YXRpY1J1bGVzSWQmJnQuaGFzTmFtZUZvcklkKHIsdGhpcy5zdGF0aWNSdWxlc0lkKSlvLnB1c2godGhpcy5zdGF0aWNSdWxlc0lkKTtlbHNle3ZhciBzPU5lKHRoaXMucnVsZXMsZSx0LG4pLmpvaW4oXCJcIiksaT1lZSh0ZSh0aGlzLmJhc2VIYXNoLHMpPj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIsaSkpe3ZhciBhPW4ocyxcIi5cIitpLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIsaSxhKX1vLnB1c2goaSksdGhpcy5zdGF0aWNSdWxlc0lkPWl9ZWxzZXtmb3IodmFyIGM9dGhpcy5ydWxlcy5sZW5ndGgsdT10ZSh0aGlzLmJhc2VIYXNoLG4uaGFzaCksbD1cIlwiLGQ9MDtkPGM7ZCsrKXt2YXIgaD10aGlzLnJ1bGVzW2RdO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBoKWwrPWgsXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHU9dGUodSxoK2QpKTtlbHNlIGlmKGgpe3ZhciBwPU5lKGgsZSx0LG4pLGY9QXJyYXkuaXNBcnJheShwKT9wLmpvaW4oXCJcIik6cDt1PXRlKHUsZitkKSxsKz1mfX1pZihsKXt2YXIgbT1lZSh1Pj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIsbSkpe3ZhciB5PW4obCxcIi5cIittLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIsbSx5KX1vLnB1c2gobSl9fXJldHVybiBvLmpvaW4oXCIgXCIpfSxlfSgpLGllPS9eXFxzKlxcL1xcLy4qJC9nbSxhZT1bXCI6XCIsXCJbXCIsXCIuXCIsXCIjXCJdO2Z1bmN0aW9uIGNlKGUpe3ZhciB0LG4scixvLHM9dm9pZCAwPT09ZT9FOmUsaT1zLm9wdGlvbnMsYT12b2lkIDA9PT1pP0U6aSxjPXMucGx1Z2lucyx1PXZvaWQgMD09PWM/dzpjLGw9bmV3IHAoYSksZD1bXSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7aWYodCl0cnl7ZSh0K1wifVwiKX1jYXRjaChlKXt9fXJldHVybiBmdW5jdGlvbihuLHIsbyxzLGksYSxjLHUsbCxkKXtzd2l0Y2gobil7Y2FzZSAxOmlmKDA9PT1sJiY2ND09PXIuY2hhckNvZGVBdCgwKSlyZXR1cm4gZShyK1wiO1wiKSxcIlwiO2JyZWFrO2Nhc2UgMjppZigwPT09dSlyZXR1cm4gcitcIi8qfCovXCI7YnJlYWs7Y2FzZSAzOnN3aXRjaCh1KXtjYXNlIDEwMjpjYXNlIDExMjpyZXR1cm4gZShvWzBdK3IpLFwiXCI7ZGVmYXVsdDpyZXR1cm4gcisoMD09PWQ/XCIvKnwqL1wiOlwiXCIpfWNhc2UtMjpyLnNwbGl0KFwiLyp8Ki99XCIpLmZvckVhY2godCl9fX0oKGZ1bmN0aW9uKGUpe2QucHVzaChlKX0pKSxmPWZ1bmN0aW9uKGUscixzKXtyZXR1cm4gMD09PXImJi0xIT09YWUuaW5kZXhPZihzW24ubGVuZ3RoXSl8fHMubWF0Y2gobyk/ZTpcIi5cIit0fTtmdW5jdGlvbiBtKGUscyxpLGEpe3ZvaWQgMD09PWEmJihhPVwiJlwiKTt2YXIgYz1lLnJlcGxhY2UoaWUsXCJcIiksdT1zJiZpP2krXCIgXCIrcytcIiB7IFwiK2MrXCIgfVwiOmM7cmV0dXJuIHQ9YSxuPXMscj1uZXcgUmVnRXhwKFwiXFxcXFwiK24rXCJcXFxcYlwiLFwiZ1wiKSxvPW5ldyBSZWdFeHAoXCIoXFxcXFwiK24rXCJcXFxcYil7Mix9XCIpLGwoaXx8IXM/XCJcIjpzLHUpfXJldHVybiBsLnVzZShbXS5jb25jYXQodSxbZnVuY3Rpb24oZSx0LG8pezI9PT1lJiZvLmxlbmd0aCYmb1swXS5sYXN0SW5kZXhPZihuKT4wJiYob1swXT1vWzBdLnJlcGxhY2UocixmKSl9LGgsZnVuY3Rpb24oZSl7aWYoLTI9PT1lKXt2YXIgdD1kO3JldHVybiBkPVtdLHR9fV0pKSxtLmhhc2g9dS5sZW5ndGg/dS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQubmFtZXx8aigxNSksdGUoZSx0Lm5hbWUpfSksNTM4MSkudG9TdHJpbmcoKTpcIlwiLG19dmFyIHVlPXIuY3JlYXRlQ29udGV4dCgpLGxlPXVlLkNvbnN1bWVyLGRlPXIuY3JlYXRlQ29udGV4dCgpLGhlPShkZS5Db25zdW1lcixuZXcgWikscGU9Y2UoKTtmdW5jdGlvbiBmZSgpe3JldHVybiBzKHVlKXx8aGV9ZnVuY3Rpb24gbWUoKXtyZXR1cm4gcyhkZSl8fHBlfWZ1bmN0aW9uIHllKGUpe3ZhciB0PW8oZS5zdHlsaXNQbHVnaW5zKSxuPXRbMF0scz10WzFdLGM9ZmUoKSx1PWkoKGZ1bmN0aW9uKCl7dmFyIHQ9YztyZXR1cm4gZS5zaGVldD90PWUuc2hlZXQ6ZS50YXJnZXQmJih0PXQucmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyh7dGFyZ2V0OmUudGFyZ2V0fSwhMSkpLGUuZGlzYWJsZUNTU09NSW5qZWN0aW9uJiYodD10LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe3VzZUNTU09NSW5qZWN0aW9uOiExfSkpLHR9KSxbZS5kaXNhYmxlQ1NTT01JbmplY3Rpb24sZS5zaGVldCxlLnRhcmdldF0pLGw9aSgoZnVuY3Rpb24oKXtyZXR1cm4gY2Uoe29wdGlvbnM6e3ByZWZpeDohZS5kaXNhYmxlVmVuZG9yUHJlZml4ZXN9LHBsdWdpbnM6bn0pfSksW2UuZGlzYWJsZVZlbmRvclByZWZpeGVzLG5dKTtyZXR1cm4gYSgoZnVuY3Rpb24oKXtoKG4sZS5zdHlsaXNQbHVnaW5zKXx8cyhlLnN0eWxpc1BsdWdpbnMpfSksW2Uuc3R5bGlzUGx1Z2luc10pLHIuY3JlYXRlRWxlbWVudCh1ZS5Qcm92aWRlcix7dmFsdWU6dX0sci5jcmVhdGVFbGVtZW50KGRlLlByb3ZpZGVyLHt2YWx1ZTpsfSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP3IuQ2hpbGRyZW4ub25seShlLmNoaWxkcmVuKTplLmNoaWxkcmVuKSl9dmFyIHZlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3ZhciBuPXRoaXM7dGhpcy5pbmplY3Q9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD1wZSk7dmFyIHI9bi5uYW1lK3QuaGFzaDtlLmhhc05hbWVGb3JJZChuLmlkLHIpfHxlLmluc2VydFJ1bGVzKG4uaWQscix0KG4ucnVsZXMscixcIkBrZXlmcmFtZXNcIikpfSx0aGlzLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGooMTIsU3RyaW5nKG4ubmFtZSkpfSx0aGlzLm5hbWU9ZSx0aGlzLmlkPVwic2Mta2V5ZnJhbWVzLVwiK2UsdGhpcy5ydWxlcz10fXJldHVybiBlLnByb3RvdHlwZS5nZXROYW1lPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1wZSksdGhpcy5uYW1lK2UuaGFzaH0sZX0oKSxnZT0vKFtBLVpdKS8sU2U9LyhbQS1aXSkvZyx3ZT0vXm1zLS8sRWU9ZnVuY3Rpb24oZSl7cmV0dXJuXCItXCIrZS50b0xvd2VyQ2FzZSgpfTtmdW5jdGlvbiBiZShlKXtyZXR1cm4gZ2UudGVzdChlKT9lLnJlcGxhY2UoU2UsRWUpLnJlcGxhY2Uod2UsXCItbXMtXCIpOmV9dmFyIF9lPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lfHwhMT09PWV8fFwiXCI9PT1lfTtmdW5jdGlvbiBOZShlLG4scixvKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHMsaT1bXSxhPTAsYz1lLmxlbmd0aDthPGM7YSs9MSlcIlwiIT09KHM9TmUoZVthXSxuLHIsbykpJiYoQXJyYXkuaXNBcnJheShzKT9pLnB1c2guYXBwbHkoaSxzKTppLnB1c2gocykpO3JldHVybiBpfWlmKF9lKGUpKXJldHVyblwiXCI7aWYoTihlKSlyZXR1cm5cIi5cIitlLnN0eWxlZENvbXBvbmVudElkO2lmKGIoZSkpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGw9ZSl8fGwucHJvdG90eXBlJiZsLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50fHwhbilyZXR1cm4gZTt2YXIgdT1lKG4pO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnQodSkmJmNvbnNvbGUud2FybihfKGUpK1wiIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cIiksTmUodSxuLHIsbyl9dmFyIGw7cmV0dXJuIGUgaW5zdGFuY2VvZiB2ZT9yPyhlLmluamVjdChyLG8pLGUuZ2V0TmFtZShvKSk6ZTpTKGUpP2Z1bmN0aW9uIGUodCxuKXt2YXIgcixvLHM9W107Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmIV9lKHRbaV0pJiYoQXJyYXkuaXNBcnJheSh0W2ldKSYmdFtpXS5pc0Nzc3x8Yih0W2ldKT9zLnB1c2goYmUoaSkrXCI6XCIsdFtpXSxcIjtcIik6Uyh0W2ldKT9zLnB1c2guYXBwbHkocyxlKHRbaV0saSkpOnMucHVzaChiZShpKStcIjogXCIrKHI9aSxudWxsPT0obz10W2ldKXx8XCJib29sZWFuXCI9PXR5cGVvZiBvfHxcIlwiPT09bz9cIlwiOlwibnVtYmVyXCIhPXR5cGVvZiBvfHwwPT09b3x8ciBpbiBmP1N0cmluZyhvKS50cmltKCk6bytcInB4XCIpK1wiO1wiKSk7cmV0dXJuIG4/W24rXCIge1wiXS5jb25jYXQocyxbXCJ9XCJdKTpzfShlKTplLnRvU3RyaW5nKCl9dmFyIEFlPWZ1bmN0aW9uKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpJiYoZS5pc0Nzcz0hMCksZX07ZnVuY3Rpb24gQ2UoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3JldHVybiBiKGUpfHxTKGUpP0FlKE5lKGcodyxbZV0uY29uY2F0KG4pKSkpOjA9PT1uLmxlbmd0aCYmMT09PWUubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgZVswXT9lOkFlKE5lKGcoZSxuKSkpfXZhciBJZT0vaW52YWxpZCBob29rIGNhbGwvaSxQZT1uZXcgU2V0LE9lPWZ1bmN0aW9uKGUsdCl7aWYoXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVil7dmFyIG49XCJUaGUgY29tcG9uZW50IFwiK2UrKHQ/JyB3aXRoIHRoZSBpZCBvZiBcIicrdCsnXCInOlwiXCIpK1wiIGhhcyBiZWVuIGNyZWF0ZWQgZHluYW1pY2FsbHkuXFxuWW91IG1heSBzZWUgdGhpcyB3YXJuaW5nIGJlY2F1c2UgeW91J3ZlIGNhbGxlZCBzdHlsZWQgaW5zaWRlIGFub3RoZXIgY29tcG9uZW50LlxcblRvIHJlc29sdmUgdGhpcyBvbmx5IGNyZWF0ZSBuZXcgU3R5bGVkQ29tcG9uZW50cyBvdXRzaWRlIG9mIGFueSByZW5kZXIgbWV0aG9kIGFuZCBmdW5jdGlvbiBjb21wb25lbnQuXCIscj1jb25zb2xlLmVycm9yO3RyeXt2YXIgbz0hMDtjb25zb2xlLmVycm9yPWZ1bmN0aW9uKGUpe2lmKEllLnRlc3QoZSkpbz0hMSxQZS5kZWxldGUobik7ZWxzZXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxzPW5ldyBBcnJheSh0PjE/dC0xOjApLGk9MTtpPHQ7aSsrKXNbaS0xXT1hcmd1bWVudHNbaV07ci5hcHBseSh2b2lkIDAsW2VdLmNvbmNhdChzKSl9fSxjKCksbyYmIVBlLmhhcyhuKSYmKGNvbnNvbGUud2FybihuKSxQZS5hZGQobikpfWNhdGNoKGUpe0llLnRlc3QoZS5tZXNzYWdlKSYmUGUuZGVsZXRlKG4pfWZpbmFsbHl7Y29uc29sZS5lcnJvcj1yfX19LFJlPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49RSksZS50aGVtZSE9PW4udGhlbWUmJmUudGhlbWV8fHR8fG4udGhlbWV9LERlPS9bIVwiIyQlJicoKSorLC4vOjs8PT4/QFtcXFxcXFxdXmB7fH1+LV0rL2csamU9LyheLXwtJCkvZztmdW5jdGlvbiBUZShlKXtyZXR1cm4gZS5yZXBsYWNlKERlLFwiLVwiKS5yZXBsYWNlKGplLFwiXCIpfXZhciB4ZT1mdW5jdGlvbihlKXtyZXR1cm4gZWUobmUoZSk+Pj4wKX07ZnVuY3Rpb24ga2UoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJihcInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WfHxlLmNoYXJBdCgwKT09PWUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkpfXZhciBWZT1mdW5jdGlvbihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfHxcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUmJiFBcnJheS5pc0FycmF5KGUpfSxCZT1mdW5jdGlvbihlKXtyZXR1cm5cIl9fcHJvdG9fX1wiIT09ZSYmXCJjb25zdHJ1Y3RvclwiIT09ZSYmXCJwcm90b3R5cGVcIiE9PWV9O2Z1bmN0aW9uIHplKGUsdCxuKXt2YXIgcj1lW25dO1ZlKHQpJiZWZShyKT9NZShyLHQpOmVbbl09dH1mdW5jdGlvbiBNZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07Zm9yKHZhciBvPTAscz1uO288cy5sZW5ndGg7bysrKXt2YXIgaT1zW29dO2lmKFZlKGkpKWZvcih2YXIgYSBpbiBpKUJlKGEpJiZ6ZShlLGlbYV0sYSl9cmV0dXJuIGV9dmFyIEdlPXIuY3JlYXRlQ29udGV4dCgpLExlPUdlLkNvbnN1bWVyO2Z1bmN0aW9uIEZlKGUpe3ZhciB0PXMoR2UpLG49aSgoZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm4gaigxNCk7aWYoYihlKSl7dmFyIG49ZSh0KTtyZXR1cm5cInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WfHxudWxsIT09biYmIUFycmF5LmlzQXJyYXkobikmJlwib2JqZWN0XCI9PXR5cGVvZiBuP246aig3KX1yZXR1cm4gQXJyYXkuaXNBcnJheShlKXx8XCJvYmplY3RcIiE9dHlwZW9mIGU/aig4KTp0P3Yoe30sdCx7fSxlKTplfShlLnRoZW1lLHQpfSksW2UudGhlbWUsdF0pO3JldHVybiBlLmNoaWxkcmVuP3IuY3JlYXRlRWxlbWVudChHZS5Qcm92aWRlcix7dmFsdWU6bn0sZS5jaGlsZHJlbik6bnVsbH12YXIgWWU9e307ZnVuY3Rpb24gcWUoZSx0LG4pe3ZhciBvPU4oZSksaT0ha2UoZSksYT10LmF0dHJzLGM9dm9pZCAwPT09YT93OmEsZD10LmNvbXBvbmVudElkLGg9dm9pZCAwPT09ZD9mdW5jdGlvbihlLHQpe3ZhciBuPVwic3RyaW5nXCIhPXR5cGVvZiBlP1wic2NcIjpUZShlKTtZZVtuXT0oWWVbbl18fDApKzE7dmFyIHI9bitcIi1cIit4ZShcIjUuMy42XCIrbitZZVtuXSk7cmV0dXJuIHQ/dCtcIi1cIityOnJ9KHQuZGlzcGxheU5hbWUsdC5wYXJlbnRDb21wb25lbnRJZCk6ZCxwPXQuZGlzcGxheU5hbWUsZj12b2lkIDA9PT1wP2Z1bmN0aW9uKGUpe3JldHVybiBrZShlKT9cInN0eWxlZC5cIitlOlwiU3R5bGVkKFwiK18oZSkrXCIpXCJ9KGUpOnAsZz10LmRpc3BsYXlOYW1lJiZ0LmNvbXBvbmVudElkP1RlKHQuZGlzcGxheU5hbWUpK1wiLVwiK3QuY29tcG9uZW50SWQ6dC5jb21wb25lbnRJZHx8aCxTPW8mJmUuYXR0cnM/QXJyYXkucHJvdG90eXBlLmNvbmNhdChlLmF0dHJzLGMpLmZpbHRlcihCb29sZWFuKTpjLEE9dC5zaG91bGRGb3J3YXJkUHJvcDtvJiZlLnNob3VsZEZvcndhcmRQcm9wJiYoQT10LnNob3VsZEZvcndhcmRQcm9wP2Z1bmN0aW9uKG4scixvKXtyZXR1cm4gZS5zaG91bGRGb3J3YXJkUHJvcChuLHIsbykmJnQuc2hvdWxkRm9yd2FyZFByb3AobixyLG8pfTplLnNob3VsZEZvcndhcmRQcm9wKTt2YXIgQyxJPW5ldyBzZShuLGcsbz9lLmNvbXBvbmVudFN0eWxlOnZvaWQgMCksUD1JLmlzU3RhdGljJiYwPT09Yy5sZW5ndGgsTz1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihlLHQsbixyKXt2YXIgbz1lLmF0dHJzLGk9ZS5jb21wb25lbnRTdHlsZSxhPWUuZGVmYXVsdFByb3BzLGM9ZS5mb2xkZWRDb21wb25lbnRJZHMsZD1lLnNob3VsZEZvcndhcmRQcm9wLGg9ZS5zdHlsZWRDb21wb25lbnRJZCxwPWUudGFyZ2V0O1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmwoaCk7dmFyIGY9ZnVuY3Rpb24oZSx0LG4pe3ZvaWQgMD09PWUmJihlPUUpO3ZhciByPXYoe30sdCx7dGhlbWU6ZX0pLG89e307cmV0dXJuIG4uZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIHQsbixzLGk9ZTtmb3IodCBpbiBiKGkpJiYoaT1pKHIpKSxpKXJbdF09b1t0XT1cImNsYXNzTmFtZVwiPT09dD8obj1vW3RdLHM9aVt0XSxuJiZzP24rXCIgXCIrczpufHxzKTppW3RdfSkpLFtyLG9dfShSZSh0LHMoR2UpLGEpfHxFLHQsbykseT1mWzBdLGc9ZlsxXSxTPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPWZlKCkscz1tZSgpLGk9dD9lLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEUsbyxzKTplLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKG4sbyxzKTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZsKGkpLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJiF0JiZyJiZyKGkpLGl9KGkscix5LFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/ZS53YXJuVG9vTWFueUNsYXNzZXM6dm9pZCAwKSx3PW4sXz1nLiRhc3x8dC4kYXN8fGcuYXN8fHQuYXN8fHAsTj1rZShfKSxBPWchPT10P3Yoe30sdCx7fSxnKTp0LEM9e307Zm9yKHZhciBJIGluIEEpXCIkXCIhPT1JWzBdJiZcImFzXCIhPT1JJiYoXCJmb3J3YXJkZWRBc1wiPT09ST9DLmFzPUFbSV06KGQ/ZChJLG0sXyk6IU58fG0oSSkpJiYoQ1tJXT1BW0ldKSk7cmV0dXJuIHQuc3R5bGUmJmcuc3R5bGUhPT10LnN0eWxlJiYoQy5zdHlsZT12KHt9LHQuc3R5bGUse30sZy5zdHlsZSkpLEMuY2xhc3NOYW1lPUFycmF5LnByb3RvdHlwZS5jb25jYXQoYyxoLFMhPT1oP1M6bnVsbCx0LmNsYXNzTmFtZSxnLmNsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpLEMucmVmPXcsdShfLEMpfShDLGUsdCxQKX07cmV0dXJuIE8uZGlzcGxheU5hbWU9ZiwoQz1yLmZvcndhcmRSZWYoTykpLmF0dHJzPVMsQy5jb21wb25lbnRTdHlsZT1JLEMuZGlzcGxheU5hbWU9ZixDLnNob3VsZEZvcndhcmRQcm9wPUEsQy5mb2xkZWRDb21wb25lbnRJZHM9bz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuZm9sZGVkQ29tcG9uZW50SWRzLGUuc3R5bGVkQ29tcG9uZW50SWQpOncsQy5zdHlsZWRDb21wb25lbnRJZD1nLEMudGFyZ2V0PW8/ZS50YXJnZXQ6ZSxDLndpdGhDb21wb25lbnQ9ZnVuY3Rpb24oZSl7dmFyIHI9dC5jb21wb25lbnRJZCxvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89e30scz1PYmplY3Qua2V5cyhlKTtmb3Iocj0wO3I8cy5sZW5ndGg7cisrKW49c1tyXSx0LmluZGV4T2Yobik+PTB8fChvW25dPWVbbl0pO3JldHVybiBvfSh0LFtcImNvbXBvbmVudElkXCJdKSxzPXImJnIrXCItXCIrKGtlKGUpP2U6VGUoXyhlKSkpO3JldHVybiBxZShlLHYoe30sbyx7YXR0cnM6Uyxjb21wb25lbnRJZDpzfSksbil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLFwiZGVmYXVsdFByb3BzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHN9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHM9bz9NZSh7fSxlLmRlZmF1bHRQcm9wcyx0KTp0fX0pLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJihPZShmLGcpLEMud2FyblRvb01hbnlDbGFzc2VzPWZ1bmN0aW9uKGUsdCl7dmFyIG49e30scj0hMTtyZXR1cm4gZnVuY3Rpb24obyl7aWYoIXImJihuW29dPSEwLE9iamVjdC5rZXlzKG4pLmxlbmd0aD49MjAwKSl7dmFyIHM9dD8nIHdpdGggdGhlIGlkIG9mIFwiJyt0KydcIic6XCJcIjtjb25zb2xlLndhcm4oXCJPdmVyIDIwMCBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgXCIrZStzK1wiLlxcbkNvbnNpZGVyIHVzaW5nIHRoZSBhdHRycyBtZXRob2QsIHRvZ2V0aGVyIHdpdGggYSBzdHlsZSBvYmplY3QgZm9yIGZyZXF1ZW50bHkgY2hhbmdlZCBzdHlsZXMuXFxuRXhhbXBsZTpcXG4gIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMocHJvcHMgPT4gKHtcXG4gICAgc3R5bGU6IHtcXG4gICAgICBiYWNrZ3JvdW5kOiBwcm9wcy5iYWNrZ3JvdW5kLFxcbiAgICB9LFxcbiAgfSkpYHdpZHRoOiAxMDAlO2BcXG5cXG4gIDxDb21wb25lbnQgLz5cIikscj0hMCxuPXt9fX19KGYsZykpLEMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIi5cIitDLnN0eWxlZENvbXBvbmVudElkfSxpJiZ5KEMsZSx7YXR0cnM6ITAsY29tcG9uZW50U3R5bGU6ITAsZGlzcGxheU5hbWU6ITAsZm9sZGVkQ29tcG9uZW50SWRzOiEwLHNob3VsZEZvcndhcmRQcm9wOiEwLHN0eWxlZENvbXBvbmVudElkOiEwLHRhcmdldDohMCx3aXRoQ29tcG9uZW50OiEwfSksQ312YXIgSGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG8pe2lmKHZvaWQgMD09PW8mJihvPUUpLCFuKHIpKXJldHVybiBqKDEsU3RyaW5nKHIpKTt2YXIgcz1mdW5jdGlvbigpe3JldHVybiB0KHIsbyxDZS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKSl9O3JldHVybiBzLndpdGhDb25maWc9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7fSxuKSl9LHMuYXR0cnM9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7YXR0cnM6QXJyYXkucHJvdG90eXBlLmNvbmNhdChvLmF0dHJzLG4pLmZpbHRlcihCb29sZWFuKX0pKX0sc30ocWUsZSl9O1tcImFcIixcImFiYnJcIixcImFkZHJlc3NcIixcImFyZWFcIixcImFydGljbGVcIixcImFzaWRlXCIsXCJhdWRpb1wiLFwiYlwiLFwiYmFzZVwiLFwiYmRpXCIsXCJiZG9cIixcImJpZ1wiLFwiYmxvY2txdW90ZVwiLFwiYm9keVwiLFwiYnJcIixcImJ1dHRvblwiLFwiY2FudmFzXCIsXCJjYXB0aW9uXCIsXCJjaXRlXCIsXCJjb2RlXCIsXCJjb2xcIixcImNvbGdyb3VwXCIsXCJkYXRhXCIsXCJkYXRhbGlzdFwiLFwiZGRcIixcImRlbFwiLFwiZGV0YWlsc1wiLFwiZGZuXCIsXCJkaWFsb2dcIixcImRpdlwiLFwiZGxcIixcImR0XCIsXCJlbVwiLFwiZW1iZWRcIixcImZpZWxkc2V0XCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvb3RlclwiLFwiZm9ybVwiLFwiaDFcIixcImgyXCIsXCJoM1wiLFwiaDRcIixcImg1XCIsXCJoNlwiLFwiaGVhZFwiLFwiaGVhZGVyXCIsXCJoZ3JvdXBcIixcImhyXCIsXCJodG1sXCIsXCJpXCIsXCJpZnJhbWVcIixcImltZ1wiLFwiaW5wdXRcIixcImluc1wiLFwia2JkXCIsXCJrZXlnZW5cIixcImxhYmVsXCIsXCJsZWdlbmRcIixcImxpXCIsXCJsaW5rXCIsXCJtYWluXCIsXCJtYXBcIixcIm1hcmtcIixcIm1hcnF1ZWVcIixcIm1lbnVcIixcIm1lbnVpdGVtXCIsXCJtZXRhXCIsXCJtZXRlclwiLFwibmF2XCIsXCJub3NjcmlwdFwiLFwib2JqZWN0XCIsXCJvbFwiLFwib3B0Z3JvdXBcIixcIm9wdGlvblwiLFwib3V0cHV0XCIsXCJwXCIsXCJwYXJhbVwiLFwicGljdHVyZVwiLFwicHJlXCIsXCJwcm9ncmVzc1wiLFwicVwiLFwicnBcIixcInJ0XCIsXCJydWJ5XCIsXCJzXCIsXCJzYW1wXCIsXCJzY3JpcHRcIixcInNlY3Rpb25cIixcInNlbGVjdFwiLFwic21hbGxcIixcInNvdXJjZVwiLFwic3BhblwiLFwic3Ryb25nXCIsXCJzdHlsZVwiLFwic3ViXCIsXCJzdW1tYXJ5XCIsXCJzdXBcIixcInRhYmxlXCIsXCJ0Ym9keVwiLFwidGRcIixcInRleHRhcmVhXCIsXCJ0Zm9vdFwiLFwidGhcIixcInRoZWFkXCIsXCJ0aW1lXCIsXCJ0aXRsZVwiLFwidHJcIixcInRyYWNrXCIsXCJ1XCIsXCJ1bFwiLFwidmFyXCIsXCJ2aWRlb1wiLFwid2JyXCIsXCJjaXJjbGVcIixcImNsaXBQYXRoXCIsXCJkZWZzXCIsXCJlbGxpcHNlXCIsXCJmb3JlaWduT2JqZWN0XCIsXCJnXCIsXCJpbWFnZVwiLFwibGluZVwiLFwibGluZWFyR3JhZGllbnRcIixcIm1hcmtlclwiLFwibWFza1wiLFwicGF0aFwiLFwicGF0dGVyblwiLFwicG9seWdvblwiLFwicG9seWxpbmVcIixcInJhZGlhbEdyYWRpZW50XCIsXCJyZWN0XCIsXCJzdG9wXCIsXCJzdmdcIixcInRleHRcIixcInRleHRQYXRoXCIsXCJ0c3BhblwiXS5mb3JFYWNoKChmdW5jdGlvbihlKXtIZVtlXT1IZShlKX0pKTt2YXIgJGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dGhpcy5ydWxlcz1lLHRoaXMuY29tcG9uZW50SWQ9dCx0aGlzLmlzU3RhdGljPXJlKGUpLFoucmVnaXN0ZXJJZCh0aGlzLmNvbXBvbmVudElkKzEpfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmNyZWF0ZVN0eWxlcz1mdW5jdGlvbihlLHQsbixyKXt2YXIgbz1yKE5lKHRoaXMucnVsZXMsdCxuLHIpLmpvaW4oXCJcIiksXCJcIikscz10aGlzLmNvbXBvbmVudElkK2U7bi5pbnNlcnRSdWxlcyhzLHMsbyl9LHQucmVtb3ZlU3R5bGVzPWZ1bmN0aW9uKGUsdCl7dC5jbGVhclJ1bGVzKHRoaXMuY29tcG9uZW50SWQrZSl9LHQucmVuZGVyU3R5bGVzPWZ1bmN0aW9uKGUsdCxuLHIpe2U+MiYmWi5yZWdpc3RlcklkKHRoaXMuY29tcG9uZW50SWQrZSksdGhpcy5yZW1vdmVTdHlsZXMoZSxuKSx0aGlzLmNyZWF0ZVN0eWxlcyhlLHQsbixyKX0sZX0oKTtmdW5jdGlvbiBXZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLG89MTtvPHQ7bysrKW5bby0xXT1hcmd1bWVudHNbb107dmFyIGk9Q2UuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpLGE9XCJzYy1nbG9iYWwtXCIreGUoSlNPTi5zdHJpbmdpZnkoaSkpLHU9bmV3ICRlKGksYSk7ZnVuY3Rpb24gbChlKXt2YXIgdD1mZSgpLG49bWUoKSxvPXMoR2UpLGw9Yyh0LmFsbG9jYXRlR1NJbnN0YW5jZShhKSkuY3VycmVudDtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZyLkNoaWxkcmVuLmNvdW50KGUuY2hpbGRyZW4pJiZjb25zb2xlLndhcm4oXCJUaGUgZ2xvYmFsIHN0eWxlIGNvbXBvbmVudCBcIithK1wiIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi5cIiksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmaS5zb21lKChmdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmLTEhPT1lLmluZGV4T2YoXCJAaW1wb3J0XCIpfSkpJiZjb25zb2xlLndhcm4oXCJQbGVhc2UgZG8gbm90IHVzZSBAaW1wb3J0IENTUyBzeW50YXggaW4gY3JlYXRlR2xvYmFsU3R5bGUgYXQgdGhpcyB0aW1lLCBhcyB0aGUgQ1NTT00gQVBJcyB3ZSB1c2UgaW4gcHJvZHVjdGlvbiBkbyBub3QgaGFuZGxlIGl0IHdlbGwuIEluc3RlYWQsIHdlIHJlY29tbWVuZCB1c2luZyBhIGxpYnJhcnkgc3VjaCBhcyByZWFjdC1oZWxtZXQgdG8gaW5qZWN0IGEgdHlwaWNhbCA8bGluaz4gbWV0YSB0YWcgdG8gdGhlIHN0eWxlc2hlZXQsIG9yIHNpbXBseSBlbWJlZGRpbmcgaXQgbWFudWFsbHkgaW4geW91ciBpbmRleC5odG1sIDxoZWFkPiBzZWN0aW9uIGZvciBhIHNpbXBsZXIgYXBwLlwiKSx0LnNlcnZlciYmaChsLGUsdCxvLG4pLGQoKGZ1bmN0aW9uKCl7aWYoIXQuc2VydmVyKXJldHVybiBoKGwsZSx0LG8sbiksZnVuY3Rpb24oKXtyZXR1cm4gdS5yZW1vdmVTdHlsZXMobCx0KX19KSxbbCxlLHQsbyxuXSksbnVsbH1mdW5jdGlvbiBoKGUsdCxuLHIsbyl7aWYodS5pc1N0YXRpYyl1LnJlbmRlclN0eWxlcyhlLE8sbixvKTtlbHNle3ZhciBzPXYoe30sdCx7dGhlbWU6UmUodCxyLGwuZGVmYXVsdFByb3BzKX0pO3UucmVuZGVyU3R5bGVzKGUscyxuLG8pfX1yZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZPZShhKSxyLm1lbW8obCl9ZnVuY3Rpb24gVWUoZSl7XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmXCJSZWFjdE5hdGl2ZVwiPT09bmF2aWdhdG9yLnByb2R1Y3QmJmNvbnNvbGUud2FybihcImBrZXlmcmFtZXNgIGNhbm5vdCBiZSB1c2VkIG9uIFJlYWN0TmF0aXZlLCBvbmx5IG9uIHRoZSB3ZWIuIFRvIGRvIGFuaW1hdGlvbiBpbiBSZWFjdE5hdGl2ZSBwbGVhc2UgdXNlIEFuaW1hdGVkLlwiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07dmFyIG89Q2UuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpLmpvaW4oXCJcIikscz14ZShvKTtyZXR1cm4gbmV3IHZlKHMsbyl9dmFyIEplPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3ZhciBlPXRoaXM7dGhpcy5fZW1pdFNoZWV0Q1NTPWZ1bmN0aW9uKCl7dmFyIHQ9ZS5pbnN0YW5jZS50b1N0cmluZygpO2lmKCF0KXJldHVyblwiXCI7dmFyIG49cSgpO3JldHVyblwiPHN0eWxlIFwiK1tuJiYnbm9uY2U9XCInK24rJ1wiJyxBKyc9XCJ0cnVlXCInLCdkYXRhLXN0eWxlZC12ZXJzaW9uPVwiNS4zLjZcIiddLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKStcIj5cIit0K1wiPC9zdHlsZT5cIn0sdGhpcy5nZXRTdHlsZVRhZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gZS5zZWFsZWQ/aigyKTplLl9lbWl0U2hlZXRDU1MoKX0sdGhpcy5nZXRTdHlsZUVsZW1lbnQ9ZnVuY3Rpb24oKXt2YXIgdDtpZihlLnNlYWxlZClyZXR1cm4gaigyKTt2YXIgbj0oKHQ9e30pW0FdPVwiXCIsdFtcImRhdGEtc3R5bGVkLXZlcnNpb25cIl09XCI1LjMuNlwiLHQuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e19faHRtbDplLmluc3RhbmNlLnRvU3RyaW5nKCl9LHQpLG89cSgpO3JldHVybiBvJiYobi5ub25jZT1vKSxbci5jcmVhdGVFbGVtZW50KFwic3R5bGVcIix2KHt9LG4se2tleTpcInNjLTAtMFwifSkpXX0sdGhpcy5zZWFsPWZ1bmN0aW9uKCl7ZS5zZWFsZWQ9ITB9LHRoaXMuaW5zdGFuY2U9bmV3IFooe2lzU2VydmVyOiEwfSksdGhpcy5zZWFsZWQ9ITF9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuY29sbGVjdFN0eWxlcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zZWFsZWQ/aigyKTpyLmNyZWF0ZUVsZW1lbnQoeWUse3NoZWV0OnRoaXMuaW5zdGFuY2V9LGUpfSx0LmludGVybGVhdmVXaXRoTm9kZVN0cmVhbT1mdW5jdGlvbihlKXtyZXR1cm4gaigzKX0sZX0oKSxYZT1mdW5jdGlvbihlKXt2YXIgdD1yLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHQsbil7dmFyIG89cyhHZSksaT1lLmRlZmF1bHRQcm9wcyxhPVJlKHQsbyxpKTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZ2b2lkIDA9PT1hJiZjb25zb2xlLndhcm4oJ1t3aXRoVGhlbWVdIFlvdSBhcmUgbm90IHVzaW5nIGEgVGhlbWVQcm92aWRlciBub3IgcGFzc2luZyBhIHRoZW1lIHByb3Agb3IgYSB0aGVtZSBpbiBkZWZhdWx0UHJvcHMgaW4gY29tcG9uZW50IGNsYXNzIFwiJytfKGUpKydcIicpLHIuY3JlYXRlRWxlbWVudChlLHYoe30sdCx7dGhlbWU6YSxyZWY6bn0pKX0pKTtyZXR1cm4geSh0LGUpLHQuZGlzcGxheU5hbWU9XCJXaXRoVGhlbWUoXCIrXyhlKStcIilcIix0fSxaZT1mdW5jdGlvbigpe3JldHVybiBzKEdlKX0sS2U9e1N0eWxlU2hlZXQ6WixtYXN0ZXJTaGVldDpoZX07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmXCJSZWFjdE5hdGl2ZVwiPT09bmF2aWdhdG9yLnByb2R1Y3QmJmNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgeW91J3ZlIGltcG9ydGVkICdzdHlsZWQtY29tcG9uZW50cycgb24gUmVhY3QgTmF0aXZlLlxcblBlcmhhcHMgeW91J3JlIGxvb2tpbmcgdG8gaW1wb3J0ICdzdHlsZWQtY29tcG9uZW50cy9uYXRpdmUnP1xcblJlYWQgbW9yZSBhYm91dCB0aGlzIGF0IGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2Jhc2ljcyNyZWFjdC1uYXRpdmVcIiksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ0ZXN0XCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdPXdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdfHwwLDE9PT13aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXSYmY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2YgJ3N0eWxlZC1jb21wb25lbnRzJyBpbml0aWFsaXplZCBpbiB0aGlzIGFwcGxpY2F0aW9uLiBUaGlzIG1heSBjYXVzZSBkeW5hbWljIHN0eWxlcyB0byBub3QgcmVuZGVyIHByb3Blcmx5LCBlcnJvcnMgZHVyaW5nIHRoZSByZWh5ZHJhdGlvbiBwcm9jZXNzLCBhIG1pc3NpbmcgdGhlbWUgcHJvcCwgYW5kIG1ha2VzIHlvdXIgYXBwbGljYXRpb24gYmlnZ2VyIHdpdGhvdXQgZ29vZCByZWFzb24uXFxuXFxuU2VlIGh0dHBzOi8vcy1jLnNoLzJCQVh6ZWQgZm9yIG1vcmUgaW5mby5cIiksd2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl0rPTEpO2V4cG9ydCBkZWZhdWx0IEhlO2V4cG9ydHtKZSBhcyBTZXJ2ZXJTdHlsZVNoZWV0LGxlIGFzIFN0eWxlU2hlZXRDb25zdW1lcix1ZSBhcyBTdHlsZVNoZWV0Q29udGV4dCx5ZSBhcyBTdHlsZVNoZWV0TWFuYWdlcixMZSBhcyBUaGVtZUNvbnN1bWVyLEdlIGFzIFRoZW1lQ29udGV4dCxGZSBhcyBUaGVtZVByb3ZpZGVyLEtlIGFzIF9fUFJJVkFURV9fLFdlIGFzIGNyZWF0ZUdsb2JhbFN0eWxlLENlIGFzIGNzcyxOIGFzIGlzU3R5bGVkQ29tcG9uZW50LFVlIGFzIGtleWZyYW1lcyxaZSBhcyB1c2VUaGVtZSxDIGFzIHZlcnNpb24sWGUgYXMgd2l0aFRoZW1lfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzLm1hcFxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogQ29weXJpZ2h0IChjKSBJbnRlbCBDb3Jwb3JhdGlvbiAyMDE5XG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKiB1dGlsaXR5IGZ1bmN0aW9uIHRvIGpvaW4gdGhlIGNzcyBjbGFzcyBuYW1lcyAqL1xuZXhwb3J0IGNvbnN0IGpvaW5DbGFzc2VzID0gKC4uLmNsYXNzTmFtZXMpOiBhbnkgPT5cbiAgY2xhc3NOYW1lc1xuICAgIC5maWx0ZXIoKG5hbWUpID0+ICEhaXNGYWxzeShuYW1lKSlcbiAgICAuam9pbignICcpXG4gICAgLnRyaW0oKVxuXG5leHBvcnQgY29uc3QgcHJlcGFyZUhlYWRlcnMgPSAoKTogYW55ID0+IHtcbiAgY29uc3QgaGVhZGVycyA9IHtcbiAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gIH1cbiAgcmV0dXJuIGhlYWRlcnNcbn1cblxuZXhwb3J0IGNvbnN0IGlzRmFsc3kgPSAodmFsdWU6IGFueSk6IGJvb2xlYW4gPT4gdmFsdWUgIT0gbnVsbCAmJiB2YWx1ZSAhPT0gJycgJiYgdmFsdWUgIT09IGZhbHNlICYmIHZhbHVlICE9PSAwXG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIENvcHlyaWdodCAoYykgSW50ZWwgQ29ycG9yYXRpb24gMjAxOVxuKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFN0eWxlIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xuaW1wb3J0IHsgaXNGYWxzeSB9IGZyb20gJy4uL3NoYXJlZC9VdGlsaXRpZXMnXG5cbmNvbnN0IFRlcm1pbmFsQ29udGFpbmVyID0gU3R5bGUuZGl2YFxuICAgZGlzcGxheTpibG9jaztcbiAgIHRleHQtYWxpZ246Y2VudGVyO1xuYFxuY29uc3QgWFRlcm0gPSBTdHlsZS5kaXZgXG4gICBkaXNwbGF5OmlubGluZS1ibG9jaztcbmBcblxuZXhwb3J0IGludGVyZmFjZSBJUHJvcFRlcm1pbmFsIHtcbiAgaGFuZGxlS2V5UHJlc3M6IGFueVxuICB4dGVybTogYW55XG4gIGhhbmRsZUtleURvd25QcmVzczogYW55XG59XG5cbmNsYXNzIFRlcm0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8SVByb3BUZXJtaW5hbD4ge1xuICAvLyB0aGlzIGlzIGZvciBkaWZmZXJlbnQgcmVhY3QgdmVyc2lvbiAxOCBsaWZlY3ljbGUgZnVuY3Rpb25hbGl0eVxuICAvLyBjYXVzZWQgMiB0ZXJtaW5hbCB3aW5kb3cgY29tcG9uZW50cyByYXRoZXIgdGhhbiBvbmUuXG4gIG1vdW50ZWRXb3JrYXJvdW5kOiBib29sZWFuXG4gIGNvbXBvbmVudERpZE1vdW50ICgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5tb3VudGVkV29ya2Fyb3VuZCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHRoaXMubW91bnRlZFdvcmthcm91bmQgPSB0cnVlXG5cbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3h0ZXJtJykgPz8gJydcbiAgICBjb25zdCB7IHh0ZXJtLCBoYW5kbGVLZXlQcmVzcyB9ID0gdGhpcy5wcm9wc1xuICAgIGlmIChpc0ZhbHN5KGVsZW1lbnQpKSB7XG4gICAgICB4dGVybS5vcGVuKGVsZW1lbnQpXG4gICAgICB4dGVybS5vbkRhdGEoZGF0YSA9PiBoYW5kbGVLZXlQcmVzcyhkYXRhKSlcbiAgICAgIHh0ZXJtLmF0dGFjaEN1c3RvbUtleUV2ZW50SGFuZGxlcihlID0+IHtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgaWYgKGlzRmFsc3koZS5jdHJsS2V5KSAmJiBpc0ZhbHN5KGUuc2hpZnRLZXkpICYmIChlLmtleUNvZGUgPT09IDY3KSkge1xuICAgICAgICAgIHJldHVybiBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dCh4dGVybS5nZXRTZWxlY3Rpb24oKSlcbiAgICAgICAgfSBlbHNlIGlmIChpc0ZhbHN5KGUuY3RybEtleSkgJiYgaXNGYWxzeShlLnNoaWZ0S2V5KSAmJiAoZS5rZXlDb2RlID09PSA4NikpIHtcbiAgICAgICAgICByZXR1cm4gbmF2aWdhdG9yLmNsaXBib2FyZC5yZWFkVGV4dCgpXG4gICAgICAgICAgICAudGhlbih0ZXh0ID0+IGhhbmRsZUtleVByZXNzKHRleHQpXG4gICAgICAgICAgICApXG4gICAgICAgIH0gZWxzZSBpZiAoZS5jb2RlID09PSAnU3BhY2UnKSB7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZUtleVByZXNzKGUua2V5KVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciAoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXJtaW5hbFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRlcm1pbmFsX3h0ZXJtXCIgaWQ9XCJ4dGVybVwiIC8+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGVybVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4veHRlcm0uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3h0ZXJtLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc29sLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zb2wuc2Nzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQ29weXJpZ2h0IChjKSBJbnRlbCBDb3Jwb3JhdGlvbiAyMDE5XG4qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBBbXRUZXJtaW5hbCwgQU1UUmVkaXJlY3RvciwgUHJvdG9jb2wsIENvbnNvbGVMb2dnZXIsIExvZ0xldmVsLCBUZXJtaW5hbERhdGFQcm9jZXNzb3IgfSBmcm9tICdAb3Blbi1hbXQtY2xvdWQtdG9vbGtpdC91aS10b29sa2l0L2NvcmUnXG5pbXBvcnQgU3R5bGUgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXG5pbXBvcnQgeyBUZXJtaW5hbCB9IGZyb20gJ3h0ZXJtJ1xuaW1wb3J0IFRlcm0gZnJvbSAnLi9UZXJtaW5hbCdcbmltcG9ydCAneHRlcm0vY3NzL3h0ZXJtLmNzcydcbmltcG9ydCAnLi9zb2wuc2NzcydcblxuY29uc3QgU3R5bGVkRGl2ID0gU3R5bGUuZGl2YFxuZGlzcGxheSA6IGlubGluZS1ibG9jaztcbnBhZGRpbmcgOiAwcHggNXB4O1xuYFxuXG5jb25zdCBIZWFkZXJTdHJpcCA9IFN0eWxlLmRpdmBcbmJhY2tncm91bmQtY29sb3I6IGRhcmtncmF5O1xucGFkZGluZzogNXB4O1xuZm9udC1zaXplOiAxM3B4O1xudGV4dC1hbGlnbjogY2VudGVyO1xuYFxuXG5leHBvcnQgaW50ZXJmYWNlIFNPTFByb3BzIHtcbiAgZGV2aWNlSWQ6IHN0cmluZyB8IG51bGxcbiAgbXBzU2VydmVyOiBzdHJpbmcgfCBudWxsXG4gIGF1dG9Db25uZWN0PzogYm9vbGVhblxuICBhdXRoVG9rZW46IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNPTFN0YXRlcyB7XG4gIGlzQ29ubmVjdGVkOiBib29sZWFuXG4gIFNPTHN0YXRlOiBudW1iZXJcbiAgcG93ZXJTdGF0ZTogbnVtYmVyXG4gIHNob3dTdWNjZXNzOiBib29sZWFuXG4gIG1lc3NhZ2U6IHN0cmluZ1xuICBpc1NlbGVjdGVkOiBib29sZWFuXG4gIHR5cGU6IHN0cmluZ1xuICBzb2xOb3RFbmFibGVkOiBzdHJpbmdcbiAgZGV2aWNlT25TbGVlcDogc3RyaW5nXG4gIGlzUG93ZXJTdGF0ZUxvYWRlZDogYm9vbGVhblxufVxuXG4vKiogY29udGFpbmVyIGNsYXNzIGZvciBTT0wgKi9cbmV4cG9ydCBjbGFzcyBTb2wgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8U09MUHJvcHMsIFNPTFN0YXRlcz4ge1xuICByZWRpcmVjdG9yOiBhbnlcbiAgdGVybWluYWw6IGFueVxuICBsb2dnZXI6IGFueVxuICBkYXRhUHJvY2Vzc29yOiBhbnlcbiAgY2FsbGJhY2s6IGFueVxuICB0ZXJtOiBhbnlcbiAgZnI6IEZpbGVSZWFkZXJcbiAgY29uc3RydWN0b3IgKHByb3BzOiBTT0xQcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMubG9nZ2VyID0gbmV3IENvbnNvbGVMb2dnZXIoTG9nTGV2ZWwuRVJST1IpXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGlzQ29ubmVjdGVkOiBmYWxzZSxcbiAgICAgIFNPTHN0YXRlOiAwLFxuICAgICAgcG93ZXJTdGF0ZTogMCxcbiAgICAgIHNob3dTdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6ICcnLFxuICAgICAgaXNTZWxlY3RlZDogdHJ1ZSxcbiAgICAgIHR5cGU6ICcnLFxuICAgICAgc29sTm90RW5hYmxlZDogJycsXG4gICAgICBkZXZpY2VPblNsZWVwOiAnJyxcbiAgICAgIGlzUG93ZXJTdGF0ZUxvYWRlZDogZmFsc2VcbiAgICB9XG4gIH1cblxuICBpbml0ID0gKCk6IHZvaWQgPT4ge1xuICAgIGNvbnN0IHNlcnZlcjogc3RyaW5nID0gdGhpcy5wcm9wcy5tcHNTZXJ2ZXIgIT0gbnVsbCA/IHRoaXMucHJvcHMubXBzU2VydmVyLnJlcGxhY2UoJ2h0dHAnLCAnd3MnKSA6ICcnXG4gICAgY29uc3QgZGV2aWNlVXVpZDogc3RyaW5nID0gdGhpcy5wcm9wcy5kZXZpY2VJZCAhPSBudWxsID8gdGhpcy5wcm9wcy5kZXZpY2VJZCA6ICcnXG4gICAgdGhpcy50ZXJtaW5hbCA9IG5ldyBBbXRUZXJtaW5hbCgpXG4gICAgdGhpcy5yZWRpcmVjdG9yID0gbmV3IEFNVFJlZGlyZWN0b3IoXG4gICAgICB0aGlzLmxvZ2dlcixcbiAgICAgIFByb3RvY29sLlNPTCxcbiAgICAgIG5ldyBGaWxlUmVhZGVyKCksXG4gICAgICBkZXZpY2VVdWlkLFxuICAgICAgMTY5OTQsXG4gICAgICAnJyxcbiAgICAgICcnLFxuICAgICAgMCxcbiAgICAgIDAsXG4gICAgICB0aGlzLnByb3BzLmF1dGhUb2tlbixcbiAgICAgIGAke3NlcnZlcn0vcmVsYXlgXG4gICAgKVxuICAgIHRoaXMuZGF0YVByb2Nlc3NvciA9IG5ldyBUZXJtaW5hbERhdGFQcm9jZXNzb3IodGhpcy50ZXJtaW5hbClcbiAgICB0aGlzLnRlcm1pbmFsLm9uU2VuZCA9IHRoaXMucmVkaXJlY3Rvci5zZW5kLmJpbmQodGhpcy5yZWRpcmVjdG9yKVxuICAgIHRoaXMucmVkaXJlY3Rvci5vbk5ld1N0YXRlID0gdGhpcy50ZXJtaW5hbC5TdGF0ZUNoYW5nZS5iaW5kKHRoaXMudGVybWluYWwpXG4gICAgdGhpcy5yZWRpcmVjdG9yLm9uU3RhdGVDaGFuZ2VkID0gdGhpcy5vblRlcm1pbmFsU3RhdGVDaGFuZ2UuYmluZCh0aGlzKVxuICAgIHRoaXMucmVkaXJlY3Rvci5vblByb2Nlc3NEYXRhID0gdGhpcy5kYXRhUHJvY2Vzc29yLnByb2Nlc3NEYXRhLmJpbmQodGhpcy5kYXRhUHJvY2Vzc29yKVxuICAgIHRoaXMuZGF0YVByb2Nlc3Nvci5wcm9jZXNzRGF0YVRvWHRlcm0gPSB0aGlzLmhhbmRsZVdyaXRlVG9YdGVybS5iaW5kKHRoaXMpXG4gICAgdGhpcy5kYXRhUHJvY2Vzc29yLmNsZWFyVGVybWluYWwgPSB0aGlzLmhhbmRsZUNsZWFyVGVybWluYWwuYmluZCh0aGlzKVxuICAgIHRoaXMudGVybSA9IG5ldyBUZXJtaW5hbCh7XG4gICAgICBjdXJzb3JTdHlsZTogJ2Jsb2NrJyxcbiAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICAgIHJvd3M6IDMwLFxuICAgICAgY29sczogMTAwXG4gICAgfSlcbiAgfVxuXG4gIGNsZWFuVXAgPSAoKTogdm9pZCA9PiB7XG4gICAgdGhpcy50ZXJtaW5hbCA9IG51bGxcbiAgICB0aGlzLnJlZGlyZWN0b3IgPSBudWxsXG4gICAgdGhpcy5kYXRhUHJvY2Vzc29yID0gbnVsbFxuICAgIHRoaXMudGVybSA9IG51bGxcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50ICgpOiB2b2lkIHtcbiAgICB0aGlzLmluaXQoKVxuICB9XG5cbiAgLyoqIHdyaXRlIHRoZSBwcm9jZXNzZWQgZGF0YSBmcm9tIHdlYnNjb2tldCBpbiB0byB4dGVybSAqL1xuXG4gIGhhbmRsZVdyaXRlVG9YdGVybSA9IChzdHIpOiBhbnkgPT4gdGhpcy50ZXJtLndyaXRlKHN0cilcblxuICBoYW5kbGVDbGVhclRlcm1pbmFsID0gKCk6IGFueSA9PiB0aGlzLnRlcm0ucmVzZXQoKVxuXG4gIC8qKiBjYXB0dXJlIHRoZSBkYXRhIG9uIHh0ZXJtIGtleSBwcmVzcyAqL1xuICBoYW5kbGVLZXlQcmVzcyA9IChkb21FdmVudCk6IGFueSA9PiB0aGlzLnRlcm1pbmFsLlRlcm1TZW5kS2V5cyhkb21FdmVudClcblxuICBoYW5kbGVLZXlEb3duUHJlc3MgPSAoZG9tRXZlbnQpOiBhbnkgPT4gdGhpcy50ZXJtaW5hbC5oYW5kbGVLZXlEb3duRXZlbnRzKGRvbUV2ZW50KVxuXG4gIHN0YXJ0U09MID0gKCk6IHZvaWQgPT4ge1xuICAgIGlmICh0eXBlb2YgdGhpcy5yZWRpcmVjdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5yZWRpcmVjdG9yLnN0YXJ0KFdlYlNvY2tldClcbiAgICB9XG4gIH1cblxuICBzdG9wU09MID0gKCk6IHZvaWQgPT4ge1xuICAgIGlmICh0eXBlb2YgdGhpcy5yZWRpcmVjdG9yICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhpcy5yZWRpcmVjdG9yLnN0b3AoKVxuICAgIH1cbiAgICB0aGlzLmhhbmRsZUNsZWFyVGVybWluYWwoKVxuICAgIHRoaXMuY2xlYW5VcCgpXG4gICAgdGhpcy5pbml0KClcbiAgfVxuXG4gIGhhbmRsZVNPTENvbm5lY3QgPSAoZSk6IHZvaWQgPT4ge1xuICAgIGUucGVyc2lzdCgpXG4gICAgaWYgKHRoaXMuc3RhdGUuU09Mc3RhdGUgPT09IDApIHtcbiAgICAgIHRoaXMuc3RhcnRTT0woKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN0b3BTT0woKVxuICAgIH1cbiAgfVxuXG4gIG9uVGVybWluYWxTdGF0ZUNoYW5nZSA9IChyZWRpcmVjdG9yLCBzdGF0ZTogbnVtYmVyKTogdm9pZCA9PiB0aGlzLnNldFN0YXRlKHsgU09Mc3RhdGU6IHN0YXRlIH0pXG5cbiAgLyoqIGNhbGxiYWNrIGZ1bmN0aW9ucyBmcm9tIGNoaWxkIGNvbXBvbmVudHMgdG8gdXBkYXRlIHRoZSBzdGF0ZSB2YWx1ZXMgKi9cbiAgaGFuZGxlRmVhdHVyZVN0YXR1cyA9ICh2YWx1ZSk6IHZvaWQgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc29sTm90RW5hYmxlZDogdmFsdWVcbiAgICB9KVxuICB9XG5cbiAgZ2V0U09MU3RhdGUgPSAoKTogYW55ID0+IHRoaXMuc3RhdGUuU09Mc3RhdGUgPT09IDMgPyAyIDogMFxuXG4gIHJlbmRlciAoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICBjb25zdCB7IFNPTHN0YXRlIH0gPSB0aGlzLnN0YXRlXG4gICAgcmV0dXJuIChcbiAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmhhbmRsZVNPTENvbm5lY3R9PntTT0xzdGF0ZSA9PT0gMyA/ICdEaXNjb25uZWN0JyA6ICdDb25uZWN0J308L2J1dHRvbj5cbiAgICAgICAge1NPTHN0YXRlID09PSAzICYmIHRoaXMudGVybSAmJiA8VGVybSBoYW5kbGVLZXlQcmVzcz17dGhpcy5oYW5kbGVLZXlQcmVzc30gaGFuZGxlS2V5RG93blByZXNzPXt0aGlzLmhhbmRsZUtleURvd25QcmVzc30geHRlcm09e3RoaXMudGVybX0gLz59XG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgIClcbiAgfVxufVxuXG5cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgfSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICB9LCBfdHlwZW9mKG9iaik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn0iLCJpbXBvcnQgX3R5cGVvZiBmcm9tIFwiLi90eXBlb2YuanNcIjtcbmltcG9ydCB0b1ByaW1pdGl2ZSBmcm9tIFwiLi90b1ByaW1pdGl2ZS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7XG4gIHZhciBrZXkgPSB0b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpO1xuICByZXR1cm4gX3R5cGVvZihrZXkpID09PSBcInN5bWJvbFwiID8ga2V5IDogU3RyaW5nKGtleSk7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSBcIi4vdHlwZW9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9QcmltaXRpdmUoaW5wdXQsIGhpbnQpIHtcbiAgaWYgKF90eXBlb2YoaW5wdXQpICE9PSBcIm9iamVjdFwiIHx8IGlucHV0ID09PSBudWxsKSByZXR1cm4gaW5wdXQ7XG4gIHZhciBwcmltID0gaW5wdXRbU3ltYm9sLnRvUHJpbWl0aXZlXTtcbiAgaWYgKHByaW0gIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciByZXMgPSBwcmltLmNhbGwoaW5wdXQsIGhpbnQgfHwgXCJkZWZhdWx0XCIpO1xuICAgIGlmIChfdHlwZW9mKHJlcykgIT09IFwib2JqZWN0XCIpIHJldHVybiByZXM7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuICB9XG4gIHJldHVybiAoaGludCA9PT0gXCJzdHJpbmdcIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpO1xufSIsImltcG9ydCB0b1Byb3BlcnR5S2V5IGZyb20gXCIuL3RvUHJvcGVydHlLZXkuanNcIjtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHRvUHJvcGVydHlLZXkoZGVzY3JpcHRvci5rZXkpLCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuICByZXR1cm4gc2VsZjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc3ViQ2xhc3MsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSBcIi4vdHlwZW9mLmpzXCI7XG5pbXBvcnQgYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCIuL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgIHJldHVybiBjYWxsO1xuICB9IGVsc2UgaWYgKGNhbGwgIT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJEZXJpdmVkIGNvbnN0cnVjdG9ycyBtYXkgb25seSByZXR1cm4gb2JqZWN0IG9yIHVuZGVmaW5lZFwiKTtcbiAgfVxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH07XG4gIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59IiwiaW1wb3J0IHRvUHJvcGVydHlLZXkgZnJvbSBcIi4vdG9Qcm9wZXJ0eUtleS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBrZXkgPSB0b1Byb3BlcnR5S2V5KGtleSk7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmo7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cbiAgcmV0dXJuIGFycjI7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mJztcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2snO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyc7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyc7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybic7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mJztcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHknO1xuaW1wb3J0IF90b0FycmF5IGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQXJyYXknO1xuXG5mdW5jdGlvbiBvd25LZXlzJDYob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkJDYodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMkNihPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzJDYoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxudmFyIGNvbnNvbGVMb2dnZXIgPSB7XG4gIHR5cGU6ICdsb2dnZXInLFxuICBsb2c6IGZ1bmN0aW9uIGxvZyhhcmdzKSB7XG4gICAgdGhpcy5vdXRwdXQoJ2xvZycsIGFyZ3MpO1xuICB9LFxuICB3YXJuOiBmdW5jdGlvbiB3YXJuKGFyZ3MpIHtcbiAgICB0aGlzLm91dHB1dCgnd2FybicsIGFyZ3MpO1xuICB9LFxuICBlcnJvcjogZnVuY3Rpb24gZXJyb3IoYXJncykge1xuICAgIHRoaXMub3V0cHV0KCdlcnJvcicsIGFyZ3MpO1xuICB9LFxuICBvdXRwdXQ6IGZ1bmN0aW9uIG91dHB1dCh0eXBlLCBhcmdzKSB7XG4gICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZVt0eXBlXSkgY29uc29sZVt0eXBlXS5hcHBseShjb25zb2xlLCBhcmdzKTtcbiAgfVxufTtcbnZhciBMb2dnZXIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIExvZ2dlcihjb25jcmV0ZUxvZ2dlcikge1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9nZ2VyKTtcbiAgICB0aGlzLmluaXQoY29uY3JldGVMb2dnZXIsIG9wdGlvbnMpO1xuICB9XG4gIF9jcmVhdGVDbGFzcyhMb2dnZXIsIFt7XG4gICAga2V5OiBcImluaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdChjb25jcmV0ZUxvZ2dlcikge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgICAgdGhpcy5wcmVmaXggPSBvcHRpb25zLnByZWZpeCB8fCAnaTE4bmV4dDonO1xuICAgICAgdGhpcy5sb2dnZXIgPSBjb25jcmV0ZUxvZ2dlciB8fCBjb25zb2xlTG9nZ2VyO1xuICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgIHRoaXMuZGVidWcgPSBvcHRpb25zLmRlYnVnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXREZWJ1Z1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREZWJ1Zyhib29sKSB7XG4gICAgICB0aGlzLmRlYnVnID0gYm9vbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvZygpIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuZm9yd2FyZChhcmdzLCAnbG9nJywgJycsIHRydWUpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ3YXJuXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHdhcm4oKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuZm9yd2FyZChhcmdzLCAnd2FybicsICcnLCB0cnVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXJyb3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXJyb3IoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjMpLCBfa2V5MyA9IDA7IF9rZXkzIDwgX2xlbjM7IF9rZXkzKyspIHtcbiAgICAgICAgYXJnc1tfa2V5M10gPSBhcmd1bWVudHNbX2tleTNdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuZm9yd2FyZChhcmdzLCAnZXJyb3InLCAnJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRlcHJlY2F0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXByZWNhdGUoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjQpLCBfa2V5NCA9IDA7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICAgICAgYXJnc1tfa2V5NF0gPSBhcmd1bWVudHNbX2tleTRdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuZm9yd2FyZChhcmdzLCAnd2FybicsICdXQVJOSU5HIERFUFJFQ0FURUQ6ICcsIHRydWUpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3J3YXJkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcndhcmQoYXJncywgbHZsLCBwcmVmaXgsIGRlYnVnT25seSkge1xuICAgICAgaWYgKGRlYnVnT25seSAmJiAhdGhpcy5kZWJ1ZykgcmV0dXJuIG51bGw7XG4gICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnKSBhcmdzWzBdID0gXCJcIi5jb25jYXQocHJlZml4KS5jb25jYXQodGhpcy5wcmVmaXgsIFwiIFwiKS5jb25jYXQoYXJnc1swXSk7XG4gICAgICByZXR1cm4gdGhpcy5sb2dnZXJbbHZsXShhcmdzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY3JlYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZShtb2R1bGVOYW1lKSB7XG4gICAgICByZXR1cm4gbmV3IExvZ2dlcih0aGlzLmxvZ2dlciwgX29iamVjdFNwcmVhZCQ2KF9vYmplY3RTcHJlYWQkNih7fSwge1xuICAgICAgICBwcmVmaXg6IFwiXCIuY29uY2F0KHRoaXMucHJlZml4LCBcIjpcIikuY29uY2F0KG1vZHVsZU5hbWUsIFwiOlwiKVxuICAgICAgfSksIHRoaXMub3B0aW9ucykpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9uZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9uZShvcHRpb25zKSB7XG4gICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB0aGlzLm9wdGlvbnM7XG4gICAgICBvcHRpb25zLnByZWZpeCA9IG9wdGlvbnMucHJlZml4IHx8IHRoaXMucHJlZml4O1xuICAgICAgcmV0dXJuIG5ldyBMb2dnZXIodGhpcy5sb2dnZXIsIG9wdGlvbnMpO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gTG9nZ2VyO1xufSgpO1xudmFyIGJhc2VMb2dnZXIgPSBuZXcgTG9nZ2VyKCk7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRXZlbnRFbWl0dGVyKTtcbiAgICB0aGlzLm9ic2VydmVycyA9IHt9O1xuICB9XG4gIF9jcmVhdGVDbGFzcyhFdmVudEVtaXR0ZXIsIFt7XG4gICAga2V5OiBcIm9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGV2ZW50cywgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICBldmVudHMuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBfdGhpcy5vYnNlcnZlcnNbZXZlbnRdID0gX3RoaXMub2JzZXJ2ZXJzW2V2ZW50XSB8fCBbXTtcbiAgICAgICAgX3RoaXMub2JzZXJ2ZXJzW2V2ZW50XS5wdXNoKGxpc3RlbmVyKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9mZlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgICBpZiAoIXRoaXMub2JzZXJ2ZXJzW2V2ZW50XSkgcmV0dXJuO1xuICAgICAgaWYgKCFsaXN0ZW5lcikge1xuICAgICAgICBkZWxldGUgdGhpcy5vYnNlcnZlcnNbZXZlbnRdO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLm9ic2VydmVyc1tldmVudF0gPSB0aGlzLm9ic2VydmVyc1tldmVudF0uZmlsdGVyKGZ1bmN0aW9uIChsKSB7XG4gICAgICAgIHJldHVybiBsICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJlbWl0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVtaXQoZXZlbnQpIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vYnNlcnZlcnNbZXZlbnRdKSB7XG4gICAgICAgIHZhciBjbG9uZWQgPSBbXS5jb25jYXQodGhpcy5vYnNlcnZlcnNbZXZlbnRdKTtcbiAgICAgICAgY2xvbmVkLmZvckVhY2goZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgICAgb2JzZXJ2ZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vYnNlcnZlcnNbJyonXSkge1xuICAgICAgICB2YXIgX2Nsb25lZCA9IFtdLmNvbmNhdCh0aGlzLm9ic2VydmVyc1snKiddKTtcbiAgICAgICAgX2Nsb25lZC5mb3JFYWNoKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgICAgIG9ic2VydmVyLmFwcGx5KG9ic2VydmVyLCBbZXZlbnRdLmNvbmNhdChhcmdzKSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gRXZlbnRFbWl0dGVyO1xufSgpO1xuXG5mdW5jdGlvbiBkZWZlcigpIHtcbiAgdmFyIHJlcztcbiAgdmFyIHJlajtcbiAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgcmVzID0gcmVzb2x2ZTtcbiAgICByZWogPSByZWplY3Q7XG4gIH0pO1xuICBwcm9taXNlLnJlc29sdmUgPSByZXM7XG4gIHByb21pc2UucmVqZWN0ID0gcmVqO1xuICByZXR1cm4gcHJvbWlzZTtcbn1cbmZ1bmN0aW9uIG1ha2VTdHJpbmcob2JqZWN0KSB7XG4gIGlmIChvYmplY3QgPT0gbnVsbCkgcmV0dXJuICcnO1xuICByZXR1cm4gJycgKyBvYmplY3Q7XG59XG5mdW5jdGlvbiBjb3B5KGEsIHMsIHQpIHtcbiAgYS5mb3JFYWNoKGZ1bmN0aW9uIChtKSB7XG4gICAgaWYgKHNbbV0pIHRbbV0gPSBzW21dO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGdldExhc3RPZlBhdGgob2JqZWN0LCBwYXRoLCBFbXB0eSkge1xuICBmdW5jdGlvbiBjbGVhbktleShrZXkpIHtcbiAgICByZXR1cm4ga2V5ICYmIGtleS5pbmRleE9mKCcjIyMnKSA+IC0xID8ga2V5LnJlcGxhY2UoLyMjIy9nLCAnLicpIDoga2V5O1xuICB9XG4gIGZ1bmN0aW9uIGNhbk5vdFRyYXZlcnNlRGVlcGVyKCkge1xuICAgIHJldHVybiAhb2JqZWN0IHx8IHR5cGVvZiBvYmplY3QgPT09ICdzdHJpbmcnO1xuICB9XG4gIHZhciBzdGFjayA9IHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJyA/IFtdLmNvbmNhdChwYXRoKSA6IHBhdGguc3BsaXQoJy4nKTtcbiAgd2hpbGUgKHN0YWNrLmxlbmd0aCA+IDEpIHtcbiAgICBpZiAoY2FuTm90VHJhdmVyc2VEZWVwZXIoKSkgcmV0dXJuIHt9O1xuICAgIHZhciBrZXkgPSBjbGVhbktleShzdGFjay5zaGlmdCgpKTtcbiAgICBpZiAoIW9iamVjdFtrZXldICYmIEVtcHR5KSBvYmplY3Rba2V5XSA9IG5ldyBFbXB0eSgpO1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSB7XG4gICAgICBvYmplY3QgPSBvYmplY3Rba2V5XTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqZWN0ID0ge307XG4gICAgfVxuICB9XG4gIGlmIChjYW5Ob3RUcmF2ZXJzZURlZXBlcigpKSByZXR1cm4ge307XG4gIHJldHVybiB7XG4gICAgb2JqOiBvYmplY3QsXG4gICAgazogY2xlYW5LZXkoc3RhY2suc2hpZnQoKSlcbiAgfTtcbn1cbmZ1bmN0aW9uIHNldFBhdGgob2JqZWN0LCBwYXRoLCBuZXdWYWx1ZSkge1xuICB2YXIgX2dldExhc3RPZlBhdGggPSBnZXRMYXN0T2ZQYXRoKG9iamVjdCwgcGF0aCwgT2JqZWN0KSxcbiAgICBvYmogPSBfZ2V0TGFzdE9mUGF0aC5vYmosXG4gICAgayA9IF9nZXRMYXN0T2ZQYXRoLms7XG4gIG9ialtrXSA9IG5ld1ZhbHVlO1xufVxuZnVuY3Rpb24gcHVzaFBhdGgob2JqZWN0LCBwYXRoLCBuZXdWYWx1ZSwgY29uY2F0KSB7XG4gIHZhciBfZ2V0TGFzdE9mUGF0aDIgPSBnZXRMYXN0T2ZQYXRoKG9iamVjdCwgcGF0aCwgT2JqZWN0KSxcbiAgICBvYmogPSBfZ2V0TGFzdE9mUGF0aDIub2JqLFxuICAgIGsgPSBfZ2V0TGFzdE9mUGF0aDIuaztcbiAgb2JqW2tdID0gb2JqW2tdIHx8IFtdO1xuICBpZiAoY29uY2F0KSBvYmpba10gPSBvYmpba10uY29uY2F0KG5ld1ZhbHVlKTtcbiAgaWYgKCFjb25jYXQpIG9ialtrXS5wdXNoKG5ld1ZhbHVlKTtcbn1cbmZ1bmN0aW9uIGdldFBhdGgob2JqZWN0LCBwYXRoKSB7XG4gIHZhciBfZ2V0TGFzdE9mUGF0aDMgPSBnZXRMYXN0T2ZQYXRoKG9iamVjdCwgcGF0aCksXG4gICAgb2JqID0gX2dldExhc3RPZlBhdGgzLm9iaixcbiAgICBrID0gX2dldExhc3RPZlBhdGgzLms7XG4gIGlmICghb2JqKSByZXR1cm4gdW5kZWZpbmVkO1xuICByZXR1cm4gb2JqW2tdO1xufVxuZnVuY3Rpb24gZ2V0UGF0aFdpdGhEZWZhdWx0cyhkYXRhLCBkZWZhdWx0RGF0YSwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFBhdGgoZGF0YSwga2V5KTtcbiAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIGdldFBhdGgoZGVmYXVsdERhdGEsIGtleSk7XG59XG5mdW5jdGlvbiBkZWVwRXh0ZW5kKHRhcmdldCwgc291cmNlLCBvdmVyd3JpdGUpIHtcbiAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcbiAgICBpZiAocHJvcCAhPT0gJ19fcHJvdG9fXycgJiYgcHJvcCAhPT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgaWYgKHByb3AgaW4gdGFyZ2V0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0W3Byb3BdID09PSAnc3RyaW5nJyB8fCB0YXJnZXRbcHJvcF0gaW5zdGFuY2VvZiBTdHJpbmcgfHwgdHlwZW9mIHNvdXJjZVtwcm9wXSA9PT0gJ3N0cmluZycgfHwgc291cmNlW3Byb3BdIGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgICAgICAgaWYgKG92ZXJ3cml0ZSkgdGFyZ2V0W3Byb3BdID0gc291cmNlW3Byb3BdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRlZXBFeHRlbmQodGFyZ2V0W3Byb3BdLCBzb3VyY2VbcHJvcF0sIG92ZXJ3cml0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIHJlZ2V4RXNjYXBlKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1tcXC1cXFtcXF1cXC9cXHtcXH1cXChcXClcXCpcXCtcXD9cXC5cXFxcXFxeXFwkXFx8XS9nLCAnXFxcXCQmJyk7XG59XG52YXIgX2VudGl0eU1hcCA9IHtcbiAgJyYnOiAnJmFtcDsnLFxuICAnPCc6ICcmbHQ7JyxcbiAgJz4nOiAnJmd0OycsXG4gICdcIic6ICcmcXVvdDsnLFxuICBcIidcIjogJyYjMzk7JyxcbiAgJy8nOiAnJiN4MkY7J1xufTtcbmZ1bmN0aW9uIGVzY2FwZShkYXRhKSB7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGF0YS5yZXBsYWNlKC9bJjw+XCInXFwvXS9nLCBmdW5jdGlvbiAocykge1xuICAgICAgcmV0dXJuIF9lbnRpdHlNYXBbc107XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59XG52YXIgaXNJRTEwID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lm5hdmlnYXRvciAmJiB0eXBlb2Ygd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnREYXRhID09PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCAmJiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdNU0lFJykgPiAtMTtcbnZhciBjaGFycyA9IFsnICcsICcsJywgJz8nLCAnIScsICc7J107XG5mdW5jdGlvbiBsb29rc0xpa2VPYmplY3RQYXRoKGtleSwgbnNTZXBhcmF0b3IsIGtleVNlcGFyYXRvcikge1xuICBuc1NlcGFyYXRvciA9IG5zU2VwYXJhdG9yIHx8ICcnO1xuICBrZXlTZXBhcmF0b3IgPSBrZXlTZXBhcmF0b3IgfHwgJyc7XG4gIHZhciBwb3NzaWJsZUNoYXJzID0gY2hhcnMuZmlsdGVyKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIG5zU2VwYXJhdG9yLmluZGV4T2YoYykgPCAwICYmIGtleVNlcGFyYXRvci5pbmRleE9mKGMpIDwgMDtcbiAgfSk7XG4gIGlmIChwb3NzaWJsZUNoYXJzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRydWU7XG4gIHZhciByID0gbmV3IFJlZ0V4cChcIihcIi5jb25jYXQocG9zc2libGVDaGFycy5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gJz8nID8gJ1xcXFw/JyA6IGM7XG4gIH0pLmpvaW4oJ3wnKSwgXCIpXCIpKTtcbiAgdmFyIG1hdGNoZWQgPSAhci50ZXN0KGtleSk7XG4gIGlmICghbWF0Y2hlZCkge1xuICAgIHZhciBraSA9IGtleS5pbmRleE9mKGtleVNlcGFyYXRvcik7XG4gICAgaWYgKGtpID4gMCAmJiAhci50ZXN0KGtleS5zdWJzdHJpbmcoMCwga2kpKSkge1xuICAgICAgbWF0Y2hlZCA9IHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBtYXRjaGVkO1xufVxuXG5mdW5jdGlvbiBvd25LZXlzJDUob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkJDUodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMkNShPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzJDUoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyJDMoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMygpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0JDMoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuZnVuY3Rpb24gZGVlcEZpbmQob2JqLCBwYXRoKSB7XG4gIHZhciBrZXlTZXBhcmF0b3IgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6ICcuJztcbiAgaWYgKCFvYmopIHJldHVybiB1bmRlZmluZWQ7XG4gIGlmIChvYmpbcGF0aF0pIHJldHVybiBvYmpbcGF0aF07XG4gIHZhciBwYXRocyA9IHBhdGguc3BsaXQoa2V5U2VwYXJhdG9yKTtcbiAgdmFyIGN1cnJlbnQgPSBvYmo7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aHMubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoIWN1cnJlbnQpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgaWYgKHR5cGVvZiBjdXJyZW50W3BhdGhzW2ldXSA9PT0gJ3N0cmluZycgJiYgaSArIDEgPCBwYXRocy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChjdXJyZW50W3BhdGhzW2ldXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgaiA9IDI7XG4gICAgICB2YXIgcCA9IHBhdGhzLnNsaWNlKGksIGkgKyBqKS5qb2luKGtleVNlcGFyYXRvcik7XG4gICAgICB2YXIgbWl4ID0gY3VycmVudFtwXTtcbiAgICAgIHdoaWxlIChtaXggPT09IHVuZGVmaW5lZCAmJiBwYXRocy5sZW5ndGggPiBpICsgaikge1xuICAgICAgICBqKys7XG4gICAgICAgIHAgPSBwYXRocy5zbGljZShpLCBpICsgaikuam9pbihrZXlTZXBhcmF0b3IpO1xuICAgICAgICBtaXggPSBjdXJyZW50W3BdO1xuICAgICAgfVxuICAgICAgaWYgKG1peCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgaWYgKG1peCA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgICBpZiAocGF0aC5lbmRzV2l0aChwKSkge1xuICAgICAgICBpZiAodHlwZW9mIG1peCA9PT0gJ3N0cmluZycpIHJldHVybiBtaXg7XG4gICAgICAgIGlmIChwICYmIHR5cGVvZiBtaXhbcF0gPT09ICdzdHJpbmcnKSByZXR1cm4gbWl4W3BdO1xuICAgICAgfVxuICAgICAgdmFyIGpvaW5lZFBhdGggPSBwYXRocy5zbGljZShpICsgaikuam9pbihrZXlTZXBhcmF0b3IpO1xuICAgICAgaWYgKGpvaW5lZFBhdGgpIHJldHVybiBkZWVwRmluZChtaXgsIGpvaW5lZFBhdGgsIGtleVNlcGFyYXRvcik7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjdXJyZW50ID0gY3VycmVudFtwYXRoc1tpXV07XG4gIH1cbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG52YXIgUmVzb3VyY2VTdG9yZSA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhSZXNvdXJjZVN0b3JlLCBfRXZlbnRFbWl0dGVyKTtcbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlciQzKFJlc291cmNlU3RvcmUpO1xuICBmdW5jdGlvbiBSZXNvdXJjZVN0b3JlKGRhdGEpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHtcbiAgICAgIG5zOiBbJ3RyYW5zbGF0aW9uJ10sXG4gICAgICBkZWZhdWx0TlM6ICd0cmFuc2xhdGlvbidcbiAgICB9O1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXNvdXJjZVN0b3JlKTtcbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpO1xuICAgIGlmIChpc0lFMTApIHtcbiAgICAgIEV2ZW50RW1pdHRlci5jYWxsKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICB9XG4gICAgX3RoaXMuZGF0YSA9IGRhdGEgfHwge307XG4gICAgX3RoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgaWYgKF90aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgIF90aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yID0gJy4nO1xuICAgIH1cbiAgICBpZiAoX3RoaXMub3B0aW9ucy5pZ25vcmVKU09OU3RydWN0dXJlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIF90aGlzLm9wdGlvbnMuaWdub3JlSlNPTlN0cnVjdHVyZSA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfY3JlYXRlQ2xhc3MoUmVzb3VyY2VTdG9yZSwgW3tcbiAgICBrZXk6IFwiYWRkTmFtZXNwYWNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGROYW1lc3BhY2VzKG5zKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLm5zLmluZGV4T2YobnMpIDwgMCkge1xuICAgICAgICB0aGlzLm9wdGlvbnMubnMucHVzaChucyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZU5hbWVzcGFjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlTmFtZXNwYWNlcyhucykge1xuICAgICAgdmFyIGluZGV4ID0gdGhpcy5vcHRpb25zLm5zLmluZGV4T2YobnMpO1xuICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLm5zLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFJlc291cmNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlc291cmNlKGxuZywgbnMsIGtleSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuICAgICAgdmFyIGtleVNlcGFyYXRvciA9IG9wdGlvbnMua2V5U2VwYXJhdG9yICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmtleVNlcGFyYXRvciA6IHRoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3I7XG4gICAgICB2YXIgaWdub3JlSlNPTlN0cnVjdHVyZSA9IG9wdGlvbnMuaWdub3JlSlNPTlN0cnVjdHVyZSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5pZ25vcmVKU09OU3RydWN0dXJlIDogdGhpcy5vcHRpb25zLmlnbm9yZUpTT05TdHJ1Y3R1cmU7XG4gICAgICB2YXIgcGF0aCA9IFtsbmcsIG5zXTtcbiAgICAgIGlmIChrZXkgJiYgdHlwZW9mIGtleSAhPT0gJ3N0cmluZycpIHBhdGggPSBwYXRoLmNvbmNhdChrZXkpO1xuICAgICAgaWYgKGtleSAmJiB0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykgcGF0aCA9IHBhdGguY29uY2F0KGtleVNlcGFyYXRvciA/IGtleS5zcGxpdChrZXlTZXBhcmF0b3IpIDoga2V5KTtcbiAgICAgIGlmIChsbmcuaW5kZXhPZignLicpID4gLTEpIHtcbiAgICAgICAgcGF0aCA9IGxuZy5zcGxpdCgnLicpO1xuICAgICAgfVxuICAgICAgdmFyIHJlc3VsdCA9IGdldFBhdGgodGhpcy5kYXRhLCBwYXRoKTtcbiAgICAgIGlmIChyZXN1bHQgfHwgIWlnbm9yZUpTT05TdHJ1Y3R1cmUgfHwgdHlwZW9mIGtleSAhPT0gJ3N0cmluZycpIHJldHVybiByZXN1bHQ7XG4gICAgICByZXR1cm4gZGVlcEZpbmQodGhpcy5kYXRhICYmIHRoaXMuZGF0YVtsbmddICYmIHRoaXMuZGF0YVtsbmddW25zXSwga2V5LCBrZXlTZXBhcmF0b3IpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRSZXNvdXJjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRSZXNvdXJjZShsbmcsIG5zLCBrZXksIHZhbHVlKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDoge1xuICAgICAgICBzaWxlbnQ6IGZhbHNlXG4gICAgICB9O1xuICAgICAgdmFyIGtleVNlcGFyYXRvciA9IHRoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3I7XG4gICAgICBpZiAoa2V5U2VwYXJhdG9yID09PSB1bmRlZmluZWQpIGtleVNlcGFyYXRvciA9ICcuJztcbiAgICAgIHZhciBwYXRoID0gW2xuZywgbnNdO1xuICAgICAgaWYgKGtleSkgcGF0aCA9IHBhdGguY29uY2F0KGtleVNlcGFyYXRvciA/IGtleS5zcGxpdChrZXlTZXBhcmF0b3IpIDoga2V5KTtcbiAgICAgIGlmIChsbmcuaW5kZXhPZignLicpID4gLTEpIHtcbiAgICAgICAgcGF0aCA9IGxuZy5zcGxpdCgnLicpO1xuICAgICAgICB2YWx1ZSA9IG5zO1xuICAgICAgICBucyA9IHBhdGhbMV07XG4gICAgICB9XG4gICAgICB0aGlzLmFkZE5hbWVzcGFjZXMobnMpO1xuICAgICAgc2V0UGF0aCh0aGlzLmRhdGEsIHBhdGgsIHZhbHVlKTtcbiAgICAgIGlmICghb3B0aW9ucy5zaWxlbnQpIHRoaXMuZW1pdCgnYWRkZWQnLCBsbmcsIG5zLCBrZXksIHZhbHVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkUmVzb3VyY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFJlc291cmNlcyhsbmcsIG5zLCByZXNvdXJjZXMpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7XG4gICAgICAgIHNpbGVudDogZmFsc2VcbiAgICAgIH07XG4gICAgICBmb3IgKHZhciBtIGluIHJlc291cmNlcykge1xuICAgICAgICBpZiAodHlwZW9mIHJlc291cmNlc1ttXSA9PT0gJ3N0cmluZycgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShyZXNvdXJjZXNbbV0pID09PSAnW29iamVjdCBBcnJheV0nKSB0aGlzLmFkZFJlc291cmNlKGxuZywgbnMsIG0sIHJlc291cmNlc1ttXSwge1xuICAgICAgICAgIHNpbGVudDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmICghb3B0aW9ucy5zaWxlbnQpIHRoaXMuZW1pdCgnYWRkZWQnLCBsbmcsIG5zLCByZXNvdXJjZXMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRSZXNvdXJjZUJ1bmRsZShsbmcsIG5zLCByZXNvdXJjZXMsIGRlZXAsIG92ZXJ3cml0ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcbiAgICAgIHZhciBwYXRoID0gW2xuZywgbnNdO1xuICAgICAgaWYgKGxuZy5pbmRleE9mKCcuJykgPiAtMSkge1xuICAgICAgICBwYXRoID0gbG5nLnNwbGl0KCcuJyk7XG4gICAgICAgIGRlZXAgPSByZXNvdXJjZXM7XG4gICAgICAgIHJlc291cmNlcyA9IG5zO1xuICAgICAgICBucyA9IHBhdGhbMV07XG4gICAgICB9XG4gICAgICB0aGlzLmFkZE5hbWVzcGFjZXMobnMpO1xuICAgICAgdmFyIHBhY2sgPSBnZXRQYXRoKHRoaXMuZGF0YSwgcGF0aCkgfHwge307XG4gICAgICBpZiAoZGVlcCkge1xuICAgICAgICBkZWVwRXh0ZW5kKHBhY2ssIHJlc291cmNlcywgb3ZlcndyaXRlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhY2sgPSBfb2JqZWN0U3ByZWFkJDUoX29iamVjdFNwcmVhZCQ1KHt9LCBwYWNrKSwgcmVzb3VyY2VzKTtcbiAgICAgIH1cbiAgICAgIHNldFBhdGgodGhpcy5kYXRhLCBwYXRoLCBwYWNrKTtcbiAgICAgIGlmICghb3B0aW9ucy5zaWxlbnQpIHRoaXMuZW1pdCgnYWRkZWQnLCBsbmcsIG5zLCByZXNvdXJjZXMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW1vdmVSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSB7XG4gICAgICBpZiAodGhpcy5oYXNSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSkge1xuICAgICAgICBkZWxldGUgdGhpcy5kYXRhW2xuZ11bbnNdO1xuICAgICAgfVxuICAgICAgdGhpcy5yZW1vdmVOYW1lc3BhY2VzKG5zKTtcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlZCcsIGxuZywgbnMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRSZXNvdXJjZShsbmcsIG5zKSAhPT0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSB7XG4gICAgICBpZiAoIW5zKSBucyA9IHRoaXMub3B0aW9ucy5kZWZhdWx0TlM7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlBUEkgPT09ICd2MScpIHJldHVybiBfb2JqZWN0U3ByZWFkJDUoX29iamVjdFNwcmVhZCQ1KHt9LCB7fSksIHRoaXMuZ2V0UmVzb3VyY2UobG5nLCBucykpO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVzb3VyY2UobG5nLCBucyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldERhdGFCeUxhbmd1YWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldERhdGFCeUxhbmd1YWdlKGxuZykge1xuICAgICAgcmV0dXJuIHRoaXMuZGF0YVtsbmddO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNMYW5ndWFnZVNvbWVUcmFuc2xhdGlvbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzTGFuZ3VhZ2VTb21lVHJhbnNsYXRpb25zKGxuZykge1xuICAgICAgdmFyIGRhdGEgPSB0aGlzLmdldERhdGFCeUxhbmd1YWdlKGxuZyk7XG4gICAgICB2YXIgbiA9IGRhdGEgJiYgT2JqZWN0LmtleXMoZGF0YSkgfHwgW107XG4gICAgICByZXR1cm4gISFuLmZpbmQoZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgcmV0dXJuIGRhdGFbdl0gJiYgT2JqZWN0LmtleXMoZGF0YVt2XSkubGVuZ3RoID4gMDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b0pTT05cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZGF0YTtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIFJlc291cmNlU3RvcmU7XG59KEV2ZW50RW1pdHRlcik7XG5cbnZhciBwb3N0UHJvY2Vzc29yID0ge1xuICBwcm9jZXNzb3JzOiB7fSxcbiAgYWRkUG9zdFByb2Nlc3NvcjogZnVuY3Rpb24gYWRkUG9zdFByb2Nlc3Nvcihtb2R1bGUpIHtcbiAgICB0aGlzLnByb2Nlc3NvcnNbbW9kdWxlLm5hbWVdID0gbW9kdWxlO1xuICB9LFxuICBoYW5kbGU6IGZ1bmN0aW9uIGhhbmRsZShwcm9jZXNzb3JzLCB2YWx1ZSwga2V5LCBvcHRpb25zLCB0cmFuc2xhdG9yKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICBwcm9jZXNzb3JzLmZvckVhY2goZnVuY3Rpb24gKHByb2Nlc3Nvcikge1xuICAgICAgaWYgKF90aGlzLnByb2Nlc3NvcnNbcHJvY2Vzc29yXSkgdmFsdWUgPSBfdGhpcy5wcm9jZXNzb3JzW3Byb2Nlc3Nvcl0ucHJvY2Vzcyh2YWx1ZSwga2V5LCBvcHRpb25zLCB0cmFuc2xhdG9yKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIG93bktleXMkNChvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQkNCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyQ0KE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMkNChPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIkMihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCQyKCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMigpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG52YXIgY2hlY2tlZExvYWRlZEZvciA9IHt9O1xudmFyIFRyYW5zbGF0b3IgPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoVHJhbnNsYXRvciwgX0V2ZW50RW1pdHRlcik7XG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIkMihUcmFuc2xhdG9yKTtcbiAgZnVuY3Rpb24gVHJhbnNsYXRvcihzZXJ2aWNlcykge1xuICAgIHZhciBfdGhpcztcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYW5zbGF0b3IpO1xuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcyk7XG4gICAgaWYgKGlzSUUxMCkge1xuICAgICAgRXZlbnRFbWl0dGVyLmNhbGwoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIH1cbiAgICBjb3B5KFsncmVzb3VyY2VTdG9yZScsICdsYW5ndWFnZVV0aWxzJywgJ3BsdXJhbFJlc29sdmVyJywgJ2ludGVycG9sYXRvcicsICdiYWNrZW5kQ29ubmVjdG9yJywgJ2kxOG5Gb3JtYXQnLCAndXRpbHMnXSwgc2VydmljZXMsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICBpZiAoX3RoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3IgPT09IHVuZGVmaW5lZCkge1xuICAgICAgX3RoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3IgPSAnLic7XG4gICAgfVxuICAgIF90aGlzLmxvZ2dlciA9IGJhc2VMb2dnZXIuY3JlYXRlKCd0cmFuc2xhdG9yJyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9jcmVhdGVDbGFzcyhUcmFuc2xhdG9yLCBbe1xuICAgIGtleTogXCJjaGFuZ2VMYW5ndWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjaGFuZ2VMYW5ndWFnZShsbmcpIHtcbiAgICAgIGlmIChsbmcpIHRoaXMubGFuZ3VhZ2UgPSBsbmc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImV4aXN0c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleGlzdHMoa2V5KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7fVxuICAgICAgfTtcbiAgICAgIGlmIChrZXkgPT09IHVuZGVmaW5lZCB8fCBrZXkgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgdmFyIHJlc29sdmVkID0gdGhpcy5yZXNvbHZlKGtleSwgb3B0aW9ucyk7XG4gICAgICByZXR1cm4gcmVzb2x2ZWQgJiYgcmVzb2x2ZWQucmVzICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImV4dHJhY3RGcm9tS2V5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGV4dHJhY3RGcm9tS2V5KGtleSwgb3B0aW9ucykge1xuICAgICAgdmFyIG5zU2VwYXJhdG9yID0gb3B0aW9ucy5uc1NlcGFyYXRvciAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc1NlcGFyYXRvciA6IHRoaXMub3B0aW9ucy5uc1NlcGFyYXRvcjtcbiAgICAgIGlmIChuc1NlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSBuc1NlcGFyYXRvciA9ICc6JztcbiAgICAgIHZhciBrZXlTZXBhcmF0b3IgPSBvcHRpb25zLmtleVNlcGFyYXRvciAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5rZXlTZXBhcmF0b3IgOiB0aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yO1xuICAgICAgdmFyIG5hbWVzcGFjZXMgPSBvcHRpb25zLm5zIHx8IHRoaXMub3B0aW9ucy5kZWZhdWx0TlMgfHwgW107XG4gICAgICB2YXIgd291bGRDaGVja0Zvck5zSW5LZXkgPSBuc1NlcGFyYXRvciAmJiBrZXkuaW5kZXhPZihuc1NlcGFyYXRvcikgPiAtMTtcbiAgICAgIHZhciBzZWVtc05hdHVyYWxMYW5ndWFnZSA9ICF0aGlzLm9wdGlvbnMudXNlckRlZmluZWRLZXlTZXBhcmF0b3IgJiYgIW9wdGlvbnMua2V5U2VwYXJhdG9yICYmICF0aGlzLm9wdGlvbnMudXNlckRlZmluZWROc1NlcGFyYXRvciAmJiAhb3B0aW9ucy5uc1NlcGFyYXRvciAmJiAhbG9va3NMaWtlT2JqZWN0UGF0aChrZXksIG5zU2VwYXJhdG9yLCBrZXlTZXBhcmF0b3IpO1xuICAgICAgaWYgKHdvdWxkQ2hlY2tGb3JOc0luS2V5ICYmICFzZWVtc05hdHVyYWxMYW5ndWFnZSkge1xuICAgICAgICB2YXIgbSA9IGtleS5tYXRjaCh0aGlzLmludGVycG9sYXRvci5uZXN0aW5nUmVnZXhwKTtcbiAgICAgICAgaWYgKG0gJiYgbS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgICAgbmFtZXNwYWNlczogbmFtZXNwYWNlc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHBhcnRzID0ga2V5LnNwbGl0KG5zU2VwYXJhdG9yKTtcbiAgICAgICAgaWYgKG5zU2VwYXJhdG9yICE9PSBrZXlTZXBhcmF0b3IgfHwgbnNTZXBhcmF0b3IgPT09IGtleVNlcGFyYXRvciAmJiB0aGlzLm9wdGlvbnMubnMuaW5kZXhPZihwYXJ0c1swXSkgPiAtMSkgbmFtZXNwYWNlcyA9IHBhcnRzLnNoaWZ0KCk7XG4gICAgICAgIGtleSA9IHBhcnRzLmpvaW4oa2V5U2VwYXJhdG9yKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlcyA9PT0gJ3N0cmluZycpIG5hbWVzcGFjZXMgPSBbbmFtZXNwYWNlc107XG4gICAgICByZXR1cm4ge1xuICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgbmFtZXNwYWNlczogbmFtZXNwYWNlc1xuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidHJhbnNsYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRyYW5zbGF0ZShrZXlzLCBvcHRpb25zLCBsYXN0S2V5KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcbiAgICAgIGlmIChfdHlwZW9mKG9wdGlvbnMpICE9PSAnb2JqZWN0JyAmJiB0aGlzLm9wdGlvbnMub3ZlcmxvYWRUcmFuc2xhdGlvbk9wdGlvbkhhbmRsZXIpIHtcbiAgICAgICAgb3B0aW9ucyA9IHRoaXMub3B0aW9ucy5vdmVybG9hZFRyYW5zbGF0aW9uT3B0aW9uSGFuZGxlcihhcmd1bWVudHMpO1xuICAgICAgfVxuICAgICAgaWYgKCFvcHRpb25zKSBvcHRpb25zID0ge307XG4gICAgICBpZiAoa2V5cyA9PT0gdW5kZWZpbmVkIHx8IGtleXMgPT09IG51bGwpIHJldHVybiAnJztcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShrZXlzKSkga2V5cyA9IFtTdHJpbmcoa2V5cyldO1xuICAgICAgdmFyIHJldHVybkRldGFpbHMgPSBvcHRpb25zLnJldHVybkRldGFpbHMgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMucmV0dXJuRGV0YWlscyA6IHRoaXMub3B0aW9ucy5yZXR1cm5EZXRhaWxzO1xuICAgICAgdmFyIGtleVNlcGFyYXRvciA9IG9wdGlvbnMua2V5U2VwYXJhdG9yICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmtleVNlcGFyYXRvciA6IHRoaXMub3B0aW9ucy5rZXlTZXBhcmF0b3I7XG4gICAgICB2YXIgX3RoaXMkZXh0cmFjdEZyb21LZXkgPSB0aGlzLmV4dHJhY3RGcm9tS2V5KGtleXNba2V5cy5sZW5ndGggLSAxXSwgb3B0aW9ucyksXG4gICAgICAgIGtleSA9IF90aGlzJGV4dHJhY3RGcm9tS2V5LmtleSxcbiAgICAgICAgbmFtZXNwYWNlcyA9IF90aGlzJGV4dHJhY3RGcm9tS2V5Lm5hbWVzcGFjZXM7XG4gICAgICB2YXIgbmFtZXNwYWNlID0gbmFtZXNwYWNlc1tuYW1lc3BhY2VzLmxlbmd0aCAtIDFdO1xuICAgICAgdmFyIGxuZyA9IG9wdGlvbnMubG5nIHx8IHRoaXMubGFuZ3VhZ2U7XG4gICAgICB2YXIgYXBwZW5kTmFtZXNwYWNlVG9DSU1vZGUgPSBvcHRpb25zLmFwcGVuZE5hbWVzcGFjZVRvQ0lNb2RlIHx8IHRoaXMub3B0aW9ucy5hcHBlbmROYW1lc3BhY2VUb0NJTW9kZTtcbiAgICAgIGlmIChsbmcgJiYgbG5nLnRvTG93ZXJDYXNlKCkgPT09ICdjaW1vZGUnKSB7XG4gICAgICAgIGlmIChhcHBlbmROYW1lc3BhY2VUb0NJTW9kZSkge1xuICAgICAgICAgIHZhciBuc1NlcGFyYXRvciA9IG9wdGlvbnMubnNTZXBhcmF0b3IgfHwgdGhpcy5vcHRpb25zLm5zU2VwYXJhdG9yO1xuICAgICAgICAgIGlmIChyZXR1cm5EZXRhaWxzKSB7XG4gICAgICAgICAgICByZXNvbHZlZC5yZXMgPSBcIlwiLmNvbmNhdChuYW1lc3BhY2UpLmNvbmNhdChuc1NlcGFyYXRvcikuY29uY2F0KGtleSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZWQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChuYW1lc3BhY2UpLmNvbmNhdChuc1NlcGFyYXRvcikuY29uY2F0KGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJldHVybkRldGFpbHMpIHtcbiAgICAgICAgICByZXNvbHZlZC5yZXMgPSBrZXk7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgICB9XG4gICAgICB2YXIgcmVzb2x2ZWQgPSB0aGlzLnJlc29sdmUoa2V5cywgb3B0aW9ucyk7XG4gICAgICB2YXIgcmVzID0gcmVzb2x2ZWQgJiYgcmVzb2x2ZWQucmVzO1xuICAgICAgdmFyIHJlc1VzZWRLZXkgPSByZXNvbHZlZCAmJiByZXNvbHZlZC51c2VkS2V5IHx8IGtleTtcbiAgICAgIHZhciByZXNFeGFjdFVzZWRLZXkgPSByZXNvbHZlZCAmJiByZXNvbHZlZC5leGFjdFVzZWRLZXkgfHwga2V5O1xuICAgICAgdmFyIHJlc1R5cGUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KHJlcyk7XG4gICAgICB2YXIgbm9PYmplY3QgPSBbJ1tvYmplY3QgTnVtYmVyXScsICdbb2JqZWN0IEZ1bmN0aW9uXScsICdbb2JqZWN0IFJlZ0V4cF0nXTtcbiAgICAgIHZhciBqb2luQXJyYXlzID0gb3B0aW9ucy5qb2luQXJyYXlzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmpvaW5BcnJheXMgOiB0aGlzLm9wdGlvbnMuam9pbkFycmF5cztcbiAgICAgIHZhciBoYW5kbGVBc09iamVjdEluSTE4bkZvcm1hdCA9ICF0aGlzLmkxOG5Gb3JtYXQgfHwgdGhpcy5pMThuRm9ybWF0LmhhbmRsZUFzT2JqZWN0O1xuICAgICAgdmFyIGhhbmRsZUFzT2JqZWN0ID0gdHlwZW9mIHJlcyAhPT0gJ3N0cmluZycgJiYgdHlwZW9mIHJlcyAhPT0gJ2Jvb2xlYW4nICYmIHR5cGVvZiByZXMgIT09ICdudW1iZXInO1xuICAgICAgaWYgKGhhbmRsZUFzT2JqZWN0SW5JMThuRm9ybWF0ICYmIHJlcyAmJiBoYW5kbGVBc09iamVjdCAmJiBub09iamVjdC5pbmRleE9mKHJlc1R5cGUpIDwgMCAmJiAhKHR5cGVvZiBqb2luQXJyYXlzID09PSAnc3RyaW5nJyAmJiByZXNUeXBlID09PSAnW29iamVjdCBBcnJheV0nKSkge1xuICAgICAgICBpZiAoIW9wdGlvbnMucmV0dXJuT2JqZWN0cyAmJiAhdGhpcy5vcHRpb25zLnJldHVybk9iamVjdHMpIHtcbiAgICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5yZXR1cm5lZE9iamVjdEhhbmRsZXIpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLndhcm4oJ2FjY2Vzc2luZyBhbiBvYmplY3QgLSBidXQgcmV0dXJuT2JqZWN0cyBvcHRpb25zIGlzIG5vdCBlbmFibGVkIScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgciA9IHRoaXMub3B0aW9ucy5yZXR1cm5lZE9iamVjdEhhbmRsZXIgPyB0aGlzLm9wdGlvbnMucmV0dXJuZWRPYmplY3RIYW5kbGVyKHJlc1VzZWRLZXksIHJlcywgX29iamVjdFNwcmVhZCQ0KF9vYmplY3RTcHJlYWQkNCh7fSwgb3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgICBuczogbmFtZXNwYWNlc1xuICAgICAgICAgIH0pKSA6IFwia2V5ICdcIi5jb25jYXQoa2V5LCBcIiAoXCIpLmNvbmNhdCh0aGlzLmxhbmd1YWdlLCBcIiknIHJldHVybmVkIGFuIG9iamVjdCBpbnN0ZWFkIG9mIHN0cmluZy5cIik7XG4gICAgICAgICAgaWYgKHJldHVybkRldGFpbHMpIHtcbiAgICAgICAgICAgIHJlc29sdmVkLnJlcyA9IHI7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZWQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByO1xuICAgICAgICB9XG4gICAgICAgIGlmIChrZXlTZXBhcmF0b3IpIHtcbiAgICAgICAgICB2YXIgcmVzVHlwZUlzQXJyYXkgPSByZXNUeXBlID09PSAnW29iamVjdCBBcnJheV0nO1xuICAgICAgICAgIHZhciBjb3B5ID0gcmVzVHlwZUlzQXJyYXkgPyBbXSA6IHt9O1xuICAgICAgICAgIHZhciBuZXdLZXlUb1VzZSA9IHJlc1R5cGVJc0FycmF5ID8gcmVzRXhhY3RVc2VkS2V5IDogcmVzVXNlZEtleTtcbiAgICAgICAgICBmb3IgKHZhciBtIGluIHJlcykge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyZXMsIG0pKSB7XG4gICAgICAgICAgICAgIHZhciBkZWVwS2V5ID0gXCJcIi5jb25jYXQobmV3S2V5VG9Vc2UpLmNvbmNhdChrZXlTZXBhcmF0b3IpLmNvbmNhdChtKTtcbiAgICAgICAgICAgICAgY29weVttXSA9IHRoaXMudHJhbnNsYXRlKGRlZXBLZXksIF9vYmplY3RTcHJlYWQkNChfb2JqZWN0U3ByZWFkJDQoe30sIG9wdGlvbnMpLCB7XG4gICAgICAgICAgICAgICAgam9pbkFycmF5czogZmFsc2UsXG4gICAgICAgICAgICAgICAgbnM6IG5hbWVzcGFjZXNcbiAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICBpZiAoY29weVttXSA9PT0gZGVlcEtleSkgY29weVttXSA9IHJlc1ttXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmVzID0gY29weTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChoYW5kbGVBc09iamVjdEluSTE4bkZvcm1hdCAmJiB0eXBlb2Ygam9pbkFycmF5cyA9PT0gJ3N0cmluZycgJiYgcmVzVHlwZSA9PT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgICByZXMgPSByZXMuam9pbihqb2luQXJyYXlzKTtcbiAgICAgICAgaWYgKHJlcykgcmVzID0gdGhpcy5leHRlbmRUcmFuc2xhdGlvbihyZXMsIGtleXMsIG9wdGlvbnMsIGxhc3RLZXkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHVzZWREZWZhdWx0ID0gZmFsc2U7XG4gICAgICAgIHZhciB1c2VkS2V5ID0gZmFsc2U7XG4gICAgICAgIHZhciBuZWVkc1BsdXJhbEhhbmRsaW5nID0gb3B0aW9ucy5jb3VudCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmNvdW50ICE9PSAnc3RyaW5nJztcbiAgICAgICAgdmFyIGhhc0RlZmF1bHRWYWx1ZSA9IFRyYW5zbGF0b3IuaGFzRGVmYXVsdFZhbHVlKG9wdGlvbnMpO1xuICAgICAgICB2YXIgZGVmYXVsdFZhbHVlU3VmZml4ID0gbmVlZHNQbHVyYWxIYW5kbGluZyA/IHRoaXMucGx1cmFsUmVzb2x2ZXIuZ2V0U3VmZml4KGxuZywgb3B0aW9ucy5jb3VudCwgb3B0aW9ucykgOiAnJztcbiAgICAgICAgdmFyIGRlZmF1bHRWYWx1ZSA9IG9wdGlvbnNbXCJkZWZhdWx0VmFsdWVcIi5jb25jYXQoZGVmYXVsdFZhbHVlU3VmZml4KV0gfHwgb3B0aW9ucy5kZWZhdWx0VmFsdWU7XG4gICAgICAgIGlmICghdGhpcy5pc1ZhbGlkTG9va3VwKHJlcykgJiYgaGFzRGVmYXVsdFZhbHVlKSB7XG4gICAgICAgICAgdXNlZERlZmF1bHQgPSB0cnVlO1xuICAgICAgICAgIHJlcyA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZExvb2t1cChyZXMpKSB7XG4gICAgICAgICAgdXNlZEtleSA9IHRydWU7XG4gICAgICAgICAgcmVzID0ga2V5O1xuICAgICAgICB9XG4gICAgICAgIHZhciBtaXNzaW5nS2V5Tm9WYWx1ZUZhbGxiYWNrVG9LZXkgPSBvcHRpb25zLm1pc3NpbmdLZXlOb1ZhbHVlRmFsbGJhY2tUb0tleSB8fCB0aGlzLm9wdGlvbnMubWlzc2luZ0tleU5vVmFsdWVGYWxsYmFja1RvS2V5O1xuICAgICAgICB2YXIgcmVzRm9yTWlzc2luZyA9IG1pc3NpbmdLZXlOb1ZhbHVlRmFsbGJhY2tUb0tleSAmJiB1c2VkS2V5ID8gdW5kZWZpbmVkIDogcmVzO1xuICAgICAgICB2YXIgdXBkYXRlTWlzc2luZyA9IGhhc0RlZmF1bHRWYWx1ZSAmJiBkZWZhdWx0VmFsdWUgIT09IHJlcyAmJiB0aGlzLm9wdGlvbnMudXBkYXRlTWlzc2luZztcbiAgICAgICAgaWYgKHVzZWRLZXkgfHwgdXNlZERlZmF1bHQgfHwgdXBkYXRlTWlzc2luZykge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmxvZyh1cGRhdGVNaXNzaW5nID8gJ3VwZGF0ZUtleScgOiAnbWlzc2luZ0tleScsIGxuZywgbmFtZXNwYWNlLCBrZXksIHVwZGF0ZU1pc3NpbmcgPyBkZWZhdWx0VmFsdWUgOiByZXMpO1xuICAgICAgICAgIGlmIChrZXlTZXBhcmF0b3IpIHtcbiAgICAgICAgICAgIHZhciBmayA9IHRoaXMucmVzb2x2ZShrZXksIF9vYmplY3RTcHJlYWQkNChfb2JqZWN0U3ByZWFkJDQoe30sIG9wdGlvbnMpLCB7fSwge1xuICAgICAgICAgICAgICBrZXlTZXBhcmF0b3I6IGZhbHNlXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBpZiAoZmsgJiYgZmsucmVzKSB0aGlzLmxvZ2dlci53YXJuKCdTZWVtcyB0aGUgbG9hZGVkIHRyYW5zbGF0aW9ucyB3ZXJlIGluIGZsYXQgSlNPTiBmb3JtYXQgaW5zdGVhZCBvZiBuZXN0ZWQuIEVpdGhlciBzZXQga2V5U2VwYXJhdG9yOiBmYWxzZSBvbiBpbml0IG9yIG1ha2Ugc3VyZSB5b3VyIHRyYW5zbGF0aW9ucyBhcmUgcHVibGlzaGVkIGluIG5lc3RlZCBmb3JtYXQuJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciBsbmdzID0gW107XG4gICAgICAgICAgdmFyIGZhbGxiYWNrTG5ncyA9IHRoaXMubGFuZ3VhZ2VVdGlscy5nZXRGYWxsYmFja0NvZGVzKHRoaXMub3B0aW9ucy5mYWxsYmFja0xuZywgb3B0aW9ucy5sbmcgfHwgdGhpcy5sYW5ndWFnZSk7XG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZ1RvID09PSAnZmFsbGJhY2snICYmIGZhbGxiYWNrTG5ncyAmJiBmYWxsYmFja0xuZ3NbMF0pIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZmFsbGJhY2tMbmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGxuZ3MucHVzaChmYWxsYmFja0xuZ3NbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLnNhdmVNaXNzaW5nVG8gPT09ICdhbGwnKSB7XG4gICAgICAgICAgICBsbmdzID0gdGhpcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbG5ncy5wdXNoKG9wdGlvbnMubG5nIHx8IHRoaXMubGFuZ3VhZ2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgc2VuZCA9IGZ1bmN0aW9uIHNlbmQobCwgaywgc3BlY2lmaWNEZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBkZWZhdWx0Rm9yTWlzc2luZyA9IGhhc0RlZmF1bHRWYWx1ZSAmJiBzcGVjaWZpY0RlZmF1bHRWYWx1ZSAhPT0gcmVzID8gc3BlY2lmaWNEZWZhdWx0VmFsdWUgOiByZXNGb3JNaXNzaW5nO1xuICAgICAgICAgICAgaWYgKF90aGlzMi5vcHRpb25zLm1pc3NpbmdLZXlIYW5kbGVyKSB7XG4gICAgICAgICAgICAgIF90aGlzMi5vcHRpb25zLm1pc3NpbmdLZXlIYW5kbGVyKGwsIG5hbWVzcGFjZSwgaywgZGVmYXVsdEZvck1pc3NpbmcsIHVwZGF0ZU1pc3NpbmcsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpczIuYmFja2VuZENvbm5lY3RvciAmJiBfdGhpczIuYmFja2VuZENvbm5lY3Rvci5zYXZlTWlzc2luZykge1xuICAgICAgICAgICAgICBfdGhpczIuYmFja2VuZENvbm5lY3Rvci5zYXZlTWlzc2luZyhsLCBuYW1lc3BhY2UsIGssIGRlZmF1bHRGb3JNaXNzaW5nLCB1cGRhdGVNaXNzaW5nLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzMi5lbWl0KCdtaXNzaW5nS2V5JywgbCwgbmFtZXNwYWNlLCBrLCByZXMpO1xuICAgICAgICAgIH07XG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZykge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZ1BsdXJhbHMgJiYgbmVlZHNQbHVyYWxIYW5kbGluZykge1xuICAgICAgICAgICAgICBsbmdzLmZvckVhY2goZnVuY3Rpb24gKGxhbmd1YWdlKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMyLnBsdXJhbFJlc29sdmVyLmdldFN1ZmZpeGVzKGxhbmd1YWdlLCBvcHRpb25zKS5mb3JFYWNoKGZ1bmN0aW9uIChzdWZmaXgpIHtcbiAgICAgICAgICAgICAgICAgIHNlbmQoW2xhbmd1YWdlXSwga2V5ICsgc3VmZml4LCBvcHRpb25zW1wiZGVmYXVsdFZhbHVlXCIuY29uY2F0KHN1ZmZpeCldIHx8IGRlZmF1bHRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2VuZChsbmdzLCBrZXksIGRlZmF1bHRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJlcyA9IHRoaXMuZXh0ZW5kVHJhbnNsYXRpb24ocmVzLCBrZXlzLCBvcHRpb25zLCByZXNvbHZlZCwgbGFzdEtleSk7XG4gICAgICAgIGlmICh1c2VkS2V5ICYmIHJlcyA9PT0ga2V5ICYmIHRoaXMub3B0aW9ucy5hcHBlbmROYW1lc3BhY2VUb01pc3NpbmdLZXkpIHJlcyA9IFwiXCIuY29uY2F0KG5hbWVzcGFjZSwgXCI6XCIpLmNvbmNhdChrZXkpO1xuICAgICAgICBpZiAoKHVzZWRLZXkgfHwgdXNlZERlZmF1bHQpICYmIHRoaXMub3B0aW9ucy5wYXJzZU1pc3NpbmdLZXlIYW5kbGVyKSB7XG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5QVBJICE9PSAndjEnKSB7XG4gICAgICAgICAgICByZXMgPSB0aGlzLm9wdGlvbnMucGFyc2VNaXNzaW5nS2V5SGFuZGxlcih0aGlzLm9wdGlvbnMuYXBwZW5kTmFtZXNwYWNlVG9NaXNzaW5nS2V5ID8gXCJcIi5jb25jYXQobmFtZXNwYWNlLCBcIjpcIikuY29uY2F0KGtleSkgOiBrZXksIHVzZWREZWZhdWx0ID8gcmVzIDogdW5kZWZpbmVkKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzID0gdGhpcy5vcHRpb25zLnBhcnNlTWlzc2luZ0tleUhhbmRsZXIocmVzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChyZXR1cm5EZXRhaWxzKSB7XG4gICAgICAgIHJlc29sdmVkLnJlcyA9IHJlcztcbiAgICAgICAgcmV0dXJuIHJlc29sdmVkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXh0ZW5kVHJhbnNsYXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXh0ZW5kVHJhbnNsYXRpb24ocmVzLCBrZXksIG9wdGlvbnMsIHJlc29sdmVkLCBsYXN0S2V5KSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcbiAgICAgIGlmICh0aGlzLmkxOG5Gb3JtYXQgJiYgdGhpcy5pMThuRm9ybWF0LnBhcnNlKSB7XG4gICAgICAgIHJlcyA9IHRoaXMuaTE4bkZvcm1hdC5wYXJzZShyZXMsIF9vYmplY3RTcHJlYWQkNChfb2JqZWN0U3ByZWFkJDQoe30sIHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLmRlZmF1bHRWYXJpYWJsZXMpLCBvcHRpb25zKSwgcmVzb2x2ZWQudXNlZExuZywgcmVzb2x2ZWQudXNlZE5TLCByZXNvbHZlZC51c2VkS2V5LCB7XG4gICAgICAgICAgcmVzb2x2ZWQ6IHJlc29sdmVkXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICghb3B0aW9ucy5za2lwSW50ZXJwb2xhdGlvbikge1xuICAgICAgICBpZiAob3B0aW9ucy5pbnRlcnBvbGF0aW9uKSB0aGlzLmludGVycG9sYXRvci5pbml0KF9vYmplY3RTcHJlYWQkNChfb2JqZWN0U3ByZWFkJDQoe30sIG9wdGlvbnMpLCB7XG4gICAgICAgICAgaW50ZXJwb2xhdGlvbjogX29iamVjdFNwcmVhZCQ0KF9vYmplY3RTcHJlYWQkNCh7fSwgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24pLCBvcHRpb25zLmludGVycG9sYXRpb24pXG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIHNraXBPblZhcmlhYmxlcyA9IHR5cGVvZiByZXMgPT09ICdzdHJpbmcnICYmIChvcHRpb25zICYmIG9wdGlvbnMuaW50ZXJwb2xhdGlvbiAmJiBvcHRpb25zLmludGVycG9sYXRpb24uc2tpcE9uVmFyaWFibGVzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmludGVycG9sYXRpb24uc2tpcE9uVmFyaWFibGVzIDogdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uc2tpcE9uVmFyaWFibGVzKTtcbiAgICAgICAgdmFyIG5lc3RCZWY7XG4gICAgICAgIGlmIChza2lwT25WYXJpYWJsZXMpIHtcbiAgICAgICAgICB2YXIgbmIgPSByZXMubWF0Y2godGhpcy5pbnRlcnBvbGF0b3IubmVzdGluZ1JlZ2V4cCk7XG4gICAgICAgICAgbmVzdEJlZiA9IG5iICYmIG5iLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YSA9IG9wdGlvbnMucmVwbGFjZSAmJiB0eXBlb2Ygb3B0aW9ucy5yZXBsYWNlICE9PSAnc3RyaW5nJyA/IG9wdGlvbnMucmVwbGFjZSA6IG9wdGlvbnM7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5kZWZhdWx0VmFyaWFibGVzKSBkYXRhID0gX29iamVjdFNwcmVhZCQ0KF9vYmplY3RTcHJlYWQkNCh7fSwgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZGVmYXVsdFZhcmlhYmxlcyksIGRhdGEpO1xuICAgICAgICByZXMgPSB0aGlzLmludGVycG9sYXRvci5pbnRlcnBvbGF0ZShyZXMsIGRhdGEsIG9wdGlvbnMubG5nIHx8IHRoaXMubGFuZ3VhZ2UsIG9wdGlvbnMpO1xuICAgICAgICBpZiAoc2tpcE9uVmFyaWFibGVzKSB7XG4gICAgICAgICAgdmFyIG5hID0gcmVzLm1hdGNoKHRoaXMuaW50ZXJwb2xhdG9yLm5lc3RpbmdSZWdleHApO1xuICAgICAgICAgIHZhciBuZXN0QWZ0ID0gbmEgJiYgbmEubGVuZ3RoO1xuICAgICAgICAgIGlmIChuZXN0QmVmIDwgbmVzdEFmdCkgb3B0aW9ucy5uZXN0ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMubmVzdCAhPT0gZmFsc2UpIHJlcyA9IHRoaXMuaW50ZXJwb2xhdG9yLm5lc3QocmVzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobGFzdEtleSAmJiBsYXN0S2V5WzBdID09PSBhcmdzWzBdICYmICFvcHRpb25zLmNvbnRleHQpIHtcbiAgICAgICAgICAgIF90aGlzMy5sb2dnZXIud2FybihcIkl0IHNlZW1zIHlvdSBhcmUgbmVzdGluZyByZWN1cnNpdmVseSBrZXk6IFwiLmNvbmNhdChhcmdzWzBdLCBcIiBpbiBrZXk6IFwiKS5jb25jYXQoa2V5WzBdKSk7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy50cmFuc2xhdGUuYXBwbHkoX3RoaXMzLCBhcmdzLmNvbmNhdChba2V5XSkpO1xuICAgICAgICB9LCBvcHRpb25zKTtcbiAgICAgICAgaWYgKG9wdGlvbnMuaW50ZXJwb2xhdGlvbikgdGhpcy5pbnRlcnBvbGF0b3IucmVzZXQoKTtcbiAgICAgIH1cbiAgICAgIHZhciBwb3N0UHJvY2VzcyA9IG9wdGlvbnMucG9zdFByb2Nlc3MgfHwgdGhpcy5vcHRpb25zLnBvc3RQcm9jZXNzO1xuICAgICAgdmFyIHBvc3RQcm9jZXNzb3JOYW1lcyA9IHR5cGVvZiBwb3N0UHJvY2VzcyA9PT0gJ3N0cmluZycgPyBbcG9zdFByb2Nlc3NdIDogcG9zdFByb2Nlc3M7XG4gICAgICBpZiAocmVzICE9PSB1bmRlZmluZWQgJiYgcmVzICE9PSBudWxsICYmIHBvc3RQcm9jZXNzb3JOYW1lcyAmJiBwb3N0UHJvY2Vzc29yTmFtZXMubGVuZ3RoICYmIG9wdGlvbnMuYXBwbHlQb3N0UHJvY2Vzc29yICE9PSBmYWxzZSkge1xuICAgICAgICByZXMgPSBwb3N0UHJvY2Vzc29yLmhhbmRsZShwb3N0UHJvY2Vzc29yTmFtZXMsIHJlcywga2V5LCB0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLnBvc3RQcm9jZXNzUGFzc1Jlc29sdmVkID8gX29iamVjdFNwcmVhZCQ0KHtcbiAgICAgICAgICBpMThuUmVzb2x2ZWQ6IHJlc29sdmVkXG4gICAgICAgIH0sIG9wdGlvbnMpIDogb3B0aW9ucywgdGhpcyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNvbHZlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc29sdmUoa2V5cykge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gICAgICB2YXIgZm91bmQ7XG4gICAgICB2YXIgdXNlZEtleTtcbiAgICAgIHZhciBleGFjdFVzZWRLZXk7XG4gICAgICB2YXIgdXNlZExuZztcbiAgICAgIHZhciB1c2VkTlM7XG4gICAgICBpZiAodHlwZW9mIGtleXMgPT09ICdzdHJpbmcnKSBrZXlzID0gW2tleXNdO1xuICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgIGlmIChfdGhpczQuaXNWYWxpZExvb2t1cChmb3VuZCkpIHJldHVybjtcbiAgICAgICAgdmFyIGV4dHJhY3RlZCA9IF90aGlzNC5leHRyYWN0RnJvbUtleShrLCBvcHRpb25zKTtcbiAgICAgICAgdmFyIGtleSA9IGV4dHJhY3RlZC5rZXk7XG4gICAgICAgIHVzZWRLZXkgPSBrZXk7XG4gICAgICAgIHZhciBuYW1lc3BhY2VzID0gZXh0cmFjdGVkLm5hbWVzcGFjZXM7XG4gICAgICAgIGlmIChfdGhpczQub3B0aW9ucy5mYWxsYmFja05TKSBuYW1lc3BhY2VzID0gbmFtZXNwYWNlcy5jb25jYXQoX3RoaXM0Lm9wdGlvbnMuZmFsbGJhY2tOUyk7XG4gICAgICAgIHZhciBuZWVkc1BsdXJhbEhhbmRsaW5nID0gb3B0aW9ucy5jb3VudCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmNvdW50ICE9PSAnc3RyaW5nJztcbiAgICAgICAgdmFyIG5lZWRzWmVyb1N1ZmZpeExvb2t1cCA9IG5lZWRzUGx1cmFsSGFuZGxpbmcgJiYgIW9wdGlvbnMub3JkaW5hbCAmJiBvcHRpb25zLmNvdW50ID09PSAwICYmIF90aGlzNC5wbHVyYWxSZXNvbHZlci5zaG91bGRVc2VJbnRsQXBpKCk7XG4gICAgICAgIHZhciBuZWVkc0NvbnRleHRIYW5kbGluZyA9IG9wdGlvbnMuY29udGV4dCAhPT0gdW5kZWZpbmVkICYmICh0eXBlb2Ygb3B0aW9ucy5jb250ZXh0ID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygb3B0aW9ucy5jb250ZXh0ID09PSAnbnVtYmVyJykgJiYgb3B0aW9ucy5jb250ZXh0ICE9PSAnJztcbiAgICAgICAgdmFyIGNvZGVzID0gb3B0aW9ucy5sbmdzID8gb3B0aW9ucy5sbmdzIDogX3RoaXM0Lmxhbmd1YWdlVXRpbHMudG9SZXNvbHZlSGllcmFyY2h5KG9wdGlvbnMubG5nIHx8IF90aGlzNC5sYW5ndWFnZSwgb3B0aW9ucy5mYWxsYmFja0xuZyk7XG4gICAgICAgIG5hbWVzcGFjZXMuZm9yRWFjaChmdW5jdGlvbiAobnMpIHtcbiAgICAgICAgICBpZiAoX3RoaXM0LmlzVmFsaWRMb29rdXAoZm91bmQpKSByZXR1cm47XG4gICAgICAgICAgdXNlZE5TID0gbnM7XG4gICAgICAgICAgaWYgKCFjaGVja2VkTG9hZGVkRm9yW1wiXCIuY29uY2F0KGNvZGVzWzBdLCBcIi1cIikuY29uY2F0KG5zKV0gJiYgX3RoaXM0LnV0aWxzICYmIF90aGlzNC51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UgJiYgIV90aGlzNC51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UodXNlZE5TKSkge1xuICAgICAgICAgICAgY2hlY2tlZExvYWRlZEZvcltcIlwiLmNvbmNhdChjb2Rlc1swXSwgXCItXCIpLmNvbmNhdChucyldID0gdHJ1ZTtcbiAgICAgICAgICAgIF90aGlzNC5sb2dnZXIud2FybihcImtleSBcXFwiXCIuY29uY2F0KHVzZWRLZXksIFwiXFxcIiBmb3IgbGFuZ3VhZ2VzIFxcXCJcIikuY29uY2F0KGNvZGVzLmpvaW4oJywgJyksIFwiXFxcIiB3b24ndCBnZXQgcmVzb2x2ZWQgYXMgbmFtZXNwYWNlIFxcXCJcIikuY29uY2F0KHVzZWROUywgXCJcXFwiIHdhcyBub3QgeWV0IGxvYWRlZFwiKSwgJ1RoaXMgbWVhbnMgc29tZXRoaW5nIElTIFdST05HIGluIHlvdXIgc2V0dXAuIFlvdSBhY2Nlc3MgdGhlIHQgZnVuY3Rpb24gYmVmb3JlIGkxOG5leHQuaW5pdCAvIGkxOG5leHQubG9hZE5hbWVzcGFjZSAvIGkxOG5leHQuY2hhbmdlTGFuZ3VhZ2Ugd2FzIGRvbmUuIFdhaXQgZm9yIHRoZSBjYWxsYmFjayBvciBQcm9taXNlIHRvIHJlc29sdmUgYmVmb3JlIGFjY2Vzc2luZyBpdCEhIScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChjb2RlKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXM0LmlzVmFsaWRMb29rdXAoZm91bmQpKSByZXR1cm47XG4gICAgICAgICAgICB1c2VkTG5nID0gY29kZTtcbiAgICAgICAgICAgIHZhciBmaW5hbEtleXMgPSBba2V5XTtcbiAgICAgICAgICAgIGlmIChfdGhpczQuaTE4bkZvcm1hdCAmJiBfdGhpczQuaTE4bkZvcm1hdC5hZGRMb29rdXBLZXlzKSB7XG4gICAgICAgICAgICAgIF90aGlzNC5pMThuRm9ybWF0LmFkZExvb2t1cEtleXMoZmluYWxLZXlzLCBrZXksIGNvZGUsIG5zLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBwbHVyYWxTdWZmaXg7XG4gICAgICAgICAgICAgIGlmIChuZWVkc1BsdXJhbEhhbmRsaW5nKSBwbHVyYWxTdWZmaXggPSBfdGhpczQucGx1cmFsUmVzb2x2ZXIuZ2V0U3VmZml4KGNvZGUsIG9wdGlvbnMuY291bnQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICB2YXIgemVyb1N1ZmZpeCA9IFwiXCIuY29uY2F0KF90aGlzNC5vcHRpb25zLnBsdXJhbFNlcGFyYXRvciwgXCJ6ZXJvXCIpO1xuICAgICAgICAgICAgICBpZiAobmVlZHNQbHVyYWxIYW5kbGluZykge1xuICAgICAgICAgICAgICAgIGZpbmFsS2V5cy5wdXNoKGtleSArIHBsdXJhbFN1ZmZpeCk7XG4gICAgICAgICAgICAgICAgaWYgKG5lZWRzWmVyb1N1ZmZpeExvb2t1cCkge1xuICAgICAgICAgICAgICAgICAgZmluYWxLZXlzLnB1c2goa2V5ICsgemVyb1N1ZmZpeCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChuZWVkc0NvbnRleHRIYW5kbGluZykge1xuICAgICAgICAgICAgICAgIHZhciBjb250ZXh0S2V5ID0gXCJcIi5jb25jYXQoa2V5KS5jb25jYXQoX3RoaXM0Lm9wdGlvbnMuY29udGV4dFNlcGFyYXRvcikuY29uY2F0KG9wdGlvbnMuY29udGV4dCk7XG4gICAgICAgICAgICAgICAgZmluYWxLZXlzLnB1c2goY29udGV4dEtleSk7XG4gICAgICAgICAgICAgICAgaWYgKG5lZWRzUGx1cmFsSGFuZGxpbmcpIHtcbiAgICAgICAgICAgICAgICAgIGZpbmFsS2V5cy5wdXNoKGNvbnRleHRLZXkgKyBwbHVyYWxTdWZmaXgpO1xuICAgICAgICAgICAgICAgICAgaWYgKG5lZWRzWmVyb1N1ZmZpeExvb2t1cCkge1xuICAgICAgICAgICAgICAgICAgICBmaW5hbEtleXMucHVzaChjb250ZXh0S2V5ICsgemVyb1N1ZmZpeCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcG9zc2libGVLZXk7XG4gICAgICAgICAgICB3aGlsZSAocG9zc2libGVLZXkgPSBmaW5hbEtleXMucG9wKCkpIHtcbiAgICAgICAgICAgICAgaWYgKCFfdGhpczQuaXNWYWxpZExvb2t1cChmb3VuZCkpIHtcbiAgICAgICAgICAgICAgICBleGFjdFVzZWRLZXkgPSBwb3NzaWJsZUtleTtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IF90aGlzNC5nZXRSZXNvdXJjZShjb2RlLCBucywgcG9zc2libGVLZXksIG9wdGlvbnMpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZXM6IGZvdW5kLFxuICAgICAgICB1c2VkS2V5OiB1c2VkS2V5LFxuICAgICAgICBleGFjdFVzZWRLZXk6IGV4YWN0VXNlZEtleSxcbiAgICAgICAgdXNlZExuZzogdXNlZExuZyxcbiAgICAgICAgdXNlZE5TOiB1c2VkTlNcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzVmFsaWRMb29rdXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNWYWxpZExvb2t1cChyZXMpIHtcbiAgICAgIHJldHVybiByZXMgIT09IHVuZGVmaW5lZCAmJiAhKCF0aGlzLm9wdGlvbnMucmV0dXJuTnVsbCAmJiByZXMgPT09IG51bGwpICYmICEoIXRoaXMub3B0aW9ucy5yZXR1cm5FbXB0eVN0cmluZyAmJiByZXMgPT09ICcnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UmVzb3VyY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVzb3VyY2UoY29kZSwgbnMsIGtleSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuICAgICAgaWYgKHRoaXMuaTE4bkZvcm1hdCAmJiB0aGlzLmkxOG5Gb3JtYXQuZ2V0UmVzb3VyY2UpIHJldHVybiB0aGlzLmkxOG5Gb3JtYXQuZ2V0UmVzb3VyY2UoY29kZSwgbnMsIGtleSwgb3B0aW9ucyk7XG4gICAgICByZXR1cm4gdGhpcy5yZXNvdXJjZVN0b3JlLmdldFJlc291cmNlKGNvZGUsIG5zLCBrZXksIG9wdGlvbnMpO1xuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiBcImhhc0RlZmF1bHRWYWx1ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNEZWZhdWx0VmFsdWUob3B0aW9ucykge1xuICAgICAgdmFyIHByZWZpeCA9ICdkZWZhdWx0VmFsdWUnO1xuICAgICAgZm9yICh2YXIgb3B0aW9uIGluIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvcHRpb25zLCBvcHRpb24pICYmIHByZWZpeCA9PT0gb3B0aW9uLnN1YnN0cmluZygwLCBwcmVmaXgubGVuZ3RoKSAmJiB1bmRlZmluZWQgIT09IG9wdGlvbnNbb3B0aW9uXSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBUcmFuc2xhdG9yO1xufShFdmVudEVtaXR0ZXIpO1xuXG5mdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpO1xufVxudmFyIExhbmd1YWdlVXRpbCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTGFuZ3VhZ2VVdGlsKG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGFuZ3VhZ2VVdGlsKTtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMuc3VwcG9ydGVkTG5ncyA9IHRoaXMub3B0aW9ucy5zdXBwb3J0ZWRMbmdzIHx8IGZhbHNlO1xuICAgIHRoaXMubG9nZ2VyID0gYmFzZUxvZ2dlci5jcmVhdGUoJ2xhbmd1YWdlVXRpbHMnKTtcbiAgfVxuICBfY3JlYXRlQ2xhc3MoTGFuZ3VhZ2VVdGlsLCBbe1xuICAgIGtleTogXCJnZXRTY3JpcHRQYXJ0RnJvbUNvZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U2NyaXB0UGFydEZyb21Db2RlKGNvZGUpIHtcbiAgICAgIGlmICghY29kZSB8fCBjb2RlLmluZGV4T2YoJy0nKSA8IDApIHJldHVybiBudWxsO1xuICAgICAgdmFyIHAgPSBjb2RlLnNwbGl0KCctJyk7XG4gICAgICBpZiAocC5sZW5ndGggPT09IDIpIHJldHVybiBudWxsO1xuICAgICAgcC5wb3AoKTtcbiAgICAgIGlmIChwW3AubGVuZ3RoIC0gMV0udG9Mb3dlckNhc2UoKSA9PT0gJ3gnKSByZXR1cm4gbnVsbDtcbiAgICAgIHJldHVybiB0aGlzLmZvcm1hdExhbmd1YWdlQ29kZShwLmpvaW4oJy0nKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldExhbmd1YWdlUGFydEZyb21Db2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldExhbmd1YWdlUGFydEZyb21Db2RlKGNvZGUpIHtcbiAgICAgIGlmICghY29kZSB8fCBjb2RlLmluZGV4T2YoJy0nKSA8IDApIHJldHVybiBjb2RlO1xuICAgICAgdmFyIHAgPSBjb2RlLnNwbGl0KCctJyk7XG4gICAgICByZXR1cm4gdGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUocFswXSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcm1hdExhbmd1YWdlQ29kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRMYW5ndWFnZUNvZGUoY29kZSkge1xuICAgICAgaWYgKHR5cGVvZiBjb2RlID09PSAnc3RyaW5nJyAmJiBjb2RlLmluZGV4T2YoJy0nKSA+IC0xKSB7XG4gICAgICAgIHZhciBzcGVjaWFsQ2FzZXMgPSBbJ2hhbnMnLCAnaGFudCcsICdsYXRuJywgJ2N5cmwnLCAnY2FucycsICdtb25nJywgJ2FyYWInXTtcbiAgICAgICAgdmFyIHAgPSBjb2RlLnNwbGl0KCctJyk7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG93ZXJDYXNlTG5nKSB7XG4gICAgICAgICAgcCA9IHAubWFwKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFydC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHAubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgcFswXSA9IHBbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICBwWzFdID0gcFsxXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgIGlmIChzcGVjaWFsQ2FzZXMuaW5kZXhPZihwWzFdLnRvTG93ZXJDYXNlKCkpID4gLTEpIHBbMV0gPSBjYXBpdGFsaXplKHBbMV0udG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIH0gZWxzZSBpZiAocC5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICBwWzBdID0gcFswXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIGlmIChwWzFdLmxlbmd0aCA9PT0gMikgcFsxXSA9IHBbMV0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgICBpZiAocFswXSAhPT0gJ3NnbicgJiYgcFsyXS5sZW5ndGggPT09IDIpIHBbMl0gPSBwWzJdLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgaWYgKHNwZWNpYWxDYXNlcy5pbmRleE9mKHBbMV0udG9Mb3dlckNhc2UoKSkgPiAtMSkgcFsxXSA9IGNhcGl0YWxpemUocFsxXS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICBpZiAoc3BlY2lhbENhc2VzLmluZGV4T2YocFsyXS50b0xvd2VyQ2FzZSgpKSA+IC0xKSBwWzJdID0gY2FwaXRhbGl6ZShwWzJdLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwLmpvaW4oJy0nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuY2xlYW5Db2RlIHx8IHRoaXMub3B0aW9ucy5sb3dlckNhc2VMbmcgPyBjb2RlLnRvTG93ZXJDYXNlKCkgOiBjb2RlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJpc1N1cHBvcnRlZENvZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaXNTdXBwb3J0ZWRDb2RlKGNvZGUpIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMubG9hZCA9PT0gJ2xhbmd1YWdlT25seScgfHwgdGhpcy5vcHRpb25zLm5vbkV4cGxpY2l0U3VwcG9ydGVkTG5ncykge1xuICAgICAgICBjb2RlID0gdGhpcy5nZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAhdGhpcy5zdXBwb3J0ZWRMbmdzIHx8ICF0aGlzLnN1cHBvcnRlZExuZ3MubGVuZ3RoIHx8IHRoaXMuc3VwcG9ydGVkTG5ncy5pbmRleE9mKGNvZGUpID4gLTE7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEJlc3RNYXRjaEZyb21Db2Rlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCZXN0TWF0Y2hGcm9tQ29kZXMoY29kZXMpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICBpZiAoIWNvZGVzKSByZXR1cm4gbnVsbDtcbiAgICAgIHZhciBmb3VuZDtcbiAgICAgIGNvZGVzLmZvckVhY2goZnVuY3Rpb24gKGNvZGUpIHtcbiAgICAgICAgaWYgKGZvdW5kKSByZXR1cm47XG4gICAgICAgIHZhciBjbGVhbmVkTG5nID0gX3RoaXMuZm9ybWF0TGFuZ3VhZ2VDb2RlKGNvZGUpO1xuICAgICAgICBpZiAoIV90aGlzLm9wdGlvbnMuc3VwcG9ydGVkTG5ncyB8fCBfdGhpcy5pc1N1cHBvcnRlZENvZGUoY2xlYW5lZExuZykpIGZvdW5kID0gY2xlYW5lZExuZztcbiAgICAgIH0pO1xuICAgICAgaWYgKCFmb3VuZCAmJiB0aGlzLm9wdGlvbnMuc3VwcG9ydGVkTG5ncykge1xuICAgICAgICBjb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChjb2RlKSB7XG4gICAgICAgICAgaWYgKGZvdW5kKSByZXR1cm47XG4gICAgICAgICAgdmFyIGxuZ09ubHkgPSBfdGhpcy5nZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKTtcbiAgICAgICAgICBpZiAoX3RoaXMuaXNTdXBwb3J0ZWRDb2RlKGxuZ09ubHkpKSByZXR1cm4gZm91bmQgPSBsbmdPbmx5O1xuICAgICAgICAgIGZvdW5kID0gX3RoaXMub3B0aW9ucy5zdXBwb3J0ZWRMbmdzLmZpbmQoZnVuY3Rpb24gKHN1cHBvcnRlZExuZykge1xuICAgICAgICAgICAgaWYgKHN1cHBvcnRlZExuZy5pbmRleE9mKGxuZ09ubHkpID09PSAwKSByZXR1cm4gc3VwcG9ydGVkTG5nO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmICghZm91bmQpIGZvdW5kID0gdGhpcy5nZXRGYWxsYmFja0NvZGVzKHRoaXMub3B0aW9ucy5mYWxsYmFja0xuZylbMF07XG4gICAgICByZXR1cm4gZm91bmQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEZhbGxiYWNrQ29kZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RmFsbGJhY2tDb2RlcyhmYWxsYmFja3MsIGNvZGUpIHtcbiAgICAgIGlmICghZmFsbGJhY2tzKSByZXR1cm4gW107XG4gICAgICBpZiAodHlwZW9mIGZhbGxiYWNrcyA9PT0gJ2Z1bmN0aW9uJykgZmFsbGJhY2tzID0gZmFsbGJhY2tzKGNvZGUpO1xuICAgICAgaWYgKHR5cGVvZiBmYWxsYmFja3MgPT09ICdzdHJpbmcnKSBmYWxsYmFja3MgPSBbZmFsbGJhY2tzXTtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KGZhbGxiYWNrcykgPT09ICdbb2JqZWN0IEFycmF5XScpIHJldHVybiBmYWxsYmFja3M7XG4gICAgICBpZiAoIWNvZGUpIHJldHVybiBmYWxsYmFja3NbXCJkZWZhdWx0XCJdIHx8IFtdO1xuICAgICAgdmFyIGZvdW5kID0gZmFsbGJhY2tzW2NvZGVdO1xuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSBmYWxsYmFja3NbdGhpcy5nZXRTY3JpcHRQYXJ0RnJvbUNvZGUoY29kZSldO1xuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSBmYWxsYmFja3NbdGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUoY29kZSldO1xuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSBmYWxsYmFja3NbdGhpcy5nZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKV07XG4gICAgICBpZiAoIWZvdW5kKSBmb3VuZCA9IGZhbGxiYWNrc1tcImRlZmF1bHRcIl07XG4gICAgICByZXR1cm4gZm91bmQgfHwgW107XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInRvUmVzb2x2ZUhpZXJhcmNoeVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b1Jlc29sdmVIaWVyYXJjaHkoY29kZSwgZmFsbGJhY2tDb2RlKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcbiAgICAgIHZhciBmYWxsYmFja0NvZGVzID0gdGhpcy5nZXRGYWxsYmFja0NvZGVzKGZhbGxiYWNrQ29kZSB8fCB0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcgfHwgW10sIGNvZGUpO1xuICAgICAgdmFyIGNvZGVzID0gW107XG4gICAgICB2YXIgYWRkQ29kZSA9IGZ1bmN0aW9uIGFkZENvZGUoYykge1xuICAgICAgICBpZiAoIWMpIHJldHVybjtcbiAgICAgICAgaWYgKF90aGlzMi5pc1N1cHBvcnRlZENvZGUoYykpIHtcbiAgICAgICAgICBjb2Rlcy5wdXNoKGMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzMi5sb2dnZXIud2FybihcInJlamVjdGluZyBsYW5ndWFnZSBjb2RlIG5vdCBmb3VuZCBpbiBzdXBwb3J0ZWRMbmdzOiBcIi5jb25jYXQoYykpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgaWYgKHR5cGVvZiBjb2RlID09PSAnc3RyaW5nJyAmJiBjb2RlLmluZGV4T2YoJy0nKSA+IC0xKSB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG9hZCAhPT0gJ2xhbmd1YWdlT25seScpIGFkZENvZGUodGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUoY29kZSkpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmxvYWQgIT09ICdsYW5ndWFnZU9ubHknICYmIHRoaXMub3B0aW9ucy5sb2FkICE9PSAnY3VycmVudE9ubHknKSBhZGRDb2RlKHRoaXMuZ2V0U2NyaXB0UGFydEZyb21Db2RlKGNvZGUpKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5sb2FkICE9PSAnY3VycmVudE9ubHknKSBhZGRDb2RlKHRoaXMuZ2V0TGFuZ3VhZ2VQYXJ0RnJvbUNvZGUoY29kZSkpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgY29kZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgYWRkQ29kZSh0aGlzLmZvcm1hdExhbmd1YWdlQ29kZShjb2RlKSk7XG4gICAgICB9XG4gICAgICBmYWxsYmFja0NvZGVzLmZvckVhY2goZnVuY3Rpb24gKGZjKSB7XG4gICAgICAgIGlmIChjb2Rlcy5pbmRleE9mKGZjKSA8IDApIGFkZENvZGUoX3RoaXMyLmZvcm1hdExhbmd1YWdlQ29kZShmYykpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY29kZXM7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBMYW5ndWFnZVV0aWw7XG59KCk7XG5cbnZhciBzZXRzID0gW3tcbiAgbG5nczogWydhY2gnLCAnYWsnLCAnYW0nLCAnYXJuJywgJ2JyJywgJ2ZpbCcsICdndW4nLCAnbG4nLCAnbWZlJywgJ21nJywgJ21pJywgJ29jJywgJ3B0JywgJ3B0LUJSJywgJ3RnJywgJ3RsJywgJ3RpJywgJ3RyJywgJ3V6JywgJ3dhJ10sXG4gIG5yOiBbMSwgMl0sXG4gIGZjOiAxXG59LCB7XG4gIGxuZ3M6IFsnYWYnLCAnYW4nLCAnYXN0JywgJ2F6JywgJ2JnJywgJ2JuJywgJ2NhJywgJ2RhJywgJ2RlJywgJ2RldicsICdlbCcsICdlbicsICdlbycsICdlcycsICdldCcsICdldScsICdmaScsICdmbycsICdmdXInLCAnZnknLCAnZ2wnLCAnZ3UnLCAnaGEnLCAnaGknLCAnaHUnLCAnaHknLCAnaWEnLCAnaXQnLCAna2snLCAna24nLCAna3UnLCAnbGInLCAnbWFpJywgJ21sJywgJ21uJywgJ21yJywgJ25haCcsICduYXAnLCAnbmInLCAnbmUnLCAnbmwnLCAnbm4nLCAnbm8nLCAnbnNvJywgJ3BhJywgJ3BhcCcsICdwbXMnLCAncHMnLCAncHQtUFQnLCAncm0nLCAnc2NvJywgJ3NlJywgJ3NpJywgJ3NvJywgJ3NvbicsICdzcScsICdzdicsICdzdycsICd0YScsICd0ZScsICd0aycsICd1cicsICd5byddLFxuICBucjogWzEsIDJdLFxuICBmYzogMlxufSwge1xuICBsbmdzOiBbJ2F5JywgJ2JvJywgJ2NnZycsICdmYScsICdodCcsICdpZCcsICdqYScsICdqYm8nLCAna2EnLCAna20nLCAna28nLCAna3knLCAnbG8nLCAnbXMnLCAnc2FoJywgJ3N1JywgJ3RoJywgJ3R0JywgJ3VnJywgJ3ZpJywgJ3dvJywgJ3poJ10sXG4gIG5yOiBbMV0sXG4gIGZjOiAzXG59LCB7XG4gIGxuZ3M6IFsnYmUnLCAnYnMnLCAnY25yJywgJ2R6JywgJ2hyJywgJ3J1JywgJ3NyJywgJ3VrJ10sXG4gIG5yOiBbMSwgMiwgNV0sXG4gIGZjOiA0XG59LCB7XG4gIGxuZ3M6IFsnYXInXSxcbiAgbnI6IFswLCAxLCAyLCAzLCAxMSwgMTAwXSxcbiAgZmM6IDVcbn0sIHtcbiAgbG5nczogWydjcycsICdzayddLFxuICBucjogWzEsIDIsIDVdLFxuICBmYzogNlxufSwge1xuICBsbmdzOiBbJ2NzYicsICdwbCddLFxuICBucjogWzEsIDIsIDVdLFxuICBmYzogN1xufSwge1xuICBsbmdzOiBbJ2N5J10sXG4gIG5yOiBbMSwgMiwgMywgOF0sXG4gIGZjOiA4XG59LCB7XG4gIGxuZ3M6IFsnZnInXSxcbiAgbnI6IFsxLCAyXSxcbiAgZmM6IDlcbn0sIHtcbiAgbG5nczogWydnYSddLFxuICBucjogWzEsIDIsIDMsIDcsIDExXSxcbiAgZmM6IDEwXG59LCB7XG4gIGxuZ3M6IFsnZ2QnXSxcbiAgbnI6IFsxLCAyLCAzLCAyMF0sXG4gIGZjOiAxMVxufSwge1xuICBsbmdzOiBbJ2lzJ10sXG4gIG5yOiBbMSwgMl0sXG4gIGZjOiAxMlxufSwge1xuICBsbmdzOiBbJ2p2J10sXG4gIG5yOiBbMCwgMV0sXG4gIGZjOiAxM1xufSwge1xuICBsbmdzOiBbJ2t3J10sXG4gIG5yOiBbMSwgMiwgMywgNF0sXG4gIGZjOiAxNFxufSwge1xuICBsbmdzOiBbJ2x0J10sXG4gIG5yOiBbMSwgMiwgMTBdLFxuICBmYzogMTVcbn0sIHtcbiAgbG5nczogWydsdiddLFxuICBucjogWzEsIDIsIDBdLFxuICBmYzogMTZcbn0sIHtcbiAgbG5nczogWydtayddLFxuICBucjogWzEsIDJdLFxuICBmYzogMTdcbn0sIHtcbiAgbG5nczogWydtbmsnXSxcbiAgbnI6IFswLCAxLCAyXSxcbiAgZmM6IDE4XG59LCB7XG4gIGxuZ3M6IFsnbXQnXSxcbiAgbnI6IFsxLCAyLCAxMSwgMjBdLFxuICBmYzogMTlcbn0sIHtcbiAgbG5nczogWydvciddLFxuICBucjogWzIsIDFdLFxuICBmYzogMlxufSwge1xuICBsbmdzOiBbJ3JvJ10sXG4gIG5yOiBbMSwgMiwgMjBdLFxuICBmYzogMjBcbn0sIHtcbiAgbG5nczogWydzbCddLFxuICBucjogWzUsIDEsIDIsIDNdLFxuICBmYzogMjFcbn0sIHtcbiAgbG5nczogWydoZScsICdpdyddLFxuICBucjogWzEsIDIsIDIwLCAyMV0sXG4gIGZjOiAyMlxufV07XG52YXIgX3J1bGVzUGx1cmFsc1R5cGVzID0ge1xuICAxOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPiAxKTtcbiAgfSxcbiAgMjogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICE9IDEpO1xuICB9LFxuICAzOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gMDtcbiAgfSxcbiAgNDogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICUgMTAgPT0gMSAmJiBuICUgMTAwICE9IDExID8gMCA6IG4gJSAxMCA+PSAyICYmIG4gJSAxMCA8PSA0ICYmIChuICUgMTAwIDwgMTAgfHwgbiAlIDEwMCA+PSAyMCkgPyAxIDogMik7XG4gIH0sXG4gIDU6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAwID8gMCA6IG4gPT0gMSA/IDEgOiBuID09IDIgPyAyIDogbiAlIDEwMCA+PSAzICYmIG4gJSAxMDAgPD0gMTAgPyAzIDogbiAlIDEwMCA+PSAxMSA/IDQgOiA1KTtcbiAgfSxcbiAgNjogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA+PSAyICYmIG4gPD0gNCA/IDEgOiAyKTtcbiAgfSxcbiAgNzogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiAlIDEwID49IDIgJiYgbiAlIDEwIDw9IDQgJiYgKG4gJSAxMDAgPCAxMCB8fCBuICUgMTAwID49IDIwKSA/IDEgOiAyKTtcbiAgfSxcbiAgODogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA9PSAyID8gMSA6IG4gIT0gOCAmJiBuICE9IDExID8gMiA6IDMpO1xuICB9LFxuICA5OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPj0gMik7XG4gIH0sXG4gIDEwOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSA/IDAgOiBuID09IDIgPyAxIDogbiA8IDcgPyAyIDogbiA8IDExID8gMyA6IDQpO1xuICB9LFxuICAxMTogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgfHwgbiA9PSAxMSA/IDAgOiBuID09IDIgfHwgbiA9PSAxMiA/IDEgOiBuID4gMiAmJiBuIDwgMjAgPyAyIDogMyk7XG4gIH0sXG4gIDEyOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMCAhPSAxIHx8IG4gJSAxMDAgPT0gMTEpO1xuICB9LFxuICAxMzogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICE9PSAwKTtcbiAgfSxcbiAgMTQ6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMiA/IDEgOiBuID09IDMgPyAyIDogMyk7XG4gIH0sXG4gIDE1OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMCA9PSAxICYmIG4gJSAxMDAgIT0gMTEgPyAwIDogbiAlIDEwID49IDIgJiYgKG4gJSAxMDAgPCAxMCB8fCBuICUgMTAwID49IDIwKSA/IDEgOiAyKTtcbiAgfSxcbiAgMTY6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiAlIDEwID09IDEgJiYgbiAlIDEwMCAhPSAxMSA/IDAgOiBuICE9PSAwID8gMSA6IDIpO1xuICB9LFxuICAxNzogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgfHwgbiAlIDEwID09IDEgJiYgbiAlIDEwMCAhPSAxMSA/IDAgOiAxKTtcbiAgfSxcbiAgMTg6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAwID8gMCA6IG4gPT0gMSA/IDEgOiAyKTtcbiAgfSxcbiAgMTk6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMCB8fCBuICUgMTAwID4gMSAmJiBuICUgMTAwIDwgMTEgPyAxIDogbiAlIDEwMCA+IDEwICYmIG4gJSAxMDAgPCAyMCA/IDIgOiAzKTtcbiAgfSxcbiAgMjA6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMCB8fCBuICUgMTAwID4gMCAmJiBuICUgMTAwIDwgMjAgPyAxIDogMik7XG4gIH0sXG4gIDIxOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMDAgPT0gMSA/IDEgOiBuICUgMTAwID09IDIgPyAyIDogbiAlIDEwMCA9PSAzIHx8IG4gJSAxMDAgPT0gNCA/IDMgOiAwKTtcbiAgfSxcbiAgMjI6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMiA/IDEgOiAobiA8IDAgfHwgbiA+IDEwKSAmJiBuICUgMTAgPT0gMCA/IDIgOiAzKTtcbiAgfVxufTtcbnZhciBkZXByZWNhdGVkSnNvblZlcnNpb25zID0gWyd2MScsICd2MicsICd2MyddO1xudmFyIHN1ZmZpeGVzT3JkZXIgPSB7XG4gIHplcm86IDAsXG4gIG9uZTogMSxcbiAgdHdvOiAyLFxuICBmZXc6IDMsXG4gIG1hbnk6IDQsXG4gIG90aGVyOiA1XG59O1xuZnVuY3Rpb24gY3JlYXRlUnVsZXMoKSB7XG4gIHZhciBydWxlcyA9IHt9O1xuICBzZXRzLmZvckVhY2goZnVuY3Rpb24gKHNldCkge1xuICAgIHNldC5sbmdzLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICAgIHJ1bGVzW2xdID0ge1xuICAgICAgICBudW1iZXJzOiBzZXQubnIsXG4gICAgICAgIHBsdXJhbHM6IF9ydWxlc1BsdXJhbHNUeXBlc1tzZXQuZmNdXG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHJ1bGVzO1xufVxudmFyIFBsdXJhbFJlc29sdmVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBQbHVyYWxSZXNvbHZlcihsYW5ndWFnZVV0aWxzKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQbHVyYWxSZXNvbHZlcik7XG4gICAgdGhpcy5sYW5ndWFnZVV0aWxzID0gbGFuZ3VhZ2VVdGlscztcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMubG9nZ2VyID0gYmFzZUxvZ2dlci5jcmVhdGUoJ3BsdXJhbFJlc29sdmVyJyk7XG4gICAgaWYgKCghdGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlKU09OIHx8IHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9PT0gJ3Y0JykgJiYgKHR5cGVvZiBJbnRsID09PSAndW5kZWZpbmVkJyB8fCAhSW50bC5QbHVyYWxSdWxlcykpIHtcbiAgICAgIHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9ICd2Myc7XG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcignWW91ciBlbnZpcm9ubWVudCBzZWVtcyBub3QgdG8gYmUgSW50bCBBUEkgY29tcGF0aWJsZSwgdXNlIGFuIEludGwuUGx1cmFsUnVsZXMgcG9seWZpbGwuIFdpbGwgZmFsbGJhY2sgdG8gdGhlIGNvbXBhdGliaWxpdHlKU09OIHYzIGZvcm1hdCBoYW5kbGluZy4nKTtcbiAgICB9XG4gICAgdGhpcy5ydWxlcyA9IGNyZWF0ZVJ1bGVzKCk7XG4gIH1cbiAgX2NyZWF0ZUNsYXNzKFBsdXJhbFJlc29sdmVyLCBbe1xuICAgIGtleTogXCJhZGRSdWxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFJ1bGUobG5nLCBvYmopIHtcbiAgICAgIHRoaXMucnVsZXNbbG5nXSA9IG9iajtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UnVsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSdWxlKGNvZGUpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICAgIGlmICh0aGlzLnNob3VsZFVzZUludGxBcGkoKSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBuZXcgSW50bC5QbHVyYWxSdWxlcyhjb2RlLCB7XG4gICAgICAgICAgICB0eXBlOiBvcHRpb25zLm9yZGluYWwgPyAnb3JkaW5hbCcgOiAnY2FyZGluYWwnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKF91bnVzZWQpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnJ1bGVzW2NvZGVdIHx8IHRoaXMucnVsZXNbdGhpcy5sYW5ndWFnZVV0aWxzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGNvZGUpXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibmVlZHNQbHVyYWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmVlZHNQbHVyYWwoY29kZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgICAgdmFyIHJ1bGUgPSB0aGlzLmdldFJ1bGUoY29kZSwgb3B0aW9ucyk7XG4gICAgICBpZiAodGhpcy5zaG91bGRVc2VJbnRsQXBpKCkpIHtcbiAgICAgICAgcmV0dXJuIHJ1bGUgJiYgcnVsZS5yZXNvbHZlZE9wdGlvbnMoKS5wbHVyYWxDYXRlZ29yaWVzLmxlbmd0aCA+IDE7XG4gICAgICB9XG4gICAgICByZXR1cm4gcnVsZSAmJiBydWxlLm51bWJlcnMubGVuZ3RoID4gMTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UGx1cmFsRm9ybXNPZktleVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQbHVyYWxGb3Jtc09mS2V5KGNvZGUsIGtleSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0U3VmZml4ZXMoY29kZSwgb3B0aW9ucykubWFwKGZ1bmN0aW9uIChzdWZmaXgpIHtcbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGtleSkuY29uY2F0KHN1ZmZpeCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0U3VmZml4ZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U3VmZml4ZXMoY29kZSkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICAgIHZhciBydWxlID0gdGhpcy5nZXRSdWxlKGNvZGUsIG9wdGlvbnMpO1xuICAgICAgaWYgKCFydWxlKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnNob3VsZFVzZUludGxBcGkoKSkge1xuICAgICAgICByZXR1cm4gcnVsZS5yZXNvbHZlZE9wdGlvbnMoKS5wbHVyYWxDYXRlZ29yaWVzLnNvcnQoZnVuY3Rpb24gKHBsdXJhbENhdGVnb3J5MSwgcGx1cmFsQ2F0ZWdvcnkyKSB7XG4gICAgICAgICAgcmV0dXJuIHN1ZmZpeGVzT3JkZXJbcGx1cmFsQ2F0ZWdvcnkxXSAtIHN1ZmZpeGVzT3JkZXJbcGx1cmFsQ2F0ZWdvcnkyXTtcbiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChwbHVyYWxDYXRlZ29yeSkge1xuICAgICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChfdGhpcy5vcHRpb25zLnByZXBlbmQpLmNvbmNhdChwbHVyYWxDYXRlZ29yeSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJ1bGUubnVtYmVycy5tYXAoZnVuY3Rpb24gKG51bWJlcikge1xuICAgICAgICByZXR1cm4gX3RoaXMuZ2V0U3VmZml4KGNvZGUsIG51bWJlciwgb3B0aW9ucyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0U3VmZml4XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFN1ZmZpeChjb2RlLCBjb3VudCkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuICAgICAgdmFyIHJ1bGUgPSB0aGlzLmdldFJ1bGUoY29kZSwgb3B0aW9ucyk7XG4gICAgICBpZiAocnVsZSkge1xuICAgICAgICBpZiAodGhpcy5zaG91bGRVc2VJbnRsQXBpKCkpIHtcbiAgICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQodGhpcy5vcHRpb25zLnByZXBlbmQpLmNvbmNhdChydWxlLnNlbGVjdChjb3VudCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmdldFN1ZmZpeFJldHJvQ29tcGF0aWJsZShydWxlLCBjb3VudCk7XG4gICAgICB9XG4gICAgICB0aGlzLmxvZ2dlci53YXJuKFwibm8gcGx1cmFsIHJ1bGUgZm91bmQgZm9yOiBcIi5jb25jYXQoY29kZSkpO1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRTdWZmaXhSZXRyb0NvbXBhdGlibGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U3VmZml4UmV0cm9Db21wYXRpYmxlKHJ1bGUsIGNvdW50KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcbiAgICAgIHZhciBpZHggPSBydWxlLm5vQWJzID8gcnVsZS5wbHVyYWxzKGNvdW50KSA6IHJ1bGUucGx1cmFscyhNYXRoLmFicyhjb3VudCkpO1xuICAgICAgdmFyIHN1ZmZpeCA9IHJ1bGUubnVtYmVyc1tpZHhdO1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaW1wbGlmeVBsdXJhbFN1ZmZpeCAmJiBydWxlLm51bWJlcnMubGVuZ3RoID09PSAyICYmIHJ1bGUubnVtYmVyc1swXSA9PT0gMSkge1xuICAgICAgICBpZiAoc3VmZml4ID09PSAyKSB7XG4gICAgICAgICAgc3VmZml4ID0gJ3BsdXJhbCc7XG4gICAgICAgIH0gZWxzZSBpZiAoc3VmZml4ID09PSAxKSB7XG4gICAgICAgICAgc3VmZml4ID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciByZXR1cm5TdWZmaXggPSBmdW5jdGlvbiByZXR1cm5TdWZmaXgoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIub3B0aW9ucy5wcmVwZW5kICYmIHN1ZmZpeC50b1N0cmluZygpID8gX3RoaXMyLm9wdGlvbnMucHJlcGVuZCArIHN1ZmZpeC50b1N0cmluZygpIDogc3VmZml4LnRvU3RyaW5nKCk7XG4gICAgICB9O1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9PT0gJ3YxJykge1xuICAgICAgICBpZiAoc3VmZml4ID09PSAxKSByZXR1cm4gJyc7XG4gICAgICAgIGlmICh0eXBlb2Ygc3VmZml4ID09PSAnbnVtYmVyJykgcmV0dXJuIFwiX3BsdXJhbF9cIi5jb25jYXQoc3VmZml4LnRvU3RyaW5nKCkpO1xuICAgICAgICByZXR1cm4gcmV0dXJuU3VmZml4KCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9PT0gJ3YyJykge1xuICAgICAgICByZXR1cm4gcmV0dXJuU3VmZml4KCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5zaW1wbGlmeVBsdXJhbFN1ZmZpeCAmJiBydWxlLm51bWJlcnMubGVuZ3RoID09PSAyICYmIHJ1bGUubnVtYmVyc1swXSA9PT0gMSkge1xuICAgICAgICByZXR1cm4gcmV0dXJuU3VmZml4KCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLnByZXBlbmQgJiYgaWR4LnRvU3RyaW5nKCkgPyB0aGlzLm9wdGlvbnMucHJlcGVuZCArIGlkeC50b1N0cmluZygpIDogaWR4LnRvU3RyaW5nKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNob3VsZFVzZUludGxBcGlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvdWxkVXNlSW50bEFwaSgpIHtcbiAgICAgIHJldHVybiAhZGVwcmVjYXRlZEpzb25WZXJzaW9ucy5pbmNsdWRlcyh0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUpTT04pO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gUGx1cmFsUmVzb2x2ZXI7XG59KCk7XG5cbmZ1bmN0aW9uIG93bktleXMkMyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQkMyh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyQzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMkMyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG52YXIgSW50ZXJwb2xhdG9yID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBJbnRlcnBvbGF0b3IoKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJbnRlcnBvbGF0b3IpO1xuICAgIHRoaXMubG9nZ2VyID0gYmFzZUxvZ2dlci5jcmVhdGUoJ2ludGVycG9sYXRvcicpO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5mb3JtYXQgPSBvcHRpb25zLmludGVycG9sYXRpb24gJiYgb3B0aW9ucy5pbnRlcnBvbGF0aW9uLmZvcm1hdCB8fCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIHRoaXMuaW5pdChvcHRpb25zKTtcbiAgfVxuICBfY3JlYXRlQ2xhc3MoSW50ZXJwb2xhdG9yLCBbe1xuICAgIGtleTogXCJpbml0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICBpZiAoIW9wdGlvbnMuaW50ZXJwb2xhdGlvbikgb3B0aW9ucy5pbnRlcnBvbGF0aW9uID0ge1xuICAgICAgICBlc2NhcGVWYWx1ZTogdHJ1ZVxuICAgICAgfTtcbiAgICAgIHZhciBpT3B0cyA9IG9wdGlvbnMuaW50ZXJwb2xhdGlvbjtcbiAgICAgIHRoaXMuZXNjYXBlID0gaU9wdHMuZXNjYXBlICE9PSB1bmRlZmluZWQgPyBpT3B0cy5lc2NhcGUgOiBlc2NhcGU7XG4gICAgICB0aGlzLmVzY2FwZVZhbHVlID0gaU9wdHMuZXNjYXBlVmFsdWUgIT09IHVuZGVmaW5lZCA/IGlPcHRzLmVzY2FwZVZhbHVlIDogdHJ1ZTtcbiAgICAgIHRoaXMudXNlUmF3VmFsdWVUb0VzY2FwZSA9IGlPcHRzLnVzZVJhd1ZhbHVlVG9Fc2NhcGUgIT09IHVuZGVmaW5lZCA/IGlPcHRzLnVzZVJhd1ZhbHVlVG9Fc2NhcGUgOiBmYWxzZTtcbiAgICAgIHRoaXMucHJlZml4ID0gaU9wdHMucHJlZml4ID8gcmVnZXhFc2NhcGUoaU9wdHMucHJlZml4KSA6IGlPcHRzLnByZWZpeEVzY2FwZWQgfHwgJ3t7JztcbiAgICAgIHRoaXMuc3VmZml4ID0gaU9wdHMuc3VmZml4ID8gcmVnZXhFc2NhcGUoaU9wdHMuc3VmZml4KSA6IGlPcHRzLnN1ZmZpeEVzY2FwZWQgfHwgJ319JztcbiAgICAgIHRoaXMuZm9ybWF0U2VwYXJhdG9yID0gaU9wdHMuZm9ybWF0U2VwYXJhdG9yID8gaU9wdHMuZm9ybWF0U2VwYXJhdG9yIDogaU9wdHMuZm9ybWF0U2VwYXJhdG9yIHx8ICcsJztcbiAgICAgIHRoaXMudW5lc2NhcGVQcmVmaXggPSBpT3B0cy51bmVzY2FwZVN1ZmZpeCA/ICcnIDogaU9wdHMudW5lc2NhcGVQcmVmaXggfHwgJy0nO1xuICAgICAgdGhpcy51bmVzY2FwZVN1ZmZpeCA9IHRoaXMudW5lc2NhcGVQcmVmaXggPyAnJyA6IGlPcHRzLnVuZXNjYXBlU3VmZml4IHx8ICcnO1xuICAgICAgdGhpcy5uZXN0aW5nUHJlZml4ID0gaU9wdHMubmVzdGluZ1ByZWZpeCA/IHJlZ2V4RXNjYXBlKGlPcHRzLm5lc3RpbmdQcmVmaXgpIDogaU9wdHMubmVzdGluZ1ByZWZpeEVzY2FwZWQgfHwgcmVnZXhFc2NhcGUoJyR0KCcpO1xuICAgICAgdGhpcy5uZXN0aW5nU3VmZml4ID0gaU9wdHMubmVzdGluZ1N1ZmZpeCA/IHJlZ2V4RXNjYXBlKGlPcHRzLm5lc3RpbmdTdWZmaXgpIDogaU9wdHMubmVzdGluZ1N1ZmZpeEVzY2FwZWQgfHwgcmVnZXhFc2NhcGUoJyknKTtcbiAgICAgIHRoaXMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3IgPSBpT3B0cy5uZXN0aW5nT3B0aW9uc1NlcGFyYXRvciA/IGlPcHRzLm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yIDogaU9wdHMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3IgfHwgJywnO1xuICAgICAgdGhpcy5tYXhSZXBsYWNlcyA9IGlPcHRzLm1heFJlcGxhY2VzID8gaU9wdHMubWF4UmVwbGFjZXMgOiAxMDAwO1xuICAgICAgdGhpcy5hbHdheXNGb3JtYXQgPSBpT3B0cy5hbHdheXNGb3JtYXQgIT09IHVuZGVmaW5lZCA/IGlPcHRzLmFsd2F5c0Zvcm1hdCA6IGZhbHNlO1xuICAgICAgdGhpcy5yZXNldFJlZ0V4cCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHRoaXMuaW5pdCh0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldFJlZ0V4cFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldFJlZ0V4cCgpIHtcbiAgICAgIHZhciByZWdleHBTdHIgPSBcIlwiLmNvbmNhdCh0aGlzLnByZWZpeCwgXCIoLis/KVwiKS5jb25jYXQodGhpcy5zdWZmaXgpO1xuICAgICAgdGhpcy5yZWdleHAgPSBuZXcgUmVnRXhwKHJlZ2V4cFN0ciwgJ2cnKTtcbiAgICAgIHZhciByZWdleHBVbmVzY2FwZVN0ciA9IFwiXCIuY29uY2F0KHRoaXMucHJlZml4KS5jb25jYXQodGhpcy51bmVzY2FwZVByZWZpeCwgXCIoLis/KVwiKS5jb25jYXQodGhpcy51bmVzY2FwZVN1ZmZpeCkuY29uY2F0KHRoaXMuc3VmZml4KTtcbiAgICAgIHRoaXMucmVnZXhwVW5lc2NhcGUgPSBuZXcgUmVnRXhwKHJlZ2V4cFVuZXNjYXBlU3RyLCAnZycpO1xuICAgICAgdmFyIG5lc3RpbmdSZWdleHBTdHIgPSBcIlwiLmNvbmNhdCh0aGlzLm5lc3RpbmdQcmVmaXgsIFwiKC4rPylcIikuY29uY2F0KHRoaXMubmVzdGluZ1N1ZmZpeCk7XG4gICAgICB0aGlzLm5lc3RpbmdSZWdleHAgPSBuZXcgUmVnRXhwKG5lc3RpbmdSZWdleHBTdHIsICdnJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImludGVycG9sYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGludGVycG9sYXRlKHN0ciwgZGF0YSwgbG5nLCBvcHRpb25zKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgdmFyIG1hdGNoO1xuICAgICAgdmFyIHZhbHVlO1xuICAgICAgdmFyIHJlcGxhY2VzO1xuICAgICAgdmFyIGRlZmF1bHREYXRhID0gdGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uICYmIHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLmRlZmF1bHRWYXJpYWJsZXMgfHwge307XG4gICAgICBmdW5jdGlvbiByZWdleFNhZmUodmFsKSB7XG4gICAgICAgIHJldHVybiB2YWwucmVwbGFjZSgvXFwkL2csICckJCQkJyk7XG4gICAgICB9XG4gICAgICB2YXIgaGFuZGxlRm9ybWF0ID0gZnVuY3Rpb24gaGFuZGxlRm9ybWF0KGtleSkge1xuICAgICAgICBpZiAoa2V5LmluZGV4T2YoX3RoaXMuZm9ybWF0U2VwYXJhdG9yKSA8IDApIHtcbiAgICAgICAgICB2YXIgcGF0aCA9IGdldFBhdGhXaXRoRGVmYXVsdHMoZGF0YSwgZGVmYXVsdERhdGEsIGtleSk7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmFsd2F5c0Zvcm1hdCA/IF90aGlzLmZvcm1hdChwYXRoLCB1bmRlZmluZWQsIGxuZywgX29iamVjdFNwcmVhZCQzKF9vYmplY3RTcHJlYWQkMyhfb2JqZWN0U3ByZWFkJDMoe30sIG9wdGlvbnMpLCBkYXRhKSwge30sIHtcbiAgICAgICAgICAgIGludGVycG9sYXRpb25rZXk6IGtleVxuICAgICAgICAgIH0pKSA6IHBhdGg7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHAgPSBrZXkuc3BsaXQoX3RoaXMuZm9ybWF0U2VwYXJhdG9yKTtcbiAgICAgICAgdmFyIGsgPSBwLnNoaWZ0KCkudHJpbSgpO1xuICAgICAgICB2YXIgZiA9IHAuam9pbihfdGhpcy5mb3JtYXRTZXBhcmF0b3IpLnRyaW0oKTtcbiAgICAgICAgcmV0dXJuIF90aGlzLmZvcm1hdChnZXRQYXRoV2l0aERlZmF1bHRzKGRhdGEsIGRlZmF1bHREYXRhLCBrKSwgZiwgbG5nLCBfb2JqZWN0U3ByZWFkJDMoX29iamVjdFNwcmVhZCQzKF9vYmplY3RTcHJlYWQkMyh7fSwgb3B0aW9ucyksIGRhdGEpLCB7fSwge1xuICAgICAgICAgIGludGVycG9sYXRpb25rZXk6IGtcbiAgICAgICAgfSkpO1xuICAgICAgfTtcbiAgICAgIHRoaXMucmVzZXRSZWdFeHAoKTtcbiAgICAgIHZhciBtaXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXIgPSBvcHRpb25zICYmIG9wdGlvbnMubWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyIHx8IHRoaXMub3B0aW9ucy5taXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXI7XG4gICAgICB2YXIgc2tpcE9uVmFyaWFibGVzID0gb3B0aW9ucyAmJiBvcHRpb25zLmludGVycG9sYXRpb24gJiYgb3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyA6IHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcztcbiAgICAgIHZhciB0b2RvcyA9IFt7XG4gICAgICAgIHJlZ2V4OiB0aGlzLnJlZ2V4cFVuZXNjYXBlLFxuICAgICAgICBzYWZlVmFsdWU6IGZ1bmN0aW9uIHNhZmVWYWx1ZSh2YWwpIHtcbiAgICAgICAgICByZXR1cm4gcmVnZXhTYWZlKHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIHtcbiAgICAgICAgcmVnZXg6IHRoaXMucmVnZXhwLFxuICAgICAgICBzYWZlVmFsdWU6IGZ1bmN0aW9uIHNhZmVWYWx1ZSh2YWwpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuZXNjYXBlVmFsdWUgPyByZWdleFNhZmUoX3RoaXMuZXNjYXBlKHZhbCkpIDogcmVnZXhTYWZlKHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH1dO1xuICAgICAgdG9kb3MuZm9yRWFjaChmdW5jdGlvbiAodG9kbykge1xuICAgICAgICByZXBsYWNlcyA9IDA7XG4gICAgICAgIHdoaWxlIChtYXRjaCA9IHRvZG8ucmVnZXguZXhlYyhzdHIpKSB7XG4gICAgICAgICAgdmFyIG1hdGNoZWRWYXIgPSBtYXRjaFsxXS50cmltKCk7XG4gICAgICAgICAgdmFsdWUgPSBoYW5kbGVGb3JtYXQobWF0Y2hlZFZhcik7XG4gICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgIHZhciB0ZW1wID0gbWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyKHN0ciwgbWF0Y2gsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICB2YWx1ZSA9IHR5cGVvZiB0ZW1wID09PSAnc3RyaW5nJyA/IHRlbXAgOiAnJztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmhhc093blByb3BlcnR5KG1hdGNoZWRWYXIpKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gJyc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNraXBPblZhcmlhYmxlcykge1xuICAgICAgICAgICAgICB2YWx1ZSA9IG1hdGNoWzBdO1xuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF90aGlzLmxvZ2dlci53YXJuKFwibWlzc2VkIHRvIHBhc3MgaW4gdmFyaWFibGUgXCIuY29uY2F0KG1hdGNoZWRWYXIsIFwiIGZvciBpbnRlcnBvbGF0aW5nIFwiKS5jb25jYXQoc3RyKSk7XG4gICAgICAgICAgICAgIHZhbHVlID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICYmICFfdGhpcy51c2VSYXdWYWx1ZVRvRXNjYXBlKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IG1ha2VTdHJpbmcodmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgc2FmZVZhbHVlID0gdG9kby5zYWZlVmFsdWUodmFsdWUpO1xuICAgICAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKG1hdGNoWzBdLCBzYWZlVmFsdWUpO1xuICAgICAgICAgIGlmIChza2lwT25WYXJpYWJsZXMpIHtcbiAgICAgICAgICAgIHRvZG8ucmVnZXgubGFzdEluZGV4ICs9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgIHRvZG8ucmVnZXgubGFzdEluZGV4IC09IG1hdGNoWzBdLmxlbmd0aDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdG9kby5yZWdleC5sYXN0SW5kZXggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXBsYWNlcysrO1xuICAgICAgICAgIGlmIChyZXBsYWNlcyA+PSBfdGhpcy5tYXhSZXBsYWNlcykge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm5lc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmVzdChzdHIsIGZjKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTtcbiAgICAgIHZhciBtYXRjaDtcbiAgICAgIHZhciB2YWx1ZTtcbiAgICAgIHZhciBjbG9uZWRPcHRpb25zO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlSGFzT3B0aW9ucyhrZXksIGluaGVyaXRlZE9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHNlcCA9IHRoaXMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3I7XG4gICAgICAgIGlmIChrZXkuaW5kZXhPZihzZXApIDwgMCkgcmV0dXJuIGtleTtcbiAgICAgICAgdmFyIGMgPSBrZXkuc3BsaXQobmV3IFJlZ0V4cChcIlwiLmNvbmNhdChzZXAsIFwiWyBdKntcIikpKTtcbiAgICAgICAgdmFyIG9wdGlvbnNTdHJpbmcgPSBcIntcIi5jb25jYXQoY1sxXSk7XG4gICAgICAgIGtleSA9IGNbMF07XG4gICAgICAgIG9wdGlvbnNTdHJpbmcgPSB0aGlzLmludGVycG9sYXRlKG9wdGlvbnNTdHJpbmcsIGNsb25lZE9wdGlvbnMpO1xuICAgICAgICB2YXIgbWF0Y2hlZFNpbmdsZVF1b3RlcyA9IG9wdGlvbnNTdHJpbmcubWF0Y2goLycvZyk7XG4gICAgICAgIHZhciBtYXRjaGVkRG91YmxlUXVvdGVzID0gb3B0aW9uc1N0cmluZy5tYXRjaCgvXCIvZyk7XG4gICAgICAgIGlmIChtYXRjaGVkU2luZ2xlUXVvdGVzICYmIG1hdGNoZWRTaW5nbGVRdW90ZXMubGVuZ3RoICUgMiA9PT0gMCAmJiAhbWF0Y2hlZERvdWJsZVF1b3RlcyB8fCBtYXRjaGVkRG91YmxlUXVvdGVzLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgICAgICBvcHRpb25zU3RyaW5nID0gb3B0aW9uc1N0cmluZy5yZXBsYWNlKC8nL2csICdcIicpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY2xvbmVkT3B0aW9ucyA9IEpTT04ucGFyc2Uob3B0aW9uc1N0cmluZyk7XG4gICAgICAgICAgaWYgKGluaGVyaXRlZE9wdGlvbnMpIGNsb25lZE9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkJDMoX29iamVjdFNwcmVhZCQzKHt9LCBpbmhlcml0ZWRPcHRpb25zKSwgY2xvbmVkT3B0aW9ucyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuKFwiZmFpbGVkIHBhcnNpbmcgb3B0aW9ucyBzdHJpbmcgaW4gbmVzdGluZyBmb3Iga2V5IFwiLmNvbmNhdChrZXkpLCBlKTtcbiAgICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQoa2V5KS5jb25jYXQoc2VwKS5jb25jYXQob3B0aW9uc1N0cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIGNsb25lZE9wdGlvbnMuZGVmYXVsdFZhbHVlO1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgICAgfVxuICAgICAgd2hpbGUgKG1hdGNoID0gdGhpcy5uZXN0aW5nUmVnZXhwLmV4ZWMoc3RyKSkge1xuICAgICAgICB2YXIgZm9ybWF0dGVycyA9IFtdO1xuICAgICAgICBjbG9uZWRPcHRpb25zID0gX29iamVjdFNwcmVhZCQzKHt9LCBvcHRpb25zKTtcbiAgICAgICAgY2xvbmVkT3B0aW9ucy5hcHBseVBvc3RQcm9jZXNzb3IgPSBmYWxzZTtcbiAgICAgICAgZGVsZXRlIGNsb25lZE9wdGlvbnMuZGVmYXVsdFZhbHVlO1xuICAgICAgICB2YXIgZG9SZWR1Y2UgPSBmYWxzZTtcbiAgICAgICAgaWYgKG1hdGNoWzBdLmluZGV4T2YodGhpcy5mb3JtYXRTZXBhcmF0b3IpICE9PSAtMSAmJiAhL3suKn0vLnRlc3QobWF0Y2hbMV0pKSB7XG4gICAgICAgICAgdmFyIHIgPSBtYXRjaFsxXS5zcGxpdCh0aGlzLmZvcm1hdFNlcGFyYXRvcikubWFwKGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS50cmltKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgbWF0Y2hbMV0gPSByLnNoaWZ0KCk7XG4gICAgICAgICAgZm9ybWF0dGVycyA9IHI7XG4gICAgICAgICAgZG9SZWR1Y2UgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHZhbHVlID0gZmMoaGFuZGxlSGFzT3B0aW9ucy5jYWxsKHRoaXMsIG1hdGNoWzFdLnRyaW0oKSwgY2xvbmVkT3B0aW9ucyksIGNsb25lZE9wdGlvbnMpO1xuICAgICAgICBpZiAodmFsdWUgJiYgbWF0Y2hbMF0gPT09IHN0ciAmJiB0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSByZXR1cm4gdmFsdWU7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB2YWx1ZSA9IG1ha2VTdHJpbmcodmFsdWUpO1xuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIud2FybihcIm1pc3NlZCB0byByZXNvbHZlIFwiLmNvbmNhdChtYXRjaFsxXSwgXCIgZm9yIG5lc3RpbmcgXCIpLmNvbmNhdChzdHIpKTtcbiAgICAgICAgICB2YWx1ZSA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkb1JlZHVjZSkge1xuICAgICAgICAgIHZhbHVlID0gZm9ybWF0dGVycy5yZWR1Y2UoZnVuY3Rpb24gKHYsIGYpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIuZm9ybWF0KHYsIGYsIG9wdGlvbnMubG5nLCBfb2JqZWN0U3ByZWFkJDMoX29iamVjdFNwcmVhZCQzKHt9LCBvcHRpb25zKSwge30sIHtcbiAgICAgICAgICAgICAgaW50ZXJwb2xhdGlvbmtleTogbWF0Y2hbMV0udHJpbSgpXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgfSwgdmFsdWUudHJpbSgpKTtcbiAgICAgICAgfVxuICAgICAgICBzdHIgPSBzdHIucmVwbGFjZShtYXRjaFswXSwgdmFsdWUpO1xuICAgICAgICB0aGlzLnJlZ2V4cC5sYXN0SW5kZXggPSAwO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIEludGVycG9sYXRvcjtcbn0oKTtcblxuZnVuY3Rpb24gb3duS2V5cyQyKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCQyKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzJDIoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyQyKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH1cbmZ1bmN0aW9uIHBhcnNlRm9ybWF0U3RyKGZvcm1hdFN0cikge1xuICB2YXIgZm9ybWF0TmFtZSA9IGZvcm1hdFN0ci50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbiAgdmFyIGZvcm1hdE9wdGlvbnMgPSB7fTtcbiAgaWYgKGZvcm1hdFN0ci5pbmRleE9mKCcoJykgPiAtMSkge1xuICAgIHZhciBwID0gZm9ybWF0U3RyLnNwbGl0KCcoJyk7XG4gICAgZm9ybWF0TmFtZSA9IHBbMF0udG9Mb3dlckNhc2UoKS50cmltKCk7XG4gICAgdmFyIG9wdFN0ciA9IHBbMV0uc3Vic3RyaW5nKDAsIHBbMV0ubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGZvcm1hdE5hbWUgPT09ICdjdXJyZW5jeScgJiYgb3B0U3RyLmluZGV4T2YoJzonKSA8IDApIHtcbiAgICAgIGlmICghZm9ybWF0T3B0aW9ucy5jdXJyZW5jeSkgZm9ybWF0T3B0aW9ucy5jdXJyZW5jeSA9IG9wdFN0ci50cmltKCk7XG4gICAgfSBlbHNlIGlmIChmb3JtYXROYW1lID09PSAncmVsYXRpdmV0aW1lJyAmJiBvcHRTdHIuaW5kZXhPZignOicpIDwgMCkge1xuICAgICAgaWYgKCFmb3JtYXRPcHRpb25zLnJhbmdlKSBmb3JtYXRPcHRpb25zLnJhbmdlID0gb3B0U3RyLnRyaW0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG9wdHMgPSBvcHRTdHIuc3BsaXQoJzsnKTtcbiAgICAgIG9wdHMuZm9yRWFjaChmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgIGlmICghb3B0KSByZXR1cm47XG4gICAgICAgIHZhciBfb3B0JHNwbGl0ID0gb3B0LnNwbGl0KCc6JyksXG4gICAgICAgICAgX29wdCRzcGxpdDIgPSBfdG9BcnJheShfb3B0JHNwbGl0KSxcbiAgICAgICAgICBrZXkgPSBfb3B0JHNwbGl0MlswXSxcbiAgICAgICAgICByZXN0ID0gX29wdCRzcGxpdDIuc2xpY2UoMSk7XG4gICAgICAgIHZhciB2YWwgPSByZXN0LmpvaW4oJzonKS50cmltKCkucmVwbGFjZSgvXicrfCcrJC9nLCAnJyk7XG4gICAgICAgIGlmICghZm9ybWF0T3B0aW9uc1trZXkudHJpbSgpXSkgZm9ybWF0T3B0aW9uc1trZXkudHJpbSgpXSA9IHZhbDtcbiAgICAgICAgaWYgKHZhbCA9PT0gJ2ZhbHNlJykgZm9ybWF0T3B0aW9uc1trZXkudHJpbSgpXSA9IGZhbHNlO1xuICAgICAgICBpZiAodmFsID09PSAndHJ1ZScpIGZvcm1hdE9wdGlvbnNba2V5LnRyaW0oKV0gPSB0cnVlO1xuICAgICAgICBpZiAoIWlzTmFOKHZhbCkpIGZvcm1hdE9wdGlvbnNba2V5LnRyaW0oKV0gPSBwYXJzZUludCh2YWwsIDEwKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIGZvcm1hdE5hbWU6IGZvcm1hdE5hbWUsXG4gICAgZm9ybWF0T3B0aW9uczogZm9ybWF0T3B0aW9uc1xuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQ2FjaGVkRm9ybWF0dGVyKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gaW52b2tlRm9ybWF0dGVyKHZhbCwgbG5nLCBvcHRpb25zKSB7XG4gICAgdmFyIGtleSA9IGxuZyArIEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpO1xuICAgIHZhciBmb3JtYXR0ZXIgPSBjYWNoZVtrZXldO1xuICAgIGlmICghZm9ybWF0dGVyKSB7XG4gICAgICBmb3JtYXR0ZXIgPSBmbihsbmcsIG9wdGlvbnMpO1xuICAgICAgY2FjaGVba2V5XSA9IGZvcm1hdHRlcjtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlcih2YWwpO1xuICB9O1xufVxudmFyIEZvcm1hdHRlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRm9ybWF0dGVyKCkge1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRm9ybWF0dGVyKTtcbiAgICB0aGlzLmxvZ2dlciA9IGJhc2VMb2dnZXIuY3JlYXRlKCdmb3JtYXR0ZXInKTtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMuZm9ybWF0cyA9IHtcbiAgICAgIG51bWJlcjogY3JlYXRlQ2FjaGVkRm9ybWF0dGVyKGZ1bmN0aW9uIChsbmcsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGZvcm1hdHRlciA9IG5ldyBJbnRsLk51bWJlckZvcm1hdChsbmcsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0KHZhbCk7XG4gICAgICAgIH07XG4gICAgICB9KSxcbiAgICAgIGN1cnJlbmN5OiBjcmVhdGVDYWNoZWRGb3JtYXR0ZXIoZnVuY3Rpb24gKGxuZywgb3B0aW9ucykge1xuICAgICAgICB2YXIgZm9ybWF0dGVyID0gbmV3IEludGwuTnVtYmVyRm9ybWF0KGxuZywgX29iamVjdFNwcmVhZCQyKF9vYmplY3RTcHJlYWQkMih7fSwgb3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgc3R5bGU6ICdjdXJyZW5jeSdcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0KHZhbCk7XG4gICAgICAgIH07XG4gICAgICB9KSxcbiAgICAgIGRhdGV0aW1lOiBjcmVhdGVDYWNoZWRGb3JtYXR0ZXIoZnVuY3Rpb24gKGxuZywgb3B0aW9ucykge1xuICAgICAgICB2YXIgZm9ybWF0dGVyID0gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQobG5nLCBfb2JqZWN0U3ByZWFkJDIoe30sIG9wdGlvbnMpKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdCh2YWwpO1xuICAgICAgICB9O1xuICAgICAgfSksXG4gICAgICByZWxhdGl2ZXRpbWU6IGNyZWF0ZUNhY2hlZEZvcm1hdHRlcihmdW5jdGlvbiAobG5nLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBmb3JtYXR0ZXIgPSBuZXcgSW50bC5SZWxhdGl2ZVRpbWVGb3JtYXQobG5nLCBfb2JqZWN0U3ByZWFkJDIoe30sIG9wdGlvbnMpKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdCh2YWwsIG9wdGlvbnMucmFuZ2UgfHwgJ2RheScpO1xuICAgICAgICB9O1xuICAgICAgfSksXG4gICAgICBsaXN0OiBjcmVhdGVDYWNoZWRGb3JtYXR0ZXIoZnVuY3Rpb24gKGxuZywgb3B0aW9ucykge1xuICAgICAgICB2YXIgZm9ybWF0dGVyID0gbmV3IEludGwuTGlzdEZvcm1hdChsbmcsIF9vYmplY3RTcHJlYWQkMih7fSwgb3B0aW9ucykpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0KHZhbCk7XG4gICAgICAgIH07XG4gICAgICB9KVxuICAgIH07XG4gICAgdGhpcy5pbml0KG9wdGlvbnMpO1xuICB9XG4gIF9jcmVhdGVDbGFzcyhGb3JtYXR0ZXIsIFt7XG4gICAga2V5OiBcImluaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdChzZXJ2aWNlcykge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge31cbiAgICAgIH07XG4gICAgICB2YXIgaU9wdHMgPSBvcHRpb25zLmludGVycG9sYXRpb247XG4gICAgICB0aGlzLmZvcm1hdFNlcGFyYXRvciA9IGlPcHRzLmZvcm1hdFNlcGFyYXRvciA/IGlPcHRzLmZvcm1hdFNlcGFyYXRvciA6IGlPcHRzLmZvcm1hdFNlcGFyYXRvciB8fCAnLCc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImFkZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGQobmFtZSwgZmMpIHtcbiAgICAgIHRoaXMuZm9ybWF0c1tuYW1lLnRvTG93ZXJDYXNlKCkudHJpbSgpXSA9IGZjO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRDYWNoZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkQ2FjaGVkKG5hbWUsIGZjKSB7XG4gICAgICB0aGlzLmZvcm1hdHNbbmFtZS50b0xvd2VyQ2FzZSgpLnRyaW0oKV0gPSBjcmVhdGVDYWNoZWRGb3JtYXR0ZXIoZmMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0KHZhbHVlLCBfZm9ybWF0LCBsbmcsIG9wdGlvbnMpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICB2YXIgZm9ybWF0cyA9IF9mb3JtYXQuc3BsaXQodGhpcy5mb3JtYXRTZXBhcmF0b3IpO1xuICAgICAgdmFyIHJlc3VsdCA9IGZvcm1hdHMucmVkdWNlKGZ1bmN0aW9uIChtZW0sIGYpIHtcbiAgICAgICAgdmFyIF9wYXJzZUZvcm1hdFN0ciA9IHBhcnNlRm9ybWF0U3RyKGYpLFxuICAgICAgICAgIGZvcm1hdE5hbWUgPSBfcGFyc2VGb3JtYXRTdHIuZm9ybWF0TmFtZSxcbiAgICAgICAgICBmb3JtYXRPcHRpb25zID0gX3BhcnNlRm9ybWF0U3RyLmZvcm1hdE9wdGlvbnM7XG4gICAgICAgIGlmIChfdGhpcy5mb3JtYXRzW2Zvcm1hdE5hbWVdKSB7XG4gICAgICAgICAgdmFyIGZvcm1hdHRlZCA9IG1lbTtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIHZhbE9wdGlvbnMgPSBvcHRpb25zICYmIG9wdGlvbnMuZm9ybWF0UGFyYW1zICYmIG9wdGlvbnMuZm9ybWF0UGFyYW1zW29wdGlvbnMuaW50ZXJwb2xhdGlvbmtleV0gfHwge307XG4gICAgICAgICAgICB2YXIgbCA9IHZhbE9wdGlvbnMubG9jYWxlIHx8IHZhbE9wdGlvbnMubG5nIHx8IG9wdGlvbnMubG9jYWxlIHx8IG9wdGlvbnMubG5nIHx8IGxuZztcbiAgICAgICAgICAgIGZvcm1hdHRlZCA9IF90aGlzLmZvcm1hdHNbZm9ybWF0TmFtZV0obWVtLCBsLCBfb2JqZWN0U3ByZWFkJDIoX29iamVjdFNwcmVhZCQyKF9vYmplY3RTcHJlYWQkMih7fSwgZm9ybWF0T3B0aW9ucyksIG9wdGlvbnMpLCB2YWxPcHRpb25zKSk7XG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIF90aGlzLmxvZ2dlci53YXJuKGVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZvcm1hdHRlZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5sb2dnZXIud2FybihcInRoZXJlIHdhcyBubyBmb3JtYXQgZnVuY3Rpb24gZm9yIFwiLmNvbmNhdChmb3JtYXROYW1lKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lbTtcbiAgICAgIH0sIHZhbHVlKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBGb3JtYXR0ZXI7XG59KCk7XG5cbmZ1bmN0aW9uIG93bktleXMkMShvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQkMSh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyQxKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMkMShPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIkMShEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCQxKCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QkMSgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5mdW5jdGlvbiByZW1vdmVQZW5kaW5nKHEsIG5hbWUpIHtcbiAgaWYgKHEucGVuZGluZ1tuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZGVsZXRlIHEucGVuZGluZ1tuYW1lXTtcbiAgICBxLnBlbmRpbmdDb3VudC0tO1xuICB9XG59XG52YXIgQ29ubmVjdG9yID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKENvbm5lY3RvciwgX0V2ZW50RW1pdHRlcik7XG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIkMShDb25uZWN0b3IpO1xuICBmdW5jdGlvbiBDb25uZWN0b3IoYmFja2VuZCwgc3RvcmUsIHNlcnZpY2VzKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7fTtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29ubmVjdG9yKTtcbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpO1xuICAgIGlmIChpc0lFMTApIHtcbiAgICAgIEV2ZW50RW1pdHRlci5jYWxsKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICB9XG4gICAgX3RoaXMuYmFja2VuZCA9IGJhY2tlbmQ7XG4gICAgX3RoaXMuc3RvcmUgPSBzdG9yZTtcbiAgICBfdGhpcy5zZXJ2aWNlcyA9IHNlcnZpY2VzO1xuICAgIF90aGlzLmxhbmd1YWdlVXRpbHMgPSBzZXJ2aWNlcy5sYW5ndWFnZVV0aWxzO1xuICAgIF90aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIF90aGlzLmxvZ2dlciA9IGJhc2VMb2dnZXIuY3JlYXRlKCdiYWNrZW5kQ29ubmVjdG9yJyk7XG4gICAgX3RoaXMud2FpdGluZ1JlYWRzID0gW107XG4gICAgX3RoaXMubWF4UGFyYWxsZWxSZWFkcyA9IG9wdGlvbnMubWF4UGFyYWxsZWxSZWFkcyB8fCAxMDtcbiAgICBfdGhpcy5yZWFkaW5nQ2FsbHMgPSAwO1xuICAgIF90aGlzLm1heFJldHJpZXMgPSBvcHRpb25zLm1heFJldHJpZXMgPj0gMCA/IG9wdGlvbnMubWF4UmV0cmllcyA6IDU7XG4gICAgX3RoaXMucmV0cnlUaW1lb3V0ID0gb3B0aW9ucy5yZXRyeVRpbWVvdXQgPj0gMSA/IG9wdGlvbnMucmV0cnlUaW1lb3V0IDogMzUwO1xuICAgIF90aGlzLnN0YXRlID0ge307XG4gICAgX3RoaXMucXVldWUgPSBbXTtcbiAgICBpZiAoX3RoaXMuYmFja2VuZCAmJiBfdGhpcy5iYWNrZW5kLmluaXQpIHtcbiAgICAgIF90aGlzLmJhY2tlbmQuaW5pdChzZXJ2aWNlcywgb3B0aW9ucy5iYWNrZW5kLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9jcmVhdGVDbGFzcyhDb25uZWN0b3IsIFt7XG4gICAga2V5OiBcInF1ZXVlTG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBxdWV1ZUxvYWQobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG4gICAgICB2YXIgdG9Mb2FkID0ge307XG4gICAgICB2YXIgcGVuZGluZyA9IHt9O1xuICAgICAgdmFyIHRvTG9hZExhbmd1YWdlcyA9IHt9O1xuICAgICAgdmFyIHRvTG9hZE5hbWVzcGFjZXMgPSB7fTtcbiAgICAgIGxhbmd1YWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChsbmcpIHtcbiAgICAgICAgdmFyIGhhc0FsbE5hbWVzcGFjZXMgPSB0cnVlO1xuICAgICAgICBuYW1lc3BhY2VzLmZvckVhY2goZnVuY3Rpb24gKG5zKSB7XG4gICAgICAgICAgdmFyIG5hbWUgPSBcIlwiLmNvbmNhdChsbmcsIFwifFwiKS5jb25jYXQobnMpO1xuICAgICAgICAgIGlmICghb3B0aW9ucy5yZWxvYWQgJiYgX3RoaXMyLnN0b3JlLmhhc1Jlc291cmNlQnVuZGxlKGxuZywgbnMpKSB7XG4gICAgICAgICAgICBfdGhpczIuc3RhdGVbbmFtZV0gPSAyO1xuICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMyLnN0YXRlW25hbWVdIDwgMCkgOyBlbHNlIGlmIChfdGhpczIuc3RhdGVbbmFtZV0gPT09IDEpIHtcbiAgICAgICAgICAgIGlmIChwZW5kaW5nW25hbWVdID09PSB1bmRlZmluZWQpIHBlbmRpbmdbbmFtZV0gPSB0cnVlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpczIuc3RhdGVbbmFtZV0gPSAxO1xuICAgICAgICAgICAgaGFzQWxsTmFtZXNwYWNlcyA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHBlbmRpbmdbbmFtZV0gPT09IHVuZGVmaW5lZCkgcGVuZGluZ1tuYW1lXSA9IHRydWU7XG4gICAgICAgICAgICBpZiAodG9Mb2FkW25hbWVdID09PSB1bmRlZmluZWQpIHRvTG9hZFtuYW1lXSA9IHRydWU7XG4gICAgICAgICAgICBpZiAodG9Mb2FkTmFtZXNwYWNlc1tuc10gPT09IHVuZGVmaW5lZCkgdG9Mb2FkTmFtZXNwYWNlc1tuc10gPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghaGFzQWxsTmFtZXNwYWNlcykgdG9Mb2FkTGFuZ3VhZ2VzW2xuZ10gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICBpZiAoT2JqZWN0LmtleXModG9Mb2FkKS5sZW5ndGggfHwgT2JqZWN0LmtleXMocGVuZGluZykubGVuZ3RoKSB7XG4gICAgICAgIHRoaXMucXVldWUucHVzaCh7XG4gICAgICAgICAgcGVuZGluZzogcGVuZGluZyxcbiAgICAgICAgICBwZW5kaW5nQ291bnQ6IE9iamVjdC5rZXlzKHBlbmRpbmcpLmxlbmd0aCxcbiAgICAgICAgICBsb2FkZWQ6IHt9LFxuICAgICAgICAgIGVycm9yczogW10sXG4gICAgICAgICAgY2FsbGJhY2s6IGNhbGxiYWNrXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9Mb2FkOiBPYmplY3Qua2V5cyh0b0xvYWQpLFxuICAgICAgICBwZW5kaW5nOiBPYmplY3Qua2V5cyhwZW5kaW5nKSxcbiAgICAgICAgdG9Mb2FkTGFuZ3VhZ2VzOiBPYmplY3Qua2V5cyh0b0xvYWRMYW5ndWFnZXMpLFxuICAgICAgICB0b0xvYWROYW1lc3BhY2VzOiBPYmplY3Qua2V5cyh0b0xvYWROYW1lc3BhY2VzKVxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9hZGVkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRlZChuYW1lLCBlcnIsIGRhdGEpIHtcbiAgICAgIHZhciBzID0gbmFtZS5zcGxpdCgnfCcpO1xuICAgICAgdmFyIGxuZyA9IHNbMF07XG4gICAgICB2YXIgbnMgPSBzWzFdO1xuICAgICAgaWYgKGVycikgdGhpcy5lbWl0KCdmYWlsZWRMb2FkaW5nJywgbG5nLCBucywgZXJyKTtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHRoaXMuc3RvcmUuYWRkUmVzb3VyY2VCdW5kbGUobG5nLCBucywgZGF0YSk7XG4gICAgICB9XG4gICAgICB0aGlzLnN0YXRlW25hbWVdID0gZXJyID8gLTEgOiAyO1xuICAgICAgdmFyIGxvYWRlZCA9IHt9O1xuICAgICAgdGhpcy5xdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uIChxKSB7XG4gICAgICAgIHB1c2hQYXRoKHEubG9hZGVkLCBbbG5nXSwgbnMpO1xuICAgICAgICByZW1vdmVQZW5kaW5nKHEsIG5hbWUpO1xuICAgICAgICBpZiAoZXJyKSBxLmVycm9ycy5wdXNoKGVycik7XG4gICAgICAgIGlmIChxLnBlbmRpbmdDb3VudCA9PT0gMCAmJiAhcS5kb25lKSB7XG4gICAgICAgICAgT2JqZWN0LmtleXMocS5sb2FkZWQpLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICAgICAgICAgIGlmICghbG9hZGVkW2xdKSBsb2FkZWRbbF0gPSB7fTtcbiAgICAgICAgICAgIHZhciBsb2FkZWRLZXlzID0gcS5sb2FkZWRbbF07XG4gICAgICAgICAgICBpZiAobG9hZGVkS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgbG9hZGVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChucykge1xuICAgICAgICAgICAgICAgIGlmIChsb2FkZWRbbF1bbnNdID09PSB1bmRlZmluZWQpIGxvYWRlZFtsXVtuc10gPSB0cnVlO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICBxLmRvbmUgPSB0cnVlO1xuICAgICAgICAgIGlmIChxLmVycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHEuY2FsbGJhY2socS5lcnJvcnMpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBxLmNhbGxiYWNrKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZW1pdCgnbG9hZGVkJywgbG9hZGVkKTtcbiAgICAgIHRoaXMucXVldWUgPSB0aGlzLnF1ZXVlLmZpbHRlcihmdW5jdGlvbiAocSkge1xuICAgICAgICByZXR1cm4gIXEuZG9uZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZWFkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlYWQobG5nLCBucywgZmNOYW1lKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcbiAgICAgIHZhciB0cmllZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogMDtcbiAgICAgIHZhciB3YWl0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiB0aGlzLnJldHJ5VGltZW91dDtcbiAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ID8gYXJndW1lbnRzWzVdIDogdW5kZWZpbmVkO1xuICAgICAgaWYgKCFsbmcubGVuZ3RoKSByZXR1cm4gY2FsbGJhY2sobnVsbCwge30pO1xuICAgICAgaWYgKHRoaXMucmVhZGluZ0NhbGxzID49IHRoaXMubWF4UGFyYWxsZWxSZWFkcykge1xuICAgICAgICB0aGlzLndhaXRpbmdSZWFkcy5wdXNoKHtcbiAgICAgICAgICBsbmc6IGxuZyxcbiAgICAgICAgICBuczogbnMsXG4gICAgICAgICAgZmNOYW1lOiBmY05hbWUsXG4gICAgICAgICAgdHJpZWQ6IHRyaWVkLFxuICAgICAgICAgIHdhaXQ6IHdhaXQsXG4gICAgICAgICAgY2FsbGJhY2s6IGNhbGxiYWNrXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLnJlYWRpbmdDYWxscysrO1xuICAgICAgdmFyIHJlc29sdmVyID0gZnVuY3Rpb24gcmVzb2x2ZXIoZXJyLCBkYXRhKSB7XG4gICAgICAgIF90aGlzMy5yZWFkaW5nQ2FsbHMtLTtcbiAgICAgICAgaWYgKF90aGlzMy53YWl0aW5nUmVhZHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgIHZhciBuZXh0ID0gX3RoaXMzLndhaXRpbmdSZWFkcy5zaGlmdCgpO1xuICAgICAgICAgIF90aGlzMy5yZWFkKG5leHQubG5nLCBuZXh0Lm5zLCBuZXh0LmZjTmFtZSwgbmV4dC50cmllZCwgbmV4dC53YWl0LCBuZXh0LmNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyICYmIGRhdGEgJiYgdHJpZWQgPCBfdGhpczMubWF4UmV0cmllcykge1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMzLnJlYWQuY2FsbChfdGhpczMsIGxuZywgbnMsIGZjTmFtZSwgdHJpZWQgKyAxLCB3YWl0ICogMiwgY2FsbGJhY2spO1xuICAgICAgICAgIH0sIHdhaXQpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjYWxsYmFjayhlcnIsIGRhdGEpO1xuICAgICAgfTtcbiAgICAgIHZhciBmYyA9IHRoaXMuYmFja2VuZFtmY05hbWVdLmJpbmQodGhpcy5iYWNrZW5kKTtcbiAgICAgIGlmIChmYy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgciA9IGZjKGxuZywgbnMpO1xuICAgICAgICAgIGlmIChyICYmIHR5cGVvZiByLnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHIudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZXIobnVsbCwgZGF0YSk7XG4gICAgICAgICAgICB9KVtcImNhdGNoXCJdKHJlc29sdmVyKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzb2x2ZXIobnVsbCwgcik7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICByZXNvbHZlcihlcnIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYyhsbmcsIG5zLCByZXNvbHZlcik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInByZXBhcmVMb2FkaW5nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByZXBhcmVMb2FkaW5nKGxhbmd1YWdlcywgbmFtZXNwYWNlcykge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMyA/IGFyZ3VtZW50c1szXSA6IHVuZGVmaW5lZDtcbiAgICAgIGlmICghdGhpcy5iYWNrZW5kKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLndhcm4oJ05vIGJhY2tlbmQgd2FzIGFkZGVkIHZpYSBpMThuZXh0LnVzZS4gV2lsbCBub3QgbG9hZCByZXNvdXJjZXMuJyk7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYW5ndWFnZXMgPT09ICdzdHJpbmcnKSBsYW5ndWFnZXMgPSB0aGlzLmxhbmd1YWdlVXRpbHMudG9SZXNvbHZlSGllcmFyY2h5KGxhbmd1YWdlcyk7XG4gICAgICBpZiAodHlwZW9mIG5hbWVzcGFjZXMgPT09ICdzdHJpbmcnKSBuYW1lc3BhY2VzID0gW25hbWVzcGFjZXNdO1xuICAgICAgdmFyIHRvTG9hZCA9IHRoaXMucXVldWVMb2FkKGxhbmd1YWdlcywgbmFtZXNwYWNlcywgb3B0aW9ucywgY2FsbGJhY2spO1xuICAgICAgaWYgKCF0b0xvYWQudG9Mb2FkLmxlbmd0aCkge1xuICAgICAgICBpZiAoIXRvTG9hZC5wZW5kaW5nLmxlbmd0aCkgY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICB0b0xvYWQudG9Mb2FkLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgX3RoaXM0LmxvYWRPbmUobmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkKGxhbmd1YWdlcywgbmFtZXNwYWNlcywgY2FsbGJhY2spIHtcbiAgICAgIHRoaXMucHJlcGFyZUxvYWRpbmcobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCB7fSwgY2FsbGJhY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZWxvYWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVsb2FkKGxhbmd1YWdlcywgbmFtZXNwYWNlcywgY2FsbGJhY2spIHtcbiAgICAgIHRoaXMucHJlcGFyZUxvYWRpbmcobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCB7XG4gICAgICAgIHJlbG9hZDogdHJ1ZVxuICAgICAgfSwgY2FsbGJhY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkT25lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRPbmUobmFtZSkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG4gICAgICB2YXIgcHJlZml4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcbiAgICAgIHZhciBzID0gbmFtZS5zcGxpdCgnfCcpO1xuICAgICAgdmFyIGxuZyA9IHNbMF07XG4gICAgICB2YXIgbnMgPSBzWzFdO1xuICAgICAgdGhpcy5yZWFkKGxuZywgbnMsICdyZWFkJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVycikgX3RoaXM1LmxvZ2dlci53YXJuKFwiXCIuY29uY2F0KHByZWZpeCwgXCJsb2FkaW5nIG5hbWVzcGFjZSBcIikuY29uY2F0KG5zLCBcIiBmb3IgbGFuZ3VhZ2UgXCIpLmNvbmNhdChsbmcsIFwiIGZhaWxlZFwiKSwgZXJyKTtcbiAgICAgICAgaWYgKCFlcnIgJiYgZGF0YSkgX3RoaXM1LmxvZ2dlci5sb2coXCJcIi5jb25jYXQocHJlZml4LCBcImxvYWRlZCBuYW1lc3BhY2UgXCIpLmNvbmNhdChucywgXCIgZm9yIGxhbmd1YWdlIFwiKS5jb25jYXQobG5nKSwgZGF0YSk7XG4gICAgICAgIF90aGlzNS5sb2FkZWQobmFtZSwgZXJyLCBkYXRhKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzYXZlTWlzc2luZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzYXZlTWlzc2luZyhsYW5ndWFnZXMsIG5hbWVzcGFjZSwga2V5LCBmYWxsYmFja1ZhbHVlLCBpc1VwZGF0ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IHt9O1xuICAgICAgdmFyIGNsYiA9IGFyZ3VtZW50cy5sZW5ndGggPiA2ICYmIGFyZ3VtZW50c1s2XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzZdIDogZnVuY3Rpb24gKCkge307XG4gICAgICBpZiAodGhpcy5zZXJ2aWNlcy51dGlscyAmJiB0aGlzLnNlcnZpY2VzLnV0aWxzLmhhc0xvYWRlZE5hbWVzcGFjZSAmJiAhdGhpcy5zZXJ2aWNlcy51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UobmFtZXNwYWNlKSkge1xuICAgICAgICB0aGlzLmxvZ2dlci53YXJuKFwiZGlkIG5vdCBzYXZlIGtleSBcXFwiXCIuY29uY2F0KGtleSwgXCJcXFwiIGFzIHRoZSBuYW1lc3BhY2UgXFxcIlwiKS5jb25jYXQobmFtZXNwYWNlLCBcIlxcXCIgd2FzIG5vdCB5ZXQgbG9hZGVkXCIpLCAnVGhpcyBtZWFucyBzb21ldGhpbmcgSVMgV1JPTkcgaW4geW91ciBzZXR1cC4gWW91IGFjY2VzcyB0aGUgdCBmdW5jdGlvbiBiZWZvcmUgaTE4bmV4dC5pbml0IC8gaTE4bmV4dC5sb2FkTmFtZXNwYWNlIC8gaTE4bmV4dC5jaGFuZ2VMYW5ndWFnZSB3YXMgZG9uZS4gV2FpdCBmb3IgdGhlIGNhbGxiYWNrIG9yIFByb21pc2UgdG8gcmVzb2x2ZSBiZWZvcmUgYWNjZXNzaW5nIGl0ISEhJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09IHVuZGVmaW5lZCB8fCBrZXkgPT09IG51bGwgfHwga2V5ID09PSAnJykgcmV0dXJuO1xuICAgICAgaWYgKHRoaXMuYmFja2VuZCAmJiB0aGlzLmJhY2tlbmQuY3JlYXRlKSB7XG4gICAgICAgIHZhciBvcHRzID0gX29iamVjdFNwcmVhZCQxKF9vYmplY3RTcHJlYWQkMSh7fSwgb3B0aW9ucyksIHt9LCB7XG4gICAgICAgICAgaXNVcGRhdGU6IGlzVXBkYXRlXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgZmMgPSB0aGlzLmJhY2tlbmQuY3JlYXRlLmJpbmQodGhpcy5iYWNrZW5kKTtcbiAgICAgICAgaWYgKGZjLmxlbmd0aCA8IDYpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFyIHI7XG4gICAgICAgICAgICBpZiAoZmMubGVuZ3RoID09PSA1KSB7XG4gICAgICAgICAgICAgIHIgPSBmYyhsYW5ndWFnZXMsIG5hbWVzcGFjZSwga2V5LCBmYWxsYmFja1ZhbHVlLCBvcHRzKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHIgPSBmYyhsYW5ndWFnZXMsIG5hbWVzcGFjZSwga2V5LCBmYWxsYmFja1ZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyICYmIHR5cGVvZiByLnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgci50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsYihudWxsLCBkYXRhKTtcbiAgICAgICAgICAgICAgfSlbXCJjYXRjaFwiXShjbGIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY2xiKG51bGwsIHIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY2xiKGVycik7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZjKGxhbmd1YWdlcywgbmFtZXNwYWNlLCBrZXksIGZhbGxiYWNrVmFsdWUsIGNsYiwgb3B0cyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICghbGFuZ3VhZ2VzIHx8ICFsYW5ndWFnZXNbMF0pIHJldHVybjtcbiAgICAgIHRoaXMuc3RvcmUuYWRkUmVzb3VyY2UobGFuZ3VhZ2VzWzBdLCBuYW1lc3BhY2UsIGtleSwgZmFsbGJhY2tWYWx1ZSk7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBDb25uZWN0b3I7XG59KEV2ZW50RW1pdHRlcik7XG5cbmZ1bmN0aW9uIGdldCgpIHtcbiAgcmV0dXJuIHtcbiAgICBkZWJ1ZzogZmFsc2UsXG4gICAgaW5pdEltbWVkaWF0ZTogdHJ1ZSxcbiAgICBuczogWyd0cmFuc2xhdGlvbiddLFxuICAgIGRlZmF1bHROUzogWyd0cmFuc2xhdGlvbiddLFxuICAgIGZhbGxiYWNrTG5nOiBbJ2RldiddLFxuICAgIGZhbGxiYWNrTlM6IGZhbHNlLFxuICAgIHN1cHBvcnRlZExuZ3M6IGZhbHNlLFxuICAgIG5vbkV4cGxpY2l0U3VwcG9ydGVkTG5nczogZmFsc2UsXG4gICAgbG9hZDogJ2FsbCcsXG4gICAgcHJlbG9hZDogZmFsc2UsXG4gICAgc2ltcGxpZnlQbHVyYWxTdWZmaXg6IHRydWUsXG4gICAga2V5U2VwYXJhdG9yOiAnLicsXG4gICAgbnNTZXBhcmF0b3I6ICc6JyxcbiAgICBwbHVyYWxTZXBhcmF0b3I6ICdfJyxcbiAgICBjb250ZXh0U2VwYXJhdG9yOiAnXycsXG4gICAgcGFydGlhbEJ1bmRsZWRMYW5ndWFnZXM6IGZhbHNlLFxuICAgIHNhdmVNaXNzaW5nOiBmYWxzZSxcbiAgICB1cGRhdGVNaXNzaW5nOiBmYWxzZSxcbiAgICBzYXZlTWlzc2luZ1RvOiAnZmFsbGJhY2snLFxuICAgIHNhdmVNaXNzaW5nUGx1cmFsczogdHJ1ZSxcbiAgICBtaXNzaW5nS2V5SGFuZGxlcjogZmFsc2UsXG4gICAgbWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyOiBmYWxzZSxcbiAgICBwb3N0UHJvY2VzczogZmFsc2UsXG4gICAgcG9zdFByb2Nlc3NQYXNzUmVzb2x2ZWQ6IGZhbHNlLFxuICAgIHJldHVybk51bGw6IHRydWUsXG4gICAgcmV0dXJuRW1wdHlTdHJpbmc6IHRydWUsXG4gICAgcmV0dXJuT2JqZWN0czogZmFsc2UsXG4gICAgam9pbkFycmF5czogZmFsc2UsXG4gICAgcmV0dXJuZWRPYmplY3RIYW5kbGVyOiBmYWxzZSxcbiAgICBwYXJzZU1pc3NpbmdLZXlIYW5kbGVyOiBmYWxzZSxcbiAgICBhcHBlbmROYW1lc3BhY2VUb01pc3NpbmdLZXk6IGZhbHNlLFxuICAgIGFwcGVuZE5hbWVzcGFjZVRvQ0lNb2RlOiBmYWxzZSxcbiAgICBvdmVybG9hZFRyYW5zbGF0aW9uT3B0aW9uSGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlKGFyZ3MpIHtcbiAgICAgIHZhciByZXQgPSB7fTtcbiAgICAgIGlmIChfdHlwZW9mKGFyZ3NbMV0pID09PSAnb2JqZWN0JykgcmV0ID0gYXJnc1sxXTtcbiAgICAgIGlmICh0eXBlb2YgYXJnc1sxXSA9PT0gJ3N0cmluZycpIHJldC5kZWZhdWx0VmFsdWUgPSBhcmdzWzFdO1xuICAgICAgaWYgKHR5cGVvZiBhcmdzWzJdID09PSAnc3RyaW5nJykgcmV0LnREZXNjcmlwdGlvbiA9IGFyZ3NbMl07XG4gICAgICBpZiAoX3R5cGVvZihhcmdzWzJdKSA9PT0gJ29iamVjdCcgfHwgX3R5cGVvZihhcmdzWzNdKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSBhcmdzWzNdIHx8IGFyZ3NbMl07XG4gICAgICAgIE9iamVjdC5rZXlzKG9wdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIHJldFtrZXldID0gb3B0aW9uc1trZXldO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXQ7XG4gICAgfSxcbiAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICBlc2NhcGVWYWx1ZTogdHJ1ZSxcbiAgICAgIGZvcm1hdDogZnVuY3Rpb24gZm9ybWF0KHZhbHVlLCBfZm9ybWF0LCBsbmcsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfSxcbiAgICAgIHByZWZpeDogJ3t7JyxcbiAgICAgIHN1ZmZpeDogJ319JyxcbiAgICAgIGZvcm1hdFNlcGFyYXRvcjogJywnLFxuICAgICAgdW5lc2NhcGVQcmVmaXg6ICctJyxcbiAgICAgIG5lc3RpbmdQcmVmaXg6ICckdCgnLFxuICAgICAgbmVzdGluZ1N1ZmZpeDogJyknLFxuICAgICAgbmVzdGluZ09wdGlvbnNTZXBhcmF0b3I6ICcsJyxcbiAgICAgIG1heFJlcGxhY2VzOiAxMDAwLFxuICAgICAgc2tpcE9uVmFyaWFibGVzOiB0cnVlXG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gdHJhbnNmb3JtT3B0aW9ucyhvcHRpb25zKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5ucyA9PT0gJ3N0cmluZycpIG9wdGlvbnMubnMgPSBbb3B0aW9ucy5uc107XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5mYWxsYmFja0xuZyA9PT0gJ3N0cmluZycpIG9wdGlvbnMuZmFsbGJhY2tMbmcgPSBbb3B0aW9ucy5mYWxsYmFja0xuZ107XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5mYWxsYmFja05TID09PSAnc3RyaW5nJykgb3B0aW9ucy5mYWxsYmFja05TID0gW29wdGlvbnMuZmFsbGJhY2tOU107XG4gIGlmIChvcHRpb25zLnN1cHBvcnRlZExuZ3MgJiYgb3B0aW9ucy5zdXBwb3J0ZWRMbmdzLmluZGV4T2YoJ2NpbW9kZScpIDwgMCkge1xuICAgIG9wdGlvbnMuc3VwcG9ydGVkTG5ncyA9IG9wdGlvbnMuc3VwcG9ydGVkTG5ncy5jb25jYXQoWydjaW1vZGUnXSk7XG4gIH1cbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuZnVuY3Rpb24gbm9vcCgpIHt9XG5mdW5jdGlvbiBiaW5kTWVtYmVyRnVuY3Rpb25zKGluc3QpIHtcbiAgdmFyIG1lbXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPYmplY3QuZ2V0UHJvdG90eXBlT2YoaW5zdCkpO1xuICBtZW1zLmZvckVhY2goZnVuY3Rpb24gKG1lbSkge1xuICAgIGlmICh0eXBlb2YgaW5zdFttZW1dID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBpbnN0W21lbV0gPSBpbnN0W21lbV0uYmluZChpbnN0KTtcbiAgICB9XG4gIH0pO1xufVxudmFyIEkxOG4gPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoSTE4biwgX0V2ZW50RW1pdHRlcik7XG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoSTE4bik7XG4gIGZ1bmN0aW9uIEkxOG4oKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSTE4bik7XG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTtcbiAgICBpZiAoaXNJRTEwKSB7XG4gICAgICBFdmVudEVtaXR0ZXIuY2FsbChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgfVxuICAgIF90aGlzLm9wdGlvbnMgPSB0cmFuc2Zvcm1PcHRpb25zKG9wdGlvbnMpO1xuICAgIF90aGlzLnNlcnZpY2VzID0ge307XG4gICAgX3RoaXMubG9nZ2VyID0gYmFzZUxvZ2dlcjtcbiAgICBfdGhpcy5tb2R1bGVzID0ge1xuICAgICAgZXh0ZXJuYWw6IFtdXG4gICAgfTtcbiAgICBiaW5kTWVtYmVyRnVuY3Rpb25zKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBpZiAoY2FsbGJhY2sgJiYgIV90aGlzLmlzSW5pdGlhbGl6ZWQgJiYgIW9wdGlvbnMuaXNDbG9uZSkge1xuICAgICAgaWYgKCFfdGhpcy5vcHRpb25zLmluaXRJbW1lZGlhdGUpIHtcbiAgICAgICAgX3RoaXMuaW5pdChvcHRpb25zLCBjYWxsYmFjayk7XG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgICAgfVxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLmluaXQob3B0aW9ucywgY2FsbGJhY2spO1xuICAgICAgfSwgMCk7XG4gICAgfVxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuICBfY3JlYXRlQ2xhc3MoSTE4biwgW3tcbiAgICBrZXk6IFwiaW5pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjYWxsYmFjayA9IG9wdGlvbnM7XG4gICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgIH1cbiAgICAgIGlmICghb3B0aW9ucy5kZWZhdWx0TlMgJiYgb3B0aW9ucy5kZWZhdWx0TlMgIT09IGZhbHNlICYmIG9wdGlvbnMubnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm5zID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIG9wdGlvbnMuZGVmYXVsdE5TID0gb3B0aW9ucy5ucztcbiAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLm5zLmluZGV4T2YoJ3RyYW5zbGF0aW9uJykgPCAwKSB7XG4gICAgICAgICAgb3B0aW9ucy5kZWZhdWx0TlMgPSBvcHRpb25zLm5zWzBdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgZGVmT3B0cyA9IGdldCgpO1xuICAgICAgdGhpcy5vcHRpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRlZk9wdHMpLCB0aGlzLm9wdGlvbnMpLCB0cmFuc2Zvcm1PcHRpb25zKG9wdGlvbnMpKTtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29tcGF0aWJpbGl0eUFQSSAhPT0gJ3YxJykge1xuICAgICAgICB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbiA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmT3B0cy5pbnRlcnBvbGF0aW9uKSwgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24pO1xuICAgICAgfVxuICAgICAgaWYgKG9wdGlvbnMua2V5U2VwYXJhdG9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLnVzZXJEZWZpbmVkS2V5U2VwYXJhdG9yID0gb3B0aW9ucy5rZXlTZXBhcmF0b3I7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy5uc1NlcGFyYXRvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucy51c2VyRGVmaW5lZE5zU2VwYXJhdG9yID0gb3B0aW9ucy5uc1NlcGFyYXRvcjtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNsYXNzT25EZW1hbmQoQ2xhc3NPck9iamVjdCkge1xuICAgICAgICBpZiAoIUNsYXNzT3JPYmplY3QpIHJldHVybiBudWxsO1xuICAgICAgICBpZiAodHlwZW9mIENsYXNzT3JPYmplY3QgPT09ICdmdW5jdGlvbicpIHJldHVybiBuZXcgQ2xhc3NPck9iamVjdCgpO1xuICAgICAgICByZXR1cm4gQ2xhc3NPck9iamVjdDtcbiAgICAgIH1cbiAgICAgIGlmICghdGhpcy5vcHRpb25zLmlzQ2xvbmUpIHtcbiAgICAgICAgaWYgKHRoaXMubW9kdWxlcy5sb2dnZXIpIHtcbiAgICAgICAgICBiYXNlTG9nZ2VyLmluaXQoY3JlYXRlQ2xhc3NPbkRlbWFuZCh0aGlzLm1vZHVsZXMubG9nZ2VyKSwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBiYXNlTG9nZ2VyLmluaXQobnVsbCwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZm9ybWF0dGVyO1xuICAgICAgICBpZiAodGhpcy5tb2R1bGVzLmZvcm1hdHRlcikge1xuICAgICAgICAgIGZvcm1hdHRlciA9IHRoaXMubW9kdWxlcy5mb3JtYXR0ZXI7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIEludGwgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgZm9ybWF0dGVyID0gRm9ybWF0dGVyO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsdSA9IG5ldyBMYW5ndWFnZVV0aWwodGhpcy5vcHRpb25zKTtcbiAgICAgICAgdGhpcy5zdG9yZSA9IG5ldyBSZXNvdXJjZVN0b3JlKHRoaXMub3B0aW9ucy5yZXNvdXJjZXMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHZhciBzID0gdGhpcy5zZXJ2aWNlcztcbiAgICAgICAgcy5sb2dnZXIgPSBiYXNlTG9nZ2VyO1xuICAgICAgICBzLnJlc291cmNlU3RvcmUgPSB0aGlzLnN0b3JlO1xuICAgICAgICBzLmxhbmd1YWdlVXRpbHMgPSBsdTtcbiAgICAgICAgcy5wbHVyYWxSZXNvbHZlciA9IG5ldyBQbHVyYWxSZXNvbHZlcihsdSwge1xuICAgICAgICAgIHByZXBlbmQ6IHRoaXMub3B0aW9ucy5wbHVyYWxTZXBhcmF0b3IsXG4gICAgICAgICAgY29tcGF0aWJpbGl0eUpTT046IHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTixcbiAgICAgICAgICBzaW1wbGlmeVBsdXJhbFN1ZmZpeDogdGhpcy5vcHRpb25zLnNpbXBsaWZ5UGx1cmFsU3VmZml4XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZm9ybWF0dGVyICYmICghdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZm9ybWF0IHx8IHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLmZvcm1hdCA9PT0gZGVmT3B0cy5pbnRlcnBvbGF0aW9uLmZvcm1hdCkpIHtcbiAgICAgICAgICBzLmZvcm1hdHRlciA9IGNyZWF0ZUNsYXNzT25EZW1hbmQoZm9ybWF0dGVyKTtcbiAgICAgICAgICBzLmZvcm1hdHRlci5pbml0KHMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgICAgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZm9ybWF0ID0gcy5mb3JtYXR0ZXIuZm9ybWF0LmJpbmQocy5mb3JtYXR0ZXIpO1xuICAgICAgICB9XG4gICAgICAgIHMuaW50ZXJwb2xhdG9yID0gbmV3IEludGVycG9sYXRvcih0aGlzLm9wdGlvbnMpO1xuICAgICAgICBzLnV0aWxzID0ge1xuICAgICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogdGhpcy5oYXNMb2FkZWROYW1lc3BhY2UuYmluZCh0aGlzKVxuICAgICAgICB9O1xuICAgICAgICBzLmJhY2tlbmRDb25uZWN0b3IgPSBuZXcgQ29ubmVjdG9yKGNyZWF0ZUNsYXNzT25EZW1hbmQodGhpcy5tb2R1bGVzLmJhY2tlbmQpLCBzLnJlc291cmNlU3RvcmUsIHMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHMuYmFja2VuZENvbm5lY3Rvci5vbignKicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfdGhpczIuZW1pdC5hcHBseShfdGhpczIsIFtldmVudF0uY29uY2F0KGFyZ3MpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLm1vZHVsZXMubGFuZ3VhZ2VEZXRlY3Rvcikge1xuICAgICAgICAgIHMubGFuZ3VhZ2VEZXRlY3RvciA9IGNyZWF0ZUNsYXNzT25EZW1hbmQodGhpcy5tb2R1bGVzLmxhbmd1YWdlRGV0ZWN0b3IpO1xuICAgICAgICAgIGlmIChzLmxhbmd1YWdlRGV0ZWN0b3IuaW5pdCkgcy5sYW5ndWFnZURldGVjdG9yLmluaXQocywgdGhpcy5vcHRpb25zLmRldGVjdGlvbiwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5tb2R1bGVzLmkxOG5Gb3JtYXQpIHtcbiAgICAgICAgICBzLmkxOG5Gb3JtYXQgPSBjcmVhdGVDbGFzc09uRGVtYW5kKHRoaXMubW9kdWxlcy5pMThuRm9ybWF0KTtcbiAgICAgICAgICBpZiAocy5pMThuRm9ybWF0LmluaXQpIHMuaTE4bkZvcm1hdC5pbml0KHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudHJhbnNsYXRvciA9IG5ldyBUcmFuc2xhdG9yKHRoaXMuc2VydmljZXMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHRoaXMudHJhbnNsYXRvci5vbignKicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgICAgICBhcmdzW19rZXkyIC0gMV0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBfdGhpczIuZW1pdC5hcHBseShfdGhpczIsIFtldmVudF0uY29uY2F0KGFyZ3MpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubW9kdWxlcy5leHRlcm5hbC5mb3JFYWNoKGZ1bmN0aW9uIChtKSB7XG4gICAgICAgICAgaWYgKG0uaW5pdCkgbS5pbml0KF90aGlzMik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgdGhpcy5mb3JtYXQgPSB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5mb3JtYXQ7XG4gICAgICBpZiAoIWNhbGxiYWNrKSBjYWxsYmFjayA9IG5vb3A7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nICYmICF0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IgJiYgIXRoaXMub3B0aW9ucy5sbmcpIHtcbiAgICAgICAgdmFyIGNvZGVzID0gdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLmdldEZhbGxiYWNrQ29kZXModGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nKTtcbiAgICAgICAgaWYgKGNvZGVzLmxlbmd0aCA+IDAgJiYgY29kZXNbMF0gIT09ICdkZXYnKSB0aGlzLm9wdGlvbnMubG5nID0gY29kZXNbMF07XG4gICAgICB9XG4gICAgICBpZiAoIXRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3RvciAmJiAhdGhpcy5vcHRpb25zLmxuZykge1xuICAgICAgICB0aGlzLmxvZ2dlci53YXJuKCdpbml0OiBubyBsYW5ndWFnZURldGVjdG9yIGlzIHVzZWQgYW5kIG5vIGxuZyBpcyBkZWZpbmVkJyk7XG4gICAgICB9XG4gICAgICB2YXIgc3RvcmVBcGkgPSBbJ2dldFJlc291cmNlJywgJ2hhc1Jlc291cmNlQnVuZGxlJywgJ2dldFJlc291cmNlQnVuZGxlJywgJ2dldERhdGFCeUxhbmd1YWdlJ107XG4gICAgICBzdG9yZUFwaS5mb3JFYWNoKGZ1bmN0aW9uIChmY05hbWUpIHtcbiAgICAgICAgX3RoaXMyW2ZjTmFtZV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIF90aGlzMiRzdG9yZTtcbiAgICAgICAgICByZXR1cm4gKF90aGlzMiRzdG9yZSA9IF90aGlzMi5zdG9yZSlbZmNOYW1lXS5hcHBseShfdGhpczIkc3RvcmUsIGFyZ3VtZW50cyk7XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHZhciBzdG9yZUFwaUNoYWluZWQgPSBbJ2FkZFJlc291cmNlJywgJ2FkZFJlc291cmNlcycsICdhZGRSZXNvdXJjZUJ1bmRsZScsICdyZW1vdmVSZXNvdXJjZUJ1bmRsZSddO1xuICAgICAgc3RvcmVBcGlDaGFpbmVkLmZvckVhY2goZnVuY3Rpb24gKGZjTmFtZSkge1xuICAgICAgICBfdGhpczJbZmNOYW1lXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgX3RoaXMyJHN0b3JlMjtcbiAgICAgICAgICAoX3RoaXMyJHN0b3JlMiA9IF90aGlzMi5zdG9yZSlbZmNOYW1lXS5hcHBseShfdGhpczIkc3RvcmUyLCBhcmd1bWVudHMpO1xuICAgICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG4gICAgICB2YXIgbG9hZCA9IGZ1bmN0aW9uIGxvYWQoKSB7XG4gICAgICAgIHZhciBmaW5pc2ggPSBmdW5jdGlvbiBmaW5pc2goZXJyLCB0KSB7XG4gICAgICAgICAgaWYgKF90aGlzMi5pc0luaXRpYWxpemVkICYmICFfdGhpczIuaW5pdGlhbGl6ZWRTdG9yZU9uY2UpIF90aGlzMi5sb2dnZXIud2FybignaW5pdDogaTE4bmV4dCBpcyBhbHJlYWR5IGluaXRpYWxpemVkLiBZb3Ugc2hvdWxkIGNhbGwgaW5pdCBqdXN0IG9uY2UhJyk7XG4gICAgICAgICAgX3RoaXMyLmlzSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgIGlmICghX3RoaXMyLm9wdGlvbnMuaXNDbG9uZSkgX3RoaXMyLmxvZ2dlci5sb2coJ2luaXRpYWxpemVkJywgX3RoaXMyLm9wdGlvbnMpO1xuICAgICAgICAgIF90aGlzMi5lbWl0KCdpbml0aWFsaXplZCcsIF90aGlzMi5vcHRpb25zKTtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHQpO1xuICAgICAgICAgIGNhbGxiYWNrKGVyciwgdCk7XG4gICAgICAgIH07XG4gICAgICAgIGlmIChfdGhpczIubGFuZ3VhZ2VzICYmIF90aGlzMi5vcHRpb25zLmNvbXBhdGliaWxpdHlBUEkgIT09ICd2MScgJiYgIV90aGlzMi5pc0luaXRpYWxpemVkKSByZXR1cm4gZmluaXNoKG51bGwsIF90aGlzMi50LmJpbmQoX3RoaXMyKSk7XG4gICAgICAgIF90aGlzMi5jaGFuZ2VMYW5ndWFnZShfdGhpczIub3B0aW9ucy5sbmcsIGZpbmlzaCk7XG4gICAgICB9O1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZXNvdXJjZXMgfHwgIXRoaXMub3B0aW9ucy5pbml0SW1tZWRpYXRlKSB7XG4gICAgICAgIGxvYWQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRpbWVvdXQobG9hZCwgMCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxvYWRSZXNvdXJjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZFJlc291cmNlcyhsYW5ndWFnZSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG5vb3A7XG4gICAgICB2YXIgdXNlZENhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICB2YXIgdXNlZExuZyA9IHR5cGVvZiBsYW5ndWFnZSA9PT0gJ3N0cmluZycgPyBsYW5ndWFnZSA6IHRoaXMubGFuZ3VhZ2U7XG4gICAgICBpZiAodHlwZW9mIGxhbmd1YWdlID09PSAnZnVuY3Rpb24nKSB1c2VkQ2FsbGJhY2sgPSBsYW5ndWFnZTtcbiAgICAgIGlmICghdGhpcy5vcHRpb25zLnJlc291cmNlcyB8fCB0aGlzLm9wdGlvbnMucGFydGlhbEJ1bmRsZWRMYW5ndWFnZXMpIHtcbiAgICAgICAgaWYgKHVzZWRMbmcgJiYgdXNlZExuZy50b0xvd2VyQ2FzZSgpID09PSAnY2ltb2RlJykgcmV0dXJuIHVzZWRDYWxsYmFjaygpO1xuICAgICAgICB2YXIgdG9Mb2FkID0gW107XG4gICAgICAgIHZhciBhcHBlbmQgPSBmdW5jdGlvbiBhcHBlbmQobG5nKSB7XG4gICAgICAgICAgaWYgKCFsbmcpIHJldHVybjtcbiAgICAgICAgICB2YXIgbG5ncyA9IF90aGlzMy5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShsbmcpO1xuICAgICAgICAgIGxuZ3MuZm9yRWFjaChmdW5jdGlvbiAobCkge1xuICAgICAgICAgICAgaWYgKHRvTG9hZC5pbmRleE9mKGwpIDwgMCkgdG9Mb2FkLnB1c2gobCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGlmICghdXNlZExuZykge1xuICAgICAgICAgIHZhciBmYWxsYmFja3MgPSB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlVXRpbHMuZ2V0RmFsbGJhY2tDb2Rlcyh0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcpO1xuICAgICAgICAgIGZhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBwZW5kKGwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFwcGVuZCh1c2VkTG5nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnByZWxvYWQpIHtcbiAgICAgICAgICB0aGlzLm9wdGlvbnMucHJlbG9hZC5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBwZW5kKGwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2VydmljZXMuYmFja2VuZENvbm5lY3Rvci5sb2FkKHRvTG9hZCwgdGhpcy5vcHRpb25zLm5zLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGlmICghZSAmJiAhX3RoaXMzLnJlc29sdmVkTGFuZ3VhZ2UgJiYgX3RoaXMzLmxhbmd1YWdlKSBfdGhpczMuc2V0UmVzb2x2ZWRMYW5ndWFnZShfdGhpczMubGFuZ3VhZ2UpO1xuICAgICAgICAgIHVzZWRDYWxsYmFjayhlKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1c2VkQ2FsbGJhY2sobnVsbCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbG9hZFJlc291cmNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWxvYWRSZXNvdXJjZXMobG5ncywgbnMsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgaWYgKCFsbmdzKSBsbmdzID0gdGhpcy5sYW5ndWFnZXM7XG4gICAgICBpZiAoIW5zKSBucyA9IHRoaXMub3B0aW9ucy5ucztcbiAgICAgIGlmICghY2FsbGJhY2spIGNhbGxiYWNrID0gbm9vcDtcbiAgICAgIHRoaXMuc2VydmljZXMuYmFja2VuZENvbm5lY3Rvci5yZWxvYWQobG5ncywgbnMsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVzZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1c2UobW9kdWxlKSB7XG4gICAgICBpZiAoIW1vZHVsZSkgdGhyb3cgbmV3IEVycm9yKCdZb3UgYXJlIHBhc3NpbmcgYW4gdW5kZWZpbmVkIG1vZHVsZSEgUGxlYXNlIGNoZWNrIHRoZSBvYmplY3QgeW91IGFyZSBwYXNzaW5nIHRvIGkxOG5leHQudXNlKCknKTtcbiAgICAgIGlmICghbW9kdWxlLnR5cGUpIHRocm93IG5ldyBFcnJvcignWW91IGFyZSBwYXNzaW5nIGEgd3JvbmcgbW9kdWxlISBQbGVhc2UgY2hlY2sgdGhlIG9iamVjdCB5b3UgYXJlIHBhc3NpbmcgdG8gaTE4bmV4dC51c2UoKScpO1xuICAgICAgaWYgKG1vZHVsZS50eXBlID09PSAnYmFja2VuZCcpIHtcbiAgICAgICAgdGhpcy5tb2R1bGVzLmJhY2tlbmQgPSBtb2R1bGU7XG4gICAgICB9XG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdsb2dnZXInIHx8IG1vZHVsZS5sb2cgJiYgbW9kdWxlLndhcm4gJiYgbW9kdWxlLmVycm9yKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5sb2dnZXIgPSBtb2R1bGU7XG4gICAgICB9XG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdsYW5ndWFnZURldGVjdG9yJykge1xuICAgICAgICB0aGlzLm1vZHVsZXMubGFuZ3VhZ2VEZXRlY3RvciA9IG1vZHVsZTtcbiAgICAgIH1cbiAgICAgIGlmIChtb2R1bGUudHlwZSA9PT0gJ2kxOG5Gb3JtYXQnKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5pMThuRm9ybWF0ID0gbW9kdWxlO1xuICAgICAgfVxuICAgICAgaWYgKG1vZHVsZS50eXBlID09PSAncG9zdFByb2Nlc3NvcicpIHtcbiAgICAgICAgcG9zdFByb2Nlc3Nvci5hZGRQb3N0UHJvY2Vzc29yKG1vZHVsZSk7XG4gICAgICB9XG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdmb3JtYXR0ZXInKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5mb3JtYXR0ZXIgPSBtb2R1bGU7XG4gICAgICB9XG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICczcmRQYXJ0eScpIHtcbiAgICAgICAgdGhpcy5tb2R1bGVzLmV4dGVybmFsLnB1c2gobW9kdWxlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXRSZXNvbHZlZExhbmd1YWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFJlc29sdmVkTGFuZ3VhZ2UobCkge1xuICAgICAgaWYgKCFsIHx8ICF0aGlzLmxhbmd1YWdlcykgcmV0dXJuO1xuICAgICAgaWYgKFsnY2ltb2RlJywgJ2RldiddLmluZGV4T2YobCkgPiAtMSkgcmV0dXJuO1xuICAgICAgZm9yICh2YXIgbGkgPSAwOyBsaSA8IHRoaXMubGFuZ3VhZ2VzLmxlbmd0aDsgbGkrKykge1xuICAgICAgICB2YXIgbG5nSW5MbmdzID0gdGhpcy5sYW5ndWFnZXNbbGldO1xuICAgICAgICBpZiAoWydjaW1vZGUnLCAnZGV2J10uaW5kZXhPZihsbmdJbkxuZ3MpID4gLTEpIGNvbnRpbnVlO1xuICAgICAgICBpZiAodGhpcy5zdG9yZS5oYXNMYW5ndWFnZVNvbWVUcmFuc2xhdGlvbnMobG5nSW5MbmdzKSkge1xuICAgICAgICAgIHRoaXMucmVzb2x2ZWRMYW5ndWFnZSA9IGxuZ0luTG5ncztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjaGFuZ2VMYW5ndWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjaGFuZ2VMYW5ndWFnZShsbmcsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcbiAgICAgIHRoaXMuaXNMYW5ndWFnZUNoYW5naW5nVG8gPSBsbmc7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgdGhpcy5lbWl0KCdsYW5ndWFnZUNoYW5naW5nJywgbG5nKTtcbiAgICAgIHZhciBzZXRMbmdQcm9wcyA9IGZ1bmN0aW9uIHNldExuZ1Byb3BzKGwpIHtcbiAgICAgICAgX3RoaXM0Lmxhbmd1YWdlID0gbDtcbiAgICAgICAgX3RoaXM0Lmxhbmd1YWdlcyA9IF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShsKTtcbiAgICAgICAgX3RoaXM0LnJlc29sdmVkTGFuZ3VhZ2UgPSB1bmRlZmluZWQ7XG4gICAgICAgIF90aGlzNC5zZXRSZXNvbHZlZExhbmd1YWdlKGwpO1xuICAgICAgfTtcbiAgICAgIHZhciBkb25lID0gZnVuY3Rpb24gZG9uZShlcnIsIGwpIHtcbiAgICAgICAgaWYgKGwpIHtcbiAgICAgICAgICBzZXRMbmdQcm9wcyhsKTtcbiAgICAgICAgICBfdGhpczQudHJhbnNsYXRvci5jaGFuZ2VMYW5ndWFnZShsKTtcbiAgICAgICAgICBfdGhpczQuaXNMYW5ndWFnZUNoYW5naW5nVG8gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgX3RoaXM0LmVtaXQoJ2xhbmd1YWdlQ2hhbmdlZCcsIGwpO1xuICAgICAgICAgIF90aGlzNC5sb2dnZXIubG9nKCdsYW5ndWFnZUNoYW5nZWQnLCBsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczQuaXNMYW5ndWFnZUNoYW5naW5nVG8gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzNC50LmFwcGx5KF90aGlzNCwgYXJndW1lbnRzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soZXJyLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzNC50LmFwcGx5KF90aGlzNCwgYXJndW1lbnRzKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgICAgdmFyIHNldExuZyA9IGZ1bmN0aW9uIHNldExuZyhsbmdzKSB7XG4gICAgICAgIGlmICghbG5nICYmICFsbmdzICYmIF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yKSBsbmdzID0gW107XG4gICAgICAgIHZhciBsID0gdHlwZW9mIGxuZ3MgPT09ICdzdHJpbmcnID8gbG5ncyA6IF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLmdldEJlc3RNYXRjaEZyb21Db2RlcyhsbmdzKTtcbiAgICAgICAgaWYgKGwpIHtcbiAgICAgICAgICBpZiAoIV90aGlzNC5sYW5ndWFnZSkge1xuICAgICAgICAgICAgc2V0TG5nUHJvcHMobCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghX3RoaXM0LnRyYW5zbGF0b3IubGFuZ3VhZ2UpIF90aGlzNC50cmFuc2xhdG9yLmNoYW5nZUxhbmd1YWdlKGwpO1xuICAgICAgICAgIGlmIChfdGhpczQuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3RvciAmJiBfdGhpczQuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5jYWNoZVVzZXJMYW5ndWFnZSkgX3RoaXM0LnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IuY2FjaGVVc2VyTGFuZ3VhZ2UobCk7XG4gICAgICAgIH1cbiAgICAgICAgX3RoaXM0LmxvYWRSZXNvdXJjZXMobCwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIGRvbmUoZXJyLCBsKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgICAgaWYgKCFsbmcgJiYgdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yICYmICF0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IuYXN5bmMpIHtcbiAgICAgICAgc2V0TG5nKHRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5kZXRlY3QoKSk7XG4gICAgICB9IGVsc2UgaWYgKCFsbmcgJiYgdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yICYmIHRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5hc3luYykge1xuICAgICAgICBpZiAodGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yLmRldGVjdC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IuZGV0ZWN0KCkudGhlbihzZXRMbmcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5kZXRlY3Qoc2V0TG5nKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0TG5nKGxuZyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEZpeGVkVFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGaXhlZFQobG5nLCBucywga2V5UHJlZml4KSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcbiAgICAgIHZhciBmaXhlZFQgPSBmdW5jdGlvbiBmaXhlZFQoa2V5LCBvcHRzKSB7XG4gICAgICAgIHZhciBvcHRpb25zO1xuICAgICAgICBpZiAoX3R5cGVvZihvcHRzKSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIHJlc3QgPSBuZXcgQXJyYXkoX2xlbjMgPiAyID8gX2xlbjMgLSAyIDogMCksIF9rZXkzID0gMjsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgICAgICAgICAgcmVzdFtfa2V5MyAtIDJdID0gYXJndW1lbnRzW19rZXkzXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgb3B0aW9ucyA9IF90aGlzNS5vcHRpb25zLm92ZXJsb2FkVHJhbnNsYXRpb25PcHRpb25IYW5kbGVyKFtrZXksIG9wdHNdLmNvbmNhdChyZXN0KSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucyA9IF9vYmplY3RTcHJlYWQoe30sIG9wdHMpO1xuICAgICAgICB9XG4gICAgICAgIG9wdGlvbnMubG5nID0gb3B0aW9ucy5sbmcgfHwgZml4ZWRULmxuZztcbiAgICAgICAgb3B0aW9ucy5sbmdzID0gb3B0aW9ucy5sbmdzIHx8IGZpeGVkVC5sbmdzO1xuICAgICAgICBvcHRpb25zLm5zID0gb3B0aW9ucy5ucyB8fCBmaXhlZFQubnM7XG4gICAgICAgIG9wdGlvbnMua2V5UHJlZml4ID0gb3B0aW9ucy5rZXlQcmVmaXggfHwga2V5UHJlZml4IHx8IGZpeGVkVC5rZXlQcmVmaXg7XG4gICAgICAgIHZhciBrZXlTZXBhcmF0b3IgPSBfdGhpczUub3B0aW9ucy5rZXlTZXBhcmF0b3IgfHwgJy4nO1xuICAgICAgICB2YXIgcmVzdWx0S2V5ID0gb3B0aW9ucy5rZXlQcmVmaXggPyBcIlwiLmNvbmNhdChvcHRpb25zLmtleVByZWZpeCkuY29uY2F0KGtleVNlcGFyYXRvcikuY29uY2F0KGtleSkgOiBrZXk7XG4gICAgICAgIHJldHVybiBfdGhpczUudChyZXN1bHRLZXksIG9wdGlvbnMpO1xuICAgICAgfTtcbiAgICAgIGlmICh0eXBlb2YgbG5nID09PSAnc3RyaW5nJykge1xuICAgICAgICBmaXhlZFQubG5nID0gbG5nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZml4ZWRULmxuZ3MgPSBsbmc7XG4gICAgICB9XG4gICAgICBmaXhlZFQubnMgPSBucztcbiAgICAgIGZpeGVkVC5rZXlQcmVmaXggPSBrZXlQcmVmaXg7XG4gICAgICByZXR1cm4gZml4ZWRUO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHQoKSB7XG4gICAgICB2YXIgX3RoaXMkdHJhbnNsYXRvcjtcbiAgICAgIHJldHVybiB0aGlzLnRyYW5zbGF0b3IgJiYgKF90aGlzJHRyYW5zbGF0b3IgPSB0aGlzLnRyYW5zbGF0b3IpLnRyYW5zbGF0ZS5hcHBseShfdGhpcyR0cmFuc2xhdG9yLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJleGlzdHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXhpc3RzKCkge1xuICAgICAgdmFyIF90aGlzJHRyYW5zbGF0b3IyO1xuICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRvciAmJiAoX3RoaXMkdHJhbnNsYXRvcjIgPSB0aGlzLnRyYW5zbGF0b3IpLmV4aXN0cy5hcHBseShfdGhpcyR0cmFuc2xhdG9yMiwgYXJndW1lbnRzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0RGVmYXVsdE5hbWVzcGFjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREZWZhdWx0TmFtZXNwYWNlKG5zKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuZGVmYXVsdE5TID0gbnM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhc0xvYWRlZE5hbWVzcGFjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNMb2FkZWROYW1lc3BhY2UobnMpIHtcbiAgICAgIHZhciBfdGhpczYgPSB0aGlzO1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgICAgaWYgKCF0aGlzLmlzSW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIud2FybignaGFzTG9hZGVkTmFtZXNwYWNlOiBpMThuZXh0IHdhcyBub3QgaW5pdGlhbGl6ZWQnLCB0aGlzLmxhbmd1YWdlcyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGlmICghdGhpcy5sYW5ndWFnZXMgfHwgIXRoaXMubGFuZ3VhZ2VzLmxlbmd0aCkge1xuICAgICAgICB0aGlzLmxvZ2dlci53YXJuKCdoYXNMb2FkZWROYW1lc3BhY2U6IGkxOG4ubGFuZ3VhZ2VzIHdlcmUgdW5kZWZpbmVkIG9yIGVtcHR5JywgdGhpcy5sYW5ndWFnZXMpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICB2YXIgbG5nID0gdGhpcy5yZXNvbHZlZExhbmd1YWdlIHx8IHRoaXMubGFuZ3VhZ2VzWzBdO1xuICAgICAgdmFyIGZhbGxiYWNrTG5nID0gdGhpcy5vcHRpb25zID8gdGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nIDogZmFsc2U7XG4gICAgICB2YXIgbGFzdExuZyA9IHRoaXMubGFuZ3VhZ2VzW3RoaXMubGFuZ3VhZ2VzLmxlbmd0aCAtIDFdO1xuICAgICAgaWYgKGxuZy50b0xvd2VyQ2FzZSgpID09PSAnY2ltb2RlJykgcmV0dXJuIHRydWU7XG4gICAgICB2YXIgbG9hZE5vdFBlbmRpbmcgPSBmdW5jdGlvbiBsb2FkTm90UGVuZGluZyhsLCBuKSB7XG4gICAgICAgIHZhciBsb2FkU3RhdGUgPSBfdGhpczYuc2VydmljZXMuYmFja2VuZENvbm5lY3Rvci5zdGF0ZVtcIlwiLmNvbmNhdChsLCBcInxcIikuY29uY2F0KG4pXTtcbiAgICAgICAgcmV0dXJuIGxvYWRTdGF0ZSA9PT0gLTEgfHwgbG9hZFN0YXRlID09PSAyO1xuICAgICAgfTtcbiAgICAgIGlmIChvcHRpb25zLnByZWNoZWNrKSB7XG4gICAgICAgIHZhciBwcmVSZXN1bHQgPSBvcHRpb25zLnByZWNoZWNrKHRoaXMsIGxvYWROb3RQZW5kaW5nKTtcbiAgICAgICAgaWYgKHByZVJlc3VsdCAhPT0gdW5kZWZpbmVkKSByZXR1cm4gcHJlUmVzdWx0O1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuaGFzUmVzb3VyY2VCdW5kbGUobG5nLCBucykpIHJldHVybiB0cnVlO1xuICAgICAgaWYgKCF0aGlzLnNlcnZpY2VzLmJhY2tlbmRDb25uZWN0b3IuYmFja2VuZCB8fCB0aGlzLm9wdGlvbnMucmVzb3VyY2VzICYmICF0aGlzLm9wdGlvbnMucGFydGlhbEJ1bmRsZWRMYW5ndWFnZXMpIHJldHVybiB0cnVlO1xuICAgICAgaWYgKGxvYWROb3RQZW5kaW5nKGxuZywgbnMpICYmICghZmFsbGJhY2tMbmcgfHwgbG9hZE5vdFBlbmRpbmcobGFzdExuZywgbnMpKSkgcmV0dXJuIHRydWU7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxvYWROYW1lc3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWROYW1lc3BhY2VzKG5zLCBjYWxsYmFjaykge1xuICAgICAgdmFyIF90aGlzNyA9IHRoaXM7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgaWYgKCF0aGlzLm9wdGlvbnMubnMpIHtcbiAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBucyA9PT0gJ3N0cmluZycpIG5zID0gW25zXTtcbiAgICAgIG5zLmZvckVhY2goZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgaWYgKF90aGlzNy5vcHRpb25zLm5zLmluZGV4T2YobikgPCAwKSBfdGhpczcub3B0aW9ucy5ucy5wdXNoKG4pO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmxvYWRSZXNvdXJjZXMoZnVuY3Rpb24gKGVycikge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKCk7XG4gICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soZXJyKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkTGFuZ3VhZ2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRMYW5ndWFnZXMobG5ncywgY2FsbGJhY2spIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG4gICAgICBpZiAodHlwZW9mIGxuZ3MgPT09ICdzdHJpbmcnKSBsbmdzID0gW2xuZ3NdO1xuICAgICAgdmFyIHByZWxvYWRlZCA9IHRoaXMub3B0aW9ucy5wcmVsb2FkIHx8IFtdO1xuICAgICAgdmFyIG5ld0xuZ3MgPSBsbmdzLmZpbHRlcihmdW5jdGlvbiAobG5nKSB7XG4gICAgICAgIHJldHVybiBwcmVsb2FkZWQuaW5kZXhPZihsbmcpIDwgMDtcbiAgICAgIH0pO1xuICAgICAgaWYgKCFuZXdMbmdzLmxlbmd0aCkge1xuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKCk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMub3B0aW9ucy5wcmVsb2FkID0gcHJlbG9hZGVkLmNvbmNhdChuZXdMbmdzKTtcbiAgICAgIHRoaXMubG9hZFJlc291cmNlcyhmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoKTtcbiAgICAgICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjayhlcnIpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRpclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkaXIobG5nKSB7XG4gICAgICBpZiAoIWxuZykgbG5nID0gdGhpcy5yZXNvbHZlZExhbmd1YWdlIHx8ICh0aGlzLmxhbmd1YWdlcyAmJiB0aGlzLmxhbmd1YWdlcy5sZW5ndGggPiAwID8gdGhpcy5sYW5ndWFnZXNbMF0gOiB0aGlzLmxhbmd1YWdlKTtcbiAgICAgIGlmICghbG5nKSByZXR1cm4gJ3J0bCc7XG4gICAgICB2YXIgcnRsTG5ncyA9IFsnYXInLCAnc2h1JywgJ3NxcicsICdzc2gnLCAneGFhJywgJ3loZCcsICd5dWQnLCAnYWFvJywgJ2FiaCcsICdhYnYnLCAnYWNtJywgJ2FjcScsICdhY3cnLCAnYWN4JywgJ2FjeScsICdhZGYnLCAnYWRzJywgJ2FlYicsICdhZWMnLCAnYWZiJywgJ2FqcCcsICdhcGMnLCAnYXBkJywgJ2FyYicsICdhcnEnLCAnYXJzJywgJ2FyeScsICdhcnonLCAnYXV6JywgJ2F2bCcsICdheWgnLCAnYXlsJywgJ2F5bicsICdheXAnLCAnYmJ6JywgJ3BnYScsICdoZScsICdpdycsICdwcycsICdwYnQnLCAncGJ1JywgJ3BzdCcsICdwcnAnLCAncHJkJywgJ3VnJywgJ3VyJywgJ3lkZCcsICd5ZHMnLCAneWloJywgJ2ppJywgJ3lpJywgJ2hibycsICdtZW4nLCAneG1uJywgJ2ZhJywgJ2pwcicsICdwZW8nLCAncGVzJywgJ3BycycsICdkdicsICdzYW0nLCAnY2tiJ107XG4gICAgICB2YXIgbGFuZ3VhZ2VVdGlscyA9IHRoaXMuc2VydmljZXMgJiYgdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzIHx8IG5ldyBMYW5ndWFnZVV0aWwoZ2V0KCkpO1xuICAgICAgcmV0dXJuIHJ0bExuZ3MuaW5kZXhPZihsYW5ndWFnZVV0aWxzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGxuZykpID4gLTEgfHwgbG5nLnRvTG93ZXJDYXNlKCkuaW5kZXhPZignLWFyYWInKSA+IDEgPyAncnRsJyA6ICdsdHInO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9uZUluc3RhbmNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb25lSW5zdGFuY2UoKSB7XG4gICAgICB2YXIgX3RoaXM4ID0gdGhpcztcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbm9vcDtcbiAgICAgIHZhciBtZXJnZWRPcHRpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMub3B0aW9ucyksIG9wdGlvbnMpLCB7XG4gICAgICAgIGlzQ2xvbmU6IHRydWVcbiAgICAgIH0pO1xuICAgICAgdmFyIGNsb25lID0gbmV3IEkxOG4obWVyZ2VkT3B0aW9ucyk7XG4gICAgICBpZiAob3B0aW9ucy5kZWJ1ZyAhPT0gdW5kZWZpbmVkIHx8IG9wdGlvbnMucHJlZml4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2xvbmUubG9nZ2VyID0gY2xvbmUubG9nZ2VyLmNsb25lKG9wdGlvbnMpO1xuICAgICAgfVxuICAgICAgdmFyIG1lbWJlcnNUb0NvcHkgPSBbJ3N0b3JlJywgJ3NlcnZpY2VzJywgJ2xhbmd1YWdlJ107XG4gICAgICBtZW1iZXJzVG9Db3B5LmZvckVhY2goZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgY2xvbmVbbV0gPSBfdGhpczhbbV07XG4gICAgICB9KTtcbiAgICAgIGNsb25lLnNlcnZpY2VzID0gX29iamVjdFNwcmVhZCh7fSwgdGhpcy5zZXJ2aWNlcyk7XG4gICAgICBjbG9uZS5zZXJ2aWNlcy51dGlscyA9IHtcbiAgICAgICAgaGFzTG9hZGVkTmFtZXNwYWNlOiBjbG9uZS5oYXNMb2FkZWROYW1lc3BhY2UuYmluZChjbG9uZSlcbiAgICAgIH07XG4gICAgICBjbG9uZS50cmFuc2xhdG9yID0gbmV3IFRyYW5zbGF0b3IoY2xvbmUuc2VydmljZXMsIGNsb25lLm9wdGlvbnMpO1xuICAgICAgY2xvbmUudHJhbnNsYXRvci5vbignKicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjQgPiAxID8gX2xlbjQgLSAxIDogMCksIF9rZXk0ID0gMTsgX2tleTQgPCBfbGVuNDsgX2tleTQrKykge1xuICAgICAgICAgIGFyZ3NbX2tleTQgLSAxXSA9IGFyZ3VtZW50c1tfa2V5NF07XG4gICAgICAgIH1cbiAgICAgICAgY2xvbmUuZW1pdC5hcHBseShjbG9uZSwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgfSk7XG4gICAgICBjbG9uZS5pbml0KG1lcmdlZE9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICAgIGNsb25lLnRyYW5zbGF0b3Iub3B0aW9ucyA9IGNsb25lLm9wdGlvbnM7XG4gICAgICBjbG9uZS50cmFuc2xhdG9yLmJhY2tlbmRDb25uZWN0b3Iuc2VydmljZXMudXRpbHMgPSB7XG4gICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogY2xvbmUuaGFzTG9hZGVkTmFtZXNwYWNlLmJpbmQoY2xvbmUpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b0pTT05cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgb3B0aW9uczogdGhpcy5vcHRpb25zLFxuICAgICAgICBzdG9yZTogdGhpcy5zdG9yZSxcbiAgICAgICAgbGFuZ3VhZ2U6IHRoaXMubGFuZ3VhZ2UsXG4gICAgICAgIGxhbmd1YWdlczogdGhpcy5sYW5ndWFnZXMsXG4gICAgICAgIHJlc29sdmVkTGFuZ3VhZ2U6IHRoaXMucmVzb2x2ZWRMYW5ndWFnZVxuICAgICAgfTtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIEkxOG47XG59KEV2ZW50RW1pdHRlcik7XG5fZGVmaW5lUHJvcGVydHkoSTE4biwgXCJjcmVhdGVJbnN0YW5jZVwiLCBmdW5jdGlvbiAoKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gIHJldHVybiBuZXcgSTE4bihvcHRpb25zLCBjYWxsYmFjayk7XG59KTtcbnZhciBpbnN0YW5jZSA9IEkxOG4uY3JlYXRlSW5zdGFuY2UoKTtcbmluc3RhbmNlLmNyZWF0ZUluc3RhbmNlID0gSTE4bi5jcmVhdGVJbnN0YW5jZTtcblxudmFyIGNyZWF0ZUluc3RhbmNlID0gaW5zdGFuY2UuY3JlYXRlSW5zdGFuY2U7XG52YXIgZGlyID0gaW5zdGFuY2UuZGlyO1xudmFyIGluaXQgPSBpbnN0YW5jZS5pbml0O1xudmFyIGxvYWRSZXNvdXJjZXMgPSBpbnN0YW5jZS5sb2FkUmVzb3VyY2VzO1xudmFyIHJlbG9hZFJlc291cmNlcyA9IGluc3RhbmNlLnJlbG9hZFJlc291cmNlcztcbnZhciB1c2UgPSBpbnN0YW5jZS51c2U7XG52YXIgY2hhbmdlTGFuZ3VhZ2UgPSBpbnN0YW5jZS5jaGFuZ2VMYW5ndWFnZTtcbnZhciBnZXRGaXhlZFQgPSBpbnN0YW5jZS5nZXRGaXhlZFQ7XG52YXIgdCA9IGluc3RhbmNlLnQ7XG52YXIgZXhpc3RzID0gaW5zdGFuY2UuZXhpc3RzO1xudmFyIHNldERlZmF1bHROYW1lc3BhY2UgPSBpbnN0YW5jZS5zZXREZWZhdWx0TmFtZXNwYWNlO1xudmFyIGhhc0xvYWRlZE5hbWVzcGFjZSA9IGluc3RhbmNlLmhhc0xvYWRlZE5hbWVzcGFjZTtcbnZhciBsb2FkTmFtZXNwYWNlcyA9IGluc3RhbmNlLmxvYWROYW1lc3BhY2VzO1xudmFyIGxvYWRMYW5ndWFnZXMgPSBpbnN0YW5jZS5sb2FkTGFuZ3VhZ2VzO1xuXG5leHBvcnQgeyBjaGFuZ2VMYW5ndWFnZSwgY3JlYXRlSW5zdGFuY2UsIGluc3RhbmNlIGFzIGRlZmF1bHQsIGRpciwgZXhpc3RzLCBnZXRGaXhlZFQsIGhhc0xvYWRlZE5hbWVzcGFjZSwgaW5pdCwgbG9hZExhbmd1YWdlcywgbG9hZE5hbWVzcGFjZXMsIGxvYWRSZXNvdXJjZXMsIHJlbG9hZFJlc291cmNlcywgc2V0RGVmYXVsdE5hbWVzcGFjZSwgdCwgdXNlIH07XG4iLCJpbXBvcnQgYXJyYXlXaXRoSG9sZXMgZnJvbSBcIi4vYXJyYXlXaXRoSG9sZXMuanNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanNcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9BcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufSIsImltcG9ydCBhcnJheUxpa2VUb0FycmF5IGZyb20gXCIuL2FycmF5TGlrZVRvQXJyYXkuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcbn0iLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrJztcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MnO1xuXG52YXIgYXJyID0gW107XG52YXIgZWFjaCA9IGFyci5mb3JFYWNoO1xudmFyIHNsaWNlID0gYXJyLnNsaWNlO1xuZnVuY3Rpb24gZGVmYXVsdHMob2JqKSB7XG4gIGVhY2guY2FsbChzbGljZS5jYWxsKGFyZ3VtZW50cywgMSksIGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICBpZiAoc291cmNlKSB7XG4gICAgICBmb3IgKHZhciBwcm9wIGluIHNvdXJjZSkge1xuICAgICAgICBpZiAob2JqW3Byb3BdID09PSB1bmRlZmluZWQpIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICByZXR1cm4gb2JqO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udHJvbC1yZWdleFxudmFyIGZpZWxkQ29udGVudFJlZ0V4cCA9IC9eW1xcdTAwMDlcXHUwMDIwLVxcdTAwN2VcXHUwMDgwLVxcdTAwZmZdKyQvO1xudmFyIHNlcmlhbGl6ZUNvb2tpZSA9IGZ1bmN0aW9uIHNlcmlhbGl6ZUNvb2tpZShuYW1lLCB2YWwsIG9wdGlvbnMpIHtcbiAgdmFyIG9wdCA9IG9wdGlvbnMgfHwge307XG4gIG9wdC5wYXRoID0gb3B0LnBhdGggfHwgJy8nO1xuICB2YXIgdmFsdWUgPSBlbmNvZGVVUklDb21wb25lbnQodmFsKTtcbiAgdmFyIHN0ciA9IFwiXCIuY29uY2F0KG5hbWUsIFwiPVwiKS5jb25jYXQodmFsdWUpO1xuICBpZiAob3B0Lm1heEFnZSA+IDApIHtcbiAgICB2YXIgbWF4QWdlID0gb3B0Lm1heEFnZSAtIDA7XG4gICAgaWYgKE51bWJlci5pc05hTihtYXhBZ2UpKSB0aHJvdyBuZXcgRXJyb3IoJ21heEFnZSBzaG91bGQgYmUgYSBOdW1iZXInKTtcbiAgICBzdHIgKz0gXCI7IE1heC1BZ2U9XCIuY29uY2F0KE1hdGguZmxvb3IobWF4QWdlKSk7XG4gIH1cbiAgaWYgKG9wdC5kb21haW4pIHtcbiAgICBpZiAoIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KG9wdC5kb21haW4pKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZG9tYWluIGlzIGludmFsaWQnKTtcbiAgICB9XG4gICAgc3RyICs9IFwiOyBEb21haW49XCIuY29uY2F0KG9wdC5kb21haW4pO1xuICB9XG4gIGlmIChvcHQucGF0aCkge1xuICAgIGlmICghZmllbGRDb250ZW50UmVnRXhwLnRlc3Qob3B0LnBhdGgpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gcGF0aCBpcyBpbnZhbGlkJyk7XG4gICAgfVxuICAgIHN0ciArPSBcIjsgUGF0aD1cIi5jb25jYXQob3B0LnBhdGgpO1xuICB9XG4gIGlmIChvcHQuZXhwaXJlcykge1xuICAgIGlmICh0eXBlb2Ygb3B0LmV4cGlyZXMudG9VVENTdHJpbmcgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBleHBpcmVzIGlzIGludmFsaWQnKTtcbiAgICB9XG4gICAgc3RyICs9IFwiOyBFeHBpcmVzPVwiLmNvbmNhdChvcHQuZXhwaXJlcy50b1VUQ1N0cmluZygpKTtcbiAgfVxuICBpZiAob3B0Lmh0dHBPbmx5KSBzdHIgKz0gJzsgSHR0cE9ubHknO1xuICBpZiAob3B0LnNlY3VyZSkgc3RyICs9ICc7IFNlY3VyZSc7XG4gIGlmIChvcHQuc2FtZVNpdGUpIHtcbiAgICB2YXIgc2FtZVNpdGUgPSB0eXBlb2Ygb3B0LnNhbWVTaXRlID09PSAnc3RyaW5nJyA/IG9wdC5zYW1lU2l0ZS50b0xvd2VyQ2FzZSgpIDogb3B0LnNhbWVTaXRlO1xuICAgIHN3aXRjaCAoc2FtZVNpdGUpIHtcbiAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGF4JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPUxheCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaWN0JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1Ob25lJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZCcpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufTtcbnZhciBjb29raWUgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKG5hbWUsIHZhbHVlLCBtaW51dGVzLCBkb21haW4pIHtcbiAgICB2YXIgY29va2llT3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDoge1xuICAgICAgcGF0aDogJy8nLFxuICAgICAgc2FtZVNpdGU6ICdzdHJpY3QnXG4gICAgfTtcbiAgICBpZiAobWludXRlcykge1xuICAgICAgY29va2llT3B0aW9ucy5leHBpcmVzID0gbmV3IERhdGUoKTtcbiAgICAgIGNvb2tpZU9wdGlvbnMuZXhwaXJlcy5zZXRUaW1lKGNvb2tpZU9wdGlvbnMuZXhwaXJlcy5nZXRUaW1lKCkgKyBtaW51dGVzICogNjAgKiAxMDAwKTtcbiAgICB9XG4gICAgaWYgKGRvbWFpbikgY29va2llT3B0aW9ucy5kb21haW4gPSBkb21haW47XG4gICAgZG9jdW1lbnQuY29va2llID0gc2VyaWFsaXplQ29va2llKG5hbWUsIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSksIGNvb2tpZU9wdGlvbnMpO1xuICB9LFxuICByZWFkOiBmdW5jdGlvbiByZWFkKG5hbWUpIHtcbiAgICB2YXIgbmFtZUVRID0gXCJcIi5jb25jYXQobmFtZSwgXCI9XCIpO1xuICAgIHZhciBjYSA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2EubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBjID0gY2FbaV07XG4gICAgICB3aGlsZSAoYy5jaGFyQXQoMCkgPT09ICcgJykge1xuICAgICAgICBjID0gYy5zdWJzdHJpbmcoMSwgYy5sZW5ndGgpO1xuICAgICAgfVxuICAgICAgaWYgKGMuaW5kZXhPZihuYW1lRVEpID09PSAwKSByZXR1cm4gYy5zdWJzdHJpbmcobmFtZUVRLmxlbmd0aCwgYy5sZW5ndGgpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbiAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgIHRoaXMuY3JlYXRlKG5hbWUsICcnLCAtMSk7XG4gIH1cbn07XG52YXIgY29va2llJDEgPSB7XG4gIG5hbWU6ICdjb29raWUnLFxuICBsb29rdXA6IGZ1bmN0aW9uIGxvb2t1cChvcHRpb25zKSB7XG4gICAgdmFyIGZvdW5kO1xuICAgIGlmIChvcHRpb25zLmxvb2t1cENvb2tpZSAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgYyA9IGNvb2tpZS5yZWFkKG9wdGlvbnMubG9va3VwQ29va2llKTtcbiAgICAgIGlmIChjKSBmb3VuZCA9IGM7XG4gICAgfVxuICAgIHJldHVybiBmb3VuZDtcbiAgfSxcbiAgY2FjaGVVc2VyTGFuZ3VhZ2U6IGZ1bmN0aW9uIGNhY2hlVXNlckxhbmd1YWdlKGxuZywgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLmxvb2t1cENvb2tpZSAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb29raWUuY3JlYXRlKG9wdGlvbnMubG9va3VwQ29va2llLCBsbmcsIG9wdGlvbnMuY29va2llTWludXRlcywgb3B0aW9ucy5jb29raWVEb21haW4sIG9wdGlvbnMuY29va2llT3B0aW9ucyk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgcXVlcnlzdHJpbmcgPSB7XG4gIG5hbWU6ICdxdWVyeXN0cmluZycsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc2VhcmNoID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaDtcbiAgICAgIGlmICghd2luZG93LmxvY2F0aW9uLnNlYXJjaCAmJiB3aW5kb3cubG9jYXRpb24uaGFzaCAmJiB3aW5kb3cubG9jYXRpb24uaGFzaC5pbmRleE9mKCc/JykgPiAtMSkge1xuICAgICAgICBzZWFyY2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcod2luZG93LmxvY2F0aW9uLmhhc2guaW5kZXhPZignPycpKTtcbiAgICAgIH1cbiAgICAgIHZhciBxdWVyeSA9IHNlYXJjaC5zdWJzdHJpbmcoMSk7XG4gICAgICB2YXIgcGFyYW1zID0gcXVlcnkuc3BsaXQoJyYnKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFyYW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwb3MgPSBwYXJhbXNbaV0uaW5kZXhPZignPScpO1xuICAgICAgICBpZiAocG9zID4gMCkge1xuICAgICAgICAgIHZhciBrZXkgPSBwYXJhbXNbaV0uc3Vic3RyaW5nKDAsIHBvcyk7XG4gICAgICAgICAgaWYgKGtleSA9PT0gb3B0aW9ucy5sb29rdXBRdWVyeXN0cmluZykge1xuICAgICAgICAgICAgZm91bmQgPSBwYXJhbXNbaV0uc3Vic3RyaW5nKHBvcyArIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZm91bmQ7XG4gIH1cbn07XG5cbnZhciBoYXNMb2NhbFN0b3JhZ2VTdXBwb3J0ID0gbnVsbDtcbnZhciBsb2NhbFN0b3JhZ2VBdmFpbGFibGUgPSBmdW5jdGlvbiBsb2NhbFN0b3JhZ2VBdmFpbGFibGUoKSB7XG4gIGlmIChoYXNMb2NhbFN0b3JhZ2VTdXBwb3J0ICE9PSBudWxsKSByZXR1cm4gaGFzTG9jYWxTdG9yYWdlU3VwcG9ydDtcbiAgdHJ5IHtcbiAgICBoYXNMb2NhbFN0b3JhZ2VTdXBwb3J0ID0gd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubG9jYWxTdG9yYWdlICE9PSBudWxsO1xuICAgIHZhciB0ZXN0S2V5ID0gJ2kxOG5leHQudHJhbnNsYXRlLmJvbyc7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRlc3RLZXksICdmb28nKTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGVzdEtleSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBoYXNMb2NhbFN0b3JhZ2VTdXBwb3J0ID0gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIGhhc0xvY2FsU3RvcmFnZVN1cHBvcnQ7XG59O1xudmFyIGxvY2FsU3RvcmFnZSA9IHtcbiAgbmFtZTogJ2xvY2FsU3RvcmFnZScsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG4gICAgaWYgKG9wdGlvbnMubG9va3VwTG9jYWxTdG9yYWdlICYmIGxvY2FsU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICB2YXIgbG5nID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKG9wdGlvbnMubG9va3VwTG9jYWxTdG9yYWdlKTtcbiAgICAgIGlmIChsbmcpIGZvdW5kID0gbG5nO1xuICAgIH1cbiAgICByZXR1cm4gZm91bmQ7XG4gIH0sXG4gIGNhY2hlVXNlckxhbmd1YWdlOiBmdW5jdGlvbiBjYWNoZVVzZXJMYW5ndWFnZShsbmcsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5sb29rdXBMb2NhbFN0b3JhZ2UgJiYgbG9jYWxTdG9yYWdlQXZhaWxhYmxlKCkpIHtcbiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShvcHRpb25zLmxvb2t1cExvY2FsU3RvcmFnZSwgbG5nKTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciBoYXNTZXNzaW9uU3RvcmFnZVN1cHBvcnQgPSBudWxsO1xudmFyIHNlc3Npb25TdG9yYWdlQXZhaWxhYmxlID0gZnVuY3Rpb24gc2Vzc2lvblN0b3JhZ2VBdmFpbGFibGUoKSB7XG4gIGlmIChoYXNTZXNzaW9uU3RvcmFnZVN1cHBvcnQgIT09IG51bGwpIHJldHVybiBoYXNTZXNzaW9uU3RvcmFnZVN1cHBvcnQ7XG4gIHRyeSB7XG4gICAgaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0ID0gd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UgIT09IG51bGw7XG4gICAgdmFyIHRlc3RLZXkgPSAnaTE4bmV4dC50cmFuc2xhdGUuYm9vJztcbiAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSh0ZXN0S2V5LCAnZm9vJyk7XG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0odGVzdEtleSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBoYXNTZXNzaW9uU3RvcmFnZVN1cHBvcnQgPSBmYWxzZTtcbiAgfVxuICByZXR1cm4gaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0O1xufTtcbnZhciBzZXNzaW9uU3RvcmFnZSA9IHtcbiAgbmFtZTogJ3Nlc3Npb25TdG9yYWdlJyxcbiAgbG9va3VwOiBmdW5jdGlvbiBsb29rdXAob3B0aW9ucykge1xuICAgIHZhciBmb3VuZDtcbiAgICBpZiAob3B0aW9ucy5sb29rdXBTZXNzaW9uU3RvcmFnZSAmJiBzZXNzaW9uU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICB2YXIgbG5nID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0ob3B0aW9ucy5sb29rdXBTZXNzaW9uU3RvcmFnZSk7XG4gICAgICBpZiAobG5nKSBmb3VuZCA9IGxuZztcbiAgICB9XG4gICAgcmV0dXJuIGZvdW5kO1xuICB9LFxuICBjYWNoZVVzZXJMYW5ndWFnZTogZnVuY3Rpb24gY2FjaGVVc2VyTGFuZ3VhZ2UobG5nLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMubG9va3VwU2Vzc2lvblN0b3JhZ2UgJiYgc2Vzc2lvblN0b3JhZ2VBdmFpbGFibGUoKSkge1xuICAgICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0ob3B0aW9ucy5sb29rdXBTZXNzaW9uU3RvcmFnZSwgbG5nKTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciBuYXZpZ2F0b3IkMSA9IHtcbiAgbmFtZTogJ25hdmlnYXRvcicsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQgPSBbXTtcbiAgICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChuYXZpZ2F0b3IubGFuZ3VhZ2VzKSB7XG4gICAgICAgIC8vIGNocm9tZSBvbmx5OyBub3QgYW4gYXJyYXksIHNvIGNhbid0IHVzZSAucHVzaC5hcHBseSBpbnN0ZWFkIG9mIGl0ZXJhdGluZ1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5hdmlnYXRvci5sYW5ndWFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBmb3VuZC5wdXNoKG5hdmlnYXRvci5sYW5ndWFnZXNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobmF2aWdhdG9yLnVzZXJMYW5ndWFnZSkge1xuICAgICAgICBmb3VuZC5wdXNoKG5hdmlnYXRvci51c2VyTGFuZ3VhZ2UpO1xuICAgICAgfVxuICAgICAgaWYgKG5hdmlnYXRvci5sYW5ndWFnZSkge1xuICAgICAgICBmb3VuZC5wdXNoKG5hdmlnYXRvci5sYW5ndWFnZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmb3VuZC5sZW5ndGggPiAwID8gZm91bmQgOiB1bmRlZmluZWQ7XG4gIH1cbn07XG5cbnZhciBodG1sVGFnID0ge1xuICBuYW1lOiAnaHRtbFRhZycsXG4gIGxvb2t1cDogZnVuY3Rpb24gbG9va3VwKG9wdGlvbnMpIHtcbiAgICB2YXIgZm91bmQ7XG4gICAgdmFyIGh0bWxUYWcgPSBvcHRpb25zLmh0bWxUYWcgfHwgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgOiBudWxsKTtcbiAgICBpZiAoaHRtbFRhZyAmJiB0eXBlb2YgaHRtbFRhZy5nZXRBdHRyaWJ1dGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGZvdW5kID0gaHRtbFRhZy5nZXRBdHRyaWJ1dGUoJ2xhbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuIGZvdW5kO1xuICB9XG59O1xuXG52YXIgcGF0aCA9IHtcbiAgbmFtZTogJ3BhdGgnLFxuICBsb29rdXA6IGZ1bmN0aW9uIGxvb2t1cChvcHRpb25zKSB7XG4gICAgdmFyIGZvdW5kO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIGxhbmd1YWdlID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLm1hdGNoKC9cXC8oW2EtekEtWi1dKikvZyk7XG4gICAgICBpZiAobGFuZ3VhZ2UgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9va3VwRnJvbVBhdGhJbmRleCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGxhbmd1YWdlW29wdGlvbnMubG9va3VwRnJvbVBhdGhJbmRleF0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmb3VuZCA9IGxhbmd1YWdlW29wdGlvbnMubG9va3VwRnJvbVBhdGhJbmRleF0ucmVwbGFjZSgnLycsICcnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmb3VuZCA9IGxhbmd1YWdlWzBdLnJlcGxhY2UoJy8nLCAnJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvdW5kO1xuICB9XG59O1xuXG52YXIgc3ViZG9tYWluID0ge1xuICBuYW1lOiAnc3ViZG9tYWluJyxcbiAgbG9va3VwOiBmdW5jdGlvbiBsb29rdXAob3B0aW9ucykge1xuICAgIC8vIElmIGdpdmVuIGdldCB0aGUgc3ViZG9tYWluIGluZGV4IGVsc2UgMVxuICAgIHZhciBsb29rdXBGcm9tU3ViZG9tYWluSW5kZXggPSB0eXBlb2Ygb3B0aW9ucy5sb29rdXBGcm9tU3ViZG9tYWluSW5kZXggPT09ICdudW1iZXInID8gb3B0aW9ucy5sb29rdXBGcm9tU3ViZG9tYWluSW5kZXggKyAxIDogMTtcbiAgICAvLyBnZXQgYWxsIG1hdGNoZXMgaWYgd2luZG93LmxvY2F0aW9uLiBpcyBleGlzdGluZ1xuICAgIC8vIGZpcnN0IGl0ZW0gb2YgbWF0Y2ggaXMgdGhlIG1hdGNoIGl0c2VsZiBhbmQgdGhlIHNlY29uZCBpcyB0aGUgZmlyc3QgZ3JvdXAgbWFjaHQgd2hpY2ggc291bGQgYmUgdGhlIGZpcnN0IHN1YmRvbWFpbiBtYXRjaFxuICAgIC8vIGlzIHRoZSBob3N0bmFtZSBubyBwdWJsaWMgZG9tYWluIGdldCB0aGUgb3Igb3B0aW9uIG9mIGxvY2FsaG9zdFxuICAgIHZhciBsYW5ndWFnZSA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgJiYgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLm1hdGNoKC9eKFxcd3syLDV9KVxcLigoW2EtejAtOS1dezEsNjN9XFwuW2Etel17Miw2fSl8bG9jYWxob3N0KS9pKTtcblxuICAgIC8vIGlmIHRoZXJlIGlzIG5vIG1hdGNoIChudWxsKSByZXR1cm4gdW5kZWZpbmVkXG4gICAgaWYgKCFsYW5ndWFnZSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAvLyByZXR1cm4gdGhlIGdpdmVuIGdyb3VwIG1hdGNoXG4gICAgcmV0dXJuIGxhbmd1YWdlW2xvb2t1cEZyb21TdWJkb21haW5JbmRleF07XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRzKCkge1xuICByZXR1cm4ge1xuICAgIG9yZGVyOiBbJ3F1ZXJ5c3RyaW5nJywgJ2Nvb2tpZScsICdsb2NhbFN0b3JhZ2UnLCAnc2Vzc2lvblN0b3JhZ2UnLCAnbmF2aWdhdG9yJywgJ2h0bWxUYWcnXSxcbiAgICBsb29rdXBRdWVyeXN0cmluZzogJ2xuZycsXG4gICAgbG9va3VwQ29va2llOiAnaTE4bmV4dCcsXG4gICAgbG9va3VwTG9jYWxTdG9yYWdlOiAnaTE4bmV4dExuZycsXG4gICAgbG9va3VwU2Vzc2lvblN0b3JhZ2U6ICdpMThuZXh0TG5nJyxcbiAgICAvLyBjYWNoZSB1c2VyIGxhbmd1YWdlXG4gICAgY2FjaGVzOiBbJ2xvY2FsU3RvcmFnZSddLFxuICAgIGV4Y2x1ZGVDYWNoZUZvcjogWydjaW1vZGUnXVxuICAgIC8vIGNvb2tpZU1pbnV0ZXM6IDEwLFxuICAgIC8vIGNvb2tpZURvbWFpbjogJ215RG9tYWluJ1xuICB9O1xufVxudmFyIEJyb3dzZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBCcm93c2VyKHNlcnZpY2VzKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCcm93c2VyKTtcbiAgICB0aGlzLnR5cGUgPSAnbGFuZ3VhZ2VEZXRlY3Rvcic7XG4gICAgdGhpcy5kZXRlY3RvcnMgPSB7fTtcbiAgICB0aGlzLmluaXQoc2VydmljZXMsIG9wdGlvbnMpO1xuICB9XG4gIF9jcmVhdGVDbGFzcyhCcm93c2VyLCBbe1xuICAgIGtleTogXCJpbml0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoc2VydmljZXMpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICAgIHZhciBpMThuT3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gICAgICB0aGlzLnNlcnZpY2VzID0gc2VydmljZXM7XG4gICAgICB0aGlzLm9wdGlvbnMgPSBkZWZhdWx0cyhvcHRpb25zLCB0aGlzLm9wdGlvbnMgfHwge30sIGdldERlZmF1bHRzKCkpO1xuXG4gICAgICAvLyBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5sb29rdXBGcm9tVXJsSW5kZXgpIHRoaXMub3B0aW9ucy5sb29rdXBGcm9tUGF0aEluZGV4ID0gdGhpcy5vcHRpb25zLmxvb2t1cEZyb21VcmxJbmRleDtcbiAgICAgIHRoaXMuaTE4bk9wdGlvbnMgPSBpMThuT3B0aW9ucztcbiAgICAgIHRoaXMuYWRkRGV0ZWN0b3IoY29va2llJDEpO1xuICAgICAgdGhpcy5hZGREZXRlY3RvcihxdWVyeXN0cmluZyk7XG4gICAgICB0aGlzLmFkZERldGVjdG9yKGxvY2FsU3RvcmFnZSk7XG4gICAgICB0aGlzLmFkZERldGVjdG9yKHNlc3Npb25TdG9yYWdlKTtcbiAgICAgIHRoaXMuYWRkRGV0ZWN0b3IobmF2aWdhdG9yJDEpO1xuICAgICAgdGhpcy5hZGREZXRlY3RvcihodG1sVGFnKTtcbiAgICAgIHRoaXMuYWRkRGV0ZWN0b3IocGF0aCk7XG4gICAgICB0aGlzLmFkZERldGVjdG9yKHN1YmRvbWFpbik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImFkZERldGVjdG9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZERldGVjdG9yKGRldGVjdG9yKSB7XG4gICAgICB0aGlzLmRldGVjdG9yc1tkZXRlY3Rvci5uYW1lXSA9IGRldGVjdG9yO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkZXRlY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGV0ZWN0KGRldGVjdGlvbk9yZGVyKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgaWYgKCFkZXRlY3Rpb25PcmRlcikgZGV0ZWN0aW9uT3JkZXIgPSB0aGlzLm9wdGlvbnMub3JkZXI7XG4gICAgICB2YXIgZGV0ZWN0ZWQgPSBbXTtcbiAgICAgIGRldGVjdGlvbk9yZGVyLmZvckVhY2goZnVuY3Rpb24gKGRldGVjdG9yTmFtZSkge1xuICAgICAgICBpZiAoX3RoaXMuZGV0ZWN0b3JzW2RldGVjdG9yTmFtZV0pIHtcbiAgICAgICAgICB2YXIgbG9va3VwID0gX3RoaXMuZGV0ZWN0b3JzW2RldGVjdG9yTmFtZV0ubG9va3VwKF90aGlzLm9wdGlvbnMpO1xuICAgICAgICAgIGlmIChsb29rdXAgJiYgdHlwZW9mIGxvb2t1cCA9PT0gJ3N0cmluZycpIGxvb2t1cCA9IFtsb29rdXBdO1xuICAgICAgICAgIGlmIChsb29rdXApIGRldGVjdGVkID0gZGV0ZWN0ZWQuY29uY2F0KGxvb2t1cCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgaWYgKHRoaXMuc2VydmljZXMubGFuZ3VhZ2VVdGlscy5nZXRCZXN0TWF0Y2hGcm9tQ29kZXMpIHJldHVybiBkZXRlY3RlZDsgLy8gbmV3IGkxOG5leHQgdjE5LjUuMFxuICAgICAgcmV0dXJuIGRldGVjdGVkLmxlbmd0aCA+IDAgPyBkZXRlY3RlZFswXSA6IG51bGw7IC8vIGEgbGl0dGxlIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY2FjaGVVc2VyTGFuZ3VhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2FjaGVVc2VyTGFuZ3VhZ2UobG5nLCBjYWNoZXMpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuICAgICAgaWYgKCFjYWNoZXMpIGNhY2hlcyA9IHRoaXMub3B0aW9ucy5jYWNoZXM7XG4gICAgICBpZiAoIWNhY2hlcykgcmV0dXJuO1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5leGNsdWRlQ2FjaGVGb3IgJiYgdGhpcy5vcHRpb25zLmV4Y2x1ZGVDYWNoZUZvci5pbmRleE9mKGxuZykgPiAtMSkgcmV0dXJuO1xuICAgICAgY2FjaGVzLmZvckVhY2goZnVuY3Rpb24gKGNhY2hlTmFtZSkge1xuICAgICAgICBpZiAoX3RoaXMyLmRldGVjdG9yc1tjYWNoZU5hbWVdKSBfdGhpczIuZGV0ZWN0b3JzW2NhY2hlTmFtZV0uY2FjaGVVc2VyTGFuZ3VhZ2UobG5nLCBfdGhpczIub3B0aW9ucyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIEJyb3dzZXI7XG59KCk7XG5Ccm93c2VyLnR5cGUgPSAnbGFuZ3VhZ2VEZXRlY3Rvcic7XG5cbmV4cG9ydCB7IEJyb3dzZXIgYXMgZGVmYXVsdCB9O1xuIiwiaW1wb3J0IGUgZnJvbVwidm9pZC1lbGVtZW50c1wiO3ZhciB0PS9cXHMoW14nXCIvXFxzPjxdKz8pW1xccy8+XXwoW15cXHM9XSspPVxccz8oXCIuKj9cInwnLio/JykvZztmdW5jdGlvbiBuKG4pe3ZhciByPXt0eXBlOlwidGFnXCIsbmFtZTpcIlwiLHZvaWRFbGVtZW50OiExLGF0dHJzOnt9LGNoaWxkcmVuOltdfSxpPW4ubWF0Y2goLzxcXC8/KFteXFxzXSs/KVsvXFxzPl0vKTtpZihpJiYoci5uYW1lPWlbMV0sKGVbaVsxXV18fFwiL1wiPT09bi5jaGFyQXQobi5sZW5ndGgtMikpJiYoci52b2lkRWxlbWVudD0hMCksci5uYW1lLnN0YXJ0c1dpdGgoXCIhLS1cIikpKXt2YXIgcz1uLmluZGV4T2YoXCItLVxceDNlXCIpO3JldHVybnt0eXBlOlwiY29tbWVudFwiLGNvbW1lbnQ6LTEhPT1zP24uc2xpY2UoNCxzKTpcIlwifX1mb3IodmFyIGE9bmV3IFJlZ0V4cCh0KSxjPW51bGw7bnVsbCE9PShjPWEuZXhlYyhuKSk7KWlmKGNbMF0udHJpbSgpKWlmKGNbMV0pe3ZhciBvPWNbMV0udHJpbSgpLGw9W28sXCJcIl07by5pbmRleE9mKFwiPVwiKT4tMSYmKGw9by5zcGxpdChcIj1cIikpLHIuYXR0cnNbbFswXV09bFsxXSxhLmxhc3RJbmRleC0tfWVsc2UgY1syXSYmKHIuYXR0cnNbY1syXV09Y1szXS50cmltKCkuc3Vic3RyaW5nKDEsY1szXS5sZW5ndGgtMSkpO3JldHVybiByfXZhciByPS88W2EtekEtWjAtOVxcLVxcIVxcL10oPzpcIlteXCJdKlwifCdbXiddKid8W14nXCI+XSkqPi9nLGk9L15cXHMqJC8scz1PYmplY3QuY3JlYXRlKG51bGwpO2Z1bmN0aW9uIGEoZSx0KXtzd2l0Y2godC50eXBlKXtjYXNlXCJ0ZXh0XCI6cmV0dXJuIGUrdC5jb250ZW50O2Nhc2VcInRhZ1wiOnJldHVybiBlKz1cIjxcIit0Lm5hbWUrKHQuYXR0cnM/ZnVuY3Rpb24oZSl7dmFyIHQ9W107Zm9yKHZhciBuIGluIGUpdC5wdXNoKG4rJz1cIicrZVtuXSsnXCInKTtyZXR1cm4gdC5sZW5ndGg/XCIgXCIrdC5qb2luKFwiIFwiKTpcIlwifSh0LmF0dHJzKTpcIlwiKSsodC52b2lkRWxlbWVudD9cIi8+XCI6XCI+XCIpLHQudm9pZEVsZW1lbnQ/ZTplK3QuY2hpbGRyZW4ucmVkdWNlKGEsXCJcIikrXCI8L1wiK3QubmFtZStcIj5cIjtjYXNlXCJjb21tZW50XCI6cmV0dXJuIGUrXCJcXHgzYyEtLVwiK3QuY29tbWVudCtcIi0tXFx4M2VcIn19dmFyIGM9e3BhcnNlOmZ1bmN0aW9uKGUsdCl7dHx8KHQ9e30pLHQuY29tcG9uZW50c3x8KHQuY29tcG9uZW50cz1zKTt2YXIgYSxjPVtdLG89W10sbD0tMSxtPSExO2lmKDAhPT1lLmluZGV4T2YoXCI8XCIpKXt2YXIgdT1lLmluZGV4T2YoXCI8XCIpO2MucHVzaCh7dHlwZTpcInRleHRcIixjb250ZW50Oi0xPT09dT9lOmUuc3Vic3RyaW5nKDAsdSl9KX1yZXR1cm4gZS5yZXBsYWNlKHIsZnVuY3Rpb24ocixzKXtpZihtKXtpZihyIT09XCI8L1wiK2EubmFtZStcIj5cIilyZXR1cm47bT0hMX12YXIgdSxmPVwiL1wiIT09ci5jaGFyQXQoMSksaD1yLnN0YXJ0c1dpdGgoXCJcXHgzYyEtLVwiKSxwPXMrci5sZW5ndGgsZD1lLmNoYXJBdChwKTtpZihoKXt2YXIgdj1uKHIpO3JldHVybiBsPDA/KGMucHVzaCh2KSxjKTooKHU9b1tsXSkuY2hpbGRyZW4ucHVzaCh2KSxjKX1pZihmJiYobCsrLFwidGFnXCI9PT0oYT1uKHIpKS50eXBlJiZ0LmNvbXBvbmVudHNbYS5uYW1lXSYmKGEudHlwZT1cImNvbXBvbmVudFwiLG09ITApLGEudm9pZEVsZW1lbnR8fG18fCFkfHxcIjxcIj09PWR8fGEuY2hpbGRyZW4ucHVzaCh7dHlwZTpcInRleHRcIixjb250ZW50OmUuc2xpY2UocCxlLmluZGV4T2YoXCI8XCIscCkpfSksMD09PWwmJmMucHVzaChhKSwodT1vW2wtMV0pJiZ1LmNoaWxkcmVuLnB1c2goYSksb1tsXT1hKSwoIWZ8fGEudm9pZEVsZW1lbnQpJiYobD4tMSYmKGEudm9pZEVsZW1lbnR8fGEubmFtZT09PXIuc2xpY2UoMiwtMSkpJiYobC0tLGE9LTE9PT1sP2M6b1tsXSksIW0mJlwiPFwiIT09ZCYmZCkpe3U9LTE9PT1sP2M6b1tsXS5jaGlsZHJlbjt2YXIgeD1lLmluZGV4T2YoXCI8XCIscCksZz1lLnNsaWNlKHAsLTE9PT14P3ZvaWQgMDp4KTtpLnRlc3QoZykmJihnPVwiIFwiKSwoeD4tMSYmbCt1Lmxlbmd0aD49MHx8XCIgXCIhPT1nKSYmdS5wdXNoKHt0eXBlOlwidGV4dFwiLGNvbnRlbnQ6Z30pfX0pLGN9LHN0cmluZ2lmeTpmdW5jdGlvbihlKXtyZXR1cm4gZS5yZWR1Y2UoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSthKFwiXCIsdCl9LFwiXCIpfX07ZXhwb3J0IGRlZmF1bHQgYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0bWwtcGFyc2Utc3RyaW5naWZ5Lm1vZHVsZS5qcy5tYXBcbiIsInZhciBtYXRjaEh0bWxFbnRpdHkgPSAvJig/OmFtcHwjMzh8bHR8IzYwfGd0fCM2MnxhcG9zfCMzOXxxdW90fCMzNHxuYnNwfCMxNjB8Y29weXwjMTY5fHJlZ3wjMTc0fGhlbGxpcHwjODIzMHwjeDJGfCM0Nyk7L2c7XG52YXIgaHRtbEVudGl0aWVzID0ge1xuICAnJmFtcDsnOiAnJicsXG4gICcmIzM4Oyc6ICcmJyxcbiAgJyZsdDsnOiAnPCcsXG4gICcmIzYwOyc6ICc8JyxcbiAgJyZndDsnOiAnPicsXG4gICcmIzYyOyc6ICc+JyxcbiAgJyZhcG9zOyc6IFwiJ1wiLFxuICAnJiMzOTsnOiBcIidcIixcbiAgJyZxdW90Oyc6ICdcIicsXG4gICcmIzM0Oyc6ICdcIicsXG4gICcmbmJzcDsnOiAnICcsXG4gICcmIzE2MDsnOiAnICcsXG4gICcmY29weTsnOiAnwqknLFxuICAnJiMxNjk7JzogJ8KpJyxcbiAgJyZyZWc7JzogJ8KuJyxcbiAgJyYjMTc0Oyc6ICfCricsXG4gICcmaGVsbGlwOyc6ICfigKYnLFxuICAnJiM4MjMwOyc6ICfigKYnLFxuICAnJiN4MkY7JzogJy8nLFxuICAnJiM0NzsnOiAnLydcbn07XG5cbnZhciB1bmVzY2FwZUh0bWxFbnRpdHkgPSBmdW5jdGlvbiB1bmVzY2FwZUh0bWxFbnRpdHkobSkge1xuICByZXR1cm4gaHRtbEVudGl0aWVzW21dO1xufTtcblxuZXhwb3J0IHZhciB1bmVzY2FwZSA9IGZ1bmN0aW9uIHVuZXNjYXBlKHRleHQpIHtcbiAgcmV0dXJuIHRleHQucmVwbGFjZShtYXRjaEh0bWxFbnRpdHksIHVuZXNjYXBlSHRtbEVudGl0eSk7XG59OyIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgeyB1bmVzY2FwZSB9IGZyb20gJy4vdW5lc2NhcGUuanMnO1xudmFyIGRlZmF1bHRPcHRpb25zID0ge1xuICBiaW5kSTE4bjogJ2xhbmd1YWdlQ2hhbmdlZCcsXG4gIGJpbmRJMThuU3RvcmU6ICcnLFxuICB0cmFuc0VtcHR5Tm9kZVZhbHVlOiAnJyxcbiAgdHJhbnNTdXBwb3J0QmFzaWNIdG1sTm9kZXM6IHRydWUsXG4gIHRyYW5zV3JhcFRleHROb2RlczogJycsXG4gIHRyYW5zS2VlcEJhc2ljSHRtbE5vZGVzRm9yOiBbJ2JyJywgJ3N0cm9uZycsICdpJywgJ3AnXSxcbiAgdXNlU3VzcGVuc2U6IHRydWUsXG4gIHVuZXNjYXBlOiB1bmVzY2FwZVxufTtcbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0cygpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICBkZWZhdWx0T3B0aW9ucyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdE9wdGlvbnMpLCBvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0cygpIHtcbiAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xufSIsImltcG9ydCB7IHNldERlZmF1bHRzIH0gZnJvbSAnLi9kZWZhdWx0cy5qcyc7XG5pbXBvcnQgeyBzZXRJMThuIH0gZnJvbSAnLi9pMThuSW5zdGFuY2UuanMnO1xuZXhwb3J0IHZhciBpbml0UmVhY3RJMThuZXh0ID0ge1xuICB0eXBlOiAnM3JkUGFydHknLFxuICBpbml0OiBmdW5jdGlvbiBpbml0KGluc3RhbmNlKSB7XG4gICAgc2V0RGVmYXVsdHMoaW5zdGFuY2Uub3B0aW9ucy5yZWFjdCk7XG4gICAgc2V0STE4bihpbnN0YW5jZSk7XG4gIH1cbn07IiwiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSB7IHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsgfSBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXREZWZhdWx0cywgc2V0RGVmYXVsdHMgfSBmcm9tICcuL2RlZmF1bHRzLmpzJztcbmltcG9ydCB7IGdldEkxOG4sIHNldEkxOG4gfSBmcm9tICcuL2kxOG5JbnN0YW5jZS5qcyc7XG5pbXBvcnQgeyBpbml0UmVhY3RJMThuZXh0IH0gZnJvbSAnLi9pbml0UmVhY3RJMThuZXh0LmpzJztcbmV4cG9ydCB7IGdldERlZmF1bHRzLCBzZXREZWZhdWx0cywgZ2V0STE4biwgc2V0STE4biwgaW5pdFJlYWN0STE4bmV4dCB9O1xuZXhwb3J0IHZhciBJMThuQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmV4cG9ydCB2YXIgUmVwb3J0TmFtZXNwYWNlcyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUmVwb3J0TmFtZXNwYWNlcygpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVwb3J0TmFtZXNwYWNlcyk7XG5cbiAgICB0aGlzLnVzZWROYW1lc3BhY2VzID0ge307XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmVwb3J0TmFtZXNwYWNlcywgW3tcbiAgICBrZXk6IFwiYWRkVXNlZE5hbWVzcGFjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkVXNlZE5hbWVzcGFjZXMobmFtZXNwYWNlcykge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgbmFtZXNwYWNlcy5mb3JFYWNoKGZ1bmN0aW9uIChucykge1xuICAgICAgICBpZiAoIV90aGlzLnVzZWROYW1lc3BhY2VzW25zXSkgX3RoaXMudXNlZE5hbWVzcGFjZXNbbnNdID0gdHJ1ZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRVc2VkTmFtZXNwYWNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRVc2VkTmFtZXNwYWNlcygpIHtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnVzZWROYW1lc3BhY2VzKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVwb3J0TmFtZXNwYWNlcztcbn0oKTtcbmV4cG9ydCBmdW5jdGlvbiBjb21wb3NlSW5pdGlhbFByb3BzKEZvckNvbXBvbmVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKGN0eCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgdmFyIGkxOG5Jbml0aWFsUHJvcHMgPSBnZXRJbml0aWFsUHJvcHMoKTtcblxuICAgICAgaWYgKEZvckNvbXBvbmVudC5nZXRJbml0aWFsUHJvcHMpIHtcbiAgICAgICAgRm9yQ29tcG9uZW50LmdldEluaXRpYWxQcm9wcyhjdHgpLnRoZW4oZnVuY3Rpb24gKGNvbXBvbmVudHNJbml0aWFsUHJvcHMpIHtcbiAgICAgICAgICByZXNvbHZlKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY29tcG9uZW50c0luaXRpYWxQcm9wcyksIGkxOG5Jbml0aWFsUHJvcHMpKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXNvbHZlKGkxOG5Jbml0aWFsUHJvcHMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEluaXRpYWxQcm9wcygpIHtcbiAgdmFyIGkxOG4gPSBnZXRJMThuKCk7XG4gIHZhciBuYW1lc3BhY2VzID0gaTE4bi5yZXBvcnROYW1lc3BhY2VzID8gaTE4bi5yZXBvcnROYW1lc3BhY2VzLmdldFVzZWROYW1lc3BhY2VzKCkgOiBbXTtcbiAgdmFyIHJldCA9IHt9O1xuICB2YXIgaW5pdGlhbEkxOG5TdG9yZSA9IHt9O1xuICBpMThuLmxhbmd1YWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XG4gICAgaW5pdGlhbEkxOG5TdG9yZVtsXSA9IHt9O1xuICAgIG5hbWVzcGFjZXMuZm9yRWFjaChmdW5jdGlvbiAobnMpIHtcbiAgICAgIGluaXRpYWxJMThuU3RvcmVbbF1bbnNdID0gaTE4bi5nZXRSZXNvdXJjZUJ1bmRsZShsLCBucykgfHwge307XG4gICAgfSk7XG4gIH0pO1xuICByZXQuaW5pdGlhbEkxOG5TdG9yZSA9IGluaXRpYWxJMThuU3RvcmU7XG4gIHJldC5pbml0aWFsTGFuZ3VhZ2UgPSBpMThuLmxhbmd1YWdlO1xuICByZXR1cm4gcmV0O1xufSIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQ29weXJpZ2h0IChjKSBJbnRlbCBDb3Jwb3JhdGlvbiAyMDE5XG4qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgaTE4biBmcm9tICdpMThuZXh0J1xuaW1wb3J0IExhbmd1YWdlRGV0ZWN0b3IgZnJvbSAnaTE4bmV4dC1icm93c2VyLWxhbmd1YWdlZGV0ZWN0b3InXG5pbXBvcnQgeyBpbml0UmVhY3RJMThuZXh0IH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcblxuaW1wb3J0IHRyYW5zbGF0aW9uRU4gZnJvbSAnLi9wdWJsaWMvbG9jYWxlcy9lbi90cmFuc2xhdGlvbi5qc29uJ1xuaW1wb3J0IHRyYW5zbGF0aW9uVEUgZnJvbSAnLi9wdWJsaWMvbG9jYWxlcy90ZS90cmFuc2xhdGlvbi5qc29uJ1xuaW1wb3J0IHRyYW5zbGF0aW9uRlIgZnJvbSAnLi9wdWJsaWMvbG9jYWxlcy9mci90cmFuc2xhdGlvbi5qc29uJ1xuaW1wb3J0IHRyYW5zbGF0aW9uRVMgZnJvbSAnLi9wdWJsaWMvbG9jYWxlcy9lcy90cmFuc2xhdGlvbi5qc29uJ1xuXG5jb25zdCByZXNvdXJjZXMgPSB7XG4gIGVuOiB7XG4gICAgdHJhbnNsYXRpb25zOiB0cmFuc2xhdGlvbkVOXG4gIH0sXG4gIHRlOiB7XG4gICAgdHJhbnNsYXRpb25zOiB0cmFuc2xhdGlvblRFXG4gIH0sXG4gIGZyOiB7XG4gICAgdHJhbnNsYXRpb25zOiB0cmFuc2xhdGlvbkZSXG4gIH0sXG4gIGVzOiB7XG4gICAgdHJhbnNsYXRpb25zOiB0cmFuc2xhdGlvbkVTXG4gIH1cbn1cblxuaTE4blxuICAudXNlKGluaXRSZWFjdEkxOG5leHQpXG4gIC51c2UoTGFuZ3VhZ2VEZXRlY3RvcilcbiAgLmluaXQoe1xuICAgIHJlc291cmNlcyxcbiAgICBuczogWyd0cmFuc2xhdGlvbnMnXSxcbiAgICBkZWZhdWx0TlM6ICd0cmFuc2xhdGlvbnMnLFxuICAgIGRlYnVnOiBmYWxzZSxcbiAgICBmYWxsYmFja0xuZzogJ2VuJyxcblxuICAgIGludGVycG9sYXRpb246IHtcbiAgICAgIGVzY2FwZVZhbHVlOiBmYWxzZSxcbiAgICAgIGZvcm1hdFNlcGFyYXRvcjogJywnXG4gICAgfVxuICB9KS5jYXRjaCgoKSA9PiBjb25zb2xlLmluZm8oJ2Vycm9yIG9jY3VyZWQnKSlcblxuZXhwb3J0IGRlZmF1bHQgaTE4blxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTlcbiogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tICdyZWFjdC1kb20vY2xpZW50J1xuaW1wb3J0IHsgU29sIH0gZnJvbSAnLi9Tb2wnXG5pbXBvcnQgaTE4biBmcm9tICcuLi8uLi9pMThuJ1xuLy8gR2V0IGJyb3dzZXIgbGFuZ3VhZ2VcbmkxOG4uY2hhbmdlTGFuZ3VhZ2UobmF2aWdhdG9yLmxhbmd1YWdlKS5jYXRjaCgoKSA9PiBjb25zb2xlLmluZm8oJ2Vycm9yIG9jY3VyZWQnKSlcblxuY29uc3QgdXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZilcbmNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXModXJsLnNlYXJjaClcblxuY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc29sJylcbmlmIChyb290RWxlbWVudCAhPSBudWxsKXtcbiAgY29uc3Qgcm9vdCA9IGNyZWF0ZVJvb3Qocm9vdEVsZW1lbnQpXG4gIHJvb3QucmVuZGVyKDxTb2wgZGV2aWNlSWQ9e3BhcmFtcy5nZXQoJ2RldmljZUlkJyl9IGF1dGhUb2tlbj1cImF1dGhUb2tlblwiIG1wc1NlcnZlcj17cGFyYW1zLmdldCgnbXBzU2VydmVyJyl9IC8+KVxufVxuIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInQiLCJ1dGY4Iiwic3RyaW5nVG9CeXRlcyIsImJpbiIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYnl0ZXNUb1N0cmluZyIsImRlY29kZVVSSUNvbXBvbmVudCIsImVzY2FwZSIsImEiLCJsZW5ndGgiLCJwdXNoIiwiY2hhckNvZGVBdCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImpvaW4iLCJyb3RsIiwicm90ciIsImVuZGlhbiIsImNvbnN0cnVjdG9yIiwiTnVtYmVyIiwicmFuZG9tQnl0ZXMiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJieXRlc1RvV29yZHMiLCJzIiwid29yZHNUb0J5dGVzIiwiYnl0ZXNUb0hleCIsInRvU3RyaW5nIiwiaGV4VG9CeXRlcyIsInBhcnNlSW50Iiwic3Vic3RyIiwiYnl0ZXNUb0Jhc2U2NCIsIm8iLCJpIiwiY2hhckF0IiwiYmFzZTY0VG9CeXRlcyIsInJlcGxhY2UiLCJpbmRleE9mIiwicG93IiwiaXNCdWZmZXIiLCJyZWFkRmxvYXRMRSIsInNsaWNlIiwiX2lzQnVmZmVyIiwiciIsIm4iLCJlbmNvZGluZyIsIkFycmF5IiwicHJvdG90eXBlIiwiY2FsbCIsImlzQXJyYXkiLCJVaW50OEFycmF5IiwibCIsImgiLCJjIiwicCIsImQiLCJ2IiwiYiIsIl9mZiIsInUiLCJfZ2ciLCJmIiwiX2hoIiwiZyIsIl9paSIsIlMiLCJtIiwiXyIsIkMiLCJfYmxvY2tzaXplIiwiX2RpZ2VzdHNpemUiLCJFcnJvciIsImFzQnl0ZXMiLCJhc1N0cmluZyIsIkgiLCJzdXBlciIsInRoaXMiLCJwcm90b2NvbCIsImluZmxhdGUiLCJpbmZsYXRlSW5pdCIsImJwcCIsInN0YXRlIiwiZm9jdXNNb2RlIiwidXNlWlJMRSIsImZyYW1lUmF0ZURlbGF5IiwiY2FudmFzQ3R4Iiwic3BhcmVjYWNoZSIsImJ1dHRvbm1hc2siLCJjYW52YXNDb250cm9sIiwiY2FudmFzIiwibGFzdE1vdXNlTW92ZVRpbWUiLCJEYXRlIiwiZ2V0VGltZSIsImxvZ2dlciIsInNldERlc2tGb2N1cyIsImdldERlc2tGb2N1cyIsInByb2Nlc3NEYXRhIiwib25Qcm9jZXNzRGF0YSIsIm9uU3RhdGVDaGFuZ2UiLCJ2ZXJib3NlIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJ3aWR0aCIsInN0YXJ0IiwiaW5mbGF0ZVJlc2V0Iiwib25Ldm1EYXRhUGVuZGluZyIsIm9uS3ZtRGF0YUFjayIsImt2bURhdGFTdXBwb3J0ZWQiLCJvblNlbmRLdm1EYXRhIiwidXJsdmFycyIsImt2bWRhdGF0cmFjZSIsImNvbnNvbGUiLCJsb2ciLCJvblNlbmQiLCJJbnRUb1N0ciIsIk4iLCJLIiwiU09MIiwiS1ZNIiwiSURFUiIsImZpbGVSZWFkZXIiLCJmaWxlUmVhZGVySW5Vc2UiLCJmaWxlUmVhZGVyQWNjIiwicmFuZG9tTm9uY2VDaGFycyIsImhvc3QiLCJwb3J0IiwidXNlciIsInBhc3MiLCJ0bHMiLCJ0bHN2MW9ubHkiLCJSZWRpcmVjdFN0YXJ0U29sIiwiUmVkaXJlY3RTdGFydEt2bSIsIlJlZGlyZWN0U3RhcnRJZGVyIiwic2VydmVyIiwiYW10QWNjdW11bGF0b3IiLCJhdXRoVXJpIiwiYXV0aFRva2VuIiwiZ2V0V3NMb2NhdGlvbiIsImlzQnJvd3NlciIsIndpbmRvdyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsImRlYnVnIiwiY29ubmVjdFN0YXRlIiwic29ja2V0Iiwib25vcGVuIiwib25Tb2NrZXRDb25uZWN0ZWQiLCJiaW5kIiwib25tZXNzYWdlIiwib25NZXNzYWdlIiwib25jbG9zZSIsIm9uU29ja2V0Q2xvc2VkIiwicmVhZEFzQmluYXJ5U3RyaW5nIiwib25sb2FkIiwib25Tb2NrZXREYXRhIiwidGFyZ2V0IiwicmVzdWx0IiwiQmxvYiIsInNoaWZ0IiwicmVhZEFzQXJyYXlCdWZmZXIiLCJvbmxvYWRlbmQiLCJyZWRpcnRyYWNlIiwiaW5mbyIsInNvY2tldFNlbmQiLCJpbkRhdGFDb3VudCIsImRhdGEiLCJieXRlTGVuZ3RoIiwiZXJyb3IiLCJzdG9wIiwib25FcnJvciIsIlJlYWRJbnRYIiwiaW5jbHVkZXMiLCJJbnRUb1N0clgiLCJ3YXJuIiwiYW10U2VxdWVuY2UiLCJTaG9ydFRvU3RyWCIsImdlbmVyYXRlUmFuZG9tTm9uY2UiLCJoZXhfbWQ1IiwiYW10S2VlcEFsaXZlVGltZXIiLCJzZXRJbnRlcnZhbCIsInNlbmRBbXRLZWVwQWxpdmUiLCJvblN0YXJ0IiwicnN0cjJoZXgiLCJyZWFkeVN0YXRlIiwic2VuZCIsImJ1ZmZlciIsIm9uTmV3U3RhdGUiLCJvblN0YXRlQ2hhbmdlZCIsImNsb3NlIiwiY2xlYXJJbnRlcnZhbCIsInRlcm1pbmFsRW11bGF0aW9uIiwiZnhFbXVsYXRpb24iLCJmeExpbmVCcmVhayIsIkFzY2lpVG9Vbmljb2RlIiwiQXNjaWlUb1VuaWNvZGVJbnRlbCIsIlN0YXRlQ2hhbmdlIiwiVGVybVNlbmRLZXlzIiwiayIsIm1pbkxldmVsIiwiVkVSQk9TRSIsIklORk8iLCJERUJVRyIsIldBUk5JTkciLCJFUlJPUiIsIlJlYWRTaG9ydCIsIlJlYWRTaG9ydFgiLCJSZWFkSW50IiwiUmVhZFNJbnQiLCJTaG9ydFRvU3RyIiwiU3BsaXRBcnJheSIsInNwbGl0IiwiQ2xvbmUiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJFc2NhcGVIdG1sIiwiQXJyYXlFbGVtZW50TW92ZSIsInNwbGljZSIsIk9iamVjdFRvU3RyaW5nRXgiLCJnYXAiLCJPYmplY3QiLCJPYmplY3RUb1N0cmluZ0V4MiIsImdhcDIiLCJPYmplY3RUb1N0cmluZyIsIk9iamVjdFRvU3RyaW5nMiIsImNoYXIyaGV4IiwidG9VcHBlckNhc2UiLCJlbmNvZGVfdXRmOCIsImRlY29kZV91dGY4IiwiZGF0YTJibG9iIiwidHJhZGVtYXJrcyIsIiQiLCJhY2MiLCJzdGF0ZVByb2Nlc3NvckZhYyIsInVwZGF0ZVJGQlN0YXRlIiwicGFyZW50IiwiZ2V0UHJvY2Vzc29yIiwicHJvY2Vzc1N0YXRlIiwiWCIsIkRlY29kZSIsImoiLCJzZXRQaXhlbCIsInB1dEltYWdlIiwiZml4Q29sb3IiLCJyb3RYIiwicm90WSIsIndzU29ja2V0IiwicmxlRGVjb2RlciIsInNwYXJldyIsInNwYXJlaCIsInNwYXJldzIiLCJzcGFyZWgyIiwicm90YXRpb24iLCJzcGFyZSIsImZRIiwiY3JlYXRlSW1hZ2VEYXRhIiwiU2NyZWVuV2lkdGgiLCJyd2lkdGgiLCJoZWlnaHQiLCJTY3JlZW5IZWlnaHQiLCJyaGVpZ2h0Iiwib25TY3JlZW5TaXplQ2hhbmdlIiwianciLCJYbiIsInNlbmRSZWZyZXNoIiwic2V0VGltZW91dCIsIlUiLCJzZXJ2ZXJDdXRUZXh0SGFuZGxlciIsImhhbmRsZVNlcnZlckN1dFRleHQiLCJ3IiwiSSIsIm9uS3ZtRGF0YSIsInVwZGF0ZVNjcmVlbkRpbWVuc2lvbnMiLCJvbGRNb3VzZVgiLCJDdSIsIlV0IiwiZXoiLCJsbCIsIm1DIiwid1ciLCJzdGF0ZVByb2Nlc3NvcnMiLCJRIiwidGVybWluYWwiLCJjYXB0dXJlIiwiY2xlYXJUZXJtaW5hbCIsInByb2Nlc3NEYXRhVG9YdGVybSIsInEiLCJjb252ZXJ0QU1US2V5Q29kZSIsImNvZGUiLCJzdGFydHNXaXRoIiwic2hpZnRLZXkiLCJaIiwiUGF1c2UiLCJDYXBzTG9jayIsIlNwYWNlIiwiUXVvdGUiLCJNaW51cyIsIk51bXBhZE11bHRpcGx5IiwiTnVtcGFkQWRkIiwiUHJpbnRTY3JlZW4iLCJDb21tYSIsIk51bXBhZFN1YnRyYWN0IiwiTnVtcGFkRGVjaW1hbCIsIlBlcmlvZCIsIlNsYXNoIiwiTnVtcGFkRGl2aWRlIiwiU2VtaWNvbG9uIiwiRXF1YWwiLCJPU0xlZnQiLCJCcmFja2V0TGVmdCIsIk9TUmlnaHQiLCJCYWNrc2xhc2giLCJCcmFja2V0UmlnaHQiLCJDb250ZXh0TWVudSIsIkJhY2txdW90ZSIsIk51bUxvY2siLCJTY3JvbGxMb2NrIiwiQmFja3NwYWNlIiwiVGFiIiwiRW50ZXIiLCJOdW1wYWRFbnRlciIsIkVzY2FwZSIsIkRlbGV0ZSIsIkhvbWUiLCJQYWdlVXAiLCJQYWdlRG93biIsIkFycm93TGVmdCIsIkFycm93VXAiLCJBcnJvd1JpZ2h0IiwiQXJyb3dEb3duIiwiRW5kIiwiSW5zZXJ0IiwiRjEiLCJGMiIsIkYzIiwiRjQiLCJGNSIsIkY2IiwiRjciLCJGOCIsIkY5IiwiRjEwIiwiRjExIiwiRjEyIiwiU2hpZnRMZWZ0IiwiU2hpZnRSaWdodCIsIkNvbnRyb2xMZWZ0IiwiQ29udHJvbFJpZ2h0IiwiQWx0TGVmdCIsIkFsdFJpZ2h0IiwiTWV0YUxlZnQiLCJNZXRhUmlnaHQiLCJob2xkaW5nIiwibWF4IiwibWluIiwibGFzdE1vdXNlWCIsIm9sZE1vdXNlWSIsImxhc3RNb3VzZVkiLCJhYnMiLCJzZW5kS2V5Iiwic2VuZEt2bURhdGEiLCJzZW5kS2VlcEFsaXZlIiwibGFzdEtlZXBBbGl2ZSIsIm5vdyIsInNlbmRDdHJsQWx0RGVsTXNnIiwic2VuZENhZCIsImFyb3RYIiwiYXJvdFkiLCJwdXRJbWFnZURhdGEiLCJjcm90WCIsImNyb3RZIiwic2V0Um90YXRpb24iLCJ0Y2FudmFzIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiZ2V0Q29udGV4dCIsInNldFRyYW5zZm9ybSIsInJvdGF0ZSIsIlBJIiwiZHJhd0ltYWdlIiwib25TY3JlZW5SZXNpemUiLCJjYW52YXNJZCIsIkUiLCJVcCIsIkRvd24iLCJDb21tcyIsIkdyYWJLZXlJbnB1dCIsIktleUlucHV0R3JhYiIsIm9ua2V5dXAiLCJoYW5kbGVLZXlVcCIsIm9ua2V5ZG93biIsImhhbmRsZUtleURvd24iLCJvbmtleXByZXNzIiwiaGFuZGxlS2V5cyIsIlVuR3JhYktleUlucHV0IiwiaGFsdEV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJoYW5kbGVLZXlFdmVudCIsImV2ZW50Iiwia2V5Q29kZSIsIngiLCJ0b3Bwb3NpdGlvbiIsImxlZnRwb3NpdGlvbiIsImNvbW0iLCJkZWJvdW5jZVRpbWUiLCJtb3VzZUNsaWNrQ29tcGxldGVkIiwibGFzdEV2ZW50IiwiR3JhYk1vdXNlSW5wdXQiLCJNb3VzZUlucHV0R3JhYiIsIlVuR3JhYk1vdXNlSW5wdXQiLCJvbm1vdXNlbW92ZSIsIm9ubW91c2V1cCIsIm9ubW91c2Vkb3duIiwibW91c2Vkb3duIiwiYnV0dG9uIiwibW91c2Vtb3ZlIiwibW91c2V1cCIsImdldFBvc2l0aW9uT2ZDb250cm9sIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwibGVmdCIsInBhZ2VYIiwib2Zmc2V0SGVpZ2h0IiwicGFnZVkiLCJvZmZzZXRXaWR0aCIsIm5vTW91c2VSb3RhdGUiLCJsYXN0TW91c2VYMiIsInBhcmVudEVsZW1lbnQiLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIiwib2Zmc2V0UGFyZW50IiwiRUIiLCJxRCIsInh4IiwiWkxJQiIsIkJBU0UiLCJOTUFYIiwiY29tbW9uX2luaXRpYWxpemVkIiwiWl9OT19GTFVTSCIsIlpfUEFSVElBTF9GTFVTSCIsIlpfU1lOQ19GTFVTSCIsIlpfRlVMTF9GTFVTSCIsIlpfRklOSVNIIiwiWl9CTE9DSyIsIlpfVFJFRVMiLCJaX09LIiwiWl9TVFJFQU1fRU5EIiwiWl9ORUVEX0RJQ1QiLCJaX0VSUk5PIiwiWl9TVFJFQU1fRVJST1IiLCJaX0RBVEFfRVJST1IiLCJaX01FTV9FUlJPUiIsIlpfQlVGX0VSUk9SIiwiWl9WRVJTSU9OX0VSUk9SIiwiWl9ERUZMQVRFRCIsInpfc3RyZWFtIiwibmV4dF9pbiIsImF2YWlsX2luIiwidG90YWxfaW4iLCJuZXh0X291dCIsImF2YWlsX291dCIsInRvdGFsX291dCIsIm1zZyIsImRhdGFfdHlwZSIsImFkbGVyIiwiaW5wdXRfZGF0YSIsIm91dHB1dF9kYXRhIiwiY2hlY2tzdW1fZnVuY3Rpb24iLCJnel9oZWFkZXIiLCJ0ZXh0IiwidGltZSIsInhmbGFncyIsIm9zIiwiZXh0cmEiLCJleHRyYV9sZW4iLCJleHRyYV9tYXgiLCJuYW1lIiwibmFtZV9tYXgiLCJjb21tZW50IiwiY29tbV9tYXgiLCJoY3JjIiwiZG9uZSIsImFsZXJ0IiwiREVGX1dCSVRTIiwiSEVBRCIsIkZMQUdTIiwiVElNRSIsIk9TIiwiRVhMRU4iLCJFWFRSQSIsIk5BTUUiLCJDT01NRU5UIiwiSENSQyIsIkRJQ1RJRCIsIkRJQ1QiLCJUWVBFIiwiVFlQRURPIiwiU1RPUkVEIiwiQ09QWV8iLCJDT1BZIiwiVEFCTEUiLCJMRU5MRU5TIiwiQ09ERUxFTlMiLCJMRU5fIiwiTEVOIiwiTEVORVhUIiwiRElTVCIsIkRJU1RFWFQiLCJNQVRDSCIsIkxJVCIsIkNIRUNLIiwiTEVOR1RIIiwiRE9ORSIsIkJBRCIsIk1FTSIsIlNZTkMiLCJFTk9VR0hfTEVOUyIsIkVOT1VHSF9ESVNUUyIsIkVOT1VHSCIsIkNPREVTIiwiTEVOUyIsIkRJU1RTIiwiaW5mbGF0ZV90YWJsZV9sYmFzZSIsImluZmxhdGVfdGFibGVfbGV4dCIsImluZmxhdGVfdGFibGVfZGJhc2UiLCJpbmZsYXRlX3RhYmxlX2RleHQiLCJpbmZsYXRlX3RhYmxlIiwiQSIsIm5leHQiLCJkaXN0Yml0cyIsImxlbmJpdHMiLCJ3b3JrIiwiVCIsImxlbnMiLCJCIiwibmxlbiIsIlIiLCJjb2RlcyIsIm5kaXN0IiwiRCIsIm9wIiwiYml0cyIsInZhbCIsImluZmxhdGVfZmFzdCIsIndzaXplIiwid2hhdmUiLCJ3bmV4dCIsImhvbGQiLCJsZW5jb2RlIiwiZGlzdGNvZGUiLCJtb2RlIiwic2FuZSIsIm5ld19hcnJheSIsImdldGFyZyIsImNoZWNrc3VtX25vbmUiLCJpbmZsYXRlX3N0YXRlIiwibGFzdCIsIndyYXAiLCJoYXZlZGljdCIsImZsYWdzIiwiZG1heCIsImNoZWNrIiwidG90YWwiLCJoZWFkIiwid2JpdHMiLCJvZmZzZXQiLCJuY29kZSIsImhhdmUiLCJiYWNrIiwid2FzIiwiaW5mbGF0ZV9jb3B5cmlnaHQiLCJpbmZsYXRlUmVzZXRLZWVwIiwiYWRsZXIzMiIsImNyYzMyIiwiaW5mbGF0ZVByaW1lIiwibGVuZml4X2FyeSIsImxlbmZpeF9kZWYiLCJkaXN0Zml4X2FyeSIsImRpc3RmaXhfZGVmIiwiZml4ZWR0YWJsZXMiLCJldmFsIiwidXBkYXRld2luZG93IiwiQ1JDMiIsIkNSQzQiLCJMT0FEIiwic3RybSIsIlJFU1RPUkUiLCJJTklUQklUUyIsIlBVTExCWVRFIiwiTkVFREJJVFMiLCJCSVRTIiwiRFJPUEJJVFMiLCJCWVRFQklUUyIsIlJFVkVSU0UiLCJpbmZsYXRlX29yZGVyIiwiaW5mbGF0ZUVuZCIsImFkbGVyMzJfY29tYmluZSIsImNyYzMyX2NvbWJpbmUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImhhc093blByb3BlcnR5IiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsIl9fd2VicGFja19leHBvcnRzX18iLCJBTVREZXNrdG9wIiwiQU1US2V5Q29kZUNvbnZlcnRlciIsIkFNVEt2bURhdGFSZWRpcmVjdG9yIiwiQU1UUmVkaXJlY3RvciIsIkFtdFRlcm1pbmFsIiwiQ29tbXNIZWxwZXIiLCJDb25zb2xlTG9nZ2VyIiwiRGF0YVByb2Nlc3NvciIsIkRlc2t0b3AiLCJFbmNvZGluZyIsIkZyYW1lQnVmZmVyQmVsbFNlcnZlckN1dFRleHQiLCJIYW5kc2hha2VTdGF0ZSIsIkltYWdlSGVscGVyIiwiS2V5Qm9hcmRIZWxwZXIiLCJMb2dMZXZlbCIsIk1vdXNlSGVscGVyIiwiUHJvdG9jb2wiLCJSTEVEZWNvZGVyIiwiU2VjdXJpdHlPcHRpb25zIiwiU2VjdXJpdHlSZXNwb25zZSIsIlNlcnZlckluaXQiLCJTdGF0ZVByb2Nlc3NvckZhY3RvcnkiLCJUZXJtaW5hbERhdGFQcm9jZXNzb3IiLCJUeXBlQ29udmVydGVyIiwiaXNUcnV0aHkiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImlkIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInNvdXJjZU1hcHBpbmciLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJrZXkiLCJkZXNjcmlwdG9yIiwiZm9yIiwieSIsInoiLCIkJHR5cGVvZiIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZyYWdtZW50IiwiTGF6eSIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiYWEiLCJjYSIsImRhIiwiU2V0IiwiZWEiLCJmYSIsImhhIiwiYWRkIiwiaWEiLCJqYSIsImthIiwibGEiLCJtYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwiZm9yRWFjaCIsInRvTG93ZXJDYXNlIiwicmEiLCJzYSIsInRhIiwicGEiLCJpc05hTiIsInFhIiwidGVzdCIsIm9hIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJ1YSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwidmEiLCJ3YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIml0ZXJhdG9yIiwiS2EiLCJMYSIsImFzc2lnbiIsIk1hIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJOYSIsIk9hIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiUGEiLCJ0YWciLCJRYSIsIl9jb250ZXh0IiwiX3BheWxvYWQiLCJfaW5pdCIsIlJhIiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwiWGEiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsIllhIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJaYSIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJhYiIsImJiIiwiY2IiLCJkYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImZiIiwib3B0aW9ucyIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY2hpbGRyZW4iLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm9iIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJwYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYXNwZWN0UmF0aW8iLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJxYiIsInJiIiwic2IiLCJzdHlsZSIsInNldFByb3BlcnR5IiwidGIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwic291cmNlIiwidHJhY2siLCJ3YnIiLCJ1YiIsInZiIiwiaXMiLCJ3YiIsInhiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiTmIiLCJhcHBseSIsIk9iIiwiUGIiLCJRYiIsIlJiIiwiU2IiLCJUYiIsIlZiIiwiYWx0ZXJuYXRlIiwicmV0dXJuIiwiV2IiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsIlhiIiwiWmIiLCJjaGlsZCIsInNpYmxpbmciLCJjdXJyZW50IiwiWWIiLCIkYiIsImFjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsImJjIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJjYyIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiZGMiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJ1bnN0YWJsZV9ub3ciLCJlYyIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiZmMiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsImdjIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJoYyIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiaWMiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsImpjIiwidW5zdGFibGVfSWRsZVByaW9yaXR5Iiwia2MiLCJsYyIsIm9jIiwiY2x6MzIiLCJwYyIsInFjIiwiTE4yIiwicmMiLCJzYyIsInRjIiwidWMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwidmMiLCJ4YyIsInljIiwiemMiLCJBYyIsImV2ZW50VGltZXMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIk1hcCIsIlBjIiwiUWMiLCJSYyIsIlNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiVGMiLCJuYXRpdmVFdmVudCIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJ0YXJnZXRDb250YWluZXJzIiwiVmMiLCJXYyIsInByaW9yaXR5IiwiaXNEZWh5ZHJhdGVkIiwiY29udGFpbmVySW5mbyIsIlhjIiwiWWMiLCJkaXNwYXRjaEV2ZW50IiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwiZGQiLCJlZCIsInRyYW5zaXRpb24iLCJmZCIsImdkIiwiaGQiLCJVYyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIklkIiwiY2xpcGJvYXJkRGF0YSIsIkpkIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlJpZ2h0IiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIk9kIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBkIiwiUWQiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJZZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJsaXN0ZW5lcnMiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIm5vZGUiLCJuZXh0U2libGluZyIsIkxlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk1lIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiaHJlZiIsIk5lIiwiY29udGVudEVkaXRhYmxlIiwiT2UiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZG9jdW1lbnRFbGVtZW50IiwiZW5kIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImV4dGVuZCIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJlbGVtZW50Iiwic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlhlIiwiWWUiLCJaZSIsImFuaW1hdGlvbiIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImxmIiwibWYiLCJuZiIsIlViIiwiaW5zdGFuY2UiLCJsaXN0ZW5lciIsIm9mIiwiaGFzIiwicGYiLCJxZiIsInJmIiwic2YiLCJwYXNzaXZlIiwiSiIsIkYiLCJ0ZiIsInVmIiwicGFyZW50V2luZG93IiwidmYiLCJ3ZiIsIm5hIiwieGEiLCIkYSIsImJhIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIl9faHRtbCIsIkZmIiwiR2YiLCJjbGVhclRpbWVvdXQiLCJIZiIsIlByb21pc2UiLCJKZiIsInF1ZXVlTWljcm90YXNrIiwicmVzb2x2ZSIsInRoZW4iLCJjYXRjaCIsIklmIiwiS2YiLCJMZiIsIk1mIiwicHJldmlvdXNTaWJsaW5nIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIkciLCJWZiIsIldmIiwiWGYiLCJZZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIlpmIiwiJGYiLCJhZyIsImJnIiwiZ2V0Q2hpbGRDb250ZXh0IiwiY2ciLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsImVsZW1lbnRUeXBlIiwiZGVsZXRpb25zIiwiQ2ciLCJwZW5kaW5nUHJvcHMiLCJvdmVyZmxvdyIsInRyZWVDb250ZXh0IiwicmV0cnlMYW5lIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJtZW1vaXplZFByb3BzIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIl9jdXJyZW50VmFsdWUiLCJTZyIsImNoaWxkTGFuZXMiLCJUZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwiVWciLCJWZyIsImNvbnRleHQiLCJtZW1vaXplZFZhbHVlIiwiV2ciLCJYZyIsIllnIiwiaW50ZXJsZWF2ZWQiLCJaZyIsIiRnIiwiYWgiLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJiaCIsImNoIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJjYWxsYmFjayIsImRoIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwiQ29tcG9uZW50IiwicmVmcyIsImtoIiwibmgiLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJMIiwibGgiLCJtaCIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJvaCIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwicGgiLCJ1cGRhdGVyIiwicWgiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJyaCIsInByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJzaCIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJ0aCIsInVoIiwidmgiLCJpbmRleCIsIndoIiwieGgiLCJ5aCIsImltcGxlbWVudGF0aW9uIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJ0YWdOYW1lIiwiSmgiLCJLaCIsIkxoIiwiTSIsIk1oIiwicmV2ZWFsT3JkZXIiLCJOaCIsIk9oIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJQaCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJRaCIsIlJoIiwiTyIsIlAiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJiYXNlUXVldWUiLCJxdWV1ZSIsImRpIiwiZWkiLCJmaSIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJoYXNFYWdlclN0YXRlIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJnaSIsImhpIiwiaWkiLCJqaSIsImtpIiwiZ2V0U25hcHNob3QiLCJsaSIsIm1pIiwibmkiLCJsYXN0RWZmZWN0Iiwic3RvcmVzIiwib2kiLCJwaSIsInFpIiwicmkiLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsInNpIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsIkJpIiwiQ2kiLCJEaSIsIkVpIiwiRmkiLCJHaSIsIkhpIiwiSWkiLCJKaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUluc2VydGlvbkVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlU3luY0V4dGVybmFsU3RvcmUiLCJ1c2VJZCIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsImlkZW50aWZpZXJQcmVmaXgiLCJLaSIsIm1lc3NhZ2UiLCJkaWdlc3QiLCJMaSIsIk1pIiwiTmkiLCJXZWFrTWFwIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJjb21wb25lbnREaWRDYXRjaCIsIlNpIiwiY29tcG9uZW50U3RhY2siLCJUaSIsInBpbmdDYWNoZSIsIlVpIiwiVmkiLCJXaSIsIlhpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJZaSIsIlppIiwiJGkiLCJhaiIsImJqIiwiY2oiLCJkaiIsImVqIiwiYmFzZUxhbmVzIiwiY2FjaGVQb29sIiwidHJhbnNpdGlvbnMiLCJmaiIsImdqIiwiaGoiLCJpaiIsImpqIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwia2oiLCJsaiIsInBlbmRpbmdDb250ZXh0IiwibWoiLCJBaiIsIkNqIiwiRGoiLCJuaiIsIm9qIiwicGoiLCJmYWxsYmFjayIsInFqIiwicmoiLCJ0aiIsImRhdGFzZXQiLCJkZ3N0IiwidWoiLCJ2aiIsIl9yZWFjdFJldHJ5Iiwic2oiLCJzdWJ0cmVlRmxhZ3MiLCJ3aiIsInhqIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJ0YWlsIiwidGFpbE1vZGUiLCJ5aiIsIkVqIiwiRmoiLCJHaiIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJhdXRvRm9jdXMiLCJjcmVhdGVUZXh0Tm9kZSIsIkhqIiwiSWoiLCJKaiIsIktqIiwiTGoiLCJXZWFrU2V0IiwiViIsIk1qIiwiVyIsIk5qIiwiT2oiLCJRaiIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJYaiIsIllqIiwiWmoiLCJhayIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiaXNIaWRkZW4iLCJnayIsImhrIiwiZGlzcGxheSIsImlrIiwiamsiLCJrayIsImxrIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJzcmMiLCJXayIsIm1rIiwiY2VpbCIsIm5rIiwib2siLCJwayIsIlkiLCJxayIsInJrIiwic2siLCJ0ayIsInVrIiwiSW5maW5pdHkiLCJ2ayIsIndrIiwieGsiLCJ5ayIsInprIiwiQWsiLCJCayIsIkNrIiwiRGsiLCJFayIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImV4cGlyZWRMYW5lcyIsIndjIiwiY2FsbGJhY2tQcmlvcml0eSIsImlnIiwiRmsiLCJHayIsIkhrIiwiSWsiLCJKayIsIktrIiwiTGsiLCJNayIsIk5rIiwiT2siLCJQayIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJRayIsInRpbWVvdXRIYW5kbGUiLCJSayIsIlNrIiwiVGsiLCJVayIsIlZrIiwibXV0YWJsZVJlYWRMYW5lcyIsIkJjIiwiUGoiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm1jIiwib25SZWNvdmVyYWJsZUVycm9yIiwiWGsiLCJvblBvc3RDb21taXRGaWJlclJvb3QiLCJZayIsIlprIiwiYWwiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYmwiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwiY2wiLCJjYWNoZSIsInBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXMiLCJkbCIsImVsIiwiZmwiLCJnbCIsImhsIiwiaWwiLCJqbCIsInpqIiwiJGsiLCJyZXBvcnRFcnJvciIsIm1sIiwiX2ludGVybmFsUm9vdCIsIm5sIiwib2wiLCJwbCIsInFsIiwic2wiLCJybCIsInVubW91bnQiLCJ1bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwidGwiLCJ1c2luZ0NsaWVudEVudHJ5UG9pbnQiLCJFdmVudHMiLCJ1bCIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwidmwiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRFcnJvckhhbmRsZXIiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsInJlY29uY2lsZXJWZXJzaW9uIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwid2wiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsImNyZWF0ZVBvcnRhbCIsImNyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9zdHJpY3RNb2RlIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJoeWRyYXRlIiwiaHlkcmF0ZVJvb3QiLCJoeWRyYXRlZFNvdXJjZXMiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiZXJyIiwiZ2V0TW9kdWxlSWQiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIkNoaWxkcmVuIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2RlZmF1bHRWYWx1ZSIsIl9nbG9iYWxOYW1lIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwic3RhcnRUcmFuc2l0aW9uIiwidW5zdGFibGVfYWN0IiwicG9wIiwic29ydEluZGV4IiwicGVyZm9ybWFuY2UiLCJzZXRJbW1lZGlhdGUiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJuYXZpZ2F0b3IiLCJzY2hlZHVsaW5nIiwiaXNJbnB1dFBlbmRpbmciLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwib2JqQSIsIm9iakIiLCJjb21wYXJlQ29udGV4dCIsInJldCIsImtleXNBIiwia2V5c0IiLCJiSGFzT3duUHJvcGVydHkiLCJpZHgiLCJ2YWx1ZUEiLCJ2YWx1ZUIiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJpbnNlcnQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50RG9jdW1lbnQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIkFjY2Vzc2liaWxpdHlNYW5hZ2VyIiwiRGlzcG9zYWJsZSIsIl90ZXJtaW5hbCIsIl9yZW5kZXJTZXJ2aWNlIiwiX2xpdmVSZWdpb25MaW5lQ291bnQiLCJfY2hhcnNUb0NvbnN1bWUiLCJfY2hhcnNUb0Fubm91bmNlIiwiX2FjY2Vzc2liaWxpdHlUcmVlUm9vdCIsImNsYXNzTGlzdCIsInRhYkluZGV4IiwiX3Jvd0NvbnRhaW5lciIsIl9yb3dFbGVtZW50cyIsInJvd3MiLCJfY3JlYXRlQWNjZXNzaWJpbGl0eVRyZWVOb2RlIiwiX3RvcEJvdW5kYXJ5Rm9jdXNMaXN0ZW5lciIsIl9vbkJvdW5kYXJ5Rm9jdXMiLCJfYm90dG9tQm91bmRhcnlGb2N1c0xpc3RlbmVyIiwiX3JlZnJlc2hSb3dzRGltZW5zaW9ucyIsIl9yZW5kZXJSb3dzRGVib3VuY2VyIiwiVGltZUJhc2VkRGVib3VuY2VyIiwiX3JlbmRlclJvd3MiLCJfcmVmcmVzaFJvd3MiLCJfbGl2ZVJlZ2lvbiIsImluc2VydEFkamFjZW50RWxlbWVudCIsInJlZ2lzdGVyIiwib25SZXNpemUiLCJfb25SZXNpemUiLCJvblJlbmRlciIsIm9uU2Nyb2xsIiwib25BMTF5Q2hhciIsIl9vbkNoYXIiLCJvbkxpbmVGZWVkIiwib25BMTF5VGFiIiwiX29uVGFiIiwib25LZXkiLCJfb25LZXkiLCJvbkJsdXIiLCJfY2xlYXJMaXZlUmVnaW9uIiwib25EaW1lbnNpb25zQ2hhbmdlIiwiX3NjcmVlbkRwck1vbml0b3IiLCJTY3JlZW5EcHJNb25pdG9yIiwic2V0TGlzdGVuZXIiLCJhZGREaXNwb3NhYmxlRG9tTGlzdGVuZXIiLCJkaXNwb3NlIiwicmVtb3ZlRWxlbWVudEZyb21QYXJlbnQiLCJnZXRBdHRyaWJ1dGUiLCJsaW5lcyIsInNjcm9sbExpbmVzIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwiX3JlZnJlc2hSb3dEaW1lbnNpb25zIiwidG9vTXVjaE91dHB1dCIsImlzTWFjIiwicmVmcmVzaCIsInRyYW5zbGF0ZUJ1ZmZlckxpbmVUb1N0cmluZyIsInlkaXNwIiwiaW5uZXJUZXh0IiwiX2Fubm91bmNlQ2hhcmFjdGVycyIsImRpbWVuc2lvbnMiLCJhY3R1YWxDZWxsSGVpZ2h0IiwiZGVjUHJpdmF0ZU1vZGVzIiwiYnJhY2tldGVkUGFzdGVNb2RlIiwidHJpZ2dlckRhdGFFdmVudCIsInJpZ2h0Q2xpY2tIYW5kbGVyIiwibW92ZVRleHRBcmVhVW5kZXJNb3VzZUN1cnNvciIsInBhc3RlIiwiaGFuZGxlUGFzdGVFdmVudCIsImNvcHlIYW5kbGVyIiwiYnJhY2tldFRleHRGb3JQYXN0ZSIsInByZXBhcmVUZXh0Rm9yVGVybWluYWwiLCJzZXREYXRhIiwic2VsZWN0aW9uVGV4dCIsImdldERhdGEiLCJyaWdodENsaWNrU2VsZWN0Iiwic2VsZWN0IiwiQ29sb3JDb250cmFzdENhY2hlIiwiX2NvbG9yIiwiVHdvS2V5TWFwIiwiX2NzcyIsInNldENzcyIsImdldENzcyIsInNldENvbG9yIiwiZ2V0Q29sb3IiLCJjbGVhciIsIkNvbG9yTWFuYWdlciIsIkRFRkFVTFRfQU5TSV9DT0xPUlMiLCJ0b0NvbG9yIiwicmdiYSIsImZyZWV6ZSIsImNoYW5uZWxzIiwidG9Dc3MiLCJ0b1JnYmEiLCJhbGxvd1RyYW5zcGFyZW5jeSIsIl9jdHgiLCJnbG9iYWxDb21wb3NpdGVPcGVyYXRpb24iLCJfbGl0bXVzQ29sb3IiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsIl9jb250cmFzdENhY2hlIiwiY29sb3JzIiwiZm9yZWdyb3VuZCIsImJhY2tncm91bmQiLCJjdXJzb3IiLCJjdXJzb3JBY2NlbnQiLCJzZWxlY3Rpb25Gb3JlZ3JvdW5kIiwic2VsZWN0aW9uQmFja2dyb3VuZFRyYW5zcGFyZW50Iiwic2VsZWN0aW9uQmFja2dyb3VuZE9wYXF1ZSIsImJsZW5kIiwic2VsZWN0aW9uSW5hY3RpdmVCYWNrZ3JvdW5kVHJhbnNwYXJlbnQiLCJzZWxlY3Rpb25JbmFjdGl2ZUJhY2tncm91bmRPcGFxdWUiLCJhbnNpIiwiY29udHJhc3RDYWNoZSIsIl91cGRhdGVSZXN0b3JlQ29sb3JzIiwib25PcHRpb25zQ2hhbmdlIiwic2V0VGhlbWUiLCJfcGFyc2VDb2xvciIsInNlbGVjdGlvbkJhY2tncm91bmQiLCJzZWxlY3Rpb25JbmFjdGl2ZUJhY2tncm91bmQiLCJpc09wYXF1ZSIsImJsYWNrIiwicmVkIiwiZ3JlZW4iLCJ5ZWxsb3ciLCJibHVlIiwibWFnZW50YSIsImN5YW4iLCJ3aGl0ZSIsImJyaWdodEJsYWNrIiwiYnJpZ2h0UmVkIiwiYnJpZ2h0R3JlZW4iLCJicmlnaHRZZWxsb3ciLCJicmlnaHRCbHVlIiwiYnJpZ2h0TWFnZW50YSIsImJyaWdodEN5YW4iLCJicmlnaHRXaGl0ZSIsImV4dGVuZGVkQW5zaSIsInJlc3RvcmVDb2xvciIsIl9yZXN0b3JlQ29sb3JzIiwiZ2V0SW1hZ2VEYXRhIiwicm91bmQiLCJfX2RlY29yYXRlIiwiZGVjb3JhdGUiLCJfX3BhcmFtIiwiTGlua2lmaWVyMiIsIl9idWZmZXJTZXJ2aWNlIiwiX2xpbmtQcm92aWRlcnMiLCJfbGlua0NhY2hlRGlzcG9zYWJsZXMiLCJfaXNNb3VzZU91dCIsIl9hY3RpdmVMaW5lIiwiX29uU2hvd0xpbmtVbmRlcmxpbmUiLCJFdmVudEVtaXR0ZXIiLCJfb25IaWRlTGlua1VuZGVybGluZSIsImdldERpc3Bvc2VBcnJheURpc3Bvc2FibGUiLCJjdXJyZW50TGluayIsIl9jdXJyZW50TGluayIsIm9uU2hvd0xpbmtVbmRlcmxpbmUiLCJvbkhpZGVMaW5rVW5kZXJsaW5lIiwiX2xhc3RNb3VzZUV2ZW50IiwicmVnaXN0ZXJMaW5rUHJvdmlkZXIiLCJhdHRhY2hUb0RvbSIsIl9lbGVtZW50IiwiX21vdXNlU2VydmljZSIsIl9jbGVhckN1cnJlbnRMaW5rIiwiX29uTW91c2VNb3ZlIiwiX2hhbmRsZU1vdXNlRG93biIsIl9oYW5kbGVNb3VzZVVwIiwiX3Bvc2l0aW9uRnJvbU1vdXNlRXZlbnQiLCJjb21wb3NlZFBhdGgiLCJfbGFzdEJ1ZmZlckNlbGwiLCJfb25Ib3ZlciIsIl9hc2tGb3JMaW5rIiwiX2xpbmtBdFBvc2l0aW9uIiwiX2FjdGl2ZVByb3ZpZGVyUmVwbGllcyIsImVudHJpZXMiLCJfY2hlY2tMaW5rUHJvdmlkZXJSZXN1bHQiLCJwcm92aWRlTGlua3MiLCJfcmVtb3ZlSW50ZXJzZWN0aW5nTGlua3MiLCJjb2xzIiwiZmluZCIsIl9oYW5kbGVOZXdMaW5rIiwiX21vdXNlRG93bkxpbmsiLCJhY3RpdmF0ZSIsIl9saW5rTGVhdmUiLCJkaXNwb3NlQXJyYXkiLCJkZWNvcmF0aW9ucyIsInVuZGVybGluZSIsInBvaW50ZXJDdXJzb3IiLCJpc0hvdmVyZWQiLCJfbGlua0hvdmVyIiwiZGVmaW5lUHJvcGVydGllcyIsInRvZ2dsZSIsIl9maXJlVW5kZXJsaW5lRXZlbnQiLCJvblJlbmRlcmVkVmlld3BvcnRDaGFuZ2UiLCJob3ZlciIsIl9jcmVhdGVMaW5rVW5kZXJsaW5lRXZlbnQiLCJmaXJlIiwibGVhdmUiLCJnZXRDb29yZHMiLCJ4MSIsInkxIiwieDIiLCJ5MiIsIklCdWZmZXJTZXJ2aWNlIiwicHJvbXB0TGFiZWwiLCJPc2NMaW5rUHJvdmlkZXIiLCJfb3B0aW9uc1NlcnZpY2UiLCJfb3NjTGlua1NlcnZpY2UiLCJyYXdPcHRpb25zIiwibGlua0hhbmRsZXIiLCJDZWxsRGF0YSIsImdldFRyaW1tZWRMZW5ndGgiLCJoYXNDb250ZW50IiwibG9hZENlbGwiLCJoYXNFeHRlbmRlZEF0dHJzIiwiZXh0ZW5kZWQiLCJ1cmxJZCIsImdldExpbmtEYXRhIiwidXJpIiwiY29uZmlybSIsIm9wZW4iLCJvcGVuZXIiLCJJT3B0aW9uc1NlcnZpY2UiLCJJT3NjTGlua1NlcnZpY2UiLCJSZW5kZXJEZWJvdW5jZXIiLCJfcGFyZW50V2luZG93IiwiX3JlbmRlckNhbGxiYWNrIiwiX3JlZnJlc2hDYWxsYmFja3MiLCJfYW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsImFkZFJlZnJlc2hDYWxsYmFjayIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIl9pbm5lclJlZnJlc2giLCJfcm93Q291bnQiLCJfcm93U3RhcnQiLCJfcm93RW5kIiwiX3J1blJlZnJlc2hDYWxsYmFja3MiLCJfY3VycmVudERldmljZVBpeGVsUmF0aW8iLCJkZXZpY2VQaXhlbFJhdGlvIiwiX2xpc3RlbmVyIiwiY2xlYXJMaXN0ZW5lciIsIl9vdXRlckxpc3RlbmVyIiwiX3VwZGF0ZURwciIsIl9yZXNvbHV0aW9uTWVkaWFNYXRjaExpc3QiLCJyZW1vdmVMaXN0ZW5lciIsIm1hdGNoTWVkaWEiLCJhZGRMaXN0ZW5lciIsIlRlcm1pbmFsIiwiQ29yZVRlcm1pbmFsIiwiYnJvd3NlciIsIl9rZXlEb3duSGFuZGxlZCIsIl9rZXlEb3duU2VlbiIsIl9rZXlQcmVzc0hhbmRsZWQiLCJfdW5wcm9jZXNzZWREZWFkS2V5IiwiX29uQ3Vyc29yTW92ZSIsIl9vblJlbmRlciIsIl9vblNlbGVjdGlvbkNoYW5nZSIsIl9vblRpdGxlQ2hhbmdlIiwiX29uQmVsbCIsIl9vbkZvY3VzIiwiX29uQmx1ciIsIl9vbkExMXlDaGFyRW1pdHRlciIsIl9vbkExMXlUYWJFbWl0dGVyIiwiX3NldHVwIiwibGlua2lmaWVyMiIsIl9pbnN0YW50aWF0aW9uU2VydmljZSIsImNyZWF0ZUluc3RhbmNlIiwiX2RlY29yYXRpb25TZXJ2aWNlIiwiRGVjb3JhdGlvblNlcnZpY2UiLCJzZXRTZXJ2aWNlIiwiSURlY29yYXRpb25TZXJ2aWNlIiwiX2lucHV0SGFuZGxlciIsIm9uUmVxdWVzdEJlbGwiLCJvblJlcXVlc3RSZWZyZXNoUm93cyIsIm9uUmVxdWVzdFNlbmRGb2N1cyIsIl9yZXBvcnRGb2N1cyIsIm9uUmVxdWVzdFJlc2V0IiwicmVzZXQiLCJvblJlcXVlc3RXaW5kb3dzT3B0aW9uc1JlcG9ydCIsIl9yZXBvcnRXaW5kb3dzT3B0aW9ucyIsIm9uQ29sb3IiLCJfaGFuZGxlQ29sb3JFdmVudCIsImZvcndhcmRFdmVudCIsIm9uQ3Vyc29yTW92ZSIsIm9uVGl0bGVDaGFuZ2UiLCJfYWZ0ZXJSZXNpemUiLCJvblNlbGVjdGlvbkNoYW5nZSIsIm9uQmVsbCIsIm9uRm9jdXMiLCJfY29sb3JNYW5hZ2VyIiwidG9Db2xvclJHQiIsImNvcmVTZXJ2aWNlIiwiQzAiLCJFU0MiLCJ0b1JnYlN0cmluZyIsIkMxX0VTQ0FQRUQiLCJTVCIsInNldENvbG9ycyIsInZpZXdwb3J0Iiwib25UaGVtZUNoYW5nZSIsIl9pc0Rpc3Bvc2VkIiwiX2N1c3RvbUtleUV2ZW50SGFuZGxlciIsIndyaXRlIiwiYnVmZmVycyIsImFjdGl2ZSIsInRleHRhcmVhIiwicHJldmVudFNjcm9sbCIsIl91cGRhdGVPcHRpb25zIiwiX2NoYXJTaXplU2VydmljZSIsIm1lYXN1cmUiLCJzeW5jU2Nyb2xsQXJlYSIsIm9wdGlvbnNTZXJ2aWNlIiwic2NyZWVuUmVhZGVyTW9kZSIsIl9hY2Nlc3NpYmlsaXR5TWFuYWdlciIsInNldHVwVGFiU3RvcHMiLCJfc2V0VGhlbWUiLCJ0aGVtZSIsIl9vblRleHRBcmVhRm9jdXMiLCJzZW5kRm9jdXMiLCJ1cGRhdGVDdXJzb3JTdHlsZSIsIl9zaG93Q3Vyc29yIiwiYmx1ciIsIl9vblRleHRBcmVhQmx1ciIsIl9zeW5jVGV4dEFyZWEiLCJpc0N1cnNvckluVmlld3BvcnQiLCJfY29tcG9zaXRpb25IZWxwZXIiLCJpc0NvbXBvc2luZyIsInliYXNlIiwiZ2V0V2lkdGgiLCJhY3R1YWxDZWxsV2lkdGgiLCJfaW5pdEdsb2JhbCIsIl9iaW5kS2V5cyIsImhhc1NlbGVjdGlvbiIsIl9zZWxlY3Rpb25TZXJ2aWNlIiwiaXNGaXJlZm94Iiwic2NyZWVuRWxlbWVudCIsInJpZ2h0Q2xpY2tTZWxlY3RzV29yZCIsImlzTGludXgiLCJfa2V5VXAiLCJfa2V5RG93biIsIl9rZXlQcmVzcyIsImNvbXBvc2l0aW9uc3RhcnQiLCJjb21wb3NpdGlvbnVwZGF0ZSIsImNvbXBvc2l0aW9uZW5kIiwiX2lucHV0RXZlbnQiLCJ1cGRhdGVDb21wb3NpdGlvbkVsZW1lbnRzIiwiaXNDb25uZWN0ZWQiLCJfbG9nU2VydmljZSIsIl9kb2N1bWVudCIsImRpciIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJfdmlld3BvcnRFbGVtZW50IiwiX3ZpZXdwb3J0U2Nyb2xsQXJlYSIsIl9oZWxwZXJDb250YWluZXIiLCJfY29yZUJyb3dzZXJTZXJ2aWNlIiwiQ29yZUJyb3dzZXJTZXJ2aWNlIiwiSUNvcmVCcm93c2VyU2VydmljZSIsIkNoYXJTaXplU2VydmljZSIsIklDaGFyU2l6ZVNlcnZpY2UiLCJfdGhlbWUiLCJvbk9wdGlvbkNoYW5nZSIsIl9jaGFyYWN0ZXJKb2luZXJTZXJ2aWNlIiwiQ2hhcmFjdGVySm9pbmVyU2VydmljZSIsIklDaGFyYWN0ZXJKb2luZXJTZXJ2aWNlIiwiX2NyZWF0ZVJlbmRlcmVyIiwiUmVuZGVyU2VydmljZSIsIklSZW5kZXJTZXJ2aWNlIiwicmVzaXplIiwiX2NvbXBvc2l0aW9uVmlldyIsIkNvbXBvc2l0aW9uSGVscGVyIiwiTW91c2VTZXJ2aWNlIiwiSU1vdXNlU2VydmljZSIsIlZpZXdwb3J0Iiwib25SZXF1ZXN0U3luY1Njcm9sbEJhciIsIlNlbGVjdGlvblNlcnZpY2UiLCJJU2VsZWN0aW9uU2VydmljZSIsIm9uUmVxdWVzdFNjcm9sbExpbmVzIiwiYW1vdW50Iiwic3VwcHJlc3NTY3JvbGxFdmVudCIsIm9uUmVxdWVzdFJlZHJhdyIsIm9uU2VsZWN0aW9uQ2hhbmdlZCIsImNvbHVtblNlbGVjdE1vZGUiLCJvbkxpbnV4TW91c2VTZWxlY3Rpb24iLCJfb25TY3JvbGwiLCJCdWZmZXJEZWNvcmF0aW9uUmVuZGVyZXIiLCJvbk1vdXNlRG93biIsImNvcmVNb3VzZVNlcnZpY2UiLCJhcmVNb3VzZUV2ZW50c0FjdGl2ZSIsImRpc2FibGUiLCJlbmFibGUiLCJvdmVydmlld1J1bGVyV2lkdGgiLCJfb3ZlcnZpZXdSdWxlclJlbmRlcmVyIiwiT3ZlcnZpZXdSdWxlclJlbmRlcmVyIiwiYmluZE1vdXNlIiwiRG9tUmVuZGVyZXIiLCJnZXRNb3VzZVJlcG9ydENvb3JkcyIsIm92ZXJyaWRlVHlwZSIsImdldExpbmVzU2Nyb2xsZWQiLCJ0cmlnZ2VyTW91c2VFdmVudCIsInJvdyIsImN0cmwiLCJhbHQiLCJ3aGVlbCIsIm1vdXNlZHJhZyIsImNhbmNlbCIsIm9uUHJvdG9jb2xDaGFuZ2UiLCJsb2dMZXZlbCIsImV4cGxhaW5FdmVudHMiLCJhY3RpdmVQcm90b2NvbCIsInNob3VsZEZvcmNlU2VsZWN0aW9uIiwiaGFzU2Nyb2xsYmFjayIsImFwcGxpY2F0aW9uQ3Vyc29yS2V5cyIsIm9uV2hlZWwiLCJvblRvdWNoU3RhcnQiLCJvblRvdWNoTW92ZSIsInJlZnJlc2hSb3dzIiwic2hvdWxkQ29sdW1uU2VsZWN0IiwiaXNDdXJzb3JJbml0aWFsaXplZCIsImF0dGFjaEN1c3RvbUtleUV2ZW50SGFuZGxlciIsInJlZ2lzdGVyQ2hhcmFjdGVySm9pbmVyIiwiZGVyZWdpc3RlckNoYXJhY3RlckpvaW5lciIsImRlcmVnaXN0ZXIiLCJtYXJrZXJzIiwiYWRkTWFya2VyIiwicmVnaXN0ZXJEZWNvcmF0aW9uIiwic2V0U2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uUG9zaXRpb24iLCJjbGVhclNlbGVjdGlvbiIsInNlbGVjdEFsbCIsInNlbGVjdExpbmVzIiwibWFjT3B0aW9uSXNNZXRhIiwia2V5ZG93biIsInNjcm9sbFRvQm90dG9tIiwiZXZhbHVhdGVLZXlib2FyZEV2ZW50IiwiX2lzVGhpcmRMZXZlbFNoaWZ0IiwiRVRYIiwiQ1IiLCJkb21FdmVudCIsImlzV2luZG93cyIsImlucHV0VHlwZSIsImNvbXBvc2VkIiwiaGFzVmFsaWRTaXplIiwiY2xlYXJBbGxNYXJrZXJzIiwiZ2V0QmxhbmtMaW5lIiwiREVGQVVMVF9BVFRSX0RBVEEiLCJwb3NpdGlvbiIsImNsZWFyVGV4dHVyZUF0bGFzIiwiV2luZG93c09wdGlvbnNSZXBvcnRUeXBlIiwiR0VUX1dJTl9TSVpFX1BJWEVMUyIsImNhbnZhc1dpZHRoIiwidG9GaXhlZCIsImNhbnZhc0hlaWdodCIsIkdFVF9DRUxMX1NJWkVfUElYRUxTIiwiY2FuY2VsRXZlbnRzIiwiX2RlYm91bmNlVGhyZXNob2xkTVMiLCJfbGFzdFJlZnJlc2hNcyIsIl9hZGRpdGlvbmFsUmVmcmVzaFJlcXVlc3RlZCIsIl9yZWZyZXNoVGltZW91dElEIiwiX3Njcm9sbExpbmVzIiwiX3Njcm9sbEFyZWEiLCJzY3JvbGxCYXJXaWR0aCIsIl9jdXJyZW50Um93SGVpZ2h0IiwiX2N1cnJlbnRTY2FsZWRDZWxsSGVpZ2h0IiwiX2xhc3RSZWNvcmRlZEJ1ZmZlckxlbmd0aCIsIl9sYXN0UmVjb3JkZWRWaWV3cG9ydEhlaWdodCIsIl9sYXN0UmVjb3JkZWRCdWZmZXJIZWlnaHQiLCJfbGFzdFRvdWNoWSIsIl9sYXN0U2Nyb2xsVG9wIiwiX3doZWVsUGFydGlhbFNjcm9sbCIsIl9yZWZyZXNoQW5pbWF0aW9uRnJhbWUiLCJfaWdub3JlTmV4dFNjcm9sbEV2ZW50IiwiX3Ntb290aFNjcm9sbFN0YXRlIiwib3JpZ2luIiwiX2FjdGl2ZUJ1ZmZlciIsIm9uQnVmZmVyQWN0aXZhdGUiLCJhY3RpdmVCdWZmZXIiLCJfcmVuZGVyRGltZW5zaW9ucyIsImJhY2tncm91bmRDb2xvciIsIl9yZWZyZXNoIiwic2NhbGVkQ2VsbEhlaWdodCIsImRwciIsIl9zbW9vdGhTY3JvbGwiLCJfc21vb3RoU2Nyb2xsUGVyY2VudCIsIl9jbGVhclNtb290aFNjcm9sbFN0YXRlIiwic21vb3RoU2Nyb2xsRHVyYXRpb24iLCJfYnViYmxlU2Nyb2xsIiwiX2dldFBpeGVsc1Njcm9sbGVkIiwic2Nyb2xsSGVpZ2h0IiwiX2FwcGx5U2Nyb2xsTW9kaWZpZXIiLCJXaGVlbEV2ZW50IiwiRE9NX0RFTFRBX0xJTkUiLCJET01fREVMVEFfUEFHRSIsIkRPTV9ERUxUQV9QSVhFTCIsImZhc3RTY3JvbGxNb2RpZmllciIsImZhc3RTY3JvbGxTZW5zaXRpdml0eSIsInNjcm9sbFNlbnNpdGl2aXR5IiwiX3NjcmVlbkVsZW1lbnQiLCJfZGVjb3JhdGlvbkVsZW1lbnRzIiwiX2FsdEJ1ZmZlcklzQWN0aXZlIiwiX2RpbWVuc2lvbnNDaGFuZ2VkIiwiX2NvbnRhaW5lciIsIl9xdWV1ZVJlZnJlc2giLCJvbkRlY29yYXRpb25SZWdpc3RlcmVkIiwib25EZWNvcmF0aW9uUmVtb3ZlZCIsIl9yZW1vdmVEZWNvcmF0aW9uIiwicmVmcmVzaERlY29yYXRpb25zIiwiX3JlbmRlckRlY29yYXRpb24iLCJfcmVmcmVzaFN0eWxlIiwiX3JlZnJlc2hYUG9zaXRpb24iLCJfY3JlYXRlRWxlbWVudCIsIm1hcmtlciIsImxpbmUiLCJvblJlbmRlckVtaXR0ZXIiLCJvbkRpc3Bvc2UiLCJhbmNob3IiLCJyaWdodCIsIkNvbG9yWm9uZVN0b3JlIiwiX3pvbmVzIiwiX3pvbmVQb29sIiwiX3pvbmVQb29sSW5kZXgiLCJfbGluZVBhZGRpbmciLCJmdWxsIiwiY2VudGVyIiwiem9uZXMiLCJhZGREZWNvcmF0aW9uIiwib3ZlcnZpZXdSdWxlck9wdGlvbnMiLCJfbGluZUludGVyc2VjdHNab25lIiwiX2xpbmVBZGphY2VudFRvWm9uZSIsIl9hZGRMaW5lVG9ab25lIiwic3RhcnRCdWZmZXJMaW5lIiwiZW5kQnVmZmVyTGluZSIsInNldFBhZGRpbmciLCJfY29yZUJyb3dzZVNlcnZpY2UiLCJfY29sb3Jab25lU3RvcmUiLCJfc2hvdWxkVXBkYXRlRGltZW5zaW9ucyIsIl9zaG91bGRVcGRhdGVBbmNob3IiLCJfbGFzdEtub3duQnVmZmVyTGVuZ3RoIiwiX2NhbnZhcyIsIl9yZWZyZXNoQ2FudmFzRGltZW5zaW9ucyIsIl9yZWdpc3RlckRlY29yYXRpb25MaXN0ZW5lcnMiLCJfcmVnaXN0ZXJCdWZmZXJDaGFuZ2VMaXN0ZW5lcnMiLCJfcmVnaXN0ZXJEaW1lbnNpb25DaGFuZ2VMaXN0ZW5lcnMiLCJfd2lkdGgiLCJub3JtYWwiLCJfcmVmcmVzaERyYXdIZWlnaHRDb25zdGFudHMiLCJfcmVmcmVzaENvbG9yWm9uZVBhZGRpbmciLCJfY29udGFpbmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiX3JlZnJlc2hEcmF3Q29uc3RhbnRzIiwiX3JlZnJlc2hEZWNvcmF0aW9ucyIsImNsZWFyUmVjdCIsImxpbmVXaWR0aCIsIl9yZW5kZXJDb2xvclpvbmUiLCJfdGV4dGFyZWEiLCJfY29yZVNlcnZpY2UiLCJfaXNDb21wb3NpbmciLCJfaXNTZW5kaW5nQ29tcG9zaXRpb24iLCJfY29tcG9zaXRpb25Qb3NpdGlvbiIsIl9kYXRhQWxyZWFkeVNlbnQiLCJfZmluYWxpemVDb21wb3NpdGlvbiIsIl9oYW5kbGVBbnlUZXh0YXJlYUNoYW5nZXMiLCJERUwiLCJmb250RmFtaWx5IiwiZm9udFNpemUiLCJJQ29yZVNlcnZpY2UiLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsImdldENvb3Jkc1JlbGF0aXZlVG9FbGVtZW50IiwibW92ZVRvQ2VsbFNlcXVlbmNlIiwiaXNXcmFwcGVkIiwiVEVYVF9CQVNFTElORSIsIkRJTV9PUEFDSVRZIiwiSU5WRVJURURfREVGQVVMVF9DT0xPUiIsImlzTGVnYWN5RWRnZSIsImV4Y2x1ZGVGcm9tQ29udHJhc3RSYXRpb0RlbWFuZHMiLCJpc1Jlc3RyaWN0ZWRQb3dlcmxpbmVHbHlwaCIsImlzUG93ZXJsaW5lR2x5cGgiLCJ0aHJvd0lmRmFsc3kiLCJfY29sb3JzIiwiX2xpbmtpZmllcjIiLCJfdGVybWluYWxDbGFzcyIsIl9yZWZyZXNoUm93RWxlbWVudHMiLCJfc2VsZWN0aW9uQ29udGFpbmVyIiwic2NhbGVkQ2hhcldpZHRoIiwic2NhbGVkQ2hhckhlaWdodCIsInNjYWxlZENlbGxXaWR0aCIsInNjYWxlZENoYXJMZWZ0Iiwic2NhbGVkQ2hhclRvcCIsInNjYWxlZENhbnZhc1dpZHRoIiwic2NhbGVkQ2FudmFzSGVpZ2h0IiwiX3VwZGF0ZURpbWVuc2lvbnMiLCJfaW5qZWN0Q3NzIiwiX3Jvd0ZhY3RvcnkiLCJEb21SZW5kZXJlclJvd0ZhY3RvcnkiLCJfb25MaW5rSG92ZXIiLCJfb25MaW5rTGVhdmUiLCJfdGhlbWVTdHlsZUVsZW1lbnQiLCJfZGltZW5zaW9uc1N0eWxlRWxlbWVudCIsImxldHRlclNwYWNpbmciLCJfdGVybWluYWxTZWxlY3RvciIsIkJPTERfQ0xBU1MiLCJmb250V2VpZ2h0Qm9sZCIsIklUQUxJQ19DTEFTUyIsIkNVUlNPUl9DTEFTUyIsIkNVUlNPUl9TVFlMRV9CTE9DS19DTEFTUyIsIkNVUlNPUl9CTElOS19DTEFTUyIsIkNVUlNPUl9TVFlMRV9CQVJfQ0xBU1MiLCJjdXJzb3JXaWR0aCIsIkNVUlNPUl9TVFlMRV9VTkRFUkxJTkVfQ0xBU1MiLCJvcGFxdWUiLCJvbkRldmljZVBpeGVsUmF0aW9DaGFuZ2UiLCJvbkNoYXJTaXplQ2hhbmdlZCIsInJlbmRlclJvd3MiLCJfY3JlYXRlU2VsZWN0aW9uRWxlbWVudCIsIm9uT3B0aW9uc0NoYW5nZWQiLCJjdXJzb3JCbGluayIsImN1cnNvclN0eWxlIiwiY3JlYXRlUm93IiwiX3NldENlbGxVbmRlcmxpbmUiLCJ0ZXh0RGVjb3JhdGlvbiIsIklJbnN0YW50aWF0aW9uU2VydmljZSIsIlNUUklLRVRIUk9VR0hfQ0xBU1MiLCJVTkRFUkxJTkVfQ0xBU1MiLCJESU1fQ0xBU1MiLCJfd29ya0NlbGwiLCJfY29sdW1uU2VsZWN0TW9kZSIsIl9zZWxlY3Rpb25TdGFydCIsIl9zZWxlY3Rpb25FbmQiLCJnZXRKb2luZWRDaGFyYWN0ZXJzIiwiZ2V0Q29kZSIsIk5VTExfQ0VMTF9DT0RFIiwiSm9pbmVkQ2VsbERhdGEiLCJ0cmFuc2xhdGVUb1N0cmluZyIsImlzQ3Vyc29ySGlkZGVuIiwiaXNCb2xkIiwiaXNJdGFsaWMiLCJpc0RpbSIsImlzSW52aXNpYmxlIiwiV0hJVEVTUEFDRV9DRUxMX0NIQVIiLCJnZXRDaGFycyIsImlzVW5kZXJsaW5lIiwidW5kZXJsaW5lU3R5bGUiLCJpc1VuZGVybGluZUNvbG9yRGVmYXVsdCIsImlzVW5kZXJsaW5lQ29sb3JSR0IiLCJ0ZXh0RGVjb3JhdGlvbkNvbG9yIiwiQXR0cmlidXRlRGF0YSIsImdldFVuZGVybGluZUNvbG9yIiwiZHJhd0JvbGRUZXh0SW5CcmlnaHRDb2xvcnMiLCJpc1N0cmlrZXRocm91Z2giLCJnZXRGZ0NvbG9yIiwiZ2V0RmdDb2xvck1vZGUiLCJnZXRCZ0NvbG9yIiwiZ2V0QmdDb2xvck1vZGUiLCJpc0ludmVyc2UiLCJmb3JFYWNoRGVjb3JhdGlvbkF0Q2VsbCIsImJhY2tncm91bmRDb2xvclJHQiIsImZvcmVncm91bmRDb2xvclJHQiIsIl9pc0NlbGxJblNlbGVjdGlvbiIsImlzRm9jdXNlZCIsIl9hZGRTdHlsZSIsIm11bHRpcGx5T3BhY2l0eSIsIl9hcHBseU1pbmltdW1Db250cmFzdCIsIm1pbmltdW1Db250cmFzdFJhdGlvIiwiZW5zdXJlQ29udHJhc3RSYXRpbyIsIlNlbGVjdGlvbk1vZGVsIiwiaXNTZWxlY3RBbGxBY3RpdmUiLCJzZWxlY3Rpb25TdGFydExlbmd0aCIsImZpbmFsU2VsZWN0aW9uU3RhcnQiLCJhcmVTZWxlY3Rpb25WYWx1ZXNSZXZlcnNlZCIsImZpbmFsU2VsZWN0aW9uRW5kIiwib25UcmltIiwiX29uQ2hhclNpemVDaGFuZ2UiLCJfbWVhc3VyZVN0cmF0ZWd5Iiwib25DaGFyU2l6ZUNoYW5nZSIsIl9wYXJlbnRFbGVtZW50IiwiX21lYXN1cmVFbGVtZW50IiwiY29tYmluZWREYXRhIiwiaXNDb21iaW5lZCIsInNldEZyb21DaGFyRGF0YSIsImdldEFzQ2hhckRhdGEiLCJfY2hhcmFjdGVySm9pbmVycyIsIl9uZXh0Q2hhcmFjdGVySm9pbmVySWQiLCJoYW5kbGVyIiwiZ2V0RmciLCJnZXRCZyIsIl9nZXRKb2luZWRSYW5nZXMiLCJfbWVyZ2VSYW5nZXMiLCJfc3RyaW5nUmFuZ2VzVG9DZWxsUmFuZ2VzIiwiZ2V0U3RyaW5nIiwic3RhdGljIiwiZ2V0Um9vdE5vZGUiLCJoYXNGb2N1cyIsIl9yZW5kZXJlciIsIl9pc1BhdXNlZCIsIl9uZWVkc0Z1bGxSZWZyZXNoIiwiX2lzTmV4dFJlbmRlclJlZHJhd09ubHkiLCJfbmVlZHNTZWxlY3Rpb25SZWZyZXNoIiwiX2NhbnZhc1dpZHRoIiwiX2NhbnZhc0hlaWdodCIsIl9zZWxlY3Rpb25TdGF0ZSIsIl9vbkRpbWVuc2lvbnNDaGFuZ2UiLCJfb25SZW5kZXJlZFZpZXdwb3J0Q2hhbmdlIiwiX29uUmVmcmVzaFJlcXVlc3QiLCJfcmVuZGVyRGVib3VuY2VyIiwiX2Z1bGxSZWZyZXNoIiwiX2hhbmRsZU9wdGlvbnNDaGFuZ2VkIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJfb25JbnRlcnNlY3Rpb25DaGFuZ2UiLCJ0aHJlc2hvbGQiLCJvYnNlcnZlIiwiZGlzY29ubmVjdCIsIm9uUmVmcmVzaFJlcXVlc3QiLCJpc0ludGVyc2VjdGluZyIsImludGVyc2VjdGlvblJhdGlvIiwiX2ZpcmVPbkNhbnZhc1Jlc2l6ZSIsInNldFJlbmRlcmVyIiwiUmVnRXhwIiwiX2xpbmtpZmllciIsIl9kcmFnU2Nyb2xsQW1vdW50IiwiX2VuYWJsZWQiLCJfbW91c2VEb3duVGltZVN0YW1wIiwiX29sZEhhc1NlbGVjdGlvbiIsIl9vbGRTZWxlY3Rpb25TdGFydCIsIl9vbGRTZWxlY3Rpb25FbmQiLCJfb25MaW51eE1vdXNlU2VsZWN0aW9uIiwiX29uUmVkcmF3UmVxdWVzdCIsIl9vblJlcXVlc3RTY3JvbGxMaW5lcyIsIl9tb3VzZU1vdmVMaXN0ZW5lciIsIl9tb3VzZVVwTGlzdGVuZXIiLCJfb25Nb3VzZVVwIiwib25Vc2VySW5wdXQiLCJfdHJpbUxpc3RlbmVyIiwiX29uVHJpbSIsIl9vbkJ1ZmZlckFjdGl2YXRlIiwiX21vZGVsIiwiX2FjdGl2ZVNlbGVjdGlvbk1vZGUiLCJfcmVtb3ZlTW91c2VEb3duTGlzdGVuZXJzIiwiX2lzQ2xpY2tJblNlbGVjdGlvbiIsIl9nZXRNb3VzZUJ1ZmZlckNvb3JkcyIsIl9hcmVDb29yZHNJblNlbGVjdGlvbiIsImlzQ2VsbEluU2VsZWN0aW9uIiwiX3NlbGVjdFdvcmRBdEN1cnNvciIsImdldFJhbmdlTGVuZ3RoIiwiX3NlbGVjdFdvcmRBdCIsIl9nZXRNb3VzZUV2ZW50U2Nyb2xsQW1vdW50IiwibWFjT3B0aW9uQ2xpY2tGb3JjZXNTZWxlY3Rpb24iLCJfb25JbmNyZW1lbnRhbENsaWNrIiwiX29uU2luZ2xlQ2xpY2siLCJfb25Eb3VibGVDbGljayIsIl9vblRyaXBsZUNsaWNrIiwiX2FkZE1vdXNlRG93bkxpc3RlbmVycyIsIl9kcmFnU2Nyb2xsSW50ZXJ2YWxUaW1lciIsIl9kcmFnU2Nyb2xsIiwiaGFzV2lkdGgiLCJfc2VsZWN0TGluZUF0IiwiX3NlbGVjdFRvV29yZEF0IiwiYWx0Q2xpY2tNb3Zlc0N1cnNvciIsIl9maXJlRXZlbnRJZlNlbGVjdGlvbkNoYW5nZWQiLCJfZmlyZU9uU2VsZWN0aW9uQ2hhbmdlIiwiX2NvbnZlcnRWaWV3cG9ydENvbFRvQ2hhcmFjdGVySW5kZXgiLCJfZ2V0V29yZEF0IiwiX2lzQ2hhcldvcmRTZXBhcmF0b3IiLCJnZXRDb2RlUG9pbnQiLCJ3b3JkU2VwYXJhdG9yIiwiZ2V0V3JhcHBlZFJhbmdlRm9yTGluZSIsImZpcnN0IiwiY3JlYXRlRGVjb3JhdG9yIiwiQ2lyY3VsYXJMaXN0IiwiX21heExlbmd0aCIsIm9uRGVsZXRlRW1pdHRlciIsIm9uSW5zZXJ0RW1pdHRlciIsIm9uVHJpbUVtaXR0ZXIiLCJfYXJyYXkiLCJfc3RhcnRJbmRleCIsIl9sZW5ndGgiLCJvbkRlbGV0ZSIsIm9uSW5zZXJ0IiwibWF4TGVuZ3RoIiwiX2dldEN5Y2xpY0luZGV4IiwicmVjeWNsZSIsImlzRnVsbCIsInRyaW1TdGFydCIsInNoaWZ0RWxlbWVudHMiLCJjbG9uZSIsImNvbnRyYXN0UmF0aW8iLCJ0b1BhZGRlZEhleCIsInJnYiIsInRvQ2hhbm5lbHMiLCJwYXJzZUZsb2F0IiwicmVsYXRpdmVMdW1pbmFuY2UiLCJyZWxhdGl2ZUx1bWluYW5jZTIiLCJyZWR1Y2VMdW1pbmFuY2UiLCJpbmNyZWFzZUx1bWluYW5jZSIsIl9vbkJpbmFyeSIsIl9vbkRhdGEiLCJfb25MaW5lRmVlZCIsIl9vbldyaXRlUGFyc2VkIiwiSW5zdGFudGlhdGlvblNlcnZpY2UiLCJPcHRpb25zU2VydmljZSIsIkJ1ZmZlclNlcnZpY2UiLCJMb2dTZXJ2aWNlIiwiSUxvZ1NlcnZpY2UiLCJDb3JlU2VydmljZSIsIkNvcmVNb3VzZVNlcnZpY2UiLCJJQ29yZU1vdXNlU2VydmljZSIsIl9kaXJ0eVJvd1NlcnZpY2UiLCJEaXJ0eVJvd1NlcnZpY2UiLCJJRGlydHlSb3dTZXJ2aWNlIiwidW5pY29kZVNlcnZpY2UiLCJVbmljb2RlU2VydmljZSIsIklVbmljb2RlU2VydmljZSIsIl9jaGFyc2V0U2VydmljZSIsIkNoYXJzZXRTZXJ2aWNlIiwiSUNoYXJzZXRTZXJ2aWNlIiwiT3NjTGlua1NlcnZpY2UiLCJJbnB1dEhhbmRsZXIiLCJvbkRhdGEiLCJvbkJpbmFyeSIsIm1hcmtSYW5nZURpcnR5Iiwic2Nyb2xsQm90dG9tIiwiX3dyaXRlQnVmZmVyIiwiV3JpdGVCdWZmZXIiLCJvbldyaXRlUGFyc2VkIiwiX29uU2Nyb2xsQXBpIiwiX3dpbmRvd3NNb2RlIiwid3JpdGVTeW5jIiwiTG9nTGV2ZWxFbnVtIiwiV0FSTiIsIk1JTklNVU1fQ09MUyIsIk1JTklNVU1fUk9XUyIsInNjcm9sbCIsInNjcm9sbFBhZ2VzIiwic2Nyb2xsVG9Ub3AiLCJzY3JvbGxUb0xpbmUiLCJyZWdpc3RlckVzY0hhbmRsZXIiLCJyZWdpc3RlckRjc0hhbmRsZXIiLCJyZWdpc3RlckNzaUhhbmRsZXIiLCJyZWdpc3Rlck9zY0hhbmRsZXIiLCJ3aW5kb3dzTW9kZSIsIl9lbmFibGVXaW5kb3dzTW9kZSIsInVwZGF0ZVdpbmRvd3NNb2RlV3JhcHBlZFN0YXRlIiwiZmluYWwiLCJfbGlzdGVuZXJzIiwiX2Rpc3Bvc2VkIiwiX2V2ZW50Iiwic2V0V2luTGluZXMiLCJyZXN0b3JlV2luIiwibWluaW1pemVXaW4iLCJzZXRXaW5Qb3NpdGlvbiIsInNldFdpblNpemVQaXhlbHMiLCJyYWlzZVdpbiIsImxvd2VyV2luIiwicmVmcmVzaFdpbiIsInNldFdpblNpemVDaGFycyIsIm1heGltaXplV2luIiwiZnVsbHNjcmVlbldpbiIsImdldFdpblN0YXRlIiwiZ2V0V2luUG9zaXRpb24iLCJnZXRXaW5TaXplUGl4ZWxzIiwiZ2V0U2NyZWVuU2l6ZVBpeGVscyIsImdldENlbGxTaXplUGl4ZWxzIiwiZ2V0V2luU2l6ZUNoYXJzIiwiZ2V0U2NyZWVuU2l6ZUNoYXJzIiwiZ2V0SWNvblRpdGxlIiwiZ2V0V2luVGl0bGUiLCJwdXNoVGl0bGUiLCJwb3BUaXRsZSIsIkVzY2FwZVNlcXVlbmNlUGFyc2VyIiwiX2NvcmVNb3VzZVNlcnZpY2UiLCJfdW5pY29kZVNlcnZpY2UiLCJfcGFyc2VyIiwiX3BhcnNlQnVmZmVyIiwiVWludDMyQXJyYXkiLCJfc3RyaW5nRGVjb2RlciIsIlN0cmluZ1RvVXRmMzIiLCJfdXRmOERlY29kZXIiLCJVdGY4VG9VdGYzMiIsIl93aW5kb3dUaXRsZSIsIl9pY29uTmFtZSIsIl93aW5kb3dUaXRsZVN0YWNrIiwiX2ljb25OYW1lU3RhY2siLCJfY3VyQXR0ckRhdGEiLCJfZXJhc2VBdHRyRGF0YUludGVybmFsIiwiX29uUmVxdWVzdEJlbGwiLCJfb25SZXF1ZXN0UmVmcmVzaFJvd3MiLCJfb25SZXF1ZXN0UmVzZXQiLCJfb25SZXF1ZXN0U2VuZEZvY3VzIiwiX29uUmVxdWVzdFN5bmNTY3JvbGxCYXIiLCJfb25SZXF1ZXN0V2luZG93c09wdGlvbnNSZXBvcnQiLCJfb25BMTF5Q2hhciIsIl9vbkExMXlUYWIiLCJfb25Db2xvciIsIl9wYXJzZVN0YWNrIiwicGF1c2VkIiwiY3Vyc29yU3RhcnRYIiwiY3Vyc29yU3RhcnRZIiwiZGVjb2RlZExlbmd0aCIsIl9zcGVjaWFsQ29sb3JzIiwic2V0Q3NpSGFuZGxlckZhbGxiYWNrIiwiaWRlbnRUb1N0cmluZyIsInBhcmFtcyIsInNldEVzY0hhbmRsZXJGYWxsYmFjayIsInNldEV4ZWN1dGVIYW5kbGVyRmFsbGJhY2siLCJzZXRPc2NIYW5kbGVyRmFsbGJhY2siLCJzZXREY3NIYW5kbGVyRmFsbGJhY2siLCJzZXRQcmludEhhbmRsZXIiLCJwcmludCIsImluc2VydENoYXJzIiwiaW50ZXJtZWRpYXRlcyIsImN1cnNvclVwIiwic2Nyb2xsUmlnaHQiLCJjdXJzb3JEb3duIiwiY3Vyc29yRm9yd2FyZCIsImN1cnNvckJhY2t3YXJkIiwiY3Vyc29yTmV4dExpbmUiLCJjdXJzb3JQcmVjZWRpbmdMaW5lIiwiY3Vyc29yQ2hhckFic29sdXRlIiwiY3Vyc29yUG9zaXRpb24iLCJjdXJzb3JGb3J3YXJkVGFiIiwiZXJhc2VJbkRpc3BsYXkiLCJwcmVmaXgiLCJlcmFzZUluTGluZSIsImluc2VydExpbmVzIiwiZGVsZXRlTGluZXMiLCJkZWxldGVDaGFycyIsInNjcm9sbFVwIiwic2Nyb2xsRG93biIsImVyYXNlQ2hhcnMiLCJjdXJzb3JCYWNrd2FyZFRhYiIsImNoYXJQb3NBYnNvbHV0ZSIsImhQb3NpdGlvblJlbGF0aXZlIiwicmVwZWF0UHJlY2VkaW5nQ2hhcmFjdGVyIiwic2VuZERldmljZUF0dHJpYnV0ZXNQcmltYXJ5Iiwic2VuZERldmljZUF0dHJpYnV0ZXNTZWNvbmRhcnkiLCJsaW5lUG9zQWJzb2x1dGUiLCJ2UG9zaXRpb25SZWxhdGl2ZSIsImhWUG9zaXRpb24iLCJ0YWJDbGVhciIsInNldE1vZGUiLCJzZXRNb2RlUHJpdmF0ZSIsInJlc2V0TW9kZSIsInJlc2V0TW9kZVByaXZhdGUiLCJjaGFyQXR0cmlidXRlcyIsImRldmljZVN0YXR1cyIsImRldmljZVN0YXR1c1ByaXZhdGUiLCJzb2Z0UmVzZXQiLCJzZXRDdXJzb3JTdHlsZSIsInNldFNjcm9sbFJlZ2lvbiIsInNhdmVDdXJzb3IiLCJ3aW5kb3dPcHRpb25zIiwicmVzdG9yZUN1cnNvciIsImluc2VydENvbHVtbnMiLCJkZWxldGVDb2x1bW5zIiwic2VsZWN0UHJvdGVjdGVkIiwicmVxdWVzdE1vZGUiLCJzZXRFeGVjdXRlSGFuZGxlciIsIkJFTCIsImJlbGwiLCJMRiIsImxpbmVGZWVkIiwiVlQiLCJGRiIsImNhcnJpYWdlUmV0dXJuIiwiQlMiLCJiYWNrc3BhY2UiLCJIVCIsInRhYiIsIlNPIiwic2hpZnRPdXQiLCJTSSIsInNoaWZ0SW4iLCJDMSIsIklORCIsIk5FTCIsIm5leHRMaW5lIiwiSFRTIiwidGFiU2V0IiwiT3NjSGFuZGxlciIsInNldFRpdGxlIiwic2V0SWNvbk5hbWUiLCJzZXRPclJlcG9ydEluZGV4ZWRDb2xvciIsInNldEh5cGVybGluayIsInNldE9yUmVwb3J0RmdDb2xvciIsInNldE9yUmVwb3J0QmdDb2xvciIsInNldE9yUmVwb3J0Q3Vyc29yQ29sb3IiLCJyZXN0b3JlSW5kZXhlZENvbG9yIiwicmVzdG9yZUZnQ29sb3IiLCJyZXN0b3JlQmdDb2xvciIsInJlc3RvcmVDdXJzb3JDb2xvciIsInJldmVyc2VJbmRleCIsImtleXBhZEFwcGxpY2F0aW9uTW9kZSIsImtleXBhZE51bWVyaWNNb2RlIiwiZnVsbFJlc2V0Iiwic2V0Z0xldmVsIiwic2VsZWN0RGVmYXVsdENoYXJzZXQiLCJDSEFSU0VUUyIsInNlbGVjdENoYXJzZXQiLCJzY3JlZW5BbGlnbm1lbnRQYXR0ZXJuIiwiRGNzSGFuZGxlciIsInJlcXVlc3RTdGF0dXNTdHJpbmciLCJnZXRBdHRyRGF0YSIsIl9wcmVzZXJ2ZVN0YWNrIiwiX2xvZ1Nsb3dSZXNvbHZpbmdBc3luYyIsInJhY2UiLCJjbGVhclJhbmdlIiwiZGVjb2RlIiwic3ViYXJyYXkiLCJjaGFyc2V0Iiwid3JhcGFyb3VuZCIsIm1vZGVzIiwiaW5zZXJ0TW9kZSIsIm1hcmtEaXJ0eSIsInNldENlbGxGcm9tQ29kZVBvaW50Iiwid2N3aWR0aCIsInN0cmluZ0Zyb21Db2RlUG9pbnQiLCJfY3VycmVudExpbmtJZCIsImFkZExpbmVUb0xpbmsiLCJfZXJhc2VBdHRyRGF0YSIsImluc2VydENlbGxzIiwiZ2V0TnVsbENlbGwiLCJOVUxMX0NFTExfV0lEVEgiLCJhZGRDb2RlcG9pbnRUb0NlbGwiLCJwcmVjZWRpbmdDb2RlcG9pbnQiLCJjb252ZXJ0RW9sIiwicmV2ZXJzZVdyYXBhcm91bmQiLCJfcmVzdHJpY3RDdXJzb3IiLCJuZXh0U3RvcCIsIl9zZXRDdXJzb3IiLCJfbW92ZUN1cnNvciIsInRhYnMiLCJwcmV2U3RvcCIsIl9lcmFzZUluQnVmZmVyTGluZSIsInJlcGxhY2VDZWxscyIsIl9yZXNldEJ1ZmZlckxpbmUiLCJmaWxsIiwiY2xlYXJNYXJrZXJzIiwiZGVsZXRlQ2VsbHMiLCJfaXMiLCJ0ZXJtTmFtZSIsInNldGdDaGFyc2V0IiwiREVGQVVMVF9DSEFSU0VUIiwiYXBwbGljYXRpb25LZXlwYWQiLCJhY3RpdmVFbmNvZGluZyIsImFjdGl2YXRlQWx0QnVmZmVyIiwiYWN0aXZhdGVOb3JtYWxCdWZmZXIiLCJfdXBkYXRlQXR0ckNvbG9yIiwiZnJvbUNvbG9yUkdCIiwiX2V4dHJhY3RDb2xvciIsImhhc1N1YlBhcmFtcyIsImdldFN1YlBhcmFtcyIsInVuZGVybGluZUNvbG9yIiwiX3Byb2Nlc3NVbmRlcmxpbmUiLCJ1cGRhdGVFeHRlbmRlZCIsInNhdmVkWCIsInNhdmVkWSIsInNhdmVkQ3VyQXR0ckRhdGEiLCJzYXZlZENoYXJzZXQiLCJfc2F2ZWRDaGFyc2V0IiwiZXhlYyIsInBhcnNlQ29sb3IiLCJfY3JlYXRlSHlwZXJsaW5rIiwiX2ZpbmlzaEh5cGVybGluayIsImZpbmRJbmRleCIsInJlZ2lzdGVyTGluayIsIl9zZXRPclJlcG9ydFNwZWNpYWxDb2xvciIsIm1hcmtBbGxEaXJ0eSIsImlzUHJvdGVjdGVkIiwiYmxvY2siLCJiYXIiLCJ0b0Rpc3Bvc2FibGUiLCJfZGlzcG9zYWJsZXMiLCJ1bnJlZ2lzdGVyIiwiRm91cktleU1hcCIsIl9kYXRhIiwiaXNJcGhvbmUiLCJpc0lwYWQiLCJpc1NhZmFyaSIsInVzZXJBZ2VudCIsInBsYXRmb3JtIiwiU29ydGVkTGlzdCIsIl9nZXRLZXkiLCJfc2VhcmNoIiwiZm9yRWFjaEJ5S2V5IiwidmFsdWVzIiwiZmlsbEZhbGxiYWNrIiwiQ0hBUl9EQVRBX0NPREVfSU5ERVgiLCJXSElURVNQQUNFX0NFTExfQ09ERSIsIkV4dGVuZGVkQXR0cnMiLCJpc0JsaW5rIiwiaXNGZ1JHQiIsImlzQmdSR0IiLCJpc0ZnUGFsZXR0ZSIsImlzQmdQYWxldHRlIiwiaXNGZ0RlZmF1bHQiLCJpc0JnRGVmYXVsdCIsImlzQXR0cmlidXRlRGVmYXVsdCIsImlzRW1wdHkiLCJnZXRVbmRlcmxpbmVDb2xvck1vZGUiLCJpc1VuZGVybGluZUNvbG9yUGFsZXR0ZSIsImdldFVuZGVybGluZVN0eWxlIiwiX2V4dCIsIl91cmxJZCIsImV4dCIsIkJ1ZmZlclN0cmluZ0l0ZXJhdG9yIiwiQnVmZmVyIiwiTUFYX0JVRkZFUl9TSVpFIiwiX2hhc1Njcm9sbGJhY2siLCJfbnVsbENlbGwiLCJmcm9tQ2hhckRhdGEiLCJOVUxMX0NFTExfQ0hBUiIsIl93aGl0ZXNwYWNlQ2VsbCIsIldISVRFU1BBQ0VfQ0VMTF9XSURUSCIsIl9pc0NsZWFyaW5nIiwiX2NvbHMiLCJfcm93cyIsIl9nZXRDb3JyZWN0QnVmZmVyTGVuZ3RoIiwiZ2V0V2hpdGVzcGFjZUNlbGwiLCJCdWZmZXJMaW5lIiwic2Nyb2xsYmFjayIsImZpbGxWaWV3cG9ydFJvd3MiLCJfaXNSZWZsb3dFbmFibGVkIiwiX3JlZmxvdyIsIl9yZWZsb3dMYXJnZXIiLCJfcmVmbG93U21hbGxlciIsInJlZmxvd0xhcmdlckdldExpbmVzVG9SZW1vdmUiLCJyZWZsb3dMYXJnZXJDcmVhdGVOZXdMYXlvdXQiLCJyZWZsb3dMYXJnZXJBcHBseU5ld0xheW91dCIsImxheW91dCIsIl9yZWZsb3dMYXJnZXJBZGp1c3RWaWV3cG9ydCIsImNvdW50UmVtb3ZlZCIsInJlZmxvd1NtYWxsZXJHZXROZXdMaW5lTGVuZ3RocyIsIm5ld0xpbmVzIiwiY29weUNlbGxzRnJvbSIsImdldFdyYXBwZWRMaW5lVHJpbW1lZExlbmd0aCIsInNldENlbGwiLCJzdHJpbmdJbmRleFRvQnVmZmVySW5kZXgiLCJDSEFSX0RBVEFfV0lEVEhfSU5ERVgiLCJDSEFSX0RBVEFfQ0hBUl9JTkRFWCIsInRhYlN0b3BXaWR0aCIsIk1hcmtlciIsIl9yZW1vdmVNYXJrZXIiLCJfYnVmZmVyIiwiX3RyaW1SaWdodCIsIl9lbmRJbmRleCIsIl9zdGFydE92ZXJzY2FuIiwiX2VuZE92ZXJzY2FuIiwiX2N1cnJlbnQiLCJoYXNOZXh0Iiwic3RhcnRJbmRleCIsIl9jb21iaW5lZCIsIl9leHRlbmRlZEF0dHJzIiwiQ0hBUl9EQVRBX0FUVFJfSU5ERVgiLCJjb3B5RnJvbSIsInJlZHVjZSIsIkJ1ZmZlclNldCIsIl9ub3JtYWwiLCJfYWx0IiwiaW5hY3RpdmVCdWZmZXIiLCJERUZBVUxUX0VYVCIsIkRFRkFVTFRfQVRUUiIsIkRFRkFVTFRfQ09MT1IiLCJfaWQiLCJfbmV4dElkIiwiaXNEaXNwb3NlZCIsIl9vbkRpc3Bvc2UiLCJOVUwiLCJTT0giLCJTVFgiLCJFT1QiLCJFTlEiLCJBQ0siLCJETEUiLCJEQzEiLCJEQzIiLCJEQzMiLCJEQzQiLCJOQUsiLCJTWU4iLCJFVEIiLCJDQU4iLCJFTSIsIlNVQiIsIkZTIiwiR1MiLCJSUyIsIlVTIiwiU1AiLCJQQUQiLCJIT1AiLCJCUEgiLCJOQkgiLCJTU0EiLCJFU0EiLCJIVEoiLCJWVFMiLCJQTEQiLCJQTFUiLCJSSSIsIlNTMiIsIlNTMyIsIkRDUyIsIlBVMSIsIlBVMiIsIlNUUyIsIkNDSCIsIk1XIiwiU1BBIiwiRVBBIiwiU09TIiwiU0dDSSIsIlNDSSIsIkNTSSIsIk9TQyIsIlBNIiwiQVBDIiwidXRmMzJUb1N0cmluZyIsIl9pbnRlcmltIiwiaW50ZXJpbSIsIlVuaWNvZGVWNiIsIl9hY3Rpb24iLCJfY2FsbGJhY2tzIiwiX3BlbmRpbmdEYXRhIiwiX2J1ZmZlck9mZnNldCIsIl9pc1N5bmNXcml0aW5nIiwiX3N5bmNDYWxscyIsIl9pbm5lcldyaXRlIiwiUEFZTE9BRF9MSU1JVCIsIkRjc1BhcnNlciIsIl9oYW5kbGVycyIsIl9hY3RpdmUiLCJfaWRlbnQiLCJfaGFuZGxlckZiIiwiX3N0YWNrIiwibG9vcFBvc2l0aW9uIiwiZmFsbFRocm91Z2giLCJyZWdpc3RlckhhbmRsZXIiLCJjbGVhckhhbmRsZXIiLCJzZXRIYW5kbGVyRmFsbGJhY2siLCJ1bmhvb2siLCJob29rIiwicHV0IiwiUGFyYW1zIiwiYWRkUGFyYW0iLCJfaGFuZGxlciIsIl9wYXJhbXMiLCJfaGl0TGltaXQiLCJWVDUwMF9UUkFOU0lUSU9OX1RBQkxFIiwiVHJhbnNpdGlvblRhYmxlIiwidGFibGUiLCJzZXREZWZhdWx0IiwiYWRkTWFueSIsIl90cmFuc2l0aW9ucyIsImhhbmRsZXJzIiwiaGFuZGxlclBvcyIsImNodW5rUG9zIiwiaW5pdGlhbFN0YXRlIiwiY3VycmVudFN0YXRlIiwiX2NvbGxlY3QiLCJfcHJpbnRIYW5kbGVyRmIiLCJfZXhlY3V0ZUhhbmRsZXJGYiIsIl9jc2lIYW5kbGVyRmIiLCJfZXNjSGFuZGxlckZiIiwiX2Vycm9ySGFuZGxlckZiIiwiX3ByaW50SGFuZGxlciIsIl9leGVjdXRlSGFuZGxlcnMiLCJfY3NpSGFuZGxlcnMiLCJfZXNjSGFuZGxlcnMiLCJfb3NjUGFyc2VyIiwiT3NjUGFyc2VyIiwiX2Rjc1BhcnNlciIsIl9lcnJvckhhbmRsZXIiLCJfaWRlbnRpZmllciIsInJldmVyc2UiLCJjbGVhclByaW50SGFuZGxlciIsImNsZWFyRXNjSGFuZGxlciIsImNsZWFyRXhlY3V0ZUhhbmRsZXIiLCJjbGVhckNzaUhhbmRsZXIiLCJjbGVhckRjc0hhbmRsZXIiLCJjbGVhck9zY0hhbmRsZXIiLCJjbGVhckVycm9ySGFuZGxlciIsImNvbGxlY3QiLCJhYm9ydCIsImFkZFN1YlBhcmFtIiwiYWRkRGlnaXQiLCJfc3RhdGUiLCJfc3RhcnQiLCJfcHV0IiwibWF4U3ViUGFyYW1zTGVuZ3RoIiwiSW50MzJBcnJheSIsIl9zdWJQYXJhbXMiLCJfc3ViUGFyYW1zTGVuZ3RoIiwiX3N1YlBhcmFtc0lkeCIsIlVpbnQxNkFycmF5IiwiX3JlamVjdERpZ2l0cyIsIl9yZWplY3RTdWJEaWdpdHMiLCJfZGlnaXRJc1N1YiIsImdldFN1YlBhcmFtc0FsbCIsIkFkZG9uTWFuYWdlciIsIl9hZGRvbnMiLCJsb2FkQWRkb24iLCJfd3JhcHBlZEFkZG9uRGlzcG9zZSIsIkJ1ZmZlckFwaVZpZXciLCJpbml0IiwiY3Vyc29yWSIsImN1cnNvclgiLCJ2aWV3cG9ydFkiLCJiYXNlWSIsImdldExpbmUiLCJCdWZmZXJMaW5lQXBpVmlldyIsIl9saW5lIiwiZ2V0Q2VsbCIsIkJ1ZmZlck5hbWVzcGFjZUFwaSIsIl9jb3JlIiwiX29uQnVmZmVyQ2hhbmdlIiwiX2FsdGVybmF0ZSIsIm9uQnVmZmVyQ2hhbmdlIiwiUGFyc2VyQXBpIiwiYWRkQ3NpSGFuZGxlciIsImFkZERjc0hhbmRsZXIiLCJhZGRFc2NIYW5kbGVyIiwiYWRkT3NjSGFuZGxlciIsIlVuaWNvZGVBcGkiLCJ2ZXJzaW9ucyIsImFjdGl2ZVZlcnNpb24iLCJpc1VzZXJTY3JvbGxpbmciLCJfY2FjaGVkQmxhbmtMaW5lIiwiZ2xldmVsIiwiX2NoYXJzZXRzIiwiTk9ORSIsImV2ZW50cyIsInJlc3RyaWN0IiwiWDEwIiwiVlQyMDAiLCJEUkFHIiwiQU5ZIiwiREVGQVVMVCIsIlNHUiIsIlNHUl9QSVhFTFMiLCJfcHJvdG9jb2xzIiwiX2VuY29kaW5ncyIsIl9hY3RpdmVQcm90b2NvbCIsIl9hY3RpdmVFbmNvZGluZyIsIl9vblByb3RvY29sQ2hhbmdlIiwiX2xhc3RFdmVudCIsImFkZFByb3RvY29sIiwiYWRkRW5jb2RpbmciLCJfZXF1YWxFdmVudHMiLCJ0cmlnZ2VyQmluYXJ5RXZlbnQiLCJkb3duIiwidXAiLCJkcmFnIiwibW92ZSIsIl9vblVzZXJJbnB1dCIsIl9zY3JvbGxUb0JvdHRvbSIsImRpc2FibGVTdGRpbiIsInhtaW4iLCJ4bWF4IiwiX2RlY29yYXRpb25zIiwiX29uRGVjb3JhdGlvblJlZ2lzdGVyZWQiLCJfb25EZWNvcmF0aW9uUmVtb3ZlZCIsImdldEtleUl0ZXJhdG9yIiwiX2NhY2hlZEJnIiwiX2NhY2hlZEZnIiwiZm9yZWdyb3VuZENvbG9yIiwiX2VuZCIsIlNlcnZpY2VDb2xsZWN0aW9uIiwiX2VudHJpZXMiLCJfc2VydmljZXMiLCJnZXRTZXJ2aWNlIiwiZ2V0U2VydmljZURlcGVuZGVuY2llcyIsInNvcnQiLCJvZmYiLCJPRkYiLCJfdXBkYXRlTG9nTGV2ZWwiLCJfZXZhbExhenlPcHRpb25hbFBhcmFtcyIsIl9sb2ciLCJERUZBVUxUX09QVElPTlMiLCJjdXN0b21HbHlwaHMiLCJhbGxvd1Byb3Bvc2VkQXBpIiwiX29uT3B0aW9uQ2hhbmdlIiwiX3Nhbml0aXplQW5kVmFsaWRhdGVPcHRpb24iLCJfc2V0dXBPcHRpb25zIiwiX2VudHJpZXNXaXRoSWQiLCJfZGF0YUJ5TGlua0lkIiwiX3JlbW92ZU1hcmtlckZyb21MaW5rIiwiX2dldEVudHJ5SWRLZXkiLCJldmVyeSIsImRpJHRhcmdldCIsImRpJGRlcGVuZGVuY2llcyIsInNlcnZpY2VSZWdpc3RyeSIsIl9wcm92aWRlcnMiLCJfb25DaGFuZ2UiLCJfYWN0aXZlUHJvdmlkZXIiLCJvbkNoYW5nZSIsImdldFN0cmluZ0NlbGxXaWR0aCIsIl9hZGRvbk1hbmFnZXIiLCJfcHVibGljT3B0aW9ucyIsIl9jaGVja1JlYWRvbmx5T3B0aW9ucyIsIl9jaGVja1Byb3Bvc2VkQXBpIiwicGFyc2VyIiwidW5pY29kZSIsImFwcGxpY2F0aW9uQ3Vyc29yS2V5c01vZGUiLCJhcHBsaWNhdGlvbktleXBhZE1vZGUiLCJtb3VzZVRyYWNraW5nTW9kZSIsIm9yaWdpbk1vZGUiLCJyZXZlcnNlV3JhcGFyb3VuZE1vZGUiLCJzZW5kRm9jdXNNb2RlIiwid3JhcGFyb3VuZE1vZGUiLCJfdmVyaWZ5SW50ZWdlcnMiLCJyZWdpc3Rlck1hcmtlciIsIl92ZXJpZnlQb3NpdGl2ZUludGVnZXJzIiwid3JpdGVsbiIsInN0cmluZ3MiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJnZXR0ZXIiLCJkZWZpbml0aW9uIiwicHJvcCIsIm5jIiwidXNlIiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJXZWJraXRMaW5lQ2xhbXAiLCJyZWFjdFByb3BzUmVnZXgiLCJmbiIsImFyZyIsInN0eWxlZENvbXBvbmVudElkIiwicHJvY2VzcyIsImVudiIsIlJFQUNUX0FQUF9TQ19BVFRSIiwiU0NfQVRUUiIsIkJvb2xlYW4iLCJTQ19ESVNBQkxFX1NQRUVEWSIsIlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSIsImdyb3VwU2l6ZXMiLCJpbmRleE9mR3JvdXAiLCJpbnNlcnRSdWxlcyIsImluc2VydFJ1bGUiLCJjbGVhckdyb3VwIiwiZGVsZXRlUnVsZSIsImdldEdyb3VwIiwiZ2V0UnVsZSIsInJlZ2lzdGVyTmFtZSIsImdldFRhZyIsImNoaWxkTm9kZXMiLCJoYXNBdHRyaWJ1dGUiLCJzaGVldCIsInN0eWxlU2hlZXRzIiwib3duZXJOb2RlIiwiY3NzUnVsZXMiLCJub2RlcyIsInJ1bGVzIiwiaXNTZXJ2ZXIiLCJ1c2VDU1NPTUluamVjdGlvbiIsImdzIiwibmFtZXMiLCJyZWdpc3RlcklkIiwicmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImFsbG9jYXRlR1NJbnN0YW5jZSIsImhhc05hbWVGb3JJZCIsImNsZWFyTmFtZXMiLCJjbGVhclJ1bGVzIiwiY2xlYXJUYWciLCJzdGF0aWNSdWxlc0lkIiwiaXNTdGF0aWMiLCJjb21wb25lbnRJZCIsImJhc2VIYXNoIiwiYmFzZVN0eWxlIiwiZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMiLCJoYXNoIiwicGx1Z2lucyIsInN0eWxpc1BsdWdpbnMiLCJkaXNhYmxlQ1NTT01JbmplY3Rpb24iLCJkaXNhYmxlVmVuZG9yUHJlZml4ZXMiLCJnZXROYW1lIiwiX2UiLCJpc0NzcyIsIkdlIiwiYXR0cnMiLCJwYXJlbnRDb21wb25lbnRJZCIsImZpbHRlciIsInNob3VsZEZvcndhcmRQcm9wIiwiY29tcG9uZW50U3R5bGUiLCJmb2xkZWRDb21wb25lbnRJZHMiLCIkYXMiLCJhcyIsImNsYXNzTmFtZSIsIndpdGhDb21wb25lbnQiLCJfZm9sZGVkRGVmYXVsdFByb3BzIiwid2l0aENvbmZpZyIsImNyZWF0ZVN0eWxlcyIsInJlbW92ZVN0eWxlcyIsInJlbmRlclN0eWxlcyIsIl9lbWl0U2hlZXRDU1MiLCJnZXRTdHlsZVRhZ3MiLCJzZWFsZWQiLCJnZXRTdHlsZUVsZW1lbnQiLCJzZWFsIiwiY29sbGVjdFN0eWxlcyIsImludGVybGVhdmVXaXRoTm9kZVN0cmVhbSIsImlzRmFsc3kiLCJUZXJtIiwibW91bnRlZFdvcmthcm91bmQiLCJnZXRFbGVtZW50QnlJZCIsInh0ZXJtIiwiaGFuZGxlS2V5UHJlc3MiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJyZWFkVGV4dCIsIlNvbCIsIm1wc1NlcnZlciIsImRldmljZVV1aWQiLCJkZXZpY2VJZCIsInJlZGlyZWN0b3IiLCJGaWxlUmVhZGVyIiwiZGF0YVByb2Nlc3NvciIsIm9uVGVybWluYWxTdGF0ZUNoYW5nZSIsImhhbmRsZVdyaXRlVG9YdGVybSIsImhhbmRsZUNsZWFyVGVybWluYWwiLCJ0ZXJtIiwiY2xlYW5VcCIsInN0ciIsImhhbmRsZUtleURvd25QcmVzcyIsImhhbmRsZUtleURvd25FdmVudHMiLCJzdGFydFNPTCIsIldlYlNvY2tldCIsInN0b3BTT0wiLCJoYW5kbGVTT0xDb25uZWN0IiwiU09Mc3RhdGUiLCJoYW5kbGVGZWF0dXJlU3RhdHVzIiwic29sTm90RW5hYmxlZCIsImdldFNPTFN0YXRlIiwicG93ZXJTdGF0ZSIsInNob3dTdWNjZXNzIiwiaXNTZWxlY3RlZCIsImRldmljZU9uU2xlZXAiLCJpc1Bvd2VyU3RhdGVMb2FkZWQiLCJfY2xhc3NDYWxsQ2hlY2siLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl90b1Byb3BlcnR5S2V5IiwiaGludCIsInByaW0iLCJ0b1ByaW1pdGl2ZSIsInJlcyIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwid3JpdGFibGUiLCJfY3JlYXRlQ2xhc3MiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiUmVmZXJlbmNlRXJyb3IiLCJfc2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2dldFByb3RvdHlwZU9mIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwib3duS2V5cyQ2Iiwib2JqZWN0IiwiZW51bWVyYWJsZU9ubHkiLCJzeW1ib2xzIiwic3ltIiwiX29iamVjdFNwcmVhZCQ2IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImNvbnNvbGVMb2dnZXIiLCJhcmdzIiwib3V0cHV0IiwiTG9nZ2VyIiwiY29uY3JldGVMb2dnZXIiLCJib29sIiwiX2xlbiIsIl9rZXkiLCJmb3J3YXJkIiwiX2xlbjIiLCJfa2V5MiIsIl9sZW4zIiwiX2tleTMiLCJfbGVuNCIsIl9rZXk0IiwibHZsIiwiZGVidWdPbmx5IiwibW9kdWxlTmFtZSIsImJhc2VMb2dnZXIiLCJvYnNlcnZlcnMiLCJfdGhpcyIsImNsb25lZCIsIm9ic2VydmVyIiwiX2Nsb25lZCIsImRlZmVyIiwicmVqIiwicHJvbWlzZSIsInJlamVjdCIsIm1ha2VTdHJpbmciLCJjb3B5IiwiZ2V0TGFzdE9mUGF0aCIsInBhdGgiLCJFbXB0eSIsImNsZWFuS2V5IiwiY2FuTm90VHJhdmVyc2VEZWVwZXIiLCJzZXRQYXRoIiwibmV3VmFsdWUiLCJfZ2V0TGFzdE9mUGF0aCIsImdldFBhdGgiLCJfZ2V0TGFzdE9mUGF0aDMiLCJnZXRQYXRoV2l0aERlZmF1bHRzIiwiZGVmYXVsdERhdGEiLCJkZWVwRXh0ZW5kIiwib3ZlcndyaXRlIiwicmVnZXhFc2NhcGUiLCJfZW50aXR5TWFwIiwiaXNJRTEwIiwidXNlckFnZW50RGF0YSIsImNoYXJzIiwib3duS2V5cyQ1IiwiX29iamVjdFNwcmVhZCQ1IiwiZGVlcEZpbmQiLCJrZXlTZXBhcmF0b3IiLCJwYXRocyIsIm1peCIsImVuZHNXaXRoIiwiam9pbmVkUGF0aCIsIlJlc291cmNlU3RvcmUiLCJfRXZlbnRFbWl0dGVyIiwiRGVyaXZlZCIsImhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfc3VwZXIiLCJzaGFtIiwiUHJveHkiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0JDMiLCJTdXBlciIsIk5ld1RhcmdldCIsIm5zIiwiZGVmYXVsdE5TIiwiaWdub3JlSlNPTlN0cnVjdHVyZSIsImxuZyIsInNpbGVudCIsImFkZE5hbWVzcGFjZXMiLCJlbWl0IiwicmVzb3VyY2VzIiwiYWRkUmVzb3VyY2UiLCJkZWVwIiwicGFjayIsImhhc1Jlc291cmNlQnVuZGxlIiwicmVtb3ZlTmFtZXNwYWNlcyIsImdldFJlc291cmNlIiwiY29tcGF0aWJpbGl0eUFQSSIsImdldERhdGFCeUxhbmd1YWdlIiwicG9zdFByb2Nlc3NvciIsInByb2Nlc3NvcnMiLCJhZGRQb3N0UHJvY2Vzc29yIiwiaGFuZGxlIiwidHJhbnNsYXRvciIsInByb2Nlc3NvciIsIm93bktleXMkNCIsIl9vYmplY3RTcHJlYWQkNCIsImNoZWNrZWRMb2FkZWRGb3IiLCJUcmFuc2xhdG9yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCQyIiwic2VydmljZXMiLCJsYW5ndWFnZSIsImludGVycG9sYXRpb24iLCJyZXNvbHZlZCIsIm5zU2VwYXJhdG9yIiwibmFtZXNwYWNlcyIsIndvdWxkQ2hlY2tGb3JOc0luS2V5Iiwic2VlbXNOYXR1cmFsTGFuZ3VhZ2UiLCJ1c2VyRGVmaW5lZEtleVNlcGFyYXRvciIsInVzZXJEZWZpbmVkTnNTZXBhcmF0b3IiLCJwb3NzaWJsZUNoYXJzIiwibWF0Y2hlZCIsImxvb2tzTGlrZU9iamVjdFBhdGgiLCJpbnRlcnBvbGF0b3IiLCJuZXN0aW5nUmVnZXhwIiwicGFydHMiLCJsYXN0S2V5IiwiX3RoaXMyIiwib3ZlcmxvYWRUcmFuc2xhdGlvbk9wdGlvbkhhbmRsZXIiLCJyZXR1cm5EZXRhaWxzIiwiX3RoaXMkZXh0cmFjdEZyb21LZXkiLCJleHRyYWN0RnJvbUtleSIsIm5hbWVzcGFjZSIsImFwcGVuZE5hbWVzcGFjZVRvQ0lNb2RlIiwicmVzVXNlZEtleSIsInVzZWRLZXkiLCJyZXNFeGFjdFVzZWRLZXkiLCJleGFjdFVzZWRLZXkiLCJyZXNUeXBlIiwibm9PYmplY3QiLCJqb2luQXJyYXlzIiwiaGFuZGxlQXNPYmplY3RJbkkxOG5Gb3JtYXQiLCJpMThuRm9ybWF0IiwiaGFuZGxlQXNPYmplY3QiLCJyZXR1cm5PYmplY3RzIiwicmV0dXJuZWRPYmplY3RIYW5kbGVyIiwicmVzVHlwZUlzQXJyYXkiLCJuZXdLZXlUb1VzZSIsImRlZXBLZXkiLCJ0cmFuc2xhdGUiLCJleHRlbmRUcmFuc2xhdGlvbiIsInVzZWREZWZhdWx0IiwibmVlZHNQbHVyYWxIYW5kbGluZyIsImhhc0RlZmF1bHRWYWx1ZSIsImRlZmF1bHRWYWx1ZVN1ZmZpeCIsInBsdXJhbFJlc29sdmVyIiwiZ2V0U3VmZml4IiwiaXNWYWxpZExvb2t1cCIsIm1pc3NpbmdLZXlOb1ZhbHVlRmFsbGJhY2tUb0tleSIsInJlc0Zvck1pc3NpbmciLCJ1cGRhdGVNaXNzaW5nIiwibG5ncyIsImZhbGxiYWNrTG5ncyIsImxhbmd1YWdlVXRpbHMiLCJnZXRGYWxsYmFja0NvZGVzIiwiZmFsbGJhY2tMbmciLCJzYXZlTWlzc2luZ1RvIiwidG9SZXNvbHZlSGllcmFyY2h5Iiwic3BlY2lmaWNEZWZhdWx0VmFsdWUiLCJkZWZhdWx0Rm9yTWlzc2luZyIsIm1pc3NpbmdLZXlIYW5kbGVyIiwiYmFja2VuZENvbm5lY3RvciIsInNhdmVNaXNzaW5nIiwic2F2ZU1pc3NpbmdQbHVyYWxzIiwiZ2V0U3VmZml4ZXMiLCJzdWZmaXgiLCJhcHBlbmROYW1lc3BhY2VUb01pc3NpbmdLZXkiLCJwYXJzZU1pc3NpbmdLZXlIYW5kbGVyIiwiX3RoaXMzIiwiZGVmYXVsdFZhcmlhYmxlcyIsInVzZWRMbmciLCJ1c2VkTlMiLCJza2lwSW50ZXJwb2xhdGlvbiIsIm5lc3RCZWYiLCJza2lwT25WYXJpYWJsZXMiLCJpbnRlcnBvbGF0ZSIsIm5lc3QiLCJwb3N0UHJvY2VzcyIsInBvc3RQcm9jZXNzb3JOYW1lcyIsImFwcGx5UG9zdFByb2Nlc3NvciIsInBvc3RQcm9jZXNzUGFzc1Jlc29sdmVkIiwiaTE4blJlc29sdmVkIiwiZm91bmQiLCJfdGhpczQiLCJleHRyYWN0ZWQiLCJmYWxsYmFja05TIiwibmVlZHNaZXJvU3VmZml4TG9va3VwIiwib3JkaW5hbCIsInNob3VsZFVzZUludGxBcGkiLCJuZWVkc0NvbnRleHRIYW5kbGluZyIsInV0aWxzIiwiaGFzTG9hZGVkTmFtZXNwYWNlIiwicG9zc2libGVLZXkiLCJmaW5hbEtleXMiLCJhZGRMb29rdXBLZXlzIiwicGx1cmFsU3VmZml4IiwiemVyb1N1ZmZpeCIsInBsdXJhbFNlcGFyYXRvciIsImNvbnRleHRLZXkiLCJjb250ZXh0U2VwYXJhdG9yIiwicmV0dXJuTnVsbCIsInJldHVybkVtcHR5U3RyaW5nIiwicmVzb3VyY2VTdG9yZSIsIm9wdGlvbiIsImNhcGl0YWxpemUiLCJzdHJpbmciLCJMYW5ndWFnZVV0aWwiLCJzdXBwb3J0ZWRMbmdzIiwiZm9ybWF0TGFuZ3VhZ2VDb2RlIiwic3BlY2lhbENhc2VzIiwibG93ZXJDYXNlTG5nIiwicGFydCIsImNsZWFuQ29kZSIsImxvYWQiLCJub25FeHBsaWNpdFN1cHBvcnRlZExuZ3MiLCJnZXRMYW5ndWFnZVBhcnRGcm9tQ29kZSIsImNsZWFuZWRMbmciLCJpc1N1cHBvcnRlZENvZGUiLCJsbmdPbmx5Iiwic3VwcG9ydGVkTG5nIiwiZmFsbGJhY2tzIiwiZ2V0U2NyaXB0UGFydEZyb21Db2RlIiwiZmFsbGJhY2tDb2RlIiwiZmFsbGJhY2tDb2RlcyIsImFkZENvZGUiLCJzZXRzIiwibnIiLCJfcnVsZXNQbHVyYWxzVHlwZXMiLCJkZXByZWNhdGVkSnNvblZlcnNpb25zIiwic3VmZml4ZXNPcmRlciIsInplcm8iLCJvbmUiLCJ0d28iLCJmZXciLCJtYW55Iiwib3RoZXIiLCJjcmVhdGVSdWxlcyIsIm51bWJlcnMiLCJwbHVyYWxzIiwiUGx1cmFsUmVzb2x2ZXIiLCJjb21wYXRpYmlsaXR5SlNPTiIsIkludGwiLCJQbHVyYWxSdWxlcyIsIl91bnVzZWQiLCJydWxlIiwicmVzb2x2ZWRPcHRpb25zIiwicGx1cmFsQ2F0ZWdvcmllcyIsInBsdXJhbENhdGVnb3J5MSIsInBsdXJhbENhdGVnb3J5MiIsInBsdXJhbENhdGVnb3J5IiwicHJlcGVuZCIsImdldFN1ZmZpeFJldHJvQ29tcGF0aWJsZSIsIm5vQWJzIiwic2ltcGxpZnlQbHVyYWxTdWZmaXgiLCJyZXR1cm5TdWZmaXgiLCJvd25LZXlzJDMiLCJfb2JqZWN0U3ByZWFkJDMiLCJJbnRlcnBvbGF0b3IiLCJmb3JtYXQiLCJlc2NhcGVWYWx1ZSIsImlPcHRzIiwidXNlUmF3VmFsdWVUb0VzY2FwZSIsInByZWZpeEVzY2FwZWQiLCJzdWZmaXhFc2NhcGVkIiwiZm9ybWF0U2VwYXJhdG9yIiwidW5lc2NhcGVQcmVmaXgiLCJ1bmVzY2FwZVN1ZmZpeCIsIm5lc3RpbmdQcmVmaXgiLCJuZXN0aW5nUHJlZml4RXNjYXBlZCIsIm5lc3RpbmdTdWZmaXgiLCJuZXN0aW5nU3VmZml4RXNjYXBlZCIsIm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yIiwibWF4UmVwbGFjZXMiLCJhbHdheXNGb3JtYXQiLCJyZXNldFJlZ0V4cCIsInJlZ2V4cFN0ciIsInJlZ2V4cCIsInJlZ2V4cFVuZXNjYXBlU3RyIiwicmVnZXhwVW5lc2NhcGUiLCJuZXN0aW5nUmVnZXhwU3RyIiwicmVwbGFjZXMiLCJyZWdleFNhZmUiLCJoYW5kbGVGb3JtYXQiLCJpbnRlcnBvbGF0aW9ua2V5IiwibWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyIiwicmVnZXgiLCJzYWZlVmFsdWUiLCJ0b2RvIiwibWF0Y2hlZFZhciIsInRlbXAiLCJsYXN0SW5kZXgiLCJjbG9uZWRPcHRpb25zIiwiaGFuZGxlSGFzT3B0aW9ucyIsImluaGVyaXRlZE9wdGlvbnMiLCJzZXAiLCJvcHRpb25zU3RyaW5nIiwibWF0Y2hlZFNpbmdsZVF1b3RlcyIsIm1hdGNoZWREb3VibGVRdW90ZXMiLCJmb3JtYXR0ZXJzIiwiZG9SZWR1Y2UiLCJlbGVtIiwib3duS2V5cyQyIiwiX29iamVjdFNwcmVhZCQyIiwiY3JlYXRlQ2FjaGVkRm9ybWF0dGVyIiwiZm9ybWF0dGVyIiwiRm9ybWF0dGVyIiwiZm9ybWF0cyIsIk51bWJlckZvcm1hdCIsImN1cnJlbmN5IiwiRGF0ZVRpbWVGb3JtYXQiLCJyZWxhdGl2ZXRpbWUiLCJSZWxhdGl2ZVRpbWVGb3JtYXQiLCJMaXN0Rm9ybWF0IiwiX2Zvcm1hdCIsIm1lbSIsIl9wYXJzZUZvcm1hdFN0ciIsImZvcm1hdFN0ciIsImZvcm1hdE5hbWUiLCJmb3JtYXRPcHRpb25zIiwib3B0U3RyIiwib3B0IiwiX29wdCRzcGxpdDIiLCJpdGVyIiwiZnJvbSIsIm1pbkxlbiIsIl90b0FycmF5IiwicGFyc2VGb3JtYXRTdHIiLCJmb3JtYXR0ZWQiLCJ2YWxPcHRpb25zIiwiZm9ybWF0UGFyYW1zIiwib3duS2V5cyQxIiwiX29iamVjdFNwcmVhZCQxIiwiQ29ubmVjdG9yIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCQxIiwiYmFja2VuZCIsInN0b3JlIiwid2FpdGluZ1JlYWRzIiwibWF4UGFyYWxsZWxSZWFkcyIsInJlYWRpbmdDYWxscyIsIm1heFJldHJpZXMiLCJyZXRyeVRpbWVvdXQiLCJsYW5ndWFnZXMiLCJ0b0xvYWQiLCJ0b0xvYWRMYW5ndWFnZXMiLCJ0b0xvYWROYW1lc3BhY2VzIiwiaGFzQWxsTmFtZXNwYWNlcyIsInJlbG9hZCIsInBlbmRpbmdDb3VudCIsImxvYWRlZCIsImVycm9ycyIsImFkZFJlc291cmNlQnVuZGxlIiwiX2dldExhc3RPZlBhdGgyIiwicHVzaFBhdGgiLCJyZW1vdmVQZW5kaW5nIiwibG9hZGVkS2V5cyIsImZjTmFtZSIsInRyaWVkIiwid2FpdCIsInJlc29sdmVyIiwicmVhZCIsInF1ZXVlTG9hZCIsImxvYWRPbmUiLCJwcmVwYXJlTG9hZGluZyIsIl90aGlzNSIsImZhbGxiYWNrVmFsdWUiLCJpc1VwZGF0ZSIsImNsYiIsIm9wdHMiLCJpbml0SW1tZWRpYXRlIiwicHJlbG9hZCIsInBhcnRpYWxCdW5kbGVkTGFuZ3VhZ2VzIiwidERlc2NyaXB0aW9uIiwidHJhbnNmb3JtT3B0aW9ucyIsIm93bktleXMiLCJfb2JqZWN0U3ByZWFkIiwibm9vcCIsImJpbmRNZW1iZXJGdW5jdGlvbnMiLCJpbnN0IiwiSTE4biIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJleHRlcm5hbCIsImlzSW5pdGlhbGl6ZWQiLCJpc0Nsb25lIiwiZGVmT3B0cyIsImNyZWF0ZUNsYXNzT25EZW1hbmQiLCJDbGFzc09yT2JqZWN0IiwibHUiLCJvbiIsImxhbmd1YWdlRGV0ZWN0b3IiLCJkZXRlY3Rpb24iLCJzdG9yZUFwaSIsIl90aGlzMiRzdG9yZSIsInN0b3JlQXBpQ2hhaW5lZCIsIl90aGlzMiRzdG9yZTIiLCJkZWZlcnJlZCIsImZpbmlzaCIsImluaXRpYWxpemVkU3RvcmVPbmNlIiwiY2hhbmdlTGFuZ3VhZ2UiLCJ1c2VkQ2FsbGJhY2siLCJhcHBlbmQiLCJyZXNvbHZlZExhbmd1YWdlIiwic2V0UmVzb2x2ZWRMYW5ndWFnZSIsImxuZ0luTG5ncyIsImhhc0xhbmd1YWdlU29tZVRyYW5zbGF0aW9ucyIsImlzTGFuZ3VhZ2VDaGFuZ2luZ1RvIiwic2V0TG5nUHJvcHMiLCJzZXRMbmciLCJnZXRCZXN0TWF0Y2hGcm9tQ29kZXMiLCJjYWNoZVVzZXJMYW5ndWFnZSIsImxvYWRSZXNvdXJjZXMiLCJhc3luYyIsImRldGVjdCIsImtleVByZWZpeCIsImZpeGVkVCIsInJlc3QiLCJyZXN1bHRLZXkiLCJfdGhpcyR0cmFuc2xhdG9yIiwiX3RoaXMkdHJhbnNsYXRvcjIiLCJleGlzdHMiLCJfdGhpczYiLCJsYXN0TG5nIiwibG9hZE5vdFBlbmRpbmciLCJsb2FkU3RhdGUiLCJwcmVjaGVjayIsInByZVJlc3VsdCIsIl90aGlzNyIsInByZWxvYWRlZCIsIm5ld0xuZ3MiLCJfdGhpczgiLCJtZXJnZWRPcHRpb25zIiwibWVtYmVyc1RvQ29weSIsInJlbG9hZFJlc291cmNlcyIsImdldEZpeGVkVCIsInNldERlZmF1bHROYW1lc3BhY2UiLCJsb2FkTmFtZXNwYWNlcyIsImxvYWRMYW5ndWFnZXMiLCJlYWNoIiwiZGVmYXVsdHMiLCJmaWVsZENvbnRlbnRSZWdFeHAiLCJzZXJpYWxpemVDb29raWUiLCJtYXhBZ2UiLCJkb21haW4iLCJleHBpcmVzIiwidG9VVENTdHJpbmciLCJodHRwT25seSIsInNlY3VyZSIsInNhbWVTaXRlIiwiY29va2llJDEiLCJsb29rdXAiLCJsb29rdXBDb29raWUiLCJuYW1lRVEiLCJjb29raWUiLCJtaW51dGVzIiwiY29va2llT3B0aW9ucyIsInNldFRpbWUiLCJjb29raWVNaW51dGVzIiwiY29va2llRG9tYWluIiwicXVlcnlzdHJpbmciLCJwb3MiLCJsb29rdXBRdWVyeXN0cmluZyIsImhhc0xvY2FsU3RvcmFnZVN1cHBvcnQiLCJsb2NhbFN0b3JhZ2VBdmFpbGFibGUiLCJsb2NhbFN0b3JhZ2UiLCJ0ZXN0S2V5Iiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJsb29rdXBMb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiaGFzU2Vzc2lvblN0b3JhZ2VTdXBwb3J0Iiwic2Vzc2lvblN0b3JhZ2VBdmFpbGFibGUiLCJzZXNzaW9uU3RvcmFnZSIsImxvb2t1cFNlc3Npb25TdG9yYWdlIiwibmF2aWdhdG9yJDEiLCJ1c2VyTGFuZ3VhZ2UiLCJodG1sVGFnIiwibG9va3VwRnJvbVBhdGhJbmRleCIsInN1YmRvbWFpbiIsImxvb2t1cEZyb21TdWJkb21haW5JbmRleCIsImhvc3RuYW1lIiwiQnJvd3NlciIsImRldGVjdG9ycyIsImkxOG5PcHRpb25zIiwiY2FjaGVzIiwiZXhjbHVkZUNhY2hlRm9yIiwibG9va3VwRnJvbVVybEluZGV4IiwiYWRkRGV0ZWN0b3IiLCJkZXRlY3RvciIsImRldGVjdGlvbk9yZGVyIiwiZGV0ZWN0ZWQiLCJkZXRlY3Rvck5hbWUiLCJjYWNoZU5hbWUiLCJtYXRjaEh0bWxFbnRpdHkiLCJodG1sRW50aXRpZXMiLCJ1bmVzY2FwZUh0bWxFbnRpdHkiLCJkZWZhdWx0T3B0aW9ucyIsImJpbmRJMThuIiwiYmluZEkxOG5TdG9yZSIsInRyYW5zRW1wdHlOb2RlVmFsdWUiLCJ0cmFuc1N1cHBvcnRCYXNpY0h0bWxOb2RlcyIsInRyYW5zV3JhcFRleHROb2RlcyIsInRyYW5zS2VlcEJhc2ljSHRtbE5vZGVzRm9yIiwidXNlU3VzcGVuc2UiLCJpbml0UmVhY3RJMThuZXh0Iiwic2V0RGVmYXVsdHMiLCJyZWFjdCIsIlJlcG9ydE5hbWVzcGFjZXMiLCJ1c2VkTmFtZXNwYWNlcyIsImVuIiwidHJhbnNsYXRpb25zIiwiZnIiLCJlcyIsIlVSTCIsIlVSTFNlYXJjaFBhcmFtcyIsInJvb3RFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==