/*! For license information please see sol.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["ui-toolkit"]=t():e["ui-toolkit"]=t()}(self,(()=>(()=>{var __webpack_modules__={869:module=>{var e;self,e=()=>(()=>{var __webpack_modules__={487:e=>{var t={utf8:{stringToBytes:function(e){return t.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(t.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],r=0;r<e.length;r++)t.push(255&e.charCodeAt(r));return t},bytesToString:function(e){for(var t=[],r=0;r<e.length;r++)t.push(String.fromCharCode(e[r]));return t.join("")}}};e.exports=t},12:e=>{var t,r;t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&r.rotl(e,8)|4278255360&r.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=r.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],r=0,i=0;r<e.length;r++,i+=8)t[i>>>5]|=e[r]<<24-i%32;return t},wordsToBytes:function(e){for(var t=[],r=0;r<32*e.length;r+=8)t.push(e[r>>>5]>>>24-r%32&255);return t},bytesToHex:function(e){for(var t=[],r=0;r<e.length;r++)t.push((e[r]>>>4).toString(16)),t.push((15&e[r]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},bytesToBase64:function(e){for(var r=[],i=0;i<e.length;i+=3)for(var n=e[i]<<16|e[i+1]<<8|e[i+2],s=0;s<4;s++)8*i+6*s<=8*e.length?r.push(t.charAt(n>>>6*(3-s)&63)):r.push("=");return r.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var r=[],i=0,n=0;i<e.length;n=++i%4)0!=n&&r.push((t.indexOf(e.charAt(i-1))&Math.pow(2,-2*n+8)-1)<<2*n|t.indexOf(e.charAt(i))>>>6-2*n);return r}},e.exports=r},738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},568:(e,t,r)=>{var i,n,s,o,a;i=r(12),n=r(487).utf8,s=r(738),o=r(487).bin,(a=function(e,t){e.constructor==String?e=t&&"binary"===t.encoding?o.stringToBytes(e):n.stringToBytes(e):s(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||e.constructor===Uint8Array||(e=e.toString());for(var r=i.bytesToWords(e),l=8*e.length,c=1732584193,u=-271733879,h=-1732584194,d=271733878,f=0;f<r.length;f++)r[f]=16711935&(r[f]<<8|r[f]>>>24)|4278255360&(r[f]<<24|r[f]>>>8);r[l>>>5]|=128<<l%32,r[14+(l+64>>>9<<4)]=l;var p=a._ff,v=a._gg,g=a._hh,_=a._ii;for(f=0;f<r.length;f+=16){var m=c,b=u,y=h,S=d;c=p(c,u,h,d,r[f+0],7,-680876936),d=p(d,c,u,h,r[f+1],12,-389564586),h=p(h,d,c,u,r[f+2],17,606105819),u=p(u,h,d,c,r[f+3],22,-1044525330),c=p(c,u,h,d,r[f+4],7,-176418897),d=p(d,c,u,h,r[f+5],12,1200080426),h=p(h,d,c,u,r[f+6],17,-1473231341),u=p(u,h,d,c,r[f+7],22,-45705983),c=p(c,u,h,d,r[f+8],7,1770035416),d=p(d,c,u,h,r[f+9],12,-1958414417),h=p(h,d,c,u,r[f+10],17,-42063),u=p(u,h,d,c,r[f+11],22,-1990404162),c=p(c,u,h,d,r[f+12],7,1804603682),d=p(d,c,u,h,r[f+13],12,-40341101),h=p(h,d,c,u,r[f+14],17,-1502002290),c=v(c,u=p(u,h,d,c,r[f+15],22,1236535329),h,d,r[f+1],5,-165796510),d=v(d,c,u,h,r[f+6],9,-1069501632),h=v(h,d,c,u,r[f+11],14,643717713),u=v(u,h,d,c,r[f+0],20,-373897302),c=v(c,u,h,d,r[f+5],5,-701558691),d=v(d,c,u,h,r[f+10],9,38016083),h=v(h,d,c,u,r[f+15],14,-660478335),u=v(u,h,d,c,r[f+4],20,-405537848),c=v(c,u,h,d,r[f+9],5,568446438),d=v(d,c,u,h,r[f+14],9,-1019803690),h=v(h,d,c,u,r[f+3],14,-187363961),u=v(u,h,d,c,r[f+8],20,1163531501),c=v(c,u,h,d,r[f+13],5,-1444681467),d=v(d,c,u,h,r[f+2],9,-51403784),h=v(h,d,c,u,r[f+7],14,1735328473),c=g(c,u=v(u,h,d,c,r[f+12],20,-1926607734),h,d,r[f+5],4,-378558),d=g(d,c,u,h,r[f+8],11,-2022574463),h=g(h,d,c,u,r[f+11],16,1839030562),u=g(u,h,d,c,r[f+14],23,-35309556),c=g(c,u,h,d,r[f+1],4,-1530992060),d=g(d,c,u,h,r[f+4],11,1272893353),h=g(h,d,c,u,r[f+7],16,-155497632),u=g(u,h,d,c,r[f+10],23,-1094730640),c=g(c,u,h,d,r[f+13],4,681279174),d=g(d,c,u,h,r[f+0],11,-358537222),h=g(h,d,c,u,r[f+3],16,-722521979),u=g(u,h,d,c,r[f+6],23,76029189),c=g(c,u,h,d,r[f+9],4,-640364487),d=g(d,c,u,h,r[f+12],11,-421815835),h=g(h,d,c,u,r[f+15],16,530742520),c=_(c,u=g(u,h,d,c,r[f+2],23,-995338651),h,d,r[f+0],6,-198630844),d=_(d,c,u,h,r[f+7],10,1126891415),h=_(h,d,c,u,r[f+14],15,-1416354905),u=_(u,h,d,c,r[f+5],21,-57434055),c=_(c,u,h,d,r[f+12],6,1700485571),d=_(d,c,u,h,r[f+3],10,-1894986606),h=_(h,d,c,u,r[f+10],15,-1051523),u=_(u,h,d,c,r[f+1],21,-2054922799),c=_(c,u,h,d,r[f+8],6,1873313359),d=_(d,c,u,h,r[f+15],10,-30611744),h=_(h,d,c,u,r[f+6],15,-1560198380),u=_(u,h,d,c,r[f+13],21,1309151649),c=_(c,u,h,d,r[f+4],6,-145523070),d=_(d,c,u,h,r[f+11],10,-1120210379),h=_(h,d,c,u,r[f+2],15,718787259),u=_(u,h,d,c,r[f+9],21,-343485551),c=c+m>>>0,u=u+b>>>0,h=h+y>>>0,d=d+S>>>0}return i.endian([c,u,h,d])})._ff=function(e,t,r,i,n,s,o){var a=e+(t&r|~t&i)+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._gg=function(e,t,r,i,n,s,o){var a=e+(t&i|r&~i)+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._hh=function(e,t,r,i,n,s,o){var a=e+(t^r^i)+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._ii=function(e,t,r,i,n,s,o){var a=e+(r^(t|~i))+(n>>>0)+o;return(a<<s|a>>>32-s)+t},a._blocksize=16,a._digestsize=16,e.exports=function(e,t){if(null==e)throw new Error("Illegal argument "+e);var r=i.wordsToBytes(a(e,t));return t&&t.asBytes?r:t&&t.asString?o.bytesToString(r):i.bytesToHex(r)}},166:(e,t,r)=>{"use strict";r.d(t,{r:()=>l});var i=r(46),n=r(565),s=r(611),o=r(305),a=r.n(o);class l extends i.H{constructor(e,t){super(),this.protocol=2,this.inflate=a().inflateInit(15),this.bpp=1,this.state=0,this.focusMode=0,this.useZRLE=!0,this.frameRateDelay=2,this.canvasCtx=t,this.sparecache={},this.buttonmask=0,this.canvasControl=this.canvasCtx.canvas,this.lastMouseMoveTime=(new Date).getTime(),this.logger=e,this.setDeskFocus=(e,t)=>{},this.getDeskFocus=e=>{}}processData(e){this.onProcessData(e)}onStateChange(e){this.logger.verbose(`state change in AMTDesktop: ${e}`),0===e&&(this.canvasCtx.fillStyle="#FFFFFF",this.canvasCtx.fillRect(0,0,this.canvasCtx.canvas.width,this.canvasCtx.canvas.width))}start(){this.logger.verbose("Starting desktop here"),this.state=0,this.inflate.inflateReset(),this.onKvmDataPending=[],this.onKvmDataAck=-1,this.kvmDataSupported=!1;for(const e in this.sparecache)delete this.sparecache[e]}onSendKvmData(e){!0!==this.onKvmDataAck?this.onKvmDataPending.push(e):((0,s.f)(this.urlvars)&&(0,s.f)(this.urlvars.kvmdatatrace)&&console.log(`KVM-Send (${e.length}) data`),e="\0KvmDataChannel\0"+e,this.onSend(String.fromCharCode(6,0,0,0)+n.r.IntToStr(e.length)+e),this.onKvmDataAck=!1)}}},59:(e,t,r)=>{"use strict";r.d(t,{N:()=>n});var i=r(503);class n extends i.K{constructor(e,t,r,i,n,s,o,a,l,c,u){super(e,t,r,i,n,s,o,a,l,c,u)}}},503:(e,t,r)=>{"use strict";r.d(t,{K:()=>l,b:()=>i});var i,n=r(565),s=r(568),o=r.n(s),a=r(611);!function(e){e[e.SOL=1]="SOL",e[e.KVM=2]="KVM",e[e.IDER=3]="IDER"}(i||(i={}));class l{constructor(e,t,r,i,n,s,o,a,l,c,u){this.fileReader=r,this.randomNonceChars="abcdef0123456789",this.host=i,this.port=n,this.user=s,this.pass=o,this.tls=a,this.tlsv1only=l,this.protocol=t,this.RedirectStartSol=String.fromCharCode(16,0,0,0,83,79,76,32),this.RedirectStartKvm=String.fromCharCode(16,1,0,0,75,86,77,82),this.RedirectStartIder=String.fromCharCode(16,0,0,0,73,68,69,82),this.urlvars={},this.server=u,this.amtAccumulator="",this.authUri="",this.logger=e,this.authToken=c}getWsLocation(){return this.isBrowser()&&!(0,a.f)(this.server)?`${window.location.protocol.replace("http","ws")}//\n      ${window.location.host}\n      ${window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/"))}\n      /webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`:`${String(this.server)}/webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`}isBrowser(){try{const e="undefined"!=typeof window;return e&&this.logger.debug("!!!!!BROWSER!!!!!"),e}catch(e){return!1}}start(e){this.connectState=0,this.socket=new e(this.getWsLocation(),this.authToken),this.socket.onopen=this.onSocketConnected.bind(this),this.socket.onmessage=this.onMessage.bind(this),this.socket.onclose=this.onSocketClosed.bind(this),(0,a.f)(this.fileReader)&&(0,a.f)(this.fileReader.readAsBinaryString)?this.fileReader.onload=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsBinaryString(new Blob([this.fileReaderAcc.shift()]))}).bind(this):(0,a.f)(this.fileReader)&&(0,a.f)(this.fileReader.readAsArrayBuffer)&&(this.fileReader.onloadend=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsArrayBuffer(this.fileReaderAcc.shift())}).bind(this)),this.logger.verbose("Connecting to websocket"),this.onStateChange(1)}onSocketConnected(){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&console.log("REDIR-CONNECT"),this.onStateChange(2),this.logger.verbose(`Connected to websocket server. With protocol ${this.protocol} (2 = KVM)`),this.logger.info(`Start Redirect Session for protocol. ${this.protocol}`),this.protocol===i.SOL&&this.socketSend(this.RedirectStartSol),this.protocol===i.KVM&&this.socketSend(this.RedirectStartKvm),this.protocol===i.IDER&&this.socketSend(this.RedirectStartIder)}onMessage(e){try{if(this.inDataCount++,"object"==typeof e.data){if(this.fileReaderInUse)return void this.fileReaderAcc.push(e.data);if(null!=this.fileReader.readAsBinaryString)this.fileReaderInUse=!0,this.fileReader.readAsBinaryString(new Blob([e.data]));else if(null!=this.fileReader.readAsArrayBuffer)this.fileReaderInUse=!0,this.fileReader.readAsArrayBuffer(e.data);else{let t="";const r=new Uint8Array(e.data),i=r.byteLength;for(let e=0;e<i;e++)t+=String.fromCharCode(r[e]);this.onSocketData(t)}}else this.onSocketData(e.data)}catch(e){this.logger.error(e),this.stop(),this.onError()}}onSocketData(e){if((0,a.f)(e)&&-1!==this.connectState){if("object"==typeof e){let t="";const r=new Uint8Array(e),i=r.byteLength;for(let e=0;e<i;e++)t+=String.fromCharCode(r[e]);e=t}else if("string"!=typeof e)return;if((this.protocol===i.KVM||this.protocol===i.IDER)&&1===this.connectState)return this.onProcessData(e);for(this.amtAccumulator+=e;this.amtAccumulator.length>=1;){let e=0;switch(this.amtAccumulator.charCodeAt(0)){case 17:if(this.logger.verbose(`Start Redirection Session reply received for  ${this.protocol}`),this.amtAccumulator.length<4)return;switch(this.amtAccumulator.charCodeAt(1)){case 0:{if(this.logger.verbose("Session status success. Start handshake"),this.amtAccumulator.length<13)return;const t=this.amtAccumulator.charCodeAt(12);if(this.amtAccumulator.length<13+t)return;this.logger.verbose("Query for available authentication"),this.socketSend(String.fromCharCode(19,0,0,0,0,0,0,0,0)),e=13+t;break}default:this.stop()}break;case 20:{if(this.logger.verbose("Available Authentications reply received."),this.amtAccumulator.length<9)return;const t=n.r.ReadIntX(this.amtAccumulator,5);if(this.amtAccumulator.length<9+t)return;const r=this.amtAccumulator.charCodeAt(1),i=this.amtAccumulator.charCodeAt(4),s=[];for(let e=0;e<t;e++)s.push(this.amtAccumulator.charCodeAt(9+e));const o=this.amtAccumulator.substring(9,9+t);if(e=9+t,0===i)(0,a.f)(s.includes(4))?(this.logger.verbose("Good Digest Auth (With cnonce and all)"),this.socketSend(String.fromCharCode(19,0,0,0,4)+n.r.IntToStrX(this.user.length+this.authUri.length+8)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0,0))):(0,a.f)(s.includes(3))?(this.logger.warn("Bad Digest Auth"),this.socketSend(String.fromCharCode(19,0,0,0,3)+n.r.IntToStrX(this.user.length+this.authUri.length+7)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0))):(0,a.f)(s.includes(1))?(this.logger.verbose("Basic Auth"),this.socketSend(String.fromCharCode(19,0,0,0,1)+n.r.IntToStrX(this.user.length+this.pass.length+2)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(this.pass.length)+this.pass)):(this.logger.error("Auth Type not recognized. Stopping."),this.stop());else if(3!==i&&4!==i||1!==r)if(0===r){if(1===this.protocol){const e=1e4,t=100,r=0,i=1e4,s=100,o=0;this.socketSend(String.fromCharCode(32,0,0,0)+n.r.IntToStrX(this.amtSequence++)+n.r.ShortToStrX(e)+n.r.ShortToStrX(t)+n.r.ShortToStrX(r)+n.r.ShortToStrX(i)+n.r.ShortToStrX(s)+n.r.ShortToStrX(o)+n.r.IntToStrX(0))}2===this.protocol&&this.socketSend(String.fromCharCode(64,0,0,0,0,0,0,0)),3===this.protocol&&(this.connectState=1,this.onStateChange(3))}else this.stop();else{let e=0;const t=o.charCodeAt(e),r=o.substring(e+1,e+1+t);e+=t+1;const s=o.charCodeAt(e),a=o.substring(e+1,e+1+s);e+=s+1;let l=0,c=null;const u=this.generateRandomNonce(32),h="00000002";let d="";4===i&&(l=o.charCodeAt(e),c=o.substring(e+1,e+1+l),e+=l+1,d=`${h}:${u}:${String(c)} :`);const f=this.hex_md5(this.hex_md5(this.user+":"+r+":"+this.pass)+":"+a+":"+d+this.hex_md5("POST:"+this.authUri));let p=this.user.length+r.length+a.length+this.authUri.length+u.length+h.length+f.length+7;4===i&&(p+=parseInt(c.length)+1);let v=String.fromCharCode(19,0,0,0,i)+n.r.IntToStrX(p)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(r.length)+r+String.fromCharCode(a.length)+a+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(u.length)+u+String.fromCharCode(h.length)+h+String.fromCharCode(f.length)+f;4===i&&(v=String(v)+(String.fromCharCode(c.length)+String(c))),this.socketSend(v)}break}case 33:if(this.amtAccumulator.length<23)break;this.logger.verbose("Response to settings"),e=23,this.socketSend(String.fromCharCode(39,0,0,0)+n.r.IntToStrX(this.amtSequence++)+String.fromCharCode(0,0,27,0,0,0)),1===this.protocol&&(this.amtKeepAliveTimer=setInterval(this.sendAmtKeepAlive.bind(this),2e3)),this.connectState=1,this.onStateChange(3);break;case 41:if(this.amtAccumulator.length<10)break;this.logger.verbose("Serial Settings"),e=10;break;case 42:{if(this.amtAccumulator.length<10)break;this.logger.verbose("Incoming display data");const t=10+((255&this.amtAccumulator.charCodeAt(9))<<8)+(255&this.amtAccumulator.charCodeAt(8));if(this.amtAccumulator.length<t)break;this.onProcessData(this.amtAccumulator.substring(10,t)),e=t;break}case 43:if(this.amtAccumulator.length<8)break;this.logger.verbose("Keep Alve message"),e=8;break;case 65:if(this.amtAccumulator.length<8)break;this.logger.verbose("KVM traffic. Call onStart handler. And forward rest of acc directly."),this.connectState=1,this.onStart(),this.amtAccumulator.length>8&&this.onProcessData(this.amtAccumulator.substring(8)),e=this.amtAccumulator.length;break;default:return this.logger.error(`Unknown Intel AMT command:  ${this.amtAccumulator.charCodeAt(0)}  acclen=${this.amtAccumulator.length}`),void this.stop()}if(0===e)return;this.amtAccumulator=this.amtAccumulator.substring(e)}}}hex_md5(e){return this.logger.verbose("MD5 the string"),o()(e)}socketSend(e){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&this.logger.verbose(`REDIR-SEND(${e.length}): ${n.r.rstr2hex(e)}`);try{if(null!=this.socket&&1===this.socket.readyState){const t=new Uint8Array(e.length);this.logger.verbose(`Redir Send( ${e.length}): ${n.r.rstr2hex(e)}`);for(let r=0;r<e.length;++r)t[r]=e.charCodeAt(r);this.socket.send(t.buffer)}}catch(e){this.logger.error(`Socket send error: ${String(e)}`)}}send(e){this.logger.verbose("Send called "+e),null!=this.socket&&1===this.connectState&&(this.protocol===i.SOL?this.socketSend(String.fromCharCode(40,0,0,0)+n.r.IntToStrX(this.amtSequence++)+n.r.ShortToStrX(e.length)+e):this.socketSend(e))}sendAmtKeepAlive(){null!=this.socket&&this.socketSend(String.fromCharCode(43,0,0,0)+n.r.IntToStrX(this.amtSequence++))}generateRandomNonce(e){let t="";for(let r=0;r<e;r++)t+=this.randomNonceChars.charAt(Math.floor(Math.random()*this.randomNonceChars.length));return t}onSocketClosed(e){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&console.log("REDIR-CLOSED"),this.logger.warn("Redir Socket Closed"),this.stop()}onStateChange(e){console.info("onstatechange",e),this.state!==e&&(this.state=e,this.onNewState(this.state),null!=this.onStateChanged&&this.onStateChanged(this,this.state))}stop(){this.logger.warn("Stop called on Redirector. Change state to 0 and close Socket."),this.onStateChange(0),this.connectState=-1,this.amtAccumulator="",null!=this.socket&&(this.socket.close(),this.socket=null),null!=this.amtKeepAliveTimer&&(clearInterval(this.amtKeepAliveTimer),this.amtKeepAliveTimer=null)}}},277:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});class i{constructor(){this.terminalEmulation=1,this.fxEmulation=0,this.fxLineBreak=0,this.AsciiToUnicode=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,171,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.AsciiToUnicodeIntel=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,174,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.StateChange=e=>{},this.TermSendKeys=e=>this.onSend(e)}}},237:(e,t,r)=>{"use strict";r.d(t,{k:()=>n});var i=r(201);class n{constructor(e){this.minLevel=e}log(e,t){switch(e){case i.i.VERBOSE:this.verbose(t);break;case i.i.INFO:this.info(t);break;case i.i.DEBUG:this.debug(t);break;case i.i.WARNING:this.warn(t);break;case i.i.ERROR:this.error(t)}}debug(e){this.minLevel>=i.i.DEBUG&&console.debug(e)}info(e){this.minLevel>=i.i.INFO&&console.info(e)}error(e){this.minLevel>=i.i.ERROR&&console.error(e)}warn(e){this.minLevel>=i.i.WARNING&&console.warn(e)}verbose(e){this.minLevel>=i.i.VERBOSE&&console.log(e)}}},565:(e,t,r)=>{"use strict";r.d(t,{r:()=>n});var i=r(611);const n={ReadShort:(e,t)=>(e.charCodeAt(t)<<8)+e.charCodeAt(t+1),ReadShortX:(e,t)=>(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ReadInt:(e,t)=>16777216*e.charCodeAt(t)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadSInt:(e,t)=>(e.charCodeAt(t)<<24)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadIntX:(e,t)=>16777216*e.charCodeAt(t+3)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ShortToStr:e=>String.fromCharCode(e>>8&255,255&e),ShortToStrX:e=>String.fromCharCode(255&e,e>>8&255),IntToStr:e=>String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e),IntToStrX:e=>String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255),SplitArray:e=>e.split(","),Clone:e=>JSON.parse(JSON.stringify(e)),EscapeHtml:e=>"string"==typeof e?e.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"boolean"==typeof e||"number"==typeof e?e:void 0,ArrayElementMove(e,t,r){e.splice(r,0,e.splice(t,1)[0])},ObjectToStringEx(e,t){let r="";if(0!==e&&(!(0,i.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const i in e)r=r+"<br />"+String(this.gap(t))+"Item #"+String(i)+": "+String(this.ObjectToStringEx(e[i],t+1));else if(e instanceof Object)for(const i in e)r=r+"<br />"+String(this.gap(t))+String(i)+" = "+String(this.ObjectToStringEx(e[i],t+1));else r+=String(this.EscapeHtml(e));return r},ObjectToStringEx2(e,t){let r="";if(0!==e&&(!(0,i.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const i in e)r=r+"\r\n"+String(this.gap2(t))+"Item #"+String(i)+": "+String(this.ObjectToStringEx2(e[i],t+1));else if(e instanceof Object)for(const i in e)r=r+"\r\n"+String(this.gap2(t))+String(i)+" = "+String(this.ObjectToStringEx2(e[i],t+1));else r+=String(this.EscapeHtml(e));return r},gap(e){let t="";for(let r=0;r<4*e;r++)t+="&nbsp;";return t},gap2(e){let t="";for(let r=0;r<4*e;r++)t+=" ";return t},ObjectToString(e){return this.ObjectToStringEx(e,0)},ObjectToString2(e){return this.ObjectToStringEx2(e,0)},char2hex:e=>(e+256).toString(16).substr(-2).toUpperCase(),rstr2hex(e){let t,r="";for(t=0;t<e.length;t++)r+=String(this.char2hex(e.charCodeAt(t)));return r},encode_utf8:e=>unescape(encodeURIComponent(e)),decode_utf8:e=>decodeURIComponent(escape(e)),data2blob(e){const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return new Blob([new Uint8Array(t)])},random:e=>Math.floor(Math.random()*e),trademarks:e=>e.replace(/\(R\)/g,"&reg;").replace(/\(TM\)/g,"&trade;")}},46:(e,t,r)=>{"use strict";r.d(t,{H:()=>i});class i{processData(e){}onStateChange(e){}start(){}onSendKvmData(e){}}},784:(e,t,r)=>{"use strict";r.d(t,{$:()=>s});var i=r(989),n=r(611);class s{constructor(e,t,r){this.acc="",this.stateProcessorFac=new i.v(t,r,this.updateRFBState.bind(this)),this.parent=r,this.logger=e}processData(e){if(!(0,n.f)(e))return;this.acc+=e;let t=0;for(this.logger.verbose(`Process Data ACC length:  ${this.acc.length}`);this.acc.length>0;){const e=this.stateProcessorFac.getProcessor(this.parent.state),r=this.parent.state;if(t=e.processState(this.acc),this.logger.verbose(`State  ${r}  Processed. cmdSize returned ${t}`),0===t)return;this.acc=this.acc.substring(t),this.logger.verbose(`remaining acc  ${this.acc.length} command size: ${t} new parent state: ${this.parent.state}`)}}updateRFBState(e){this.parent.state=e}}},679:(e,t,r)=>{"use strict";r.d(t,{X:()=>n});var i=r(644);class n{constructor(e){this.parent=e}Decode(e,t,r,n,s,o,a,l){const c=e.charCodeAt(t++);let u,h,d;const f={};let p,v=0,g=0;if(0===c){for(this.parent.logger.verbose("Raw encoding"),p=0;p<a;p++)i.j.setPixel(this.parent,e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),p);i.j.putImage(this.parent,r,n)}else if(1===c){h=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),this.parent.canvasCtx.fillStyle="rgb("+(1===this.parent.bpp?`${224&h}, ${(28&h)<<3}, ${i.j.fixColor((3&h)<<6)}`:`${h>>8&248}, ${h>>3&252},${(31&h)<<3}`)+")",this.parent.logger.verbose("fillstyle: "+this.parent.canvasCtx.fillStyle);const a=i.j.rotX(this.parent,r,n);n=i.j.rotY(this.parent,r,n),r=a,this.parent.canvasCtx.fillRect(r,n,s,o)}else if(c>1&&c<17){this.parent.logger.verbose("Read the packed palette");let s=4,o=15;for(p=0;p<c;p++)f[p]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(2===c?(s=1,o=1):c<=4&&(s=2,o=3);v<a&&t<e.length;)for(h=e.charCodeAt(t++),p=8-s;p>=0;p-=s)i.j.setPixel(this.parent,f[h>>p&o],v++);i.j.putImage(this.parent,r,n)}else if(128===c){for(this.parent.logger.verbose("RLE encoded tile");v<a&&t<e.length;){h=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),g=1;do{g+=d=e.charCodeAt(t++)}while(255===d);for(;--g>=0;)i.j.setPixel(this.parent,h,v++)}i.j.putImage(this.parent,r,n)}else if(c>129){for(this.parent.logger.verbose("Read the RLE palette"),p=0;p<c-128;p++)f[p]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(this.parent.logger.verbose("Decode RLE on palette");v<a&&t<e.length;){if(g=1,u=e.charCodeAt(t++),h=f[u%128],u>127)do{g+=d=e.charCodeAt(t++)}while(255===d);for(;--g>=0;)i.j.setPixel(this.parent,h,v++)}i.j.putImage(this.parent,r,n)}}}},646:(e,t,r)=>{"use strict";r.d(t,{$:()=>i.$,X:()=>n.X});var i=r(784),n=r(679)},663:(e,t,r)=>{"use strict";var i;r.d(t,{i:()=>i}),function(e){e[e.VERBOSE=5]="VERBOSE",e[e.INFO=4]="INFO",e[e.DEBUG=3]="DEBUG",e[e.WARNING=2]="WARNING",e[e.ERROR=1]="ERROR"}(i||(i={}))},201:(e,t,r)=>{"use strict";r.d(t,{i:()=>i.i});var i=r(663)},725:(e,t,r)=>{"use strict";r.d(t,{e:()=>s});var i=r(565),n=r(8);class s{constructor(e,t,r,i){this.wsSocket=e,this.parent=t,this.rleDecoder=r,this.updateRFBState=i}processState(e){let t=0;if(e.length>=12){const r=i.r.ReadShort(e,0),s=i.r.ReadShort(e,2),o=i.r.ReadShort(e,4),a=i.r.ReadShort(e,6),l=o*a,c=i.r.ReadInt(e,8);if(c<17){if(o<1||o>64||a<1||a>64)throw this.parent.logger.error(`Invalid tile size (${o},${a}), disconnecting.`),new Error("Invalid tile size");if(this.parent.sparew!==o||this.parent.spareh!==a){this.parent.sparew=this.parent.sparew2=o,this.parent.spareh=this.parent.spareh2=a,1!==this.parent.rotation&&3!==this.parent.rotation||(this.parent.sparew2=a,this.parent.spareh2=o);const e=`${this.parent.sparew2}x${this.parent.spareh2}`;this.parent.spare=this.parent.sparecache[e],(0,n.fQ)(this.parent.spare)||(this.parent.sparecache[e]=this.parent.spare=this.parent.canvasCtx.createImageData(this.parent.sparew2,this.parent.spareh2))}}if(4294967073===c)this.parent.logger.verbose("Desktop size"),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=o,this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=a,this.wsSocket.send(String.fromCharCode(3,0,0,0,0,0)+i.r.ShortToStr(this.parent.width)+i.r.ShortToStr(this.parent.height)),t=12,null!=this.parent.onScreenSizeChange&&this.parent.onScreenSizeChange(this.parent.ScreenWidth,this.parent.ScreenHeight);else if(0===c){let i=12;const o=12+l*this.parent.bpp;if(e.length<o)return 0;t=o;for(let t=0;t<l;t++)n.jw.setPixel(this.parent,e.charCodeAt(i++)+(2===this.parent.bpp?e.charCodeAt(i++)<<8:0),t);n.jw.putImage(this.parent,r,s)}else{if(16!==c)throw this.parent.logger.error(`Unknown Encoding: ${c} , HEX: ${i.r.rstr2hex(e)}`),new Error(`Unknown Encoding: ${c}`);{if(e.length<16)return 0;const n=i.r.ReadInt(e,12);if(e.length<16+n)return 0;const c=16,u=5,h=0;if(n>5&&0===e.charCodeAt(c)&&i.r.ReadShortX(e,c+1)===n-u)this.rleDecoder.Decode(e,c+5,r,s,o,a,l,n);else{const t=e.substring(c,c+n-h),i=this.parent.inflate.inflate(t);if(!(i.length>0))throw this.parent.logger.error("Invalid deflate data."),new Error("invalid deflate data");this.rleDecoder.Decode(i,0,r,s,o,a,l,i.length)}t=16+n}}if(100==--this.parent.state){this.parent.logger.debug("Frame completed. Update state and request new frame"),this.updateRFBState(4);const e=()=>n.Xn.sendRefresh(this.parent,this.wsSocket);0===this.parent.frameRateDelay?n.Xn.sendRefresh(this.parent,this.wsSocket):setTimeout(e,this.parent.frameRateDelay)}}return t}}},70:(e,t,r)=>{"use strict";r.d(t,{U:()=>n});var i=r(565);class n{constructor(e,t,r){this.wsSocket=e,this.serverCutTextHandler=t,this.updateRFBState=r}processState(e){let t=0,r=0;switch(e.charCodeAt(0)){case 0:if(e.length<4)return 0;this.updateRFBState(100+i.r.ReadShort(e,2)),t=4;break;case 2:t=1;break;case 3:if(e.length<8)return 0;if(r=i.r.ReadInt(e,4)+8,e.length<r)return 0;t=this.serverCutTextHandler.handleServerCutText(e)}return t}}},212:(e,t,r)=>{"use strict";r.d(t,{w:()=>i});class i{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=12?(t=12,this.updateRFBState(1),this.wsSocket.send("RFB 003.008\n"),t):0}}},26:(e,t,r)=>{"use strict";r.d(t,{l:()=>i});class i{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=1?(t=e.charCodeAt(0)+1,this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(2),t):0}}},724:(e,t,r)=>{"use strict";r.d(t,{m:()=>n});var i=r(565);class n{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;if(e.length>=4){if(t=4,0!==i.r.ReadInt(e,0))throw new Error("Error. Stopping. Security response not None.");return this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(3),t}return 0}}},256:(e,t,r)=>{"use strict";r.d(t,{I:()=>s});var i=r(565),n=r(611);class s{constructor(e,t){this.wsSocket=e,this.parent=t}handleServerCutText(e){if(e.length<8)return 0;const t=i.r.ReadInt(e,4)+8;if(e.length<t)return 0;if(null!=this.parent.onKvmData){const r=e.substring(8,t);r.length>=16&&"\0KvmDataChannel"===r.substring(0,15)&&(this.parent.kvmDataSupported||(this.parent.kvmDataSupported=!0,console.log("KVM Data Channel Supported.")),(-1===this.parent.onKvmDataAck&&16===r.length||0!==r.charCodeAt(15))&&(this.parent.onKvmDataAck=!0),(0,n.f)(this.parent.urlvars)&&(0,n.f)(this.parent.urlvars.kvmdatatrace)&&console.log(`KVM-Recv((${r.length-16})):  ${r.substring(16)}`),r.length>16&&this.parent.onKvmData(r.substring(16)),!0===this.parent.onKvmDataAck&&this.parent.onKvmDataPending.length>0&&this.wsSocket.onSendKvmData(this.parent.onKvmDataPending.shift()))}return t}}},946:(e,t,r)=>{"use strict";r.d(t,{C:()=>s});var i=r(565),n=r(173);class s{constructor(e,t,r){this.wsSocket=e,this.parent=t,this.updateRFBState=r}processState(e){let t=0;if(e.length>=24){this.parent.rotation=0;const r=i.r.ReadInt(e,20);if(e.length<24+r)return 0;t=24+r,null!=this.parent.updateScreenDimensions&&this.parent.updateScreenDimensions(i.r.ReadShort(e,0),i.r.ReadShort(e,2)),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=i.r.ReadShort(e,0),this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=i.r.ReadShort(e,2);let s="";return this.parent.useZRLE&&(s+=i.r.IntToStr(16)),s+=i.r.IntToStr(0),s+=i.r.IntToStr(1092),this.parent.logger.verbose("Send supported encodings"),this.wsSocket.send(String.fromCharCode(2,0)+i.r.ShortToStr(s.length/4+1)+s+i.r.IntToStr(-223)),1===this.parent.bpp&&this.wsSocket.send(String.fromCharCode(0,0,0,0,8,8,0,1)+i.r.ShortToStr(7)+i.r.ShortToStr(7)+i.r.ShortToStr(3)+String.fromCharCode(5,2,0,0,0,0)),this.updateRFBState(4),this.parent.onStateChange(3),this.parent.logger.info("Start new frame."),n.X.sendRefresh(this.parent,this.wsSocket),this.parent.oldMouseX=-1,t}return 0}}},389:(e,t,r)=>{"use strict";r.d(t,{Cu:()=>l.C,Ut:()=>s.U,ez:()=>i.e,ll:()=>o.l,mC:()=>a.m,wW:()=>n.w});var i=r(725),n=r(212),s=r(70),o=r(26),a=r(724),l=r(946)},989:(e,t,r)=>{"use strict";r.d(t,{v:()=>o});var i=r(389),n=r(256),s=r(679);class o{constructor(e,t,r){this.stateProcessors={},this.stateProcessors[0]=new i.wW(e,r),this.stateProcessors[1]=new i.ll(e,r),this.stateProcessors[2]=new i.mC(e,r),this.stateProcessors[3]=new i.Cu(e,t,r);const o=new n.I(e,t);this.stateProcessors[4]=new i.Ut(e,o,r),this.stateProcessors["100plus"]=new i.ez(e,t,new s.X(t),r)}getProcessor(e){return e<=100?this.stateProcessors[e]:this.stateProcessors["100plus"]}}},155:(e,t,r)=>{"use strict";r.d(t,{Q:()=>i});class i{constructor(e){this.processData=e=>{null!=this.terminal.capture&&(this.terminal.capture=String(this.terminal.capture)+e);let t="";for(let r=0;r<e.length;r++){const i=e.charCodeAt(r);"J"===e[r]?this.clearTerminal():t+=0!=(128&i)?String.fromCharCode(this.terminal.AsciiToUnicode[127&i]):`${e[r]}`}this.processDataToXterm(t)},this.terminal=e}}},38:(e,t,r)=>{"use strict";r.d(t,{q:()=>s});var i=r(923),n=r(611);const s={convertAMTKeyCode:e=>(0,n.f)(e.code.startsWith("Key"))&&4===e.code.length?e.code.charCodeAt(3)+(!1===e.shiftKey?32:0):(0,n.f)(e.code.startsWith("Digit"))&&6===e.code.length?e.code.charCodeAt(5):(0,n.f)(e.code.startsWith("Numpad"))&&7===e.code.length?e.code.charCodeAt(6):i.Z[e.code]}},923:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});const i={Pause:19,CapsLock:20,Space:32,Quote:39,Minus:45,NumpadMultiply:42,NumpadAdd:43,PrintScreen:44,Comma:44,NumpadSubtract:45,NumpadDecimal:46,Period:46,Slash:47,NumpadDivide:47,Semicolon:59,Equal:61,OSLeft:91,BracketLeft:91,OSRight:91,Backslash:92,BracketRight:93,ContextMenu:93,Backquote:96,NumLock:144,ScrollLock:145,Backspace:65288,Tab:65289,Enter:65293,NumpadEnter:65293,Escape:65307,Delete:65535,Home:65360,PageUp:65365,PageDown:65366,ArrowLeft:65361,ArrowUp:65362,ArrowRight:65363,ArrowDown:65364,End:65367,Insert:65379,F1:65470,F2:65471,F3:65472,F4:65473,F5:65474,F6:65475,F7:65476,F8:65477,F9:65478,F10:65479,F11:65480,F12:65481,ShiftLeft:65505,ShiftRight:65506,ControlLeft:65507,ControlRight:65508,AltLeft:65513,AltRight:65514,MetaLeft:65511,MetaRight:65512}},173:(e,t,r)=>{"use strict";r.d(t,{X:()=>s});var i=r(565),n=r(611);const s={sendRefresh(e,t){if(!e.holding)if(e.focusMode>0){const r=2*e.focusMode;t.send(String.fromCharCode(3,1)+i.r.ShortToStr(Math.max(Math.min(e.oldMouseX,e.lastMouseX)-e.focusMode,0))+i.r.ShortToStr(Math.max(Math.min(e.oldMouseY,e.lastMouseY)-e.focusMode,0))+i.r.ShortToStr(r+Math.abs(e.oldMouseX-e.lastMouseX))+i.r.ShortToStr(r+Math.abs(e.oldMouseY-e.lastMouseY))),e.oldMouseX=e.lastMouseX,e.oldMouseY=e.lastMouseY}else t.send(String.fromCharCode(3,1,0,0,0,0)+i.r.ShortToStr(e.rwidth)+i.r.ShortToStr(e.rheight))},sendKey(e,t,r){if("object"==typeof t)for(const r in t)this.sendKey(e,t[r][0],t[r][1]);else e.send(String.fromCharCode(4,r,0,0)+i.r.IntToStr(t))},sendKvmData(e,t,r){!0!==e.onKvmDataAck?e.onKvmDataPending.push(r):((0,n.f)(e.urlvars)&&(0,n.f)(e.urlvars.kvmdatatrace)&&console.log(`KVM-Send(${String(r.length)}): ${String(r)}`),r="\0KvmDataChannel\0"+String(r),t.send(`${String.fromCharCode(6,0,0,0)}${i.r.IntToStr(r.length)}${String(r)}`),e.onKvmDataAck=!1)},sendKeepAlive(e,t){e.lastKeepAlive<Date.now()-5e3&&(e.lastKeepAlive=Date.now(),t.send(String.fromCharCode(6,0,0,0)+i.r.IntToStr(16)+"\0KvmDataChannel\0"))},sendCtrlAltDelMsg(e){this.sendCad(e)},sendCad(e){this.sendKey(e,65507,1),this.sendKey(e,65513,1),this.sendKey(e,65535,1),this.sendKey(e,65535,0),this.sendKey(e,65513,0),this.sendKey(e,65507,0)}}},644:(e,t,r)=>{"use strict";r.d(t,{j:()=>i});const i={putImage(e,t,r){if(e.holding)return;const n=i.arotX(e,t,r);r=i.arotY(e,t,r),t=n,e.canvasCtx.putImageData(e.spare,t,r)},setPixel(e,t,r){let n,s,o=4*r;e.rotation>0&&(1===e.rotation?(n=r%e.sparew,s=Math.floor(r/e.sparew),o=4*(r=n*e.sparew2+(e.sparew2-1-s))):2===e.rotation?o=e.sparew*e.spareh*4-4-o:3===e.rotation&&(n=r%e.sparew,s=Math.floor(r/e.sparew),o=4*(r=(e.sparew2-1-n)*e.sparew2+s))),1===e.bpp?(e.spare.data[o++]=224&t,e.spare.data[o++]=(28&t)<<3,e.spare.data[o++]=i.fixColor((3&t)<<6)):(e.spare.data[o++]=t>>8&248,e.spare.data[o++]=t>>3&252,e.spare.data[o++]=(31&t)<<3),e.spare.data[o]=255},arotX:(e,t,r)=>0===e.rotation?t:1===e.rotation?e.canvasCtx.canvas.width-e.sparew2-r:2===e.rotation?e.canvasCtx.canvas.width-e.sparew2-t:3===e.rotation?r:0,arotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?t:2===e.rotation?e.canvasCtx.canvas.height-e.spareh2-r:3===e.rotation?e.canvasCtx.canvas.height-e.spareh-t:0,crotX:(e,t,r)=>0===e.rotation?t:1===e.rotation?r:2===e.rotation?e.canvasCtx.canvas.width-t:3===e.rotation?e.canvasCtx.canvas.height-r:0,crotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?e.canvasCtx.canvas.width-t:2===e.rotation?e.canvasCtx.canvas.height-r:3===e.rotation?t:0,rotX:(e,t,r)=>0===e.rotation||1===e.rotation?t:2===e.rotation?t-e.canvasCtx.canvas.width:3===e.rotation?t-e.canvasCtx.canvas.height:0,rotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?r-e.canvasCtx.canvas.width:2===e.rotation?r-e.canvasCtx.canvas.height:3===e.rotation?r:0,setRotation(e,t){for(;t<0;)t+=4;const r=t%4;if(e.holding)return e.rotation=r,!1;if(r===e.rotation)return!0;let n=e.canvasCtx.canvas.width,s=e.canvasCtx.canvas.height;1!==e.rotation&&3!==e.rotation||(n=e.canvasCtx.canvas.height,s=e.canvasCtx.canvas.width),null==e.tcanvas&&(e.tcanvas=document.createElement("canvas"));const o=e.tcanvas.getContext("2d");return o.setTransform(1,0,0,1,0,0),o.canvas.width=n,o.canvas.height=s,o.rotate(-90*e.rotation*Math.PI/180),0===e.rotation&&o.drawImage(e.canvasCtx.canvas,0,0),1===e.rotation&&o.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,0),2===e.rotation&&o.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,-e.canvasCtx.canvas.height),3===e.rotation&&o.drawImage(e.canvasCtx.canvas,0,-e.canvasCtx.canvas.height),0!==e.rotation&&2!==e.rotation||(e.canvasCtx.canvas.height=n,e.canvasCtx.canvas.width=s),1!==e.rotation&&3!==e.rotation||(e.canvasCtx.canvas.height=s,e.canvasCtx.canvas.width=n),e.canvasCtx.setTransform(1,0,0,1,0,0),e.canvasCtx.rotate(90*r*Math.PI/180),e.rotation=r,e.canvasCtx.drawImage(e.tcanvas,i.rotX(e,0,0),i.rotY(e,0,0)),e.width=e.canvasCtx.canvas.width,e.height=e.canvasCtx.canvas.height,null!=e.onScreenResize&&e.onScreenResize(e.width,e.height,e.canvasId),!0},fixColor:e=>e>127?e+32:e}},717:(e,t,r)=>{"use strict";r.d(t,{E:()=>a});var i,n=r(38),s=r(173),o=r(611);!function(e){e[e.Up=0]="Up",e[e.Down=1]="Down"}(i||(i={}));class a{constructor(e,t){this.Comms=t,this.parent=e}GrabKeyInput(){this.KeyInputGrab||(document.onkeyup=this.handleKeyUp.bind(this),document.onkeydown=this.handleKeyDown.bind(this),document.onkeypress=this.handleKeys.bind(this),this.KeyInputGrab=!0)}UnGrabKeyInput(){this.KeyInputGrab&&(document.onkeyup=null,document.onkeydown=null,document.onkeypress=null,this.KeyInputGrab=!1)}handleKeys(e){return this.haltEvent(e)}haltEvent(e){return(0,o.f)(e.preventDefault)&&e.preventDefault(),(0,o.f)(e.stopPropagation)&&e.stopPropagation(),!1}handleKeyUp(e){return this.handleKeyEvent(i.Up,e)}handleKeyDown(e){return this.handleKeyEvent(i.Down,e)}handleKeyEvent(e,t){let r=t;if((0,o.f)(r)||(r=window.event),(0,o.f)(r.code)){const t=n.q.convertAMTKeyCode(r);this.parent.logger.verbose(`Key ${e} : ${String(t)}`),null!=t&&s.X.sendKey(this.Comms,t,e)}else{let t=r.keyCode;173===t&&(t=189),61===t&&(t=187);let i=t;!1===r.shiftKey&&t>=65&&t<=90&&(i=t+32),t>=112&&t<=124&&(i=t+65358),8===t&&(i=65288),9===t&&(i=65289),13===t&&(i=65293),16===t&&(i=65505),17===t&&(i=65507),18===t&&(i=65513),27===t&&(i=65307),33===t&&(i=65365),34===t&&(i=65366),35===t&&(i=65367),36===t&&(i=65360),37===t&&(i=65361),38===t&&(i=65362),39===t&&(i=65363),40===t&&(i=65364),45===t&&(i=65379),46===t&&(i=65535),t>=96&&t<=105&&(i=t-48),106===t&&(i=42),107===t&&(i=43),109===t&&(i=45),110===t&&(i=46),111===t&&(i=47),186===t&&(i=59),187===t&&(i=61),188===t&&(i=44),189===t&&(i=45),190===t&&(i=46),191===t&&(i=47),192===t&&(i=96),219===t&&(i=91),220===t&&(i=92),221===t&&(i=93),222===t&&(i=39),this.parent.logger.verbose(`Key ${e}: ${t}  = ${i}`),s.X.sendKey(this.Comms,i,e)}return this.haltEvent(r)}}},33:(e,t,r)=>{"use strict";r.d(t,{x:()=>o});var i=r(565),n=r(644),s=r(611);class o{constructor(e,t,r){this.topposition=0,this.leftposition=0,this.parent=e,this.comm=t,this.debounceTime=r,this.mouseClickCompleted=!0,this.lastEvent=null}GrabMouseInput(){this.MouseInputGrab||(this.MouseInputGrab=!0)}UnGrabMouseInput(){if(!this.MouseInputGrab)return;const e=this.parent.canvasCtx.canvas;e.onmousemove=null,e.onmouseup=null,e.onmousedown=null,this.MouseInputGrab=!1}mousedown(e){return this.parent.buttonmask|=1<<e.button,this.mousemove(e)}mouseup(e){return this.parent.buttonmask&=65535-(1<<e.button),this.mousemove(e)}mousemove(e){if(4!==this.parent.state)return!0;const t=this.getPositionOfControl(this.parent.canvasControl),r=this.parent.canvasControl.getBoundingClientRect();(0===this.topposition||r.top>this.topposition)&&(this.topposition=r.top),(0===this.leftposition||r.left>this.leftposition)&&(this.leftposition=r.left);const o=this.topposition-r.top,a=this.leftposition-r.left;if(this.parent.lastMouseX=(e.pageX-t[0]+a)*(this.parent.canvasControl.height/this.parent.canvasControl.offsetHeight),this.parent.lastMouseY=(e.pageY-t[1]+o)*(this.parent.canvasControl.width/this.parent.canvasControl.offsetWidth),(0,s.f)(this.parent.noMouseRotate)||(this.parent.lastMouseX2=n.j.crotX(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseY=n.j.crotY(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseX=this.parent.lastMouseX2),this.comm.send(String.fromCharCode(5,this.parent.buttonmask)+i.r.ShortToStr(this.parent.lastMouseX)+i.r.ShortToStr(this.parent.lastMouseY)),this.parent.setDeskFocus("DeskFocus",this.parent.focusMode),0!==this.parent.focusMode){const e=Math.min(this.parent.lastMouseX,this.parent.canvasControl.width-this.parent.focusMode),r=Math.min(this.parent.lastMouseY,this.parent.canvasControl.height-this.parent.focusMode),i=2*this.parent.focusMode,n=this.parent.canvasControl,s=n.offsetHeight/this.parent.canvasControl.height,o=n.offsetWidth/this.parent.canvasControl.width,a=this.parent.getDeskFocus("DeskFocus"),l=this.getPositionOfControl(this.parent.canvasControl.parentElement);a.left=`${Math.max((e-this.parent.focusMode)*s,0)+(t[0]-l[0])}px`,a.top=`${Math.max((r-this.parent.focusMode)*o,0)+(t[1]-l[1])}px`,a.width=i*s-6+"px",a.height=i*s-6+"px"}return this.haltEvent(e)}haltEvent(e){return(0,s.f)(e.preventDefault)&&e.preventDefault(),(0,s.f)(e.stopPropagation)&&e.stopPropagation(),!1}getPositionOfControl(e){const t=[0,0];let r=e;for(;null!=r;)t[0]=Number(t[0])+Number(r.offsetLeft),t[1]=Number(t[1])+Number(r.offsetTop),r=r.offsetParent;return t}}},611:(e,t,r)=>{"use strict";r.d(t,{f:()=>i});const i=e=>null!=e&&""!==e&&!1!==e&&0!==e},8:(e,t,r)=>{"use strict";r.d(t,{EB:()=>o.E,Xn:()=>n.X,fQ:()=>l.f,jw:()=>s.j,qD:()=>i.q,xx:()=>a.x});var i=r(38),n=r(173),s=r(644),o=r(717),a=r(33),l=r(611)},305:module=>{var ZLIB=ZLIB||{},BASE,NMAX;void 0===ZLIB.common_initialized&&(ZLIB.Z_NO_FLUSH=0,ZLIB.Z_PARTIAL_FLUSH=1,ZLIB.Z_SYNC_FLUSH=2,ZLIB.Z_FULL_FLUSH=3,ZLIB.Z_FINISH=4,ZLIB.Z_BLOCK=5,ZLIB.Z_TREES=6,ZLIB.Z_OK=0,ZLIB.Z_STREAM_END=1,ZLIB.Z_NEED_DICT=2,ZLIB.Z_ERRNO=-1,ZLIB.Z_STREAM_ERROR=-2,ZLIB.Z_DATA_ERROR=-3,ZLIB.Z_MEM_ERROR=-4,ZLIB.Z_BUF_ERROR=-5,ZLIB.Z_VERSION_ERROR=-6,ZLIB.Z_DEFLATED=8,ZLIB.z_stream=function(){this.next_in=0,this.avail_in=0,this.total_in=0,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=null,this.state=null,this.data_type=0,this.adler=0,this.input_data="",this.output_data="",this.error=0,this.checksum_function=null},ZLIB.gz_header=function(){this.text=0,this.time=0,this.xflags=0,this.os=255,this.extra=null,this.extra_len=0,this.extra_max=0,this.name=null,this.name_max=0,this.comment=null,this.comm_max=0,this.hcrc=0,this.done=0},ZLIB.common_initialized=!0),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-inflate.js"),function(){var DEF_WBITS=15,HEAD=0,FLAGS=1,TIME=2,OS=3,EXLEN=4,EXTRA=5,NAME=6,COMMENT=7,HCRC=8,DICTID=9,DICT=10,TYPE=11,TYPEDO=12,STORED=13,COPY_=14,COPY=15,TABLE=16,LENLENS=17,CODELENS=18,LEN_=19,LEN=20,LENEXT=21,DIST=22,DISTEXT=23,MATCH=24,LIT=25,CHECK=26,LENGTH=27,DONE=28,BAD=29,MEM=30,SYNC=31,ENOUGH_LENS=852,ENOUGH_DISTS=592,ENOUGH=ENOUGH_LENS+ENOUGH_DISTS,CODES=0,LENS=1,DISTS=2,inflate_table_lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],inflate_table_lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,203,69],inflate_table_dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],inflate_table_dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];function inflate_table(e,t){var r,i,n,s,o,a,l,c,u,h,d,f,p,v,g,_,m,b,y,S,C,w,k=e.next,E=t==DISTS?e.distbits:e.lenbits,x=e.work,A=e.lens,T=t==DISTS?e.nlen:0,R=e.codes;r=t==LENS?e.nlen:t==DISTS?e.ndist:19;var L=new Array(16),D=new Array(16);for(i=0;i<=15;i++)L[i]=0;for(n=0;n<r;n++)L[A[T+n]]++;for(a=E,o=15;o>=1&&0==L[o];o--);if(a>o&&(a=o),0==o)return _={op:64,bits:1,val:0},R[k++]=_,R[k++]=_,t==DISTS?e.distbits=1:e.lenbits=1,e.next=k,0;for(s=1;s<o&&0==L[s];s++);for(a<s&&(a=s),u=1,i=1;i<=15;i++)if(u<<=1,(u-=L[i])<0)return-1;if(u>0&&(t==CODES||1!=o))return e.next=k,-1;for(D[1]=0,i=1;i<15;i++)D[i+1]=D[i]+L[i];for(n=0;n<r;n++)0!=A[T+n]&&(x[D[A[T+n]]++]=n);switch(t){case CODES:b=S=x,y=0,C=0,w=19;break;case LENS:b=inflate_table_lbase,y=-257,S=inflate_table_lext,C=-257,w=256;break;default:b=inflate_table_dbase,S=inflate_table_dext,y=0,C=0,w=-1}if(d=0,n=0,i=s,m=k,l=a,c=0,v=-1,g=(h=1<<a)-1,t==LENS&&h>=ENOUGH_LENS||t==DISTS&&h>=ENOUGH_DISTS)return e.next=k,1;for(;;){_={op:0,bits:i-c,val:0},x[n]<w?_.val=x[n]:x[n]>w?(_.op=S[C+x[n]],_.val=b[y+x[n]]):_.op=96,f=1<<i-c,s=p=1<<l;do{R[m+(d>>>c)+(p-=f)]=_}while(0!=p);for(f=1<<i-1;d&f;)f>>>=1;if(0!=f?(d&=f-1,d+=f):d=0,n++,0==--L[i]){if(i==o)break;i=A[T+x[n]]}if(i>a&&(d&g)!=v){for(0==c&&(c=a),m+=s,u=1<<(l=i-c);l+c<o&&!((u-=L[l+c])<=0);)l++,u<<=1;if(h+=1<<l,t==LENS&&h>=ENOUGH_LENS||t==DISTS&&h>=ENOUGH_DISTS)return e.next=k,1;R[k+(v=d&g)]={op:l,bits:a,val:m-k}}}return 0!=d&&(R[m+d]={op:64,bits:i-c,val:0}),e.next=k+h,t==DISTS?e.distbits=a:e.lenbits=a,0}function inflate_fast(e,t){var r,i,n,s,o,a,l,c,u,h,d,f,p,v,g,_,m,b,y,S,C,w,k=-1,E=-1;r=e.state,i=e.input_data,s=(n=e.next_in)+e.avail_in-5,a=(o=e.next_out)-(t-e.avail_out),l=o+(e.avail_out-257),c=r.wsize,u=r.whave,h=r.wnext,d=r.window,f=r.hold,p=r.bits,v=r.codes,g=r.lencode,_=r.distcode,m=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(f+=(255&i.charCodeAt(n++))<<p,p+=8,f+=(255&i.charCodeAt(n++))<<p,p+=8),y=v[g+(f&m)];t:for(;;){if(f>>>=S=y.bits,p-=S,0==(S=y.op))e.output_data+=String.fromCharCode(y.val),o++;else{if(!(16&S)){if(0==(64&S)){y=v[g+(y.val+(f&(1<<S)-1))];continue t}if(32&S){r.mode=TYPE;break e}e.msg="invalid literal/length code",r.mode=BAD;break e}C=y.val,(S&=15)&&(p<S&&(f+=(255&i.charCodeAt(n++))<<p,p+=8),C+=f&(1<<S)-1,f>>>=S,p-=S),p<15&&(f+=(255&i.charCodeAt(n++))<<p,p+=8,f+=(255&i.charCodeAt(n++))<<p,p+=8),y=v[_+(f&b)];r:for(;;){if(f>>>=S=y.bits,p-=S,!(16&(S=y.op))){if(0==(64&S)){y=v[_+(y.val+(f&(1<<S)-1))];continue r}e.msg="invalid distance code",r.mode=BAD;break e}if(w=y.val,p<(S&=15)&&(f+=(255&i.charCodeAt(n++))<<p,(p+=8)<S&&(f+=(255&i.charCodeAt(n++))<<p,p+=8)),w+=f&(1<<S)-1,f>>>=S,p-=S,w>(S=o-a)){if((S=w-S)>u&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break e}k=0,E=-1,0==h?(k+=c-S,S<C&&(C-=S,e.output_data+=d.substring(k,k+S),o+=S,S=0,k=-1,E=o-w)):(k+=h-S,S<C&&(C-=S,e.output_data+=d.substring(k,k+S),k=-1,E=(o+=S)-w))}else k=-1,E=o-w;if(k>=0)e.output_data+=d.substring(k,k+C),o+=C,k+=C;else{var x=C;for(x>o-E&&(x=o-E),e.output_data+=e.output_data.substring(E,E+x),o+=x,E+=x,o+=C-=x;C>2;)e.output_data+=e.output_data.charAt(E++),e.output_data+=e.output_data.charAt(E++),e.output_data+=e.output_data.charAt(E++),C-=3;C&&(e.output_data+=e.output_data.charAt(E++),C>1&&(e.output_data+=e.output_data.charAt(E++)))}break r}}break t}}while(n<s&&o<l);n-=C=p>>>3,f&=(1<<(p-=C<<3))-1,e.next_in=n,e.next_out=o,e.avail_in=n<s?s-n+5:5-(n-s),e.avail_out=o<l?l-o+257:257-(o-l),r.hold=f,r.bits=p}function new_array(e){var t,r=new Array(e);for(t=0;t<e;t++)r[t]=0;return r}function getarg(e,t,r){return e&&t in e?e[t]:r}function checksum_none(){return 0}function inflate_state(){var e;this.mode=0,this.last=0,this.wrap=0,this.havedict=0,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=0,this.distcode=0,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=0,this.lens=new_array(320),this.work=new_array(288),this.codes=new Array(ENOUGH);var t={op:0,bits:0,val:0};for(e=0;e<ENOUGH;e++)this.codes[e]=t;this.sane=0,this.back=0,this.was=0}ZLIB.inflate_copyright=" inflate 1.2.6 Copyright 1995-2012 Mark Adler ",ZLIB.inflateResetKeep=function(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=null,t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=0,t.distcode=0,t.next=0,t.sane=1,t.back=-1,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.inflateReset=function(e,t){var r,i;return e&&e.state?(i=e.state,void 0===t&&(t=DEF_WBITS),t<0?(r=0,t=-t):(r=1+(t>>>4),t<48&&(t&=15)),1==r&&"function"==typeof ZLIB.adler32?e.checksum_function=ZLIB.adler32:2==r&&"function"==typeof ZLIB.crc32?e.checksum_function=ZLIB.crc32:e.checksum_function=checksum_none,t&&(t<8||t>15)?ZLIB.Z_STREAM_ERROR:(i.window&&i.wbits!=t&&(i.window=null),i.wrap=r,i.wbits=t,i.wsize=0,i.whave=0,i.wnext=0,ZLIB.inflateResetKeep(e))):ZLIB.Z_STREAM_ERROR},ZLIB.inflateInit=function(e){var t=new ZLIB.z_stream;return t.state=new inflate_state,ZLIB.inflateReset(t,e),t},ZLIB.inflatePrime=function(e,t,r){var i;return e&&e.state?(i=e.state,t<0?(i.hold=0,i.bits=0,ZLIB.Z_OK):t>16||i.bits+t>32?ZLIB.Z_STREAM_ERROR:(r&=(1<<t)-1,i.hold+=r<<i.bits,i.bits+=t,ZLIB.Z_OK)):ZLIB.Z_STREAM_ERROR};var lenfix_ary=null,lenfix_def="([    {op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},{op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},    {op:0,bits:9,val:192},{op:16,bits:7,val:10},{op:0,bits:8,val:96},{op:0,bits:8,val:32},{op:0,bits:9,val:160},{op:0,bits:8,val:0},{op:0,bits:8,val:128},    {op:0,bits:8,val:64},{op:0,bits:9,val:224},{op:16,bits:7,val:6},{op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:144},{op:19,bits:7,val:59},    {op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:208},{op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:176},    {op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},{op:0,bits:9,val:240},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},    {op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},{op:0,bits:8,val:52},{op:0,bits:9,val:200},{op:17,bits:7,val:13},{op:0,bits:8,val:100},    {op:0,bits:8,val:36},{op:0,bits:9,val:168},{op:0,bits:8,val:4},{op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:232},{op:16,bits:7,val:8},    {op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:152},{op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:216},    {op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},{op:0,bits:9,val:184},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},    {op:0,bits:9,val:248},{op:16,bits:7,val:3},{op:0,bits:8,val:82},{op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},    {op:0,bits:8,val:50},{op:0,bits:9,val:196},{op:17,bits:7,val:11},{op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:164},{op:0,bits:8,val:2},    {op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:228},{op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:148},    {op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},{op:0,bits:9,val:212},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},    {op:0,bits:9,val:180},{op:0,bits:8,val:10},{op:0,bits:8,val:138},{op:0,bits:8,val:74},{op:0,bits:9,val:244},{op:16,bits:7,val:5},{op:0,bits:8,val:86},    {op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:204},{op:17,bits:7,val:15},    {op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:172},{op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:236},    {op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},{op:0,bits:9,val:156},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},    {op:0,bits:9,val:220},{op:18,bits:7,val:27},{op:0,bits:8,val:110},{op:0,bits:8,val:46},{op:0,bits:9,val:188},{op:0,bits:8,val:14},{op:0,bits:8,val:142},    {op:0,bits:8,val:78},{op:0,bits:9,val:252},{op:96,bits:7,val:0},{op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},    {op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:194},{op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:162},    {op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},{op:0,bits:9,val:226},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},    {op:0,bits:9,val:146},{op:19,bits:7,val:59},{op:0,bits:8,val:121},{op:0,bits:8,val:57},{op:0,bits:9,val:210},{op:17,bits:7,val:17},{op:0,bits:8,val:105},    {op:0,bits:8,val:41},{op:0,bits:9,val:178},{op:0,bits:8,val:9},{op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:242},{op:16,bits:7,val:4},    {op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},{op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:202},    {op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},{op:0,bits:9,val:170},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},    {op:0,bits:9,val:234},{op:16,bits:7,val:8},{op:0,bits:8,val:93},{op:0,bits:8,val:29},{op:0,bits:9,val:154},{op:20,bits:7,val:83},{op:0,bits:8,val:125},    {op:0,bits:8,val:61},{op:0,bits:9,val:218},{op:18,bits:7,val:23},{op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:186},{op:0,bits:8,val:13},    {op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:250},{op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},    {op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},{op:0,bits:9,val:198},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},    {op:0,bits:9,val:166},{op:0,bits:8,val:3},{op:0,bits:8,val:131},{op:0,bits:8,val:67},{op:0,bits:9,val:230},{op:16,bits:7,val:7},{op:0,bits:8,val:91},    {op:0,bits:8,val:27},{op:0,bits:9,val:150},{op:20,bits:7,val:67},{op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:214},{op:18,bits:7,val:19},    {op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:182},{op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:246},    {op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},    {op:0,bits:9,val:206},{op:17,bits:7,val:15},{op:0,bits:8,val:103},{op:0,bits:8,val:39},{op:0,bits:9,val:174},{op:0,bits:8,val:7},{op:0,bits:8,val:135},    {op:0,bits:8,val:71},{op:0,bits:9,val:238},{op:16,bits:7,val:9},{op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:158},{op:20,bits:7,val:99},    {op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:222},{op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:190},    {op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},{op:0,bits:9,val:254},{op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},    {op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},{op:0,bits:9,val:193},{op:16,bits:7,val:10},{op:0,bits:8,val:96},    {op:0,bits:8,val:32},{op:0,bits:9,val:161},{op:0,bits:8,val:0},{op:0,bits:8,val:128},{op:0,bits:8,val:64},{op:0,bits:9,val:225},{op:16,bits:7,val:6},    {op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:145},{op:19,bits:7,val:59},{op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:209},    {op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:177},{op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},    {op:0,bits:9,val:241},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},{op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},    {op:0,bits:8,val:52},{op:0,bits:9,val:201},{op:17,bits:7,val:13},{op:0,bits:8,val:100},{op:0,bits:8,val:36},{op:0,bits:9,val:169},{op:0,bits:8,val:4},    {op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:233},{op:16,bits:7,val:8},{op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:153},    {op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:217},{op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},    {op:0,bits:9,val:185},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},{op:0,bits:9,val:249},{op:16,bits:7,val:3},{op:0,bits:8,val:82},    {op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},{op:0,bits:8,val:50},{op:0,bits:9,val:197},{op:17,bits:7,val:11},    {op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:165},{op:0,bits:8,val:2},{op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:229},    {op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:149},{op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},    {op:0,bits:9,val:213},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},{op:0,bits:9,val:181},{op:0,bits:8,val:10},{op:0,bits:8,val:138},    {op:0,bits:8,val:74},{op:0,bits:9,val:245},{op:16,bits:7,val:5},{op:0,bits:8,val:86},{op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},    {op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:205},{op:17,bits:7,val:15},{op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:173},    {op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:237},{op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},    {op:0,bits:9,val:157},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},{op:0,bits:9,val:221},{op:18,bits:7,val:27},{op:0,bits:8,val:110},    {op:0,bits:8,val:46},{op:0,bits:9,val:189},{op:0,bits:8,val:14},{op:0,bits:8,val:142},{op:0,bits:8,val:78},{op:0,bits:9,val:253},{op:96,bits:7,val:0},    {op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},{op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:195},    {op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:163},{op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},    {op:0,bits:9,val:227},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},{op:0,bits:9,val:147},{op:19,bits:7,val:59},{op:0,bits:8,val:121},    {op:0,bits:8,val:57},{op:0,bits:9,val:211},{op:17,bits:7,val:17},{op:0,bits:8,val:105},{op:0,bits:8,val:41},{op:0,bits:9,val:179},{op:0,bits:8,val:9},    {op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:243},{op:16,bits:7,val:4},{op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},    {op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:203},{op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},    {op:0,bits:9,val:171},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},{op:0,bits:9,val:235},{op:16,bits:7,val:8},{op:0,bits:8,val:93},    {op:0,bits:8,val:29},{op:0,bits:9,val:155},{op:20,bits:7,val:83},{op:0,bits:8,val:125},{op:0,bits:8,val:61},{op:0,bits:9,val:219},{op:18,bits:7,val:23},    {op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:187},{op:0,bits:8,val:13},{op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:251},    {op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},{op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},    {op:0,bits:9,val:199},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},{op:0,bits:9,val:167},{op:0,bits:8,val:3},{op:0,bits:8,val:131},    {op:0,bits:8,val:67},{op:0,bits:9,val:231},{op:16,bits:7,val:7},{op:0,bits:8,val:91},{op:0,bits:8,val:27},{op:0,bits:9,val:151},{op:20,bits:7,val:67},    {op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:215},{op:18,bits:7,val:19},{op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:183},    {op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:247},{op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},    {op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},{op:0,bits:9,val:207},{op:17,bits:7,val:15},{op:0,bits:8,val:103},    {op:0,bits:8,val:39},{op:0,bits:9,val:175},{op:0,bits:8,val:7},{op:0,bits:8,val:135},{op:0,bits:8,val:71},{op:0,bits:9,val:239},{op:16,bits:7,val:9},    {op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:159},{op:20,bits:7,val:99},{op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:223},    {op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:191},{op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},    {op:0,bits:9,val:255}])",distfix_ary=null,distfix_def="([    {op:16,bits:5,val:1},{op:23,bits:5,val:257},{op:19,bits:5,val:17},{op:27,bits:5,val:4097},{op:17,bits:5,val:5},{op:25,bits:5,val:1025},    {op:21,bits:5,val:65},{op:29,bits:5,val:16385},{op:16,bits:5,val:3},{op:24,bits:5,val:513},{op:20,bits:5,val:33},{op:28,bits:5,val:8193},    {op:18,bits:5,val:9},{op:26,bits:5,val:2049},{op:22,bits:5,val:129},{op:64,bits:5,val:0},{op:16,bits:5,val:2},{op:23,bits:5,val:385},    {op:19,bits:5,val:25},{op:27,bits:5,val:6145},{op:17,bits:5,val:7},{op:25,bits:5,val:1537},{op:21,bits:5,val:97},{op:29,bits:5,val:24577},    {op:16,bits:5,val:4},{op:24,bits:5,val:769},{op:20,bits:5,val:49},{op:28,bits:5,val:12289},{op:18,bits:5,val:13},{op:26,bits:5,val:3073},    {op:22,bits:5,val:193},{op:64,bits:5,val:0}])";function fixedtables(state){var i;for(lenfix_ary||(lenfix_ary=eval(lenfix_def)),distfix_ary||(distfix_ary=eval(distfix_def)),state.lencode=0,state.distcode=512,i=0;i<512;i++)state.codes[i]=lenfix_ary[i];for(i=0;i<32;i++)state.codes[i+512]=distfix_ary[i];state.lenbits=9,state.distbits=5}function updatewindow(e){var t=e.state,r=e.output_data.length;return null===t.window&&(t.window=""),0==t.wsize&&(t.wsize=1<<t.wbits),r>=t.wsize?t.window=e.output_data.substring(r-t.wsize):t.whave+r<t.wsize?t.window+=e.output_data:t.window=t.window.substring(t.whave-(t.wsize-r))+e.output_data,t.whave=t.window.length,t.whave<t.wsize?t.wnext=t.whave:t.wnext=0,0}function CRC2(e,t){var r=[255&t,t>>>8&255];e.state.check=e.checksum_function(e.state.check,r,0,2)}function CRC4(e,t){var r=[255&t,t>>>8&255,t>>>16&255,t>>>24&255];e.state.check=e.checksum_function(e.state.check,r,0,4)}function LOAD(e,t){return t.strm=e,t.left=e.avail_out,t.next=e.next_in,t.have=e.avail_in,t.hold=e.state.hold,t.bits=e.state.bits,t}function RESTORE(e){var t=e.strm;t.next_in=e.next,t.avail_out=e.left,t.avail_in=e.have,t.state.hold=e.hold,t.state.bits=e.bits}function INITBITS(e){e.hold=0,e.bits=0}function PULLBYTE(e){return 0!=e.have&&(e.have--,e.hold+=(255&e.strm.input_data.charCodeAt(e.next++))<<e.bits,e.bits+=8,!0)}function NEEDBITS(e,t){for(;e.bits<t;)if(!PULLBYTE(e))return!1;return!0}function BITS(e,t){return e.hold&(1<<t)-1}function DROPBITS(e,t){e.hold>>>=t,e.bits-=t}function BYTEBITS(e){e.hold>>>=7&e.bits,e.bits-=7&e.bits}function REVERSE(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}var inflate_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];ZLIB.inflate=function(e,t){var r,i,n,s,o,a,l,c,u,h=-1,d=-1;if(!e||!e.state||!e.input_data&&0!=e.avail_in)return ZLIB.Z_STREAM_ERROR;(r=e.state).mode==TYPE&&(r.mode=TYPEDO),LOAD(e,i={}),n=i.have,s=i.left,u=ZLIB.Z_OK;e:for(;;)switch(r.mode){case HEAD:if(0==r.wrap){r.mode=TYPEDO;break}if(!NEEDBITS(i,16))break e;if(2&r.wrap&&35615==i.hold){r.check=e.checksum_function(0,null,0,0),CRC2(e,i.hold),INITBITS(i),r.mode=FLAGS;break}if(r.flags=0,null!==r.head&&(r.head.done=-1),!(1&r.wrap)||((BITS(i,8)<<8)+(i.hold>>>8))%31){e.msg="incorrect header check",r.mode=BAD;break}if(BITS(i,4)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",r.mode=BAD;break}if(DROPBITS(i,4),c=BITS(i,4)+8,0==r.wbits)r.wbits=c;else if(c>r.wbits){e.msg="invalid window size",r.mode=BAD;break}r.dmax=1<<c,e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=512&i.hold?DICTID:TYPE,INITBITS(i);break;case FLAGS:if(!NEEDBITS(i,16))break e;if(r.flags=i.hold,(255&r.flags)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",r.mode=BAD;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=BAD;break}null!==r.head&&(r.head.text=i.hold>>>8&1),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.mode=TIME;case TIME:if(!NEEDBITS(i,32))break e;null!==r.head&&(r.head.time=i.hold),512&r.flags&&CRC4(e,i.hold),INITBITS(i),r.mode=OS;case OS:if(!NEEDBITS(i,16))break e;null!==r.head&&(r.head.xflags=255&i.hold,r.head.os=i.hold>>>8),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.mode=EXLEN;case EXLEN:if(1024&r.flags){if(!NEEDBITS(i,16))break e;r.length=i.hold,null!==r.head&&(r.head.extra_len=i.hold),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.head.extra=""}else null!==r.head&&(r.head.extra=null);r.mode=EXTRA;case EXTRA:if(1024&r.flags&&((o=r.length)>i.have&&(o=i.have),o&&(null!==r.head&&null!==r.head.extra&&(c=r.head.extra_len-r.length,r.head.extra+=e.input_data.substring(i.next,i.next+(c+o>r.head.extra_max?r.head.extra_max-c:o))),512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,r.length-=o),r.length))break e;r.length=0,r.mode=NAME;case NAME:if(2048&r.flags){if(0==i.have)break e;null!==r.head&&null===r.head.name&&(r.head.name=""),o=0;do{if(c=e.input_data.charAt(i.next+o),o++,"\0"===c)break;null!==r.head&&r.length<r.head.name_max&&(r.head.name+=c,r.length++)}while(o<i.have);if(512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,"\0"!==c)break e}else null!==r.head&&(r.head.name=null);r.length=0,r.mode=COMMENT;case COMMENT:if(4096&r.flags){if(0==i.have)break e;o=0,null!==r.head&&null===r.head.comment&&(r.head.comment="");do{if(c=e.input_data.charAt(i.next+o),o++,"\0"===c)break;null!==r.head&&r.length<r.head.comm_max&&(r.head.comment+=c,r.length++)}while(o<i.have);if(512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,"\0"!==c)break e}else null!==r.head&&(r.head.comment=null);r.mode=HCRC;case HCRC:if(512&r.flags){if(!NEEDBITS(i,16))break e;if(i.hold!=(65535&r.check)){e.msg="header crc mismatch",r.mode=BAD;break}INITBITS(i)}null!==r.head&&(r.head.hcrc=r.flags>>>9&1,r.head.done=1),e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=TYPE;break;case DICTID:if(!NEEDBITS(i,32))break e;e.adler=r.check=REVERSE(i.hold),INITBITS(i),r.mode=DICT;case DICT:if(0==r.havedict)return RESTORE(i),ZLIB.Z_NEED_DICT;e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=TYPE;case TYPE:if(t==ZLIB.Z_BLOCK||t==ZLIB.Z_TREES)break e;case TYPEDO:if(r.last){BYTEBITS(i),r.mode=CHECK;break}if(!NEEDBITS(i,3))break e;switch(r.last=BITS(i,1),DROPBITS(i,1),BITS(i,2)){case 0:r.mode=STORED;break;case 1:if(fixedtables(r),r.mode=LEN_,t==ZLIB.Z_TREES){DROPBITS(i,2);break e}break;case 2:r.mode=TABLE;break;case 3:e.msg="invalid block type",r.mode=BAD}DROPBITS(i,2);break;case STORED:if(BYTEBITS(i),!NEEDBITS(i,32))break e;if((65535&i.hold)!=(i.hold>>>16&65535^65535)){e.msg="invalid stored block lengths",r.mode=BAD;break}if(r.length=65535&i.hold,INITBITS(i),r.mode=COPY_,t==ZLIB.Z_TREES)break e;case COPY_:r.mode=COPY;case COPY:if(o=r.length){if(o>i.have&&(o=i.have),o>i.left&&(o=i.left),0==o)break e;e.output_data+=e.input_data.substring(i.next,i.next+o),e.next_out+=o,i.have-=o,i.next+=o,i.left-=o,r.length-=o;break}r.mode=TYPE;break;case TABLE:if(!NEEDBITS(i,14))break e;if(r.nlen=BITS(i,5)+257,DROPBITS(i,5),r.ndist=BITS(i,5)+1,DROPBITS(i,5),r.ncode=BITS(i,4)+4,DROPBITS(i,4),r.nlen>286||r.ndist>30){e.msg="too many length or distance symbols",r.mode=BAD;break}r.have=0,r.mode=LENLENS;case LENLENS:for(;r.have<r.ncode;){if(!NEEDBITS(i,3))break e;var f=BITS(i,3);r.lens[inflate_order[r.have++]]=f,DROPBITS(i,3)}for(;r.have<19;)r.lens[inflate_order[r.have++]]=0;if(r.next=0,r.lencode=0,r.lenbits=7,u=inflate_table(r,CODES)){e.msg="invalid code lengths set",r.mode=BAD;break}r.have=0,r.mode=CODELENS;case CODELENS:for(;r.have<r.nlen+r.ndist;){for(;!((a=r.codes[r.lencode+BITS(i,r.lenbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(a.val<16)DROPBITS(i,a.bits),r.lens[r.have++]=a.val;else{if(16==a.val){if(!NEEDBITS(i,a.bits+2))break e;if(DROPBITS(i,a.bits),0==r.have){e.msg="invalid bit length repeat",r.mode=BAD;break}c=r.lens[r.have-1],o=3+BITS(i,2),DROPBITS(i,2)}else if(17==a.val){if(!NEEDBITS(i,a.bits+3))break e;DROPBITS(i,a.bits),c=0,o=3+BITS(i,3),DROPBITS(i,3)}else{if(!NEEDBITS(i,a.bits+7))break e;DROPBITS(i,a.bits),c=0,o=11+BITS(i,7),DROPBITS(i,7)}if(r.have+o>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=BAD;break}for(;o--;)r.lens[r.have++]=c}}if(r.mode==BAD)break;if(0==r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=BAD;break}if(r.next=0,r.lencode=r.next,r.lenbits=9,u=inflate_table(r,LENS)){e.msg="invalid literal/lengths set",r.mode=BAD;break}if(r.distcode=r.next,r.distbits=6,u=inflate_table(r,DISTS)){e.msg="invalid distances set",r.mode=BAD;break}if(r.mode=LEN_,t==ZLIB.Z_TREES)break e;case LEN_:r.mode=LEN;case LEN:if(i.have>=6&&i.left>=258){RESTORE(i),inflate_fast(e,s),LOAD(e,i),r.mode==TYPE&&(r.back=-1);break}for(r.back=0;!((a=r.codes[r.lencode+BITS(i,r.lenbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(a.op&&0==(240&a.op)){for(l=a;a=r.codes[r.lencode+l.val+(BITS(i,l.bits+l.op)>>>l.bits)],!(l.bits+a.bits<=i.bits);)if(!PULLBYTE(i))break e;DROPBITS(i,l.bits),r.back+=l.bits}if(DROPBITS(i,a.bits),r.back+=a.bits,r.length=a.val,0==a.op){r.mode=LIT;break}if(32&a.op){r.back=-1,r.mode=TYPE;break}if(64&a.op){e.msg="invalid literal/length code",r.mode=BAD;break}r.extra=15&a.op,r.mode=LENEXT;case LENEXT:if(r.extra){if(!NEEDBITS(i,r.extra))break e;r.length+=BITS(i,r.extra),DROPBITS(i,r.extra),r.back+=r.extra}r.was=r.length,r.mode=DIST;case DIST:for(;!((a=r.codes[r.distcode+BITS(i,r.distbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(0==(240&a.op)){for(l=a;a=r.codes[r.distcode+l.val+(BITS(i,l.bits+l.op)>>>l.bits)],!(l.bits+a.bits<=i.bits);)if(!PULLBYTE(i))break e;DROPBITS(i,l.bits),r.back+=l.bits}if(DROPBITS(i,a.bits),r.back+=a.bits,64&a.op){e.msg="invalid distance code",r.mode=BAD;break}r.offset=a.val,r.extra=15&a.op,r.mode=DISTEXT;case DISTEXT:if(r.extra){if(!NEEDBITS(i,r.extra))break e;r.offset+=BITS(i,r.extra),DROPBITS(i,r.extra),r.back+=r.extra}r.mode=MATCH;case MATCH:if(0==i.left)break e;if(o=s-i.left,r.offset>o){if((o=r.offset-o)>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break}o>r.wnext?(o-=r.wnext,h=r.wsize-o,d=-1):(h=r.wnext-o,d=-1),o>r.length&&(o=r.length)}else h=-1,d=e.next_out-r.offset,o=r.length;if(o>i.left&&(o=i.left),i.left-=o,r.length-=o,h>=0)e.output_data+=r.window.substring(h,h+o),e.next_out+=o,o=0;else{e.next_out+=o;do{e.output_data+=e.output_data.charAt(d++)}while(--o)}0==r.length&&(r.mode=LEN);break;case LIT:if(0==i.left)break e;e.output_data+=String.fromCharCode(r.length),e.next_out++,i.left--,r.mode=LEN;break;case CHECK:if(r.wrap){if(!NEEDBITS(i,32))break e;if(s-=i.left,e.total_out+=s,r.total+=s,s&&(e.adler=r.check=e.checksum_function(r.check,e.output_data,e.output_data.length-s,s)),s=i.left,(r.flags?i.hold:REVERSE(i.hold))!=r.check){e.msg="incorrect data check",r.mode=BAD;break}INITBITS(i)}r.mode=LENGTH;case LENGTH:if(r.wrap&&r.flags){if(!NEEDBITS(i,32))break e;if(i.hold!=(4294967295&r.total)){e.msg="incorrect length check",r.mode=BAD;break}INITBITS(i)}r.mode=DONE;case DONE:u=ZLIB.Z_STREAM_END;break e;case BAD:u=ZLIB.Z_DATA_ERROR;break e;case MEM:return ZLIB.Z_MEM_ERROR;default:return ZLIB.Z_STREAM_ERROR}return RESTORE(i),(r.wsize||s!=e.avail_out&&r.mode<BAD&&(r.mode<CHECK||t!=ZLIB.Z_FINISH))&&updatewindow(e)?(r.mode=MEM,ZLIB.Z_MEM_ERROR):(n-=e.avail_in,s-=e.avail_out,e.total_in+=n,e.total_out+=s,r.total+=s,r.wrap&&s&&(e.adler=r.check=e.checksum_function(r.check,e.output_data,0,e.output_data.length)),e.data_type=r.bits+(r.last?64:0)+(r.mode==TYPE?128:0)+(r.mode==LEN_||r.mode==COPY_?256:0),(0==n&&0==s||t==ZLIB.Z_FINISH)&&u==ZLIB.Z_OK&&(u=ZLIB.Z_BUF_ERROR),u)},ZLIB.inflateEnd=function(e){return e&&e.state?(e.state.window=null,e.state=null,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.z_stream.prototype.inflate=function(e,t){var r,i;this.input_data=e,this.next_in=getarg(t,"next_in",0),this.avail_in=getarg(t,"avail_in",e.length-this.next_in),r=getarg(t,"flush",ZLIB.Z_SYNC_FLUSH),i=getarg(t,"avail_out",-1);var n="";do{if(this.avail_out=i>=0?i:16384,this.output_data="",this.next_out=0,this.error=ZLIB.inflate(this,r),0!=this.error&&console.log("zlib error",this.error),i>=0)return this.output_data;if(n+=this.output_data,this.avail_out>0)break}while(this.error==ZLIB.Z_OK);return n},ZLIB.z_stream.prototype.inflateReset=function(e){return ZLIB.inflateReset(this,e)}}(),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-adler32.js"),BASE=65521,NMAX=5552,ZLIB.adler32=function(e,t,r,i){return"string"==typeof t?function(e,t,r,i){var n,s;if(n=e>>>16&65535,e&=65535,1==i)return(e+=255&t.charCodeAt(r))>=BASE&&(e-=BASE),(n+=e)>=BASE&&(n-=BASE),e|n<<16;if(null===t)return 1;if(i<16){for(;i--;)n+=e+=255&t.charCodeAt(r++);return e>=BASE&&(e-=BASE),e|(n%=BASE)<<16}for(;i>=NMAX;){i-=NMAX,s=347;do{n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++)}while(--s);e%=BASE,n%=BASE}if(i){for(;i>=16;)i-=16,n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++),n+=e+=255&t.charCodeAt(r++);for(;i--;)n+=e+=255&t.charCodeAt(r++);e%=BASE,n%=BASE}return e|n<<16}(e,t,r,i):function(e,t,r,i){var n,s;if(n=e>>>16&65535,e&=65535,1==i)return(e+=t[r])>=BASE&&(e-=BASE),(n+=e)>=BASE&&(n-=BASE),e|n<<16;if(null===t)return 1;if(i<16){for(;i--;)n+=e+=t[r++];return e>=BASE&&(e-=BASE),e|(n%=BASE)<<16}for(;i>=NMAX;){i-=NMAX,s=347;do{n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++]}while(--s);e%=BASE,n%=BASE}if(i){for(;i>=16;)i-=16,n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++],n+=e+=t[r++];for(;i--;)n+=e+=t[r++];e%=BASE,n%=BASE}return e|n<<16}(e,t,r,i)},ZLIB.adler32_combine=function(e,t,r){var i,n,s;return r<0?4294967295:(n=(s=r%=BASE)*(i=65535&e),n%=BASE,(i+=(65535&t)+BASE-1)>=BASE&&(i-=BASE),i>=BASE&&(i-=BASE),(n+=(e>>16&65535)+(t>>16&65535)+BASE-s)>=131042&&(n-=131042),n>=BASE&&(n-=BASE),i|n<<16)},void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-crc32.js"),function(){var e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function t(e,t){var r,i=0;for(r=0;t;)1&t&&(r^=e[i]),t>>=1,i++;return r}function r(e,r){var i;for(i=0;i<32;i++)e[i]=t(r,r[i])}ZLIB.crc32=function(t,r,i,n){return"string"==typeof r?function(t,r,i,n){if(null==r)return 0;for(t^=4294967295;n>=8;)t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,n-=8;if(n)do{t=e[255&(t^r.charCodeAt(i++))]^t>>>8}while(--n);return 4294967295^t}(t,r,i,n):function(t,r,i,n){if(null==r)return 0;for(t^=4294967295;n>=8;)t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,n-=8;if(n)do{t=e[255&(t^r[i++])]^t>>>8}while(--n);return 4294967295^t}(t,r,i,n)},ZLIB.crc32_combine=function(e,i,n){var s,o,a,l;if(n<=0)return e;for(a=new Array(32),(l=new Array(32))[0]=3988292384,o=1,s=1;s<32;s++)l[s]=o,o<<=1;r(a,l),r(l,a);do{if(r(a,l),1&n&&(e=t(a,e)),0==(n>>=1))break;r(l,a),1&n&&(e=t(l,e)),n>>=1}while(0!=n);return e^i}}(),module.exports=ZLIB}},__webpack_module_cache__={};function __nested_webpack_require_78596__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__nested_webpack_require_78596__),r.exports}__nested_webpack_require_78596__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_78596__.d(t,{a:t}),t},__nested_webpack_require_78596__.d=(e,t)=>{for(var r in t)__nested_webpack_require_78596__.o(t,r)&&!__nested_webpack_require_78596__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_78596__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_78596__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_78596__.r(__webpack_exports__),__nested_webpack_require_78596__.d(__webpack_exports__,{AMTDesktop:()=>e.r,AMTKeyCodeConverter:()=>d.qD,AMTKvmDataRedirector:()=>t.N,AMTRedirector:()=>r.K,AmtTerminal:()=>i.r,CommsHelper:()=>d.Xn,ConsoleLogger:()=>n.k,DataProcessor:()=>u.$,Desktop:()=>o.H,Encoding:()=>h.ez,FrameBufferBellServerCutText:()=>h.Ut,HandshakeState:()=>h.wW,ImageHelper:()=>d.jw,KeyBoardHelper:()=>d.EB,LogLevel:()=>c.i,MouseHelper:()=>d.xx,Protocol:()=>r.b,RLEDecoder:()=>u.X,SecurityOptions:()=>h.ll,SecurityResponse:()=>h.mC,ServerInit:()=>h.Cu,StateProcessorFactory:()=>a.v,TerminalDataProcessor:()=>l.Q,TypeConverter:()=>s.r,isTruthy:()=>d.fQ});var e=__nested_webpack_require_78596__(166),t=__nested_webpack_require_78596__(59),r=__nested_webpack_require_78596__(503),i=__nested_webpack_require_78596__(277),n=__nested_webpack_require_78596__(237),s=__nested_webpack_require_78596__(565),o=__nested_webpack_require_78596__(46),a=__nested_webpack_require_78596__(989),l=__nested_webpack_require_78596__(155),c=__nested_webpack_require_78596__(201),u=__nested_webpack_require_78596__(646),h=__nested_webpack_require_78596__(389),d=__nested_webpack_require_78596__(8)})(),__webpack_exports__})(),module.exports=e()},14:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var i=r(537),n=r.n(i),s=r(645),o=r.n(s)()(n());o.push([e.id,".xterm{cursor:text;position:relative;user-select:none;-ms-user-select:none;-webkit-user-select:none}.xterm.focus,.xterm:focus{outline:none}.xterm .xterm-helpers{position:absolute;top:0;z-index:5}.xterm .xterm-helper-textarea{padding:0;border:0;margin:0;position:absolute;opacity:0;left:-9999em;top:0;width:0;height:0;z-index:-5;white-space:nowrap;overflow:hidden;resize:none}.xterm .composition-view{background:#000;color:#fff;display:none;position:absolute;white-space:nowrap;z-index:1}.xterm .composition-view.active{display:block}.xterm .xterm-viewport{background-color:#000;overflow-y:scroll;cursor:default;position:absolute;right:0;left:0;top:0;bottom:0}.xterm .xterm-screen{position:relative}.xterm .xterm-screen canvas{position:absolute;left:0;top:0}.xterm .xterm-scroll-area{visibility:hidden}.xterm-char-measure-element{display:inline-block;visibility:hidden;position:absolute;top:0;left:-9999em;line-height:normal}.xterm.enable-mouse-events{cursor:default}.xterm.xterm-cursor-pointer,.xterm .xterm-cursor-pointer{cursor:pointer}.xterm.column-select.focus{cursor:crosshair}.xterm .xterm-accessibility,.xterm .xterm-message{position:absolute;left:0;top:0;bottom:0;right:0;z-index:10;color:rgba(0,0,0,0)}.xterm .live-region{position:absolute;left:-9999px;width:1px;height:1px;overflow:hidden}.xterm-dim{opacity:.5}.xterm-underline-1{text-decoration:underline}.xterm-underline-2{text-decoration:double underline}.xterm-underline-3{text-decoration:wavy underline}.xterm-underline-4{text-decoration:dotted underline}.xterm-underline-5{text-decoration:dashed underline}.xterm-strikethrough{text-decoration:line-through}.xterm-screen .xterm-decoration-container .xterm-decoration{z-index:6;position:absolute}.xterm-decoration-overview-ruler{z-index:7;position:absolute;top:0;right:0;pointer-events:none}.xterm-decoration-top{z-index:2;position:relative}","",{version:3,sources:["webpack://./node_modules/xterm/css/xterm.css"],names:[],mappings:"AAqCA,OACI,WAAA,CACA,iBAAA,CACA,gBAAA,CACA,oBAAA,CACA,wBAAA,CAGJ,0BAEI,YAAA,CAGJ,sBACI,iBAAA,CACA,KAAA,CAKA,SAAA,CAGJ,8BACI,SAAA,CACA,QAAA,CACA,QAAA,CAEA,iBAAA,CACA,SAAA,CACA,YAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CAEA,kBAAA,CACA,eAAA,CACA,WAAA,CAGJ,yBAEI,eAAA,CACA,UAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,gCACI,aAAA,CAGJ,uBAEI,qBAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,OAAA,CACA,MAAA,CACA,KAAA,CACA,QAAA,CAGJ,qBACI,iBAAA,CAGJ,4BACI,iBAAA,CACA,MAAA,CACA,KAAA,CAGJ,0BACI,iBAAA,CAGJ,4BACI,oBAAA,CACA,iBAAA,CACA,iBAAA,CACA,KAAA,CACA,YAAA,CACA,kBAAA,CAGJ,2BAEI,cAAA,CAGJ,yDAEI,cAAA,CAGJ,2BAEI,gBAAA,CAGJ,kDAEI,iBAAA,CACA,MAAA,CACA,KAAA,CACA,QAAA,CACA,OAAA,CACA,UAAA,CACA,mBAAA,CAGJ,oBACI,iBAAA,CACA,YAAA,CACA,SAAA,CACA,UAAA,CACA,eAAA,CAGJ,WACI,UAAA,CAGJ,mBAAA,yBAAA,CACA,mBAAA,gCAAA,CACA,mBAAA,8BAAA,CACA,mBAAA,gCAAA,CACA,mBAAA,gCAAA,CAEA,qBACI,4BAAA,CAGJ,4DACC,SAAA,CACA,iBAAA,CAGD,iCACI,SAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,mBAAA,CAGJ,sBACI,SAAA,CACA,iBAAA",sourcesContent:['/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n * @license MIT\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author\'s permission):\n *   Fabrice Bellard\'s javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */\n\n/**\n *  Default styles for xterm.js\n */\n\n.xterm {\n    cursor: text;\n    position: relative;\n    user-select: none;\n    -ms-user-select: none;\n    -webkit-user-select: none;\n}\n\n.xterm.focus,\n.xterm:focus {\n    outline: none;\n}\n\n.xterm .xterm-helpers {\n    position: absolute;\n    top: 0;\n    /**\n     * The z-index of the helpers must be higher than the canvases in order for\n     * IMEs to appear on top.\n     */\n    z-index: 5;\n}\n\n.xterm .xterm-helper-textarea {\n    padding: 0;\n    border: 0;\n    margin: 0;\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\n    position: absolute;\n    opacity: 0;\n    left: -9999em;\n    top: 0;\n    width: 0;\n    height: 0;\n    z-index: -5;\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\n    white-space: nowrap;\n    overflow: hidden;\n    resize: none;\n}\n\n.xterm .composition-view {\n    /* TODO: Composition position got messed up somewhere */\n    background: #000;\n    color: #FFF;\n    display: none;\n    position: absolute;\n    white-space: nowrap;\n    z-index: 1;\n}\n\n.xterm .composition-view.active {\n    display: block;\n}\n\n.xterm .xterm-viewport {\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\n    background-color: #000;\n    overflow-y: scroll;\n    cursor: default;\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n}\n\n.xterm .xterm-screen {\n    position: relative;\n}\n\n.xterm .xterm-screen canvas {\n    position: absolute;\n    left: 0;\n    top: 0;\n}\n\n.xterm .xterm-scroll-area {\n    visibility: hidden;\n}\n\n.xterm-char-measure-element {\n    display: inline-block;\n    visibility: hidden;\n    position: absolute;\n    top: 0;\n    left: -9999em;\n    line-height: normal;\n}\n\n.xterm.enable-mouse-events {\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\n    cursor: default;\n}\n\n.xterm.xterm-cursor-pointer,\n.xterm .xterm-cursor-pointer {\n    cursor: pointer;\n}\n\n.xterm.column-select.focus {\n    /* Column selection mode */\n    cursor: crosshair;\n}\n\n.xterm .xterm-accessibility,\n.xterm .xterm-message {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 10;\n    color: transparent;\n}\n\n.xterm .live-region {\n    position: absolute;\n    left: -9999px;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n.xterm-dim {\n    opacity: 0.5;\n}\n\n.xterm-underline-1 { text-decoration: underline; }\n.xterm-underline-2 { text-decoration: double underline; }\n.xterm-underline-3 { text-decoration: wavy underline; }\n.xterm-underline-4 { text-decoration: dotted underline; }\n.xterm-underline-5 { text-decoration: dashed underline; }\n\n.xterm-strikethrough {\n    text-decoration: line-through;\n}\n\n.xterm-screen .xterm-decoration-container .xterm-decoration {\n\tz-index: 6;\n\tposition: absolute;\n}\n\n.xterm-decoration-overview-ruler {\n    z-index: 7;\n    position: absolute;\n    top: 0;\n    right: 0;\n    pointer-events: none;\n}\n\n.xterm-decoration-top {\n    z-index: 2;\n    position: relative;\n}\n'],sourceRoot:""}]);const a=o},20:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var i=r(537),n=r.n(i),s=r(645),o=r.n(s)()(n());o.push([e.id,".sol-header{display:flex}.power-options{display:block;position:absolute;right:1%}","",{version:3,sources:["webpack://./src/reactjs/SerialOverLAN/sol.scss"],names:[],mappings:"AAIA,YACI,YAAA,CAEJ,eACC,aAAA,CACA,iBAAA,CACA,QAAA",sourcesContent:["/*********************************************************************\n* Copyright (c) Intel Corporation 2019\n* SPDX-License-Identifier: Apache-2.0\n**********************************************************************/\n.sol-header {\n    display: flex;\n}\n.power-options {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 1%;\n}\n"],sourceRoot:""}]);const a=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",i=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),i&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),i&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,i,n,s){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);i&&o[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),n&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=n):u[4]="".concat(n)),t.push(u))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(n," */"),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(o).concat([s]).join("\n")}return[t].join("\n")}},679:(e,t,r)=>{"use strict";var i=r(296),n={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},s={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function l(e){return i.isMemo(e)?o:a[e.$$typeof]||n}a[i.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[i.Memo]=o;var c=Object.defineProperty,u=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,p=Object.prototype;e.exports=function e(t,r,i){if("string"!=typeof r){if(p){var n=f(r);n&&n!==p&&e(t,n,i)}var o=u(r);h&&(o=o.concat(h(r)));for(var a=l(t),v=l(r),g=0;g<o.length;++g){var _=o[g];if(!(s[_]||i&&i[_]||v&&v[_]||a&&a[_])){var m=d(r,_);try{c(t,_,m)}catch(e){}}}}return t}},103:(e,t)=>{"use strict";var r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,n=r?Symbol.for("react.portal"):60106,s=r?Symbol.for("react.fragment"):60107,o=r?Symbol.for("react.strict_mode"):60108,a=r?Symbol.for("react.profiler"):60114,l=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,u=r?Symbol.for("react.async_mode"):60111,h=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,f=r?Symbol.for("react.suspense"):60113,p=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,_=r?Symbol.for("react.block"):60121,m=r?Symbol.for("react.fundamental"):60117,b=r?Symbol.for("react.responder"):60118,y=r?Symbol.for("react.scope"):60119;function S(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case u:case h:case s:case a:case o:case f:return e;default:switch(e=e&&e.$$typeof){case c:case d:case g:case v:case l:return e;default:return t}}case n:return t}}}function C(e){return S(e)===h}t.AsyncMode=u,t.ConcurrentMode=h,t.ContextConsumer=c,t.ContextProvider=l,t.Element=i,t.ForwardRef=d,t.Fragment=s,t.Lazy=g,t.Memo=v,t.Portal=n,t.Profiler=a,t.StrictMode=o,t.Suspense=f,t.isAsyncMode=function(e){return C(e)||S(e)===u},t.isConcurrentMode=C,t.isContextConsumer=function(e){return S(e)===c},t.isContextProvider=function(e){return S(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return S(e)===d},t.isFragment=function(e){return S(e)===s},t.isLazy=function(e){return S(e)===g},t.isMemo=function(e){return S(e)===v},t.isPortal=function(e){return S(e)===n},t.isProfiler=function(e){return S(e)===a},t.isStrictMode=function(e){return S(e)===o},t.isSuspense=function(e){return S(e)===f},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===s||e===h||e===a||e===o||e===f||e===p||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===l||e.$$typeof===c||e.$$typeof===d||e.$$typeof===m||e.$$typeof===b||e.$$typeof===y||e.$$typeof===_)},t.typeOf=S},296:(e,t,r)=>{"use strict";e.exports=r(103)},394:e=>{"use strict";var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function n(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(e){return!1}}()?Object.assign:function(e,s){for(var o,a,l=n(e),c=1;c<arguments.length;c++){for(var u in o=Object(arguments[c]))r.call(o,u)&&(l[u]=o[u]);if(t){a=t(o);for(var h=0;h<a.length;h++)i.call(o,a[h])&&(l[a[h]]=o[a[h]])}}return l}},448:(e,t,r)=>{"use strict";var i=r(294),n=r(394),s=r(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!i)throw Error(o(227));function a(e,t,r,i,n,s,o,a,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var l=!1,c=null,u=!1,h=null,d={onError:function(e){l=!0,c=e}};function f(e,t,r,i,n,s,o,u,h){l=!1,c=null,a.apply(d,arguments)}var p=null,v=null,g=null;function _(e,t,r){var i=e.type||"unknown-event";e.currentTarget=g(r),function(e,t,r,i,n,s,a,d,p){if(f.apply(this,arguments),l){if(!l)throw Error(o(198));var v=c;l=!1,c=null,u||(u=!0,h=v)}}(i,t,void 0,e),e.currentTarget=null}var m=null,b={};function y(){if(m)for(var e in b){var t=b[e],r=m.indexOf(e);if(!(-1<r))throw Error(o(96,e));if(!C[r]){if(!t.extractEvents)throw Error(o(97,e));for(var i in C[r]=t,r=t.eventTypes){var n=void 0,s=r[i],a=t,l=i;if(w.hasOwnProperty(l))throw Error(o(99,l));w[l]=s;var c=s.phasedRegistrationNames;if(c){for(n in c)c.hasOwnProperty(n)&&S(c[n],a,l);n=!0}else s.registrationName?(S(s.registrationName,a,l),n=!0):n=!1;if(!n)throw Error(o(98,i,e))}}}}function S(e,t,r){if(k[e])throw Error(o(100,e));k[e]=t,E[e]=t.eventTypes[r].dependencies}var C=[],w={},k={},E={};function x(e){var t,r=!1;for(t in e)if(e.hasOwnProperty(t)){var i=e[t];if(!b.hasOwnProperty(t)||b[t]!==i){if(b[t])throw Error(o(102,t));b[t]=i,r=!0}}r&&y()}var A=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),T=null,R=null,L=null;function D(e){if(e=v(e)){if("function"!=typeof T)throw Error(o(280));var t=e.stateNode;t&&(t=p(t),T(e.stateNode,e.type,t))}}function I(e){R?L?L.push(e):L=[e]:R=e}function P(){if(R){var e=R,t=L;if(L=R=null,D(e),t)for(e=0;e<t.length;e++)D(t[e])}}function O(e,t){return e(t)}function B(e,t,r,i,n){return e(t,r,i,n)}function M(){}var N=O,H=!1,F=!1;function j(){null===R&&null===L||(M(),P())}function U(e,t,r){if(F)return e(t,r);F=!0;try{return N(e,t,r)}finally{F=!1,j()}}var z=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,K={},$={};function V(e,t,r,i,n,s){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=n,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=s}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new V(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new V(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new V(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new V(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new V(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new V(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new V(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new V(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new V(e,5,!1,e.toLowerCase(),null,!1)}));var Z=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(Z,G);q[t]=new V(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(Z,G);q[t]=new V(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(Z,G);q[t]=new V(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new V(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new V("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new V(e,1,!1,e.toLowerCase(),null,!0)}));var X=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Y(e,t,r,i){var n=q.hasOwnProperty(t)?q[t]:null;(null!==n?0===n.type:!i&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,r,i){if(null==t||function(e,t,r,i){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,i))return!0;if(i)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,n,i)&&(r=null),i||null===n?function(e){return!!W.call($,e)||!W.call(K,e)&&(z.test(e)?$[e]=!0:(K[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):n.mustUseProperty?e[n.propertyName]=null===r?3!==n.type&&"":r:(t=n.attributeName,i=n.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(n=n.type)||4===n&&!0===r?"":""+r,i?e.setAttributeNS(i,t,r):e.setAttribute(t,r))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Q="function"==typeof Symbol&&Symbol.for,ee=Q?Symbol.for("react.element"):60103,te=Q?Symbol.for("react.portal"):60106,re=Q?Symbol.for("react.fragment"):60107,ie=Q?Symbol.for("react.strict_mode"):60108,ne=Q?Symbol.for("react.profiler"):60114,se=Q?Symbol.for("react.provider"):60109,oe=Q?Symbol.for("react.context"):60110,ae=Q?Symbol.for("react.concurrent_mode"):60111,le=Q?Symbol.for("react.forward_ref"):60112,ce=Q?Symbol.for("react.suspense"):60113,ue=Q?Symbol.for("react.suspense_list"):60120,he=Q?Symbol.for("react.memo"):60115,de=Q?Symbol.for("react.lazy"):60116,fe=Q?Symbol.for("react.block"):60121,pe="function"==typeof Symbol&&Symbol.iterator;function ve(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=pe&&e[pe]||e["@@iterator"])?e:null}function ge(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case re:return"Fragment";case te:return"Portal";case ne:return"Profiler";case ie:return"StrictMode";case ce:return"Suspense";case ue:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case oe:return"Context.Consumer";case se:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case he:return ge(e.type);case fe:return ge(e.render);case de:if(e=1===e._status?e._result:null)return ge(e)}return null}function _e(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var r="";break e;default:var i=e._debugOwner,n=e._debugSource,s=ge(e.type);r=null,i&&(r=ge(i.type)),i=s,s="",n?s=" (at "+n.fileName.replace(J,"")+":"+n.lineNumber+")":r&&(s=" (created by "+r+")"),r="\n    in "+(i||"Unknown")+s}t+=r,e=e.return}while(e);return t}function me(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function ye(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var n=r.get,s=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return n.call(this)},set:function(e){i=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Se(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),i="";return e&&(i=be(e)?e.checked?"true":"false":e.value),(e=i)!==r&&(t.setValue(e),!0)}function Ce(e,t){var r=t.checked;return n({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function we(e,t){var r=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;r=me(null!=t.value?t.value:r),e._wrapperState={initialChecked:i,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function ke(e,t){null!=(t=t.checked)&&Y(e,"checked",t,!1)}function Ee(e,t){ke(e,t);var r=me(t.value),i=t.type;if(null!=r)"number"===i?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ae(e,t.type,r):t.hasOwnProperty("defaultValue")&&Ae(e,t.type,me(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function xe(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function Ae(e,t,r){"number"===t&&e.ownerDocument.activeElement===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function Te(e,t){return e=n({children:void 0},t),(t=function(e){var t="";return i.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Re(e,t,r,i){if(e=e.options,t){t={};for(var n=0;n<r.length;n++)t["$"+r[n]]=!0;for(r=0;r<e.length;r++)n=t.hasOwnProperty("$"+e[r].value),e[r].selected!==n&&(e[r].selected=n),n&&i&&(e[r].defaultSelected=!0)}else{for(r=""+me(r),t=null,n=0;n<e.length;n++){if(e[n].value===r)return e[n].selected=!0,void(i&&(e[n].defaultSelected=!0));null!==t||e[n].disabled||(t=e[n])}null!==t&&(t.selected=!0)}}function Le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return n({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function De(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(o(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(o(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:me(r)}}function Ie(e,t){var r=me(t.value),i=me(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=i&&(e.defaultValue=""+i)}function Pe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Be(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Me,Ne,He=(Ne=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((Me=Me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,i){MSApp.execUnsafeLocalFunction((function(){return Ne(e,t)}))}:Ne);function Fe(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}function je(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var Ue={animationend:je("Animation","AnimationEnd"),animationiteration:je("Animation","AnimationIteration"),animationstart:je("Animation","AnimationStart"),transitionend:je("Transition","TransitionEnd")},ze={},We={};function Ke(e){if(ze[e])return ze[e];if(!Ue[e])return e;var t,r=Ue[e];for(t in r)if(r.hasOwnProperty(t)&&t in We)return ze[e]=r[t];return e}A&&(We=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var $e=Ke("animationend"),Ve=Ke("animationiteration"),qe=Ke("animationstart"),Ze=Ke("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Ye(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Qe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Je(e)!==e)throw Error(o(188))}function tt(e,t){if(null==t)throw Error(o(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,r){Array.isArray(e)?e.forEach(t,r):e&&t.call(r,e)}var it=null;function nt(e){if(e){var t=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(t))for(var i=0;i<t.length&&!e.isPropagationStopped();i++)_(e,t[i],r[i]);else t&&_(e,t,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function st(e){if(null!==e&&(it=tt(it,e)),e=it,it=null,e){if(rt(e,nt),it)throw Error(o(95));if(u)throw e=h,u=!1,h=null,e}}function ot(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function at(e){if(!A)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var lt=[];function ct(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>lt.length&&lt.push(e)}function ut(e,t,r,i){if(lt.length){var n=lt.pop();return n.topLevelType=e,n.eventSystemFlags=i,n.nativeEvent=t,n.targetInst=r,n}return{topLevelType:e,eventSystemFlags:i,nativeEvent:t,targetInst:r,ancestors:[]}}function ht(e){var t=e.targetInst,r=t;do{if(!r){e.ancestors.push(r);break}var i=r;if(3===i.tag)i=i.stateNode.containerInfo;else{for(;i.return;)i=i.return;i=3!==i.tag?null:i.stateNode.containerInfo}if(!i)break;5!==(t=r.tag)&&6!==t||e.ancestors.push(r),r=Ar(i)}while(r);for(r=0;r<e.ancestors.length;r++){t=e.ancestors[r];var n=ot(e.nativeEvent);i=e.topLevelType;var s=e.nativeEvent,o=e.eventSystemFlags;0===r&&(o|=64);for(var a=null,l=0;l<C.length;l++){var c=C[l];c&&(c=c.extractEvents(i,t,s,n,o))&&(a=tt(a,c))}st(a)}}function dt(e,t,r){if(!r.has(e)){switch(e){case"scroll":Vt(t,"scroll",!0);break;case"focus":case"blur":Vt(t,"focus",!0),Vt(t,"blur",!0),r.set("blur",null),r.set("focus",null);break;case"cancel":case"close":at(e)&&Vt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&$t(e,t)}r.set(e,null)}}var ft,pt,vt,gt=!1,_t=[],mt=null,bt=null,yt=null,St=new Map,Ct=new Map,wt=[],kt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Et="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function xt(e,t,r,i,n){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|r,nativeEvent:n,container:i}}function At(e,t){switch(e){case"focus":case"blur":mt=null;break;case"dragenter":case"dragleave":bt=null;break;case"mouseover":case"mouseout":yt=null;break;case"pointerover":case"pointerout":St.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ct.delete(t.pointerId)}}function Tt(e,t,r,i,n,s){return null===e||e.nativeEvent!==s?(e=xt(t,r,i,n,s),null!==t&&null!==(t=Tr(t))&&pt(t),e):(e.eventSystemFlags|=i,e)}function Rt(e){var t=Ar(e.target);if(null!==t){var r=Je(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Qe(r)))return e.blockedOn=t,void s.unstable_runWithPriority(e.priority,(function(){vt(r)}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Lt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var r=Tr(t);return null!==r&&pt(r),e.blockedOn=t,!1}return!0}function Dt(e,t,r){Lt(e)&&r.delete(t)}function It(){for(gt=!1;0<_t.length;){var e=_t[0];if(null!==e.blockedOn){null!==(e=Tr(e.blockedOn))&&ft(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:_t.shift()}null!==mt&&Lt(mt)&&(mt=null),null!==bt&&Lt(bt)&&(bt=null),null!==yt&&Lt(yt)&&(yt=null),St.forEach(Dt),Ct.forEach(Dt)}function Pt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,It)))}function Ot(e){function t(t){return Pt(t,e)}if(0<_t.length){Pt(_t[0],e);for(var r=1;r<_t.length;r++){var i=_t[r];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==mt&&Pt(mt,e),null!==bt&&Pt(bt,e),null!==yt&&Pt(yt,e),St.forEach(t),Ct.forEach(t),r=0;r<wt.length;r++)(i=wt[r]).blockedOn===e&&(i.blockedOn=null);for(;0<wt.length&&null===(r=wt[0]).blockedOn;)Rt(r),null===r.blockedOn&&wt.shift()}var Bt={},Mt=new Map,Nt=new Map,Ht=["abort","abort",$e,"animationEnd",Ve,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ze,"transitionEnd","waiting","waiting"];function Ft(e,t){for(var r=0;r<e.length;r+=2){var i=e[r],n=e[r+1],s="on"+(n[0].toUpperCase()+n.slice(1));s={phasedRegistrationNames:{bubbled:s,captured:s+"Capture"},dependencies:[i],eventPriority:t},Nt.set(i,t),Mt.set(i,s),Bt[n]=s}}Ft("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ft("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ft(Ht,2);for(var jt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<jt.length;Ut++)Nt.set(jt[Ut],0);var zt=s.unstable_UserBlockingPriority,Wt=s.unstable_runWithPriority,Kt=!0;function $t(e,t){Vt(t,e,!1)}function Vt(e,t,r){var i=Nt.get(t);switch(void 0===i?2:i){case 0:i=qt.bind(null,t,1,e);break;case 1:i=Zt.bind(null,t,1,e);break;default:i=Gt.bind(null,t,1,e)}r?e.addEventListener(t,i,!0):e.addEventListener(t,i,!1)}function qt(e,t,r,i){H||M();var n=Gt,s=H;H=!0;try{B(n,e,t,r,i)}finally{(H=s)||j()}}function Zt(e,t,r,i){Wt(zt,Gt.bind(null,e,t,r,i))}function Gt(e,t,r,i){if(Kt)if(0<_t.length&&-1<kt.indexOf(e))e=xt(null,e,t,r,i),_t.push(e);else{var n=Xt(e,t,r,i);if(null===n)At(e,i);else if(-1<kt.indexOf(e))e=xt(n,e,t,r,i),_t.push(e);else if(!function(e,t,r,i,n){switch(t){case"focus":return mt=Tt(mt,e,t,r,i,n),!0;case"dragenter":return bt=Tt(bt,e,t,r,i,n),!0;case"mouseover":return yt=Tt(yt,e,t,r,i,n),!0;case"pointerover":var s=n.pointerId;return St.set(s,Tt(St.get(s)||null,e,t,r,i,n)),!0;case"gotpointercapture":return s=n.pointerId,Ct.set(s,Tt(Ct.get(s)||null,e,t,r,i,n)),!0}return!1}(n,e,t,r,i)){At(e,i),e=ut(e,i,null,t);try{U(ht,e)}finally{ct(e)}}}}function Xt(e,t,r,i){if(null!==(r=Ar(r=ot(i)))){var n=Je(r);if(null===n)r=null;else{var s=n.tag;if(13===s){if(null!==(r=Qe(n)))return r;r=null}else if(3===s){if(n.stateNode.hydrate)return 3===n.tag?n.stateNode.containerInfo:null;r=null}else n!==r&&(r=null)}}e=ut(e,i,r,t);try{U(ht,e)}finally{ct(e)}return null}var Yt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function Qt(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||Yt.hasOwnProperty(e)&&Yt[e]?(""+t).trim():t+"px"}function er(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var i=0===r.indexOf("--"),n=Qt(r,t[r],i);"float"===r&&(r="cssFloat"),i?e.setProperty(r,n):e[r]=n}}Object.keys(Yt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Yt[t]=Yt[e]}))}));var tr=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rr(e,t){if(t){if(tr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62,""))}}function ir(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var nr="http://www.w3.org/1999/xhtml";function sr(e,t){var r=Ye(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=E[t];for(var i=0;i<t.length;i++)dt(t[i],e,r)}function or(){}function ar(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function lr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var r,i=lr(e);for(e=0;i;){if(3===i.nodeType){if(r=e+i.textContent.length,e<=t&&r>=t)return{node:i,offset:t-e};e=r}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=lr(i)}}function ur(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ur(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hr(){for(var e=window,t=ar();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=ar((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var fr="$?",pr="$!",vr=null,gr=null;function _r(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function mr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,yr="function"==typeof clearTimeout?clearTimeout:void 0;function Sr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||r===pr||r===fr){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var wr=Math.random().toString(36).slice(2),kr="__reactInternalInstance$"+wr,Er="__reactEventHandlers$"+wr,xr="__reactContainere$"+wr;function Ar(e){var t=e[kr];if(t)return t;for(var r=e.parentNode;r;){if(t=r[xr]||r[kr]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=Cr(e);null!==e;){if(r=e[kr])return r;e=Cr(e)}return t}r=(e=r).parentNode}return null}function Tr(e){return!(e=e[kr]||e[xr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Rr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Lr(e){return e[Er]||null}function Dr(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Ir(e,t){var r=e.stateNode;if(!r)return null;var i=p(r);if(!i)return null;r=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(o(231,t,typeof r));return r}function Pr(e,t,r){(t=Ir(e,r.dispatchConfig.phasedRegistrationNames[t]))&&(r._dispatchListeners=tt(r._dispatchListeners,t),r._dispatchInstances=tt(r._dispatchInstances,e))}function Or(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,r=[];t;)r.push(t),t=Dr(t);for(t=r.length;0<t--;)Pr(r[t],"captured",e);for(t=0;t<r.length;t++)Pr(r[t],"bubbled",e)}}function Br(e,t,r){e&&r&&r.dispatchConfig.registrationName&&(t=Ir(e,r.dispatchConfig.registrationName))&&(r._dispatchListeners=tt(r._dispatchListeners,t),r._dispatchInstances=tt(r._dispatchInstances,e))}function Mr(e){rt(e,Or)}var Nr=null,Hr=null,Fr=null;function jr(){if(Fr)return Fr;var e,t,r=Hr,i=r.length,n="value"in Nr?Nr.value:Nr.textContent,s=n.length;for(e=0;e<i&&r[e]===n[e];e++);var o=i-e;for(t=1;t<=o&&r[i-t]===n[s-t];t++);return Fr=n.slice(e,1<t?1-t:void 0)}function Ur(){return!0}function zr(){return!1}function Wr(e,t,r,i){for(var n in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=r,e=this.constructor.Interface)e.hasOwnProperty(n)&&((t=e[n])?this[n]=t(r):"target"===n?this.target=i:this[n]=r[n]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?Ur:zr,this.isPropagationStopped=zr,this}function Kr(e,t,r,i){if(this.eventPool.length){var n=this.eventPool.pop();return this.call(n,e,t,r,i),n}return new this(e,t,r,i)}function $r(e){if(!(e instanceof this))throw Error(o(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Vr(e){e.eventPool=[],e.getPooled=Kr,e.release=$r}n(Wr.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Ur)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Ur)},persist:function(){this.isPersistent=Ur},isPersistent:zr,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=zr,this._dispatchInstances=this._dispatchListeners=null}}),Wr.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Wr.extend=function(e){function t(){}function r(){return i.apply(this,arguments)}var i=this;t.prototype=i.prototype;var s=new t;return n(s,r.prototype),r.prototype=s,r.prototype.constructor=r,r.Interface=n({},i.Interface,e),r.extend=i.extend,Vr(r),r},Vr(Wr);var qr=Wr.extend({data:null}),Zr=Wr.extend({data:null}),Gr=[9,13,27,32],Xr=A&&"CompositionEvent"in window,Yr=null;A&&"documentMode"in document&&(Yr=document.documentMode);var Jr=A&&"TextEvent"in window&&!Yr,Qr=A&&(!Xr||Yr&&8<Yr&&11>=Yr),ei=String.fromCharCode(32),ti={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ri=!1;function ii(e,t){switch(e){case"keyup":return-1!==Gr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ni(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var si=!1,oi={eventTypes:ti,extractEvents:function(e,t,r,i){var n;if(Xr)e:{switch(e){case"compositionstart":var s=ti.compositionStart;break e;case"compositionend":s=ti.compositionEnd;break e;case"compositionupdate":s=ti.compositionUpdate;break e}s=void 0}else si?ii(e,r)&&(s=ti.compositionEnd):"keydown"===e&&229===r.keyCode&&(s=ti.compositionStart);return s?(Qr&&"ko"!==r.locale&&(si||s!==ti.compositionStart?s===ti.compositionEnd&&si&&(n=jr()):(Hr="value"in(Nr=i)?Nr.value:Nr.textContent,si=!0)),s=qr.getPooled(s,t,r,i),(n||null!==(n=ni(r)))&&(s.data=n),Mr(s),n=s):n=null,(e=Jr?function(e,t){switch(e){case"compositionend":return ni(t);case"keypress":return 32!==t.which?null:(ri=!0,ei);case"textInput":return(e=t.data)===ei&&ri?null:e;default:return null}}(e,r):function(e,t){if(si)return"compositionend"===e||!Xr&&ii(e,t)?(e=jr(),Fr=Hr=Nr=null,si=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Qr&&"ko"!==t.locale?null:t.data}}(e,r))?((t=Zr.getPooled(ti.beforeInput,t,r,i)).data=e,Mr(t)):t=null,null===n?t:null===t?n:[n,t]}},ai={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function li(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ai[e.type]:"textarea"===t}var ci={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ui(e,t,r){return(e=Wr.getPooled(ci.change,e,t,r)).type="change",I(r),Mr(e),e}var hi=null,di=null;function fi(e){st(e)}function pi(e){if(Se(Rr(e)))return e}function vi(e,t){if("change"===e)return t}var gi=!1;function _i(){hi&&(hi.detachEvent("onpropertychange",mi),di=hi=null)}function mi(e){if("value"===e.propertyName&&pi(di))if(e=ui(di,e,ot(e)),H)st(e);else{H=!0;try{O(fi,e)}finally{H=!1,j()}}}function bi(e,t,r){"focus"===e?(_i(),di=r,(hi=t).attachEvent("onpropertychange",mi)):"blur"===e&&_i()}function yi(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return pi(di)}function Si(e,t){if("click"===e)return pi(t)}function Ci(e,t){if("input"===e||"change"===e)return pi(t)}A&&(gi=at("input")&&(!document.documentMode||9<document.documentMode));var wi={eventTypes:ci,_isInputEventSupported:gi,extractEvents:function(e,t,r,i){var n=t?Rr(t):window,s=n.nodeName&&n.nodeName.toLowerCase();if("select"===s||"input"===s&&"file"===n.type)var o=vi;else if(li(n))if(gi)o=Ci;else{o=yi;var a=bi}else(s=n.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===n.type||"radio"===n.type)&&(o=Si);if(o&&(o=o(e,t)))return ui(o,r,i);a&&a(e,n,t),"blur"===e&&(e=n._wrapperState)&&e.controlled&&"number"===n.type&&Ae(n,"number",n.value)}},ki=Wr.extend({view:null,detail:null}),Ei={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xi(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ei[e])&&!!t[e]}function Ai(){return xi}var Ti=0,Ri=0,Li=!1,Di=!1,Ii=ki.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ai,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ti;return Ti=e.screenX,Li?"mousemove"===e.type?e.screenX-t:0:(Li=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ri;return Ri=e.screenY,Di?"mousemove"===e.type?e.screenY-t:0:(Di=!0,0)}}),Pi=Ii.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Oi={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Bi={eventTypes:Oi,extractEvents:function(e,t,r,i,n){var s="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(s&&0==(32&n)&&(r.relatedTarget||r.fromElement)||!o&&!s)return null;if(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,o?(o=t,null!==(t=(t=r.relatedTarget||r.toElement)?Ar(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):o=null,o===t)return null;if("mouseout"===e||"mouseover"===e)var a=Ii,l=Oi.mouseLeave,c=Oi.mouseEnter,u="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Pi,l=Oi.pointerLeave,c=Oi.pointerEnter,u="pointer");if(e=null==o?s:Rr(o),s=null==t?s:Rr(t),(l=a.getPooled(l,o,r,i)).type=u+"leave",l.target=e,l.relatedTarget=s,(r=a.getPooled(c,t,r,i)).type=u+"enter",r.target=s,r.relatedTarget=e,u=t,(i=o)&&u)e:{for(c=u,o=0,e=a=i;e;e=Dr(e))o++;for(e=0,t=c;t;t=Dr(t))e++;for(;0<o-e;)a=Dr(a),o--;for(;0<e-o;)c=Dr(c),e--;for(;o--;){if(a===c||a===c.alternate)break e;a=Dr(a),c=Dr(c)}a=null}else a=null;for(c=a,a=[];i&&i!==c&&(null===(o=i.alternate)||o!==c);)a.push(i),i=Dr(i);for(i=[];u&&u!==c&&(null===(o=u.alternate)||o!==c);)i.push(u),u=Dr(u);for(u=0;u<a.length;u++)Br(a[u],"bubbled",l);for(u=i.length;0<u--;)Br(i[u],"captured",r);return 0==(64&n)?[l]:[l,r]}},Mi="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ni=Object.prototype.hasOwnProperty;function Hi(e,t){if(Mi(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),i=Object.keys(t);if(r.length!==i.length)return!1;for(i=0;i<r.length;i++)if(!Ni.call(t,r[i])||!Mi(e[r[i]],t[r[i]]))return!1;return!0}var Fi=A&&"documentMode"in document&&11>=document.documentMode,ji={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Ui=null,zi=null,Wi=null,Ki=!1;function $i(e,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Ki||null==Ui||Ui!==ar(r)?null:(r="selectionStart"in(r=Ui)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},Wi&&Hi(Wi,r)?null:(Wi=r,(e=Wr.getPooled(ji.select,zi,e,t)).type="select",e.target=Ui,Mr(e),e))}var Vi={eventTypes:ji,extractEvents:function(e,t,r,i,n,s){if(!(s=!(n=s||(i.window===i?i.document:9===i.nodeType?i:i.ownerDocument)))){e:{n=Ye(n),s=E.onSelect;for(var o=0;o<s.length;o++)if(!n.has(s[o])){n=!1;break e}n=!0}s=!n}if(s)return null;switch(n=t?Rr(t):window,e){case"focus":(li(n)||"true"===n.contentEditable)&&(Ui=n,zi=t,Wi=null);break;case"blur":Wi=zi=Ui=null;break;case"mousedown":Ki=!0;break;case"contextmenu":case"mouseup":case"dragend":return Ki=!1,$i(r,i);case"selectionchange":if(Fi)break;case"keydown":case"keyup":return $i(r,i)}return null}},qi=Wr.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zi=Wr.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Gi=ki.extend({relatedTarget:null});function Xi(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Yi={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ji={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Qi=ki.extend({key:function(e){if(e.key){var t=Yi[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xi(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ji[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ai,charCode:function(e){return"keypress"===e.type?Xi(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xi(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),en=Ii.extend({dataTransfer:null}),tn=ki.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ai}),rn=Wr.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),nn=Ii.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),sn={eventTypes:Bt,extractEvents:function(e,t,r,i){var n=Mt.get(e);if(!n)return null;switch(e){case"keypress":if(0===Xi(r))return null;case"keydown":case"keyup":e=Qi;break;case"blur":case"focus":e=Gi;break;case"click":if(2===r.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Ii;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=en;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=tn;break;case $e:case Ve:case qe:e=qi;break;case Ze:e=rn;break;case"scroll":e=ki;break;case"wheel":e=nn;break;case"copy":case"cut":case"paste":e=Zi;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Pi;break;default:e=Wr}return Mr(t=e.getPooled(n,t,r,i)),t}};if(m)throw Error(o(101));m=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),y(),p=Lr,v=Tr,g=Rr,x({SimpleEventPlugin:sn,EnterLeaveEventPlugin:Bi,ChangeEventPlugin:wi,SelectEventPlugin:Vi,BeforeInputEventPlugin:oi});var on=[],an=-1;function ln(e){0>an||(e.current=on[an],on[an]=null,an--)}function cn(e,t){an++,on[an]=e.current,e.current=t}var un={},hn={current:un},dn={current:!1},fn=un;function pn(e,t){var r=e.type.contextTypes;if(!r)return un;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var n,s={};for(n in r)s[n]=t[n];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function vn(e){return null!=e.childContextTypes}function gn(){ln(dn),ln(hn)}function _n(e,t,r){if(hn.current!==un)throw Error(o(168));cn(hn,t),cn(dn,r)}function mn(e,t,r){var i=e.stateNode;if(e=t.childContextTypes,"function"!=typeof i.getChildContext)return r;for(var s in i=i.getChildContext())if(!(s in e))throw Error(o(108,ge(t)||"Unknown",s));return n({},r,{},i)}function bn(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||un,fn=hn.current,cn(hn,e),cn(dn,dn.current),!0}function yn(e,t,r){var i=e.stateNode;if(!i)throw Error(o(169));r?(e=mn(e,t,fn),i.__reactInternalMemoizedMergedChildContext=e,ln(dn),ln(hn),cn(hn,e)):ln(dn),cn(dn,r)}var Sn=s.unstable_runWithPriority,Cn=s.unstable_scheduleCallback,wn=s.unstable_cancelCallback,kn=s.unstable_requestPaint,En=s.unstable_now,xn=s.unstable_getCurrentPriorityLevel,An=s.unstable_ImmediatePriority,Tn=s.unstable_UserBlockingPriority,Rn=s.unstable_NormalPriority,Ln=s.unstable_LowPriority,Dn=s.unstable_IdlePriority,In={},Pn=s.unstable_shouldYield,On=void 0!==kn?kn:function(){},Bn=null,Mn=null,Nn=!1,Hn=En(),Fn=1e4>Hn?En:function(){return En()-Hn};function jn(){switch(xn()){case An:return 99;case Tn:return 98;case Rn:return 97;case Ln:return 96;case Dn:return 95;default:throw Error(o(332))}}function Un(e){switch(e){case 99:return An;case 98:return Tn;case 97:return Rn;case 96:return Ln;case 95:return Dn;default:throw Error(o(332))}}function zn(e,t){return e=Un(e),Sn(e,t)}function Wn(e,t,r){return e=Un(e),Cn(e,t,r)}function Kn(e){return null===Bn?(Bn=[e],Mn=Cn(An,Vn)):Bn.push(e),In}function $n(){if(null!==Mn){var e=Mn;Mn=null,wn(e)}Vn()}function Vn(){if(!Nn&&null!==Bn){Nn=!0;var e=0;try{var t=Bn;zn(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Bn=null}catch(t){throw null!==Bn&&(Bn=Bn.slice(e+1)),Cn(An,$n),t}finally{Nn=!1}}}function qn(e,t,r){return 1073741821-(1+((1073741821-e+t/10)/(r/=10)|0))*r}function Zn(e,t){if(e&&e.defaultProps)for(var r in t=n({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}var Gn={current:null},Xn=null,Yn=null,Jn=null;function Qn(){Jn=Yn=Xn=null}function es(e){var t=Gn.current;ln(Gn),e.type._context._currentValue=t}function ts(e,t){for(;null!==e;){var r=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==r&&r.childExpirationTime<t&&(r.childExpirationTime=t);else{if(!(null!==r&&r.childExpirationTime<t))break;r.childExpirationTime=t}e=e.return}}function rs(e,t){Xn=e,Jn=Yn=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Lo=!0),e.firstContext=null)}function is(e,t){if(Jn!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Jn=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Yn){if(null===Xn)throw Error(o(308));Yn=t,Xn.dependencies={expirationTime:0,firstContext:t,responders:null}}else Yn=Yn.next=t;return e._currentValue}var ns=!1;function ss(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function os(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function as(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ls(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function cs(e,t){var r=e.alternate;null!==r&&os(r,e),null===(r=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=r.next,r.next=t)}function us(e,t,r,i){var s=e.updateQueue;ns=!1;var o=s.baseQueue,a=s.shared.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}o=a,s.shared.pending=null,null!==(l=e.alternate)&&null!==(l=l.updateQueue)&&(l.baseQueue=a)}if(null!==o){l=o.next;var c=s.baseState,u=0,h=null,d=null,f=null;if(null!==l)for(var p=l;;){if((a=p.expirationTime)<i){var v={expirationTime:p.expirationTime,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null};null===f?(d=f=v,h=c):f=f.next=v,a>u&&(u=a)}else{null!==f&&(f=f.next={expirationTime:1073741823,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null}),sl(a,p.suspenseConfig);e:{var g=e,_=p;switch(a=t,v=r,_.tag){case 1:if("function"==typeof(g=_.payload)){c=g.call(v,c,a);break e}c=g;break e;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null==(a="function"==typeof(g=_.payload)?g.call(v,c,a):g))break e;c=n({},c,a);break e;case 2:ns=!0}}null!==p.callback&&(e.effectTag|=32,null===(a=s.effects)?s.effects=[p]:a.push(p))}if(null===(p=p.next)||p===l){if(null===(a=s.shared.pending))break;p=o.next=a.next,a.next=l,s.baseQueue=o=a,s.shared.pending=null}}null===f?h=c:f.next=d,s.baseState=h,s.baseQueue=f,ol(u),e.expirationTime=u,e.memoizedState=c}}function hs(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],n=i.callback;if(null!==n){if(i.callback=null,i=n,n=r,"function"!=typeof i)throw Error(o(191,i));i.call(n)}}}var ds=X.ReactCurrentBatchConfig,fs=(new i.Component).refs;function ps(e,t,r,i){r=null==(r=r(i,t=e.memoizedState))?t:n({},t,r),e.memoizedState=r,0===e.expirationTime&&(e.updateQueue.baseState=r)}var vs={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternalFiber;var i=Za(),n=ds.suspense;(n=as(i=Ga(i,e,n),n)).payload=t,null!=r&&(n.callback=r),ls(e,n),Xa(e,i)},enqueueReplaceState:function(e,t,r){e=e._reactInternalFiber;var i=Za(),n=ds.suspense;(n=as(i=Ga(i,e,n),n)).tag=1,n.payload=t,null!=r&&(n.callback=r),ls(e,n),Xa(e,i)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var r=Za(),i=ds.suspense;(i=as(r=Ga(r,e,i),i)).tag=2,null!=t&&(i.callback=t),ls(e,i),Xa(e,r)}};function gs(e,t,r,i,n,s,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,s,o):!(t.prototype&&t.prototype.isPureReactComponent&&Hi(r,i)&&Hi(n,s))}function _s(e,t,r){var i=!1,n=un,s=t.contextType;return"object"==typeof s&&null!==s?s=is(s):(n=vn(t)?fn:hn.current,s=(i=null!=(i=t.contextTypes))?pn(e,n):un),t=new t(r,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vs,e.stateNode=t,t._reactInternalFiber=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=s),t}function ms(e,t,r,i){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,i),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,i),t.state!==e&&vs.enqueueReplaceState(t,t.state,null)}function bs(e,t,r,i){var n=e.stateNode;n.props=r,n.state=e.memoizedState,n.refs=fs,ss(e);var s=t.contextType;"object"==typeof s&&null!==s?n.context=is(s):(s=vn(t)?fn:hn.current,n.context=pn(e,s)),us(e,r,n,i),n.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(ps(e,t,s,r),n.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof n.getSnapshotBeforeUpdate||"function"!=typeof n.UNSAFE_componentWillMount&&"function"!=typeof n.componentWillMount||(t=n.state,"function"==typeof n.componentWillMount&&n.componentWillMount(),"function"==typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount(),t!==n.state&&vs.enqueueReplaceState(n,n.state,null),us(e,r,n,i),n.state=e.memoizedState),"function"==typeof n.componentDidMount&&(e.effectTag|=4)}var ys=Array.isArray;function Ss(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(o(309));var i=r.stateNode}if(!i)throw Error(o(147,e));var n=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===n?t.ref:(t=function(e){var t=i.refs;t===fs&&(t=i.refs={}),null===e?delete t[n]:t[n]=e},t._stringRef=n,t)}if("string"!=typeof e)throw Error(o(284));if(!r._owner)throw Error(o(290,e))}return e}function Cs(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function ws(e){function t(t,r){if(e){var i=t.lastEffect;null!==i?(i.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.effectTag=8}}function r(r,i){if(!e)return null;for(;null!==i;)t(r,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function n(e,t){return(e=xl(e,t)).index=0,e.sibling=null,e}function s(t,r,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<r?(t.effectTag=2,r):i:(t.effectTag=2,r):r}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,r,i){return null===t||6!==t.tag?((t=Rl(r,e.mode,i)).return=e,t):((t=n(t,r)).return=e,t)}function c(e,t,r,i){return null!==t&&t.elementType===r.type?((i=n(t,r.props)).ref=Ss(e,t,r),i.return=e,i):((i=Al(r.type,r.key,r.props,null,e.mode,i)).ref=Ss(e,t,r),i.return=e,i)}function u(e,t,r,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Ll(r,e.mode,i)).return=e,t):((t=n(t,r.children||[])).return=e,t)}function h(e,t,r,i,s){return null===t||7!==t.tag?((t=Tl(r,e.mode,i,s)).return=e,t):((t=n(t,r)).return=e,t)}function d(e,t,r){if("string"==typeof t||"number"==typeof t)return(t=Rl(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(r=Al(t.type,t.key,t.props,null,e.mode,r)).ref=Ss(e,null,t),r.return=e,r;case te:return(t=Ll(t,e.mode,r)).return=e,t}if(ys(t)||ve(t))return(t=Tl(t,e.mode,r,null)).return=e,t;Cs(e,t)}return null}function f(e,t,r,i){var n=null!==t?t.key:null;if("string"==typeof r||"number"==typeof r)return null!==n?null:l(e,t,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return r.key===n?r.type===re?h(e,t,r.props.children,i,n):c(e,t,r,i):null;case te:return r.key===n?u(e,t,r,i):null}if(ys(r)||ve(r))return null!==n?null:h(e,t,r,i,null);Cs(e,r)}return null}function p(e,t,r,i,n){if("string"==typeof i||"number"==typeof i)return l(t,e=e.get(r)||null,""+i,n);if("object"==typeof i&&null!==i){switch(i.$$typeof){case ee:return e=e.get(null===i.key?r:i.key)||null,i.type===re?h(t,e,i.props.children,n,i.key):c(t,e,i,n);case te:return u(t,e=e.get(null===i.key?r:i.key)||null,i,n)}if(ys(i)||ve(i))return h(t,e=e.get(r)||null,i,n,null);Cs(t,i)}return null}function v(n,o,a,l){for(var c=null,u=null,h=o,v=o=0,g=null;null!==h&&v<a.length;v++){h.index>v?(g=h,h=null):g=h.sibling;var _=f(n,h,a[v],l);if(null===_){null===h&&(h=g);break}e&&h&&null===_.alternate&&t(n,h),o=s(_,o,v),null===u?c=_:u.sibling=_,u=_,h=g}if(v===a.length)return r(n,h),c;if(null===h){for(;v<a.length;v++)null!==(h=d(n,a[v],l))&&(o=s(h,o,v),null===u?c=h:u.sibling=h,u=h);return c}for(h=i(n,h);v<a.length;v++)null!==(g=p(h,n,v,a[v],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),o=s(g,o,v),null===u?c=g:u.sibling=g,u=g);return e&&h.forEach((function(e){return t(n,e)})),c}function g(n,a,l,c){var u=ve(l);if("function"!=typeof u)throw Error(o(150));if(null==(l=u.call(l)))throw Error(o(151));for(var h=u=null,v=a,g=a=0,_=null,m=l.next();null!==v&&!m.done;g++,m=l.next()){v.index>g?(_=v,v=null):_=v.sibling;var b=f(n,v,m.value,c);if(null===b){null===v&&(v=_);break}e&&v&&null===b.alternate&&t(n,v),a=s(b,a,g),null===h?u=b:h.sibling=b,h=b,v=_}if(m.done)return r(n,v),u;if(null===v){for(;!m.done;g++,m=l.next())null!==(m=d(n,m.value,c))&&(a=s(m,a,g),null===h?u=m:h.sibling=m,h=m);return u}for(v=i(n,v);!m.done;g++,m=l.next())null!==(m=p(v,n,g,m.value,c))&&(e&&null!==m.alternate&&v.delete(null===m.key?g:m.key),a=s(m,a,g),null===h?u=m:h.sibling=m,h=m);return e&&v.forEach((function(e){return t(n,e)})),u}return function(e,i,s,l){var c="object"==typeof s&&null!==s&&s.type===re&&null===s.key;c&&(s=s.props.children);var u="object"==typeof s&&null!==s;if(u)switch(s.$$typeof){case ee:e:{for(u=s.key,c=i;null!==c;){if(c.key===u){if(7===c.tag){if(s.type===re){r(e,c.sibling),(i=n(c,s.props.children)).return=e,e=i;break e}}else if(c.elementType===s.type){r(e,c.sibling),(i=n(c,s.props)).ref=Ss(e,c,s),i.return=e,e=i;break e}r(e,c);break}t(e,c),c=c.sibling}s.type===re?((i=Tl(s.props.children,e.mode,l,s.key)).return=e,e=i):((l=Al(s.type,s.key,s.props,null,e.mode,l)).ref=Ss(e,i,s),l.return=e,e=l)}return a(e);case te:e:{for(c=s.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===s.containerInfo&&i.stateNode.implementation===s.implementation){r(e,i.sibling),(i=n(i,s.children||[])).return=e,e=i;break e}r(e,i);break}t(e,i),i=i.sibling}(i=Ll(s,e.mode,l)).return=e,e=i}return a(e)}if("string"==typeof s||"number"==typeof s)return s=""+s,null!==i&&6===i.tag?(r(e,i.sibling),(i=n(i,s)).return=e,e=i):(r(e,i),(i=Rl(s,e.mode,l)).return=e,e=i),a(e);if(ys(s))return v(e,i,s,l);if(ve(s))return g(e,i,s,l);if(u&&Cs(e,s),void 0===s&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(o(152,e.displayName||e.name||"Component"))}return r(e,i)}}var ks=ws(!0),Es=ws(!1),xs={},As={current:xs},Ts={current:xs},Rs={current:xs};function Ls(e){if(e===xs)throw Error(o(174));return e}function Ds(e,t){switch(cn(Rs,t),cn(Ts,e),cn(As,xs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Be(null,"");break;default:t=Be(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ln(As),cn(As,t)}function Is(){ln(As),ln(Ts),ln(Rs)}function Ps(e){Ls(Rs.current);var t=Ls(As.current),r=Be(t,e.type);t!==r&&(cn(Ts,e),cn(As,r))}function Os(e){Ts.current===e&&(ln(As),ln(Ts))}var Bs={current:0};function Ms(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||r.data===fr||r.data===pr))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ns(e,t){return{responder:e,props:t}}var Hs=X.ReactCurrentDispatcher,Fs=X.ReactCurrentBatchConfig,js=0,Us=null,zs=null,Ws=null,Ks=!1;function $s(){throw Error(o(321))}function Vs(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!Mi(e[r],t[r]))return!1;return!0}function qs(e,t,r,i,n,s){if(js=s,Us=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Hs.current=null===e||null===e.memoizedState?_o:mo,e=r(i,n),t.expirationTime===js){s=0;do{if(t.expirationTime=0,!(25>s))throw Error(o(301));s+=1,Ws=zs=null,t.updateQueue=null,Hs.current=bo,e=r(i,n)}while(t.expirationTime===js)}if(Hs.current=go,t=null!==zs&&null!==zs.next,js=0,Ws=zs=Us=null,Ks=!1,t)throw Error(o(300));return e}function Zs(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ws?Us.memoizedState=Ws=e:Ws=Ws.next=e,Ws}function Gs(){if(null===zs){var e=Us.alternate;e=null!==e?e.memoizedState:null}else e=zs.next;var t=null===Ws?Us.memoizedState:Ws.next;if(null!==t)Ws=t,zs=e;else{if(null===e)throw Error(o(310));e={memoizedState:(zs=e).memoizedState,baseState:zs.baseState,baseQueue:zs.baseQueue,queue:zs.queue,next:null},null===Ws?Us.memoizedState=Ws=e:Ws=Ws.next=e}return Ws}function Xs(e,t){return"function"==typeof t?t(e):t}function Ys(e){var t=Gs(),r=t.queue;if(null===r)throw Error(o(311));r.lastRenderedReducer=e;var i=zs,n=i.baseQueue,s=r.pending;if(null!==s){if(null!==n){var a=n.next;n.next=s.next,s.next=a}i.baseQueue=n=s,r.pending=null}if(null!==n){n=n.next,i=i.baseState;var l=a=s=null,c=n;do{var u=c.expirationTime;if(u<js){var h={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===l?(a=l=h,s=i):l=l.next=h,u>Us.expirationTime&&(Us.expirationTime=u,ol(u))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),sl(u,c.suspenseConfig),i=c.eagerReducer===e?c.eagerState:e(i,c.action);c=c.next}while(null!==c&&c!==n);null===l?s=i:l.next=a,Mi(i,t.memoizedState)||(Lo=!0),t.memoizedState=i,t.baseState=s,t.baseQueue=l,r.lastRenderedState=i}return[t.memoizedState,r.dispatch]}function Js(e){var t=Gs(),r=t.queue;if(null===r)throw Error(o(311));r.lastRenderedReducer=e;var i=r.dispatch,n=r.pending,s=t.memoizedState;if(null!==n){r.pending=null;var a=n=n.next;do{s=e(s,a.action),a=a.next}while(a!==n);Mi(s,t.memoizedState)||(Lo=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),r.lastRenderedState=s}return[s,i]}function Qs(e){var t=Zs();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xs,lastRenderedState:e}).dispatch=vo.bind(null,Us,e),[t.memoizedState,e]}function eo(e,t,r,i){return e={tag:e,create:t,destroy:r,deps:i,next:null},null===(t=Us.updateQueue)?(t={lastEffect:null},Us.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(i=r.next,r.next=e,e.next=i,t.lastEffect=e),e}function to(){return Gs().memoizedState}function ro(e,t,r,i){var n=Zs();Us.effectTag|=e,n.memoizedState=eo(1|t,r,void 0,void 0===i?null:i)}function io(e,t,r,i){var n=Gs();i=void 0===i?null:i;var s=void 0;if(null!==zs){var o=zs.memoizedState;if(s=o.destroy,null!==i&&Vs(i,o.deps))return void eo(t,r,s,i)}Us.effectTag|=e,n.memoizedState=eo(1|t,r,s,i)}function no(e,t){return ro(516,4,e,t)}function so(e,t){return io(516,4,e,t)}function oo(e,t){return io(4,2,e,t)}function ao(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function lo(e,t,r){return r=null!=r?r.concat([e]):null,io(4,2,ao.bind(null,t,e),r)}function co(){}function uo(e,t){return Zs().memoizedState=[e,void 0===t?null:t],e}function ho(e,t){var r=Gs();t=void 0===t?null:t;var i=r.memoizedState;return null!==i&&null!==t&&Vs(t,i[1])?i[0]:(r.memoizedState=[e,t],e)}function fo(e,t){var r=Gs();t=void 0===t?null:t;var i=r.memoizedState;return null!==i&&null!==t&&Vs(t,i[1])?i[0]:(e=e(),r.memoizedState=[e,t],e)}function po(e,t,r){var i=jn();zn(98>i?98:i,(function(){e(!0)})),zn(97<i?97:i,(function(){var i=Fs.suspense;Fs.suspense=void 0===t?null:t;try{e(!1),r()}finally{Fs.suspense=i}}))}function vo(e,t,r){var i=Za(),n=ds.suspense;n={expirationTime:i=Ga(i,e,n),suspenseConfig:n,action:r,eagerReducer:null,eagerState:null,next:null};var s=t.pending;if(null===s?n.next=n:(n.next=s.next,s.next=n),t.pending=n,s=e.alternate,e===Us||null!==s&&s===Us)Ks=!0,n.expirationTime=js,Us.expirationTime=js;else{if(0===e.expirationTime&&(null===s||0===s.expirationTime)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,a=s(o,r);if(n.eagerReducer=s,n.eagerState=a,Mi(a,o))return}catch(e){}Xa(e,i)}}var go={readContext:is,useCallback:$s,useContext:$s,useEffect:$s,useImperativeHandle:$s,useLayoutEffect:$s,useMemo:$s,useReducer:$s,useRef:$s,useState:$s,useDebugValue:$s,useResponder:$s,useDeferredValue:$s,useTransition:$s},_o={readContext:is,useCallback:uo,useContext:is,useEffect:no,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,ro(4,2,ao.bind(null,t,e),r)},useLayoutEffect:function(e,t){return ro(4,2,e,t)},useMemo:function(e,t){var r=Zs();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var i=Zs();return t=void 0!==r?r(t):t,i.memoizedState=i.baseState=t,e=(e=i.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=vo.bind(null,Us,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Zs().memoizedState=e},useState:Qs,useDebugValue:co,useResponder:Ns,useDeferredValue:function(e,t){var r=Qs(e),i=r[0],n=r[1];return no((function(){var r=Fs.suspense;Fs.suspense=void 0===t?null:t;try{n(e)}finally{Fs.suspense=r}}),[e,t]),i},useTransition:function(e){var t=Qs(!1),r=t[0];return t=t[1],[uo(po.bind(null,t,e),[t,e]),r]}},mo={readContext:is,useCallback:ho,useContext:is,useEffect:so,useImperativeHandle:lo,useLayoutEffect:oo,useMemo:fo,useReducer:Ys,useRef:to,useState:function(){return Ys(Xs)},useDebugValue:co,useResponder:Ns,useDeferredValue:function(e,t){var r=Ys(Xs),i=r[0],n=r[1];return so((function(){var r=Fs.suspense;Fs.suspense=void 0===t?null:t;try{n(e)}finally{Fs.suspense=r}}),[e,t]),i},useTransition:function(e){var t=Ys(Xs),r=t[0];return t=t[1],[ho(po.bind(null,t,e),[t,e]),r]}},bo={readContext:is,useCallback:ho,useContext:is,useEffect:so,useImperativeHandle:lo,useLayoutEffect:oo,useMemo:fo,useReducer:Js,useRef:to,useState:function(){return Js(Xs)},useDebugValue:co,useResponder:Ns,useDeferredValue:function(e,t){var r=Js(Xs),i=r[0],n=r[1];return so((function(){var r=Fs.suspense;Fs.suspense=void 0===t?null:t;try{n(e)}finally{Fs.suspense=r}}),[e,t]),i},useTransition:function(e){var t=Js(Xs),r=t[0];return t=t[1],[ho(po.bind(null,t,e),[t,e]),r]}},yo=null,So=null,Co=!1;function wo(e,t){var r=kl(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function ko(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Eo(e){if(Co){var t=So;if(t){var r=t;if(!ko(e,t)){if(!(t=Sr(r.nextSibling))||!ko(e,t))return e.effectTag=-1025&e.effectTag|2,Co=!1,void(yo=e);wo(yo,r)}yo=e,So=Sr(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Co=!1,yo=e}}function xo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;yo=e}function Ao(e){if(e!==yo)return!1;if(!Co)return xo(e),Co=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!mr(t,e.memoizedProps))for(t=So;t;)wo(e,t),t=Sr(t.nextSibling);if(xo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){So=Sr(e.nextSibling);break e}t--}else"$"!==r&&r!==pr&&r!==fr||t++}e=e.nextSibling}So=null}}else So=yo?Sr(e.stateNode.nextSibling):null;return!0}function To(){So=yo=null,Co=!1}var Ro=X.ReactCurrentOwner,Lo=!1;function Do(e,t,r,i){t.child=null===e?Es(t,null,r,i):ks(t,e.child,r,i)}function Io(e,t,r,i,n){r=r.render;var s=t.ref;return rs(t,n),i=qs(e,t,r,i,s,n),null===e||Lo?(t.effectTag|=1,Do(e,t,i,n),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=n&&(e.expirationTime=0),Zo(e,t,n))}function Po(e,t,r,i,n,s){if(null===e){var o=r.type;return"function"!=typeof o||El(o)||void 0!==o.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Al(r.type,null,i,null,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Oo(e,t,o,i,n,s))}return o=e.child,n<s&&(n=o.memoizedProps,(r=null!==(r=r.compare)?r:Hi)(n,i)&&e.ref===t.ref)?Zo(e,t,s):(t.effectTag|=1,(e=xl(o,i)).ref=t.ref,e.return=t,t.child=e)}function Oo(e,t,r,i,n,s){return null!==e&&Hi(e.memoizedProps,i)&&e.ref===t.ref&&(Lo=!1,n<s)?(t.expirationTime=e.expirationTime,Zo(e,t,s)):Mo(e,t,r,i,s)}function Bo(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.effectTag|=128)}function Mo(e,t,r,i,n){var s=vn(r)?fn:hn.current;return s=pn(t,s),rs(t,n),r=qs(e,t,r,i,s,n),null===e||Lo?(t.effectTag|=1,Do(e,t,r,n),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=n&&(e.expirationTime=0),Zo(e,t,n))}function No(e,t,r,i,n){if(vn(r)){var s=!0;bn(t)}else s=!1;if(rs(t,n),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),_s(t,r,i),bs(t,r,i,n),i=!0;else if(null===e){var o=t.stateNode,a=t.memoizedProps;o.props=a;var l=o.context,c=r.contextType;c="object"==typeof c&&null!==c?is(c):pn(t,c=vn(r)?fn:hn.current);var u=r.getDerivedStateFromProps,h="function"==typeof u||"function"==typeof o.getSnapshotBeforeUpdate;h||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(a!==i||l!==c)&&ms(t,o,i,c),ns=!1;var d=t.memoizedState;o.state=d,us(t,i,o,n),l=t.memoizedState,a!==i||d!==l||dn.current||ns?("function"==typeof u&&(ps(t,r,u,i),l=t.memoizedState),(a=ns||gs(t,r,a,i,d,l,c))?(h||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.effectTag|=4)):("function"==typeof o.componentDidMount&&(t.effectTag|=4),t.memoizedProps=i,t.memoizedState=l),o.props=i,o.state=l,o.context=c,i=a):("function"==typeof o.componentDidMount&&(t.effectTag|=4),i=!1)}else o=t.stateNode,os(e,t),a=t.memoizedProps,o.props=t.type===t.elementType?a:Zn(t.type,a),l=o.context,c="object"==typeof(c=r.contextType)&&null!==c?is(c):pn(t,c=vn(r)?fn:hn.current),(h="function"==typeof(u=r.getDerivedStateFromProps)||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(a!==i||l!==c)&&ms(t,o,i,c),ns=!1,l=t.memoizedState,o.state=l,us(t,i,o,n),d=t.memoizedState,a!==i||l!==d||dn.current||ns?("function"==typeof u&&(ps(t,r,u,i),d=t.memoizedState),(u=ns||gs(t,r,a,i,l,d,c))?(h||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(i,d,c),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(i,d,c)),"function"==typeof o.componentDidUpdate&&(t.effectTag|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof o.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=i,t.memoizedState=d),o.props=i,o.state=d,o.context=c,i=u):("function"!=typeof o.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),i=!1);return Ho(e,t,r,i,s,n)}function Ho(e,t,r,i,n,s){Bo(e,t);var o=0!=(64&t.effectTag);if(!i&&!o)return n&&yn(t,r,!1),Zo(e,t,s);i=t.stateNode,Ro.current=t;var a=o&&"function"!=typeof r.getDerivedStateFromError?null:i.render();return t.effectTag|=1,null!==e&&o?(t.child=ks(t,e.child,null,s),t.child=ks(t,null,a,s)):Do(e,t,a,s),t.memoizedState=i.state,n&&yn(t,r,!0),t.child}function Fo(e){var t=e.stateNode;t.pendingContext?_n(0,t.pendingContext,t.pendingContext!==t.context):t.context&&_n(0,t.context,!1),Ds(e,t.containerInfo)}var jo,Uo,zo,Wo={dehydrated:null,retryTime:0};function Ko(e,t,r){var i,n=t.mode,s=t.pendingProps,o=Bs.current,a=!1;if((i=0!=(64&t.effectTag))||(i=0!=(2&o)&&(null===e||null!==e.memoizedState)),i?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===s.fallback||!0===s.unstable_avoidThisFallback||(o|=1),cn(Bs,1&o),null===e){if(void 0!==s.fallback&&Eo(t),a){if(a=s.fallback,(s=Tl(null,n,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,s.child=e;null!==e;)e.return=s,e=e.sibling;return(r=Tl(a,n,r,null)).return=t,s.sibling=r,t.memoizedState=Wo,t.child=s,r}return n=s.children,t.memoizedState=null,t.child=Es(t,null,n,r)}if(null!==e.memoizedState){if(n=(e=e.child).sibling,a){if(s=s.fallback,(r=xl(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(r.child=a;null!==a;)a.return=r,a=a.sibling;return(n=xl(n,s)).return=t,r.sibling=n,r.childExpirationTime=0,t.memoizedState=Wo,t.child=r,n}return r=ks(t,e.child,s.children,r),t.memoizedState=null,t.child=r}if(e=e.child,a){if(a=s.fallback,(s=Tl(null,n,0,null)).return=t,s.child=e,null!==e&&(e.return=s),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,s.child=e;null!==e;)e.return=s,e=e.sibling;return(r=Tl(a,n,r,null)).return=t,s.sibling=r,r.effectTag|=2,s.childExpirationTime=0,t.memoizedState=Wo,t.child=s,r}return t.memoizedState=null,t.child=ks(t,e,s.children,r)}function $o(e,t){e.expirationTime<t&&(e.expirationTime=t);var r=e.alternate;null!==r&&r.expirationTime<t&&(r.expirationTime=t),ts(e.return,t)}function Vo(e,t,r,i,n,s){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:r,tailExpiration:0,tailMode:n,lastEffect:s}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=i,o.tail=r,o.tailExpiration=0,o.tailMode=n,o.lastEffect=s)}function qo(e,t,r){var i=t.pendingProps,n=i.revealOrder,s=i.tail;if(Do(e,t,i.children,r),0!=(2&(i=Bs.current)))i=1&i|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&$o(e,r);else if(19===e.tag)$o(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(cn(Bs,i),0==(2&t.mode))t.memoizedState=null;else switch(n){case"forwards":for(r=t.child,n=null;null!==r;)null!==(e=r.alternate)&&null===Ms(e)&&(n=r),r=r.sibling;null===(r=n)?(n=t.child,t.child=null):(n=r.sibling,r.sibling=null),Vo(t,!1,n,r,s,t.lastEffect);break;case"backwards":for(r=null,n=t.child,t.child=null;null!==n;){if(null!==(e=n.alternate)&&null===Ms(e)){t.child=n;break}e=n.sibling,n.sibling=r,r=n,n=e}Vo(t,!0,r,null,s,t.lastEffect);break;case"together":Vo(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zo(e,t,r){null!==e&&(t.dependencies=e.dependencies);var i=t.expirationTime;if(0!==i&&ol(i),t.childExpirationTime<r)return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(r=xl(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=xl(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function Go(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var i=null;null!==r;)null!==r.alternate&&(i=r),r=r.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Xo(e,t,r){var i=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return vn(t.type)&&gn(),null;case 3:return Is(),ln(dn),ln(hn),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||!Ao(t)||(t.effectTag|=4),null;case 5:Os(t),r=Ls(Rs.current);var s=t.type;if(null!==e&&null!=t.stateNode)Uo(e,t,s,i,r),e.ref!==t.ref&&(t.effectTag|=128);else{if(!i){if(null===t.stateNode)throw Error(o(166));return null}if(e=Ls(As.current),Ao(t)){i=t.stateNode,s=t.type;var a=t.memoizedProps;switch(i[kr]=t,i[Er]=a,s){case"iframe":case"object":case"embed":$t("load",i);break;case"video":case"audio":for(e=0;e<Ge.length;e++)$t(Ge[e],i);break;case"source":$t("error",i);break;case"img":case"image":case"link":$t("error",i),$t("load",i);break;case"form":$t("reset",i),$t("submit",i);break;case"details":$t("toggle",i);break;case"input":we(i,a),$t("invalid",i),sr(r,"onChange");break;case"select":i._wrapperState={wasMultiple:!!a.multiple},$t("invalid",i),sr(r,"onChange");break;case"textarea":De(i,a),$t("invalid",i),sr(r,"onChange")}for(var l in rr(s,a),e=null,a)if(a.hasOwnProperty(l)){var c=a[l];"children"===l?"string"==typeof c?i.textContent!==c&&(e=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(e=["children",""+c]):k.hasOwnProperty(l)&&null!=c&&sr(r,l)}switch(s){case"input":ye(i),xe(i,a,!0);break;case"textarea":ye(i),Pe(i);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(i.onclick=or)}r=e,t.updateQueue=r,null!==r&&(t.effectTag|=4)}else{switch(l=9===r.nodeType?r:r.ownerDocument,e===nr&&(e=Oe(s)),e===nr?"script"===s?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof i.is?e=l.createElement(s,{is:i.is}):(e=l.createElement(s),"select"===s&&(l=e,i.multiple?l.multiple=!0:i.size&&(l.size=i.size))):e=l.createElementNS(e,s),e[kr]=t,e[Er]=i,jo(e,t),t.stateNode=e,l=ir(s,i),s){case"iframe":case"object":case"embed":$t("load",e),c=i;break;case"video":case"audio":for(c=0;c<Ge.length;c++)$t(Ge[c],e);c=i;break;case"source":$t("error",e),c=i;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=i;break;case"form":$t("reset",e),$t("submit",e),c=i;break;case"details":$t("toggle",e),c=i;break;case"input":we(e,i),c=Ce(e,i),$t("invalid",e),sr(r,"onChange");break;case"option":c=Te(e,i);break;case"select":e._wrapperState={wasMultiple:!!i.multiple},c=n({},i,{value:void 0}),$t("invalid",e),sr(r,"onChange");break;case"textarea":De(e,i),c=Le(e,i),$t("invalid",e),sr(r,"onChange");break;default:c=i}rr(s,c);var u=c;for(a in u)if(u.hasOwnProperty(a)){var h=u[a];"style"===a?er(e,h):"dangerouslySetInnerHTML"===a?null!=(h=h?h.__html:void 0)&&He(e,h):"children"===a?"string"==typeof h?("textarea"!==s||""!==h)&&Fe(e,h):"number"==typeof h&&Fe(e,""+h):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(k.hasOwnProperty(a)?null!=h&&sr(r,a):null!=h&&Y(e,a,h,l))}switch(s){case"input":ye(e),xe(e,i,!1);break;case"textarea":ye(e),Pe(e);break;case"option":null!=i.value&&e.setAttribute("value",""+me(i.value));break;case"select":e.multiple=!!i.multiple,null!=(r=i.value)?Re(e,!!i.multiple,r,!1):null!=i.defaultValue&&Re(e,!!i.multiple,i.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=or)}_r(s,i)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)zo(0,t,e.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw Error(o(166));r=Ls(Rs.current),Ls(As.current),Ao(t)?(r=t.stateNode,i=t.memoizedProps,r[kr]=t,r.nodeValue!==i&&(t.effectTag|=4)):((r=(9===r.nodeType?r:r.ownerDocument).createTextNode(i))[kr]=t,t.stateNode=r)}return null;case 13:return ln(Bs),i=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=r,t):(r=null!==i,i=!1,null===e?void 0!==t.memoizedProps.fallback&&Ao(t):(i=null!==(s=e.memoizedState),r||null===s||null!==(s=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=s,s.nextEffect=a):(t.firstEffect=t.lastEffect=s,s.nextEffect=null),s.effectTag=8)),r&&!i&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Bs.current)?Ra===Ca&&(Ra=wa):(Ra!==Ca&&Ra!==wa||(Ra=ka),0!==Oa&&null!==xa&&(Pl(xa,Ta),Ol(xa,Oa)))),(r||i)&&(t.effectTag|=4),null);case 4:return Is(),null;case 10:return es(t),null;case 19:if(ln(Bs),null===(i=t.memoizedState))return null;if(s=0!=(64&t.effectTag),null===(a=i.rendering)){if(s)Go(i,!1);else if(Ra!==Ca||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Ms(a))){for(t.effectTag|=64,Go(i,!1),null!==(s=e.updateQueue)&&(t.updateQueue=s,t.effectTag|=4),null===i.lastEffect&&(t.firstEffect=null),t.lastEffect=i.lastEffect,i=t.child;null!==i;)a=r,(s=i).effectTag&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(e=s.alternate)?(s.childExpirationTime=0,s.expirationTime=a,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null):(s.childExpirationTime=e.childExpirationTime,s.expirationTime=e.expirationTime,s.child=e.child,s.memoizedProps=e.memoizedProps,s.memoizedState=e.memoizedState,s.updateQueue=e.updateQueue,a=e.dependencies,s.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),i=i.sibling;return cn(Bs,1&Bs.current|2),t.child}a=a.sibling}}else{if(!s)if(null!==(e=Ms(a))){if(t.effectTag|=64,s=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),Go(i,!0),null===i.tail&&"hidden"===i.tailMode&&!a.alternate)return null!==(t=t.lastEffect=i.lastEffect)&&(t.nextEffect=null),null}else 2*Fn()-i.renderingStartTime>i.tailExpiration&&1<r&&(t.effectTag|=64,s=!0,Go(i,!1),t.expirationTime=t.childExpirationTime=r-1);i.isBackwards?(a.sibling=t.child,t.child=a):(null!==(r=i.last)?r.sibling=a:t.child=a,i.last=a)}return null!==i.tail?(0===i.tailExpiration&&(i.tailExpiration=Fn()+500),r=i.tail,i.rendering=r,i.tail=r.sibling,i.lastEffect=t.lastEffect,i.renderingStartTime=Fn(),r.sibling=null,t=Bs.current,cn(Bs,s?1&t|2:1&t),r):null}throw Error(o(156,t.tag))}function Yo(e){switch(e.tag){case 1:vn(e.type)&&gn();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Is(),ln(dn),ln(hn),0!=(64&(t=e.effectTag)))throw Error(o(285));return e.effectTag=-4097&t|64,e;case 5:return Os(e),null;case 13:return ln(Bs),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return ln(Bs),null;case 4:return Is(),null;case 10:return es(e),null;default:return null}}function Jo(e,t){return{value:e,source:t,stack:_e(t)}}jo=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Uo=function(e,t,r,i,s){var o=e.memoizedProps;if(o!==i){var a,l,c=t.stateNode;switch(Ls(As.current),e=null,r){case"input":o=Ce(c,o),i=Ce(c,i),e=[];break;case"option":o=Te(c,o),i=Te(c,i),e=[];break;case"select":o=n({},o,{value:void 0}),i=n({},i,{value:void 0}),e=[];break;case"textarea":o=Le(c,o),i=Le(c,i),e=[];break;default:"function"!=typeof o.onClick&&"function"==typeof i.onClick&&(c.onclick=or)}for(a in rr(r,i),r=null,o)if(!i.hasOwnProperty(a)&&o.hasOwnProperty(a)&&null!=o[a])if("style"===a)for(l in c=o[a])c.hasOwnProperty(l)&&(r||(r={}),r[l]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(k.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in i){var u=i[a];if(c=null!=o?o[a]:void 0,i.hasOwnProperty(a)&&u!==c&&(null!=u||null!=c))if("style"===a)if(c){for(l in c)!c.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(r||(r={}),r[l]="");for(l in u)u.hasOwnProperty(l)&&c[l]!==u[l]&&(r||(r={}),r[l]=u[l])}else r||(e||(e=[]),e.push(a,r)),r=u;else"dangerouslySetInnerHTML"===a?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(e=e||[]).push(a,u)):"children"===a?c===u||"string"!=typeof u&&"number"!=typeof u||(e=e||[]).push(a,""+u):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(k.hasOwnProperty(a)?(null!=u&&sr(s,a),e||c===u||(e=[])):(e=e||[]).push(a,u))}r&&(e=e||[]).push("style",r),s=e,(t.updateQueue=s)&&(t.effectTag|=4)}},zo=function(e,t,r,i){r!==i&&(t.effectTag|=4)};var Qo="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var r=t.source,i=t.stack;null===i&&null!==r&&(i=_e(r)),null!==r&&ge(r.type),t=t.value,null!==e&&1===e.tag&&ge(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ml(e,t)}else t.current=null}function ra(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var r=e.memoizedProps,i=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Zn(t.type,r),i),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(o(163))}function ia(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var i=r.destroy;r.destroy=void 0,void 0!==i&&i()}r=r.next}while(r!==t)}}function na(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var i=r.create;r.destroy=i()}r=r.next}while(r!==t)}}function sa(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:return void na(3,r);case 1:if(e=r.stateNode,4&r.effectTag)if(null===t)e.componentDidMount();else{var i=r.elementType===r.type?t.memoizedProps:Zn(r.type,t.memoizedProps);e.componentDidUpdate(i,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=r.updateQueue)&&hs(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:case 1:e=r.child.stateNode}hs(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.effectTag&&_r(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&Ot(r)))))}throw Error(o(163))}function oa(e,t,r){switch("function"==typeof Cl&&Cl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var i=e.next;zn(97<r?97:r,(function(){var e=i;do{var r=e.destroy;if(void 0!==r){var n=t;try{r()}catch(e){ml(n,e)}}e=e.next}while(e!==i)}))}break;case 1:ta(t),"function"==typeof(r=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){ml(e,t)}}(t,r);break;case 5:ta(t);break;case 4:da(e,t,r)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function la(e){return 5===e.tag||3===e.tag||4===e.tag}function ca(e){e:{for(var t=e.return;null!==t;){if(la(t)){var r=t;break e}t=t.return}throw Error(o(160))}switch(t=r.stateNode,r.tag){case 5:var i=!1;break;case 3:case 4:t=t.containerInfo,i=!0;break;default:throw Error(o(161))}16&r.effectTag&&(Fe(t,""),r.effectTag&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||la(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.effectTag)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.effectTag)){r=r.stateNode;break e}}i?ua(e,r,t):ha(e,r,t)}function ua(e,t,r){var i=e.tag,n=5===i||6===i;if(n)e=n?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=or));else if(4!==i&&null!==(e=e.child))for(ua(e,t,r),e=e.sibling;null!==e;)ua(e,t,r),e=e.sibling}function ha(e,t,r){var i=e.tag,n=5===i||6===i;if(n)e=n?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==i&&null!==(e=e.child))for(ha(e,t,r),e=e.sibling;null!==e;)ha(e,t,r),e=e.sibling}function da(e,t,r){for(var i,n,s=t,a=!1;;){if(!a){a=s.return;e:for(;;){if(null===a)throw Error(o(160));switch(i=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:i=i.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===s.tag||6===s.tag){e:for(var l=e,c=s,u=r,h=c;;)if(oa(l,h,u),null!==h.child&&4!==h.tag)h.child.return=h,h=h.child;else{if(h===c)break e;for(;null===h.sibling;){if(null===h.return||h.return===c)break e;h=h.return}h.sibling.return=h.return,h=h.sibling}n?(l=i,c=s.stateNode,8===l.nodeType?l.parentNode.removeChild(c):l.removeChild(c)):i.removeChild(s.stateNode)}else if(4===s.tag){if(null!==s.child){i=s.stateNode.containerInfo,n=!0,s.child.return=s,s=s.child;continue}}else if(oa(e,s,r),null!==s.child){s.child.return=s,s=s.child;continue}if(s===t)break;for(;null===s.sibling;){if(null===s.return||s.return===t)return;4===(s=s.return).tag&&(a=!1)}s.sibling.return=s.return,s=s.sibling}}function fa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ia(3,t);case 1:case 12:case 17:return;case 5:var r=t.stateNode;if(null!=r){var i=t.memoizedProps,n=null!==e?e.memoizedProps:i;e=t.type;var s=t.updateQueue;if(t.updateQueue=null,null!==s){for(r[Er]=i,"input"===e&&"radio"===i.type&&null!=i.name&&ke(r,i),ir(e,n),t=ir(e,i),n=0;n<s.length;n+=2){var a=s[n],l=s[n+1];"style"===a?er(r,l):"dangerouslySetInnerHTML"===a?He(r,l):"children"===a?Fe(r,l):Y(r,a,l,t)}switch(e){case"input":Ee(r,i);break;case"textarea":Ie(r,i);break;case"select":t=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!i.multiple,null!=(e=i.value)?Re(r,!!i.multiple,e,!1):t!==!!i.multiple&&(null!=i.defaultValue?Re(r,!!i.multiple,i.defaultValue,!0):Re(r,!!i.multiple,i.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Ot(t.containerInfo)));case 13:if(r=t,null===t.memoizedState?i=!1:(i=!0,r=t.child,Ma=Fn()),null!==r)e:for(e=r;;){if(5===e.tag)s=e.stateNode,i?"function"==typeof(s=s.style).setProperty?s.setProperty("display","none","important"):s.display="none":(s=e.stateNode,n=null!=(n=e.memoizedProps.style)&&n.hasOwnProperty("display")?n.display:null,s.style.display=Qt("display",n));else if(6===e.tag)e.stateNode.nodeValue=i?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(s=e.child.sibling).return=e,e=s;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===r)break;for(;null===e.sibling;){if(null===e.return||e.return===r)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void pa(t);case 19:return void pa(t)}throw Error(o(163))}function pa(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new Qo),t.forEach((function(t){var i=yl.bind(null,e,t);r.has(t)||(r.add(t),t.then(i,i))}))}}var va="function"==typeof WeakMap?WeakMap:Map;function ga(e,t,r){(r=as(r,null)).tag=3,r.payload={element:null};var i=t.value;return r.callback=function(){Ha||(Ha=!0,Fa=i),ea(e,t)},r}function _a(e,t,r){(r=as(r,null)).tag=3;var i=e.type.getDerivedStateFromError;if("function"==typeof i){var n=t.value;r.payload=function(){return ea(e,t),i(n)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(r.callback=function(){"function"!=typeof i&&(null===ja?ja=new Set([this]):ja.add(this),ea(e,t));var r=t.stack;this.componentDidCatch(t.value,{componentStack:null!==r?r:""})}),r}var ma,ba=Math.ceil,ya=X.ReactCurrentDispatcher,Sa=X.ReactCurrentOwner,Ca=0,wa=3,ka=4,Ea=0,xa=null,Aa=null,Ta=0,Ra=Ca,La=null,Da=1073741823,Ia=1073741823,Pa=null,Oa=0,Ba=!1,Ma=0,Na=null,Ha=!1,Fa=null,ja=null,Ua=!1,za=null,Wa=90,Ka=null,$a=0,Va=null,qa=0;function Za(){return 0!=(48&Ea)?1073741821-(Fn()/10|0):0!==qa?qa:qa=1073741821-(Fn()/10|0)}function Ga(e,t,r){if(0==(2&(t=t.mode)))return 1073741823;var i=jn();if(0==(4&t))return 99===i?1073741823:1073741822;if(0!=(16&Ea))return Ta;if(null!==r)e=qn(e,0|r.timeoutMs||5e3,250);else switch(i){case 99:e=1073741823;break;case 98:e=qn(e,150,100);break;case 97:case 96:e=qn(e,5e3,250);break;case 95:e=2;break;default:throw Error(o(326))}return null!==xa&&e===Ta&&--e,e}function Xa(e,t){if(50<$a)throw $a=0,Va=null,Error(o(185));if(null!==(e=Ya(e,t))){var r=jn();1073741823===t?0!=(8&Ea)&&0==(48&Ea)?tl(e):(Qa(e),0===Ea&&$n()):Qa(e),0==(4&Ea)||98!==r&&99!==r||(null===Ka?Ka=new Map([[e,t]]):(void 0===(r=Ka.get(e))||r>t)&&Ka.set(e,t))}}function Ya(e,t){e.expirationTime<t&&(e.expirationTime=t);var r=e.alternate;null!==r&&r.expirationTime<t&&(r.expirationTime=t);var i=e.return,n=null;if(null===i&&3===e.tag)n=e.stateNode;else for(;null!==i;){if(r=i.alternate,i.childExpirationTime<t&&(i.childExpirationTime=t),null!==r&&r.childExpirationTime<t&&(r.childExpirationTime=t),null===i.return&&3===i.tag){n=i.stateNode;break}i=i.return}return null!==n&&(xa===n&&(ol(t),Ra===ka&&Pl(n,Ta)),Ol(n,t)),n}function Ja(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Il(e,t=e.firstPendingTime))return t;var r=e.lastPingedTime;return 2>=(e=r>(e=e.nextKnownPendingLevel)?r:e)&&t!==e?0:e}function Qa(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Kn(tl.bind(null,e));else{var t=Ja(e),r=e.callbackNode;if(0===t)null!==r&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var i=Za();if(i=1073741823===t?99:1===t||2===t?95:0>=(i=10*(1073741821-t)-10*(1073741821-i))?99:250>=i?98:5250>=i?97:95,null!==r){var n=e.callbackPriority;if(e.callbackExpirationTime===t&&n>=i)return;r!==In&&wn(r)}e.callbackExpirationTime=t,e.callbackPriority=i,t=1073741823===t?Kn(tl.bind(null,e)):Wn(i,el.bind(null,e),{timeout:10*(1073741821-t)-Fn()}),e.callbackNode=t}}}function el(e,t){if(qa=0,t)return Bl(e,t=Za()),Qa(e),null;var r=Ja(e);if(0!==r){if(t=e.callbackNode,0!=(48&Ea))throw Error(o(327));if(vl(),e===xa&&r===Ta||rl(e,r),null!==Aa){var i=Ea;Ea|=16;for(var n=nl();;)try{ll();break}catch(t){il(e,t)}if(Qn(),Ea=i,ya.current=n,1===Ra)throw t=La,rl(e,r),Pl(e,r),Qa(e),t;if(null===Aa)switch(n=e.finishedWork=e.current.alternate,e.finishedExpirationTime=r,i=Ra,xa=null,i){case Ca:case 1:throw Error(o(345));case 2:Bl(e,2<r?2:r);break;case wa:if(Pl(e,r),r===(i=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=hl(n)),1073741823===Da&&10<(n=Ma+500-Fn())){if(Ba){var s=e.lastPingedTime;if(0===s||s>=r){e.lastPingedTime=r,rl(e,r);break}}if(0!==(s=Ja(e))&&s!==r)break;if(0!==i&&i!==r){e.lastPingedTime=i;break}e.timeoutHandle=br(dl.bind(null,e),n);break}dl(e);break;case ka:if(Pl(e,r),r===(i=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=hl(n)),Ba&&(0===(n=e.lastPingedTime)||n>=r)){e.lastPingedTime=r,rl(e,r);break}if(0!==(n=Ja(e))&&n!==r)break;if(0!==i&&i!==r){e.lastPingedTime=i;break}if(1073741823!==Ia?i=10*(1073741821-Ia)-Fn():1073741823===Da?i=0:(i=10*(1073741821-Da)-5e3,0>(i=(n=Fn())-i)&&(i=0),(r=10*(1073741821-r)-n)<(i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*ba(i/1960))-i)&&(i=r)),10<i){e.timeoutHandle=br(dl.bind(null,e),i);break}dl(e);break;case 5:if(1073741823!==Da&&null!==Pa){s=Da;var a=Pa;if(0>=(i=0|a.busyMinDurationMs)?i=0:(n=0|a.busyDelayMs,i=(s=Fn()-(10*(1073741821-s)-(0|a.timeoutMs||5e3)))<=n?0:n+i-s),10<i){Pl(e,r),e.timeoutHandle=br(dl.bind(null,e),i);break}}dl(e);break;default:throw Error(o(329))}if(Qa(e),e.callbackNode===t)return el.bind(null,e)}}return null}function tl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Ea))throw Error(o(327));if(vl(),e===xa&&t===Ta||rl(e,t),null!==Aa){var r=Ea;Ea|=16;for(var i=nl();;)try{al();break}catch(t){il(e,t)}if(Qn(),Ea=r,ya.current=i,1===Ra)throw r=La,rl(e,t),Pl(e,t),Qa(e),r;if(null!==Aa)throw Error(o(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,xa=null,dl(e),Qa(e)}return null}function rl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,yr(r)),null!==Aa)for(r=Aa.return;null!==r;){var i=r;switch(i.tag){case 1:null!=(i=i.type.childContextTypes)&&gn();break;case 3:Is(),ln(dn),ln(hn);break;case 5:Os(i);break;case 4:Is();break;case 13:case 19:ln(Bs);break;case 10:es(i)}r=r.return}xa=e,Aa=xl(e.current,null),Ta=t,Ra=Ca,La=null,Ia=Da=1073741823,Pa=null,Oa=0,Ba=!1}function il(e,t){for(;;){try{if(Qn(),Hs.current=go,Ks)for(var r=Us.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}if(js=0,Ws=zs=Us=null,Ks=!1,null===Aa||null===Aa.return)return Ra=1,La=t,Aa=null;e:{var n=e,s=Aa.return,o=Aa,a=t;if(t=Ta,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var l=a;if(0==(2&o.mode)){var c=o.alternate;c?(o.updateQueue=c.updateQueue,o.memoizedState=c.memoizedState,o.expirationTime=c.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var u=0!=(1&Bs.current),h=s;do{var d;if(d=13===h.tag){var f=h.memoizedState;if(null!==f)d=null!==f.dehydrated;else{var p=h.memoizedProps;d=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!u)}}if(d){var v=h.updateQueue;if(null===v){var g=new Set;g.add(l),h.updateQueue=g}else v.add(l);if(0==(2&h.mode)){if(h.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var _=as(1073741823,null);_.tag=2,ls(o,_)}o.expirationTime=1073741823;break e}a=void 0,o=t;var m=n.pingCache;if(null===m?(m=n.pingCache=new va,a=new Set,m.set(l,a)):void 0===(a=m.get(l))&&(a=new Set,m.set(l,a)),!a.has(o)){a.add(o);var b=bl.bind(null,n,l,o);l.then(b,b)}h.effectTag|=4096,h.expirationTime=t;break e}h=h.return}while(null!==h);a=Error((ge(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+_e(o))}5!==Ra&&(Ra=2),a=Jo(a,o),h=s;do{switch(h.tag){case 3:l=a,h.effectTag|=4096,h.expirationTime=t,cs(h,ga(h,l,t));break e;case 1:l=a;var y=h.type,S=h.stateNode;if(0==(64&h.effectTag)&&("function"==typeof y.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===ja||!ja.has(S)))){h.effectTag|=4096,h.expirationTime=t,cs(h,_a(h,l,t));break e}}h=h.return}while(null!==h)}Aa=ul(Aa)}catch(e){t=e;continue}break}}function nl(){var e=ya.current;return ya.current=go,null===e?go:e}function sl(e,t){e<Da&&2<e&&(Da=e),null!==t&&e<Ia&&2<e&&(Ia=e,Pa=t)}function ol(e){e>Oa&&(Oa=e)}function al(){for(;null!==Aa;)Aa=cl(Aa)}function ll(){for(;null!==Aa&&!Pn();)Aa=cl(Aa)}function cl(e){var t=ma(e.alternate,e,Ta);return e.memoizedProps=e.pendingProps,null===t&&(t=ul(e)),Sa.current=null,t}function ul(e){Aa=e;do{var t=Aa.alternate;if(e=Aa.return,0==(2048&Aa.effectTag)){if(t=Xo(t,Aa,Ta),1===Ta||1!==Aa.childExpirationTime){for(var r=0,i=Aa.child;null!==i;){var n=i.expirationTime,s=i.childExpirationTime;n>r&&(r=n),s>r&&(r=s),i=i.sibling}Aa.childExpirationTime=r}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Aa.firstEffect),null!==Aa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Aa.firstEffect),e.lastEffect=Aa.lastEffect),1<Aa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Aa:e.firstEffect=Aa,e.lastEffect=Aa))}else{if(null!==(t=Yo(Aa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Aa.sibling))return t;Aa=e}while(null!==Aa);return Ra===Ca&&(Ra=5),null}function hl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function dl(e){var t=jn();return zn(99,fl.bind(null,e,t)),null}function fl(e,t){do{vl()}while(null!==za);if(0!=(48&Ea))throw Error(o(327));var r=e.finishedWork,i=e.finishedExpirationTime;if(null===r)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,r===e.current)throw Error(o(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var n=hl(r);if(e.firstPendingTime=n,i<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:i<=e.firstSuspendedTime&&(e.firstSuspendedTime=i-1),i<=e.lastPingedTime&&(e.lastPingedTime=0),i<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===xa&&(Aa=xa=null,Ta=0),1<r.effectTag?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){var s=Ea;Ea|=32,Sa.current=null,vr=Kt;var a=hr();if(dr(a)){if("selectionStart"in a)var l={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(l=(l=a.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(c&&0!==c.rangeCount){l=c.anchorNode;var u=c.anchorOffset,h=c.focusNode;c=c.focusOffset;try{l.nodeType,h.nodeType}catch(e){l=null;break e}var d=0,f=-1,p=-1,v=0,g=0,_=a,m=null;t:for(;;){for(var b;_!==l||0!==u&&3!==_.nodeType||(f=d+u),_!==h||0!==c&&3!==_.nodeType||(p=d+c),3===_.nodeType&&(d+=_.nodeValue.length),null!==(b=_.firstChild);)m=_,_=b;for(;;){if(_===a)break t;if(m===l&&++v===u&&(f=d),m===h&&++g===c&&(p=d),null!==(b=_.nextSibling))break;m=(_=m).parentNode}_=b}l=-1===f||-1===p?null:{start:f,end:p}}else l=null}l=l||{start:0,end:0}}else l=null;gr={activeElementDetached:null,focusedElem:a,selectionRange:l},Kt=!1,Na=n;do{try{pl()}catch(e){if(null===Na)throw Error(o(330));ml(Na,e),Na=Na.nextEffect}}while(null!==Na);Na=n;do{try{for(a=e,l=t;null!==Na;){var y=Na.effectTag;if(16&y&&Fe(Na.stateNode,""),128&y){var S=Na.alternate;if(null!==S){var C=S.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(1038&y){case 2:ca(Na),Na.effectTag&=-3;break;case 6:ca(Na),Na.effectTag&=-3,fa(Na.alternate,Na);break;case 1024:Na.effectTag&=-1025;break;case 1028:Na.effectTag&=-1025,fa(Na.alternate,Na);break;case 4:fa(Na.alternate,Na);break;case 8:da(a,u=Na,l),aa(u)}Na=Na.nextEffect}}catch(e){if(null===Na)throw Error(o(330));ml(Na,e),Na=Na.nextEffect}}while(null!==Na);if(C=gr,S=hr(),y=C.focusedElem,l=C.selectionRange,S!==y&&y&&y.ownerDocument&&ur(y.ownerDocument.documentElement,y)){null!==l&&dr(y)&&(S=l.start,void 0===(C=l.end)&&(C=S),"selectionStart"in y?(y.selectionStart=S,y.selectionEnd=Math.min(C,y.value.length)):(C=(S=y.ownerDocument||document)&&S.defaultView||window).getSelection&&(C=C.getSelection(),u=y.textContent.length,a=Math.min(l.start,u),l=void 0===l.end?a:Math.min(l.end,u),!C.extend&&a>l&&(u=l,l=a,a=u),u=cr(y,a),h=cr(y,l),u&&h&&(1!==C.rangeCount||C.anchorNode!==u.node||C.anchorOffset!==u.offset||C.focusNode!==h.node||C.focusOffset!==h.offset)&&((S=S.createRange()).setStart(u.node,u.offset),C.removeAllRanges(),a>l?(C.addRange(S),C.extend(h.node,h.offset)):(S.setEnd(h.node,h.offset),C.addRange(S))))),S=[];for(C=y;C=C.parentNode;)1===C.nodeType&&S.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof y.focus&&y.focus(),y=0;y<S.length;y++)(C=S[y]).element.scrollLeft=C.left,C.element.scrollTop=C.top}Kt=!!vr,gr=vr=null,e.current=r,Na=n;do{try{for(y=e;null!==Na;){var w=Na.effectTag;if(36&w&&sa(y,Na.alternate,Na),128&w){S=void 0;var k=Na.ref;if(null!==k){var E=Na.stateNode;Na.tag,S=E,"function"==typeof k?k(S):k.current=S}}Na=Na.nextEffect}}catch(e){if(null===Na)throw Error(o(330));ml(Na,e),Na=Na.nextEffect}}while(null!==Na);Na=null,On(),Ea=s}else e.current=r;if(Ua)Ua=!1,za=e,Wa=t;else for(Na=n;null!==Na;)t=Na.nextEffect,Na.nextEffect=null,Na=t;if(0===(t=e.firstPendingTime)&&(ja=null),1073741823===t?e===Va?$a++:($a=0,Va=e):$a=0,"function"==typeof Sl&&Sl(r.stateNode,i),Qa(e),Ha)throw Ha=!1,e=Fa,Fa=null,e;return 0!=(8&Ea)||$n(),null}function pl(){for(;null!==Na;){var e=Na.effectTag;0!=(256&e)&&ra(Na.alternate,Na),0==(512&e)||Ua||(Ua=!0,Wn(97,(function(){return vl(),null}))),Na=Na.nextEffect}}function vl(){if(90!==Wa){var e=97<Wa?97:Wa;return Wa=90,zn(e,gl)}}function gl(){if(null===za)return!1;var e=za;if(za=null,0!=(48&Ea))throw Error(o(331));var t=Ea;for(Ea|=32,e=e.current.firstEffect;null!==e;){try{var r=e;if(0!=(512&r.effectTag))switch(r.tag){case 0:case 11:case 15:case 22:ia(5,r),na(5,r)}}catch(t){if(null===e)throw Error(o(330));ml(e,t)}r=e.nextEffect,e.nextEffect=null,e=r}return Ea=t,$n(),!0}function _l(e,t,r){ls(e,t=ga(e,t=Jo(r,t),1073741823)),null!==(e=Ya(e,1073741823))&&Qa(e)}function ml(e,t){if(3===e.tag)_l(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){_l(r,e,t);break}if(1===r.tag){var i=r.stateNode;if("function"==typeof r.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===ja||!ja.has(i))){ls(r,e=_a(r,e=Jo(t,e),1073741823)),null!==(r=Ya(r,1073741823))&&Qa(r);break}}r=r.return}}function bl(e,t,r){var i=e.pingCache;null!==i&&i.delete(t),xa===e&&Ta===r?Ra===ka||Ra===wa&&1073741823===Da&&Fn()-Ma<500?rl(e,Ta):Ba=!0:Il(e,r)&&(0!==(t=e.lastPingedTime)&&t<r||(e.lastPingedTime=r,Qa(e)))}function yl(e,t){var r=e.stateNode;null!==r&&r.delete(t),0==(t=0)&&(t=Ga(t=Za(),e,null)),null!==(e=Ya(e,t))&&Qa(e)}ma=function(e,t,r){var i=t.expirationTime;if(null!==e){var n=t.pendingProps;if(e.memoizedProps!==n||dn.current)Lo=!0;else{if(i<r){switch(Lo=!1,t.tag){case 3:Fo(t),To();break;case 5:if(Ps(t),4&t.mode&&1!==r&&n.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vn(t.type)&&bn(t);break;case 4:Ds(t,t.stateNode.containerInfo);break;case 10:i=t.memoizedProps.value,n=t.type._context,cn(Gn,n._currentValue),n._currentValue=i;break;case 13:if(null!==t.memoizedState)return 0!==(i=t.child.childExpirationTime)&&i>=r?Ko(e,t,r):(cn(Bs,1&Bs.current),null!==(t=Zo(e,t,r))?t.sibling:null);cn(Bs,1&Bs.current);break;case 19:if(i=t.childExpirationTime>=r,0!=(64&e.effectTag)){if(i)return qo(e,t,r);t.effectTag|=64}if(null!==(n=t.memoizedState)&&(n.rendering=null,n.tail=null),cn(Bs,Bs.current),!i)return null}return Zo(e,t,r)}Lo=!1}}else Lo=!1;switch(t.expirationTime=0,t.tag){case 2:if(i=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,n=pn(t,hn.current),rs(t,r),n=qs(null,t,i,e,n,r),t.effectTag|=1,"object"==typeof n&&null!==n&&"function"==typeof n.render&&void 0===n.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vn(i)){var s=!0;bn(t)}else s=!1;t.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,ss(t);var a=i.getDerivedStateFromProps;"function"==typeof a&&ps(t,i,a,e),n.updater=vs,t.stateNode=n,n._reactInternalFiber=t,bs(t,i,e,r),t=Ho(null,t,i,!0,s,r)}else t.tag=0,Do(null,t,n,r),t=t.child;return t;case 16:e:{if(n=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(n),1!==n._status)throw n._result;switch(n=n._result,t.type=n,s=t.tag=function(e){if("function"==typeof e)return El(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===he)return 14}return 2}(n),e=Zn(n,e),s){case 0:t=Mo(null,t,n,e,r);break e;case 1:t=No(null,t,n,e,r);break e;case 11:t=Io(null,t,n,e,r);break e;case 14:t=Po(null,t,n,Zn(n.type,e),i,r);break e}throw Error(o(306,n,""))}return t;case 0:return i=t.type,n=t.pendingProps,Mo(e,t,i,n=t.elementType===i?n:Zn(i,n),r);case 1:return i=t.type,n=t.pendingProps,No(e,t,i,n=t.elementType===i?n:Zn(i,n),r);case 3:if(Fo(t),i=t.updateQueue,null===e||null===i)throw Error(o(282));if(i=t.pendingProps,n=null!==(n=t.memoizedState)?n.element:null,os(e,t),us(t,i,null,r),(i=t.memoizedState.element)===n)To(),t=Zo(e,t,r);else{if((n=t.stateNode.hydrate)&&(So=Sr(t.stateNode.containerInfo.firstChild),yo=t,n=Co=!0),n)for(r=Es(t,null,i,r),t.child=r;r;)r.effectTag=-3&r.effectTag|1024,r=r.sibling;else Do(e,t,i,r),To();t=t.child}return t;case 5:return Ps(t),null===e&&Eo(t),i=t.type,n=t.pendingProps,s=null!==e?e.memoizedProps:null,a=n.children,mr(i,n)?a=null:null!==s&&mr(i,s)&&(t.effectTag|=16),Bo(e,t),4&t.mode&&1!==r&&n.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Do(e,t,a,r),t=t.child),t;case 6:return null===e&&Eo(t),null;case 13:return Ko(e,t,r);case 4:return Ds(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=ks(t,null,i,r):Do(e,t,i,r),t.child;case 11:return i=t.type,n=t.pendingProps,Io(e,t,i,n=t.elementType===i?n:Zn(i,n),r);case 7:return Do(e,t,t.pendingProps,r),t.child;case 8:case 12:return Do(e,t,t.pendingProps.children,r),t.child;case 10:e:{i=t.type._context,n=t.pendingProps,a=t.memoizedProps,s=n.value;var l=t.type._context;if(cn(Gn,l._currentValue),l._currentValue=s,null!==a)if(l=a.value,0==(s=Mi(l,s)?0:0|("function"==typeof i._calculateChangedBits?i._calculateChangedBits(l,s):1073741823))){if(a.children===n.children&&!dn.current){t=Zo(e,t,r);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.dependencies;if(null!==c){a=l.child;for(var u=c.firstContext;null!==u;){if(u.context===i&&0!=(u.observedBits&s)){1===l.tag&&((u=as(r,null)).tag=2,ls(l,u)),l.expirationTime<r&&(l.expirationTime=r),null!==(u=l.alternate)&&u.expirationTime<r&&(u.expirationTime=r),ts(l.return,r),c.expirationTime<r&&(c.expirationTime=r);break}u=u.next}}else a=10===l.tag&&l.type===t.type?null:l.child;if(null!==a)a.return=l;else for(a=l;null!==a;){if(a===t){a=null;break}if(null!==(l=a.sibling)){l.return=a.return,a=l;break}a=a.return}l=a}Do(e,t,n.children,r),t=t.child}return t;case 9:return n=t.type,i=(s=t.pendingProps).children,rs(t,r),i=i(n=is(n,s.unstable_observedBits)),t.effectTag|=1,Do(e,t,i,r),t.child;case 14:return s=Zn(n=t.type,t.pendingProps),Po(e,t,n,s=Zn(n.type,s),i,r);case 15:return Oo(e,t,t.type,t.pendingProps,i,r);case 17:return i=t.type,n=t.pendingProps,n=t.elementType===i?n:Zn(i,n),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vn(i)?(e=!0,bn(t)):e=!1,rs(t,r),_s(t,i,n),bs(t,i,n,r),Ho(null,t,i,!0,e,r);case 19:return qo(e,t,r)}throw Error(o(156,t.tag))};var Sl=null,Cl=null;function wl(e,t,r,i){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function kl(e,t,r,i){return new wl(e,t,r,i)}function El(e){return!(!(e=e.prototype)||!e.isReactComponent)}function xl(e,t){var r=e.alternate;return null===r?((r=kl(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childExpirationTime=e.childExpirationTime,r.expirationTime=e.expirationTime,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Al(e,t,r,i,n,s){var a=2;if(i=e,"function"==typeof e)El(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case re:return Tl(r.children,n,s,t);case ae:a=8,n|=7;break;case ie:a=8,n|=1;break;case ne:return(e=kl(12,r,t,8|n)).elementType=ne,e.type=ne,e.expirationTime=s,e;case ce:return(e=kl(13,r,t,n)).type=ce,e.elementType=ce,e.expirationTime=s,e;case ue:return(e=kl(19,r,t,n)).elementType=ue,e.expirationTime=s,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case se:a=10;break e;case oe:a=9;break e;case le:a=11;break e;case he:a=14;break e;case de:a=16,i=null;break e;case fe:a=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=kl(a,r,t,n)).elementType=e,t.type=i,t.expirationTime=s,t}function Tl(e,t,r,i){return(e=kl(7,e,i,t)).expirationTime=r,e}function Rl(e,t,r){return(e=kl(6,e,null,t)).expirationTime=r,e}function Ll(e,t,r){return(t=kl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Dl(e,t,r){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Il(e,t){var r=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==r&&r>=t&&e<=t}function Pl(e,t){var r=e.firstSuspendedTime,i=e.lastSuspendedTime;r<t&&(e.firstSuspendedTime=t),(i>t||0===r)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Ol(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var r=e.firstSuspendedTime;0!==r&&(t>=r?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Bl(e,t){var r=e.lastExpiredTime;(0===r||r>t)&&(e.lastExpiredTime=t)}function Ml(e,t,r,i){var n=t.current,s=Za(),a=ds.suspense;s=Ga(s,n,a);e:if(r){t:{if(Je(r=r._reactInternalFiber)!==r||1!==r.tag)throw Error(o(170));var l=r;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(vn(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(o(171))}if(1===r.tag){var c=r.type;if(vn(c)){r=mn(r,c,l);break e}}r=l}else r=un;return null===t.context?t.context=r:t.pendingContext=r,(t=as(s,a)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),ls(n,t),Xa(n,s),s}function Nl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Fl(e,t){Hl(e,t),(e=e.alternate)&&Hl(e,t)}function jl(e,t,r){var i=new Dl(e,t,r=null!=r&&!0===r.hydrate),n=kl(3,null,null,2===t?7:1===t?3:0);i.current=n,n.stateNode=i,ss(n),e[xr]=i.current,r&&0!==t&&function(e,t){var r=Ye(t);kt.forEach((function(e){dt(e,t,r)})),Et.forEach((function(e){dt(e,t,r)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=i}function Ul(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function zl(e,t,r,i,n){var s=r._reactRootContainer;if(s){var o=s._internalRoot;if("function"==typeof n){var a=n;n=function(){var e=Nl(o);a.call(e)}}Ml(t,o,e,n)}else{if(s=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new jl(e,0,t?{hydrate:!0}:void 0)}(r,i),o=s._internalRoot,"function"==typeof n){var l=n;n=function(){var e=Nl(o);l.call(e)}}!function(e,t){var r=Ea;Ea&=-2,Ea|=8;try{e(t)}finally{0===(Ea=r)&&$n()}}((function(){Ml(t,o,e,n)}))}return Nl(o)}jl.prototype.render=function(e){Ml(e,this._internalRoot,null,null)},jl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ml(null,e,null,(function(){t[xr]=null}))},ft=function(e){if(13===e.tag){var t=qn(Za(),150,100);Xa(e,t),Fl(e,t)}},pt=function(e){13===e.tag&&(Xa(e,3),Fl(e,3))},vt=function(e){if(13===e.tag){var t=Za();Xa(e,t=Ga(t,e,null)),Fl(e,t)}},T=function(e,t,r){switch(t){case"input":if(Ee(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var i=r[t];if(i!==e&&i.form===e.form){var n=Lr(i);if(!n)throw Error(o(90));Se(i),Ee(i,n)}}}break;case"textarea":Ie(e,r);break;case"select":null!=(t=r.value)&&Re(e,!!r.multiple,t,!1)}},O=function(e,t){var r=Ea;Ea|=1;try{return e(t)}finally{0===(Ea=r)&&$n()}},B=function(e,t,r,i,n){var s=Ea;Ea|=4;try{return zn(98,e.bind(null,t,r,i,n))}finally{0===(Ea=s)&&$n()}},M=function(){0==(49&Ea)&&(function(){if(null!==Ka){var e=Ka;Ka=null,e.forEach((function(e,t){Bl(t,e),Qa(t)})),$n()}}(),vl())},N=function(e,t){var r=Ea;Ea|=2;try{return e(t)}finally{0===(Ea=r)&&$n()}};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var r=t.inject(e);Sl=function(e){try{t.onCommitFiberRoot(r,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Cl=function(e){try{t.onCommitFiberUnmount(r,e)}catch(e){}}}catch(e){}}(n({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(o(188));return t!==e?null:e}for(var r=e,i=t;;){var n=r.return;if(null===n)break;var s=n.alternate;if(null===s){if(null!==(i=n.return)){r=i;continue}break}if(n.child===s.child){for(s=n.child;s;){if(s===r)return et(n),e;if(s===i)return et(n),t;s=s.sibling}throw Error(o(188))}if(r.return!==i.return)r=n,i=s;else{for(var a=!1,l=n.child;l;){if(l===r){a=!0,r=n,i=s;break}if(l===i){a=!0,i=n,r=s;break}l=l.sibling}if(!a){for(l=s.child;l;){if(l===r){a=!0,r=s,i=n;break}if(l===i){a=!0,i=s,r=n;break}l=l.sibling}if(!a)throw Error(o(189))}}if(r.alternate!==i)throw Error(o(190))}if(3!==r.tag)throw Error(o(188));return r.stateNode.current===r?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Ar,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.render=function(e,t,r){if(!Ul(t))throw Error(o(200));return zl(null,e,t,!1,r)}},935:(e,t,r)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(448)},921:(e,t)=>{"use strict";var r,i=Symbol.for("react.element"),n=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.server_context"),h=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),f=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),v=Symbol.for("react.lazy"),g=Symbol.for("react.offscreen");r=Symbol.for("react.module.reference"),t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===s||e===a||e===o||e===d||e===f||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===p||e.$$typeof===l||e.$$typeof===c||e.$$typeof===h||e.$$typeof===r||void 0!==e.getModuleId)},t.typeOf=function(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case s:case a:case o:case d:case f:return e;default:switch(e=e&&e.$$typeof){case u:case c:case h:case v:case p:case l:return e;default:return t}}case n:return t}}}},864:(e,t,r)=>{"use strict";e.exports=r(921)},408:(e,t,r)=>{"use strict";var i=r(394),n="function"==typeof Symbol&&Symbol.for,s=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,c=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,h=n?Symbol.for("react.context"):60110,d=n?Symbol.for("react.forward_ref"):60112,f=n?Symbol.for("react.suspense"):60113,p=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function _(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function y(e,t,r){this.props=e,this.context=t,this.refs=b,this.updater=r||m}function S(){}function C(e,t,r){this.props=e,this.context=t,this.refs=b,this.updater=r||m}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(_(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},S.prototype=y.prototype;var w=C.prototype=new S;w.constructor=C,i(w,y.prototype),w.isPureReactComponent=!0;var k={current:null},E=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function A(e,t,r){var i,n={},o=null,a=null;if(null!=t)for(i in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(o=""+t.key),t)E.call(t,i)&&!x.hasOwnProperty(i)&&(n[i]=t[i]);var l=arguments.length-2;if(1===l)n.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];n.children=c}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===n[i]&&(n[i]=l[i]);return{$$typeof:s,type:e,key:o,ref:a,props:n,_owner:k.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===s}var R=/\/+/g,L=[];function D(e,t,r,i){if(L.length){var n=L.pop();return n.result=e,n.keyPrefix=t,n.func=r,n.context=i,n.count=0,n}return{result:e,keyPrefix:t,func:r,context:i,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>L.length&&L.push(e)}function P(e,t,r,i){var n=typeof e;"undefined"!==n&&"boolean"!==n||(e=null);var a=!1;if(null===e)a=!0;else switch(n){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case s:case o:a=!0}}if(a)return r(i,e,""===t?"."+B(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var l=0;l<e.length;l++){var c=t+B(n=e[l],l);a+=P(n,c,r,i)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=g&&e[g]||e["@@iterator"])?c:null))for(e=c.call(e),l=0;!(n=e.next()).done;)a+=P(n=n.value,c=t+B(n,l++),r,i);else if("object"===n)throw r=""+e,Error(_(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r,""));return a}function O(e,t,r){return null==e?0:P(e,"",t,r)}function B(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function N(e,t,r){var i=e.result,n=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?H(e,i,r,(function(e){return e})):null!=e&&(T(e)&&(e=function(e,t){return{$$typeof:s,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,n+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+r)),i.push(e))}function H(e,t,r,i,n){var s="";null!=r&&(s=(""+r).replace(R,"$&/")+"/"),O(e,N,t=D(t,s,i,n)),I(t)}var F={current:null};function j(){var e=F.current;if(null===e)throw Error(_(321));return e}var U={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:k,IsSomeRendererActing:{current:!1},assign:i};t.Children={map:function(e,t,r){if(null==e)return e;var i=[];return H(e,i,null,t,r),i},forEach:function(e,t,r){if(null==e)return e;O(e,M,t=D(null,null,t,r)),I(t)},count:function(e){return O(e,(function(){return null}),null)},toArray:function(e){var t=[];return H(e,t,null,(function(e){return e})),t},only:function(e){if(!T(e))throw Error(_(143));return e}},t.Component=y,t.Fragment=a,t.Profiler=c,t.PureComponent=C,t.StrictMode=l,t.Suspense=f,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,r){if(null==e)throw Error(_(267,e));var n=i({},e.props),o=e.key,a=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,l=k.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in t)E.call(t,u)&&!x.hasOwnProperty(u)&&(n[u]=void 0===t[u]&&void 0!==c?c[u]:t[u])}var u=arguments.length-2;if(1===u)n.children=r;else if(1<u){c=Array(u);for(var h=0;h<u;h++)c[h]=arguments[h+2];n.children=c}return{$$typeof:s,type:e.type,key:o,ref:a,props:n,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:u,_context:e},e.Consumer=e},t.createElement=A,t.createFactory=function(e){var t=A.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return j().useCallback(e,t)},t.useContext=function(e,t){return j().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return j().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return j().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return j().useLayoutEffect(e,t)},t.useMemo=function(e,t){return j().useMemo(e,t)},t.useReducer=function(e,t,r){return j().useReducer(e,t,r)},t.useRef=function(e){return j().useRef(e)},t.useState=function(e){return j().useState(e)},t.version="16.14.0"},294:(e,t,r)=>{"use strict";e.exports=r(408)},53:(e,t)=>{"use strict";var r,i,n,s,o;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,l=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},u=Date.now();t.unstable_now=function(){return Date.now()-u},r=function(e){null!==a?setTimeout(r,0,e):(a=e,setTimeout(c,0))},i=function(e,t){l=setTimeout(e,t)},n=function(){clearTimeout(l)},s=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var h=window.performance,d=window.Date,f=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof h&&"function"==typeof h.now)t.unstable_now=function(){return h.now()};else{var g=d.now();t.unstable_now=function(){return d.now()-g}}var _=!1,m=null,b=-1,y=5,S=0;s=function(){return t.unstable_now()>=S},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):y=0<e?Math.floor(1e3/e):5};var C=new MessageChannel,w=C.port2;C.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();S=e+y;try{m(!0,e)?w.postMessage(null):(_=!1,m=null)}catch(e){throw w.postMessage(null),e}}else _=!1},r=function(e){m=e,_||(_=!0,w.postMessage(null))},i=function(e,r){b=f((function(){e(t.unstable_now())}),r)},n=function(){p(b),b=-1}}function k(e,t){var r=e.length;e.push(t);e:for(;;){var i=r-1>>>1,n=e[i];if(!(void 0!==n&&0<A(n,t)))break e;e[i]=t,e[r]=n,r=i}}function E(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var i=0,n=e.length;i<n;){var s=2*(i+1)-1,o=e[s],a=s+1,l=e[a];if(void 0!==o&&0>A(o,r))void 0!==l&&0>A(l,o)?(e[i]=l,e[a]=r,i=a):(e[i]=o,e[s]=r,i=s);else{if(!(void 0!==l&&0>A(l,r)))break e;e[i]=l,e[a]=r,i=a}}}return t}return null}function A(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var T=[],R=[],L=1,D=null,I=3,P=!1,O=!1,B=!1;function M(e){for(var t=E(R);null!==t;){if(null===t.callback)x(R);else{if(!(t.startTime<=e))break;x(R),t.sortIndex=t.expirationTime,k(T,t)}t=E(R)}}function N(e){if(B=!1,M(e),!O)if(null!==E(T))O=!0,r(H);else{var t=E(R);null!==t&&i(N,t.startTime-e)}}function H(e,r){O=!1,B&&(B=!1,n()),P=!0;var o=I;try{for(M(r),D=E(T);null!==D&&(!(D.expirationTime>r)||e&&!s());){var a=D.callback;if(null!==a){D.callback=null,I=D.priorityLevel;var l=a(D.expirationTime<=r);r=t.unstable_now(),"function"==typeof l?D.callback=l:D===E(T)&&x(T),M(r)}else x(T);D=E(T)}if(null!==D)var c=!0;else{var u=E(R);null!==u&&i(N,u.startTime-r),c=!1}return c}finally{D=null,I=o,P=!1}}function F(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var j=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){O||P||(O=!0,r(H))},t.unstable_getCurrentPriorityLevel=function(){return I},t.unstable_getFirstCallbackNode=function(){return E(T)},t.unstable_next=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var r=I;I=t;try{return e()}finally{I=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=j,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=I;I=e;try{return t()}finally{I=r}},t.unstable_scheduleCallback=function(e,s,o){var a=t.unstable_now();if("object"==typeof o&&null!==o){var l=o.delay;l="number"==typeof l&&0<l?a+l:a,o="number"==typeof o.timeout?o.timeout:F(e)}else o=F(e),l=a;return e={id:L++,callback:s,priorityLevel:e,startTime:l,expirationTime:o=l+o,sortIndex:-1},l>a?(e.sortIndex=l,k(R,e),null===E(T)&&e===E(R)&&(B?n():B=!0,i(N,l-a))):(e.sortIndex=o,k(T,e),O||P||(O=!0,r(H))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();M(e);var r=E(T);return r!==D&&null!==D&&null!==r&&null!==r.callback&&r.startTime<=e&&r.expirationTime<D.expirationTime||s()},t.unstable_wrapCallback=function(e){var t=I;return function(){var r=I;I=t;try{return e.apply(this,arguments)}finally{I=r}}}},840:(e,t,r)=>{"use strict";e.exports=r(53)},774:e=>{e.exports=function(e,t,r,i){var n=r?r.call(i,e,t):void 0;if(void 0!==n)return!!n;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var s=Object.keys(e),o=Object.keys(t);if(s.length!==o.length)return!1;for(var a=Object.prototype.hasOwnProperty.bind(t),l=0;l<s.length;l++){var c=s[l];if(!a(c))return!1;var u=e[c],h=t[c];if(!1===(n=r?r.call(i,u,h,c):void 0)||void 0===n&&u!==h)return!1}return!0}},379:e=>{"use strict";var t=[];function r(e){for(var r=-1,i=0;i<t.length;i++)if(t[i].identifier===e){r=i;break}return r}function i(e,i){for(var s={},o=[],a=0;a<e.length;a++){var l=e[a],c=i.base?l[0]+i.base:l[0],u=s[c]||0,h="".concat(c," ").concat(u);s[c]=u+1;var d=r(h),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(f);else{var p=n(f,i);i.byIndex=a,t.splice(a,0,{identifier:h,updater:p,references:1})}o.push(h)}return o}function n(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,n){var s=i(e=e||[],n=n||{});return function(e){e=e||[];for(var o=0;o<s.length;o++){var a=r(s[o]);t[a].references--}for(var l=i(e,n),c=0;c<s.length;c++){var u=r(s[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=l}}},569:e=>{"use strict";var t={};e.exports=function(e,r){var i=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(r)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,r)=>{"use strict";e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var i="";r.supports&&(i+="@supports (".concat(r.supports,") {")),r.media&&(i+="@media ".concat(r.media," {"));var n=void 0!==r.layer;n&&(i+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),i+=r.css,n&&(i+="}"),r.media&&(i+="}"),r.supports&&(i+="}");var s=r.sourceMap;s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},320:e=>{self,e.exports=(()=>{"use strict";var e={4567:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AccessibilityManager=void 0;const i=r(9042),n=r(6114),s=r(9924),o=r(3656),a=r(844),l=r(5596),c=r(9631);class u extends a.Disposable{constructor(e,t){super(),this._terminal=e,this._renderService=t,this._liveRegionLineCount=0,this._charsToConsume=[],this._charsToAnnounce="",this._accessibilityTreeRoot=document.createElement("div"),this._accessibilityTreeRoot.classList.add("xterm-accessibility"),this._accessibilityTreeRoot.tabIndex=0,this._rowContainer=document.createElement("div"),this._rowContainer.setAttribute("role","list"),this._rowContainer.classList.add("xterm-accessibility-tree"),this._rowElements=[];for(let e=0;e<this._terminal.rows;e++)this._rowElements[e]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[e]);if(this._topBoundaryFocusListener=e=>this._onBoundaryFocus(e,0),this._bottomBoundaryFocusListener=e=>this._onBoundaryFocus(e,1),this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions(),this._accessibilityTreeRoot.appendChild(this._rowContainer),this._renderRowsDebouncer=new s.TimeBasedDebouncer(this._renderRows.bind(this)),this._refreshRows(),this._liveRegion=document.createElement("div"),this._liveRegion.classList.add("live-region"),this._liveRegion.setAttribute("aria-live","assertive"),this._accessibilityTreeRoot.appendChild(this._liveRegion),!this._terminal.element)throw new Error("Cannot enable accessibility before Terminal.open");this._terminal.element.insertAdjacentElement("afterbegin",this._accessibilityTreeRoot),this.register(this._renderRowsDebouncer),this.register(this._terminal.onResize((e=>this._onResize(e.rows)))),this.register(this._terminal.onRender((e=>this._refreshRows(e.start,e.end)))),this.register(this._terminal.onScroll((()=>this._refreshRows()))),this.register(this._terminal.onA11yChar((e=>this._onChar(e)))),this.register(this._terminal.onLineFeed((()=>this._onChar("\n")))),this.register(this._terminal.onA11yTab((e=>this._onTab(e)))),this.register(this._terminal.onKey((e=>this._onKey(e.key)))),this.register(this._terminal.onBlur((()=>this._clearLiveRegion()))),this.register(this._renderService.onDimensionsChange((()=>this._refreshRowsDimensions()))),this._screenDprMonitor=new l.ScreenDprMonitor(window),this.register(this._screenDprMonitor),this._screenDprMonitor.setListener((()=>this._refreshRowsDimensions())),this.register((0,o.addDisposableDomListener)(window,"resize",(()=>this._refreshRowsDimensions())))}dispose(){super.dispose(),(0,c.removeElementFromParent)(this._accessibilityTreeRoot),this._rowElements.length=0}_onBoundaryFocus(e,t){const r=e.target,i=this._rowElements[0===t?1:this._rowElements.length-2];if(r.getAttribute("aria-posinset")===(0===t?"1":`${this._terminal.buffer.lines.length}`))return;if(e.relatedTarget!==i)return;let n,s;if(0===t?(n=r,s=this._rowElements.pop(),this._rowContainer.removeChild(s)):(n=this._rowElements.shift(),s=r,this._rowContainer.removeChild(n)),n.removeEventListener("focus",this._topBoundaryFocusListener),s.removeEventListener("focus",this._bottomBoundaryFocusListener),0===t){const e=this._createAccessibilityTreeNode();this._rowElements.unshift(e),this._rowContainer.insertAdjacentElement("afterbegin",e)}else{const e=this._createAccessibilityTreeNode();this._rowElements.push(e),this._rowContainer.appendChild(e)}this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._terminal.scrollLines(0===t?-1:1),this._rowElements[0===t?1:this._rowElements.length-2].focus(),e.preventDefault(),e.stopImmediatePropagation()}_onResize(e){this._rowElements[this._rowElements.length-1].removeEventListener("focus",this._bottomBoundaryFocusListener);for(let e=this._rowContainer.children.length;e<this._terminal.rows;e++)this._rowElements[e]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[e]);for(;this._rowElements.length>e;)this._rowContainer.removeChild(this._rowElements.pop());this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions()}_createAccessibilityTreeNode(){const e=document.createElement("div");return e.setAttribute("role","listitem"),e.tabIndex=-1,this._refreshRowDimensions(e),e}_onTab(e){for(let t=0;t<e;t++)this._onChar(" ")}_onChar(e){this._liveRegionLineCount<21&&(this._charsToConsume.length>0?this._charsToConsume.shift()!==e&&(this._charsToAnnounce+=e):this._charsToAnnounce+=e,"\n"===e&&(this._liveRegionLineCount++,21===this._liveRegionLineCount&&(this._liveRegion.textContent+=i.tooMuchOutput)),n.isMac&&this._liveRegion.textContent&&this._liveRegion.textContent.length>0&&!this._liveRegion.parentNode&&setTimeout((()=>{this._accessibilityTreeRoot.appendChild(this._liveRegion)}),0))}_clearLiveRegion(){this._liveRegion.textContent="",this._liveRegionLineCount=0,n.isMac&&(0,c.removeElementFromParent)(this._liveRegion)}_onKey(e){this._clearLiveRegion(),this._charsToConsume.push(e)}_refreshRows(e,t){this._renderRowsDebouncer.refresh(e,t,this._terminal.rows)}_renderRows(e,t){const r=this._terminal.buffer,i=r.lines.length.toString();for(let n=e;n<=t;n++){const e=r.translateBufferLineToString(r.ydisp+n,!0),t=(r.ydisp+n+1).toString(),s=this._rowElements[n];s&&(0===e.length?s.innerText=" ":s.textContent=e,s.setAttribute("aria-posinset",t),s.setAttribute("aria-setsize",i))}this._announceCharacters()}_refreshRowsDimensions(){if(this._renderService.dimensions.actualCellHeight){this._rowElements.length!==this._terminal.rows&&this._onResize(this._terminal.rows);for(let e=0;e<this._terminal.rows;e++)this._refreshRowDimensions(this._rowElements[e])}}_refreshRowDimensions(e){e.style.height=`${this._renderService.dimensions.actualCellHeight}px`}_announceCharacters(){0!==this._charsToAnnounce.length&&(this._liveRegion.textContent+=this._charsToAnnounce,this._charsToAnnounce="")}}t.AccessibilityManager=u},3614:(e,t)=>{function r(e){return e.replace(/\r?\n/g,"\r")}function i(e,t){return t?"[200~"+e+"[201~":e}function n(e,t,n){e=i(e=r(e),n.decPrivateModes.bracketedPasteMode),n.triggerDataEvent(e,!0),t.value=""}function s(e,t,r){const i=r.getBoundingClientRect(),n=e.clientX-i.left-10,s=e.clientY-i.top-10;t.style.width="20px",t.style.height="20px",t.style.left=`${n}px`,t.style.top=`${s}px`,t.style.zIndex="1000",t.focus()}Object.defineProperty(t,"__esModule",{value:!0}),t.rightClickHandler=t.moveTextAreaUnderMouseCursor=t.paste=t.handlePasteEvent=t.copyHandler=t.bracketTextForPaste=t.prepareTextForTerminal=void 0,t.prepareTextForTerminal=r,t.bracketTextForPaste=i,t.copyHandler=function(e,t){e.clipboardData&&e.clipboardData.setData("text/plain",t.selectionText),e.preventDefault()},t.handlePasteEvent=function(e,t,r){e.stopPropagation(),e.clipboardData&&n(e.clipboardData.getData("text/plain"),t,r)},t.paste=n,t.moveTextAreaUnderMouseCursor=s,t.rightClickHandler=function(e,t,r,i,n){s(e,t,r),n&&i.rightClickSelect(e),t.value=i.selectionText,t.select()}},7239:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorContrastCache=void 0;const i=r(1505);t.ColorContrastCache=class{constructor(){this._color=new i.TwoKeyMap,this._css=new i.TwoKeyMap}setCss(e,t,r){this._css.set(e,t,r)}getCss(e,t){return this._css.get(e,t)}setColor(e,t,r){this._color.set(e,t,r)}getColor(e,t){return this._color.get(e,t)}clear(){this._color.clear(),this._css.clear()}}},5680:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorManager=t.DEFAULT_ANSI_COLORS=void 0;const i=r(8055),n=r(7239),s=i.css.toColor("#ffffff"),o=i.css.toColor("#000000"),a=i.css.toColor("#ffffff"),l=i.css.toColor("#000000"),c={css:"rgba(255, 255, 255, 0.3)",rgba:4294967117};t.DEFAULT_ANSI_COLORS=Object.freeze((()=>{const e=[i.css.toColor("#2e3436"),i.css.toColor("#cc0000"),i.css.toColor("#4e9a06"),i.css.toColor("#c4a000"),i.css.toColor("#3465a4"),i.css.toColor("#75507b"),i.css.toColor("#06989a"),i.css.toColor("#d3d7cf"),i.css.toColor("#555753"),i.css.toColor("#ef2929"),i.css.toColor("#8ae234"),i.css.toColor("#fce94f"),i.css.toColor("#729fcf"),i.css.toColor("#ad7fa8"),i.css.toColor("#34e2e2"),i.css.toColor("#eeeeec")],t=[0,95,135,175,215,255];for(let r=0;r<216;r++){const n=t[r/36%6|0],s=t[r/6%6|0],o=t[r%6];e.push({css:i.channels.toCss(n,s,o),rgba:i.channels.toRgba(n,s,o)})}for(let t=0;t<24;t++){const r=8+10*t;e.push({css:i.channels.toCss(r,r,r),rgba:i.channels.toRgba(r,r,r)})}return e})()),t.ColorManager=class{constructor(e,r){this.allowTransparency=r;const u=e.createElement("canvas");u.width=1,u.height=1;const h=u.getContext("2d");if(!h)throw new Error("Could not get rendering context");this._ctx=h,this._ctx.globalCompositeOperation="copy",this._litmusColor=this._ctx.createLinearGradient(0,0,1,1),this._contrastCache=new n.ColorContrastCache,this.colors={foreground:s,background:o,cursor:a,cursorAccent:l,selectionForeground:void 0,selectionBackgroundTransparent:c,selectionBackgroundOpaque:i.color.blend(o,c),selectionInactiveBackgroundTransparent:c,selectionInactiveBackgroundOpaque:i.color.blend(o,c),ansi:t.DEFAULT_ANSI_COLORS.slice(),contrastCache:this._contrastCache},this._updateRestoreColors()}onOptionsChange(e,t){switch(e){case"minimumContrastRatio":this._contrastCache.clear();break;case"allowTransparency":this.allowTransparency=t}}setTheme(e={}){this.colors.foreground=this._parseColor(e.foreground,s),this.colors.background=this._parseColor(e.background,o),this.colors.cursor=this._parseColor(e.cursor,a,!0),this.colors.cursorAccent=this._parseColor(e.cursorAccent,l,!0),this.colors.selectionBackgroundTransparent=this._parseColor(e.selectionBackground,c,!0),this.colors.selectionBackgroundOpaque=i.color.blend(this.colors.background,this.colors.selectionBackgroundTransparent),this.colors.selectionInactiveBackgroundTransparent=this._parseColor(e.selectionInactiveBackground,this.colors.selectionBackgroundTransparent,!0),this.colors.selectionInactiveBackgroundOpaque=i.color.blend(this.colors.background,this.colors.selectionInactiveBackgroundTransparent);const r={css:"",rgba:0};if(this.colors.selectionForeground=e.selectionForeground?this._parseColor(e.selectionForeground,r):void 0,this.colors.selectionForeground===r&&(this.colors.selectionForeground=void 0),i.color.isOpaque(this.colors.selectionBackgroundTransparent)){const e=.3;this.colors.selectionBackgroundTransparent=i.color.opacity(this.colors.selectionBackgroundTransparent,e)}if(i.color.isOpaque(this.colors.selectionInactiveBackgroundTransparent)){const e=.3;this.colors.selectionInactiveBackgroundTransparent=i.color.opacity(this.colors.selectionInactiveBackgroundTransparent,e)}if(this.colors.ansi=t.DEFAULT_ANSI_COLORS.slice(),this.colors.ansi[0]=this._parseColor(e.black,t.DEFAULT_ANSI_COLORS[0]),this.colors.ansi[1]=this._parseColor(e.red,t.DEFAULT_ANSI_COLORS[1]),this.colors.ansi[2]=this._parseColor(e.green,t.DEFAULT_ANSI_COLORS[2]),this.colors.ansi[3]=this._parseColor(e.yellow,t.DEFAULT_ANSI_COLORS[3]),this.colors.ansi[4]=this._parseColor(e.blue,t.DEFAULT_ANSI_COLORS[4]),this.colors.ansi[5]=this._parseColor(e.magenta,t.DEFAULT_ANSI_COLORS[5]),this.colors.ansi[6]=this._parseColor(e.cyan,t.DEFAULT_ANSI_COLORS[6]),this.colors.ansi[7]=this._parseColor(e.white,t.DEFAULT_ANSI_COLORS[7]),this.colors.ansi[8]=this._parseColor(e.brightBlack,t.DEFAULT_ANSI_COLORS[8]),this.colors.ansi[9]=this._parseColor(e.brightRed,t.DEFAULT_ANSI_COLORS[9]),this.colors.ansi[10]=this._parseColor(e.brightGreen,t.DEFAULT_ANSI_COLORS[10]),this.colors.ansi[11]=this._parseColor(e.brightYellow,t.DEFAULT_ANSI_COLORS[11]),this.colors.ansi[12]=this._parseColor(e.brightBlue,t.DEFAULT_ANSI_COLORS[12]),this.colors.ansi[13]=this._parseColor(e.brightMagenta,t.DEFAULT_ANSI_COLORS[13]),this.colors.ansi[14]=this._parseColor(e.brightCyan,t.DEFAULT_ANSI_COLORS[14]),this.colors.ansi[15]=this._parseColor(e.brightWhite,t.DEFAULT_ANSI_COLORS[15]),e.extendedAnsi){const r=Math.min(this.colors.ansi.length-16,e.extendedAnsi.length);for(let i=0;i<r;i++)this.colors.ansi[i+16]=this._parseColor(e.extendedAnsi[i],t.DEFAULT_ANSI_COLORS[i+16])}this._contrastCache.clear(),this._updateRestoreColors()}restoreColor(e){if(void 0!==e)switch(e){case 256:this.colors.foreground=this._restoreColors.foreground;break;case 257:this.colors.background=this._restoreColors.background;break;case 258:this.colors.cursor=this._restoreColors.cursor;break;default:this.colors.ansi[e]=this._restoreColors.ansi[e]}else for(let e=0;e<this._restoreColors.ansi.length;++e)this.colors.ansi[e]=this._restoreColors.ansi[e]}_updateRestoreColors(){this._restoreColors={foreground:this.colors.foreground,background:this.colors.background,cursor:this.colors.cursor,ansi:this.colors.ansi.slice()}}_parseColor(e,t,r=this.allowTransparency){if(void 0===e)return t;if(this._ctx.fillStyle=this._litmusColor,this._ctx.fillStyle=e,"string"!=typeof this._ctx.fillStyle)return console.warn(`Color: ${e} is invalid using fallback ${t.css}`),t;this._ctx.fillRect(0,0,1,1);const n=this._ctx.getImageData(0,0,1,1).data;if(255!==n[3]){if(!r)return console.warn(`Color: ${e} is using transparency, but allowTransparency is false. Using fallback ${t.css}.`),t;const[n,s,o,a]=this._ctx.fillStyle.substring(5,this._ctx.fillStyle.length-1).split(",").map((e=>Number(e))),l=Math.round(255*a);return{rgba:i.channels.toRgba(n,s,o,l),css:e}}return{css:this._ctx.fillStyle,rgba:i.channels.toRgba(n[0],n[1],n[2],n[3])}}}},9631:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.removeElementFromParent=void 0,t.removeElementFromParent=function(...e){var t;for(const r of e)null===(t=null==r?void 0:r.parentElement)||void 0===t||t.removeChild(r)}},3656:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.addDisposableDomListener=void 0,t.addDisposableDomListener=function(e,t,r,i){e.addEventListener(t,r,i);let n=!1;return{dispose:()=>{n||(n=!0,e.removeEventListener(t,r,i))}}}},6465:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.Linkifier2=void 0;const s=r(2585),o=r(8460),a=r(844),l=r(3656);let c=class extends a.Disposable{constructor(e){super(),this._bufferService=e,this._linkProviders=[],this._linkCacheDisposables=[],this._isMouseOut=!0,this._activeLine=-1,this._onShowLinkUnderline=this.register(new o.EventEmitter),this._onHideLinkUnderline=this.register(new o.EventEmitter),this.register((0,a.getDisposeArrayDisposable)(this._linkCacheDisposables))}get currentLink(){return this._currentLink}get onShowLinkUnderline(){return this._onShowLinkUnderline.event}get onHideLinkUnderline(){return this._onHideLinkUnderline.event}dispose(){super.dispose(),this._lastMouseEvent=void 0}registerLinkProvider(e){return this._linkProviders.push(e),{dispose:()=>{const t=this._linkProviders.indexOf(e);-1!==t&&this._linkProviders.splice(t,1)}}}attachToDom(e,t,r){this._element=e,this._mouseService=t,this._renderService=r,this.register((0,l.addDisposableDomListener)(this._element,"mouseleave",(()=>{this._isMouseOut=!0,this._clearCurrentLink()}))),this.register((0,l.addDisposableDomListener)(this._element,"mousemove",this._onMouseMove.bind(this))),this.register((0,l.addDisposableDomListener)(this._element,"mousedown",this._handleMouseDown.bind(this))),this.register((0,l.addDisposableDomListener)(this._element,"mouseup",this._handleMouseUp.bind(this)))}_onMouseMove(e){if(this._lastMouseEvent=e,!this._element||!this._mouseService)return;const t=this._positionFromMouseEvent(e,this._element,this._mouseService);if(!t)return;this._isMouseOut=!1;const r=e.composedPath();for(let e=0;e<r.length;e++){const t=r[e];if(t.classList.contains("xterm"))break;if(t.classList.contains("xterm-hover"))return}this._lastBufferCell&&t.x===this._lastBufferCell.x&&t.y===this._lastBufferCell.y||(this._onHover(t),this._lastBufferCell=t)}_onHover(e){if(this._activeLine!==e.y)return this._clearCurrentLink(),void this._askForLink(e,!1);this._currentLink&&this._linkAtPosition(this._currentLink.link,e)||(this._clearCurrentLink(),this._askForLink(e,!0))}_askForLink(e,t){var r,i;this._activeProviderReplies&&t||(null===(r=this._activeProviderReplies)||void 0===r||r.forEach((e=>{null==e||e.forEach((e=>{e.link.dispose&&e.link.dispose()}))})),this._activeProviderReplies=new Map,this._activeLine=e.y);let n=!1;for(const[r,s]of this._linkProviders.entries())t?(null===(i=this._activeProviderReplies)||void 0===i?void 0:i.get(r))&&(n=this._checkLinkProviderResult(r,e,n)):s.provideLinks(e.y,(t=>{var i,s;if(this._isMouseOut)return;const o=null==t?void 0:t.map((e=>({link:e})));null===(i=this._activeProviderReplies)||void 0===i||i.set(r,o),n=this._checkLinkProviderResult(r,e,n),(null===(s=this._activeProviderReplies)||void 0===s?void 0:s.size)===this._linkProviders.length&&this._removeIntersectingLinks(e.y,this._activeProviderReplies)}))}_removeIntersectingLinks(e,t){const r=new Set;for(let i=0;i<t.size;i++){const n=t.get(i);if(n)for(let t=0;t<n.length;t++){const i=n[t],s=i.link.range.start.y<e?0:i.link.range.start.x,o=i.link.range.end.y>e?this._bufferService.cols:i.link.range.end.x;for(let e=s;e<=o;e++){if(r.has(e)){n.splice(t--,1);break}r.add(e)}}}}_checkLinkProviderResult(e,t,r){var i;if(!this._activeProviderReplies)return r;const n=this._activeProviderReplies.get(e);let s=!1;for(let t=0;t<e;t++)this._activeProviderReplies.has(t)&&!this._activeProviderReplies.get(t)||(s=!0);if(!s&&n){const e=n.find((e=>this._linkAtPosition(e.link,t)));e&&(r=!0,this._handleNewLink(e))}if(this._activeProviderReplies.size===this._linkProviders.length&&!r)for(let e=0;e<this._activeProviderReplies.size;e++){const n=null===(i=this._activeProviderReplies.get(e))||void 0===i?void 0:i.find((e=>this._linkAtPosition(e.link,t)));if(n){r=!0,this._handleNewLink(n);break}}return r}_handleMouseDown(){this._mouseDownLink=this._currentLink}_handleMouseUp(e){if(!this._element||!this._mouseService||!this._currentLink)return;const t=this._positionFromMouseEvent(e,this._element,this._mouseService);t&&this._mouseDownLink===this._currentLink&&this._linkAtPosition(this._currentLink.link,t)&&this._currentLink.link.activate(e,this._currentLink.link.text)}_clearCurrentLink(e,t){this._element&&this._currentLink&&this._lastMouseEvent&&(!e||!t||this._currentLink.link.range.start.y>=e&&this._currentLink.link.range.end.y<=t)&&(this._linkLeave(this._element,this._currentLink.link,this._lastMouseEvent),this._currentLink=void 0,(0,a.disposeArray)(this._linkCacheDisposables))}_handleNewLink(e){if(!this._element||!this._lastMouseEvent||!this._mouseService)return;const t=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);t&&this._linkAtPosition(e.link,t)&&(this._currentLink=e,this._currentLink.state={decorations:{underline:void 0===e.link.decorations||e.link.decorations.underline,pointerCursor:void 0===e.link.decorations||e.link.decorations.pointerCursor},isHovered:!0},this._linkHover(this._element,e.link,this._lastMouseEvent),e.link.decorations={},Object.defineProperties(e.link.decorations,{pointerCursor:{get:()=>{var e,t;return null===(t=null===(e=this._currentLink)||void 0===e?void 0:e.state)||void 0===t?void 0:t.decorations.pointerCursor},set:e=>{var t,r;(null===(t=this._currentLink)||void 0===t?void 0:t.state)&&this._currentLink.state.decorations.pointerCursor!==e&&(this._currentLink.state.decorations.pointerCursor=e,this._currentLink.state.isHovered&&(null===(r=this._element)||void 0===r||r.classList.toggle("xterm-cursor-pointer",e)))}},underline:{get:()=>{var e,t;return null===(t=null===(e=this._currentLink)||void 0===e?void 0:e.state)||void 0===t?void 0:t.decorations.underline},set:t=>{var r,i,n;(null===(r=this._currentLink)||void 0===r?void 0:r.state)&&(null===(n=null===(i=this._currentLink)||void 0===i?void 0:i.state)||void 0===n?void 0:n.decorations.underline)!==t&&(this._currentLink.state.decorations.underline=t,this._currentLink.state.isHovered&&this._fireUnderlineEvent(e.link,t))}}}),this._renderService&&this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange((e=>{const t=0===e.start?0:e.start+1+this._bufferService.buffer.ydisp;this._clearCurrentLink(t,e.end+1+this._bufferService.buffer.ydisp)}))))}_linkHover(e,t,r){var i;(null===(i=this._currentLink)||void 0===i?void 0:i.state)&&(this._currentLink.state.isHovered=!0,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(t,!0),this._currentLink.state.decorations.pointerCursor&&e.classList.add("xterm-cursor-pointer")),t.hover&&t.hover(r,t.text)}_fireUnderlineEvent(e,t){const r=e.range,i=this._bufferService.buffer.ydisp,n=this._createLinkUnderlineEvent(r.start.x-1,r.start.y-i-1,r.end.x,r.end.y-i-1,void 0);(t?this._onShowLinkUnderline:this._onHideLinkUnderline).fire(n)}_linkLeave(e,t,r){var i;(null===(i=this._currentLink)||void 0===i?void 0:i.state)&&(this._currentLink.state.isHovered=!1,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(t,!1),this._currentLink.state.decorations.pointerCursor&&e.classList.remove("xterm-cursor-pointer")),t.leave&&t.leave(r,t.text)}_linkAtPosition(e,t){const r=e.range.start.y===e.range.end.y,i=e.range.start.y<t.y,n=e.range.end.y>t.y;return(r&&e.range.start.x<=t.x&&e.range.end.x>=t.x||i&&e.range.end.x>=t.x||n&&e.range.start.x<=t.x||i&&n)&&e.range.start.y<=t.y&&e.range.end.y>=t.y}_positionFromMouseEvent(e,t,r){const i=r.getCoords(e,t,this._bufferService.cols,this._bufferService.rows);if(i)return{x:i[0],y:i[1]+this._bufferService.buffer.ydisp}}_createLinkUnderlineEvent(e,t,r,i,n){return{x1:e,y1:t,x2:r,y2:i,cols:this._bufferService.cols,fg:n}}};c=i([n(0,s.IBufferService)],c),t.Linkifier2=c},9042:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tooMuchOutput=t.promptLabel=void 0,t.promptLabel="Terminal input",t.tooMuchOutput="Too much output to announce, navigate to rows manually to read"},2962:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OscLinkProvider=void 0;const s=r(511),o=r(2585);let a=class{constructor(e,t,r){this._bufferService=e,this._optionsService=t,this._oscLinkService=r}provideLinks(e,t){var r;const i=this._bufferService.buffer.lines.get(e-1);if(!i)return void t(void 0);const n=[],o=this._optionsService.rawOptions.linkHandler,a=new s.CellData,c=i.getTrimmedLength();let u=-1,h=-1,d=!1;for(let t=0;t<c;t++)if(-1!==h||i.hasContent(t)){if(i.loadCell(t,a),a.hasExtendedAttrs()&&a.extended.urlId){if(-1===h){h=t,u=a.extended.urlId;continue}d=a.extended.urlId!==u}else-1!==h&&(d=!0);if(d||-1!==h&&t===c-1){const i=null===(r=this._oscLinkService.getLinkData(u))||void 0===r?void 0:r.uri;if(i){const r={start:{x:h+1,y:e},end:{x:t+(d||t!==c-1?0:1),y:e}};n.push({text:i,range:r,activate:(e,t)=>o?o.activate(e,t,r):l(0,t),hover:(e,t)=>{var i;return null===(i=null==o?void 0:o.hover)||void 0===i?void 0:i.call(o,e,t,r)},leave:(e,t)=>{var i;return null===(i=null==o?void 0:o.leave)||void 0===i?void 0:i.call(o,e,t,r)}})}d=!1,a.hasExtendedAttrs()&&a.extended.urlId?(h=t,u=a.extended.urlId):(h=-1,u=-1)}}t(n)}};function l(e,t){if(confirm(`Do you want to navigate to ${t}?`)){const r=window.open();if(r){try{r.opener=null}catch(e){}r.location.href=t}else console.warn("Opening link blocked as opener could not be cleared")}}a=i([n(0,o.IBufferService),n(1,o.IOptionsService),n(2,o.IOscLinkService)],a),t.OscLinkProvider=a},6193:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RenderDebouncer=void 0,t.RenderDebouncer=class{constructor(e,t){this._parentWindow=e,this._renderCallback=t,this._refreshCallbacks=[]}dispose(){this._animationFrame&&(this._parentWindow.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)}addRefreshCallback(e){return this._refreshCallbacks.push(e),this._animationFrame||(this._animationFrame=this._parentWindow.requestAnimationFrame((()=>this._innerRefresh()))),this._animationFrame}refresh(e,t,r){this._rowCount=r,e=void 0!==e?e:0,t=void 0!==t?t:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,e):e,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,t):t,this._animationFrame||(this._animationFrame=this._parentWindow.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._animationFrame=void 0,void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return void this._runRefreshCallbacks();const e=Math.max(this._rowStart,0),t=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,t),this._runRefreshCallbacks()}_runRefreshCallbacks(){for(const e of this._refreshCallbacks)e(0);this._refreshCallbacks=[]}}},5596:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ScreenDprMonitor=void 0;const i=r(844);class n extends i.Disposable{constructor(e){super(),this._parentWindow=e,this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio}setListener(e){this._listener&&this.clearListener(),this._listener=e,this._outerListener=()=>{this._listener&&(this._listener(this._parentWindow.devicePixelRatio,this._currentDevicePixelRatio),this._updateDpr())},this._updateDpr()}dispose(){super.dispose(),this.clearListener()}_updateDpr(){var e;this._outerListener&&(null===(e=this._resolutionMediaMatchList)||void 0===e||e.removeListener(this._outerListener),this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio,this._resolutionMediaMatchList=this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`),this._resolutionMediaMatchList.addListener(this._outerListener))}clearListener(){this._resolutionMediaMatchList&&this._listener&&this._outerListener&&(this._resolutionMediaMatchList.removeListener(this._outerListener),this._resolutionMediaMatchList=void 0,this._listener=void 0,this._outerListener=void 0)}}t.ScreenDprMonitor=n},3236:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Terminal=void 0;const i=r(2950),n=r(1680),s=r(3614),o=r(2584),a=r(5435),l=r(9312),c=r(6114),u=r(3656),h=r(9042),d=r(4567),f=r(1296),p=r(7399),v=r(8460),g=r(8437),_=r(5680),m=r(3230),b=r(4725),y=r(428),S=r(8934),C=r(6465),w=r(5114),k=r(8969),E=r(8055),x=r(4269),A=r(5941),T=r(3107),R=r(5744),L=r(9074),D=r(2585),I=r(2962),P="undefined"!=typeof window?window.document:null;class O extends k.CoreTerminal{constructor(e={}){super(e),this.browser=c,this._keyDownHandled=!1,this._keyDownSeen=!1,this._keyPressHandled=!1,this._unprocessedDeadKey=!1,this._onCursorMove=new v.EventEmitter,this._onKey=new v.EventEmitter,this._onRender=new v.EventEmitter,this._onSelectionChange=new v.EventEmitter,this._onTitleChange=new v.EventEmitter,this._onBell=new v.EventEmitter,this._onFocus=new v.EventEmitter,this._onBlur=new v.EventEmitter,this._onA11yCharEmitter=new v.EventEmitter,this._onA11yTabEmitter=new v.EventEmitter,this._setup(),this.linkifier2=this.register(this._instantiationService.createInstance(C.Linkifier2)),this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(I.OscLinkProvider)),this._decorationService=this._instantiationService.createInstance(L.DecorationService),this._instantiationService.setService(D.IDecorationService,this._decorationService),this.register(this._inputHandler.onRequestBell((()=>this._onBell.fire()))),this.register(this._inputHandler.onRequestRefreshRows(((e,t)=>this.refresh(e,t)))),this.register(this._inputHandler.onRequestSendFocus((()=>this._reportFocus()))),this.register(this._inputHandler.onRequestReset((()=>this.reset()))),this.register(this._inputHandler.onRequestWindowsOptionsReport((e=>this._reportWindowsOptions(e)))),this.register(this._inputHandler.onColor((e=>this._handleColorEvent(e)))),this.register((0,v.forwardEvent)(this._inputHandler.onCursorMove,this._onCursorMove)),this.register((0,v.forwardEvent)(this._inputHandler.onTitleChange,this._onTitleChange)),this.register((0,v.forwardEvent)(this._inputHandler.onA11yChar,this._onA11yCharEmitter)),this.register((0,v.forwardEvent)(this._inputHandler.onA11yTab,this._onA11yTabEmitter)),this.register(this._bufferService.onResize((e=>this._afterResize(e.cols,e.rows))))}get onCursorMove(){return this._onCursorMove.event}get onKey(){return this._onKey.event}get onRender(){return this._onRender.event}get onSelectionChange(){return this._onSelectionChange.event}get onTitleChange(){return this._onTitleChange.event}get onBell(){return this._onBell.event}get onFocus(){return this._onFocus.event}get onBlur(){return this._onBlur.event}get onA11yChar(){return this._onA11yCharEmitter.event}get onA11yTab(){return this._onA11yTabEmitter.event}_handleColorEvent(e){var t,r;if(this._colorManager){for(const t of e){let e,r="";switch(t.index){case 256:e="foreground",r="10";break;case 257:e="background",r="11";break;case 258:e="cursor",r="12";break;default:e="ansi",r="4;"+t.index}switch(t.type){case 0:const i=E.color.toColorRGB("ansi"===e?this._colorManager.colors.ansi[t.index]:this._colorManager.colors[e]);this.coreService.triggerDataEvent(`${o.C0.ESC}]${r};${(0,A.toRgbString)(i)}${o.C1_ESCAPED.ST}`);break;case 1:"ansi"===e?this._colorManager.colors.ansi[t.index]=E.rgba.toColor(...t.color):this._colorManager.colors[e]=E.rgba.toColor(...t.color);break;case 2:this._colorManager.restoreColor(t.index)}}null===(t=this._renderService)||void 0===t||t.setColors(this._colorManager.colors),null===(r=this.viewport)||void 0===r||r.onThemeChange(this._colorManager.colors)}}dispose(){var e,t,r;this._isDisposed||(super.dispose(),null===(e=this._renderService)||void 0===e||e.dispose(),this._customKeyEventHandler=void 0,this.write=()=>{},null===(r=null===(t=this.element)||void 0===t?void 0:t.parentNode)||void 0===r||r.removeChild(this.element))}_setup(){super._setup(),this._customKeyEventHandler=void 0}get buffer(){return this.buffers.active}focus(){this.textarea&&this.textarea.focus({preventScroll:!0})}_updateOptions(e){var t,r,i,n;switch(super._updateOptions(e),e){case"fontFamily":case"fontSize":null===(t=this._renderService)||void 0===t||t.clear(),null===(r=this._charSizeService)||void 0===r||r.measure();break;case"cursorBlink":case"cursorStyle":this.refresh(this.buffer.y,this.buffer.y);break;case"customGlyphs":case"drawBoldTextInBrightColors":case"letterSpacing":case"lineHeight":case"fontWeight":case"fontWeightBold":case"minimumContrastRatio":this._renderService&&(this._renderService.clear(),this._renderService.onResize(this.cols,this.rows),this.refresh(0,this.rows-1));break;case"scrollback":null===(i=this.viewport)||void 0===i||i.syncScrollArea();break;case"screenReaderMode":this.optionsService.rawOptions.screenReaderMode?!this._accessibilityManager&&this._renderService&&(this._accessibilityManager=new d.AccessibilityManager(this,this._renderService)):(null===(n=this._accessibilityManager)||void 0===n||n.dispose(),this._accessibilityManager=void 0);break;case"tabStopWidth":this.buffers.setupTabStops();break;case"theme":this._setTheme(this.optionsService.rawOptions.theme)}}_onTextAreaFocus(e){this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(o.C0.ESC+"[I"),this.updateCursorStyle(e),this.element.classList.add("focus"),this._showCursor(),this._onFocus.fire()}blur(){var e;return null===(e=this.textarea)||void 0===e?void 0:e.blur()}_onTextAreaBlur(){this.textarea.value="",this.refresh(this.buffer.y,this.buffer.y),this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(o.C0.ESC+"[O"),this.element.classList.remove("focus"),this._onBlur.fire()}_syncTextArea(){if(!this.textarea||!this.buffer.isCursorInViewport||this._compositionHelper.isComposing||!this._renderService)return;const e=this.buffer.ybase+this.buffer.y,t=this.buffer.lines.get(e);if(!t)return;const r=Math.min(this.buffer.x,this.cols-1),i=this._renderService.dimensions.actualCellHeight,n=t.getWidth(r),s=this._renderService.dimensions.actualCellWidth*n,o=this.buffer.y*this._renderService.dimensions.actualCellHeight,a=r*this._renderService.dimensions.actualCellWidth;this.textarea.style.left=a+"px",this.textarea.style.top=o+"px",this.textarea.style.width=s+"px",this.textarea.style.height=i+"px",this.textarea.style.lineHeight=i+"px",this.textarea.style.zIndex="-5"}_initGlobal(){this._bindKeys(),this.register((0,u.addDisposableDomListener)(this.element,"copy",(e=>{this.hasSelection()&&(0,s.copyHandler)(e,this._selectionService)})));const e=e=>(0,s.handlePasteEvent)(e,this.textarea,this.coreService);this.register((0,u.addDisposableDomListener)(this.textarea,"paste",e)),this.register((0,u.addDisposableDomListener)(this.element,"paste",e)),c.isFirefox?this.register((0,u.addDisposableDomListener)(this.element,"mousedown",(e=>{2===e.button&&(0,s.rightClickHandler)(e,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))):this.register((0,u.addDisposableDomListener)(this.element,"contextmenu",(e=>{(0,s.rightClickHandler)(e,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))),c.isLinux&&this.register((0,u.addDisposableDomListener)(this.element,"auxclick",(e=>{1===e.button&&(0,s.moveTextAreaUnderMouseCursor)(e,this.textarea,this.screenElement)})))}_bindKeys(){this.register((0,u.addDisposableDomListener)(this.textarea,"keyup",(e=>this._keyUp(e)),!0)),this.register((0,u.addDisposableDomListener)(this.textarea,"keydown",(e=>this._keyDown(e)),!0)),this.register((0,u.addDisposableDomListener)(this.textarea,"keypress",(e=>this._keyPress(e)),!0)),this.register((0,u.addDisposableDomListener)(this.textarea,"compositionstart",(()=>this._compositionHelper.compositionstart()))),this.register((0,u.addDisposableDomListener)(this.textarea,"compositionupdate",(e=>this._compositionHelper.compositionupdate(e)))),this.register((0,u.addDisposableDomListener)(this.textarea,"compositionend",(()=>this._compositionHelper.compositionend()))),this.register((0,u.addDisposableDomListener)(this.textarea,"input",(e=>this._inputEvent(e)),!0)),this.register(this.onRender((()=>this._compositionHelper.updateCompositionElements())))}open(e){var t;if(!e)throw new Error("Terminal requires a parent element.");e.isConnected||this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"),this._document=e.ownerDocument,this.element=this._document.createElement("div"),this.element.dir="ltr",this.element.classList.add("terminal"),this.element.classList.add("xterm"),this.element.setAttribute("tabindex","0"),e.appendChild(this.element);const r=P.createDocumentFragment();this._viewportElement=P.createElement("div"),this._viewportElement.classList.add("xterm-viewport"),r.appendChild(this._viewportElement),this._viewportScrollArea=P.createElement("div"),this._viewportScrollArea.classList.add("xterm-scroll-area"),this._viewportElement.appendChild(this._viewportScrollArea),this.screenElement=P.createElement("div"),this.screenElement.classList.add("xterm-screen"),this._helperContainer=P.createElement("div"),this._helperContainer.classList.add("xterm-helpers"),this.screenElement.appendChild(this._helperContainer),r.appendChild(this.screenElement),this.textarea=P.createElement("textarea"),this.textarea.classList.add("xterm-helper-textarea"),this.textarea.setAttribute("aria-label",h.promptLabel),this.textarea.setAttribute("aria-multiline","false"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.tabIndex=0,this.register((0,u.addDisposableDomListener)(this.textarea,"focus",(e=>this._onTextAreaFocus(e)))),this.register((0,u.addDisposableDomListener)(this.textarea,"blur",(()=>this._onTextAreaBlur()))),this._helperContainer.appendChild(this.textarea),this._coreBrowserService=this._instantiationService.createInstance(w.CoreBrowserService,this.textarea,null!==(t=this._document.defaultView)&&void 0!==t?t:window),this._instantiationService.setService(b.ICoreBrowserService,this._coreBrowserService),this._charSizeService=this._instantiationService.createInstance(y.CharSizeService,this._document,this._helperContainer),this._instantiationService.setService(b.ICharSizeService,this._charSizeService),this._theme=this.options.theme||this._theme,this._colorManager=new _.ColorManager(P,this.options.allowTransparency),this.register(this.optionsService.onOptionChange((e=>this._colorManager.onOptionsChange(e,this.optionsService.rawOptions[e])))),this._colorManager.setTheme(this._theme),this._characterJoinerService=this._instantiationService.createInstance(x.CharacterJoinerService),this._instantiationService.setService(b.ICharacterJoinerService,this._characterJoinerService);const s=this._createRenderer();this._renderService=this.register(this._instantiationService.createInstance(m.RenderService,s,this.rows,this.screenElement)),this._instantiationService.setService(b.IRenderService,this._renderService),this.register(this._renderService.onRenderedViewportChange((e=>this._onRender.fire(e)))),this.onResize((e=>this._renderService.resize(e.cols,e.rows))),this._compositionView=P.createElement("div"),this._compositionView.classList.add("composition-view"),this._compositionHelper=this._instantiationService.createInstance(i.CompositionHelper,this.textarea,this._compositionView),this._helperContainer.appendChild(this._compositionView),this.element.appendChild(r),this._mouseService=this._instantiationService.createInstance(S.MouseService),this._instantiationService.setService(b.IMouseService,this._mouseService),this.viewport=this._instantiationService.createInstance(n.Viewport,(e=>this.scrollLines(e,!0,1)),this._viewportElement,this._viewportScrollArea,this.element),this.viewport.onThemeChange(this._colorManager.colors),this.register(this._inputHandler.onRequestSyncScrollBar((()=>this.viewport.syncScrollArea()))),this.register(this.viewport),this.register(this.onCursorMove((()=>{this._renderService.onCursorMove(),this._syncTextArea()}))),this.register(this.onResize((()=>this._renderService.onResize(this.cols,this.rows)))),this.register(this.onBlur((()=>this._renderService.onBlur()))),this.register(this.onFocus((()=>this._renderService.onFocus()))),this.register(this._renderService.onDimensionsChange((()=>this.viewport.syncScrollArea()))),this._selectionService=this.register(this._instantiationService.createInstance(l.SelectionService,this.element,this.screenElement,this.linkifier2)),this._instantiationService.setService(b.ISelectionService,this._selectionService),this.register(this._selectionService.onRequestScrollLines((e=>this.scrollLines(e.amount,e.suppressScrollEvent)))),this.register(this._selectionService.onSelectionChange((()=>this._onSelectionChange.fire()))),this.register(this._selectionService.onRequestRedraw((e=>this._renderService.onSelectionChanged(e.start,e.end,e.columnSelectMode)))),this.register(this._selectionService.onLinuxMouseSelection((e=>{this.textarea.value=e,this.textarea.focus(),this.textarea.select()}))),this.register(this._onScroll.event((e=>{this.viewport.syncScrollArea(),this._selectionService.refresh()}))),this.register((0,u.addDisposableDomListener)(this._viewportElement,"scroll",(()=>this._selectionService.refresh()))),this.linkifier2.attachToDom(this.screenElement,this._mouseService,this._renderService),this.register(this._instantiationService.createInstance(T.BufferDecorationRenderer,this.screenElement)),this.register((0,u.addDisposableDomListener)(this.element,"mousedown",(e=>this._selectionService.onMouseDown(e)))),this.coreMouseService.areMouseEventsActive?(this._selectionService.disable(),this.element.classList.add("enable-mouse-events")):this._selectionService.enable(),this.options.screenReaderMode&&(this._accessibilityManager=new d.AccessibilityManager(this,this._renderService)),this.options.overviewRulerWidth&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(R.OverviewRulerRenderer,this._viewportElement,this.screenElement))),this.optionsService.onOptionChange((()=>{!this._overviewRulerRenderer&&this.options.overviewRulerWidth&&this._viewportElement&&this.screenElement&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(R.OverviewRulerRenderer,this._viewportElement,this.screenElement)))})),this._charSizeService.measure(),this.refresh(0,this.rows-1),this._initGlobal(),this.bindMouse()}_createRenderer(){return this._instantiationService.createInstance(f.DomRenderer,this._colorManager.colors,this.element,this.screenElement,this._viewportElement,this.linkifier2)}_setTheme(e){var t,r,i;this._theme=e,null===(t=this._colorManager)||void 0===t||t.setTheme(e),null===(r=this._renderService)||void 0===r||r.setColors(this._colorManager.colors),null===(i=this.viewport)||void 0===i||i.onThemeChange(this._colorManager.colors)}bindMouse(){const e=this,t=this.element;function r(t){const r=e._mouseService.getMouseReportCoords(t,e.screenElement);if(!r)return!1;let i,n;switch(t.overrideType||t.type){case"mousemove":n=32,void 0===t.buttons?(i=3,void 0!==t.button&&(i=t.button<3?t.button:3)):i=1&t.buttons?0:4&t.buttons?1:2&t.buttons?2:3;break;case"mouseup":n=0,i=t.button<3?t.button:3;break;case"mousedown":n=1,i=t.button<3?t.button:3;break;case"wheel":if(0===e.viewport.getLinesScrolled(t))return!1;n=t.deltaY<0?0:1,i=4;break;default:return!1}return!(void 0===n||void 0===i||i>4)&&e.coreMouseService.triggerMouseEvent({col:r.col,row:r.row,x:r.x,y:r.y,button:i,action:n,ctrl:t.ctrlKey,alt:t.altKey,shift:t.shiftKey})}const i={mouseup:null,wheel:null,mousedrag:null,mousemove:null},n={mouseup:e=>(r(e),e.buttons||(this._document.removeEventListener("mouseup",i.mouseup),i.mousedrag&&this._document.removeEventListener("mousemove",i.mousedrag)),this.cancel(e)),wheel:e=>(r(e),this.cancel(e,!0)),mousedrag:e=>{e.buttons&&r(e)},mousemove:e=>{e.buttons||r(e)}};this.register(this.coreMouseService.onProtocolChange((e=>{e?("debug"===this.optionsService.rawOptions.logLevel&&this._logService.debug("Binding to mouse events:",this.coreMouseService.explainEvents(e)),this.element.classList.add("enable-mouse-events"),this._selectionService.disable()):(this._logService.debug("Unbinding from mouse events."),this.element.classList.remove("enable-mouse-events"),this._selectionService.enable()),8&e?i.mousemove||(t.addEventListener("mousemove",n.mousemove),i.mousemove=n.mousemove):(t.removeEventListener("mousemove",i.mousemove),i.mousemove=null),16&e?i.wheel||(t.addEventListener("wheel",n.wheel,{passive:!1}),i.wheel=n.wheel):(t.removeEventListener("wheel",i.wheel),i.wheel=null),2&e?i.mouseup||(i.mouseup=n.mouseup):(this._document.removeEventListener("mouseup",i.mouseup),i.mouseup=null),4&e?i.mousedrag||(i.mousedrag=n.mousedrag):(this._document.removeEventListener("mousemove",i.mousedrag),i.mousedrag=null)}))),this.coreMouseService.activeProtocol=this.coreMouseService.activeProtocol,this.register((0,u.addDisposableDomListener)(t,"mousedown",(e=>{if(e.preventDefault(),this.focus(),this.coreMouseService.areMouseEventsActive&&!this._selectionService.shouldForceSelection(e))return r(e),i.mouseup&&this._document.addEventListener("mouseup",i.mouseup),i.mousedrag&&this._document.addEventListener("mousemove",i.mousedrag),this.cancel(e)}))),this.register((0,u.addDisposableDomListener)(t,"wheel",(e=>{if(!i.wheel){if(!this.buffer.hasScrollback){const t=this.viewport.getLinesScrolled(e);if(0===t)return;const r=o.C0.ESC+(this.coreService.decPrivateModes.applicationCursorKeys?"O":"[")+(e.deltaY<0?"A":"B");let i="";for(let e=0;e<Math.abs(t);e++)i+=r;return this.coreService.triggerDataEvent(i,!0),this.cancel(e,!0)}return this.viewport.onWheel(e)?this.cancel(e):void 0}}),{passive:!1})),this.register((0,u.addDisposableDomListener)(t,"touchstart",(e=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.onTouchStart(e),this.cancel(e)}),{passive:!0})),this.register((0,u.addDisposableDomListener)(t,"touchmove",(e=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.onTouchMove(e)?void 0:this.cancel(e)}),{passive:!1}))}refresh(e,t){var r;null===(r=this._renderService)||void 0===r||r.refreshRows(e,t)}updateCursorStyle(e){var t;(null===(t=this._selectionService)||void 0===t?void 0:t.shouldColumnSelect(e))?this.element.classList.add("column-select"):this.element.classList.remove("column-select")}_showCursor(){this.coreService.isCursorInitialized||(this.coreService.isCursorInitialized=!0,this.refresh(this.buffer.y,this.buffer.y))}scrollLines(e,t,r=0){super.scrollLines(e,t,r),this.refresh(0,this.rows-1)}paste(e){(0,s.paste)(e,this.textarea,this.coreService)}attachCustomKeyEventHandler(e){this._customKeyEventHandler=e}registerLinkProvider(e){return this.linkifier2.registerLinkProvider(e)}registerCharacterJoiner(e){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");const t=this._characterJoinerService.register(e);return this.refresh(0,this.rows-1),t}deregisterCharacterJoiner(e){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");this._characterJoinerService.deregister(e)&&this.refresh(0,this.rows-1)}get markers(){return this.buffer.markers}addMarker(e){return this.buffer.addMarker(this.buffer.ybase+this.buffer.y+e)}registerDecoration(e){return this._decorationService.registerDecoration(e)}hasSelection(){return!!this._selectionService&&this._selectionService.hasSelection}select(e,t,r){this._selectionService.setSelection(e,t,r)}getSelection(){return this._selectionService?this._selectionService.selectionText:""}getSelectionPosition(){if(this._selectionService&&this._selectionService.hasSelection)return{start:{x:this._selectionService.selectionStart[0],y:this._selectionService.selectionStart[1]},end:{x:this._selectionService.selectionEnd[0],y:this._selectionService.selectionEnd[1]}}}clearSelection(){var e;null===(e=this._selectionService)||void 0===e||e.clearSelection()}selectAll(){var e;null===(e=this._selectionService)||void 0===e||e.selectAll()}selectLines(e,t){var r;null===(r=this._selectionService)||void 0===r||r.selectLines(e,t)}_keyDown(e){if(this._keyDownHandled=!1,this._keyDownSeen=!0,this._customKeyEventHandler&&!1===this._customKeyEventHandler(e))return!1;const t=this.browser.isMac&&this.options.macOptionIsMeta&&e.altKey;if(!t&&!this._compositionHelper.keydown(e))return this.buffer.ybase!==this.buffer.ydisp&&this._bufferService.scrollToBottom(),!1;t||"Dead"!==e.key&&"AltGraph"!==e.key||(this._unprocessedDeadKey=!0);const r=(0,p.evaluateKeyboardEvent)(e,this.coreService.decPrivateModes.applicationCursorKeys,this.browser.isMac,this.options.macOptionIsMeta);if(this.updateCursorStyle(e),3===r.type||2===r.type){const t=this.rows-1;return this.scrollLines(2===r.type?-t:t),this.cancel(e,!0)}return 1===r.type&&this.selectAll(),!!this._isThirdLevelShift(this.browser,e)||(r.cancel&&this.cancel(e,!0),!r.key||!!(e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&1===e.key.length&&e.key.charCodeAt(0)>=65&&e.key.charCodeAt(0)<=90)||(this._unprocessedDeadKey?(this._unprocessedDeadKey=!1,!0):(r.key!==o.C0.ETX&&r.key!==o.C0.CR||(this.textarea.value=""),this._onKey.fire({key:r.key,domEvent:e}),this._showCursor(),this.coreService.triggerDataEvent(r.key,!0),this.optionsService.rawOptions.screenReaderMode?void(this._keyDownHandled=!0):this.cancel(e,!0))))}_isThirdLevelShift(e,t){const r=e.isMac&&!this.options.macOptionIsMeta&&t.altKey&&!t.ctrlKey&&!t.metaKey||e.isWindows&&t.altKey&&t.ctrlKey&&!t.metaKey||e.isWindows&&t.getModifierState("AltGraph");return"keypress"===t.type?r:r&&(!t.keyCode||t.keyCode>47)}_keyUp(e){this._keyDownSeen=!1,this._customKeyEventHandler&&!1===this._customKeyEventHandler(e)||(function(e){return 16===e.keyCode||17===e.keyCode||18===e.keyCode}(e)||this.focus(),this.updateCursorStyle(e),this._keyPressHandled=!1)}_keyPress(e){let t;if(this._keyPressHandled=!1,this._keyDownHandled)return!1;if(this._customKeyEventHandler&&!1===this._customKeyEventHandler(e))return!1;if(this.cancel(e),e.charCode)t=e.charCode;else if(null===e.which||void 0===e.which)t=e.keyCode;else{if(0===e.which||0===e.charCode)return!1;t=e.which}return!(!t||(e.altKey||e.ctrlKey||e.metaKey)&&!this._isThirdLevelShift(this.browser,e)||(t=String.fromCharCode(t),this._onKey.fire({key:t,domEvent:e}),this._showCursor(),this.coreService.triggerDataEvent(t,!0),this._keyPressHandled=!0,this._unprocessedDeadKey=!1,0))}_inputEvent(e){if(e.data&&"insertText"===e.inputType&&(!e.composed||!this._keyDownSeen)&&!this.optionsService.rawOptions.screenReaderMode){if(this._keyPressHandled)return!1;this._unprocessedDeadKey=!1;const t=e.data;return this.coreService.triggerDataEvent(t,!0),this.cancel(e),!0}return!1}resize(e,t){e!==this.cols||t!==this.rows?super.resize(e,t):this._charSizeService&&!this._charSizeService.hasValidSize&&this._charSizeService.measure()}_afterResize(e,t){var r,i;null===(r=this._charSizeService)||void 0===r||r.measure(),null===(i=this.viewport)||void 0===i||i.syncScrollArea(!0)}clear(){if(0!==this.buffer.ybase||0!==this.buffer.y){this.buffer.clearAllMarkers(),this.buffer.lines.set(0,this.buffer.lines.get(this.buffer.ybase+this.buffer.y)),this.buffer.lines.length=1,this.buffer.ydisp=0,this.buffer.ybase=0,this.buffer.y=0;for(let e=1;e<this.rows;e++)this.buffer.lines.push(this.buffer.getBlankLine(g.DEFAULT_ATTR_DATA));this.refresh(0,this.rows-1),this._onScroll.fire({position:this.buffer.ydisp,source:0})}}reset(){var e,t;this.options.rows=this.rows,this.options.cols=this.cols;const r=this._customKeyEventHandler;this._setup(),super.reset(),null===(e=this._selectionService)||void 0===e||e.reset(),this._decorationService.reset(),this._customKeyEventHandler=r,this.refresh(0,this.rows-1),null===(t=this.viewport)||void 0===t||t.syncScrollArea()}clearTextureAtlas(){var e;null===(e=this._renderService)||void 0===e||e.clearTextureAtlas()}_reportFocus(){var e;(null===(e=this.element)||void 0===e?void 0:e.classList.contains("focus"))?this.coreService.triggerDataEvent(o.C0.ESC+"[I"):this.coreService.triggerDataEvent(o.C0.ESC+"[O")}_reportWindowsOptions(e){if(this._renderService)switch(e){case a.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:const e=this._renderService.dimensions.canvasWidth.toFixed(0),t=this._renderService.dimensions.canvasHeight.toFixed(0);this.coreService.triggerDataEvent(`${o.C0.ESC}[4;${t};${e}t`);break;case a.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:const r=this._renderService.dimensions.actualCellWidth.toFixed(0),i=this._renderService.dimensions.actualCellHeight.toFixed(0);this.coreService.triggerDataEvent(`${o.C0.ESC}[6;${i};${r}t`)}}cancel(e,t){if(this.options.cancelEvents||t)return e.preventDefault(),e.stopPropagation(),!1}}t.Terminal=O},9924:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TimeBasedDebouncer=void 0,t.TimeBasedDebouncer=class{constructor(e,t=1e3){this._renderCallback=e,this._debounceThresholdMS=t,this._lastRefreshMs=0,this._additionalRefreshRequested=!1}dispose(){this._refreshTimeoutID&&clearTimeout(this._refreshTimeoutID)}refresh(e,t,r){this._rowCount=r,e=void 0!==e?e:0,t=void 0!==t?t:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,e):e,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,t):t;const i=Date.now();if(i-this._lastRefreshMs>=this._debounceThresholdMS)this._lastRefreshMs=i,this._innerRefresh();else if(!this._additionalRefreshRequested){const e=i-this._lastRefreshMs,t=this._debounceThresholdMS-e;this._additionalRefreshRequested=!0,this._refreshTimeoutID=window.setTimeout((()=>{this._lastRefreshMs=Date.now(),this._innerRefresh(),this._additionalRefreshRequested=!1,this._refreshTimeoutID=void 0}),t)}}_innerRefresh(){if(void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return;const e=Math.max(this._rowStart,0),t=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,t)}}},1680:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.Viewport=void 0;const s=r(844),o=r(3656),a=r(4725),l=r(2585);let c=class extends s.Disposable{constructor(e,t,r,i,n,s,a,l,c){super(),this._scrollLines=e,this._viewportElement=t,this._scrollArea=r,this._element=i,this._bufferService=n,this._optionsService=s,this._charSizeService=a,this._renderService=l,this._coreBrowserService=c,this.scrollBarWidth=0,this._currentRowHeight=0,this._currentScaledCellHeight=0,this._lastRecordedBufferLength=0,this._lastRecordedViewportHeight=0,this._lastRecordedBufferHeight=0,this._lastTouchY=0,this._lastScrollTop=0,this._wheelPartialScroll=0,this._refreshAnimationFrame=null,this._ignoreNextScrollEvent=!1,this._smoothScrollState={startTime:0,origin:-1,target:-1},this.scrollBarWidth=this._viewportElement.offsetWidth-this._scrollArea.offsetWidth||15,this.register((0,o.addDisposableDomListener)(this._viewportElement,"scroll",this._onScroll.bind(this))),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((e=>this._activeBuffer=e.activeBuffer))),this._renderDimensions=this._renderService.dimensions,this.register(this._renderService.onDimensionsChange((e=>this._renderDimensions=e))),setTimeout((()=>this.syncScrollArea()),0)}onThemeChange(e){this._viewportElement.style.backgroundColor=e.background.css}_refresh(e){if(e)return this._innerRefresh(),void(null!==this._refreshAnimationFrame&&this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));null===this._refreshAnimationFrame&&(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._charSizeService.height>0){this._currentRowHeight=this._renderService.dimensions.scaledCellHeight/this._coreBrowserService.dpr,this._currentScaledCellHeight=this._renderService.dimensions.scaledCellHeight,this._lastRecordedViewportHeight=this._viewportElement.offsetHeight;const e=Math.round(this._currentRowHeight*this._lastRecordedBufferLength)+(this._lastRecordedViewportHeight-this._renderService.dimensions.canvasHeight);this._lastRecordedBufferHeight!==e&&(this._lastRecordedBufferHeight=e,this._scrollArea.style.height=this._lastRecordedBufferHeight+"px")}const e=this._bufferService.buffer.ydisp*this._currentRowHeight;this._viewportElement.scrollTop!==e&&(this._ignoreNextScrollEvent=!0,this._viewportElement.scrollTop=e),this._refreshAnimationFrame=null}syncScrollArea(e=!1){if(this._lastRecordedBufferLength!==this._bufferService.buffer.lines.length)return this._lastRecordedBufferLength=this._bufferService.buffer.lines.length,void this._refresh(e);this._lastRecordedViewportHeight===this._renderService.dimensions.canvasHeight&&this._lastScrollTop===this._activeBuffer.ydisp*this._currentRowHeight&&this._renderDimensions.scaledCellHeight===this._currentScaledCellHeight||this._refresh(e)}_onScroll(e){if(this._lastScrollTop=this._viewportElement.scrollTop,!this._viewportElement.offsetParent)return;if(this._ignoreNextScrollEvent)return this._ignoreNextScrollEvent=!1,void this._scrollLines(0);const t=Math.round(this._lastScrollTop/this._currentRowHeight)-this._bufferService.buffer.ydisp;this._scrollLines(t)}_smoothScroll(){if(this._isDisposed||-1===this._smoothScrollState.origin||-1===this._smoothScrollState.target)return;const e=this._smoothScrollPercent();this._viewportElement.scrollTop=this._smoothScrollState.origin+Math.round(e*(this._smoothScrollState.target-this._smoothScrollState.origin)),e<1?this._coreBrowserService.window.requestAnimationFrame((()=>this._smoothScroll())):this._clearSmoothScrollState()}_smoothScrollPercent(){return this._optionsService.rawOptions.smoothScrollDuration&&this._smoothScrollState.startTime?Math.max(Math.min((Date.now()-this._smoothScrollState.startTime)/this._optionsService.rawOptions.smoothScrollDuration,1),0):1}_clearSmoothScrollState(){this._smoothScrollState.startTime=0,this._smoothScrollState.origin=-1,this._smoothScrollState.target=-1}_bubbleScroll(e,t){const r=this._viewportElement.scrollTop+this._lastRecordedViewportHeight;return!(t<0&&0!==this._viewportElement.scrollTop||t>0&&r<this._lastRecordedBufferHeight)||(e.cancelable&&e.preventDefault(),!1)}onWheel(e){const t=this._getPixelsScrolled(e);return 0!==t&&(this._optionsService.rawOptions.smoothScrollDuration?(this._smoothScrollState.startTime=Date.now(),this._smoothScrollPercent()<1?(this._smoothScrollState.origin=this._viewportElement.scrollTop,-1===this._smoothScrollState.target?this._smoothScrollState.target=this._viewportElement.scrollTop+t:this._smoothScrollState.target+=t,this._smoothScrollState.target=Math.max(Math.min(this._smoothScrollState.target,this._viewportElement.scrollHeight),0),this._smoothScroll()):this._clearSmoothScrollState()):this._viewportElement.scrollTop+=t,this._bubbleScroll(e,t))}_getPixelsScrolled(e){if(0===e.deltaY||e.shiftKey)return 0;let t=this._applyScrollModifier(e.deltaY,e);return e.deltaMode===WheelEvent.DOM_DELTA_LINE?t*=this._currentRowHeight:e.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(t*=this._currentRowHeight*this._bufferService.rows),t}getLinesScrolled(e){if(0===e.deltaY||e.shiftKey)return 0;let t=this._applyScrollModifier(e.deltaY,e);return e.deltaMode===WheelEvent.DOM_DELTA_PIXEL?(t/=this._currentRowHeight+0,this._wheelPartialScroll+=t,t=Math.floor(Math.abs(this._wheelPartialScroll))*(this._wheelPartialScroll>0?1:-1),this._wheelPartialScroll%=1):e.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(t*=this._bufferService.rows),t}_applyScrollModifier(e,t){const r=this._optionsService.rawOptions.fastScrollModifier;return"alt"===r&&t.altKey||"ctrl"===r&&t.ctrlKey||"shift"===r&&t.shiftKey?e*this._optionsService.rawOptions.fastScrollSensitivity*this._optionsService.rawOptions.scrollSensitivity:e*this._optionsService.rawOptions.scrollSensitivity}onTouchStart(e){this._lastTouchY=e.touches[0].pageY}onTouchMove(e){const t=this._lastTouchY-e.touches[0].pageY;return this._lastTouchY=e.touches[0].pageY,0!==t&&(this._viewportElement.scrollTop+=t,this._bubbleScroll(e,t))}};c=i([n(4,l.IBufferService),n(5,l.IOptionsService),n(6,a.ICharSizeService),n(7,a.IRenderService),n(8,a.ICoreBrowserService)],c),t.Viewport=c},3107:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.BufferDecorationRenderer=void 0;const s=r(3656),o=r(4725),a=r(844),l=r(2585);let c=class extends a.Disposable{constructor(e,t,r,i){super(),this._screenElement=e,this._bufferService=t,this._decorationService=r,this._renderService=i,this._decorationElements=new Map,this._altBufferIsActive=!1,this._dimensionsChanged=!1,this._container=document.createElement("div"),this._container.classList.add("xterm-decoration-container"),this._screenElement.appendChild(this._container),this.register(this._renderService.onRenderedViewportChange((()=>this._queueRefresh()))),this.register(this._renderService.onDimensionsChange((()=>{this._dimensionsChanged=!0,this._queueRefresh()}))),this.register((0,s.addDisposableDomListener)(window,"resize",(()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._altBufferIsActive=this._bufferService.buffer===this._bufferService.buffers.alt}))),this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh()))),this.register(this._decorationService.onDecorationRemoved((e=>this._removeDecoration(e))))}dispose(){this._container.remove(),this._decorationElements.clear(),super.dispose()}_queueRefresh(){void 0===this._animationFrame&&(this._animationFrame=this._renderService.addRefreshCallback((()=>{this.refreshDecorations(),this._animationFrame=void 0})))}refreshDecorations(){for(const e of this._decorationService.decorations)this._renderDecoration(e);this._dimensionsChanged=!1}_renderDecoration(e){this._refreshStyle(e),this._dimensionsChanged&&this._refreshXPosition(e)}_createElement(e){var t;const r=document.createElement("div");r.classList.add("xterm-decoration"),r.style.width=`${Math.round((e.options.width||1)*this._renderService.dimensions.actualCellWidth)}px`,r.style.height=(e.options.height||1)*this._renderService.dimensions.actualCellHeight+"px",r.style.top=(e.marker.line-this._bufferService.buffers.active.ydisp)*this._renderService.dimensions.actualCellHeight+"px",r.style.lineHeight=`${this._renderService.dimensions.actualCellHeight}px`;const i=null!==(t=e.options.x)&&void 0!==t?t:0;return i&&i>this._bufferService.cols&&(r.style.display="none"),this._refreshXPosition(e,r),r}_refreshStyle(e){const t=e.marker.line-this._bufferService.buffers.active.ydisp;if(t<0||t>=this._bufferService.rows)e.element&&(e.element.style.display="none",e.onRenderEmitter.fire(e.element));else{let r=this._decorationElements.get(e);r||(e.onDispose((()=>this._removeDecoration(e))),r=this._createElement(e),e.element=r,this._decorationElements.set(e,r),this._container.appendChild(r)),r.style.top=t*this._renderService.dimensions.actualCellHeight+"px",r.style.display=this._altBufferIsActive?"none":"block",e.onRenderEmitter.fire(r)}}_refreshXPosition(e,t=e.element){var r;if(!t)return;const i=null!==(r=e.options.x)&&void 0!==r?r:0;"right"===(e.options.anchor||"left")?t.style.right=i?i*this._renderService.dimensions.actualCellWidth+"px":"":t.style.left=i?i*this._renderService.dimensions.actualCellWidth+"px":""}_removeDecoration(e){var t;null===(t=this._decorationElements.get(e))||void 0===t||t.remove(),this._decorationElements.delete(e)}};c=i([n(1,l.IBufferService),n(2,l.IDecorationService),n(3,o.IRenderService)],c),t.BufferDecorationRenderer=c},5871:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorZoneStore=void 0,t.ColorZoneStore=class{constructor(){this._zones=[],this._zonePool=[],this._zonePoolIndex=0,this._linePadding={full:0,left:0,center:0,right:0}}get zones(){return this._zonePool.length=Math.min(this._zonePool.length,this._zones.length),this._zones}clear(){this._zones.length=0,this._zonePoolIndex=0}addDecoration(e){if(e.options.overviewRulerOptions){for(const t of this._zones)if(t.color===e.options.overviewRulerOptions.color&&t.position===e.options.overviewRulerOptions.position){if(this._lineIntersectsZone(t,e.marker.line))return;if(this._lineAdjacentToZone(t,e.marker.line,e.options.overviewRulerOptions.position))return void this._addLineToZone(t,e.marker.line)}if(this._zonePoolIndex<this._zonePool.length)return this._zonePool[this._zonePoolIndex].color=e.options.overviewRulerOptions.color,this._zonePool[this._zonePoolIndex].position=e.options.overviewRulerOptions.position,this._zonePool[this._zonePoolIndex].startBufferLine=e.marker.line,this._zonePool[this._zonePoolIndex].endBufferLine=e.marker.line,void this._zones.push(this._zonePool[this._zonePoolIndex++]);this._zones.push({color:e.options.overviewRulerOptions.color,position:e.options.overviewRulerOptions.position,startBufferLine:e.marker.line,endBufferLine:e.marker.line}),this._zonePool.push(this._zones[this._zones.length-1]),this._zonePoolIndex++}}setPadding(e){this._linePadding=e}_lineIntersectsZone(e,t){return t>=e.startBufferLine&&t<=e.endBufferLine}_lineAdjacentToZone(e,t,r){return t>=e.startBufferLine-this._linePadding[r||"full"]&&t<=e.endBufferLine+this._linePadding[r||"full"]}_addLineToZone(e,t){e.startBufferLine=Math.min(e.startBufferLine,t),e.endBufferLine=Math.max(e.endBufferLine,t)}}},5744:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OverviewRulerRenderer=void 0;const s=r(5871),o=r(3656),a=r(4725),l=r(844),c=r(2585),u={full:0,left:0,center:0,right:0},h={full:0,left:0,center:0,right:0},d={full:0,left:0,center:0,right:0};let f=class extends l.Disposable{constructor(e,t,r,i,n,o,a){var l;super(),this._viewportElement=e,this._screenElement=t,this._bufferService=r,this._decorationService=i,this._renderService=n,this._optionsService=o,this._coreBrowseService=a,this._colorZoneStore=new s.ColorZoneStore,this._shouldUpdateDimensions=!0,this._shouldUpdateAnchor=!0,this._lastKnownBufferLength=0,this._canvas=document.createElement("canvas"),this._canvas.classList.add("xterm-decoration-overview-ruler"),this._refreshCanvasDimensions(),null===(l=this._viewportElement.parentElement)||void 0===l||l.insertBefore(this._canvas,this._viewportElement);const c=this._canvas.getContext("2d");if(!c)throw new Error("Ctx cannot be null");this._ctx=c,this._registerDecorationListeners(),this._registerBufferChangeListeners(),this._registerDimensionChangeListeners()}get _width(){return this._optionsService.options.overviewRulerWidth||0}_registerDecorationListeners(){this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh(void 0,!0)))),this.register(this._decorationService.onDecorationRemoved((()=>this._queueRefresh(void 0,!0))))}_registerBufferChangeListeners(){this.register(this._renderService.onRenderedViewportChange((()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._canvas.style.display=this._bufferService.buffer===this._bufferService.buffers.alt?"none":"block"}))),this.register(this._bufferService.onScroll((()=>{this._lastKnownBufferLength!==this._bufferService.buffers.normal.lines.length&&(this._refreshDrawHeightConstants(),this._refreshColorZonePadding())})))}_registerDimensionChangeListeners(){this.register(this._renderService.onRender((()=>{this._containerHeight&&this._containerHeight===this._screenElement.clientHeight||(this._queueRefresh(!0),this._containerHeight=this._screenElement.clientHeight)}))),this.register(this._optionsService.onOptionChange((e=>{"overviewRulerWidth"===e&&this._queueRefresh(!0)}))),this.register((0,o.addDisposableDomListener)(this._coreBrowseService.window,"resize",(()=>{this._queueRefresh(!0)}))),this._queueRefresh(!0)}dispose(){var e;null===(e=this._canvas)||void 0===e||e.remove(),super.dispose()}_refreshDrawConstants(){const e=Math.floor(this._canvas.width/3),t=Math.ceil(this._canvas.width/3);h.full=this._canvas.width,h.left=e,h.center=t,h.right=e,this._refreshDrawHeightConstants(),d.full=0,d.left=0,d.center=h.left,d.right=h.left+h.center}_refreshDrawHeightConstants(){u.full=Math.round(2*this._coreBrowseService.dpr);const e=this._canvas.height/this._bufferService.buffer.lines.length,t=Math.round(Math.max(Math.min(e,12),6)*this._coreBrowseService.dpr);u.left=t,u.center=t,u.right=t}_refreshColorZonePadding(){this._colorZoneStore.setPadding({full:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.full),left:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.left),center:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.center),right:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*u.right)}),this._lastKnownBufferLength=this._bufferService.buffers.normal.lines.length}_refreshCanvasDimensions(){this._canvas.style.width=`${this._width}px`,this._canvas.width=Math.round(this._width*this._coreBrowseService.dpr),this._canvas.style.height=`${this._screenElement.clientHeight}px`,this._canvas.height=Math.round(this._screenElement.clientHeight*this._coreBrowseService.dpr),this._refreshDrawConstants(),this._refreshColorZonePadding()}_refreshDecorations(){this._shouldUpdateDimensions&&this._refreshCanvasDimensions(),this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height),this._colorZoneStore.clear();for(const e of this._decorationService.decorations)this._colorZoneStore.addDecoration(e);this._ctx.lineWidth=1;const e=this._colorZoneStore.zones;for(const t of e)"full"!==t.position&&this._renderColorZone(t);for(const t of e)"full"===t.position&&this._renderColorZone(t);this._shouldUpdateDimensions=!1,this._shouldUpdateAnchor=!1}_renderColorZone(e){this._ctx.fillStyle=e.color,this._ctx.fillRect(d[e.position||"full"],Math.round((this._canvas.height-1)*(e.startBufferLine/this._bufferService.buffers.active.lines.length)-u[e.position||"full"]/2),h[e.position||"full"],Math.round((this._canvas.height-1)*((e.endBufferLine-e.startBufferLine)/this._bufferService.buffers.active.lines.length)+u[e.position||"full"]))}_queueRefresh(e,t){this._shouldUpdateDimensions=e||this._shouldUpdateDimensions,this._shouldUpdateAnchor=t||this._shouldUpdateAnchor,void 0===this._animationFrame&&(this._animationFrame=this._coreBrowseService.window.requestAnimationFrame((()=>{this._refreshDecorations(),this._animationFrame=void 0})))}};f=i([n(2,c.IBufferService),n(3,c.IDecorationService),n(4,a.IRenderService),n(5,c.IOptionsService),n(6,a.ICoreBrowserService)],f),t.OverviewRulerRenderer=f},2950:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CompositionHelper=void 0;const s=r(4725),o=r(2585),a=r(2584);let l=class{constructor(e,t,r,i,n,s){this._textarea=e,this._compositionView=t,this._bufferService=r,this._optionsService=i,this._coreService=n,this._renderService=s,this._isComposing=!1,this._isSendingComposition=!1,this._compositionPosition={start:0,end:0},this._dataAlreadySent=""}get isComposing(){return this._isComposing}compositionstart(){this._isComposing=!0,this._compositionPosition.start=this._textarea.value.length,this._compositionView.textContent="",this._dataAlreadySent="",this._compositionView.classList.add("active")}compositionupdate(e){this._compositionView.textContent=e.data,this.updateCompositionElements(),setTimeout((()=>{this._compositionPosition.end=this._textarea.value.length}),0)}compositionend(){this._finalizeComposition(!0)}keydown(e){if(this._isComposing||this._isSendingComposition){if(229===e.keyCode)return!1;if(16===e.keyCode||17===e.keyCode||18===e.keyCode)return!1;this._finalizeComposition(!1)}return 229!==e.keyCode||(this._handleAnyTextareaChanges(),!1)}_finalizeComposition(e){if(this._compositionView.classList.remove("active"),this._isComposing=!1,e){const e={start:this._compositionPosition.start,end:this._compositionPosition.end};this._isSendingComposition=!0,setTimeout((()=>{if(this._isSendingComposition){let t;this._isSendingComposition=!1,e.start+=this._dataAlreadySent.length,t=this._isComposing?this._textarea.value.substring(e.start,e.end):this._textarea.value.substring(e.start),t.length>0&&this._coreService.triggerDataEvent(t,!0)}}),0)}else{this._isSendingComposition=!1;const e=this._textarea.value.substring(this._compositionPosition.start,this._compositionPosition.end);this._coreService.triggerDataEvent(e,!0)}}_handleAnyTextareaChanges(){const e=this._textarea.value;setTimeout((()=>{if(!this._isComposing){const t=this._textarea.value,r=t.replace(e,"");this._dataAlreadySent=r,t.length>e.length?this._coreService.triggerDataEvent(r,!0):t.length<e.length?this._coreService.triggerDataEvent(`${a.C0.DEL}`,!0):t.length===e.length&&t!==e&&this._coreService.triggerDataEvent(t,!0)}}),0)}updateCompositionElements(e){if(this._isComposing){if(this._bufferService.buffer.isCursorInViewport){const e=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),t=this._renderService.dimensions.actualCellHeight,r=this._bufferService.buffer.y*this._renderService.dimensions.actualCellHeight,i=e*this._renderService.dimensions.actualCellWidth;this._compositionView.style.left=i+"px",this._compositionView.style.top=r+"px",this._compositionView.style.height=t+"px",this._compositionView.style.lineHeight=t+"px",this._compositionView.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._compositionView.style.fontSize=this._optionsService.rawOptions.fontSize+"px";const n=this._compositionView.getBoundingClientRect();this._textarea.style.left=i+"px",this._textarea.style.top=r+"px",this._textarea.style.width=Math.max(n.width,1)+"px",this._textarea.style.height=Math.max(n.height,1)+"px",this._textarea.style.lineHeight=n.height+"px"}e||setTimeout((()=>this.updateCompositionElements(!0)),0)}}};l=i([n(2,o.IBufferService),n(3,o.IOptionsService),n(4,o.ICoreService),n(5,s.IRenderService)],l),t.CompositionHelper=l},9806:(e,t)=>{function r(e,t,r){const i=r.getBoundingClientRect(),n=e.getComputedStyle(r),s=parseInt(n.getPropertyValue("padding-left")),o=parseInt(n.getPropertyValue("padding-top"));return[t.clientX-i.left-s,t.clientY-i.top-o]}Object.defineProperty(t,"__esModule",{value:!0}),t.getCoords=t.getCoordsRelativeToElement=void 0,t.getCoordsRelativeToElement=r,t.getCoords=function(e,t,i,n,s,o,a,l,c){if(!o)return;const u=r(e,t,i);return u?(u[0]=Math.ceil((u[0]+(c?a/2:0))/a),u[1]=Math.ceil(u[1]/l),u[0]=Math.min(Math.max(u[0],1),n+(c?1:0)),u[1]=Math.min(Math.max(u[1],1),s),u):void 0}},9504:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.moveToCellSequence=void 0;const i=r(2584);function n(e,t,r,i){const n=e-s(r,e),a=t-s(r,t),u=Math.abs(n-a)-function(e,t,r){let i=0;const n=e-s(r,e),a=t-s(r,t);for(let s=0;s<Math.abs(n-a);s++){const a="A"===o(e,t)?-1:1,l=r.buffer.lines.get(n+a*s);(null==l?void 0:l.isWrapped)&&i++}return i}(e,t,r);return c(u,l(o(e,t),i))}function s(e,t){let r=0,i=e.buffer.lines.get(t),n=null==i?void 0:i.isWrapped;for(;n&&t>=0&&t<e.rows;)r++,i=e.buffer.lines.get(--t),n=null==i?void 0:i.isWrapped;return r}function o(e,t){return e>t?"A":"B"}function a(e,t,r,i,n,s){let o=e,a=t,l="";for(;o!==r||a!==i;)o+=n?1:-1,n&&o>s.cols-1?(l+=s.buffer.translateBufferLineToString(a,!1,e,o),o=0,e=0,a++):!n&&o<0&&(l+=s.buffer.translateBufferLineToString(a,!1,0,e+1),o=s.cols-1,e=o,a--);return l+s.buffer.translateBufferLineToString(a,!1,e,o)}function l(e,t){const r=t?"O":"[";return i.C0.ESC+r+e}function c(e,t){e=Math.floor(e);let r="";for(let i=0;i<e;i++)r+=t;return r}t.moveToCellSequence=function(e,t,r,i){const o=r.buffer.x,u=r.buffer.y;if(!r.buffer.hasScrollback)return function(e,t,r,i,o,u){return 0===n(t,i,o,u).length?"":c(a(e,t,e,t-s(o,t),!1,o).length,l("D",u))}(o,u,0,t,r,i)+n(u,t,r,i)+function(e,t,r,i,o,u){let h;h=n(t,i,o,u).length>0?i-s(o,i):t;const d=i,f=function(e,t,r,i,o,a){let l;return l=n(r,i,o,a).length>0?i-s(o,i):t,e<r&&l<=i||e>=r&&l<i?"C":"D"}(e,t,r,i,o,u);return c(a(e,h,r,d,"C"===f,o).length,l(f,u))}(o,u,e,t,r,i);let h;if(u===t)return h=o>e?"D":"C",c(Math.abs(o-e),l(h,i));h=u>t?"D":"C";const d=Math.abs(u-t);return c(function(e,t){return t.cols-e}(u>t?e:o,r)+(d-1)*r.cols+1+((u>t?o:e)-1),l(h,i))}},8036:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TEXT_BASELINE=t.DIM_OPACITY=t.INVERTED_DEFAULT_COLOR=void 0;const i=r(6114);t.INVERTED_DEFAULT_COLOR=257,t.DIM_OPACITY=.5,t.TEXT_BASELINE=i.isFirefox||i.isLegacyEdge?"bottom":"ideographic"},1752:(e,t)=>{function r(e){return 57508<=e&&e<=57558}Object.defineProperty(t,"__esModule",{value:!0}),t.excludeFromContrastRatioDemands=t.isRestrictedPowerlineGlyph=t.isPowerlineGlyph=t.throwIfFalsy=void 0,t.throwIfFalsy=function(e){if(!e)throw new Error("value must not be falsy");return e},t.isPowerlineGlyph=r,t.isRestrictedPowerlineGlyph=function(e){return 57520<=e&&e<=57527},t.excludeFromContrastRatioDemands=function(e){return r(e)||function(e){return 9472<=e&&e<=9631}(e)}},1296:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomRenderer=void 0;const s=r(3787),o=r(8036),a=r(844),l=r(4725),c=r(2585),u=r(8460),h=r(8055),d=r(9631),f="xterm-dom-renderer-owner-",p="xterm-focus";let v=1,g=class extends a.Disposable{constructor(e,t,r,i,n,o,a,l,c,u){super(),this._colors=e,this._element=t,this._screenElement=r,this._viewportElement=i,this._linkifier2=n,this._charSizeService=a,this._optionsService=l,this._bufferService=c,this._coreBrowserService=u,this._terminalClass=v++,this._rowElements=[],this._rowContainer=document.createElement("div"),this._rowContainer.classList.add("xterm-rows"),this._rowContainer.style.lineHeight="normal",this._rowContainer.setAttribute("aria-hidden","true"),this._refreshRowElements(this._bufferService.cols,this._bufferService.rows),this._selectionContainer=document.createElement("div"),this._selectionContainer.classList.add("xterm-selection"),this._selectionContainer.setAttribute("aria-hidden","true"),this.dimensions={scaledCharWidth:0,scaledCharHeight:0,scaledCellWidth:0,scaledCellHeight:0,scaledCharLeft:0,scaledCharTop:0,scaledCanvasWidth:0,scaledCanvasHeight:0,canvasWidth:0,canvasHeight:0,actualCellWidth:0,actualCellHeight:0},this._updateDimensions(),this._injectCss(),this._rowFactory=o.createInstance(s.DomRendererRowFactory,document,this._colors),this._element.classList.add(f+this._terminalClass),this._screenElement.appendChild(this._rowContainer),this._screenElement.appendChild(this._selectionContainer),this.register(this._linkifier2.onShowLinkUnderline((e=>this._onLinkHover(e)))),this.register(this._linkifier2.onHideLinkUnderline((e=>this._onLinkLeave(e))))}get onRequestRedraw(){return(new u.EventEmitter).event}dispose(){this._element.classList.remove(f+this._terminalClass),(0,d.removeElementFromParent)(this._rowContainer,this._selectionContainer,this._themeStyleElement,this._dimensionsStyleElement),super.dispose()}_updateDimensions(){const e=this._coreBrowserService.dpr;this.dimensions.scaledCharWidth=this._charSizeService.width*e,this.dimensions.scaledCharHeight=Math.ceil(this._charSizeService.height*e),this.dimensions.scaledCellWidth=this.dimensions.scaledCharWidth+Math.round(this._optionsService.rawOptions.letterSpacing),this.dimensions.scaledCellHeight=Math.floor(this.dimensions.scaledCharHeight*this._optionsService.rawOptions.lineHeight),this.dimensions.scaledCharLeft=0,this.dimensions.scaledCharTop=0,this.dimensions.scaledCanvasWidth=this.dimensions.scaledCellWidth*this._bufferService.cols,this.dimensions.scaledCanvasHeight=this.dimensions.scaledCellHeight*this._bufferService.rows,this.dimensions.canvasWidth=Math.round(this.dimensions.scaledCanvasWidth/e),this.dimensions.canvasHeight=Math.round(this.dimensions.scaledCanvasHeight/e),this.dimensions.actualCellWidth=this.dimensions.canvasWidth/this._bufferService.cols,this.dimensions.actualCellHeight=this.dimensions.canvasHeight/this._bufferService.rows;for(const e of this._rowElements)e.style.width=`${this.dimensions.canvasWidth}px`,e.style.height=`${this.dimensions.actualCellHeight}px`,e.style.lineHeight=`${this.dimensions.actualCellHeight}px`,e.style.overflow="hidden";this._dimensionsStyleElement||(this._dimensionsStyleElement=document.createElement("style"),this._screenElement.appendChild(this._dimensionsStyleElement));const t=`${this._terminalSelector} .xterm-rows span { display: inline-block; height: 100%; vertical-align: top; width: ${this.dimensions.actualCellWidth}px}`;this._dimensionsStyleElement.textContent=t,this._selectionContainer.style.height=this._viewportElement.style.height,this._screenElement.style.width=`${this.dimensions.canvasWidth}px`,this._screenElement.style.height=`${this.dimensions.canvasHeight}px`}setColors(e){this._colors=e,this._injectCss()}_injectCss(){this._themeStyleElement||(this._themeStyleElement=document.createElement("style"),this._screenElement.appendChild(this._themeStyleElement));let e=`${this._terminalSelector} .xterm-rows { color: ${this._colors.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px;}`;e+=`${this._terminalSelector} span:not(.${s.BOLD_CLASS}) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.${s.BOLD_CLASS} { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.${s.ITALIC_CLASS} { font-style: italic;}`,e+="@keyframes blink_box_shadow_"+this._terminalClass+" { 50% {  box-shadow: none; }}",e+="@keyframes blink_block_"+this._terminalClass+" { 0% {"+`  background-color: ${this._colors.cursor.css};`+`  color: ${this._colors.cursorAccent.css}; } 50% {`+`  background-color: ${this._colors.cursorAccent.css};`+`  color: ${this._colors.cursor.css}; }}`,e+=`${this._terminalSelector} .xterm-rows:not(.xterm-focus) .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_BLOCK_CLASS} { outline: 1px solid ${this._colors.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .xterm-rows.xterm-focus .${s.CURSOR_CLASS}.${s.CURSOR_BLINK_CLASS}:not(.${s.CURSOR_STYLE_BLOCK_CLASS}) { animation: blink_box_shadow_`+this._terminalClass+" 1s step-end infinite;}"+`${this._terminalSelector} .xterm-rows.xterm-focus .${s.CURSOR_CLASS}.${s.CURSOR_BLINK_CLASS}.${s.CURSOR_STYLE_BLOCK_CLASS} { animation: blink_block_`+this._terminalClass+" 1s step-end infinite;}"+`${this._terminalSelector} .xterm-rows.xterm-focus .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_BLOCK_CLASS} {`+` background-color: ${this._colors.cursor.css};`+` color: ${this._colors.cursorAccent.css};}`+`${this._terminalSelector} .xterm-rows .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_BAR_CLASS} {`+` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;}`+`${this._terminalSelector} .xterm-rows .${s.CURSOR_CLASS}.${s.CURSOR_STYLE_UNDERLINE_CLASS} {`+` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;}`,e+=`${this._terminalSelector} .xterm-selection { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .xterm-selection div { position: absolute; background-color: ${this._colors.selectionBackgroundOpaque.css};}${this._terminalSelector} .xterm-selection div { position: absolute; background-color: ${this._colors.selectionInactiveBackgroundOpaque.css};}`,this._colors.ansi.forEach(((t,r)=>{e+=`${this._terminalSelector} .xterm-fg-${r} { color: ${t.css}; }${this._terminalSelector} .xterm-bg-${r} { background-color: ${t.css}; }`})),e+=`${this._terminalSelector} .xterm-fg-${o.INVERTED_DEFAULT_COLOR} { color: ${h.color.opaque(this._colors.background).css}; }${this._terminalSelector} .xterm-bg-${o.INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`,this._themeStyleElement.textContent=e}onDevicePixelRatioChange(){this._updateDimensions()}_refreshRowElements(e,t){for(let e=this._rowElements.length;e<=t;e++){const e=document.createElement("div");this._rowContainer.appendChild(e),this._rowElements.push(e)}for(;this._rowElements.length>t;)this._rowContainer.removeChild(this._rowElements.pop())}onResize(e,t){this._refreshRowElements(e,t),this._updateDimensions()}onCharSizeChanged(){this._updateDimensions()}onBlur(){this._rowContainer.classList.remove(p)}onFocus(){this._rowContainer.classList.add(p)}onSelectionChanged(e,t,r){for(;this._selectionContainer.children.length;)this._selectionContainer.removeChild(this._selectionContainer.children[0]);if(this._rowFactory.onSelectionChanged(e,t,r),this.renderRows(0,this._bufferService.rows-1),!e||!t)return;const i=e[1]-this._bufferService.buffer.ydisp,n=t[1]-this._bufferService.buffer.ydisp,s=Math.max(i,0),o=Math.min(n,this._bufferService.rows-1);if(s>=this._bufferService.rows||o<0)return;const a=document.createDocumentFragment();if(r){const r=e[0]>t[0];a.appendChild(this._createSelectionElement(s,r?t[0]:e[0],r?e[0]:t[0],o-s+1))}else{const r=i===s?e[0]:0,l=s===n?t[0]:this._bufferService.cols;a.appendChild(this._createSelectionElement(s,r,l));const c=o-s-1;if(a.appendChild(this._createSelectionElement(s+1,0,this._bufferService.cols,c)),s!==o){const e=n===o?t[0]:this._bufferService.cols;a.appendChild(this._createSelectionElement(o,0,e))}}this._selectionContainer.appendChild(a)}_createSelectionElement(e,t,r,i=1){const n=document.createElement("div");return n.style.height=i*this.dimensions.actualCellHeight+"px",n.style.top=e*this.dimensions.actualCellHeight+"px",n.style.left=t*this.dimensions.actualCellWidth+"px",n.style.width=this.dimensions.actualCellWidth*(r-t)+"px",n}onCursorMove(){}onOptionsChanged(){this._updateDimensions(),this._injectCss()}clear(){for(const e of this._rowElements)e.innerText=""}renderRows(e,t){const r=this._bufferService.buffer.ybase+this._bufferService.buffer.y,i=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),n=this._optionsService.rawOptions.cursorBlink;for(let s=e;s<=t;s++){const e=this._rowElements[s];e.innerText="";const t=s+this._bufferService.buffer.ydisp,o=this._bufferService.buffer.lines.get(t),a=this._optionsService.rawOptions.cursorStyle;e.appendChild(this._rowFactory.createRow(o,t,t===r,a,i,n,this.dimensions.actualCellWidth,this._bufferService.cols))}}get _terminalSelector(){return`.${f}${this._terminalClass}`}_onLinkHover(e){this._setCellUnderline(e.x1,e.x2,e.y1,e.y2,e.cols,!0)}_onLinkLeave(e){this._setCellUnderline(e.x1,e.x2,e.y1,e.y2,e.cols,!1)}_setCellUnderline(e,t,r,i,n,s){for(;e!==t||r!==i;){const t=this._rowElements[r];if(!t)return;const i=t.children[e];i&&(i.style.textDecoration=s?"underline":"none"),++e>=n&&(e=0,r++)}}};g=i([n(5,c.IInstantiationService),n(6,l.ICharSizeService),n(7,c.IOptionsService),n(8,c.IBufferService),n(9,l.ICoreBrowserService)],g),t.DomRenderer=g},3787:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomRendererRowFactory=t.CURSOR_STYLE_UNDERLINE_CLASS=t.CURSOR_STYLE_BAR_CLASS=t.CURSOR_STYLE_BLOCK_CLASS=t.CURSOR_BLINK_CLASS=t.CURSOR_CLASS=t.STRIKETHROUGH_CLASS=t.UNDERLINE_CLASS=t.ITALIC_CLASS=t.DIM_CLASS=t.BOLD_CLASS=void 0;const s=r(8036),o=r(643),a=r(511),l=r(2585),c=r(8055),u=r(4725),h=r(4269),d=r(1752),f=r(3734);t.BOLD_CLASS="xterm-bold",t.DIM_CLASS="xterm-dim",t.ITALIC_CLASS="xterm-italic",t.UNDERLINE_CLASS="xterm-underline",t.STRIKETHROUGH_CLASS="xterm-strikethrough",t.CURSOR_CLASS="xterm-cursor",t.CURSOR_BLINK_CLASS="xterm-cursor-blink",t.CURSOR_STYLE_BLOCK_CLASS="xterm-cursor-block",t.CURSOR_STYLE_BAR_CLASS="xterm-cursor-bar",t.CURSOR_STYLE_UNDERLINE_CLASS="xterm-cursor-underline";let p=class{constructor(e,t,r,i,n,s,o){this._document=e,this._colors=t,this._characterJoinerService=r,this._optionsService=i,this._coreBrowserService=n,this._coreService=s,this._decorationService=o,this._workCell=new a.CellData,this._columnSelectMode=!1}setColors(e){this._colors=e}onSelectionChanged(e,t,r){this._selectionStart=e,this._selectionEnd=t,this._columnSelectMode=r}createRow(e,r,i,n,a,l,u,d){const p=this._document.createDocumentFragment(),g=this._characterJoinerService.getJoinedCharacters(r);let _=0;for(let t=Math.min(e.length,d)-1;t>=0;t--)if(e.loadCell(t,this._workCell).getCode()!==o.NULL_CELL_CODE||i&&t===a){_=t+1;break}for(let d=0;d<_;d++){e.loadCell(d,this._workCell);let _=this._workCell.getWidth();if(0===_)continue;let m=!1,b=d,y=this._workCell;if(g.length>0&&d===g[0][0]){m=!0;const t=g.shift();y=new h.JoinedCellData(this._workCell,e.translateToString(!0,t[0],t[1]),t[1]-t[0]),b=t[1]-1,_=y.getWidth()}const S=this._document.createElement("span");if(_>1&&(S.style.width=u*_+"px"),m&&(S.style.display="inline",a>=d&&a<=b&&(a=d)),!this._coreService.isCursorHidden&&i&&d===a)switch(S.classList.add(t.CURSOR_CLASS),l&&S.classList.add(t.CURSOR_BLINK_CLASS),n){case"bar":S.classList.add(t.CURSOR_STYLE_BAR_CLASS);break;case"underline":S.classList.add(t.CURSOR_STYLE_UNDERLINE_CLASS);break;default:S.classList.add(t.CURSOR_STYLE_BLOCK_CLASS)}if(y.isBold()&&S.classList.add(t.BOLD_CLASS),y.isItalic()&&S.classList.add(t.ITALIC_CLASS),y.isDim()&&S.classList.add(t.DIM_CLASS),y.isInvisible()?S.textContent=o.WHITESPACE_CELL_CHAR:S.textContent=y.getChars()||o.WHITESPACE_CELL_CHAR,y.isUnderline()&&(S.classList.add(`${t.UNDERLINE_CLASS}-${y.extended.underlineStyle}`)," "===S.textContent&&(S.innerHTML="&nbsp;"),!y.isUnderlineColorDefault()))if(y.isUnderlineColorRGB())S.style.textDecorationColor=`rgb(${f.AttributeData.toColorRGB(y.getUnderlineColor()).join(",")})`;else{let e=y.getUnderlineColor();this._optionsService.rawOptions.drawBoldTextInBrightColors&&y.isBold()&&e<8&&(e+=8),S.style.textDecorationColor=this._colors.ansi[e].css}y.isStrikethrough()&&S.classList.add(t.STRIKETHROUGH_CLASS);let C=y.getFgColor(),w=y.getFgColorMode(),k=y.getBgColor(),E=y.getBgColorMode();const x=!!y.isInverse();if(x){const e=C;C=k,k=e;const t=w;w=E,E=t}let A,T,R=!1;this._decorationService.forEachDecorationAtCell(d,r,void 0,(e=>{"top"!==e.options.layer&&R||(e.backgroundColorRGB&&(E=50331648,k=e.backgroundColorRGB.rgba>>8&16777215,A=e.backgroundColorRGB),e.foregroundColorRGB&&(w=50331648,C=e.foregroundColorRGB.rgba>>8&16777215,T=e.foregroundColorRGB),R="top"===e.options.layer)}));const L=this._isCellInSelection(d,r);let D;switch(R||this._colors.selectionForeground&&L&&(w=50331648,C=this._colors.selectionForeground.rgba>>8&16777215,T=this._colors.selectionForeground),L&&(A=this._coreBrowserService.isFocused?this._colors.selectionBackgroundOpaque:this._colors.selectionInactiveBackgroundOpaque,R=!0),R&&S.classList.add("xterm-decoration-top"),E){case 16777216:case 33554432:D=this._colors.ansi[k],S.classList.add(`xterm-bg-${k}`);break;case 50331648:D=c.rgba.toColor(k>>16,k>>8&255,255&k),this._addStyle(S,`background-color:#${v((k>>>0).toString(16),"0",6)}`);break;default:x?(D=this._colors.foreground,S.classList.add(`xterm-bg-${s.INVERTED_DEFAULT_COLOR}`)):D=this._colors.background}switch(A||y.isDim()&&(A=c.color.multiplyOpacity(D,.5)),w){case 16777216:case 33554432:y.isBold()&&C<8&&this._optionsService.rawOptions.drawBoldTextInBrightColors&&(C+=8),this._applyMinimumContrast(S,D,this._colors.ansi[C],y,A,void 0)||S.classList.add(`xterm-fg-${C}`);break;case 50331648:const e=c.rgba.toColor(C>>16&255,C>>8&255,255&C);this._applyMinimumContrast(S,D,e,y,A,T)||this._addStyle(S,`color:#${v(C.toString(16),"0",6)}`);break;default:this._applyMinimumContrast(S,D,this._colors.foreground,y,A,void 0)||x&&S.classList.add(`xterm-fg-${s.INVERTED_DEFAULT_COLOR}`)}p.appendChild(S),d=b}return p}_applyMinimumContrast(e,t,r,i,n,s){if(1===this._optionsService.rawOptions.minimumContrastRatio||(0,d.excludeFromContrastRatioDemands)(i.getCode()))return!1;let o;return n||s||(o=this._colors.contrastCache.getColor(t.rgba,r.rgba)),void 0===o&&(o=c.color.ensureContrastRatio(n||t,s||r,this._optionsService.rawOptions.minimumContrastRatio),this._colors.contrastCache.setColor((n||t).rgba,(s||r).rgba,null!=o?o:null)),!!o&&(this._addStyle(e,`color:${o.css}`),!0)}_addStyle(e,t){e.setAttribute("style",`${e.getAttribute("style")||""}${t};`)}_isCellInSelection(e,t){const r=this._selectionStart,i=this._selectionEnd;return!(!r||!i)&&(this._columnSelectMode?r[0]<=i[0]?e>=r[0]&&t>=r[1]&&e<i[0]&&t<=i[1]:e<r[0]&&t>=r[1]&&e>=i[0]&&t<=i[1]:t>r[1]&&t<i[1]||r[1]===i[1]&&t===r[1]&&e>=r[0]&&e<i[0]||r[1]<i[1]&&t===i[1]&&e<i[0]||r[1]<i[1]&&t===r[1]&&e>=r[0])}};function v(e,t,r){for(;e.length<r;)e=t+e;return e}p=i([n(2,u.ICharacterJoinerService),n(3,l.IOptionsService),n(4,u.ICoreBrowserService),n(5,l.ICoreService),n(6,l.IDecorationService)],p),t.DomRendererRowFactory=p},456:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionModel=void 0,t.SelectionModel=class{constructor(e){this._bufferService=e,this.isSelectAllActive=!1,this.selectionStartLength=0}clearSelection(){this.selectionStart=void 0,this.selectionEnd=void 0,this.isSelectAllActive=!1,this.selectionStartLength=0}get finalSelectionStart(){return this.isSelectAllActive?[0,0]:this.selectionEnd&&this.selectionStart&&this.areSelectionValuesReversed()?this.selectionEnd:this.selectionStart}get finalSelectionEnd(){if(this.isSelectAllActive)return[this._bufferService.cols,this._bufferService.buffer.ybase+this._bufferService.rows-1];if(this.selectionStart){if(!this.selectionEnd||this.areSelectionValuesReversed()){const e=this.selectionStart[0]+this.selectionStartLength;return e>this._bufferService.cols?e%this._bufferService.cols==0?[this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)-1]:[e%this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)]:[e,this.selectionStart[1]]}if(this.selectionStartLength&&this.selectionEnd[1]===this.selectionStart[1]){const e=this.selectionStart[0]+this.selectionStartLength;return e>this._bufferService.cols?[e%this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)]:[Math.max(e,this.selectionEnd[0]),this.selectionEnd[1]]}return this.selectionEnd}}areSelectionValuesReversed(){const e=this.selectionStart,t=this.selectionEnd;return!(!e||!t)&&(e[1]>t[1]||e[1]===t[1]&&e[0]>t[0])}onTrim(e){return this.selectionStart&&(this.selectionStart[1]-=e),this.selectionEnd&&(this.selectionEnd[1]-=e),this.selectionEnd&&this.selectionEnd[1]<0?(this.clearSelection(),!0):(this.selectionStart&&this.selectionStart[1]<0&&(this.selectionStart[1]=0),!1)}}},428:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CharSizeService=void 0;const s=r(2585),o=r(8460);let a=class{constructor(e,t,r){this._optionsService=r,this.width=0,this.height=0,this._onCharSizeChange=new o.EventEmitter,this._measureStrategy=new l(e,t,this._optionsService)}get hasValidSize(){return this.width>0&&this.height>0}get onCharSizeChange(){return this._onCharSizeChange.event}measure(){const e=this._measureStrategy.measure();e.width===this.width&&e.height===this.height||(this.width=e.width,this.height=e.height,this._onCharSizeChange.fire())}};a=i([n(2,s.IOptionsService)],a),t.CharSizeService=a;class l{constructor(e,t,r){this._document=e,this._parentElement=t,this._optionsService=r,this._result={width:0,height:0},this._measureElement=this._document.createElement("span"),this._measureElement.classList.add("xterm-char-measure-element"),this._measureElement.textContent="W",this._measureElement.setAttribute("aria-hidden","true"),this._parentElement.appendChild(this._measureElement)}measure(){this._measureElement.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._measureElement.style.fontSize=`${this._optionsService.rawOptions.fontSize}px`;const e=this._measureElement.getBoundingClientRect();return 0!==e.width&&0!==e.height&&(this._result.width=e.width,this._result.height=Math.ceil(e.height)),this._result}}},4269:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CharacterJoinerService=t.JoinedCellData=void 0;const s=r(3734),o=r(643),a=r(511),l=r(2585);class c extends s.AttributeData{constructor(e,t,r){super(),this.content=0,this.combinedData="",this.fg=e.fg,this.bg=e.bg,this.combinedData=t,this._width=r}isCombined(){return 2097152}getWidth(){return this._width}getChars(){return this.combinedData}getCode(){return 2097151}setFromCharData(e){throw new Error("not implemented")}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}t.JoinedCellData=c;let u=class e{constructor(e){this._bufferService=e,this._characterJoiners=[],this._nextCharacterJoinerId=0,this._workCell=new a.CellData}register(e){const t={id:this._nextCharacterJoinerId++,handler:e};return this._characterJoiners.push(t),t.id}deregister(e){for(let t=0;t<this._characterJoiners.length;t++)if(this._characterJoiners[t].id===e)return this._characterJoiners.splice(t,1),!0;return!1}getJoinedCharacters(e){if(0===this._characterJoiners.length)return[];const t=this._bufferService.buffer.lines.get(e);if(!t||0===t.length)return[];const r=[],i=t.translateToString(!0);let n=0,s=0,a=0,l=t.getFg(0),c=t.getBg(0);for(let e=0;e<t.getTrimmedLength();e++)if(t.loadCell(e,this._workCell),0!==this._workCell.getWidth()){if(this._workCell.fg!==l||this._workCell.bg!==c){if(e-n>1){const e=this._getJoinedRanges(i,a,s,t,n);for(let t=0;t<e.length;t++)r.push(e[t])}n=e,a=s,l=this._workCell.fg,c=this._workCell.bg}s+=this._workCell.getChars().length||o.WHITESPACE_CELL_CHAR.length}if(this._bufferService.cols-n>1){const e=this._getJoinedRanges(i,a,s,t,n);for(let t=0;t<e.length;t++)r.push(e[t])}return r}_getJoinedRanges(t,r,i,n,s){const o=t.substring(r,i);let a=[];try{a=this._characterJoiners[0].handler(o)}catch(e){console.error(e)}for(let t=1;t<this._characterJoiners.length;t++)try{const r=this._characterJoiners[t].handler(o);for(let t=0;t<r.length;t++)e._mergeRanges(a,r[t])}catch(e){console.error(e)}return this._stringRangesToCellRanges(a,n,s),a}_stringRangesToCellRanges(e,t,r){let i=0,n=!1,s=0,a=e[i];if(a){for(let l=r;l<this._bufferService.cols;l++){const r=t.getWidth(l),c=t.getString(l).length||o.WHITESPACE_CELL_CHAR.length;if(0!==r){if(!n&&a[0]<=s&&(a[0]=l,n=!0),a[1]<=s){if(a[1]=l,a=e[++i],!a)break;a[0]<=s?(a[0]=l,n=!0):n=!1}s+=c}}a&&(a[1]=this._bufferService.cols)}}static _mergeRanges(e,t){let r=!1;for(let i=0;i<e.length;i++){const n=e[i];if(r){if(t[1]<=n[0])return e[i-1][1]=t[1],e;if(t[1]<=n[1])return e[i-1][1]=Math.max(t[1],n[1]),e.splice(i,1),e;e.splice(i,1),i--}else{if(t[1]<=n[0])return e.splice(i,0,t),e;if(t[1]<=n[1])return n[0]=Math.min(t[0],n[0]),e;t[0]<n[1]&&(n[0]=Math.min(t[0],n[0]),r=!0)}}return r?e[e.length-1][1]=t[1]:e.push(t),e}};u=i([n(0,l.IBufferService)],u),t.CharacterJoinerService=u},5114:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreBrowserService=void 0,t.CoreBrowserService=class{constructor(e,t){this._textarea=e,this.window=t}get dpr(){return this.window.devicePixelRatio}get isFocused(){return(this._textarea.getRootNode?this._textarea.getRootNode():this._textarea.ownerDocument).activeElement===this._textarea&&this._textarea.ownerDocument.hasFocus()}}},8934:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.MouseService=void 0;const s=r(4725),o=r(9806);let a=class{constructor(e,t){this._renderService=e,this._charSizeService=t}getCoords(e,t,r,i,n){return(0,o.getCoords)(window,e,t,r,i,this._charSizeService.hasValidSize,this._renderService.dimensions.actualCellWidth,this._renderService.dimensions.actualCellHeight,n)}getMouseReportCoords(e,t){const r=(0,o.getCoordsRelativeToElement)(window,e,t);if(!(!this._charSizeService.hasValidSize||r[0]<0||r[1]<0||r[0]>=this._renderService.dimensions.canvasWidth||r[1]>=this._renderService.dimensions.canvasHeight))return{col:Math.floor(r[0]/this._renderService.dimensions.actualCellWidth),row:Math.floor(r[1]/this._renderService.dimensions.actualCellHeight),x:Math.floor(r[0]),y:Math.floor(r[1])}}};a=i([n(0,s.IRenderService),n(1,s.ICharSizeService)],a),t.MouseService=a},3230:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.RenderService=void 0;const s=r(6193),o=r(8460),a=r(844),l=r(5596),c=r(3656),u=r(2585),h=r(4725);let d=class extends a.Disposable{constructor(e,t,r,i,n,a,u,h){if(super(),this._renderer=e,this._rowCount=t,this._charSizeService=n,this._isPaused=!1,this._needsFullRefresh=!1,this._isNextRenderRedrawOnly=!0,this._needsSelectionRefresh=!1,this._canvasWidth=0,this._canvasHeight=0,this._selectionState={start:void 0,end:void 0,columnSelectMode:!1},this._onDimensionsChange=new o.EventEmitter,this._onRenderedViewportChange=new o.EventEmitter,this._onRender=new o.EventEmitter,this._onRefreshRequest=new o.EventEmitter,this.register({dispose:()=>this._renderer.dispose()}),this._renderDebouncer=new s.RenderDebouncer(h.window,((e,t)=>this._renderRows(e,t))),this.register(this._renderDebouncer),this._screenDprMonitor=new l.ScreenDprMonitor(h.window),this._screenDprMonitor.setListener((()=>this.onDevicePixelRatioChange())),this.register(this._screenDprMonitor),this.register(u.onResize((()=>this._fullRefresh()))),this.register(u.buffers.onBufferActivate((()=>{var e;return null===(e=this._renderer)||void 0===e?void 0:e.clear()}))),this.register(i.onOptionChange((()=>this._handleOptionsChanged()))),this.register(this._charSizeService.onCharSizeChange((()=>this.onCharSizeChanged()))),this.register(a.onDecorationRegistered((()=>this._fullRefresh()))),this.register(a.onDecorationRemoved((()=>this._fullRefresh()))),this._renderer.onRequestRedraw((e=>this.refreshRows(e.start,e.end,!0))),this.register((0,c.addDisposableDomListener)(h.window,"resize",(()=>this.onDevicePixelRatioChange()))),"IntersectionObserver"in h.window){const e=new h.window.IntersectionObserver((e=>this._onIntersectionChange(e[e.length-1])),{threshold:0});e.observe(r),this.register({dispose:()=>e.disconnect()})}}get onDimensionsChange(){return this._onDimensionsChange.event}get onRenderedViewportChange(){return this._onRenderedViewportChange.event}get onRender(){return this._onRender.event}get onRefreshRequest(){return this._onRefreshRequest.event}get dimensions(){return this._renderer.dimensions}_onIntersectionChange(e){this._isPaused=void 0===e.isIntersecting?0===e.intersectionRatio:!e.isIntersecting,this._isPaused||this._charSizeService.hasValidSize||this._charSizeService.measure(),!this._isPaused&&this._needsFullRefresh&&(this.refreshRows(0,this._rowCount-1),this._needsFullRefresh=!1)}refreshRows(e,t,r=!1){this._isPaused?this._needsFullRefresh=!0:(r||(this._isNextRenderRedrawOnly=!1),this._renderDebouncer.refresh(e,t,this._rowCount))}_renderRows(e,t){this._renderer.renderRows(e,t),this._needsSelectionRefresh&&(this._renderer.onSelectionChanged(this._selectionState.start,this._selectionState.end,this._selectionState.columnSelectMode),this._needsSelectionRefresh=!1),this._isNextRenderRedrawOnly||this._onRenderedViewportChange.fire({start:e,end:t}),this._onRender.fire({start:e,end:t}),this._isNextRenderRedrawOnly=!0}resize(e,t){this._rowCount=t,this._fireOnCanvasResize()}_handleOptionsChanged(){this._renderer.onOptionsChanged(),this.refreshRows(0,this._rowCount-1),this._fireOnCanvasResize()}_fireOnCanvasResize(){this._renderer.dimensions.canvasWidth===this._canvasWidth&&this._renderer.dimensions.canvasHeight===this._canvasHeight||this._onDimensionsChange.fire(this._renderer.dimensions)}dispose(){super.dispose()}setRenderer(e){this._renderer.dispose(),this._renderer=e,this._renderer.onRequestRedraw((e=>this.refreshRows(e.start,e.end,!0))),this._needsSelectionRefresh=!0,this._fullRefresh()}addRefreshCallback(e){return this._renderDebouncer.addRefreshCallback(e)}_fullRefresh(){this._isPaused?this._needsFullRefresh=!0:this.refreshRows(0,this._rowCount-1)}clearTextureAtlas(){var e,t;null===(t=null===(e=this._renderer)||void 0===e?void 0:e.clearTextureAtlas)||void 0===t||t.call(e),this._fullRefresh()}setColors(e){this._renderer.setColors(e),this._fullRefresh()}onDevicePixelRatioChange(){this._charSizeService.measure(),this._renderer.onDevicePixelRatioChange(),this.refreshRows(0,this._rowCount-1)}onResize(e,t){this._renderer.onResize(e,t),this._fullRefresh()}onCharSizeChanged(){this._renderer.onCharSizeChanged()}onBlur(){this._renderer.onBlur()}onFocus(){this._renderer.onFocus()}onSelectionChanged(e,t,r){this._selectionState.start=e,this._selectionState.end=t,this._selectionState.columnSelectMode=r,this._renderer.onSelectionChanged(e,t,r)}onCursorMove(){this._renderer.onCursorMove()}clear(){this._renderer.clear()}};d=i([n(3,u.IOptionsService),n(4,h.ICharSizeService),n(5,u.IDecorationService),n(6,u.IBufferService),n(7,h.ICoreBrowserService)],d),t.RenderService=d},9312:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionService=void 0;const s=r(6114),o=r(456),a=r(511),l=r(8460),c=r(4725),u=r(2585),h=r(9806),d=r(9504),f=r(844),p=r(4841),v=String.fromCharCode(160),g=new RegExp(v,"g");let _=class extends f.Disposable{constructor(e,t,r,i,n,s,c,u,h){super(),this._element=e,this._screenElement=t,this._linkifier=r,this._bufferService=i,this._coreService=n,this._mouseService=s,this._optionsService=c,this._renderService=u,this._coreBrowserService=h,this._dragScrollAmount=0,this._enabled=!0,this._workCell=new a.CellData,this._mouseDownTimeStamp=0,this._oldHasSelection=!1,this._oldSelectionStart=void 0,this._oldSelectionEnd=void 0,this._onLinuxMouseSelection=this.register(new l.EventEmitter),this._onRedrawRequest=this.register(new l.EventEmitter),this._onSelectionChange=this.register(new l.EventEmitter),this._onRequestScrollLines=this.register(new l.EventEmitter),this._mouseMoveListener=e=>this._onMouseMove(e),this._mouseUpListener=e=>this._onMouseUp(e),this._coreService.onUserInput((()=>{this.hasSelection&&this.clearSelection()})),this._trimListener=this._bufferService.buffer.lines.onTrim((e=>this._onTrim(e))),this.register(this._bufferService.buffers.onBufferActivate((e=>this._onBufferActivate(e)))),this.enable(),this._model=new o.SelectionModel(this._bufferService),this._activeSelectionMode=0}get onLinuxMouseSelection(){return this._onLinuxMouseSelection.event}get onRequestRedraw(){return this._onRedrawRequest.event}get onSelectionChange(){return this._onSelectionChange.event}get onRequestScrollLines(){return this._onRequestScrollLines.event}dispose(){this._removeMouseDownListeners()}reset(){this.clearSelection()}disable(){this.clearSelection(),this._enabled=!1}enable(){this._enabled=!0}get selectionStart(){return this._model.finalSelectionStart}get selectionEnd(){return this._model.finalSelectionEnd}get hasSelection(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;return!(!e||!t||e[0]===t[0]&&e[1]===t[1])}get selectionText(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;if(!e||!t)return"";const r=this._bufferService.buffer,i=[];if(3===this._activeSelectionMode){if(e[0]===t[0])return"";const n=e[0]<t[0]?e[0]:t[0],s=e[0]<t[0]?t[0]:e[0];for(let o=e[1];o<=t[1];o++){const e=r.translateBufferLineToString(o,!0,n,s);i.push(e)}}else{const n=e[1]===t[1]?t[0]:void 0;i.push(r.translateBufferLineToString(e[1],!0,e[0],n));for(let n=e[1]+1;n<=t[1]-1;n++){const e=r.lines.get(n),t=r.translateBufferLineToString(n,!0);(null==e?void 0:e.isWrapped)?i[i.length-1]+=t:i.push(t)}if(e[1]!==t[1]){const e=r.lines.get(t[1]),n=r.translateBufferLineToString(t[1],!0,0,t[0]);e&&e.isWrapped?i[i.length-1]+=n:i.push(n)}}return i.map((e=>e.replace(g," "))).join(s.isWindows?"\r\n":"\n")}clearSelection(){this._model.clearSelection(),this._removeMouseDownListeners(),this.refresh(),this._onSelectionChange.fire()}refresh(e){this._refreshAnimationFrame||(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._refresh()))),s.isLinux&&e&&this.selectionText.length&&this._onLinuxMouseSelection.fire(this.selectionText)}_refresh(){this._refreshAnimationFrame=void 0,this._onRedrawRequest.fire({start:this._model.finalSelectionStart,end:this._model.finalSelectionEnd,columnSelectMode:3===this._activeSelectionMode})}_isClickInSelection(e){const t=this._getMouseBufferCoords(e),r=this._model.finalSelectionStart,i=this._model.finalSelectionEnd;return!!(r&&i&&t)&&this._areCoordsInSelection(t,r,i)}isCellInSelection(e,t){const r=this._model.finalSelectionStart,i=this._model.finalSelectionEnd;return!(!r||!i)&&this._areCoordsInSelection([e,t],r,i)}_areCoordsInSelection(e,t,r){return e[1]>t[1]&&e[1]<r[1]||t[1]===r[1]&&e[1]===t[1]&&e[0]>=t[0]&&e[0]<r[0]||t[1]<r[1]&&e[1]===r[1]&&e[0]<r[0]||t[1]<r[1]&&e[1]===t[1]&&e[0]>=t[0]}_selectWordAtCursor(e,t){var r,i;const n=null===(i=null===(r=this._linkifier.currentLink)||void 0===r?void 0:r.link)||void 0===i?void 0:i.range;if(n)return this._model.selectionStart=[n.start.x-1,n.start.y-1],this._model.selectionStartLength=(0,p.getRangeLength)(n,this._bufferService.cols),this._model.selectionEnd=void 0,!0;const s=this._getMouseBufferCoords(e);return!!s&&(this._selectWordAt(s,t),this._model.selectionEnd=void 0,!0)}selectAll(){this._model.isSelectAllActive=!0,this.refresh(),this._onSelectionChange.fire()}selectLines(e,t){this._model.clearSelection(),e=Math.max(e,0),t=Math.min(t,this._bufferService.buffer.lines.length-1),this._model.selectionStart=[0,e],this._model.selectionEnd=[this._bufferService.cols,t],this.refresh(),this._onSelectionChange.fire()}_onTrim(e){this._model.onTrim(e)&&this.refresh()}_getMouseBufferCoords(e){const t=this._mouseService.getCoords(e,this._screenElement,this._bufferService.cols,this._bufferService.rows,!0);if(t)return t[0]--,t[1]--,t[1]+=this._bufferService.buffer.ydisp,t}_getMouseEventScrollAmount(e){let t=(0,h.getCoordsRelativeToElement)(this._coreBrowserService.window,e,this._screenElement)[1];const r=this._renderService.dimensions.canvasHeight;return t>=0&&t<=r?0:(t>r&&(t-=r),t=Math.min(Math.max(t,-50),50),t/=50,t/Math.abs(t)+Math.round(14*t))}shouldForceSelection(e){return s.isMac?e.altKey&&this._optionsService.rawOptions.macOptionClickForcesSelection:e.shiftKey}onMouseDown(e){if(this._mouseDownTimeStamp=e.timeStamp,(2!==e.button||!this.hasSelection)&&0===e.button){if(!this._enabled){if(!this.shouldForceSelection(e))return;e.stopPropagation()}e.preventDefault(),this._dragScrollAmount=0,this._enabled&&e.shiftKey?this._onIncrementalClick(e):1===e.detail?this._onSingleClick(e):2===e.detail?this._onDoubleClick(e):3===e.detail&&this._onTripleClick(e),this._addMouseDownListeners(),this.refresh(!0)}}_addMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.addEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.addEventListener("mouseup",this._mouseUpListener)),this._dragScrollIntervalTimer=this._coreBrowserService.window.setInterval((()=>this._dragScroll()),50)}_removeMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.removeEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.removeEventListener("mouseup",this._mouseUpListener)),this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer),this._dragScrollIntervalTimer=void 0}_onIncrementalClick(e){this._model.selectionStart&&(this._model.selectionEnd=this._getMouseBufferCoords(e))}_onSingleClick(e){if(this._model.selectionStartLength=0,this._model.isSelectAllActive=!1,this._activeSelectionMode=this.shouldColumnSelect(e)?3:0,this._model.selectionStart=this._getMouseBufferCoords(e),!this._model.selectionStart)return;this._model.selectionEnd=void 0;const t=this._bufferService.buffer.lines.get(this._model.selectionStart[1]);t&&t.length!==this._model.selectionStart[0]&&0===t.hasWidth(this._model.selectionStart[0])&&this._model.selectionStart[0]++}_onDoubleClick(e){this._selectWordAtCursor(e,!0)&&(this._activeSelectionMode=1)}_onTripleClick(e){const t=this._getMouseBufferCoords(e);t&&(this._activeSelectionMode=2,this._selectLineAt(t[1]))}shouldColumnSelect(e){return e.altKey&&!(s.isMac&&this._optionsService.rawOptions.macOptionClickForcesSelection)}_onMouseMove(e){if(e.stopImmediatePropagation(),!this._model.selectionStart)return;const t=this._model.selectionEnd?[this._model.selectionEnd[0],this._model.selectionEnd[1]]:null;if(this._model.selectionEnd=this._getMouseBufferCoords(e),!this._model.selectionEnd)return void this.refresh(!0);2===this._activeSelectionMode?this._model.selectionEnd[1]<this._model.selectionStart[1]?this._model.selectionEnd[0]=0:this._model.selectionEnd[0]=this._bufferService.cols:1===this._activeSelectionMode&&this._selectToWordAt(this._model.selectionEnd),this._dragScrollAmount=this._getMouseEventScrollAmount(e),3!==this._activeSelectionMode&&(this._dragScrollAmount>0?this._model.selectionEnd[0]=this._bufferService.cols:this._dragScrollAmount<0&&(this._model.selectionEnd[0]=0));const r=this._bufferService.buffer;if(this._model.selectionEnd[1]<r.lines.length){const e=r.lines.get(this._model.selectionEnd[1]);e&&0===e.hasWidth(this._model.selectionEnd[0])&&this._model.selectionEnd[0]++}t&&t[0]===this._model.selectionEnd[0]&&t[1]===this._model.selectionEnd[1]||this.refresh(!0)}_dragScroll(){if(this._model.selectionEnd&&this._model.selectionStart&&this._dragScrollAmount){this._onRequestScrollLines.fire({amount:this._dragScrollAmount,suppressScrollEvent:!1});const e=this._bufferService.buffer;this._dragScrollAmount>0?(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=this._bufferService.cols),this._model.selectionEnd[1]=Math.min(e.ydisp+this._bufferService.rows,e.lines.length-1)):(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=0),this._model.selectionEnd[1]=e.ydisp),this.refresh()}}_onMouseUp(e){const t=e.timeStamp-this._mouseDownTimeStamp;if(this._removeMouseDownListeners(),this.selectionText.length<=1&&t<500&&e.altKey&&this._optionsService.rawOptions.altClickMovesCursor){if(this._bufferService.buffer.ybase===this._bufferService.buffer.ydisp){const t=this._mouseService.getCoords(e,this._element,this._bufferService.cols,this._bufferService.rows,!1);if(t&&void 0!==t[0]&&void 0!==t[1]){const e=(0,d.moveToCellSequence)(t[0]-1,t[1]-1,this._bufferService,this._coreService.decPrivateModes.applicationCursorKeys);this._coreService.triggerDataEvent(e,!0)}}}else this._fireEventIfSelectionChanged()}_fireEventIfSelectionChanged(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd,r=!(!e||!t||e[0]===t[0]&&e[1]===t[1]);r?e&&t&&(this._oldSelectionStart&&this._oldSelectionEnd&&e[0]===this._oldSelectionStart[0]&&e[1]===this._oldSelectionStart[1]&&t[0]===this._oldSelectionEnd[0]&&t[1]===this._oldSelectionEnd[1]||this._fireOnSelectionChange(e,t,r)):this._oldHasSelection&&this._fireOnSelectionChange(e,t,r)}_fireOnSelectionChange(e,t,r){this._oldSelectionStart=e,this._oldSelectionEnd=t,this._oldHasSelection=r,this._onSelectionChange.fire()}_onBufferActivate(e){this.clearSelection(),this._trimListener.dispose(),this._trimListener=e.activeBuffer.lines.onTrim((e=>this._onTrim(e)))}_convertViewportColToCharacterIndex(e,t){let r=t[0];for(let i=0;t[0]>=i;i++){const n=e.loadCell(i,this._workCell).getChars().length;0===this._workCell.getWidth()?r--:n>1&&t[0]!==i&&(r+=n-1)}return r}setSelection(e,t,r){this._model.clearSelection(),this._removeMouseDownListeners(),this._model.selectionStart=[e,t],this._model.selectionStartLength=r,this.refresh(),this._fireEventIfSelectionChanged()}rightClickSelect(e){this._isClickInSelection(e)||(this._selectWordAtCursor(e,!1)&&this.refresh(!0),this._fireEventIfSelectionChanged())}_getWordAt(e,t,r=!0,i=!0){if(e[0]>=this._bufferService.cols)return;const n=this._bufferService.buffer,s=n.lines.get(e[1]);if(!s)return;const o=n.translateBufferLineToString(e[1],!1);let a=this._convertViewportColToCharacterIndex(s,e),l=a;const c=e[0]-a;let u=0,h=0,d=0,f=0;if(" "===o.charAt(a)){for(;a>0&&" "===o.charAt(a-1);)a--;for(;l<o.length&&" "===o.charAt(l+1);)l++}else{let t=e[0],r=e[0];0===s.getWidth(t)&&(u++,t--),2===s.getWidth(r)&&(h++,r++);const i=s.getString(r).length;for(i>1&&(f+=i-1,l+=i-1);t>0&&a>0&&!this._isCharWordSeparator(s.loadCell(t-1,this._workCell));){s.loadCell(t-1,this._workCell);const e=this._workCell.getChars().length;0===this._workCell.getWidth()?(u++,t--):e>1&&(d+=e-1,a-=e-1),a--,t--}for(;r<s.length&&l+1<o.length&&!this._isCharWordSeparator(s.loadCell(r+1,this._workCell));){s.loadCell(r+1,this._workCell);const e=this._workCell.getChars().length;2===this._workCell.getWidth()?(h++,r++):e>1&&(f+=e-1,l+=e-1),l++,r++}}l++;let p=a+c-u+d,v=Math.min(this._bufferService.cols,l-a+u+h-d-f);if(t||""!==o.slice(a,l).trim()){if(r&&0===p&&32!==s.getCodePoint(0)){const t=n.lines.get(e[1]-1);if(t&&s.isWrapped&&32!==t.getCodePoint(this._bufferService.cols-1)){const t=this._getWordAt([this._bufferService.cols-1,e[1]-1],!1,!0,!1);if(t){const e=this._bufferService.cols-t.start;p-=e,v+=e}}}if(i&&p+v===this._bufferService.cols&&32!==s.getCodePoint(this._bufferService.cols-1)){const t=n.lines.get(e[1]+1);if((null==t?void 0:t.isWrapped)&&32!==t.getCodePoint(0)){const t=this._getWordAt([0,e[1]+1],!1,!1,!0);t&&(v+=t.length)}}return{start:p,length:v}}}_selectWordAt(e,t){const r=this._getWordAt(e,t);if(r){for(;r.start<0;)r.start+=this._bufferService.cols,e[1]--;this._model.selectionStart=[r.start,e[1]],this._model.selectionStartLength=r.length}}_selectToWordAt(e){const t=this._getWordAt(e,!0);if(t){let r=e[1];for(;t.start<0;)t.start+=this._bufferService.cols,r--;if(!this._model.areSelectionValuesReversed())for(;t.start+t.length>this._bufferService.cols;)t.length-=this._bufferService.cols,r++;this._model.selectionEnd=[this._model.areSelectionValuesReversed()?t.start:t.start+t.length,r]}}_isCharWordSeparator(e){return 0!==e.getWidth()&&this._optionsService.rawOptions.wordSeparator.indexOf(e.getChars())>=0}_selectLineAt(e){const t=this._bufferService.buffer.getWrappedRangeForLine(e),r={start:{x:0,y:t.first},end:{x:this._bufferService.cols-1,y:t.last}};this._model.selectionStart=[0,t.first],this._model.selectionEnd=void 0,this._model.selectionStartLength=(0,p.getRangeLength)(r,this._bufferService.cols)}};_=i([n(3,u.IBufferService),n(4,u.ICoreService),n(5,c.IMouseService),n(6,u.IOptionsService),n(7,c.IRenderService),n(8,c.ICoreBrowserService)],_),t.SelectionService=_},4725:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ICharacterJoinerService=t.ISelectionService=t.IRenderService=t.IMouseService=t.ICoreBrowserService=t.ICharSizeService=void 0;const i=r(8343);t.ICharSizeService=(0,i.createDecorator)("CharSizeService"),t.ICoreBrowserService=(0,i.createDecorator)("CoreBrowserService"),t.IMouseService=(0,i.createDecorator)("MouseService"),t.IRenderService=(0,i.createDecorator)("RenderService"),t.ISelectionService=(0,i.createDecorator)("SelectionService"),t.ICharacterJoinerService=(0,i.createDecorator)("CharacterJoinerService")},6349:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CircularList=void 0;const i=r(8460);t.CircularList=class{constructor(e){this._maxLength=e,this.onDeleteEmitter=new i.EventEmitter,this.onInsertEmitter=new i.EventEmitter,this.onTrimEmitter=new i.EventEmitter,this._array=new Array(this._maxLength),this._startIndex=0,this._length=0}get onDelete(){return this.onDeleteEmitter.event}get onInsert(){return this.onInsertEmitter.event}get onTrim(){return this.onTrimEmitter.event}get maxLength(){return this._maxLength}set maxLength(e){if(this._maxLength===e)return;const t=new Array(e);for(let r=0;r<Math.min(e,this.length);r++)t[r]=this._array[this._getCyclicIndex(r)];this._array=t,this._maxLength=e,this._startIndex=0}get length(){return this._length}set length(e){if(e>this._length)for(let t=this._length;t<e;t++)this._array[t]=void 0;this._length=e}get(e){return this._array[this._getCyclicIndex(e)]}set(e,t){this._array[this._getCyclicIndex(e)]=t}push(e){this._array[this._getCyclicIndex(this._length)]=e,this._length===this._maxLength?(this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1)):this._length++}recycle(){if(this._length!==this._maxLength)throw new Error("Can only recycle when the buffer is full");return this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1),this._array[this._getCyclicIndex(this._length-1)]}get isFull(){return this._length===this._maxLength}pop(){return this._array[this._getCyclicIndex(this._length---1)]}splice(e,t,...r){if(t){for(let r=e;r<this._length-t;r++)this._array[this._getCyclicIndex(r)]=this._array[this._getCyclicIndex(r+t)];this._length-=t,this.onDeleteEmitter.fire({index:e,amount:t})}for(let t=this._length-1;t>=e;t--)this._array[this._getCyclicIndex(t+r.length)]=this._array[this._getCyclicIndex(t)];for(let t=0;t<r.length;t++)this._array[this._getCyclicIndex(e+t)]=r[t];if(r.length&&this.onInsertEmitter.fire({index:e,amount:r.length}),this._length+r.length>this._maxLength){const e=this._length+r.length-this._maxLength;this._startIndex+=e,this._length=this._maxLength,this.onTrimEmitter.fire(e)}else this._length+=r.length}trimStart(e){e>this._length&&(e=this._length),this._startIndex+=e,this._length-=e,this.onTrimEmitter.fire(e)}shiftElements(e,t,r){if(!(t<=0)){if(e<0||e>=this._length)throw new Error("start argument out of range");if(e+r<0)throw new Error("Cannot shift elements in list beyond index 0");if(r>0){for(let i=t-1;i>=0;i--)this.set(e+i+r,this.get(e+i));const i=e+t+r-this._length;if(i>0)for(this._length+=i;this._length>this._maxLength;)this._length--,this._startIndex++,this.onTrimEmitter.fire(1)}else for(let i=0;i<t;i++)this.set(e+i+r,this.get(e+i))}}_getCyclicIndex(e){return(this._startIndex+e)%this._maxLength}}},1439:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.clone=void 0,t.clone=function e(t,r=5){if("object"!=typeof t)return t;const i=Array.isArray(t)?[]:{};for(const n in t)i[n]=r<=1?t[n]:t[n]&&e(t[n],r-1);return i}},8055:(e,t)=>{var r,i,n;function s(e){const t=e.toString(16);return t.length<2?"0"+t:t}function o(e,t){return e<t?(t+.05)/(e+.05):(e+.05)/(t+.05)}Object.defineProperty(t,"__esModule",{value:!0}),t.contrastRatio=t.toPaddedHex=t.rgba=t.rgb=t.css=t.color=t.channels=void 0,function(e){e.toCss=function(e,t,r,i){return void 0!==i?`#${s(e)}${s(t)}${s(r)}${s(i)}`:`#${s(e)}${s(t)}${s(r)}`},e.toRgba=function(e,t,r,i=255){return(e<<24|t<<16|r<<8|i)>>>0}}(r=t.channels||(t.channels={})),function(e){function t(e,t){const i=Math.round(255*t),[s,o,a]=n.toChannels(e.rgba);return{css:r.toCss(s,o,a,i),rgba:r.toRgba(s,o,a,i)}}e.blend=function(e,t){const i=(255&t.rgba)/255;if(1===i)return{css:t.css,rgba:t.rgba};const n=t.rgba>>24&255,s=t.rgba>>16&255,o=t.rgba>>8&255,a=e.rgba>>24&255,l=e.rgba>>16&255,c=e.rgba>>8&255,u=a+Math.round((n-a)*i),h=l+Math.round((s-l)*i),d=c+Math.round((o-c)*i);return{css:r.toCss(u,h,d),rgba:r.toRgba(u,h,d)}},e.isOpaque=function(e){return 255==(255&e.rgba)},e.ensureContrastRatio=function(e,t,r){const i=n.ensureContrastRatio(e.rgba,t.rgba,r);if(i)return n.toColor(i>>24&255,i>>16&255,i>>8&255)},e.opaque=function(e){const t=(255|e.rgba)>>>0,[i,s,o]=n.toChannels(t);return{css:r.toCss(i,s,o),rgba:t}},e.opacity=t,e.multiplyOpacity=function(e,r){return t(e,(255&e.rgba)*r/255)},e.toColorRGB=function(e){return[e.rgba>>24&255,e.rgba>>16&255,e.rgba>>8&255]}}(t.color||(t.color={})),(t.css||(t.css={})).toColor=function(e){if(e.match(/#[0-9a-f]{3,8}/i))switch(e.length){case 4:{const t=parseInt(e.slice(1,2).repeat(2),16),r=parseInt(e.slice(2,3).repeat(2),16),i=parseInt(e.slice(3,4).repeat(2),16);return n.toColor(t,r,i)}case 5:{const t=parseInt(e.slice(1,2).repeat(2),16),r=parseInt(e.slice(2,3).repeat(2),16),i=parseInt(e.slice(3,4).repeat(2),16),s=parseInt(e.slice(4,5).repeat(2),16);return n.toColor(t,r,i,s)}case 7:return{css:e,rgba:(parseInt(e.slice(1),16)<<8|255)>>>0};case 9:return{css:e,rgba:parseInt(e.slice(1),16)>>>0}}const t=e.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);if(t){const e=parseInt(t[1]),r=parseInt(t[2]),i=parseInt(t[3]),s=Math.round(255*(void 0===t[5]?1:parseFloat(t[5])));return n.toColor(e,r,i,s)}throw new Error("css.toColor: Unsupported css format")},function(e){function t(e,t,r){const i=e/255,n=t/255,s=r/255;return.2126*(i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4))+.7152*(n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))+.0722*(s<=.03928?s/12.92:Math.pow((s+.055)/1.055,2.4))}e.relativeLuminance=function(e){return t(e>>16&255,e>>8&255,255&e)},e.relativeLuminance2=t}(i=t.rgb||(t.rgb={})),function(e){function t(e,t,r){const n=e>>24&255,s=e>>16&255,a=e>>8&255;let l=t>>24&255,c=t>>16&255,u=t>>8&255,h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));for(;h<r&&(l>0||c>0||u>0);)l-=Math.max(0,Math.ceil(.1*l)),c-=Math.max(0,Math.ceil(.1*c)),u-=Math.max(0,Math.ceil(.1*u)),h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));return(l<<24|c<<16|u<<8|255)>>>0}function n(e,t,r){const n=e>>24&255,s=e>>16&255,a=e>>8&255;let l=t>>24&255,c=t>>16&255,u=t>>8&255,h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));for(;h<r&&(l<255||c<255||u<255);)l=Math.min(255,l+Math.ceil(.1*(255-l))),c=Math.min(255,c+Math.ceil(.1*(255-c))),u=Math.min(255,u+Math.ceil(.1*(255-u))),h=o(i.relativeLuminance2(l,c,u),i.relativeLuminance2(n,s,a));return(l<<24|c<<16|u<<8|255)>>>0}e.ensureContrastRatio=function(e,r,s){const a=i.relativeLuminance(e>>8),l=i.relativeLuminance(r>>8);if(o(a,l)<s){if(l<a){const l=t(e,r,s),c=o(a,i.relativeLuminance(l>>8));if(c<s){const t=n(e,r,s);return c>o(a,i.relativeLuminance(t>>8))?l:t}return l}const c=n(e,r,s),u=o(a,i.relativeLuminance(c>>8));if(u<s){const n=t(e,r,s);return u>o(a,i.relativeLuminance(n>>8))?c:n}return c}},e.reduceLuminance=t,e.increaseLuminance=n,e.toChannels=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},e.toColor=function(e,t,i,n){return{css:r.toCss(e,t,i,n),rgba:r.toRgba(e,t,i,n)}}}(n=t.rgba||(t.rgba={})),t.toPaddedHex=s,t.contrastRatio=o},8969:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreTerminal=void 0;const i=r(844),n=r(2585),s=r(4348),o=r(7866),a=r(744),l=r(7302),c=r(6975),u=r(8460),h=r(1753),d=r(3730),f=r(1480),p=r(7994),v=r(9282),g=r(5435),_=r(5981),m=r(2660);let b=!1;class y extends i.Disposable{constructor(e){super(),this._onBinary=new u.EventEmitter,this._onData=new u.EventEmitter,this._onLineFeed=new u.EventEmitter,this._onResize=new u.EventEmitter,this._onScroll=new u.EventEmitter,this._onWriteParsed=new u.EventEmitter,this._instantiationService=new s.InstantiationService,this.optionsService=new l.OptionsService(e),this._instantiationService.setService(n.IOptionsService,this.optionsService),this._bufferService=this.register(this._instantiationService.createInstance(a.BufferService)),this._instantiationService.setService(n.IBufferService,this._bufferService),this._logService=this._instantiationService.createInstance(o.LogService),this._instantiationService.setService(n.ILogService,this._logService),this.coreService=this.register(this._instantiationService.createInstance(c.CoreService,(()=>this.scrollToBottom()))),this._instantiationService.setService(n.ICoreService,this.coreService),this.coreMouseService=this._instantiationService.createInstance(h.CoreMouseService),this._instantiationService.setService(n.ICoreMouseService,this.coreMouseService),this._dirtyRowService=this._instantiationService.createInstance(d.DirtyRowService),this._instantiationService.setService(n.IDirtyRowService,this._dirtyRowService),this.unicodeService=this._instantiationService.createInstance(f.UnicodeService),this._instantiationService.setService(n.IUnicodeService,this.unicodeService),this._charsetService=this._instantiationService.createInstance(p.CharsetService),this._instantiationService.setService(n.ICharsetService,this._charsetService),this._oscLinkService=this._instantiationService.createInstance(m.OscLinkService),this._instantiationService.setService(n.IOscLinkService,this._oscLinkService),this._inputHandler=new g.InputHandler(this._bufferService,this._charsetService,this.coreService,this._dirtyRowService,this._logService,this.optionsService,this._oscLinkService,this.coreMouseService,this.unicodeService),this.register((0,u.forwardEvent)(this._inputHandler.onLineFeed,this._onLineFeed)),this.register(this._inputHandler),this.register((0,u.forwardEvent)(this._bufferService.onResize,this._onResize)),this.register((0,u.forwardEvent)(this.coreService.onData,this._onData)),this.register((0,u.forwardEvent)(this.coreService.onBinary,this._onBinary)),this.register(this.optionsService.onOptionChange((e=>this._updateOptions(e)))),this.register(this._bufferService.onScroll((e=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this.register(this._inputHandler.onScroll((e=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this._writeBuffer=new _.WriteBuffer(((e,t)=>this._inputHandler.parse(e,t))),this.register((0,u.forwardEvent)(this._writeBuffer.onWriteParsed,this._onWriteParsed))}get onBinary(){return this._onBinary.event}get onData(){return this._onData.event}get onLineFeed(){return this._onLineFeed.event}get onResize(){return this._onResize.event}get onWriteParsed(){return this._onWriteParsed.event}get onScroll(){return this._onScrollApi||(this._onScrollApi=new u.EventEmitter,this.register(this._onScroll.event((e=>{var t;null===(t=this._onScrollApi)||void 0===t||t.fire(e.position)})))),this._onScrollApi.event}get cols(){return this._bufferService.cols}get rows(){return this._bufferService.rows}get buffers(){return this._bufferService.buffers}get options(){return this.optionsService.options}set options(e){for(const t in e)this.optionsService.options[t]=e[t]}dispose(){var e;this._isDisposed||(super.dispose(),null===(e=this._windowsMode)||void 0===e||e.dispose(),this._windowsMode=void 0)}write(e,t){this._writeBuffer.write(e,t)}writeSync(e,t){this._logService.logLevel<=n.LogLevelEnum.WARN&&!b&&(this._logService.warn("writeSync is unreliable and will be removed soon."),b=!0),this._writeBuffer.writeSync(e,t)}resize(e,t){isNaN(e)||isNaN(t)||(e=Math.max(e,a.MINIMUM_COLS),t=Math.max(t,a.MINIMUM_ROWS),this._bufferService.resize(e,t))}scroll(e,t=!1){this._bufferService.scroll(e,t)}scrollLines(e,t,r){this._bufferService.scrollLines(e,t,r)}scrollPages(e){this._bufferService.scrollPages(e)}scrollToTop(){this._bufferService.scrollToTop()}scrollToBottom(){this._bufferService.scrollToBottom()}scrollToLine(e){this._bufferService.scrollToLine(e)}registerEscHandler(e,t){return this._inputHandler.registerEscHandler(e,t)}registerDcsHandler(e,t){return this._inputHandler.registerDcsHandler(e,t)}registerCsiHandler(e,t){return this._inputHandler.registerCsiHandler(e,t)}registerOscHandler(e,t){return this._inputHandler.registerOscHandler(e,t)}_setup(){this.optionsService.rawOptions.windowsMode&&this._enableWindowsMode()}reset(){this._inputHandler.reset(),this._bufferService.reset(),this._charsetService.reset(),this.coreService.reset(),this.coreMouseService.reset()}_updateOptions(e){var t;switch(e){case"scrollback":this.buffers.resize(this.cols,this.rows);break;case"windowsMode":this.optionsService.rawOptions.windowsMode?this._enableWindowsMode():(null===(t=this._windowsMode)||void 0===t||t.dispose(),this._windowsMode=void 0)}}_enableWindowsMode(){if(!this._windowsMode){const e=[];e.push(this.onLineFeed(v.updateWindowsModeWrappedState.bind(null,this._bufferService))),e.push(this.registerCsiHandler({final:"H"},(()=>((0,v.updateWindowsModeWrappedState)(this._bufferService),!1)))),this._windowsMode={dispose:()=>{for(const t of e)t.dispose()}}}}}t.CoreTerminal=y},8460:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.forwardEvent=t.EventEmitter=void 0,t.EventEmitter=class{constructor(){this._listeners=[],this._disposed=!1}get event(){return this._event||(this._event=e=>(this._listeners.push(e),{dispose:()=>{if(!this._disposed)for(let t=0;t<this._listeners.length;t++)if(this._listeners[t]===e)return void this._listeners.splice(t,1)}})),this._event}fire(e,t){const r=[];for(let e=0;e<this._listeners.length;e++)r.push(this._listeners[e]);for(let i=0;i<r.length;i++)r[i].call(void 0,e,t)}dispose(){this._listeners&&(this._listeners.length=0),this._disposed=!0}},t.forwardEvent=function(e,t){return e((e=>t.fire(e)))}},5435:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InputHandler=t.WindowsOptionsReportType=void 0;const i=r(2584),n=r(7116),s=r(2015),o=r(844),a=r(482),l=r(8437),c=r(8460),u=r(643),h=r(511),d=r(3734),f=r(2585),p=r(6242),v=r(6351),g=r(5941),_={"(":0,")":1,"*":2,"+":3,"-":1,".":2},m=131072;function b(e,t){if(e>24)return t.setWinLines||!1;switch(e){case 1:return!!t.restoreWin;case 2:return!!t.minimizeWin;case 3:return!!t.setWinPosition;case 4:return!!t.setWinSizePixels;case 5:return!!t.raiseWin;case 6:return!!t.lowerWin;case 7:return!!t.refreshWin;case 8:return!!t.setWinSizeChars;case 9:return!!t.maximizeWin;case 10:return!!t.fullscreenWin;case 11:return!!t.getWinState;case 13:return!!t.getWinPosition;case 14:return!!t.getWinSizePixels;case 15:return!!t.getScreenSizePixels;case 16:return!!t.getCellSizePixels;case 18:return!!t.getWinSizeChars;case 19:return!!t.getScreenSizeChars;case 20:return!!t.getIconTitle;case 21:return!!t.getWinTitle;case 22:return!!t.pushTitle;case 23:return!!t.popTitle;case 24:return!!t.setWinLines}return!1}var y;!function(e){e[e.GET_WIN_SIZE_PIXELS=0]="GET_WIN_SIZE_PIXELS",e[e.GET_CELL_SIZE_PIXELS=1]="GET_CELL_SIZE_PIXELS"}(y=t.WindowsOptionsReportType||(t.WindowsOptionsReportType={}));class S extends o.Disposable{constructor(e,t,r,o,u,d,f,g,_,m=new s.EscapeSequenceParser){super(),this._bufferService=e,this._charsetService=t,this._coreService=r,this._dirtyRowService=o,this._logService=u,this._optionsService=d,this._oscLinkService=f,this._coreMouseService=g,this._unicodeService=_,this._parser=m,this._parseBuffer=new Uint32Array(4096),this._stringDecoder=new a.StringToUtf32,this._utf8Decoder=new a.Utf8ToUtf32,this._workCell=new h.CellData,this._windowTitle="",this._iconName="",this._windowTitleStack=[],this._iconNameStack=[],this._curAttrData=l.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=l.DEFAULT_ATTR_DATA.clone(),this._onRequestBell=new c.EventEmitter,this._onRequestRefreshRows=new c.EventEmitter,this._onRequestReset=new c.EventEmitter,this._onRequestSendFocus=new c.EventEmitter,this._onRequestSyncScrollBar=new c.EventEmitter,this._onRequestWindowsOptionsReport=new c.EventEmitter,this._onA11yChar=new c.EventEmitter,this._onA11yTab=new c.EventEmitter,this._onCursorMove=new c.EventEmitter,this._onLineFeed=new c.EventEmitter,this._onScroll=new c.EventEmitter,this._onTitleChange=new c.EventEmitter,this._onColor=new c.EventEmitter,this._parseStack={paused:!1,cursorStartX:0,cursorStartY:0,decodedLength:0,position:0},this._specialColors=[256,257,258],this.register(this._parser),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((e=>this._activeBuffer=e.activeBuffer))),this._parser.setCsiHandlerFallback(((e,t)=>{this._logService.debug("Unknown CSI code: ",{identifier:this._parser.identToString(e),params:t.toArray()})})),this._parser.setEscHandlerFallback((e=>{this._logService.debug("Unknown ESC code: ",{identifier:this._parser.identToString(e)})})),this._parser.setExecuteHandlerFallback((e=>{this._logService.debug("Unknown EXECUTE code: ",{code:e})})),this._parser.setOscHandlerFallback(((e,t,r)=>{this._logService.debug("Unknown OSC code: ",{identifier:e,action:t,data:r})})),this._parser.setDcsHandlerFallback(((e,t,r)=>{"HOOK"===t&&(r=r.toArray()),this._logService.debug("Unknown DCS code: ",{identifier:this._parser.identToString(e),action:t,payload:r})})),this._parser.setPrintHandler(((e,t,r)=>this.print(e,t,r))),this._parser.registerCsiHandler({final:"@"},(e=>this.insertChars(e))),this._parser.registerCsiHandler({intermediates:" ",final:"@"},(e=>this.scrollLeft(e))),this._parser.registerCsiHandler({final:"A"},(e=>this.cursorUp(e))),this._parser.registerCsiHandler({intermediates:" ",final:"A"},(e=>this.scrollRight(e))),this._parser.registerCsiHandler({final:"B"},(e=>this.cursorDown(e))),this._parser.registerCsiHandler({final:"C"},(e=>this.cursorForward(e))),this._parser.registerCsiHandler({final:"D"},(e=>this.cursorBackward(e))),this._parser.registerCsiHandler({final:"E"},(e=>this.cursorNextLine(e))),this._parser.registerCsiHandler({final:"F"},(e=>this.cursorPrecedingLine(e))),this._parser.registerCsiHandler({final:"G"},(e=>this.cursorCharAbsolute(e))),this._parser.registerCsiHandler({final:"H"},(e=>this.cursorPosition(e))),this._parser.registerCsiHandler({final:"I"},(e=>this.cursorForwardTab(e))),this._parser.registerCsiHandler({final:"J"},(e=>this.eraseInDisplay(e,!1))),this._parser.registerCsiHandler({prefix:"?",final:"J"},(e=>this.eraseInDisplay(e,!0))),this._parser.registerCsiHandler({final:"K"},(e=>this.eraseInLine(e,!1))),this._parser.registerCsiHandler({prefix:"?",final:"K"},(e=>this.eraseInLine(e,!0))),this._parser.registerCsiHandler({final:"L"},(e=>this.insertLines(e))),this._parser.registerCsiHandler({final:"M"},(e=>this.deleteLines(e))),this._parser.registerCsiHandler({final:"P"},(e=>this.deleteChars(e))),this._parser.registerCsiHandler({final:"S"},(e=>this.scrollUp(e))),this._parser.registerCsiHandler({final:"T"},(e=>this.scrollDown(e))),this._parser.registerCsiHandler({final:"X"},(e=>this.eraseChars(e))),this._parser.registerCsiHandler({final:"Z"},(e=>this.cursorBackwardTab(e))),this._parser.registerCsiHandler({final:"`"},(e=>this.charPosAbsolute(e))),this._parser.registerCsiHandler({final:"a"},(e=>this.hPositionRelative(e))),this._parser.registerCsiHandler({final:"b"},(e=>this.repeatPrecedingCharacter(e))),this._parser.registerCsiHandler({final:"c"},(e=>this.sendDeviceAttributesPrimary(e))),this._parser.registerCsiHandler({prefix:">",final:"c"},(e=>this.sendDeviceAttributesSecondary(e))),this._parser.registerCsiHandler({final:"d"},(e=>this.linePosAbsolute(e))),this._parser.registerCsiHandler({final:"e"},(e=>this.vPositionRelative(e))),this._parser.registerCsiHandler({final:"f"},(e=>this.hVPosition(e))),this._parser.registerCsiHandler({final:"g"},(e=>this.tabClear(e))),this._parser.registerCsiHandler({final:"h"},(e=>this.setMode(e))),this._parser.registerCsiHandler({prefix:"?",final:"h"},(e=>this.setModePrivate(e))),this._parser.registerCsiHandler({final:"l"},(e=>this.resetMode(e))),this._parser.registerCsiHandler({prefix:"?",final:"l"},(e=>this.resetModePrivate(e))),this._parser.registerCsiHandler({final:"m"},(e=>this.charAttributes(e))),this._parser.registerCsiHandler({final:"n"},(e=>this.deviceStatus(e))),this._parser.registerCsiHandler({prefix:"?",final:"n"},(e=>this.deviceStatusPrivate(e))),this._parser.registerCsiHandler({intermediates:"!",final:"p"},(e=>this.softReset(e))),this._parser.registerCsiHandler({intermediates:" ",final:"q"},(e=>this.setCursorStyle(e))),this._parser.registerCsiHandler({final:"r"},(e=>this.setScrollRegion(e))),this._parser.registerCsiHandler({final:"s"},(e=>this.saveCursor(e))),this._parser.registerCsiHandler({final:"t"},(e=>this.windowOptions(e))),this._parser.registerCsiHandler({final:"u"},(e=>this.restoreCursor(e))),this._parser.registerCsiHandler({intermediates:"'",final:"}"},(e=>this.insertColumns(e))),this._parser.registerCsiHandler({intermediates:"'",final:"~"},(e=>this.deleteColumns(e))),this._parser.registerCsiHandler({intermediates:'"',final:"q"},(e=>this.selectProtected(e))),this._parser.registerCsiHandler({intermediates:"$",final:"p"},(e=>this.requestMode(e,!0))),this._parser.registerCsiHandler({prefix:"?",intermediates:"$",final:"p"},(e=>this.requestMode(e,!1))),this._parser.setExecuteHandler(i.C0.BEL,(()=>this.bell())),this._parser.setExecuteHandler(i.C0.LF,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.VT,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.FF,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.CR,(()=>this.carriageReturn())),this._parser.setExecuteHandler(i.C0.BS,(()=>this.backspace())),this._parser.setExecuteHandler(i.C0.HT,(()=>this.tab())),this._parser.setExecuteHandler(i.C0.SO,(()=>this.shiftOut())),this._parser.setExecuteHandler(i.C0.SI,(()=>this.shiftIn())),this._parser.setExecuteHandler(i.C1.IND,(()=>this.index())),this._parser.setExecuteHandler(i.C1.NEL,(()=>this.nextLine())),this._parser.setExecuteHandler(i.C1.HTS,(()=>this.tabSet())),this._parser.registerOscHandler(0,new p.OscHandler((e=>(this.setTitle(e),this.setIconName(e),!0)))),this._parser.registerOscHandler(1,new p.OscHandler((e=>this.setIconName(e)))),this._parser.registerOscHandler(2,new p.OscHandler((e=>this.setTitle(e)))),this._parser.registerOscHandler(4,new p.OscHandler((e=>this.setOrReportIndexedColor(e)))),this._parser.registerOscHandler(8,new p.OscHandler((e=>this.setHyperlink(e)))),this._parser.registerOscHandler(10,new p.OscHandler((e=>this.setOrReportFgColor(e)))),this._parser.registerOscHandler(11,new p.OscHandler((e=>this.setOrReportBgColor(e)))),this._parser.registerOscHandler(12,new p.OscHandler((e=>this.setOrReportCursorColor(e)))),this._parser.registerOscHandler(104,new p.OscHandler((e=>this.restoreIndexedColor(e)))),this._parser.registerOscHandler(110,new p.OscHandler((e=>this.restoreFgColor(e)))),this._parser.registerOscHandler(111,new p.OscHandler((e=>this.restoreBgColor(e)))),this._parser.registerOscHandler(112,new p.OscHandler((e=>this.restoreCursorColor(e)))),this._parser.registerEscHandler({final:"7"},(()=>this.saveCursor())),this._parser.registerEscHandler({final:"8"},(()=>this.restoreCursor())),this._parser.registerEscHandler({final:"D"},(()=>this.index())),this._parser.registerEscHandler({final:"E"},(()=>this.nextLine())),this._parser.registerEscHandler({final:"H"},(()=>this.tabSet())),this._parser.registerEscHandler({final:"M"},(()=>this.reverseIndex())),this._parser.registerEscHandler({final:"="},(()=>this.keypadApplicationMode())),this._parser.registerEscHandler({final:">"},(()=>this.keypadNumericMode())),this._parser.registerEscHandler({final:"c"},(()=>this.fullReset())),this._parser.registerEscHandler({final:"n"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"o"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"|"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"}"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"~"},(()=>this.setgLevel(1))),this._parser.registerEscHandler({intermediates:"%",final:"@"},(()=>this.selectDefaultCharset())),this._parser.registerEscHandler({intermediates:"%",final:"G"},(()=>this.selectDefaultCharset()));for(const e in n.CHARSETS)this._parser.registerEscHandler({intermediates:"(",final:e},(()=>this.selectCharset("("+e))),this._parser.registerEscHandler({intermediates:")",final:e},(()=>this.selectCharset(")"+e))),this._parser.registerEscHandler({intermediates:"*",final:e},(()=>this.selectCharset("*"+e))),this._parser.registerEscHandler({intermediates:"+",final:e},(()=>this.selectCharset("+"+e))),this._parser.registerEscHandler({intermediates:"-",final:e},(()=>this.selectCharset("-"+e))),this._parser.registerEscHandler({intermediates:".",final:e},(()=>this.selectCharset("."+e))),this._parser.registerEscHandler({intermediates:"/",final:e},(()=>this.selectCharset("/"+e)));this._parser.registerEscHandler({intermediates:"#",final:"8"},(()=>this.screenAlignmentPattern())),this._parser.setErrorHandler((e=>(this._logService.error("Parsing error: ",e),e))),this._parser.registerDcsHandler({intermediates:"$",final:"q"},new v.DcsHandler(((e,t)=>this.requestStatusString(e,t))))}getAttrData(){return this._curAttrData}get onRequestBell(){return this._onRequestBell.event}get onRequestRefreshRows(){return this._onRequestRefreshRows.event}get onRequestReset(){return this._onRequestReset.event}get onRequestSendFocus(){return this._onRequestSendFocus.event}get onRequestSyncScrollBar(){return this._onRequestSyncScrollBar.event}get onRequestWindowsOptionsReport(){return this._onRequestWindowsOptionsReport.event}get onA11yChar(){return this._onA11yChar.event}get onA11yTab(){return this._onA11yTab.event}get onCursorMove(){return this._onCursorMove.event}get onLineFeed(){return this._onLineFeed.event}get onScroll(){return this._onScroll.event}get onTitleChange(){return this._onTitleChange.event}get onColor(){return this._onColor.event}dispose(){super.dispose()}_preserveStack(e,t,r,i){this._parseStack.paused=!0,this._parseStack.cursorStartX=e,this._parseStack.cursorStartY=t,this._parseStack.decodedLength=r,this._parseStack.position=i}_logSlowResolvingAsync(e){this._logService.logLevel<=f.LogLevelEnum.WARN&&Promise.race([e,new Promise(((e,t)=>setTimeout((()=>t("#SLOW_TIMEOUT")),5e3)))]).catch((e=>{if("#SLOW_TIMEOUT"!==e)throw e;console.warn("async parser handler taking longer than 5000 ms")}))}parse(e,t){let r,i=this._activeBuffer.x,n=this._activeBuffer.y,s=0;const o=this._parseStack.paused;if(o){if(r=this._parser.parse(this._parseBuffer,this._parseStack.decodedLength,t))return this._logSlowResolvingAsync(r),r;i=this._parseStack.cursorStartX,n=this._parseStack.cursorStartY,this._parseStack.paused=!1,e.length>m&&(s=this._parseStack.position+m)}if(this._logService.logLevel<=f.LogLevelEnum.DEBUG&&this._logService.debug("parsing data"+("string"==typeof e?` "${e}"`:` "${Array.prototype.map.call(e,(e=>String.fromCharCode(e))).join("")}"`),"string"==typeof e?e.split("").map((e=>e.charCodeAt(0))):e),this._parseBuffer.length<e.length&&this._parseBuffer.length<m&&(this._parseBuffer=new Uint32Array(Math.min(e.length,m))),o||this._dirtyRowService.clearRange(),e.length>m)for(let t=s;t<e.length;t+=m){const s=t+m<e.length?t+m:e.length,o="string"==typeof e?this._stringDecoder.decode(e.substring(t,s),this._parseBuffer):this._utf8Decoder.decode(e.subarray(t,s),this._parseBuffer);if(r=this._parser.parse(this._parseBuffer,o))return this._preserveStack(i,n,o,t),this._logSlowResolvingAsync(r),r}else if(!o){const t="string"==typeof e?this._stringDecoder.decode(e,this._parseBuffer):this._utf8Decoder.decode(e,this._parseBuffer);if(r=this._parser.parse(this._parseBuffer,t))return this._preserveStack(i,n,t,0),this._logSlowResolvingAsync(r),r}this._activeBuffer.x===i&&this._activeBuffer.y===n||this._onCursorMove.fire(),this._onRequestRefreshRows.fire(this._dirtyRowService.start,this._dirtyRowService.end)}print(e,t,r){let i,n;const s=this._charsetService.charset,o=this._optionsService.rawOptions.screenReaderMode,l=this._bufferService.cols,c=this._coreService.decPrivateModes.wraparound,h=this._coreService.modes.insertMode,d=this._curAttrData;let f=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);this._dirtyRowService.markDirty(this._activeBuffer.y),this._activeBuffer.x&&r-t>0&&2===f.getWidth(this._activeBuffer.x-1)&&f.setCellFromCodePoint(this._activeBuffer.x-1,0,1,d.fg,d.bg,d.extended);for(let p=t;p<r;++p){if(i=e[p],n=this._unicodeService.wcwidth(i),i<127&&s){const e=s[String.fromCharCode(i)];e&&(i=e.charCodeAt(0))}if(o&&this._onA11yChar.fire((0,a.stringFromCodePoint)(i)),void 0!==this._currentLinkId&&this._oscLinkService.addLineToLink(this._currentLinkId,this._activeBuffer.ybase+this._activeBuffer.y),n||!this._activeBuffer.x){if(this._activeBuffer.x+n-1>=l)if(c){for(;this._activeBuffer.x<l;)f.setCellFromCodePoint(this._activeBuffer.x++,0,1,d.fg,d.bg,d.extended);this._activeBuffer.x=0,this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData(),!0)):(this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!0),f=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y)}else if(this._activeBuffer.x=l-1,2===n)continue;if(h&&(f.insertCells(this._activeBuffer.x,n,this._activeBuffer.getNullCell(d),d),2===f.getWidth(l-1)&&f.setCellFromCodePoint(l-1,u.NULL_CELL_CODE,u.NULL_CELL_WIDTH,d.fg,d.bg,d.extended)),f.setCellFromCodePoint(this._activeBuffer.x++,i,n,d.fg,d.bg,d.extended),n>0)for(;--n;)f.setCellFromCodePoint(this._activeBuffer.x++,0,0,d.fg,d.bg,d.extended)}else f.getWidth(this._activeBuffer.x-1)?f.addCodepointToCell(this._activeBuffer.x-1,i):f.addCodepointToCell(this._activeBuffer.x-2,i)}r-t>0&&(f.loadCell(this._activeBuffer.x-1,this._workCell),2===this._workCell.getWidth()||this._workCell.getCode()>65535?this._parser.precedingCodepoint=0:this._workCell.isCombined()?this._parser.precedingCodepoint=this._workCell.getChars().charCodeAt(0):this._parser.precedingCodepoint=this._workCell.content),this._activeBuffer.x<l&&r-t>0&&0===f.getWidth(this._activeBuffer.x)&&!f.hasContent(this._activeBuffer.x)&&f.setCellFromCodePoint(this._activeBuffer.x,0,1,d.fg,d.bg,d.extended),this._dirtyRowService.markDirty(this._activeBuffer.y)}registerCsiHandler(e,t){return"t"!==e.final||e.prefix||e.intermediates?this._parser.registerCsiHandler(e,t):this._parser.registerCsiHandler(e,(e=>!b(e.params[0],this._optionsService.rawOptions.windowOptions)||t(e)))}registerDcsHandler(e,t){return this._parser.registerDcsHandler(e,new v.DcsHandler(t))}registerEscHandler(e,t){return this._parser.registerEscHandler(e,t)}registerOscHandler(e,t){return this._parser.registerOscHandler(e,new p.OscHandler(t))}bell(){return this._onRequestBell.fire(),!0}lineFeed(){return this._dirtyRowService.markDirty(this._activeBuffer.y),this._optionsService.rawOptions.convertEol&&(this._activeBuffer.x=0),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.x>=this._bufferService.cols&&this._activeBuffer.x--,this._dirtyRowService.markDirty(this._activeBuffer.y),this._onLineFeed.fire(),!0}carriageReturn(){return this._activeBuffer.x=0,!0}backspace(){var e;if(!this._coreService.decPrivateModes.reverseWraparound)return this._restrictCursor(),this._activeBuffer.x>0&&this._activeBuffer.x--,!0;if(this._restrictCursor(this._bufferService.cols),this._activeBuffer.x>0)this._activeBuffer.x--;else if(0===this._activeBuffer.x&&this._activeBuffer.y>this._activeBuffer.scrollTop&&this._activeBuffer.y<=this._activeBuffer.scrollBottom&&(null===(e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y))||void 0===e?void 0:e.isWrapped)){this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.y--,this._activeBuffer.x=this._bufferService.cols-1;const e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);e.hasWidth(this._activeBuffer.x)&&!e.hasContent(this._activeBuffer.x)&&this._activeBuffer.x--}return this._restrictCursor(),!0}tab(){if(this._activeBuffer.x>=this._bufferService.cols)return!0;const e=this._activeBuffer.x;return this._activeBuffer.x=this._activeBuffer.nextStop(),this._optionsService.rawOptions.screenReaderMode&&this._onA11yTab.fire(this._activeBuffer.x-e),!0}shiftOut(){return this._charsetService.setgLevel(1),!0}shiftIn(){return this._charsetService.setgLevel(0),!0}_restrictCursor(e=this._bufferService.cols-1){this._activeBuffer.x=Math.min(e,Math.max(0,this._activeBuffer.x)),this._activeBuffer.y=this._coreService.decPrivateModes.origin?Math.min(this._activeBuffer.scrollBottom,Math.max(this._activeBuffer.scrollTop,this._activeBuffer.y)):Math.min(this._bufferService.rows-1,Math.max(0,this._activeBuffer.y)),this._dirtyRowService.markDirty(this._activeBuffer.y)}_setCursor(e,t){this._dirtyRowService.markDirty(this._activeBuffer.y),this._coreService.decPrivateModes.origin?(this._activeBuffer.x=e,this._activeBuffer.y=this._activeBuffer.scrollTop+t):(this._activeBuffer.x=e,this._activeBuffer.y=t),this._restrictCursor(),this._dirtyRowService.markDirty(this._activeBuffer.y)}_moveCursor(e,t){this._restrictCursor(),this._setCursor(this._activeBuffer.x+e,this._activeBuffer.y+t)}cursorUp(e){const t=this._activeBuffer.y-this._activeBuffer.scrollTop;return t>=0?this._moveCursor(0,-Math.min(t,e.params[0]||1)):this._moveCursor(0,-(e.params[0]||1)),!0}cursorDown(e){const t=this._activeBuffer.scrollBottom-this._activeBuffer.y;return t>=0?this._moveCursor(0,Math.min(t,e.params[0]||1)):this._moveCursor(0,e.params[0]||1),!0}cursorForward(e){return this._moveCursor(e.params[0]||1,0),!0}cursorBackward(e){return this._moveCursor(-(e.params[0]||1),0),!0}cursorNextLine(e){return this.cursorDown(e),this._activeBuffer.x=0,!0}cursorPrecedingLine(e){return this.cursorUp(e),this._activeBuffer.x=0,!0}cursorCharAbsolute(e){return this._setCursor((e.params[0]||1)-1,this._activeBuffer.y),!0}cursorPosition(e){return this._setCursor(e.length>=2?(e.params[1]||1)-1:0,(e.params[0]||1)-1),!0}charPosAbsolute(e){return this._setCursor((e.params[0]||1)-1,this._activeBuffer.y),!0}hPositionRelative(e){return this._moveCursor(e.params[0]||1,0),!0}linePosAbsolute(e){return this._setCursor(this._activeBuffer.x,(e.params[0]||1)-1),!0}vPositionRelative(e){return this._moveCursor(0,e.params[0]||1),!0}hVPosition(e){return this.cursorPosition(e),!0}tabClear(e){const t=e.params[0];return 0===t?delete this._activeBuffer.tabs[this._activeBuffer.x]:3===t&&(this._activeBuffer.tabs={}),!0}cursorForwardTab(e){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let t=e.params[0]||1;for(;t--;)this._activeBuffer.x=this._activeBuffer.nextStop();return!0}cursorBackwardTab(e){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let t=e.params[0]||1;for(;t--;)this._activeBuffer.x=this._activeBuffer.prevStop();return!0}selectProtected(e){const t=e.params[0];return 1===t&&(this._curAttrData.bg|=536870912),2!==t&&0!==t||(this._curAttrData.bg&=-536870913),!0}_eraseInBufferLine(e,t,r,i=!1,n=!1){const s=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);s.replaceCells(t,r,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData(),n),i&&(s.isWrapped=!1)}_resetBufferLine(e,t=!1){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.fill(this._activeBuffer.getNullCell(this._eraseAttrData()),t),this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase+e),r.isWrapped=!1}eraseInDisplay(e,t=!1){let r;switch(this._restrictCursor(this._bufferService.cols),e.params[0]){case 0:for(r=this._activeBuffer.y,this._dirtyRowService.markDirty(r),this._eraseInBufferLine(r++,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,t);r<this._bufferService.rows;r++)this._resetBufferLine(r,t);this._dirtyRowService.markDirty(r);break;case 1:for(r=this._activeBuffer.y,this._dirtyRowService.markDirty(r),this._eraseInBufferLine(r,0,this._activeBuffer.x+1,!0,t),this._activeBuffer.x+1>=this._bufferService.cols&&(this._activeBuffer.lines.get(r+1).isWrapped=!1);r--;)this._resetBufferLine(r,t);this._dirtyRowService.markDirty(0);break;case 2:for(r=this._bufferService.rows,this._dirtyRowService.markDirty(r-1);r--;)this._resetBufferLine(r,t);this._dirtyRowService.markDirty(0);break;case 3:const e=this._activeBuffer.lines.length-this._bufferService.rows;e>0&&(this._activeBuffer.lines.trimStart(e),this._activeBuffer.ybase=Math.max(this._activeBuffer.ybase-e,0),this._activeBuffer.ydisp=Math.max(this._activeBuffer.ydisp-e,0),this._onScroll.fire(0))}return!0}eraseInLine(e,t=!1){switch(this._restrictCursor(this._bufferService.cols),e.params[0]){case 0:this._eraseInBufferLine(this._activeBuffer.y,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,t);break;case 1:this._eraseInBufferLine(this._activeBuffer.y,0,this._activeBuffer.x+1,!1,t);break;case 2:this._eraseInBufferLine(this._activeBuffer.y,0,this._bufferService.cols,!0,t)}return this._dirtyRowService.markDirty(this._activeBuffer.y),!0}insertLines(e){this._restrictCursor();let t=e.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const r=this._activeBuffer.ybase+this._activeBuffer.y,i=this._bufferService.rows-1-this._activeBuffer.scrollBottom,n=this._bufferService.rows-1+this._activeBuffer.ybase-i+1;for(;t--;)this._activeBuffer.lines.splice(n-1,1),this._activeBuffer.lines.splice(r,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}deleteLines(e){this._restrictCursor();let t=e.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const r=this._activeBuffer.ybase+this._activeBuffer.y;let i;for(i=this._bufferService.rows-1-this._activeBuffer.scrollBottom,i=this._bufferService.rows-1+this._activeBuffer.ybase-i;t--;)this._activeBuffer.lines.splice(r,1),this._activeBuffer.lines.splice(i,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}insertChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.insertCells(this._activeBuffer.x,e.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0}deleteChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.deleteCells(this._activeBuffer.x,e.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0}scrollUp(e){let t=e.params[0]||1;for(;t--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollDown(e){let t=e.params[0]||1;for(;t--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,0,this._activeBuffer.getBlankLine(l.DEFAULT_ATTR_DATA));return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollLeft(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.deleteCells(0,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollRight(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.insertCells(0,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}insertColumns(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.insertCells(this._activeBuffer.x,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}deleteColumns(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.deleteCells(this._activeBuffer.x,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}eraseChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.replaceCells(this._activeBuffer.x,this._activeBuffer.x+(e.params[0]||1),this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowService.markDirty(this._activeBuffer.y)),!0}repeatPrecedingCharacter(e){if(!this._parser.precedingCodepoint)return!0;const t=e.params[0]||1,r=new Uint32Array(t);for(let e=0;e<t;++e)r[e]=this._parser.precedingCodepoint;return this.print(r,0,r.length),!0}sendDeviceAttributesPrimary(e){return e.params[0]>0||(this._is("xterm")||this._is("rxvt-unicode")||this._is("screen")?this._coreService.triggerDataEvent(i.C0.ESC+"[?1;2c"):this._is("linux")&&this._coreService.triggerDataEvent(i.C0.ESC+"[?6c")),!0}sendDeviceAttributesSecondary(e){return e.params[0]>0||(this._is("xterm")?this._coreService.triggerDataEvent(i.C0.ESC+"[>0;276;0c"):this._is("rxvt-unicode")?this._coreService.triggerDataEvent(i.C0.ESC+"[>85;95;0c"):this._is("linux")?this._coreService.triggerDataEvent(e.params[0]+"c"):this._is("screen")&&this._coreService.triggerDataEvent(i.C0.ESC+"[>83;40003;0c")),!0}_is(e){return 0===(this._optionsService.rawOptions.termName+"").indexOf(e)}setMode(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 4:this._coreService.modes.insertMode=!0;break;case 20:this._optionsService.options.convertEol=!0}return!0}setModePrivate(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!0;break;case 2:this._charsetService.setgCharset(0,n.DEFAULT_CHARSET),this._charsetService.setgCharset(1,n.DEFAULT_CHARSET),this._charsetService.setgCharset(2,n.DEFAULT_CHARSET),this._charsetService.setgCharset(3,n.DEFAULT_CHARSET);break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(132,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!0,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!0;break;case 12:this._optionsService.options.cursorBlink=!0;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!0;break;case 66:this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire();break;case 9:this._coreMouseService.activeProtocol="X10";break;case 1e3:this._coreMouseService.activeProtocol="VT200";break;case 1002:this._coreMouseService.activeProtocol="DRAG";break;case 1003:this._coreMouseService.activeProtocol="ANY";break;case 1004:this._coreService.decPrivateModes.sendFocus=!0,this._onRequestSendFocus.fire();break;case 1005:this._logService.debug("DECSET 1005 not supported (see #2507)");break;case 1006:this._coreMouseService.activeEncoding="SGR";break;case 1015:this._logService.debug("DECSET 1015 not supported (see #2507)");break;case 1016:this._coreMouseService.activeEncoding="SGR_PIXELS";break;case 25:this._coreService.isCursorHidden=!1;break;case 1048:this.saveCursor();break;case 1049:this.saveCursor();case 47:case 1047:this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!0}return!0}resetMode(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 4:this._coreService.modes.insertMode=!1;break;case 20:this._optionsService.options.convertEol=!1}return!0}resetModePrivate(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!1;break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(80,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!1,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!1;break;case 12:this._optionsService.options.cursorBlink=!1;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!1;break;case 66:this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire();break;case 9:case 1e3:case 1002:case 1003:this._coreMouseService.activeProtocol="NONE";break;case 1004:this._coreService.decPrivateModes.sendFocus=!1;break;case 1005:this._logService.debug("DECRST 1005 not supported (see #2507)");break;case 1006:case 1016:this._coreMouseService.activeEncoding="DEFAULT";break;case 1015:this._logService.debug("DECRST 1015 not supported (see #2507)");break;case 25:this._coreService.isCursorHidden=!0;break;case 1048:this.restoreCursor();break;case 1049:case 47:case 1047:this._bufferService.buffers.activateNormalBuffer(),1049===e.params[t]&&this.restoreCursor(),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!1}return!0}requestMode(e,t){const r=this._coreService.decPrivateModes,{activeProtocol:n,activeEncoding:s}=this._coreMouseService,o=this._coreService,{buffers:a,cols:l}=this._bufferService,{active:c,alt:u}=a,h=this._optionsService.rawOptions,d=e=>e?1:2,f=e.params[0];return p=f,v=t?2===f?3:4===f?d(o.modes.insertMode):12===f?4:20===f?d(h.convertEol):0:1===f?d(r.applicationCursorKeys):3===f?h.windowOptions.setWinLines?80===l?2:132===l?1:0:0:6===f?d(r.origin):7===f?d(r.wraparound):8===f?3:9===f?d("X10"===n):12===f?d(h.cursorBlink):25===f?d(!o.isCursorHidden):45===f?d(r.reverseWraparound):66===f?d(r.applicationKeypad):1e3===f?d("VT200"===n):1002===f?d("DRAG"===n):1003===f?d("ANY"===n):1004===f?d(r.sendFocus):1005===f?4:1006===f?d("SGR"===s):1015===f?4:1016===f?d("SGR_PIXELS"===s):1048===f?1:47===f||1047===f||1049===f?d(c===u):2004===f?d(r.bracketedPasteMode):0,o.triggerDataEvent(`${i.C0.ESC}[${t?"":"?"}${p};${v}$y`),!0;var p,v}_updateAttrColor(e,t,r,i,n){return 2===t?(e|=50331648,e&=-16777216,e|=d.AttributeData.fromColorRGB([r,i,n])):5===t&&(e&=-50331904,e|=33554432|255&r),e}_extractColor(e,t,r){const i=[0,0,-1,0,0,0];let n=0,s=0;do{if(i[s+n]=e.params[t+s],e.hasSubParams(t+s)){const r=e.getSubParams(t+s);let o=0;do{5===i[1]&&(n=1),i[s+o+1+n]=r[o]}while(++o<r.length&&o+s+1+n<i.length);break}if(5===i[1]&&s+n>=2||2===i[1]&&s+n>=5)break;i[1]&&(n=1)}while(++s+t<e.length&&s+n<i.length);for(let e=2;e<i.length;++e)-1===i[e]&&(i[e]=0);switch(i[0]){case 38:r.fg=this._updateAttrColor(r.fg,i[1],i[3],i[4],i[5]);break;case 48:r.bg=this._updateAttrColor(r.bg,i[1],i[3],i[4],i[5]);break;case 58:r.extended=r.extended.clone(),r.extended.underlineColor=this._updateAttrColor(r.extended.underlineColor,i[1],i[3],i[4],i[5])}return s}_processUnderline(e,t){t.extended=t.extended.clone(),(!~e||e>5)&&(e=1),t.extended.underlineStyle=e,t.fg|=268435456,0===e&&(t.fg&=-268435457),t.updateExtended()}charAttributes(e){if(1===e.length&&0===e.params[0])return this._curAttrData.fg=l.DEFAULT_ATTR_DATA.fg,this._curAttrData.bg=l.DEFAULT_ATTR_DATA.bg,!0;const t=e.length;let r;const i=this._curAttrData;for(let n=0;n<t;n++)r=e.params[n],r>=30&&r<=37?(i.fg&=-50331904,i.fg|=16777216|r-30):r>=40&&r<=47?(i.bg&=-50331904,i.bg|=16777216|r-40):r>=90&&r<=97?(i.fg&=-50331904,i.fg|=16777224|r-90):r>=100&&r<=107?(i.bg&=-50331904,i.bg|=16777224|r-100):0===r?(i.fg=l.DEFAULT_ATTR_DATA.fg,i.bg=l.DEFAULT_ATTR_DATA.bg):1===r?i.fg|=134217728:3===r?i.bg|=67108864:4===r?(i.fg|=268435456,this._processUnderline(e.hasSubParams(n)?e.getSubParams(n)[0]:1,i)):5===r?i.fg|=536870912:7===r?i.fg|=67108864:8===r?i.fg|=1073741824:9===r?i.fg|=2147483648:2===r?i.bg|=134217728:21===r?this._processUnderline(2,i):22===r?(i.fg&=-134217729,i.bg&=-134217729):23===r?i.bg&=-67108865:24===r?(i.fg&=-268435457,this._processUnderline(0,i)):25===r?i.fg&=-536870913:27===r?i.fg&=-67108865:28===r?i.fg&=-1073741825:29===r?i.fg&=2147483647:39===r?(i.fg&=-67108864,i.fg|=16777215&l.DEFAULT_ATTR_DATA.fg):49===r?(i.bg&=-67108864,i.bg|=16777215&l.DEFAULT_ATTR_DATA.bg):38===r||48===r||58===r?n+=this._extractColor(e,n,i):59===r?(i.extended=i.extended.clone(),i.extended.underlineColor=-1,i.updateExtended()):100===r?(i.fg&=-67108864,i.fg|=16777215&l.DEFAULT_ATTR_DATA.fg,i.bg&=-67108864,i.bg|=16777215&l.DEFAULT_ATTR_DATA.bg):this._logService.debug("Unknown SGR attribute: %d.",r);return!0}deviceStatus(e){switch(e.params[0]){case 5:this._coreService.triggerDataEvent(`${i.C0.ESC}[0n`);break;case 6:const e=this._activeBuffer.y+1,t=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${i.C0.ESC}[${e};${t}R`)}return!0}deviceStatusPrivate(e){if(6===e.params[0]){const e=this._activeBuffer.y+1,t=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${i.C0.ESC}[?${e};${t}R`)}return!0}softReset(e){return this._coreService.isCursorHidden=!1,this._onRequestSyncScrollBar.fire(),this._activeBuffer.scrollTop=0,this._activeBuffer.scrollBottom=this._bufferService.rows-1,this._curAttrData=l.DEFAULT_ATTR_DATA.clone(),this._coreService.reset(),this._charsetService.reset(),this._activeBuffer.savedX=0,this._activeBuffer.savedY=this._activeBuffer.ybase,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,this._coreService.decPrivateModes.origin=!1,!0}setCursorStyle(e){const t=e.params[0]||1;switch(t){case 1:case 2:this._optionsService.options.cursorStyle="block";break;case 3:case 4:this._optionsService.options.cursorStyle="underline";break;case 5:case 6:this._optionsService.options.cursorStyle="bar"}const r=t%2==1;return this._optionsService.options.cursorBlink=r,!0}setScrollRegion(e){const t=e.params[0]||1;let r;return(e.length<2||(r=e.params[1])>this._bufferService.rows||0===r)&&(r=this._bufferService.rows),r>t&&(this._activeBuffer.scrollTop=t-1,this._activeBuffer.scrollBottom=r-1,this._setCursor(0,0)),!0}windowOptions(e){if(!b(e.params[0],this._optionsService.rawOptions.windowOptions))return!0;const t=e.length>1?e.params[1]:0;switch(e.params[0]){case 14:2!==t&&this._onRequestWindowsOptionsReport.fire(y.GET_WIN_SIZE_PIXELS);break;case 16:this._onRequestWindowsOptionsReport.fire(y.GET_CELL_SIZE_PIXELS);break;case 18:this._bufferService&&this._coreService.triggerDataEvent(`${i.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);break;case 22:0!==t&&2!==t||(this._windowTitleStack.push(this._windowTitle),this._windowTitleStack.length>10&&this._windowTitleStack.shift()),0!==t&&1!==t||(this._iconNameStack.push(this._iconName),this._iconNameStack.length>10&&this._iconNameStack.shift());break;case 23:0!==t&&2!==t||this._windowTitleStack.length&&this.setTitle(this._windowTitleStack.pop()),0!==t&&1!==t||this._iconNameStack.length&&this.setIconName(this._iconNameStack.pop())}return!0}saveCursor(e){return this._activeBuffer.savedX=this._activeBuffer.x,this._activeBuffer.savedY=this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,!0}restoreCursor(e){return this._activeBuffer.x=this._activeBuffer.savedX||0,this._activeBuffer.y=Math.max(this._activeBuffer.savedY-this._activeBuffer.ybase,0),this._curAttrData.fg=this._activeBuffer.savedCurAttrData.fg,this._curAttrData.bg=this._activeBuffer.savedCurAttrData.bg,this._charsetService.charset=this._savedCharset,this._activeBuffer.savedCharset&&(this._charsetService.charset=this._activeBuffer.savedCharset),this._restrictCursor(),!0}setTitle(e){return this._windowTitle=e,this._onTitleChange.fire(e),!0}setIconName(e){return this._iconName=e,!0}setOrReportIndexedColor(e){const t=[],r=e.split(";");for(;r.length>1;){const e=r.shift(),i=r.shift();if(/^\d+$/.exec(e)){const r=parseInt(e);if(0<=r&&r<256)if("?"===i)t.push({type:0,index:r});else{const e=(0,g.parseColor)(i);e&&t.push({type:1,index:r,color:e})}}}return t.length&&this._onColor.fire(t),!0}setHyperlink(e){const t=e.split(";");return!(t.length<2)&&(t[1]?this._createHyperlink(t[0],t[1]):!t[0]&&this._finishHyperlink())}_createHyperlink(e,t){void 0!==this._currentLinkId&&this._finishHyperlink();const r=e.split(":");let i;const n=r.findIndex((e=>e.startsWith("id=")));return-1!==n&&(i=r[n].slice(3)||void 0),this._curAttrData.extended=this._curAttrData.extended.clone(),this._currentLinkId=this._oscLinkService.registerLink({id:i,uri:t}),this._curAttrData.extended.urlId=this._currentLinkId,this._curAttrData.updateExtended(),!0}_finishHyperlink(){return this._curAttrData.extended=this._curAttrData.extended.clone(),this._curAttrData.extended.urlId=0,this._curAttrData.updateExtended(),this._currentLinkId=void 0,!0}_setOrReportSpecialColor(e,t){const r=e.split(";");for(let e=0;e<r.length&&!(t>=this._specialColors.length);++e,++t)if("?"===r[e])this._onColor.fire([{type:0,index:this._specialColors[t]}]);else{const i=(0,g.parseColor)(r[e]);i&&this._onColor.fire([{type:1,index:this._specialColors[t],color:i}])}return!0}setOrReportFgColor(e){return this._setOrReportSpecialColor(e,0)}setOrReportBgColor(e){return this._setOrReportSpecialColor(e,1)}setOrReportCursorColor(e){return this._setOrReportSpecialColor(e,2)}restoreIndexedColor(e){if(!e)return this._onColor.fire([{type:2}]),!0;const t=[],r=e.split(";");for(let e=0;e<r.length;++e)if(/^\d+$/.exec(r[e])){const i=parseInt(r[e]);0<=i&&i<256&&t.push({type:2,index:i})}return t.length&&this._onColor.fire(t),!0}restoreFgColor(e){return this._onColor.fire([{type:2,index:256}]),!0}restoreBgColor(e){return this._onColor.fire([{type:2,index:257}]),!0}restoreCursorColor(e){return this._onColor.fire([{type:2,index:258}]),!0}nextLine(){return this._activeBuffer.x=0,this.index(),!0}keypadApplicationMode(){return this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire(),!0}keypadNumericMode(){return this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire(),!0}selectDefaultCharset(){return this._charsetService.setgLevel(0),this._charsetService.setgCharset(0,n.DEFAULT_CHARSET),!0}selectCharset(e){return 2!==e.length?(this.selectDefaultCharset(),!0):("/"===e[0]||this._charsetService.setgCharset(_[e[0]],n.CHARSETS[e[1]]||n.DEFAULT_CHARSET),!0)}index(){return this._restrictCursor(),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._restrictCursor(),!0}tabSet(){return this._activeBuffer.tabs[this._activeBuffer.x]=!0,!0}reverseIndex(){if(this._restrictCursor(),this._activeBuffer.y===this._activeBuffer.scrollTop){const e=this._activeBuffer.scrollBottom-this._activeBuffer.scrollTop;this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase+this._activeBuffer.y,e,1),this._activeBuffer.lines.set(this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.getBlankLine(this._eraseAttrData())),this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom)}else this._activeBuffer.y--,this._restrictCursor();return!0}fullReset(){return this._parser.reset(),this._onRequestReset.fire(),!0}reset(){this._curAttrData=l.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=l.DEFAULT_ATTR_DATA.clone()}_eraseAttrData(){return this._eraseAttrDataInternal.bg&=-67108864,this._eraseAttrDataInternal.bg|=67108863&this._curAttrData.bg,this._eraseAttrDataInternal}setgLevel(e){return this._charsetService.setgLevel(e),!0}screenAlignmentPattern(){const e=new h.CellData;e.content=1<<22|"E".charCodeAt(0),e.fg=this._curAttrData.fg,e.bg=this._curAttrData.bg,this._setCursor(0,0);for(let t=0;t<this._bufferService.rows;++t){const r=this._activeBuffer.ybase+this._activeBuffer.y+t,i=this._activeBuffer.lines.get(r);i&&(i.fill(e),i.isWrapped=!1)}return this._dirtyRowService.markAllDirty(),this._setCursor(0,0),!0}requestStatusString(e,t){const r=this._bufferService.buffer,n=this._optionsService.rawOptions;return(e=>(this._coreService.triggerDataEvent(`${i.C0.ESC}${e}${i.C0.ESC}\\`),!0))('"q'===e?`P1$r${this._curAttrData.isProtected()?1:0}"q`:'"p'===e?'P1$r61;1"p':"r"===e?`P1$r${r.scrollTop+1};${r.scrollBottom+1}r`:"m"===e?"P1$r0m":" q"===e?`P1$r${{block:2,underline:4,bar:6}[n.cursorStyle]-(n.cursorBlink?1:0)} q`:"P0$r")}}t.InputHandler=S},844:(e,t)=>{function r(e){for(const t of e)t.dispose();e.length=0}Object.defineProperty(t,"__esModule",{value:!0}),t.getDisposeArrayDisposable=t.disposeArray=t.toDisposable=t.Disposable=void 0,t.Disposable=class{constructor(){this._disposables=[],this._isDisposed=!1}dispose(){this._isDisposed=!0;for(const e of this._disposables)e.dispose();this._disposables.length=0}register(e){return this._disposables.push(e),e}unregister(e){const t=this._disposables.indexOf(e);-1!==t&&this._disposables.splice(t,1)}},t.toDisposable=function(e){return{dispose:e}},t.disposeArray=r,t.getDisposeArrayDisposable=function(e){return{dispose:()=>r(e)}}},1505:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FourKeyMap=t.TwoKeyMap=void 0;class r{constructor(){this._data={}}set(e,t,r){this._data[e]||(this._data[e]={}),this._data[e][t]=r}get(e,t){return this._data[e]?this._data[e][t]:void 0}clear(){this._data={}}}t.TwoKeyMap=r,t.FourKeyMap=class{constructor(){this._data=new r}set(e,t,i,n,s){this._data.get(e,t)||this._data.set(e,t,new r),this._data.get(e,t).set(i,n,s)}get(e,t,r,i){var n;return null===(n=this._data.get(e,t))||void 0===n?void 0:n.get(r,i)}clear(){this._data.clear()}}},6114:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isLinux=t.isWindows=t.isIphone=t.isIpad=t.isMac=t.isSafari=t.isLegacyEdge=t.isFirefox=void 0;const r="undefined"==typeof navigator,i=r?"node":navigator.userAgent,n=r?"node":navigator.platform;t.isFirefox=i.includes("Firefox"),t.isLegacyEdge=i.includes("Edge"),t.isSafari=/^((?!chrome|android).)*safari/i.test(i),t.isMac=["Macintosh","MacIntel","MacPPC","Mac68K"].includes(n),t.isIpad="iPad"===n,t.isIphone="iPhone"===n,t.isWindows=["Windows","Win16","Win32","WinCE"].includes(n),t.isLinux=n.indexOf("Linux")>=0},6106:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SortedList=void 0;let r=0;t.SortedList=class{constructor(e){this._getKey=e,this._array=[]}clear(){this._array.length=0}insert(e){0!==this._array.length?(r=this._search(this._getKey(e),0,this._array.length-1),this._array.splice(r,0,e)):this._array.push(e)}delete(e){if(0===this._array.length)return!1;const t=this._getKey(e);if(void 0===t)return!1;if(r=this._search(t,0,this._array.length-1),-1===r)return!1;if(this._getKey(this._array[r])!==t)return!1;do{if(this._array[r]===e)return this._array.splice(r,1),!0}while(++r<this._array.length&&this._getKey(this._array[r])===t);return!1}*getKeyIterator(e){if(0!==this._array.length&&(r=this._search(e,0,this._array.length-1),!(r<0||r>=this._array.length)&&this._getKey(this._array[r])===e))do{yield this._array[r]}while(++r<this._array.length&&this._getKey(this._array[r])===e)}forEachByKey(e,t){if(0!==this._array.length&&(r=this._search(e,0,this._array.length-1),!(r<0||r>=this._array.length)&&this._getKey(this._array[r])===e))do{t(this._array[r])}while(++r<this._array.length&&this._getKey(this._array[r])===e)}values(){return this._array.values()}_search(e,t,r){if(r<t)return t;let i=Math.floor((t+r)/2);const n=this._getKey(this._array[i]);if(n>e)return this._search(e,t,i-1);if(n<e)return this._search(e,i+1,r);for(;i>0&&this._getKey(this._array[i-1])===e;)i--;return i}}},8273:(e,t)=>{function r(e,t,r=0,i=e.length){if(r>=e.length)return e;r=(e.length+r)%e.length,i=i>=e.length?e.length:(e.length+i)%e.length;for(let n=r;n<i;++n)e[n]=t;return e}Object.defineProperty(t,"__esModule",{value:!0}),t.concat=t.fillFallback=t.fill=void 0,t.fill=function(e,t,i,n){return e.fill?e.fill(t,i,n):r(e,t,i,n)},t.fillFallback=r,t.concat=function(e,t){const r=new e.constructor(e.length+t.length);return r.set(e),r.set(t,e.length),r}},9282:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateWindowsModeWrappedState=void 0;const i=r(643);t.updateWindowsModeWrappedState=function(e){const t=e.buffer.lines.get(e.buffer.ybase+e.buffer.y-1),r=null==t?void 0:t.get(e.cols-1),n=e.buffer.lines.get(e.buffer.ybase+e.buffer.y);n&&r&&(n.isWrapped=r[i.CHAR_DATA_CODE_INDEX]!==i.NULL_CELL_CODE&&r[i.CHAR_DATA_CODE_INDEX]!==i.WHITESPACE_CELL_CODE)}},3734:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExtendedAttrs=t.AttributeData=void 0;class r{constructor(){this.fg=0,this.bg=0,this.extended=new i}static toColorRGB(e){return[e>>>16&255,e>>>8&255,255&e]}static fromColorRGB(e){return(255&e[0])<<16|(255&e[1])<<8|255&e[2]}clone(){const e=new r;return e.fg=this.fg,e.bg=this.bg,e.extended=this.extended.clone(),e}isInverse(){return 67108864&this.fg}isBold(){return 134217728&this.fg}isUnderline(){return this.hasExtendedAttrs()&&0!==this.extended.underlineStyle?1:268435456&this.fg}isBlink(){return 536870912&this.fg}isInvisible(){return 1073741824&this.fg}isItalic(){return 67108864&this.bg}isDim(){return 134217728&this.bg}isStrikethrough(){return 2147483648&this.fg}isProtected(){return 536870912&this.bg}getFgColorMode(){return 50331648&this.fg}getBgColorMode(){return 50331648&this.bg}isFgRGB(){return 50331648==(50331648&this.fg)}isBgRGB(){return 50331648==(50331648&this.bg)}isFgPalette(){return 16777216==(50331648&this.fg)||33554432==(50331648&this.fg)}isBgPalette(){return 16777216==(50331648&this.bg)||33554432==(50331648&this.bg)}isFgDefault(){return 0==(50331648&this.fg)}isBgDefault(){return 0==(50331648&this.bg)}isAttributeDefault(){return 0===this.fg&&0===this.bg}getFgColor(){switch(50331648&this.fg){case 16777216:case 33554432:return 255&this.fg;case 50331648:return 16777215&this.fg;default:return-1}}getBgColor(){switch(50331648&this.bg){case 16777216:case 33554432:return 255&this.bg;case 50331648:return 16777215&this.bg;default:return-1}}hasExtendedAttrs(){return 268435456&this.bg}updateExtended(){this.extended.isEmpty()?this.bg&=-268435457:this.bg|=268435456}getUnderlineColor(){if(268435456&this.bg&&~this.extended.underlineColor)switch(50331648&this.extended.underlineColor){case 16777216:case 33554432:return 255&this.extended.underlineColor;case 50331648:return 16777215&this.extended.underlineColor;default:return this.getFgColor()}return this.getFgColor()}getUnderlineColorMode(){return 268435456&this.bg&&~this.extended.underlineColor?50331648&this.extended.underlineColor:this.getFgColorMode()}isUnderlineColorRGB(){return 268435456&this.bg&&~this.extended.underlineColor?50331648==(50331648&this.extended.underlineColor):this.isFgRGB()}isUnderlineColorPalette(){return 268435456&this.bg&&~this.extended.underlineColor?16777216==(50331648&this.extended.underlineColor)||33554432==(50331648&this.extended.underlineColor):this.isFgPalette()}isUnderlineColorDefault(){return 268435456&this.bg&&~this.extended.underlineColor?0==(50331648&this.extended.underlineColor):this.isFgDefault()}getUnderlineStyle(){return 268435456&this.fg?268435456&this.bg?this.extended.underlineStyle:1:0}}t.AttributeData=r;class i{constructor(e=0,t=0){this._ext=0,this._urlId=0,this._ext=e,this._urlId=t}get ext(){return this._urlId?-469762049&this._ext|this.underlineStyle<<26:this._ext}set ext(e){this._ext=e}get underlineStyle(){return this._urlId?5:(469762048&this._ext)>>26}set underlineStyle(e){this._ext&=-469762049,this._ext|=e<<26&469762048}get underlineColor(){return 67108863&this._ext}set underlineColor(e){this._ext&=-67108864,this._ext|=67108863&e}get urlId(){return this._urlId}set urlId(e){this._urlId=e}clone(){return new i(this._ext,this._urlId)}isEmpty(){return 0===this.underlineStyle&&0===this._urlId}}t.ExtendedAttrs=i},9092:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferStringIterator=t.Buffer=t.MAX_BUFFER_SIZE=void 0;const i=r(6349),n=r(8437),s=r(511),o=r(643),a=r(4634),l=r(4863),c=r(7116),u=r(3734);t.MAX_BUFFER_SIZE=4294967295,t.Buffer=class{constructor(e,t,r){this._hasScrollback=e,this._optionsService=t,this._bufferService=r,this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.savedY=0,this.savedX=0,this.savedCurAttrData=n.DEFAULT_ATTR_DATA.clone(),this.savedCharset=c.DEFAULT_CHARSET,this.markers=[],this._nullCell=s.CellData.fromCharData([0,o.NULL_CELL_CHAR,o.NULL_CELL_WIDTH,o.NULL_CELL_CODE]),this._whitespaceCell=s.CellData.fromCharData([0,o.WHITESPACE_CELL_CHAR,o.WHITESPACE_CELL_WIDTH,o.WHITESPACE_CELL_CODE]),this._isClearing=!1,this._cols=this._bufferService.cols,this._rows=this._bufferService.rows,this.lines=new i.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}getNullCell(e){return e?(this._nullCell.fg=e.fg,this._nullCell.bg=e.bg,this._nullCell.extended=e.extended):(this._nullCell.fg=0,this._nullCell.bg=0,this._nullCell.extended=new u.ExtendedAttrs),this._nullCell}getWhitespaceCell(e){return e?(this._whitespaceCell.fg=e.fg,this._whitespaceCell.bg=e.bg,this._whitespaceCell.extended=e.extended):(this._whitespaceCell.fg=0,this._whitespaceCell.bg=0,this._whitespaceCell.extended=new u.ExtendedAttrs),this._whitespaceCell}getBlankLine(e,t){return new n.BufferLine(this._bufferService.cols,this.getNullCell(e),t)}get hasScrollback(){return this._hasScrollback&&this.lines.maxLength>this._rows}get isCursorInViewport(){const e=this.ybase+this.y-this.ydisp;return e>=0&&e<this._rows}_getCorrectBufferLength(e){if(!this._hasScrollback)return e;const r=e+this._optionsService.rawOptions.scrollback;return r>t.MAX_BUFFER_SIZE?t.MAX_BUFFER_SIZE:r}fillViewportRows(e){if(0===this.lines.length){void 0===e&&(e=n.DEFAULT_ATTR_DATA);let t=this._rows;for(;t--;)this.lines.push(this.getBlankLine(e))}}clear(){this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.lines=new i.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}resize(e,t){const r=this.getNullCell(n.DEFAULT_ATTR_DATA),i=this._getCorrectBufferLength(t);if(i>this.lines.maxLength&&(this.lines.maxLength=i),this.lines.length>0){if(this._cols<e)for(let t=0;t<this.lines.length;t++)this.lines.get(t).resize(e,r);let s=0;if(this._rows<t)for(let i=this._rows;i<t;i++)this.lines.length<t+this.ybase&&(this._optionsService.rawOptions.windowsMode?this.lines.push(new n.BufferLine(e,r)):this.ybase>0&&this.lines.length<=this.ybase+this.y+s+1?(this.ybase--,s++,this.ydisp>0&&this.ydisp--):this.lines.push(new n.BufferLine(e,r)));else for(let e=this._rows;e>t;e--)this.lines.length>t+this.ybase&&(this.lines.length>this.ybase+this.y+1?this.lines.pop():(this.ybase++,this.ydisp++));if(i<this.lines.maxLength){const e=this.lines.length-i;e>0&&(this.lines.trimStart(e),this.ybase=Math.max(this.ybase-e,0),this.ydisp=Math.max(this.ydisp-e,0),this.savedY=Math.max(this.savedY-e,0)),this.lines.maxLength=i}this.x=Math.min(this.x,e-1),this.y=Math.min(this.y,t-1),s&&(this.y+=s),this.savedX=Math.min(this.savedX,e-1),this.scrollTop=0}if(this.scrollBottom=t-1,this._isReflowEnabled&&(this._reflow(e,t),this._cols>e))for(let t=0;t<this.lines.length;t++)this.lines.get(t).resize(e,r);this._cols=e,this._rows=t}get _isReflowEnabled(){return this._hasScrollback&&!this._optionsService.rawOptions.windowsMode}_reflow(e,t){this._cols!==e&&(e>this._cols?this._reflowLarger(e,t):this._reflowSmaller(e,t))}_reflowLarger(e,t){const r=(0,a.reflowLargerGetLinesToRemove)(this.lines,this._cols,e,this.ybase+this.y,this.getNullCell(n.DEFAULT_ATTR_DATA));if(r.length>0){const i=(0,a.reflowLargerCreateNewLayout)(this.lines,r);(0,a.reflowLargerApplyNewLayout)(this.lines,i.layout),this._reflowLargerAdjustViewport(e,t,i.countRemoved)}}_reflowLargerAdjustViewport(e,t,r){const i=this.getNullCell(n.DEFAULT_ATTR_DATA);let s=r;for(;s-- >0;)0===this.ybase?(this.y>0&&this.y--,this.lines.length<t&&this.lines.push(new n.BufferLine(e,i))):(this.ydisp===this.ybase&&this.ydisp--,this.ybase--);this.savedY=Math.max(this.savedY-r,0)}_reflowSmaller(e,t){const r=this.getNullCell(n.DEFAULT_ATTR_DATA),i=[];let s=0;for(let o=this.lines.length-1;o>=0;o--){let l=this.lines.get(o);if(!l||!l.isWrapped&&l.getTrimmedLength()<=e)continue;const c=[l];for(;l.isWrapped&&o>0;)l=this.lines.get(--o),c.unshift(l);const u=this.ybase+this.y;if(u>=o&&u<o+c.length)continue;const h=c[c.length-1].getTrimmedLength(),d=(0,a.reflowSmallerGetNewLineLengths)(c,this._cols,e),f=d.length-c.length;let p;p=0===this.ybase&&this.y!==this.lines.length-1?Math.max(0,this.y-this.lines.maxLength+f):Math.max(0,this.lines.length-this.lines.maxLength+f);const v=[];for(let e=0;e<f;e++){const e=this.getBlankLine(n.DEFAULT_ATTR_DATA,!0);v.push(e)}v.length>0&&(i.push({start:o+c.length+s,newLines:v}),s+=v.length),c.push(...v);let g=d.length-1,_=d[g];0===_&&(g--,_=d[g]);let m=c.length-f-1,b=h;for(;m>=0;){const e=Math.min(b,_);if(void 0===c[g])break;if(c[g].copyCellsFrom(c[m],b-e,_-e,e,!0),_-=e,0===_&&(g--,_=d[g]),b-=e,0===b){m--;const e=Math.max(m,0);b=(0,a.getWrappedLineTrimmedLength)(c,e,this._cols)}}for(let t=0;t<c.length;t++)d[t]<e&&c[t].setCell(d[t],r);let y=f-p;for(;y-- >0;)0===this.ybase?this.y<t-1?(this.y++,this.lines.pop()):(this.ybase++,this.ydisp++):this.ybase<Math.min(this.lines.maxLength,this.lines.length+s)-t&&(this.ybase===this.ydisp&&this.ydisp++,this.ybase++);this.savedY=Math.min(this.savedY+f,this.ybase+t-1)}if(i.length>0){const e=[],t=[];for(let e=0;e<this.lines.length;e++)t.push(this.lines.get(e));const r=this.lines.length;let n=r-1,o=0,a=i[o];this.lines.length=Math.min(this.lines.maxLength,this.lines.length+s);let l=0;for(let c=Math.min(this.lines.maxLength-1,r+s-1);c>=0;c--)if(a&&a.start>n+l){for(let e=a.newLines.length-1;e>=0;e--)this.lines.set(c--,a.newLines[e]);c++,e.push({index:n+1,amount:a.newLines.length}),l+=a.newLines.length,a=i[++o]}else this.lines.set(c,t[n--]);let c=0;for(let t=e.length-1;t>=0;t--)e[t].index+=c,this.lines.onInsertEmitter.fire(e[t]),c+=e[t].amount;const u=Math.max(0,r+s-this.lines.maxLength);u>0&&this.lines.onTrimEmitter.fire(u)}}stringIndexToBufferIndex(e,t,r=!1){for(;t;){const i=this.lines.get(e);if(!i)return[-1,-1];const n=r?i.getTrimmedLength():i.length;for(let r=0;r<n;++r)if(i.get(r)[o.CHAR_DATA_WIDTH_INDEX]&&(t-=i.get(r)[o.CHAR_DATA_CHAR_INDEX].length||1),t<0)return[e,r];e++}return[e,0]}translateBufferLineToString(e,t,r=0,i){const n=this.lines.get(e);return n?n.translateToString(t,r,i):""}getWrappedRangeForLine(e){let t=e,r=e;for(;t>0&&this.lines.get(t).isWrapped;)t--;for(;r+1<this.lines.length&&this.lines.get(r+1).isWrapped;)r++;return{first:t,last:r}}setupTabStops(e){for(null!=e?this.tabs[e]||(e=this.prevStop(e)):(this.tabs={},e=0);e<this._cols;e+=this._optionsService.rawOptions.tabStopWidth)this.tabs[e]=!0}prevStop(e){for(null==e&&(e=this.x);!this.tabs[--e]&&e>0;);return e>=this._cols?this._cols-1:e<0?0:e}nextStop(e){for(null==e&&(e=this.x);!this.tabs[++e]&&e<this._cols;);return e>=this._cols?this._cols-1:e<0?0:e}clearMarkers(e){this._isClearing=!0;for(let t=0;t<this.markers.length;t++)this.markers[t].line===e&&(this.markers[t].dispose(),this.markers.splice(t--,1));this._isClearing=!1}clearAllMarkers(){this._isClearing=!0;for(let e=0;e<this.markers.length;e++)this.markers[e].dispose(),this.markers.splice(e--,1);this._isClearing=!1}addMarker(e){const t=new l.Marker(e);return this.markers.push(t),t.register(this.lines.onTrim((e=>{t.line-=e,t.line<0&&t.dispose()}))),t.register(this.lines.onInsert((e=>{t.line>=e.index&&(t.line+=e.amount)}))),t.register(this.lines.onDelete((e=>{t.line>=e.index&&t.line<e.index+e.amount&&t.dispose(),t.line>e.index&&(t.line-=e.amount)}))),t.register(t.onDispose((()=>this._removeMarker(t)))),t}_removeMarker(e){this._isClearing||this.markers.splice(this.markers.indexOf(e),1)}iterator(e,t,r,i,n){return new h(this,e,t,r,i,n)}};class h{constructor(e,t,r=0,i=e.lines.length,n=0,s=0){this._buffer=e,this._trimRight=t,this._startIndex=r,this._endIndex=i,this._startOverscan=n,this._endOverscan=s,this._startIndex<0&&(this._startIndex=0),this._endIndex>this._buffer.lines.length&&(this._endIndex=this._buffer.lines.length),this._current=this._startIndex}hasNext(){return this._current<this._endIndex}next(){const e=this._buffer.getWrappedRangeForLine(this._current);e.first<this._startIndex-this._startOverscan&&(e.first=this._startIndex-this._startOverscan),e.last>this._endIndex+this._endOverscan&&(e.last=this._endIndex+this._endOverscan),e.first=Math.max(e.first,0),e.last=Math.min(e.last,this._buffer.lines.length);let t="";for(let r=e.first;r<=e.last;++r)t+=this._buffer.translateBufferLineToString(r,this._trimRight);return this._current=e.last+1,{range:e,content:t}}}t.BufferStringIterator=h},8437:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferLine=t.DEFAULT_ATTR_DATA=void 0;const i=r(482),n=r(643),s=r(511),o=r(3734);t.DEFAULT_ATTR_DATA=Object.freeze(new o.AttributeData);const a={startIndex:0};class l{constructor(e,t,r=!1){this.isWrapped=r,this._combined={},this._extendedAttrs={},this._data=new Uint32Array(3*e);const i=t||s.CellData.fromCharData([0,n.NULL_CELL_CHAR,n.NULL_CELL_WIDTH,n.NULL_CELL_CODE]);for(let t=0;t<e;++t)this.setCell(t,i);this.length=e}get(e){const t=this._data[3*e+0],r=2097151&t;return[this._data[3*e+1],2097152&t?this._combined[e]:r?(0,i.stringFromCodePoint)(r):"",t>>22,2097152&t?this._combined[e].charCodeAt(this._combined[e].length-1):r]}set(e,t){this._data[3*e+1]=t[n.CHAR_DATA_ATTR_INDEX],t[n.CHAR_DATA_CHAR_INDEX].length>1?(this._combined[e]=t[1],this._data[3*e+0]=2097152|e|t[n.CHAR_DATA_WIDTH_INDEX]<<22):this._data[3*e+0]=t[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|t[n.CHAR_DATA_WIDTH_INDEX]<<22}getWidth(e){return this._data[3*e+0]>>22}hasWidth(e){return 12582912&this._data[3*e+0]}getFg(e){return this._data[3*e+1]}getBg(e){return this._data[3*e+2]}hasContent(e){return 4194303&this._data[3*e+0]}getCodePoint(e){const t=this._data[3*e+0];return 2097152&t?this._combined[e].charCodeAt(this._combined[e].length-1):2097151&t}isCombined(e){return 2097152&this._data[3*e+0]}getString(e){const t=this._data[3*e+0];return 2097152&t?this._combined[e]:2097151&t?(0,i.stringFromCodePoint)(2097151&t):""}isProtected(e){return 536870912&this._data[3*e+2]}loadCell(e,t){return a.startIndex=3*e,t.content=this._data[a.startIndex+0],t.fg=this._data[a.startIndex+1],t.bg=this._data[a.startIndex+2],2097152&t.content&&(t.combinedData=this._combined[e]),268435456&t.bg&&(t.extended=this._extendedAttrs[e]),t}setCell(e,t){2097152&t.content&&(this._combined[e]=t.combinedData),268435456&t.bg&&(this._extendedAttrs[e]=t.extended),this._data[3*e+0]=t.content,this._data[3*e+1]=t.fg,this._data[3*e+2]=t.bg}setCellFromCodePoint(e,t,r,i,n,s){268435456&n&&(this._extendedAttrs[e]=s),this._data[3*e+0]=t|r<<22,this._data[3*e+1]=i,this._data[3*e+2]=n}addCodepointToCell(e,t){let r=this._data[3*e+0];2097152&r?this._combined[e]+=(0,i.stringFromCodePoint)(t):(2097151&r?(this._combined[e]=(0,i.stringFromCodePoint)(2097151&r)+(0,i.stringFromCodePoint)(t),r&=-2097152,r|=2097152):r=t|1<<22,this._data[3*e+0]=r)}insertCells(e,t,r,i){if((e%=this.length)&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length-e){const i=new s.CellData;for(let r=this.length-e-t-1;r>=0;--r)this.setCell(e+t+r,this.loadCell(e+r,i));for(let i=0;i<t;++i)this.setCell(e+i,r)}else for(let t=e;t<this.length;++t)this.setCell(t,r);2===this.getWidth(this.length-1)&&this.setCellFromCodePoint(this.length-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs)}deleteCells(e,t,r,i){if(e%=this.length,t<this.length-e){const i=new s.CellData;for(let r=0;r<this.length-e-t;++r)this.setCell(e+r,this.loadCell(e+t+r,i));for(let e=this.length-t;e<this.length;++e)this.setCell(e,r)}else for(let t=e;t<this.length;++t)this.setCell(t,r);e&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),0!==this.getWidth(e)||this.hasContent(e)||this.setCellFromCodePoint(e,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs)}replaceCells(e,t,r,i,n=!1){if(n)for(e&&2===this.getWidth(e-1)&&!this.isProtected(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length&&2===this.getWidth(t-1)&&!this.isProtected(t)&&this.setCellFromCodePoint(t,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs);e<t&&e<this.length;)this.isProtected(e)||this.setCell(e,r),e++;else for(e&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length&&2===this.getWidth(t-1)&&this.setCellFromCodePoint(t,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs);e<t&&e<this.length;)this.setCell(e++,r)}resize(e,t){if(e!==this.length){if(e>this.length){const r=new Uint32Array(3*e);this.length&&(3*e<this._data.length?r.set(this._data.subarray(0,3*e)):r.set(this._data)),this._data=r;for(let r=this.length;r<e;++r)this.setCell(r,t)}else if(e){const t=new Uint32Array(3*e);t.set(this._data.subarray(0,3*e)),this._data=t;const r=Object.keys(this._combined);for(let t=0;t<r.length;t++){const i=parseInt(r[t],10);i>=e&&delete this._combined[i]}}else this._data=new Uint32Array(0),this._combined={};this.length=e}}fill(e,t=!1){if(t)for(let t=0;t<this.length;++t)this.isProtected(t)||this.setCell(t,e);else{this._combined={},this._extendedAttrs={};for(let t=0;t<this.length;++t)this.setCell(t,e)}}copyFrom(e){this.length!==e.length?this._data=new Uint32Array(e._data):this._data.set(e._data),this.length=e.length,this._combined={};for(const t in e._combined)this._combined[t]=e._combined[t];this._extendedAttrs={};for(const t in e._extendedAttrs)this._extendedAttrs[t]=e._extendedAttrs[t];this.isWrapped=e.isWrapped}clone(){const e=new l(0);e._data=new Uint32Array(this._data),e.length=this.length;for(const t in this._combined)e._combined[t]=this._combined[t];for(const t in this._extendedAttrs)e._extendedAttrs[t]=this._extendedAttrs[t];return e.isWrapped=this.isWrapped,e}getTrimmedLength(){for(let e=this.length-1;e>=0;--e)if(4194303&this._data[3*e+0])return e+(this._data[3*e+0]>>22);return 0}copyCellsFrom(e,t,r,i,n){const s=e._data;if(n)for(let n=i-1;n>=0;n--){for(let e=0;e<3;e++)this._data[3*(r+n)+e]=s[3*(t+n)+e];268435456&s[3*(t+n)+2]&&(this._extendedAttrs[r+n]=e._extendedAttrs[t+n])}else for(let n=0;n<i;n++){for(let e=0;e<3;e++)this._data[3*(r+n)+e]=s[3*(t+n)+e];268435456&s[3*(t+n)+2]&&(this._extendedAttrs[r+n]=e._extendedAttrs[t+n])}const o=Object.keys(e._combined);for(let i=0;i<o.length;i++){const n=parseInt(o[i],10);n>=t&&(this._combined[n-t+r]=e._combined[n])}}translateToString(e=!1,t=0,r=this.length){e&&(r=Math.min(r,this.getTrimmedLength()));let s="";for(;t<r;){const e=this._data[3*t+0],r=2097151&e;s+=2097152&e?this._combined[t]:r?(0,i.stringFromCodePoint)(r):n.WHITESPACE_CELL_CHAR,t+=e>>22||1}return s}}t.BufferLine=l},4841:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getRangeLength=void 0,t.getRangeLength=function(e,t){if(e.start.y>e.end.y)throw new Error(`Buffer range end (${e.end.x}, ${e.end.y}) cannot be before start (${e.start.x}, ${e.start.y})`);return t*(e.end.y-e.start.y)+(e.end.x-e.start.x+1)}},4634:(e,t)=>{function r(e,t,r){if(t===e.length-1)return e[t].getTrimmedLength();const i=!e[t].hasContent(r-1)&&1===e[t].getWidth(r-1),n=2===e[t+1].getWidth(0);return i&&n?r-1:r}Object.defineProperty(t,"__esModule",{value:!0}),t.getWrappedLineTrimmedLength=t.reflowSmallerGetNewLineLengths=t.reflowLargerApplyNewLayout=t.reflowLargerCreateNewLayout=t.reflowLargerGetLinesToRemove=void 0,t.reflowLargerGetLinesToRemove=function(e,t,i,n,s){const o=[];for(let a=0;a<e.length-1;a++){let l=a,c=e.get(++l);if(!c.isWrapped)continue;const u=[e.get(a)];for(;l<e.length&&c.isWrapped;)u.push(c),c=e.get(++l);if(n>=a&&n<l){a+=u.length-1;continue}let h=0,d=r(u,h,t),f=1,p=0;for(;f<u.length;){const e=r(u,f,t),n=e-p,o=i-d,a=Math.min(n,o);u[h].copyCellsFrom(u[f],p,d,a,!1),d+=a,d===i&&(h++,d=0),p+=a,p===e&&(f++,p=0),0===d&&0!==h&&2===u[h-1].getWidth(i-1)&&(u[h].copyCellsFrom(u[h-1],i-1,d++,1,!1),u[h-1].setCell(i-1,s))}u[h].replaceCells(d,i,s);let v=0;for(let e=u.length-1;e>0&&(e>h||0===u[e].getTrimmedLength());e--)v++;v>0&&(o.push(a+u.length-v),o.push(v)),a+=u.length-1}return o},t.reflowLargerCreateNewLayout=function(e,t){const r=[];let i=0,n=t[i],s=0;for(let o=0;o<e.length;o++)if(n===o){const r=t[++i];e.onDeleteEmitter.fire({index:o-s,amount:r}),o+=r-1,s+=r,n=t[++i]}else r.push(o);return{layout:r,countRemoved:s}},t.reflowLargerApplyNewLayout=function(e,t){const r=[];for(let i=0;i<t.length;i++)r.push(e.get(t[i]));for(let t=0;t<r.length;t++)e.set(t,r[t]);e.length=t.length},t.reflowSmallerGetNewLineLengths=function(e,t,i){const n=[],s=e.map(((i,n)=>r(e,n,t))).reduce(((e,t)=>e+t));let o=0,a=0,l=0;for(;l<s;){if(s-l<i){n.push(s-l);break}o+=i;const c=r(e,a,t);o>c&&(o-=c,a++);const u=2===e[a].getWidth(o-1);u&&o--;const h=u?i-1:i;n.push(h),l+=h}return n},t.getWrappedLineTrimmedLength=r},5295:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferSet=void 0;const i=r(9092),n=r(8460),s=r(844);class o extends s.Disposable{constructor(e,t){super(),this._optionsService=e,this._bufferService=t,this._onBufferActivate=this.register(new n.EventEmitter),this.reset()}get onBufferActivate(){return this._onBufferActivate.event}reset(){this._normal=new i.Buffer(!0,this._optionsService,this._bufferService),this._normal.fillViewportRows(),this._alt=new i.Buffer(!1,this._optionsService,this._bufferService),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}),this.setupTabStops()}get alt(){return this._alt}get active(){return this._activeBuffer}get normal(){return this._normal}activateNormalBuffer(){this._activeBuffer!==this._normal&&(this._normal.x=this._alt.x,this._normal.y=this._alt.y,this._alt.clearAllMarkers(),this._alt.clear(),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}))}activateAltBuffer(e){this._activeBuffer!==this._alt&&(this._alt.fillViewportRows(e),this._alt.x=this._normal.x,this._alt.y=this._normal.y,this._activeBuffer=this._alt,this._onBufferActivate.fire({activeBuffer:this._alt,inactiveBuffer:this._normal}))}resize(e,t){this._normal.resize(e,t),this._alt.resize(e,t)}setupTabStops(e){this._normal.setupTabStops(e),this._alt.setupTabStops(e)}}t.BufferSet=o},511:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CellData=void 0;const i=r(482),n=r(643),s=r(3734);class o extends s.AttributeData{constructor(){super(...arguments),this.content=0,this.fg=0,this.bg=0,this.extended=new s.ExtendedAttrs,this.combinedData=""}static fromCharData(e){const t=new o;return t.setFromCharData(e),t}isCombined(){return 2097152&this.content}getWidth(){return this.content>>22}getChars(){return 2097152&this.content?this.combinedData:2097151&this.content?(0,i.stringFromCodePoint)(2097151&this.content):""}getCode(){return this.isCombined()?this.combinedData.charCodeAt(this.combinedData.length-1):2097151&this.content}setFromCharData(e){this.fg=e[n.CHAR_DATA_ATTR_INDEX],this.bg=0;let t=!1;if(e[n.CHAR_DATA_CHAR_INDEX].length>2)t=!0;else if(2===e[n.CHAR_DATA_CHAR_INDEX].length){const r=e[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0);if(55296<=r&&r<=56319){const i=e[n.CHAR_DATA_CHAR_INDEX].charCodeAt(1);56320<=i&&i<=57343?this.content=1024*(r-55296)+i-56320+65536|e[n.CHAR_DATA_WIDTH_INDEX]<<22:t=!0}else t=!0}else this.content=e[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|e[n.CHAR_DATA_WIDTH_INDEX]<<22;t&&(this.combinedData=e[n.CHAR_DATA_CHAR_INDEX],this.content=2097152|e[n.CHAR_DATA_WIDTH_INDEX]<<22)}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}t.CellData=o},643:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WHITESPACE_CELL_CODE=t.WHITESPACE_CELL_WIDTH=t.WHITESPACE_CELL_CHAR=t.NULL_CELL_CODE=t.NULL_CELL_WIDTH=t.NULL_CELL_CHAR=t.CHAR_DATA_CODE_INDEX=t.CHAR_DATA_WIDTH_INDEX=t.CHAR_DATA_CHAR_INDEX=t.CHAR_DATA_ATTR_INDEX=t.DEFAULT_EXT=t.DEFAULT_ATTR=t.DEFAULT_COLOR=void 0,t.DEFAULT_COLOR=256,t.DEFAULT_ATTR=256|t.DEFAULT_COLOR<<9,t.DEFAULT_EXT=0,t.CHAR_DATA_ATTR_INDEX=0,t.CHAR_DATA_CHAR_INDEX=1,t.CHAR_DATA_WIDTH_INDEX=2,t.CHAR_DATA_CODE_INDEX=3,t.NULL_CELL_CHAR="",t.NULL_CELL_WIDTH=1,t.NULL_CELL_CODE=0,t.WHITESPACE_CELL_CHAR=" ",t.WHITESPACE_CELL_WIDTH=1,t.WHITESPACE_CELL_CODE=32},4863:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Marker=void 0;const i=r(8460),n=r(844);class s extends n.Disposable{constructor(e){super(),this.line=e,this._id=s._nextId++,this.isDisposed=!1,this._onDispose=new i.EventEmitter}get id(){return this._id}get onDispose(){return this._onDispose.event}dispose(){this.isDisposed||(this.isDisposed=!0,this.line=-1,this._onDispose.fire(),super.dispose())}}t.Marker=s,s._nextId=1},7116:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_CHARSET=t.CHARSETS=void 0,t.CHARSETS={},t.DEFAULT_CHARSET=t.CHARSETS.B,t.CHARSETS[0]={"`":"◆",a:"▒",b:"␉",c:"␌",d:"␍",e:"␊",f:"°",g:"±",h:"␤",i:"␋",j:"┘",k:"┐",l:"┌",m:"└",n:"┼",o:"⎺",p:"⎻",q:"─",r:"⎼",s:"⎽",t:"├",u:"┤",v:"┴",w:"┬",x:"│",y:"≤",z:"≥","{":"π","|":"≠","}":"£","~":"·"},t.CHARSETS.A={"#":"£"},t.CHARSETS.B=void 0,t.CHARSETS[4]={"#":"£","@":"¾","[":"ij","\\":"½","]":"|","{":"¨","|":"f","}":"¼","~":"´"},t.CHARSETS.C=t.CHARSETS[5]={"[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},t.CHARSETS.R={"#":"£","@":"à","[":"°","\\":"ç","]":"§","{":"é","|":"ù","}":"è","~":"¨"},t.CHARSETS.Q={"@":"à","[":"â","\\":"ç","]":"ê","^":"î","`":"ô","{":"é","|":"ù","}":"è","~":"û"},t.CHARSETS.K={"@":"§","[":"Ä","\\":"Ö","]":"Ü","{":"ä","|":"ö","}":"ü","~":"ß"},t.CHARSETS.Y={"#":"£","@":"§","[":"°","\\":"ç","]":"é","`":"ù","{":"à","|":"ò","}":"è","~":"ì"},t.CHARSETS.E=t.CHARSETS[6]={"@":"Ä","[":"Æ","\\":"Ø","]":"Å","^":"Ü","`":"ä","{":"æ","|":"ø","}":"å","~":"ü"},t.CHARSETS.Z={"#":"£","@":"§","[":"¡","\\":"Ñ","]":"¿","{":"°","|":"ñ","}":"ç"},t.CHARSETS.H=t.CHARSETS[7]={"@":"É","[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},t.CHARSETS["="]={"#":"ù","@":"à","[":"é","\\":"ç","]":"ê","^":"î",_:"è","`":"ô","{":"ä","|":"ö","}":"ü","~":"û"}},2584:(e,t)=>{var r,i;Object.defineProperty(t,"__esModule",{value:!0}),t.C1_ESCAPED=t.C1=t.C0=void 0,function(e){e.NUL="\0",e.SOH="",e.STX="",e.ETX="",e.EOT="",e.ENQ="",e.ACK="",e.BEL="",e.BS="\b",e.HT="\t",e.LF="\n",e.VT="\v",e.FF="\f",e.CR="\r",e.SO="",e.SI="",e.DLE="",e.DC1="",e.DC2="",e.DC3="",e.DC4="",e.NAK="",e.SYN="",e.ETB="",e.CAN="",e.EM="",e.SUB="",e.ESC="",e.FS="",e.GS="",e.RS="",e.US="",e.SP=" ",e.DEL=""}(r=t.C0||(t.C0={})),(i=t.C1||(t.C1={})).PAD="",i.HOP="",i.BPH="",i.NBH="",i.IND="",i.NEL="",i.SSA="",i.ESA="",i.HTS="",i.HTJ="",i.VTS="",i.PLD="",i.PLU="",i.RI="",i.SS2="",i.SS3="",i.DCS="",i.PU1="",i.PU2="",i.STS="",i.CCH="",i.MW="",i.SPA="",i.EPA="",i.SOS="",i.SGCI="",i.SCI="",i.CSI="",i.ST="",i.OSC="",i.PM="",i.APC="",(t.C1_ESCAPED||(t.C1_ESCAPED={})).ST=`${r.ESC}\\`},7399:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.evaluateKeyboardEvent=void 0;const i=r(2584),n={48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"']};t.evaluateKeyboardEvent=function(e,t,r,s){const o={type:0,cancel:!1,key:void 0},a=(e.shiftKey?1:0)|(e.altKey?2:0)|(e.ctrlKey?4:0)|(e.metaKey?8:0);switch(e.keyCode){case 0:"UIKeyInputUpArrow"===e.key?o.key=t?i.C0.ESC+"OA":i.C0.ESC+"[A":"UIKeyInputLeftArrow"===e.key?o.key=t?i.C0.ESC+"OD":i.C0.ESC+"[D":"UIKeyInputRightArrow"===e.key?o.key=t?i.C0.ESC+"OC":i.C0.ESC+"[C":"UIKeyInputDownArrow"===e.key&&(o.key=t?i.C0.ESC+"OB":i.C0.ESC+"[B");break;case 8:if(e.altKey){o.key=i.C0.ESC+i.C0.DEL;break}o.key=i.C0.DEL;break;case 9:if(e.shiftKey){o.key=i.C0.ESC+"[Z";break}o.key=i.C0.HT,o.cancel=!0;break;case 13:o.key=e.altKey?i.C0.ESC+i.C0.CR:i.C0.CR,o.cancel=!0;break;case 27:o.key=i.C0.ESC,e.altKey&&(o.key=i.C0.ESC+i.C0.ESC),o.cancel=!0;break;case 37:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"D",o.key===i.C0.ESC+"[1;3D"&&(o.key=i.C0.ESC+(r?"b":"[1;5D"))):o.key=t?i.C0.ESC+"OD":i.C0.ESC+"[D";break;case 39:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"C",o.key===i.C0.ESC+"[1;3C"&&(o.key=i.C0.ESC+(r?"f":"[1;5C"))):o.key=t?i.C0.ESC+"OC":i.C0.ESC+"[C";break;case 38:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"A",r||o.key!==i.C0.ESC+"[1;3A"||(o.key=i.C0.ESC+"[1;5A")):o.key=t?i.C0.ESC+"OA":i.C0.ESC+"[A";break;case 40:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"B",r||o.key!==i.C0.ESC+"[1;3B"||(o.key=i.C0.ESC+"[1;5B")):o.key=t?i.C0.ESC+"OB":i.C0.ESC+"[B";break;case 45:e.shiftKey||e.ctrlKey||(o.key=i.C0.ESC+"[2~");break;case 46:o.key=a?i.C0.ESC+"[3;"+(a+1)+"~":i.C0.ESC+"[3~";break;case 36:o.key=a?i.C0.ESC+"[1;"+(a+1)+"H":t?i.C0.ESC+"OH":i.C0.ESC+"[H";break;case 35:o.key=a?i.C0.ESC+"[1;"+(a+1)+"F":t?i.C0.ESC+"OF":i.C0.ESC+"[F";break;case 33:e.shiftKey?o.type=2:e.ctrlKey?o.key=i.C0.ESC+"[5;"+(a+1)+"~":o.key=i.C0.ESC+"[5~";break;case 34:e.shiftKey?o.type=3:e.ctrlKey?o.key=i.C0.ESC+"[6;"+(a+1)+"~":o.key=i.C0.ESC+"[6~";break;case 112:o.key=a?i.C0.ESC+"[1;"+(a+1)+"P":i.C0.ESC+"OP";break;case 113:o.key=a?i.C0.ESC+"[1;"+(a+1)+"Q":i.C0.ESC+"OQ";break;case 114:o.key=a?i.C0.ESC+"[1;"+(a+1)+"R":i.C0.ESC+"OR";break;case 115:o.key=a?i.C0.ESC+"[1;"+(a+1)+"S":i.C0.ESC+"OS";break;case 116:o.key=a?i.C0.ESC+"[15;"+(a+1)+"~":i.C0.ESC+"[15~";break;case 117:o.key=a?i.C0.ESC+"[17;"+(a+1)+"~":i.C0.ESC+"[17~";break;case 118:o.key=a?i.C0.ESC+"[18;"+(a+1)+"~":i.C0.ESC+"[18~";break;case 119:o.key=a?i.C0.ESC+"[19;"+(a+1)+"~":i.C0.ESC+"[19~";break;case 120:o.key=a?i.C0.ESC+"[20;"+(a+1)+"~":i.C0.ESC+"[20~";break;case 121:o.key=a?i.C0.ESC+"[21;"+(a+1)+"~":i.C0.ESC+"[21~";break;case 122:o.key=a?i.C0.ESC+"[23;"+(a+1)+"~":i.C0.ESC+"[23~";break;case 123:o.key=a?i.C0.ESC+"[24;"+(a+1)+"~":i.C0.ESC+"[24~";break;default:if(!e.ctrlKey||e.shiftKey||e.altKey||e.metaKey)if(r&&!s||!e.altKey||e.metaKey)!r||e.altKey||e.ctrlKey||e.shiftKey||!e.metaKey?e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&e.keyCode>=48&&1===e.key.length?o.key=e.key:e.key&&e.ctrlKey&&("_"===e.key&&(o.key=i.C0.US),"@"===e.key&&(o.key=i.C0.NUL)):65===e.keyCode&&(o.type=1);else{const t=n[e.keyCode],r=null==t?void 0:t[e.shiftKey?1:0];if(r)o.key=i.C0.ESC+r;else if(e.keyCode>=65&&e.keyCode<=90){const t=e.ctrlKey?e.keyCode-64:e.keyCode+32;let r=String.fromCharCode(t);e.shiftKey&&(r=r.toUpperCase()),o.key=i.C0.ESC+r}else if("Dead"===e.key&&e.code.startsWith("Key")){let t=e.code.slice(3,4);e.shiftKey||(t=t.toLowerCase()),o.key=i.C0.ESC+t,o.cancel=!0}}else e.keyCode>=65&&e.keyCode<=90?o.key=String.fromCharCode(e.keyCode-64):32===e.keyCode?o.key=i.C0.NUL:e.keyCode>=51&&e.keyCode<=55?o.key=String.fromCharCode(e.keyCode-51+27):56===e.keyCode?o.key=i.C0.DEL:219===e.keyCode?o.key=i.C0.ESC:220===e.keyCode?o.key=i.C0.FS:221===e.keyCode&&(o.key=i.C0.GS)}return o}},482:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Utf8ToUtf32=t.StringToUtf32=t.utf32ToString=t.stringFromCodePoint=void 0,t.stringFromCodePoint=function(e){return e>65535?(e-=65536,String.fromCharCode(55296+(e>>10))+String.fromCharCode(e%1024+56320)):String.fromCharCode(e)},t.utf32ToString=function(e,t=0,r=e.length){let i="";for(let n=t;n<r;++n){let t=e[n];t>65535?(t-=65536,i+=String.fromCharCode(55296+(t>>10))+String.fromCharCode(t%1024+56320)):i+=String.fromCharCode(t)}return i},t.StringToUtf32=class{constructor(){this._interim=0}clear(){this._interim=0}decode(e,t){const r=e.length;if(!r)return 0;let i=0,n=0;if(this._interim){const r=e.charCodeAt(n++);56320<=r&&r<=57343?t[i++]=1024*(this._interim-55296)+r-56320+65536:(t[i++]=this._interim,t[i++]=r),this._interim=0}for(let s=n;s<r;++s){const n=e.charCodeAt(s);if(55296<=n&&n<=56319){if(++s>=r)return this._interim=n,i;const o=e.charCodeAt(s);56320<=o&&o<=57343?t[i++]=1024*(n-55296)+o-56320+65536:(t[i++]=n,t[i++]=o)}else 65279!==n&&(t[i++]=n)}return i}},t.Utf8ToUtf32=class{constructor(){this.interim=new Uint8Array(3)}clear(){this.interim.fill(0)}decode(e,t){const r=e.length;if(!r)return 0;let i,n,s,o,a=0,l=0,c=0;if(this.interim[0]){let i=!1,n=this.interim[0];n&=192==(224&n)?31:224==(240&n)?15:7;let s,o=0;for(;(s=63&this.interim[++o])&&o<4;)n<<=6,n|=s;const l=192==(224&this.interim[0])?2:224==(240&this.interim[0])?3:4,u=l-o;for(;c<u;){if(c>=r)return 0;if(s=e[c++],128!=(192&s)){c--,i=!0;break}this.interim[o++]=s,n<<=6,n|=63&s}i||(2===l?n<128?c--:t[a++]=n:3===l?n<2048||n>=55296&&n<=57343||65279===n||(t[a++]=n):n<65536||n>1114111||(t[a++]=n)),this.interim.fill(0)}const u=r-4;let h=c;for(;h<r;){for(;!(!(h<u)||128&(i=e[h])||128&(n=e[h+1])||128&(s=e[h+2])||128&(o=e[h+3]));)t[a++]=i,t[a++]=n,t[a++]=s,t[a++]=o,h+=4;if(i=e[h++],i<128)t[a++]=i;else if(192==(224&i)){if(h>=r)return this.interim[0]=i,a;if(n=e[h++],128!=(192&n)){h--;continue}if(l=(31&i)<<6|63&n,l<128){h--;continue}t[a++]=l}else if(224==(240&i)){if(h>=r)return this.interim[0]=i,a;if(n=e[h++],128!=(192&n)){h--;continue}if(h>=r)return this.interim[0]=i,this.interim[1]=n,a;if(s=e[h++],128!=(192&s)){h--;continue}if(l=(15&i)<<12|(63&n)<<6|63&s,l<2048||l>=55296&&l<=57343||65279===l)continue;t[a++]=l}else if(240==(248&i)){if(h>=r)return this.interim[0]=i,a;if(n=e[h++],128!=(192&n)){h--;continue}if(h>=r)return this.interim[0]=i,this.interim[1]=n,a;if(s=e[h++],128!=(192&s)){h--;continue}if(h>=r)return this.interim[0]=i,this.interim[1]=n,this.interim[2]=s,a;if(o=e[h++],128!=(192&o)){h--;continue}if(l=(7&i)<<18|(63&n)<<12|(63&s)<<6|63&o,l<65536||l>1114111)continue;t[a++]=l}}return a}}},225:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeV6=void 0;const i=r(8273),n=[[768,879],[1155,1158],[1160,1161],[1425,1469],[1471,1471],[1473,1474],[1476,1477],[1479,1479],[1536,1539],[1552,1557],[1611,1630],[1648,1648],[1750,1764],[1767,1768],[1770,1773],[1807,1807],[1809,1809],[1840,1866],[1958,1968],[2027,2035],[2305,2306],[2364,2364],[2369,2376],[2381,2381],[2385,2388],[2402,2403],[2433,2433],[2492,2492],[2497,2500],[2509,2509],[2530,2531],[2561,2562],[2620,2620],[2625,2626],[2631,2632],[2635,2637],[2672,2673],[2689,2690],[2748,2748],[2753,2757],[2759,2760],[2765,2765],[2786,2787],[2817,2817],[2876,2876],[2879,2879],[2881,2883],[2893,2893],[2902,2902],[2946,2946],[3008,3008],[3021,3021],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3260,3260],[3263,3263],[3270,3270],[3276,3277],[3298,3299],[3393,3395],[3405,3405],[3530,3530],[3538,3540],[3542,3542],[3633,3633],[3636,3642],[3655,3662],[3761,3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893,3893],[3895,3895],[3897,3897],[3953,3966],[3968,3972],[3974,3975],[3984,3991],[3993,4028],[4038,4038],[4141,4144],[4146,4146],[4150,4151],[4153,4153],[4184,4185],[4448,4607],[4959,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086,6086],[6089,6099],[6109,6109],[6155,6157],[6313,6313],[6432,6434],[6439,6440],[6450,6450],[6457,6459],[6679,6680],[6912,6915],[6964,6964],[6966,6970],[6972,6972],[6978,6978],[7019,7027],[7616,7626],[7678,7679],[8203,8207],[8234,8238],[8288,8291],[8298,8303],[8400,8431],[12330,12335],[12441,12442],[43014,43014],[43019,43019],[43045,43046],[64286,64286],[65024,65039],[65056,65059],[65279,65279],[65529,65531]],s=[[68097,68099],[68101,68102],[68108,68111],[68152,68154],[68159,68159],[119143,119145],[119155,119170],[119173,119179],[119210,119213],[119362,119364],[917505,917505],[917536,917631],[917760,917999]];let o;t.UnicodeV6=class{constructor(){if(this.version="6",!o){o=new Uint8Array(65536),(0,i.fill)(o,1),o[0]=0,(0,i.fill)(o,0,1,32),(0,i.fill)(o,0,127,160),(0,i.fill)(o,2,4352,4448),o[9001]=2,o[9002]=2,(0,i.fill)(o,2,11904,42192),o[12351]=1,(0,i.fill)(o,2,44032,55204),(0,i.fill)(o,2,63744,64256),(0,i.fill)(o,2,65040,65050),(0,i.fill)(o,2,65072,65136),(0,i.fill)(o,2,65280,65377),(0,i.fill)(o,2,65504,65511);for(let e=0;e<n.length;++e)(0,i.fill)(o,0,n[e][0],n[e][1]+1)}}wcwidth(e){return e<32?0:e<127?1:e<65536?o[e]:function(e,t){let r,i=0,n=t.length-1;if(e<t[0][0]||e>t[n][1])return!1;for(;n>=i;)if(r=i+n>>1,e>t[r][1])i=r+1;else{if(!(e<t[r][0]))return!0;n=r-1}return!1}(e,s)?0:e>=131072&&e<=196605||e>=196608&&e<=262141?2:1}}},5981:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WriteBuffer=void 0;const i=r(8460),n="undefined"==typeof queueMicrotask?e=>{Promise.resolve().then(e)}:queueMicrotask;t.WriteBuffer=class{constructor(e){this._action=e,this._writeBuffer=[],this._callbacks=[],this._pendingData=0,this._bufferOffset=0,this._isSyncWriting=!1,this._syncCalls=0,this._onWriteParsed=new i.EventEmitter}get onWriteParsed(){return this._onWriteParsed.event}writeSync(e,t){if(void 0!==t&&this._syncCalls>t)return void(this._syncCalls=0);if(this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(void 0),this._syncCalls++,this._isSyncWriting)return;let r;for(this._isSyncWriting=!0;r=this._writeBuffer.shift();){this._action(r);const e=this._callbacks.shift();e&&e()}this._pendingData=0,this._bufferOffset=2147483647,this._isSyncWriting=!1,this._syncCalls=0}write(e,t){if(this._pendingData>5e7)throw new Error("write data discarded, use flow control to avoid losing data");this._writeBuffer.length||(this._bufferOffset=0,setTimeout((()=>this._innerWrite()))),this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(t)}_innerWrite(e=0,t=!0){const r=e||Date.now();for(;this._writeBuffer.length>this._bufferOffset;){const e=this._writeBuffer[this._bufferOffset],i=this._action(e,t);if(i){const e=e=>Date.now()-r>=12?setTimeout((()=>this._innerWrite(0,e))):this._innerWrite(r,e);return void i.catch((e=>(n((()=>{throw e})),Promise.resolve(!1)))).then(e)}const s=this._callbacks[this._bufferOffset];if(s&&s(),this._bufferOffset++,this._pendingData-=e.length,Date.now()-r>=12)break}this._writeBuffer.length>this._bufferOffset?(this._bufferOffset>50&&(this._writeBuffer=this._writeBuffer.slice(this._bufferOffset),this._callbacks=this._callbacks.slice(this._bufferOffset),this._bufferOffset=0),setTimeout((()=>this._innerWrite()))):(this._writeBuffer.length=0,this._callbacks.length=0,this._pendingData=0,this._bufferOffset=0),this._onWriteParsed.fire()}}},5941:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toRgbString=t.parseColor=void 0;const r=/^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,i=/^[\da-f]+$/;function n(e,t){const r=e.toString(16),i=r.length<2?"0"+r:r;switch(t){case 4:return r[0];case 8:return i;case 12:return(i+i).slice(0,3);default:return i+i}}t.parseColor=function(e){if(!e)return;let t=e.toLowerCase();if(0===t.indexOf("rgb:")){t=t.slice(4);const e=r.exec(t);if(e){const t=e[1]?15:e[4]?255:e[7]?4095:65535;return[Math.round(parseInt(e[1]||e[4]||e[7]||e[10],16)/t*255),Math.round(parseInt(e[2]||e[5]||e[8]||e[11],16)/t*255),Math.round(parseInt(e[3]||e[6]||e[9]||e[12],16)/t*255)]}}else if(0===t.indexOf("#")&&(t=t.slice(1),i.exec(t)&&[3,6,9,12].includes(t.length))){const e=t.length/3,r=[0,0,0];for(let i=0;i<3;++i){const n=parseInt(t.slice(e*i,e*i+e),16);r[i]=1===e?n<<4:2===e?n:3===e?n>>4:n>>8}return r}},t.toRgbString=function(e,t=16){const[r,i,s]=e;return`rgb:${n(r,t)}/${n(i,t)}/${n(s,t)}`}},5770:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PAYLOAD_LIMIT=void 0,t.PAYLOAD_LIMIT=1e7},6351:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DcsHandler=t.DcsParser=void 0;const i=r(482),n=r(8742),s=r(5770),o=[];t.DcsParser=class{constructor(){this._handlers=Object.create(null),this._active=o,this._ident=0,this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=o}registerHandler(e,t){void 0===this._handlers[e]&&(this._handlers[e]=[]);const r=this._handlers[e];return r.push(t),{dispose:()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}clearHandler(e){this._handlers[e]&&delete this._handlers[e]}setHandlerFallback(e){this._handlerFb=e}reset(){if(this._active.length)for(let e=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;e>=0;--e)this._active[e].unhook(!1);this._stack.paused=!1,this._active=o,this._ident=0}hook(e,t){if(this.reset(),this._ident=e,this._active=this._handlers[e]||o,this._active.length)for(let e=this._active.length-1;e>=0;e--)this._active[e].hook(t);else this._handlerFb(this._ident,"HOOK",t)}put(e,t,r){if(this._active.length)for(let i=this._active.length-1;i>=0;i--)this._active[i].put(e,t,r);else this._handlerFb(this._ident,"PUT",(0,i.utf32ToString)(e,t,r))}unhook(e,t=!0){if(this._active.length){let r=!1,i=this._active.length-1,n=!1;if(this._stack.paused&&(i=this._stack.loopPosition-1,r=t,n=this._stack.fallThrough,this._stack.paused=!1),!n&&!1===r){for(;i>=0&&(r=this._active[i].unhook(e),!0!==r);i--)if(r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!1,r;i--}for(;i>=0;i--)if(r=this._active[i].unhook(!1),r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!0,r}else this._handlerFb(this._ident,"UNHOOK",e);this._active=o,this._ident=0}};const a=new n.Params;a.addParam(0),t.DcsHandler=class{constructor(e){this._handler=e,this._data="",this._params=a,this._hitLimit=!1}hook(e){this._params=e.length>1||e.params[0]?e.clone():a,this._data="",this._hitLimit=!1}put(e,t,r){this._hitLimit||(this._data+=(0,i.utf32ToString)(e,t,r),this._data.length>s.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}unhook(e){let t=!1;if(this._hitLimit)t=!1;else if(e&&(t=this._handler(this._data,this._params),t instanceof Promise))return t.then((e=>(this._params=a,this._data="",this._hitLimit=!1,e)));return this._params=a,this._data="",this._hitLimit=!1,t}}},2015:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EscapeSequenceParser=t.VT500_TRANSITION_TABLE=t.TransitionTable=void 0;const i=r(844),n=r(8273),s=r(8742),o=r(6242),a=r(6351);class l{constructor(e){this.table=new Uint8Array(e)}setDefault(e,t){(0,n.fill)(this.table,e<<4|t)}add(e,t,r,i){this.table[t<<8|e]=r<<4|i}addMany(e,t,r,i){for(let n=0;n<e.length;n++)this.table[t<<8|e[n]]=r<<4|i}}t.TransitionTable=l;const c=160;t.VT500_TRANSITION_TABLE=function(){const e=new l(4095),t=Array.apply(null,Array(256)).map(((e,t)=>t)),r=(e,r)=>t.slice(e,r),i=r(32,127),n=r(0,24);n.push(25),n.push.apply(n,r(28,32));const s=r(0,14);let o;for(o in e.setDefault(1,0),e.addMany(i,0,2,0),s)e.addMany([24,26,153,154],o,3,0),e.addMany(r(128,144),o,3,0),e.addMany(r(144,152),o,3,0),e.add(156,o,0,0),e.add(27,o,11,1),e.add(157,o,4,8),e.addMany([152,158,159],o,0,7),e.add(155,o,11,3),e.add(144,o,11,9);return e.addMany(n,0,3,0),e.addMany(n,1,3,1),e.add(127,1,0,1),e.addMany(n,8,0,8),e.addMany(n,3,3,3),e.add(127,3,0,3),e.addMany(n,4,3,4),e.add(127,4,0,4),e.addMany(n,6,3,6),e.addMany(n,5,3,5),e.add(127,5,0,5),e.addMany(n,2,3,2),e.add(127,2,0,2),e.add(93,1,4,8),e.addMany(i,8,5,8),e.add(127,8,5,8),e.addMany([156,27,24,26,7],8,6,0),e.addMany(r(28,32),8,0,8),e.addMany([88,94,95],1,0,7),e.addMany(i,7,0,7),e.addMany(n,7,0,7),e.add(156,7,0,0),e.add(127,7,0,7),e.add(91,1,11,3),e.addMany(r(64,127),3,7,0),e.addMany(r(48,60),3,8,4),e.addMany([60,61,62,63],3,9,4),e.addMany(r(48,60),4,8,4),e.addMany(r(64,127),4,7,0),e.addMany([60,61,62,63],4,0,6),e.addMany(r(32,64),6,0,6),e.add(127,6,0,6),e.addMany(r(64,127),6,0,0),e.addMany(r(32,48),3,9,5),e.addMany(r(32,48),5,9,5),e.addMany(r(48,64),5,0,6),e.addMany(r(64,127),5,7,0),e.addMany(r(32,48),4,9,5),e.addMany(r(32,48),1,9,2),e.addMany(r(32,48),2,9,2),e.addMany(r(48,127),2,10,0),e.addMany(r(48,80),1,10,0),e.addMany(r(81,88),1,10,0),e.addMany([89,90,92],1,10,0),e.addMany(r(96,127),1,10,0),e.add(80,1,11,9),e.addMany(n,9,0,9),e.add(127,9,0,9),e.addMany(r(28,32),9,0,9),e.addMany(r(32,48),9,9,12),e.addMany(r(48,60),9,8,10),e.addMany([60,61,62,63],9,9,10),e.addMany(n,11,0,11),e.addMany(r(32,128),11,0,11),e.addMany(r(28,32),11,0,11),e.addMany(n,10,0,10),e.add(127,10,0,10),e.addMany(r(28,32),10,0,10),e.addMany(r(48,60),10,8,10),e.addMany([60,61,62,63],10,0,11),e.addMany(r(32,48),10,9,12),e.addMany(n,12,0,12),e.add(127,12,0,12),e.addMany(r(28,32),12,0,12),e.addMany(r(32,48),12,9,12),e.addMany(r(48,64),12,0,11),e.addMany(r(64,127),12,12,13),e.addMany(r(64,127),10,12,13),e.addMany(r(64,127),9,12,13),e.addMany(n,13,13,13),e.addMany(i,13,13,13),e.add(127,13,0,13),e.addMany([27,156,24,26],13,14,0),e.add(c,0,2,0),e.add(c,8,5,8),e.add(c,6,0,6),e.add(c,11,0,11),e.add(c,13,13,13),e}();class u extends i.Disposable{constructor(e=t.VT500_TRANSITION_TABLE){super(),this._transitions=e,this._parseStack={state:0,handlers:[],handlerPos:0,transition:0,chunkPos:0},this.initialState=0,this.currentState=this.initialState,this._params=new s.Params,this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,this._printHandlerFb=(e,t,r)=>{},this._executeHandlerFb=e=>{},this._csiHandlerFb=(e,t)=>{},this._escHandlerFb=e=>{},this._errorHandlerFb=e=>e,this._printHandler=this._printHandlerFb,this._executeHandlers=Object.create(null),this._csiHandlers=Object.create(null),this._escHandlers=Object.create(null),this._oscParser=new o.OscParser,this._dcsParser=new a.DcsParser,this._errorHandler=this._errorHandlerFb,this.registerEscHandler({final:"\\"},(()=>!0))}_identifier(e,t=[64,126]){let r=0;if(e.prefix){if(e.prefix.length>1)throw new Error("only one byte as prefix supported");if(r=e.prefix.charCodeAt(0),r&&60>r||r>63)throw new Error("prefix must be in range 0x3c .. 0x3f")}if(e.intermediates){if(e.intermediates.length>2)throw new Error("only two bytes as intermediates are supported");for(let t=0;t<e.intermediates.length;++t){const i=e.intermediates.charCodeAt(t);if(32>i||i>47)throw new Error("intermediate must be in range 0x20 .. 0x2f");r<<=8,r|=i}}if(1!==e.final.length)throw new Error("final must be a single byte");const i=e.final.charCodeAt(0);if(t[0]>i||i>t[1])throw new Error(`final must be in range ${t[0]} .. ${t[1]}`);return r<<=8,r|=i,r}identToString(e){const t=[];for(;e;)t.push(String.fromCharCode(255&e)),e>>=8;return t.reverse().join("")}dispose(){this._csiHandlers=Object.create(null),this._executeHandlers=Object.create(null),this._escHandlers=Object.create(null),this._oscParser.dispose(),this._dcsParser.dispose()}setPrintHandler(e){this._printHandler=e}clearPrintHandler(){this._printHandler=this._printHandlerFb}registerEscHandler(e,t){const r=this._identifier(e,[48,126]);void 0===this._escHandlers[r]&&(this._escHandlers[r]=[]);const i=this._escHandlers[r];return i.push(t),{dispose:()=>{const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}}clearEscHandler(e){this._escHandlers[this._identifier(e,[48,126])]&&delete this._escHandlers[this._identifier(e,[48,126])]}setEscHandlerFallback(e){this._escHandlerFb=e}setExecuteHandler(e,t){this._executeHandlers[e.charCodeAt(0)]=t}clearExecuteHandler(e){this._executeHandlers[e.charCodeAt(0)]&&delete this._executeHandlers[e.charCodeAt(0)]}setExecuteHandlerFallback(e){this._executeHandlerFb=e}registerCsiHandler(e,t){const r=this._identifier(e);void 0===this._csiHandlers[r]&&(this._csiHandlers[r]=[]);const i=this._csiHandlers[r];return i.push(t),{dispose:()=>{const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}}clearCsiHandler(e){this._csiHandlers[this._identifier(e)]&&delete this._csiHandlers[this._identifier(e)]}setCsiHandlerFallback(e){this._csiHandlerFb=e}registerDcsHandler(e,t){return this._dcsParser.registerHandler(this._identifier(e),t)}clearDcsHandler(e){this._dcsParser.clearHandler(this._identifier(e))}setDcsHandlerFallback(e){this._dcsParser.setHandlerFallback(e)}registerOscHandler(e,t){return this._oscParser.registerHandler(e,t)}clearOscHandler(e){this._oscParser.clearHandler(e)}setOscHandlerFallback(e){this._oscParser.setHandlerFallback(e)}setErrorHandler(e){this._errorHandler=e}clearErrorHandler(){this._errorHandler=this._errorHandlerFb}reset(){this.currentState=this.initialState,this._oscParser.reset(),this._dcsParser.reset(),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,0!==this._parseStack.state&&(this._parseStack.state=2,this._parseStack.handlers=[])}_preserveStack(e,t,r,i,n){this._parseStack.state=e,this._parseStack.handlers=t,this._parseStack.handlerPos=r,this._parseStack.transition=i,this._parseStack.chunkPos=n}parse(e,t,r){let i,n=0,s=0,o=0;if(this._parseStack.state)if(2===this._parseStack.state)this._parseStack.state=0,o=this._parseStack.chunkPos+1;else{if(void 0===r||1===this._parseStack.state)throw this._parseStack.state=1,new Error("improper continuation due to previous async handler, giving up parsing");const t=this._parseStack.handlers;let s=this._parseStack.handlerPos-1;switch(this._parseStack.state){case 3:if(!1===r&&s>-1)for(;s>=0&&(i=t[s](this._params),!0!==i);s--)if(i instanceof Promise)return this._parseStack.handlerPos=s,i;this._parseStack.handlers=[];break;case 4:if(!1===r&&s>-1)for(;s>=0&&(i=t[s](),!0!==i);s--)if(i instanceof Promise)return this._parseStack.handlerPos=s,i;this._parseStack.handlers=[];break;case 6:if(n=e[this._parseStack.chunkPos],i=this._dcsParser.unhook(24!==n&&26!==n,r),i)return i;27===n&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0;break;case 5:if(n=e[this._parseStack.chunkPos],i=this._oscParser.end(24!==n&&26!==n,r),i)return i;27===n&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0}this._parseStack.state=0,o=this._parseStack.chunkPos+1,this.precedingCodepoint=0,this.currentState=15&this._parseStack.transition}for(let r=o;r<t;++r){switch(n=e[r],s=this._transitions.table[this.currentState<<8|(n<160?n:c)],s>>4){case 2:for(let i=r+1;;++i){if(i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(n=e[i])<32||n>126&&n<c){this._printHandler(e,r,i),r=i-1;break}}break;case 3:this._executeHandlers[n]?this._executeHandlers[n]():this._executeHandlerFb(n),this.precedingCodepoint=0;break;case 0:break;case 1:if(this._errorHandler({position:r,code:n,currentState:this.currentState,collect:this._collect,params:this._params,abort:!1}).abort)return;break;case 7:const o=this._csiHandlers[this._collect<<8|n];let a=o?o.length-1:-1;for(;a>=0&&(i=o[a](this._params),!0!==i);a--)if(i instanceof Promise)return this._preserveStack(3,o,a,s,r),i;a<0&&this._csiHandlerFb(this._collect<<8|n,this._params),this.precedingCodepoint=0;break;case 8:do{switch(n){case 59:this._params.addParam(0);break;case 58:this._params.addSubParam(-1);break;default:this._params.addDigit(n-48)}}while(++r<t&&(n=e[r])>47&&n<60);r--;break;case 9:this._collect<<=8,this._collect|=n;break;case 10:const l=this._escHandlers[this._collect<<8|n];let u=l?l.length-1:-1;for(;u>=0&&(i=l[u](),!0!==i);u--)if(i instanceof Promise)return this._preserveStack(4,l,u,s,r),i;u<0&&this._escHandlerFb(this._collect<<8|n),this.precedingCodepoint=0;break;case 11:this._params.reset(),this._params.addParam(0),this._collect=0;break;case 12:this._dcsParser.hook(this._collect<<8|n,this._params);break;case 13:for(let i=r+1;;++i)if(i>=t||24===(n=e[i])||26===n||27===n||n>127&&n<c){this._dcsParser.put(e,r,i),r=i-1;break}break;case 14:if(i=this._dcsParser.unhook(24!==n&&26!==n),i)return this._preserveStack(6,[],0,s,r),i;27===n&&(s|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0;break;case 4:this._oscParser.start();break;case 5:for(let i=r+1;;i++)if(i>=t||(n=e[i])<32||n>127&&n<c){this._oscParser.put(e,r,i),r=i-1;break}break;case 6:if(i=this._oscParser.end(24!==n&&26!==n),i)return this._preserveStack(5,[],0,s,r),i;27===n&&(s|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0}this.currentState=15&s}}}t.EscapeSequenceParser=u},6242:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OscHandler=t.OscParser=void 0;const i=r(5770),n=r(482),s=[];t.OscParser=class{constructor(){this._state=0,this._active=s,this._id=-1,this._handlers=Object.create(null),this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}registerHandler(e,t){void 0===this._handlers[e]&&(this._handlers[e]=[]);const r=this._handlers[e];return r.push(t),{dispose:()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}clearHandler(e){this._handlers[e]&&delete this._handlers[e]}setHandlerFallback(e){this._handlerFb=e}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=s}reset(){if(2===this._state)for(let e=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;e>=0;--e)this._active[e].end(!1);this._stack.paused=!1,this._active=s,this._id=-1,this._state=0}_start(){if(this._active=this._handlers[this._id]||s,this._active.length)for(let e=this._active.length-1;e>=0;e--)this._active[e].start();else this._handlerFb(this._id,"START")}_put(e,t,r){if(this._active.length)for(let i=this._active.length-1;i>=0;i--)this._active[i].put(e,t,r);else this._handlerFb(this._id,"PUT",(0,n.utf32ToString)(e,t,r))}start(){this.reset(),this._state=1}put(e,t,r){if(3!==this._state){if(1===this._state)for(;t<r;){const r=e[t++];if(59===r){this._state=2,this._start();break}if(r<48||57<r)return void(this._state=3);-1===this._id&&(this._id=0),this._id=10*this._id+r-48}2===this._state&&r-t>0&&this._put(e,t,r)}}end(e,t=!0){if(0!==this._state){if(3!==this._state)if(1===this._state&&this._start(),this._active.length){let r=!1,i=this._active.length-1,n=!1;if(this._stack.paused&&(i=this._stack.loopPosition-1,r=t,n=this._stack.fallThrough,this._stack.paused=!1),!n&&!1===r){for(;i>=0&&(r=this._active[i].end(e),!0!==r);i--)if(r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!1,r;i--}for(;i>=0;i--)if(r=this._active[i].end(!1),r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!0,r}else this._handlerFb(this._id,"END",e);this._active=s,this._id=-1,this._state=0}}},t.OscHandler=class{constructor(e){this._handler=e,this._data="",this._hitLimit=!1}start(){this._data="",this._hitLimit=!1}put(e,t,r){this._hitLimit||(this._data+=(0,n.utf32ToString)(e,t,r),this._data.length>i.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}end(e){let t=!1;if(this._hitLimit)t=!1;else if(e&&(t=this._handler(this._data),t instanceof Promise))return t.then((e=>(this._data="",this._hitLimit=!1,e)));return this._data="",this._hitLimit=!1,t}}},8742:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Params=void 0;const r=2147483647;class i{constructor(e=32,t=32){if(this.maxLength=e,this.maxSubParamsLength=t,t>256)throw new Error("maxSubParamsLength must not be greater than 256");this.params=new Int32Array(e),this.length=0,this._subParams=new Int32Array(t),this._subParamsLength=0,this._subParamsIdx=new Uint16Array(e),this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}static fromArray(e){const t=new i;if(!e.length)return t;for(let r=Array.isArray(e[0])?1:0;r<e.length;++r){const i=e[r];if(Array.isArray(i))for(let e=0;e<i.length;++e)t.addSubParam(i[e]);else t.addParam(i)}return t}clone(){const e=new i(this.maxLength,this.maxSubParamsLength);return e.params.set(this.params),e.length=this.length,e._subParams.set(this._subParams),e._subParamsLength=this._subParamsLength,e._subParamsIdx.set(this._subParamsIdx),e._rejectDigits=this._rejectDigits,e._rejectSubDigits=this._rejectSubDigits,e._digitIsSub=this._digitIsSub,e}toArray(){const e=[];for(let t=0;t<this.length;++t){e.push(this.params[t]);const r=this._subParamsIdx[t]>>8,i=255&this._subParamsIdx[t];i-r>0&&e.push(Array.prototype.slice.call(this._subParams,r,i))}return e}reset(){this.length=0,this._subParamsLength=0,this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}addParam(e){if(this._digitIsSub=!1,this.length>=this.maxLength)this._rejectDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParamsIdx[this.length]=this._subParamsLength<<8|this._subParamsLength,this.params[this.length++]=e>r?r:e}}addSubParam(e){if(this._digitIsSub=!0,this.length)if(this._rejectDigits||this._subParamsLength>=this.maxSubParamsLength)this._rejectSubDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParams[this._subParamsLength++]=e>r?r:e,this._subParamsIdx[this.length-1]++}}hasSubParams(e){return(255&this._subParamsIdx[e])-(this._subParamsIdx[e]>>8)>0}getSubParams(e){const t=this._subParamsIdx[e]>>8,r=255&this._subParamsIdx[e];return r-t>0?this._subParams.subarray(t,r):null}getSubParamsAll(){const e={};for(let t=0;t<this.length;++t){const r=this._subParamsIdx[t]>>8,i=255&this._subParamsIdx[t];i-r>0&&(e[t]=this._subParams.slice(r,i))}return e}addDigit(e){let t;if(this._rejectDigits||!(t=this._digitIsSub?this._subParamsLength:this.length)||this._digitIsSub&&this._rejectSubDigits)return;const i=this._digitIsSub?this._subParams:this.params,n=i[t-1];i[t-1]=~n?Math.min(10*n+e,r):e}}t.Params=i},5741:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AddonManager=void 0,t.AddonManager=class{constructor(){this._addons=[]}dispose(){for(let e=this._addons.length-1;e>=0;e--)this._addons[e].instance.dispose()}loadAddon(e,t){const r={instance:t,dispose:t.dispose,isDisposed:!1};this._addons.push(r),t.dispose=()=>this._wrappedAddonDispose(r),t.activate(e)}_wrappedAddonDispose(e){if(e.isDisposed)return;let t=-1;for(let r=0;r<this._addons.length;r++)if(this._addons[r]===e){t=r;break}if(-1===t)throw new Error("Could not dispose an addon that has not been loaded");e.isDisposed=!0,e.dispose.apply(e.instance),this._addons.splice(t,1)}}},8771:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferApiView=void 0;const i=r(3785),n=r(511);t.BufferApiView=class{constructor(e,t){this._buffer=e,this.type=t}init(e){return this._buffer=e,this}get cursorY(){return this._buffer.y}get cursorX(){return this._buffer.x}get viewportY(){return this._buffer.ydisp}get baseY(){return this._buffer.ybase}get length(){return this._buffer.lines.length}getLine(e){const t=this._buffer.lines.get(e);if(t)return new i.BufferLineApiView(t)}getNullCell(){return new n.CellData}}},3785:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferLineApiView=void 0;const i=r(511);t.BufferLineApiView=class{constructor(e){this._line=e}get isWrapped(){return this._line.isWrapped}get length(){return this._line.length}getCell(e,t){if(!(e<0||e>=this._line.length))return t?(this._line.loadCell(e,t),t):this._line.loadCell(e,new i.CellData)}translateToString(e,t,r){return this._line.translateToString(e,t,r)}}},8285:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferNamespaceApi=void 0;const i=r(8771),n=r(8460);t.BufferNamespaceApi=class{constructor(e){this._core=e,this._onBufferChange=new n.EventEmitter,this._normal=new i.BufferApiView(this._core.buffers.normal,"normal"),this._alternate=new i.BufferApiView(this._core.buffers.alt,"alternate"),this._core.buffers.onBufferActivate((()=>this._onBufferChange.fire(this.active)))}get onBufferChange(){return this._onBufferChange.event}get active(){if(this._core.buffers.active===this._core.buffers.normal)return this.normal;if(this._core.buffers.active===this._core.buffers.alt)return this.alternate;throw new Error("Active buffer is neither normal nor alternate")}get normal(){return this._normal.init(this._core.buffers.normal)}get alternate(){return this._alternate.init(this._core.buffers.alt)}}},7975:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ParserApi=void 0,t.ParserApi=class{constructor(e){this._core=e}registerCsiHandler(e,t){return this._core.registerCsiHandler(e,(e=>t(e.toArray())))}addCsiHandler(e,t){return this.registerCsiHandler(e,t)}registerDcsHandler(e,t){return this._core.registerDcsHandler(e,((e,r)=>t(e,r.toArray())))}addDcsHandler(e,t){return this.registerDcsHandler(e,t)}registerEscHandler(e,t){return this._core.registerEscHandler(e,t)}addEscHandler(e,t){return this.registerEscHandler(e,t)}registerOscHandler(e,t){return this._core.registerOscHandler(e,t)}addOscHandler(e,t){return this.registerOscHandler(e,t)}}},7090:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeApi=void 0,t.UnicodeApi=class{constructor(e){this._core=e}register(e){this._core.unicodeService.register(e)}get versions(){return this._core.unicodeService.versions}get activeVersion(){return this._core.unicodeService.activeVersion}set activeVersion(e){this._core.unicodeService.activeVersion=e}}},744:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.BufferService=t.MINIMUM_ROWS=t.MINIMUM_COLS=void 0;const s=r(2585),o=r(5295),a=r(8460),l=r(844);t.MINIMUM_COLS=2,t.MINIMUM_ROWS=1;let c=class extends l.Disposable{constructor(e){super(),this.isUserScrolling=!1,this._onResize=new a.EventEmitter,this._onScroll=new a.EventEmitter,this.cols=Math.max(e.rawOptions.cols||0,t.MINIMUM_COLS),this.rows=Math.max(e.rawOptions.rows||0,t.MINIMUM_ROWS),this.buffers=new o.BufferSet(e,this)}get onResize(){return this._onResize.event}get onScroll(){return this._onScroll.event}get buffer(){return this.buffers.active}dispose(){super.dispose(),this.buffers.dispose()}resize(e,t){this.cols=e,this.rows=t,this.buffers.resize(e,t),this.buffers.setupTabStops(this.cols),this._onResize.fire({cols:e,rows:t})}reset(){this.buffers.reset(),this.isUserScrolling=!1}scroll(e,t=!1){const r=this.buffer;let i;i=this._cachedBlankLine,i&&i.length===this.cols&&i.getFg(0)===e.fg&&i.getBg(0)===e.bg||(i=r.getBlankLine(e,t),this._cachedBlankLine=i),i.isWrapped=t;const n=r.ybase+r.scrollTop,s=r.ybase+r.scrollBottom;if(0===r.scrollTop){const e=r.lines.isFull;s===r.lines.length-1?e?r.lines.recycle().copyFrom(i):r.lines.push(i.clone()):r.lines.splice(s+1,0,i.clone()),e?this.isUserScrolling&&(r.ydisp=Math.max(r.ydisp-1,0)):(r.ybase++,this.isUserScrolling||r.ydisp++)}else{const e=s-n+1;r.lines.shiftElements(n+1,e-1,-1),r.lines.set(s,i.clone())}this.isUserScrolling||(r.ydisp=r.ybase),this._onScroll.fire(r.ydisp)}scrollLines(e,t,r){const i=this.buffer;if(e<0){if(0===i.ydisp)return;this.isUserScrolling=!0}else e+i.ydisp>=i.ybase&&(this.isUserScrolling=!1);const n=i.ydisp;i.ydisp=Math.max(Math.min(i.ydisp+e,i.ybase),0),n!==i.ydisp&&(t||this._onScroll.fire(i.ydisp))}scrollPages(e){this.scrollLines(e*(this.rows-1))}scrollToTop(){this.scrollLines(-this.buffer.ydisp)}scrollToBottom(){this.scrollLines(this.buffer.ybase-this.buffer.ydisp)}scrollToLine(e){const t=e-this.buffer.ydisp;0!==t&&this.scrollLines(t)}};c=i([n(0,s.IOptionsService)],c),t.BufferService=c},7994:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CharsetService=void 0,t.CharsetService=class{constructor(){this.glevel=0,this._charsets=[]}reset(){this.charset=void 0,this._charsets=[],this.glevel=0}setgLevel(e){this.glevel=e,this.charset=this._charsets[e]}setgCharset(e,t){this._charsets[e]=t,this.glevel===e&&(this.charset=t)}}},1753:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoreMouseService=void 0;const s=r(2585),o=r(8460),a={NONE:{events:0,restrict:()=>!1},X10:{events:1,restrict:e=>4!==e.button&&1===e.action&&(e.ctrl=!1,e.alt=!1,e.shift=!1,!0)},VT200:{events:19,restrict:e=>32!==e.action},DRAG:{events:23,restrict:e=>32!==e.action||3!==e.button},ANY:{events:31,restrict:e=>!0}};function l(e,t){let r=(e.ctrl?16:0)|(e.shift?4:0)|(e.alt?8:0);return 4===e.button?(r|=64,r|=e.action):(r|=3&e.button,4&e.button&&(r|=64),8&e.button&&(r|=128),32===e.action?r|=32:0!==e.action||t||(r|=3)),r}const c=String.fromCharCode,u={DEFAULT:e=>{const t=[l(e,!1)+32,e.col+32,e.row+32];return t[0]>255||t[1]>255||t[2]>255?"":`[M${c(t[0])}${c(t[1])}${c(t[2])}`},SGR:e=>{const t=0===e.action&&4!==e.button?"m":"M";return`[<${l(e,!0)};${e.col};${e.row}${t}`},SGR_PIXELS:e=>{const t=0===e.action&&4!==e.button?"m":"M";return`[<${l(e,!0)};${e.x};${e.y}${t}`}};let h=class{constructor(e,t){this._bufferService=e,this._coreService=t,this._protocols={},this._encodings={},this._activeProtocol="",this._activeEncoding="",this._onProtocolChange=new o.EventEmitter,this._lastEvent=null;for(const e of Object.keys(a))this.addProtocol(e,a[e]);for(const e of Object.keys(u))this.addEncoding(e,u[e]);this.reset()}addProtocol(e,t){this._protocols[e]=t}addEncoding(e,t){this._encodings[e]=t}get activeProtocol(){return this._activeProtocol}get areMouseEventsActive(){return 0!==this._protocols[this._activeProtocol].events}set activeProtocol(e){if(!this._protocols[e])throw new Error(`unknown protocol "${e}"`);this._activeProtocol=e,this._onProtocolChange.fire(this._protocols[e].events)}get activeEncoding(){return this._activeEncoding}set activeEncoding(e){if(!this._encodings[e])throw new Error(`unknown encoding "${e}"`);this._activeEncoding=e}reset(){this.activeProtocol="NONE",this.activeEncoding="DEFAULT",this._lastEvent=null}get onProtocolChange(){return this._onProtocolChange.event}triggerMouseEvent(e){if(e.col<0||e.col>=this._bufferService.cols||e.row<0||e.row>=this._bufferService.rows)return!1;if(4===e.button&&32===e.action)return!1;if(3===e.button&&32!==e.action)return!1;if(4!==e.button&&(2===e.action||3===e.action))return!1;if(e.col++,e.row++,32===e.action&&this._lastEvent&&this._equalEvents(this._lastEvent,e,"SGR_PIXELS"===this._activeEncoding))return!1;if(!this._protocols[this._activeProtocol].restrict(e))return!1;const t=this._encodings[this._activeEncoding](e);return t&&("DEFAULT"===this._activeEncoding?this._coreService.triggerBinaryEvent(t):this._coreService.triggerDataEvent(t,!0)),this._lastEvent=e,!0}explainEvents(e){return{down:!!(1&e),up:!!(2&e),drag:!!(4&e),move:!!(8&e),wheel:!!(16&e)}}_equalEvents(e,t,r){if(r){if(e.x!==t.x)return!1;if(e.y!==t.y)return!1}else{if(e.col!==t.col)return!1;if(e.row!==t.row)return!1}return e.button===t.button&&e.action===t.action&&e.ctrl===t.ctrl&&e.alt===t.alt&&e.shift===t.shift}};h=i([n(0,s.IBufferService),n(1,s.ICoreService)],h),t.CoreMouseService=h},6975:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoreService=void 0;const s=r(2585),o=r(8460),a=r(1439),l=r(844),c=Object.freeze({insertMode:!1}),u=Object.freeze({applicationCursorKeys:!1,applicationKeypad:!1,bracketedPasteMode:!1,origin:!1,reverseWraparound:!1,sendFocus:!1,wraparound:!0});let h=class extends l.Disposable{constructor(e,t,r,i){super(),this._bufferService=t,this._logService=r,this._optionsService=i,this.isCursorInitialized=!1,this.isCursorHidden=!1,this._onData=this.register(new o.EventEmitter),this._onUserInput=this.register(new o.EventEmitter),this._onBinary=this.register(new o.EventEmitter),this._scrollToBottom=e,this.register({dispose:()=>this._scrollToBottom=void 0}),this.modes=(0,a.clone)(c),this.decPrivateModes=(0,a.clone)(u)}get onData(){return this._onData.event}get onUserInput(){return this._onUserInput.event}get onBinary(){return this._onBinary.event}reset(){this.modes=(0,a.clone)(c),this.decPrivateModes=(0,a.clone)(u)}triggerDataEvent(e,t=!1){if(this._optionsService.rawOptions.disableStdin)return;const r=this._bufferService.buffer;r.ybase!==r.ydisp&&this._scrollToBottom(),t&&this._onUserInput.fire(),this._logService.debug(`sending data "${e}"`,(()=>e.split("").map((e=>e.charCodeAt(0))))),this._onData.fire(e)}triggerBinaryEvent(e){this._optionsService.rawOptions.disableStdin||(this._logService.debug(`sending binary "${e}"`,(()=>e.split("").map((e=>e.charCodeAt(0))))),this._onBinary.fire(e))}};h=i([n(1,s.IBufferService),n(2,s.ILogService),n(3,s.IOptionsService)],h),t.CoreService=h},9074:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DecorationService=void 0;const i=r(8055),n=r(8460),s=r(844),o=r(6106),a={xmin:0,xmax:0};class l extends s.Disposable{constructor(){super(...arguments),this._decorations=new o.SortedList((e=>null==e?void 0:e.marker.line)),this._onDecorationRegistered=this.register(new n.EventEmitter),this._onDecorationRemoved=this.register(new n.EventEmitter)}get onDecorationRegistered(){return this._onDecorationRegistered.event}get onDecorationRemoved(){return this._onDecorationRemoved.event}get decorations(){return this._decorations.values()}registerDecoration(e){if(e.marker.isDisposed)return;const t=new c(e);if(t){const e=t.marker.onDispose((()=>t.dispose()));t.onDispose((()=>{t&&(this._decorations.delete(t)&&this._onDecorationRemoved.fire(t),e.dispose())})),this._decorations.insert(t),this._onDecorationRegistered.fire(t)}return t}reset(){for(const e of this._decorations.values())e.dispose();this._decorations.clear()}*getDecorationsAtCell(e,t,r){var i,n,s;let o=0,a=0;for(const l of this._decorations.getKeyIterator(t))o=null!==(i=l.options.x)&&void 0!==i?i:0,a=o+(null!==(n=l.options.width)&&void 0!==n?n:1),e>=o&&e<a&&(!r||(null!==(s=l.options.layer)&&void 0!==s?s:"bottom")===r)&&(yield l)}forEachDecorationAtCell(e,t,r,i){this._decorations.forEachByKey(t,(t=>{var n,s,o;a.xmin=null!==(n=t.options.x)&&void 0!==n?n:0,a.xmax=a.xmin+(null!==(s=t.options.width)&&void 0!==s?s:1),e>=a.xmin&&e<a.xmax&&(!r||(null!==(o=t.options.layer)&&void 0!==o?o:"bottom")===r)&&i(t)}))}dispose(){for(const e of this._decorations.values())this._onDecorationRemoved.fire(e);this.reset()}}t.DecorationService=l;class c extends s.Disposable{constructor(e){super(),this.options=e,this.isDisposed=!1,this.onRenderEmitter=this.register(new n.EventEmitter),this.onRender=this.onRenderEmitter.event,this._onDispose=this.register(new n.EventEmitter),this.onDispose=this._onDispose.event,this._cachedBg=null,this._cachedFg=null,this.marker=e.marker,this.options.overviewRulerOptions&&!this.options.overviewRulerOptions.position&&(this.options.overviewRulerOptions.position="full")}get backgroundColorRGB(){return null===this._cachedBg&&(this.options.backgroundColor?this._cachedBg=i.css.toColor(this.options.backgroundColor):this._cachedBg=void 0),this._cachedBg}get foregroundColorRGB(){return null===this._cachedFg&&(this.options.foregroundColor?this._cachedFg=i.css.toColor(this.options.foregroundColor):this._cachedFg=void 0),this._cachedFg}dispose(){this._isDisposed||(this._isDisposed=!0,this._onDispose.fire(),super.dispose())}}},3730:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DirtyRowService=void 0;const s=r(2585);let o=class{constructor(e){this._bufferService=e,this.clearRange()}get start(){return this._start}get end(){return this._end}clearRange(){this._start=this._bufferService.buffer.y,this._end=this._bufferService.buffer.y}markDirty(e){e<this._start?this._start=e:e>this._end&&(this._end=e)}markRangeDirty(e,t){if(e>t){const r=e;e=t,t=r}e<this._start&&(this._start=e),t>this._end&&(this._end=t)}markAllDirty(){this.markRangeDirty(0,this._bufferService.rows-1)}};o=i([n(0,s.IBufferService)],o),t.DirtyRowService=o},4348:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstantiationService=t.ServiceCollection=void 0;const i=r(2585),n=r(8343);class s{constructor(...e){this._entries=new Map;for(const[t,r]of e)this.set(t,r)}set(e,t){const r=this._entries.get(e);return this._entries.set(e,t),r}forEach(e){this._entries.forEach(((t,r)=>e(r,t)))}has(e){return this._entries.has(e)}get(e){return this._entries.get(e)}}t.ServiceCollection=s,t.InstantiationService=class{constructor(){this._services=new s,this._services.set(i.IInstantiationService,this)}setService(e,t){this._services.set(e,t)}getService(e){return this._services.get(e)}createInstance(e,...t){const r=(0,n.getServiceDependencies)(e).sort(((e,t)=>e.index-t.index)),i=[];for(const t of r){const r=this._services.get(t.id);if(!r)throw new Error(`[createInstance] ${e.name} depends on UNKNOWN service ${t.id}.`);i.push(r)}const s=r.length>0?r[0].index:t.length;if(t.length!==s)throw new Error(`[createInstance] First service dependency of ${e.name} at position ${s+1} conflicts with ${t.length} static arguments`);return new e(...[...t,...i])}}},7866:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.LogService=void 0;const s=r(2585),o={debug:s.LogLevelEnum.DEBUG,info:s.LogLevelEnum.INFO,warn:s.LogLevelEnum.WARN,error:s.LogLevelEnum.ERROR,off:s.LogLevelEnum.OFF};let a=class{constructor(e){this._optionsService=e,this.logLevel=s.LogLevelEnum.OFF,this._updateLogLevel(),this._optionsService.onOptionChange((e=>{"logLevel"===e&&this._updateLogLevel()}))}_updateLogLevel(){this.logLevel=o[this._optionsService.rawOptions.logLevel]}_evalLazyOptionalParams(e){for(let t=0;t<e.length;t++)"function"==typeof e[t]&&(e[t]=e[t]())}_log(e,t,r){this._evalLazyOptionalParams(r),e.call(console,"xterm.js: "+t,...r)}debug(e,...t){this.logLevel<=s.LogLevelEnum.DEBUG&&this._log(console.log,e,t)}info(e,...t){this.logLevel<=s.LogLevelEnum.INFO&&this._log(console.info,e,t)}warn(e,...t){this.logLevel<=s.LogLevelEnum.WARN&&this._log(console.warn,e,t)}error(e,...t){this.logLevel<=s.LogLevelEnum.ERROR&&this._log(console.error,e,t)}};a=i([n(0,s.IOptionsService)],a),t.LogService=a},7302:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OptionsService=t.DEFAULT_OPTIONS=void 0;const i=r(8460),n=r(6114);t.DEFAULT_OPTIONS={cols:80,rows:24,cursorBlink:!1,cursorStyle:"block",cursorWidth:1,customGlyphs:!0,drawBoldTextInBrightColors:!0,fastScrollModifier:"alt",fastScrollSensitivity:5,fontFamily:"courier-new, courier, monospace",fontSize:15,fontWeight:"normal",fontWeightBold:"bold",lineHeight:1,letterSpacing:0,linkHandler:null,logLevel:"info",scrollback:1e3,scrollSensitivity:1,screenReaderMode:!1,smoothScrollDuration:0,macOptionIsMeta:!1,macOptionClickForcesSelection:!1,minimumContrastRatio:1,disableStdin:!1,allowProposedApi:!1,allowTransparency:!1,tabStopWidth:8,theme:{},rightClickSelectsWord:n.isMac,windowOptions:{},windowsMode:!1,wordSeparator:" ()[]{}',\"`",altClickMovesCursor:!0,convertEol:!1,termName:"xterm",cancelEvents:!1,overviewRulerWidth:0};const s=["normal","bold","100","200","300","400","500","600","700","800","900"];t.OptionsService=class{constructor(e){this._onOptionChange=new i.EventEmitter;const r=Object.assign({},t.DEFAULT_OPTIONS);for(const t in e)if(t in r)try{const i=e[t];r[t]=this._sanitizeAndValidateOption(t,i)}catch(e){console.error(e)}this.rawOptions=r,this.options=Object.assign({},r),this._setupOptions()}get onOptionChange(){return this._onOptionChange.event}_setupOptions(){const e=e=>{if(!(e in t.DEFAULT_OPTIONS))throw new Error(`No option with key "${e}"`);return this.rawOptions[e]},r=(e,r)=>{if(!(e in t.DEFAULT_OPTIONS))throw new Error(`No option with key "${e}"`);r=this._sanitizeAndValidateOption(e,r),this.rawOptions[e]!==r&&(this.rawOptions[e]=r,this._onOptionChange.fire(e))};for(const t in this.rawOptions){const i={get:e.bind(this,t),set:r.bind(this,t)};Object.defineProperty(this.options,t,i)}}_sanitizeAndValidateOption(e,r){switch(e){case"cursorStyle":if(r||(r=t.DEFAULT_OPTIONS[e]),!function(e){return"block"===e||"underline"===e||"bar"===e}(r))throw new Error(`"${r}" is not a valid value for ${e}`);break;case"wordSeparator":r||(r=t.DEFAULT_OPTIONS[e]);break;case"fontWeight":case"fontWeightBold":if("number"==typeof r&&1<=r&&r<=1e3)break;r=s.includes(r)?r:t.DEFAULT_OPTIONS[e];break;case"cursorWidth":r=Math.floor(r);case"lineHeight":case"tabStopWidth":if(r<1)throw new Error(`${e} cannot be less than 1, value: ${r}`);break;case"minimumContrastRatio":r=Math.max(1,Math.min(21,Math.round(10*r)/10));break;case"scrollback":if((r=Math.min(r,4294967295))<0)throw new Error(`${e} cannot be less than 0, value: ${r}`);break;case"fastScrollSensitivity":case"scrollSensitivity":if(r<=0)throw new Error(`${e} cannot be less than or equal to 0, value: ${r}`);case"rows":case"cols":if(!r&&0!==r)throw new Error(`${e} must be numeric, value: ${r}`)}return r}}},2660:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var n,s=arguments.length,o=s<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(o=(s<3?n(o):s>3?n(t,r,o):n(t,r))||o);return s>3&&o&&Object.defineProperty(t,r,o),o},n=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OscLinkService=void 0;const s=r(2585);let o=class{constructor(e){this._bufferService=e,this._nextId=1,this._entriesWithId=new Map,this._dataByLinkId=new Map}registerLink(e){const t=this._bufferService.buffer;if(void 0===e.id){const r=t.addMarker(t.ybase+t.y),i={data:e,id:this._nextId++,lines:[r]};return r.onDispose((()=>this._removeMarkerFromLink(i,r))),this._dataByLinkId.set(i.id,i),i.id}const r=e,i=this._getEntryIdKey(r),n=this._entriesWithId.get(i);if(n)return this.addLineToLink(n.id,t.ybase+t.y),n.id;const s=t.addMarker(t.ybase+t.y),o={id:this._nextId++,key:this._getEntryIdKey(r),data:r,lines:[s]};return s.onDispose((()=>this._removeMarkerFromLink(o,s))),this._entriesWithId.set(o.key,o),this._dataByLinkId.set(o.id,o),o.id}addLineToLink(e,t){const r=this._dataByLinkId.get(e);if(r&&r.lines.every((e=>e.line!==t))){const e=this._bufferService.buffer.addMarker(t);r.lines.push(e),e.onDispose((()=>this._removeMarkerFromLink(r,e)))}}getLinkData(e){var t;return null===(t=this._dataByLinkId.get(e))||void 0===t?void 0:t.data}_getEntryIdKey(e){return`${e.id};;${e.uri}`}_removeMarkerFromLink(e,t){const r=e.lines.indexOf(t);-1!==r&&(e.lines.splice(r,1),0===e.lines.length&&(void 0!==e.data.id&&this._entriesWithId.delete(e.key),this._dataByLinkId.delete(e.id)))}};o=i([n(0,s.IBufferService)],o),t.OscLinkService=o},8343:(e,t)=>{function r(e,t,r){t.di$target===t?t.di$dependencies.push({id:e,index:r}):(t.di$dependencies=[{id:e,index:r}],t.di$target=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.createDecorator=t.getServiceDependencies=t.serviceRegistry=void 0,t.serviceRegistry=new Map,t.getServiceDependencies=function(e){return e.di$dependencies||[]},t.createDecorator=function(e){if(t.serviceRegistry.has(e))return t.serviceRegistry.get(e);const i=function(e,t,n){if(3!==arguments.length)throw new Error("@IServiceName-decorator can only be used to decorate a parameter");r(i,e,n)};return i.toString=()=>e,t.serviceRegistry.set(e,i),i}},2585:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IDecorationService=t.IUnicodeService=t.IOscLinkService=t.IOptionsService=t.ILogService=t.LogLevelEnum=t.IInstantiationService=t.IDirtyRowService=t.ICharsetService=t.ICoreService=t.ICoreMouseService=t.IBufferService=void 0;const i=r(8343);var n;t.IBufferService=(0,i.createDecorator)("BufferService"),t.ICoreMouseService=(0,i.createDecorator)("CoreMouseService"),t.ICoreService=(0,i.createDecorator)("CoreService"),t.ICharsetService=(0,i.createDecorator)("CharsetService"),t.IDirtyRowService=(0,i.createDecorator)("DirtyRowService"),t.IInstantiationService=(0,i.createDecorator)("InstantiationService"),(n=t.LogLevelEnum||(t.LogLevelEnum={}))[n.DEBUG=0]="DEBUG",n[n.INFO=1]="INFO",n[n.WARN=2]="WARN",n[n.ERROR=3]="ERROR",n[n.OFF=4]="OFF",t.ILogService=(0,i.createDecorator)("LogService"),t.IOptionsService=(0,i.createDecorator)("OptionsService"),t.IOscLinkService=(0,i.createDecorator)("OscLinkService"),t.IUnicodeService=(0,i.createDecorator)("UnicodeService"),t.IDecorationService=(0,i.createDecorator)("DecorationService")},1480:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeService=void 0;const i=r(8460),n=r(225);t.UnicodeService=class{constructor(){this._providers=Object.create(null),this._active="",this._onChange=new i.EventEmitter;const e=new n.UnicodeV6;this.register(e),this._active=e.version,this._activeProvider=e}get onChange(){return this._onChange.event}get versions(){return Object.keys(this._providers)}get activeVersion(){return this._active}set activeVersion(e){if(!this._providers[e])throw new Error(`unknown Unicode version "${e}"`);this._active=e,this._activeProvider=this._providers[e],this._onChange.fire(e)}register(e){this._providers[e.version]=e}wcwidth(e){return this._activeProvider.wcwidth(e)}getStringCellWidth(e){let t=0;const r=e.length;for(let i=0;i<r;++i){let n=e.charCodeAt(i);if(55296<=n&&n<=56319){if(++i>=r)return t+this.wcwidth(n);const s=e.charCodeAt(i);56320<=s&&s<=57343?n=1024*(n-55296)+s-56320+65536:t+=this.wcwidth(s)}t+=this.wcwidth(n)}return t}}}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var s=t[i]={exports:{}};return e[i].call(s.exports,s,s.exports,r),s.exports}var i={};return(()=>{var e=i;Object.defineProperty(e,"__esModule",{value:!0}),e.Terminal=void 0;const t=r(3236),n=r(9042),s=r(7975),o=r(7090),a=r(5741),l=r(8285),c=["cols","rows"];e.Terminal=class{constructor(e){this._core=new t.Terminal(e),this._addonManager=new a.AddonManager,this._publicOptions=Object.assign({},this._core.options);const r=e=>this._core.options[e],i=(e,t)=>{this._checkReadonlyOptions(e),this._core.options[e]=t};for(const e in this._core.options){const t={get:r.bind(this,e),set:i.bind(this,e)};Object.defineProperty(this._publicOptions,e,t)}}_checkReadonlyOptions(e){if(c.includes(e))throw new Error(`Option "${e}" can only be set in the constructor`)}_checkProposedApi(){if(!this._core.optionsService.rawOptions.allowProposedApi)throw new Error("You must set the allowProposedApi option to true to use proposed API")}get onBell(){return this._core.onBell}get onBinary(){return this._core.onBinary}get onCursorMove(){return this._core.onCursorMove}get onData(){return this._core.onData}get onKey(){return this._core.onKey}get onLineFeed(){return this._core.onLineFeed}get onRender(){return this._core.onRender}get onResize(){return this._core.onResize}get onScroll(){return this._core.onScroll}get onSelectionChange(){return this._core.onSelectionChange}get onTitleChange(){return this._core.onTitleChange}get onWriteParsed(){return this._core.onWriteParsed}get element(){return this._core.element}get parser(){return this._checkProposedApi(),this._parser||(this._parser=new s.ParserApi(this._core)),this._parser}get unicode(){return this._checkProposedApi(),new o.UnicodeApi(this._core)}get textarea(){return this._core.textarea}get rows(){return this._core.rows}get cols(){return this._core.cols}get buffer(){return this._checkProposedApi(),this._buffer||(this._buffer=new l.BufferNamespaceApi(this._core)),this._buffer}get markers(){return this._checkProposedApi(),this._core.markers}get modes(){const e=this._core.coreService.decPrivateModes;let t="none";switch(this._core.coreMouseService.activeProtocol){case"X10":t="x10";break;case"VT200":t="vt200";break;case"DRAG":t="drag";break;case"ANY":t="any"}return{applicationCursorKeysMode:e.applicationCursorKeys,applicationKeypadMode:e.applicationKeypad,bracketedPasteMode:e.bracketedPasteMode,insertMode:this._core.coreService.modes.insertMode,mouseTrackingMode:t,originMode:e.origin,reverseWraparoundMode:e.reverseWraparound,sendFocusMode:e.sendFocus,wraparoundMode:e.wraparound}}get options(){return this._publicOptions}set options(e){for(const t in e)this._publicOptions[t]=e[t]}blur(){this._core.blur()}focus(){this._core.focus()}resize(e,t){this._verifyIntegers(e,t),this._core.resize(e,t)}open(e){this._core.open(e)}attachCustomKeyEventHandler(e){this._core.attachCustomKeyEventHandler(e)}registerLinkProvider(e){return this._checkProposedApi(),this._core.registerLinkProvider(e)}registerCharacterJoiner(e){return this._checkProposedApi(),this._core.registerCharacterJoiner(e)}deregisterCharacterJoiner(e){this._checkProposedApi(),this._core.deregisterCharacterJoiner(e)}registerMarker(e=0){return this._verifyIntegers(e),this._core.addMarker(e)}registerDecoration(e){var t,r,i;return this._checkProposedApi(),this._verifyPositiveIntegers(null!==(t=e.x)&&void 0!==t?t:0,null!==(r=e.width)&&void 0!==r?r:0,null!==(i=e.height)&&void 0!==i?i:0),this._core.registerDecoration(e)}hasSelection(){return this._core.hasSelection()}select(e,t,r){this._verifyIntegers(e,t,r),this._core.select(e,t,r)}getSelection(){return this._core.getSelection()}getSelectionPosition(){return this._core.getSelectionPosition()}clearSelection(){this._core.clearSelection()}selectAll(){this._core.selectAll()}selectLines(e,t){this._verifyIntegers(e,t),this._core.selectLines(e,t)}dispose(){this._addonManager.dispose(),this._core.dispose()}scrollLines(e){this._verifyIntegers(e),this._core.scrollLines(e)}scrollPages(e){this._verifyIntegers(e),this._core.scrollPages(e)}scrollToTop(){this._core.scrollToTop()}scrollToBottom(){this._core.scrollToBottom()}scrollToLine(e){this._verifyIntegers(e),this._core.scrollToLine(e)}clear(){this._core.clear()}write(e,t){this._core.write(e,t)}writeln(e,t){this._core.write(e),this._core.write("\r\n",t)}paste(e){this._core.paste(e)}refresh(e,t){this._verifyIntegers(e,t),this._core.refresh(e,t)}reset(){this._core.reset()}clearTextureAtlas(){this._core.clearTextureAtlas()}loadAddon(e){return this._addonManager.loadAddon(this,e)}static get strings(){return n}_verifyIntegers(...e){for(const t of e)if(t===1/0||isNaN(t)||t%1!=0)throw new Error("This API only accepts integers")}_verifyPositiveIntegers(...e){for(const t of e)if(t&&(t===1/0||isNaN(t)||t%1!=0||t<0))throw new Error("This API only accepts positive integers")}}})(),i})()}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nc=void 0;var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__);var e=__webpack_require__(294),t=__webpack_require__(935),r=__webpack_require__(869),i=__webpack_require__(864),n=__webpack_require__(774),s=__webpack_require__.n(n);const o=function(e){function t(e,i,l,c,d){for(var f,p,v,g,y,C=0,w=0,k=0,E=0,x=0,I=0,O=v=f=0,M=0,N=0,H=0,F=0,j=l.length,U=j-1,z="",W="",K="",$="";M<j;){if(p=l.charCodeAt(M),M===U&&0!==w+E+k+C&&(0!==w&&(p=47===w?10:47),E=k=C=0,j++,U++),0===w+E+k+C){if(M===U&&(0<N&&(z=z.replace(h,"")),0<z.trim().length)){switch(p){case 32:case 9:case 59:case 13:case 10:break;default:z+=l.charAt(M)}p=59}switch(p){case 123:for(f=(z=z.trim()).charCodeAt(0),v=1,F=++M;M<j;){switch(p=l.charCodeAt(M)){case 123:v++;break;case 125:v--;break;case 47:switch(p=l.charCodeAt(M+1)){case 42:case 47:e:{for(O=M+1;O<U;++O)switch(l.charCodeAt(O)){case 47:if(42===p&&42===l.charCodeAt(O-1)&&M+2!==O){M=O+1;break e}break;case 10:if(47===p){M=O+1;break e}}M=O}}break;case 91:p++;case 40:p++;case 34:case 39:for(;M++<U&&l.charCodeAt(M)!==p;);}if(0===v)break;M++}if(v=l.substring(F,M),0===f&&(f=(z=z.replace(u,"").trim()).charCodeAt(0)),64===f){switch(0<N&&(z=z.replace(h,"")),p=z.charCodeAt(1)){case 100:case 109:case 115:case 45:N=i;break;default:N=D}if(F=(v=t(i,N,v,p,d+1)).length,0<P&&(y=a(3,v,N=r(D,z,H),i,T,A,F,p,d,c),z=N.join(""),void 0!==y&&0===(F=(v=y.trim()).length)&&(p=0,v="")),0<F)switch(p){case 115:z=z.replace(S,o);case 100:case 109:case 45:v=z+"{"+v+"}";break;case 107:v=(z=z.replace(_,"$1 $2"))+"{"+v+"}",v=1===L||2===L&&s("@"+v,3)?"@-webkit-"+v+"@"+v:"@"+v;break;default:v=z+v,112===c&&(W+=v,v="")}else v=""}else v=t(i,r(i,z,H),v,c,d+1);K+=v,v=H=N=O=f=0,z="",p=l.charCodeAt(++M);break;case 125:case 59:if(1<(F=(z=(0<N?z.replace(h,""):z).trim()).length))switch(0===O&&(f=z.charCodeAt(0),45===f||96<f&&123>f)&&(F=(z=z.replace(" ",":")).length),0<P&&void 0!==(y=a(1,z,i,e,T,A,W.length,c,d,c))&&0===(F=(z=y.trim()).length)&&(z="\0\0"),f=z.charCodeAt(0),p=z.charCodeAt(1),f){case 0:break;case 64:if(105===p||99===p){$+=z+l.charAt(M);break}default:58!==z.charCodeAt(F-1)&&(W+=n(z,f,p,z.charCodeAt(2)))}H=N=O=f=0,z="",p=l.charCodeAt(++M)}}switch(p){case 13:case 10:47===w?w=0:0===1+f&&107!==c&&0<z.length&&(N=1,z+="\0"),0<P*B&&a(0,z,i,e,T,A,W.length,c,d,c),A=1,T++;break;case 59:case 125:if(0===w+E+k+C){A++;break}default:switch(A++,g=l.charAt(M),p){case 9:case 32:if(0===E+C+w)switch(x){case 44:case 58:case 9:case 32:g="";break;default:32!==p&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===E+w+C&&(N=H=1,g="\f"+g);break;case 108:if(0===E+w+C+R&&0<O)switch(M-O){case 2:112===x&&58===l.charCodeAt(M-3)&&(R=x);case 8:111===I&&(R=I)}break;case 58:0===E+w+C&&(O=M);break;case 44:0===w+k+E+C&&(N=1,g+="\r");break;case 34:case 39:0===w&&(E=E===p?0:0===E?p:E);break;case 91:0===E+w+k&&C++;break;case 93:0===E+w+k&&C--;break;case 41:0===E+w+C&&k--;break;case 40:0===E+w+C&&(0===f&&(2*x+3*I==533||(f=1)),k++);break;case 64:0===w+k+E+C+O+v&&(v=1);break;case 42:case 47:if(!(0<E+C+k))switch(w){case 0:switch(2*p+3*l.charCodeAt(M+1)){case 235:w=47;break;case 220:F=M,w=42}break;case 42:47===p&&42===x&&F+2!==M&&(33===l.charCodeAt(F+2)&&(W+=l.substring(F,M+1)),g="",w=0)}}0===w&&(z+=g)}I=x,x=p,M++}if(0<(F=W.length)){if(N=i,0<P&&void 0!==(y=a(2,W,N,e,T,A,F,c,d,c))&&0===(W=y).length)return $+W+K;if(W=N.join(",")+"{"+W+"}",0!=L*R){switch(2!==L||s(W,2)||(R=0),R){case 111:W=W.replace(b,":-moz-$1")+W;break;case 112:W=W.replace(m,"::-webkit-input-$1")+W.replace(m,"::-moz-$1")+W.replace(m,":-ms-input-$1")+W}R=0}}return $+W+K}function r(e,t,r){var n=t.trim().split(v);t=n;var s=n.length,o=e.length;switch(o){case 0:case 1:var a=0;for(e=0===o?"":e[0]+" ";a<s;++a)t[a]=i(e,t[a],r).trim();break;default:var l=a=0;for(t=[];a<s;++a)for(var c=0;c<o;++c)t[l++]=i(e[c]+" ",n[a],r).trim()}return t}function i(e,t,r){var i=t.charCodeAt(0);switch(33>i&&(i=(t=t.trim()).charCodeAt(0)),i){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*r&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function n(e,t,r,i){var o=e+";",a=2*t+3*r+4*i;if(944===a){e=o.indexOf(":",9)+1;var l=o.substring(e,o.length-1).trim();return l=o.substring(0,e).trim()+l+";",1===L||2===L&&s(l,1)?"-webkit-"+l+l:l}if(0===L||2===L&&!s(o,1))return o;switch(a){case 1015:return 97===o.charCodeAt(10)?"-webkit-"+o+o:o;case 951:return 116===o.charCodeAt(3)?"-webkit-"+o+o:o;case 963:return 110===o.charCodeAt(5)?"-webkit-"+o+o:o;case 1009:if(100!==o.charCodeAt(4))break;case 969:case 942:return"-webkit-"+o+o;case 978:return"-webkit-"+o+"-moz-"+o+o;case 1019:case 983:return"-webkit-"+o+"-moz-"+o+"-ms-"+o+o;case 883:if(45===o.charCodeAt(8))return"-webkit-"+o+o;if(0<o.indexOf("image-set(",11))return o.replace(x,"$1-webkit-$2")+o;break;case 932:if(45===o.charCodeAt(4))switch(o.charCodeAt(5)){case 103:return"-webkit-box-"+o.replace("-grow","")+"-webkit-"+o+"-ms-"+o.replace("grow","positive")+o;case 115:return"-webkit-"+o+"-ms-"+o.replace("shrink","negative")+o;case 98:return"-webkit-"+o+"-ms-"+o.replace("basis","preferred-size")+o}return"-webkit-"+o+"-ms-"+o+o;case 964:return"-webkit-"+o+"-ms-flex-"+o+o;case 1023:if(99!==o.charCodeAt(8))break;return"-webkit-box-pack"+(l=o.substring(o.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+o+"-ms-flex-pack"+l+o;case 1005:return f.test(o)?o.replace(d,":-webkit-")+o.replace(d,":-moz-")+o:o;case 1e3:switch(t=(l=o.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(t)){case 226:l=o.replace(y,"tb");break;case 232:l=o.replace(y,"tb-rl");break;case 220:l=o.replace(y,"lr");break;default:return o}return"-webkit-"+o+"-ms-"+l+o;case 1017:if(-1===o.indexOf("sticky",9))break;case 975:switch(t=(o=e).length-10,a=(l=(33===o.charCodeAt(t)?o.substring(0,t):o).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(111>l.charCodeAt(8))break;case 115:o=o.replace(l,"-webkit-"+l)+";"+o;break;case 207:case 102:o=o.replace(l,"-webkit-"+(102<a?"inline-":"")+"box")+";"+o.replace(l,"-webkit-"+l)+";"+o.replace(l,"-ms-"+l+"box")+";"+o}return o+";";case 938:if(45===o.charCodeAt(5))switch(o.charCodeAt(6)){case 105:return l=o.replace("-items",""),"-webkit-"+o+"-webkit-box-"+l+"-ms-flex-"+l+o;case 115:return"-webkit-"+o+"-ms-flex-item-"+o.replace(w,"")+o;default:return"-webkit-"+o+"-ms-flex-line-pack"+o.replace("align-content","").replace(w,"")+o}break;case 973:case 989:if(45!==o.charCodeAt(3)||122===o.charCodeAt(4))break;case 931:case 953:if(!0===E.test(e))return 115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0)?n(e.replace("stretch","fill-available"),t,r,i).replace(":fill-available",":stretch"):o.replace(l,"-webkit-"+l)+o.replace(l,"-moz-"+l.replace("fill-",""))+o;break;case 962:if(o="-webkit-"+o+(102===o.charCodeAt(5)?"-ms-"+o:"")+o,211===r+i&&105===o.charCodeAt(13)&&0<o.indexOf("transform",10))return o.substring(0,o.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+o}return o}function s(e,t){var r=e.indexOf(1===t?":":"{"),i=e.substring(0,3!==t?r:10);return r=e.substring(r+1,e.length-1),O(2!==t?i:i.replace(k,"$1"),r,t)}function o(e,t){var r=n(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return r!==t+";"?r.replace(C," or ($1)").substring(4):"("+t+")"}function a(e,t,r,i,n,s,o,a,l,u){for(var h,d=0,f=t;d<P;++d)switch(h=I[d].call(c,e,f,r,i,n,s,o,a,l,u)){case void 0:case!1:case!0:case null:break;default:f=h}if(f!==t)return f}function l(e){return void 0!==(e=e.prefix)&&(O=null,e?"function"!=typeof e?L=1:(L=2,O=e):L=0),l}function c(e,r){var i=e;if(33>i.charCodeAt(0)&&(i=i.trim()),i=[i],0<P){var n=a(-1,r,i,i,T,A,0,0,0,0);void 0!==n&&"string"==typeof n&&(r=n)}var s=t(D,i,r,0,0);return 0<P&&void 0!==(n=a(-2,s,i,i,T,A,s.length,0,0,0))&&(s=n),R=0,A=T=1,s}var u=/^\0+/g,h=/[\0\r\f]/g,d=/: */g,f=/zoo|gra/,p=/([,: ])(transform)/g,v=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,_=/@(k\w+)\s*(\S*)\s*/,m=/::(place)/g,b=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,S=/\(\s*(.*)\s*\)/g,C=/([\s\S]*?);/g,w=/-self|flex-/g,k=/[^]*?(:[rp][el]a[\w-]+)[^]*/,E=/stretch|:\s*\w+\-(?:conte|avail)/,x=/([^-])(image-set\()/,A=1,T=1,R=0,L=1,D=[],I=[],P=0,O=null,B=0;return c.use=function e(t){switch(t){case void 0:case null:P=I.length=0;break;default:if("function"==typeof t)I[P++]=t;else if("object"==typeof t)for(var r=0,i=t.length;r<i;++r)e(t[r]);else B=0|!!t}return e},c.set=l,void 0!==e&&l(e),c},a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var l=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const c=function(e){var t=Object.create(null);return function(e){return void 0===t[e]&&(t[e]=(r=e,l.test(r)||111===r.charCodeAt(0)&&110===r.charCodeAt(1)&&r.charCodeAt(2)<91)),t[e];var r}}();var u=__webpack_require__(679),h=__webpack_require__.n(u);function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e}).apply(this,arguments)}var f=function(e,t){for(var r=[e[0]],i=0,n=t.length;i<n;i+=1)r.push(t[i],e[i+1]);return r},p=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,i.typeOf)(e)},v=Object.freeze([]),g=Object.freeze({});function _(e){return"function"==typeof e}function m(e){return e.displayName||e.name||"Component"}function b(e){return e&&"string"==typeof e.styledComponentId}var y="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",S="undefined"!=typeof window&&"HTMLElement"in window,C=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY);function w(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(r.length>0?" Args: "+r.join(", "):""))}var k=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,r=0;r<e;r++)t+=this.groupSizes[r];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var r=this.groupSizes,i=r.length,n=i;e>=n;)(n<<=1)<0&&w(16,""+e);this.groupSizes=new Uint32Array(n),this.groupSizes.set(r),this.length=n;for(var s=i;s<n;s++)this.groupSizes[s]=0}for(var o=this.indexOfGroup(e+1),a=0,l=t.length;a<l;a++)this.tag.insertRule(o,t[a])&&(this.groupSizes[e]++,o++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],r=this.indexOfGroup(e),i=r+t;this.groupSizes[e]=0;for(var n=r;n<i;n++)this.tag.deleteRule(r)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var r=this.groupSizes[e],i=this.indexOfGroup(e),n=i+r,s=i;s<n;s++)t+=this.tag.getRule(s)+"/*!sc*/\n";return t},e}(),E=new Map,x=new Map,A=1,T=function(e){if(E.has(e))return E.get(e);for(;x.has(A);)A++;var t=A++;return E.set(e,t),x.set(t,e),t},R=function(e){return x.get(e)},L=function(e,t){t>=A&&(A=t+1),E.set(e,t),x.set(t,e)},D="style["+y+'][data-styled-version="5.3.5"]',I=new RegExp("^"+y+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),P=function(e,t,r){for(var i,n=r.split(","),s=0,o=n.length;s<o;s++)(i=n[s])&&e.registerName(t,i)},O=function(e,t){for(var r=(t.textContent||"").split("/*!sc*/\n"),i=[],n=0,s=r.length;n<s;n++){var o=r[n].trim();if(o){var a=o.match(I);if(a){var l=0|parseInt(a[1],10),c=a[2];0!==l&&(L(c,l),P(e,c,a[3]),e.getTag().insertRules(l,i)),i.length=0}else i.push(o)}}},B=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},M=function(e){var t=document.head,r=e||t,i=document.createElement("style"),n=function(e){for(var t=e.childNodes,r=t.length;r>=0;r--){var i=t[r];if(i&&1===i.nodeType&&i.hasAttribute(y))return i}}(r),s=void 0!==n?n.nextSibling:null;i.setAttribute(y,"active"),i.setAttribute("data-styled-version","5.3.5");var o=B();return o&&i.setAttribute("nonce",o),r.insertBefore(i,s),i},N=function(){function e(e){var t=this.element=M(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,r=0,i=t.length;r<i;r++){var n=t[r];if(n.ownerNode===e)return n}w(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),H=function(){function e(e){var t=this.element=M(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var r=document.createTextNode(t),i=this.nodes[e];return this.element.insertBefore(r,i||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),F=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),j=S,U={isServer:!S,useCSSOMInjection:!C},z=function(){function e(e,t,r){void 0===e&&(e=g),void 0===t&&(t={}),this.options=d({},U,{},e),this.gs=t,this.names=new Map(r),this.server=!!e.isServer,!this.server&&S&&j&&(j=!1,function(e){for(var t=document.querySelectorAll(D),r=0,i=t.length;r<i;r++){var n=t[r];n&&"active"!==n.getAttribute(y)&&(O(e,n),n.parentNode&&n.parentNode.removeChild(n))}}(this))}e.registerId=function(e){return T(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,r){return void 0===r&&(r=!0),new e(d({},this.options,{},t),this.gs,r&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(r=(t=this.options).isServer,i=t.useCSSOMInjection,n=t.target,e=r?new F(n):i?new N(n):new H(n),new k(e)));var e,t,r,i,n},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(T(e),this.names.has(e))this.names.get(e).add(t);else{var r=new Set;r.add(t),this.names.set(e,r)}},t.insertRules=function(e,t,r){this.registerName(e,t),this.getTag().insertRules(T(e),r)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(T(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),r=t.length,i="",n=0;n<r;n++){var s=R(n);if(void 0!==s){var o=e.names.get(s),a=t.getGroup(n);if(o&&a&&o.size){var l=y+".g"+n+'[id="'+s+'"]',c="";void 0!==o&&o.forEach((function(e){e.length>0&&(c+=e+",")})),i+=""+a+l+'{content:"'+c+'"}/*!sc*/\n'}}}return i}(this)},e}(),W=/(a)(d)/gi,K=function(e){return String.fromCharCode(e+(e>25?39:97))};function $(e){var t,r="";for(t=Math.abs(e);t>52;t=t/52|0)r=K(t%52)+r;return(K(t%52)+r).replace(W,"$1-$2")}var V=function(e,t){for(var r=t.length;r;)e=33*e^t.charCodeAt(--r);return e},q=function(e){return V(5381,e)};function Z(e){for(var t=0;t<e.length;t+=1){var r=e[t];if(_(r)&&!b(r))return!1}return!0}var G=q("5.3.5"),X=function(){function e(e,t,r){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===r||r.isStatic)&&Z(e),this.componentId=t,this.baseHash=V(G,t),this.baseStyle=r,z.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,r){var i=this.componentId,n=[];if(this.baseStyle&&n.push(this.baseStyle.generateAndInjectStyles(e,t,r)),this.isStatic&&!r.hash)if(this.staticRulesId&&t.hasNameForId(i,this.staticRulesId))n.push(this.staticRulesId);else{var s=fe(this.rules,e,t,r).join(""),o=$(V(this.baseHash,s)>>>0);if(!t.hasNameForId(i,o)){var a=r(s,"."+o,void 0,i);t.insertRules(i,o,a)}n.push(o),this.staticRulesId=o}else{for(var l=this.rules.length,c=V(this.baseHash,r.hash),u="",h=0;h<l;h++){var d=this.rules[h];if("string"==typeof d)u+=d;else if(d){var f=fe(d,e,t,r),p=Array.isArray(f)?f.join(""):f;c=V(c,p+h),u+=p}}if(u){var v=$(c>>>0);if(!t.hasNameForId(i,v)){var g=r(u,"."+v,void 0,i);t.insertRules(i,v,g)}n.push(v)}}return n.join(" ")},e}(),Y=/^\s*\/\/.*$/gm,J=[":","[",".","#"];function Q(e){var t,r,i,n,s=void 0===e?g:e,a=s.options,l=void 0===a?g:a,c=s.plugins,u=void 0===c?v:c,h=new o(l),d=[],f=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(r,i,n,s,o,a,l,c,u,h){switch(r){case 1:if(0===u&&64===i.charCodeAt(0))return e(i+";"),"";break;case 2:if(0===c)return i+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(n[0]+i),"";default:return i+(0===h?"/*|*/":"")}case-2:i.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),p=function(e,i,s){return 0===i&&-1!==J.indexOf(s[r.length])||s.match(n)?e:"."+t};function _(e,s,o,a){void 0===a&&(a="&");var l=e.replace(Y,""),c=s&&o?o+" "+s+" { "+l+" }":l;return t=a,r=s,i=new RegExp("\\"+r+"\\b","g"),n=new RegExp("(\\"+r+"\\b){2,}"),h(o||!s?"":s,c)}return h.use([].concat(u,[function(e,t,n){2===e&&n.length&&n[0].lastIndexOf(r)>0&&(n[0]=n[0].replace(i,p))},f,function(e){if(-2===e){var t=d;return d=[],t}}])),_.hash=u.length?u.reduce((function(e,t){return t.name||w(15),V(e,t.name)}),5381).toString():"",_}var ee=e.createContext(),te=(ee.Consumer,e.createContext()),re=(te.Consumer,new z),ie=Q();function ne(){return(0,e.useContext)(ee)||re}function se(t){var r=(0,e.useState)(t.stylisPlugins),i=r[0],n=r[1],o=ne(),a=(0,e.useMemo)((function(){var e=o;return t.sheet?e=t.sheet:t.target&&(e=e.reconstructWithOptions({target:t.target},!1)),t.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[t.disableCSSOMInjection,t.sheet,t.target]),l=(0,e.useMemo)((function(){return Q({options:{prefix:!t.disableVendorPrefixes},plugins:i})}),[t.disableVendorPrefixes,i]);return(0,e.useEffect)((function(){s()(i,t.stylisPlugins)||n(t.stylisPlugins)}),[t.stylisPlugins]),e.createElement(ee.Provider,{value:a},e.createElement(te.Provider,{value:l},t.children))}var oe=function(){function e(e,t){var r=this;this.inject=function(e,t){void 0===t&&(t=ie);var i=r.name+t.hash;e.hasNameForId(r.id,i)||e.insertRules(r.id,i,t(r.rules,i,"@keyframes"))},this.toString=function(){return w(12,String(r.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ie),this.name+e.hash},e}(),ae=/([A-Z])/,le=/([A-Z])/g,ce=/^ms-/,ue=function(e){return"-"+e.toLowerCase()};function he(e){return ae.test(e)?e.replace(le,ue).replace(ce,"-ms-"):e}var de=function(e){return null==e||!1===e||""===e};function fe(e,t,r,i){if(Array.isArray(e)){for(var n,s=[],o=0,l=e.length;o<l;o+=1)""!==(n=fe(e[o],t,r,i))&&(Array.isArray(n)?s.push.apply(s,n):s.push(n));return s}return de(e)?"":b(e)?"."+e.styledComponentId:_(e)?"function"!=typeof(c=e)||c.prototype&&c.prototype.isReactComponent||!t?e:fe(e(t),t,r,i):e instanceof oe?r?(e.inject(r,i),e.getName(i)):e:p(e)?function e(t,r){var i,n,s=[];for(var o in t)t.hasOwnProperty(o)&&!de(t[o])&&(Array.isArray(t[o])&&t[o].isCss||_(t[o])?s.push(he(o)+":",t[o],";"):p(t[o])?s.push.apply(s,e(t[o],o)):s.push(he(o)+": "+(i=o,(null==(n=t[o])||"boolean"==typeof n||""===n?"":"number"!=typeof n||0===n||i in a?String(n).trim():n+"px")+";")));return r?[r+" {"].concat(s,["}"]):s}(e):e.toString();var c}var pe=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function ve(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];return _(e)||p(e)?pe(fe(f(v,[e].concat(r)))):0===r.length&&1===e.length&&"string"==typeof e[0]?e:pe(fe(f(e,r)))}new Set;var ge=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,_e=/(^-|-$)/g;function me(e){return e.replace(ge,"-").replace(_e,"")}function be(e){return"string"==typeof e&&!0}var ye=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Se=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Ce(e,t,r){var i=e[r];ye(t)&&ye(i)?we(i,t):e[r]=t}function we(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];for(var n=0,s=r;n<s.length;n++){var o=s[n];if(ye(o))for(var a in o)Se(a)&&Ce(e,o[a],a)}return e}var ke=e.createContext();ke.Consumer;var Ee={};function xe(t,r,i){var n=b(t),s=!be(t),o=r.attrs,a=void 0===o?v:o,l=r.componentId,u=void 0===l?function(e,t){var r="string"!=typeof e?"sc":me(e);Ee[r]=(Ee[r]||0)+1;var i=r+"-"+function(e){return $(q(e)>>>0)}("5.3.5"+r+Ee[r]);return t?t+"-"+i:i}(r.displayName,r.parentComponentId):l,f=r.displayName,p=void 0===f?function(e){return be(e)?"styled."+e:"Styled("+m(e)+")"}(t):f,y=r.displayName&&r.componentId?me(r.displayName)+"-"+r.componentId:r.componentId||u,S=n&&t.attrs?Array.prototype.concat(t.attrs,a).filter(Boolean):a,C=r.shouldForwardProp;n&&t.shouldForwardProp&&(C=r.shouldForwardProp?function(e,i,n){return t.shouldForwardProp(e,i,n)&&r.shouldForwardProp(e,i,n)}:t.shouldForwardProp);var w,k=new X(i,y,n?t.componentStyle:void 0),E=k.isStatic&&0===a.length,x=function(t,r){return function(t,r,i,n){var s=t.attrs,o=t.componentStyle,a=t.defaultProps,l=t.foldedComponentIds,u=t.shouldForwardProp,h=t.styledComponentId,f=t.target,p=function(e,t,r){void 0===e&&(e=g);var i=d({},t,{theme:e}),n={};return r.forEach((function(e){var t,r,s,o=e;for(t in _(o)&&(o=o(i)),o)i[t]=n[t]="className"===t?(r=n[t],s=o[t],r&&s?r+" "+s:r||s):o[t]})),[i,n]}(function(e,t,r){return void 0===r&&(r=g),e.theme!==r.theme&&e.theme||t||r.theme}(r,(0,e.useContext)(ke),a)||g,r,s),v=p[0],m=p[1],b=function(t,r,i,n){var s=ne(),o=(0,e.useContext)(te)||ie;return r?t.generateAndInjectStyles(g,s,o):t.generateAndInjectStyles(i,s,o)}(o,n,v),y=i,S=m.$as||r.$as||m.as||r.as||f,C=be(S),w=m!==r?d({},r,{},m):r,k={};for(var E in w)"$"!==E[0]&&"as"!==E&&("forwardedAs"===E?k.as=w[E]:(u?u(E,c,S):!C||c(E))&&(k[E]=w[E]));return r.style&&m.style!==r.style&&(k.style=d({},r.style,{},m.style)),k.className=Array.prototype.concat(l,h,b!==h?b:null,r.className,m.className).filter(Boolean).join(" "),k.ref=y,(0,e.createElement)(S,k)}(w,t,r,E)};return x.displayName=p,(w=e.forwardRef(x)).attrs=S,w.componentStyle=k,w.displayName=p,w.shouldForwardProp=C,w.foldedComponentIds=n?Array.prototype.concat(t.foldedComponentIds,t.styledComponentId):v,w.styledComponentId=y,w.target=n?t.target:t,w.withComponent=function(e){var t=r.componentId,n=function(e,t){if(null==e)return{};var r,i,n={},s=Object.keys(e);for(i=0;i<s.length;i++)r=s[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(r,["componentId"]),s=t&&t+"-"+(be(e)?e:me(m(e)));return xe(e,d({},n,{attrs:S,componentId:s}),i)},Object.defineProperty(w,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=n?we({},t.defaultProps,e):e}}),w.toString=function(){return"."+w.styledComponentId},s&&h()(w,t,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),w}var Ae,Te=function(e){return function e(t,r,n){if(void 0===n&&(n=g),!(0,i.isValidElementType)(r))return w(1,String(r));var s=function(){return t(r,n,ve.apply(void 0,arguments))};return s.withConfig=function(i){return e(t,r,d({},n,{},i))},s.attrs=function(i){return e(t,r,d({},n,{attrs:Array.prototype.concat(n.attrs,i).filter(Boolean)}))},s}(xe,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){Te[e]=Te(e)})),Ae=function(e,t){this.rules=e,this.componentId=t,this.isStatic=Z(e),z.registerId(this.componentId+1)}.prototype,Ae.createStyles=function(e,t,r,i){var n=i(fe(this.rules,t,r,i).join(""),""),s=this.componentId+e;r.insertRules(s,s,n)},Ae.removeStyles=function(e,t){t.clearRules(this.componentId+e)},Ae.renderStyles=function(e,t,r,i){e>2&&z.registerId(this.componentId+e),this.removeStyles(e,r),this.createStyles(e,t,r,i)},function(){var t=function(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString();if(!e)return"";var r=B();return"<style "+[r&&'nonce="'+r+'"',y+'="true"','data-styled-version="5.3.5"'].filter(Boolean).join(" ")+">"+e+"</style>"},this.getStyleTags=function(){return t.sealed?w(2):t._emitSheetCSS()},this.getStyleElement=function(){var r;if(t.sealed)return w(2);var i=((r={})[y]="",r["data-styled-version"]="5.3.5",r.dangerouslySetInnerHTML={__html:t.instance.toString()},r),n=B();return n&&(i.nonce=n),[e.createElement("style",d({},i,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=!0},this.instance=new z({isServer:!0}),this.sealed=!1}.prototype;t.collectStyles=function(t){return this.sealed?w(2):e.createElement(se,{sheet:this.instance},t)},t.interleaveWithNodeStream=function(e){return w(3)}}();const Re=Te;var Le=__webpack_require__(320);const De=e=>null!=e&&""!==e&&!1!==e&&0!==e,Ie=Re.div`
   display:block;
   text-align:center;
`,Pe=Re.div`
   display:inline-block;
`;class Oe extends e.Component{componentDidMount(){var e;const t=null!==(e=document.getElementById("xterm"))&&void 0!==e?e:"",{xterm:r,handleKeyPress:i}=this.props;De(t)&&(r.open(t),r.onData((e=>i(e))),r.attachCustomKeyEventHandler((e=>(e.stopPropagation(),e.preventDefault(),De(e.ctrlKey)&&De(e.shiftKey)&&67===e.keyCode?navigator.clipboard.writeText(r.getSelection()):De(e.ctrlKey)&&De(e.shiftKey)&&86===e.keyCode?navigator.clipboard.readText().then((e=>i(e))):"Space"===e.code?i(e.key):void 0))))}render(){return e.createElement(Ie,null,e.createElement(Pe,{id:"xterm"}))}}const Be=Oe;var Me=__webpack_require__(379),Ne=__webpack_require__.n(Me),He=__webpack_require__(795),Fe=__webpack_require__.n(He),je=__webpack_require__(569),Ue=__webpack_require__.n(je),ze=__webpack_require__(565),We=__webpack_require__.n(ze),Ke=__webpack_require__(216),$e=__webpack_require__.n(Ke),Ve=__webpack_require__(589),qe=__webpack_require__.n(Ve),Ze=__webpack_require__(14),Ge={};Ge.styleTagTransform=qe(),Ge.setAttributes=We(),Ge.insert=Ue().bind(null,"head"),Ge.domAPI=Fe(),Ge.insertStyleElement=$e(),Ne()(Ze.Z,Ge),Ze.Z&&Ze.Z.locals&&Ze.Z.locals;var Xe=__webpack_require__(20),Ye={};Ye.styleTagTransform=qe(),Ye.setAttributes=We(),Ye.insert=Ue().bind(null,"head"),Ye.domAPI=Fe(),Ye.insertStyleElement=$e(),Ne()(Xe.Z,Ye),Xe.Z&&Xe.Z.locals&&Xe.Z.locals;const Je=Re.div`
display : inline-block;
padding : 0px 5px;
`,Qe=Re.div`
background-color: darkgray;
padding: 5px;
font-size: 13px;
text-align: center;
`;class et extends e.Component{constructor(e){super(e),this.init=()=>{const e=null!=this.props.mpsServer?this.props.mpsServer.replace("http","ws"):"",t=null!=this.props.deviceId?this.props.deviceId:"";this.terminal=new r.AmtTerminal,this.redirector=new r.AMTRedirector(this.logger,r.Protocol.SOL,new FileReader,t,16994,"","",0,0,this.props.authToken,`${e}/relay`),this.dataProcessor=new r.TerminalDataProcessor(this.terminal),this.terminal.onSend=this.redirector.send.bind(this.redirector),this.redirector.onNewState=this.terminal.StateChange.bind(this.terminal),this.redirector.onStateChanged=this.onTerminalStateChange.bind(this),this.redirector.onProcessData=this.dataProcessor.processData.bind(this.dataProcessor),this.dataProcessor.processDataToXterm=this.handleWriteToXterm.bind(this),this.dataProcessor.clearTerminal=this.handleClearTerminal.bind(this),this.term=new Le.Terminal({cursorStyle:"block",fontWeight:"bold",rows:30,cols:100})},this.cleanUp=()=>{this.terminal=null,this.redirector=null,this.dataProcessor=null,this.term=null},this.handleWriteToXterm=e=>this.term.write(e),this.handleClearTerminal=()=>this.term.reset(),this.handleKeyPress=e=>this.terminal.TermSendKeys(e),this.handleKeyDownPress=e=>this.terminal.handleKeyDownEvents(e),this.startSOL=()=>{void 0!==this.redirector&&this.redirector.start(WebSocket)},this.stopSOL=()=>{void 0!==this.redirector&&this.redirector.stop(),this.handleClearTerminal(),this.cleanUp(),this.init()},this.handleSOLConnect=e=>{e.persist(),0===this.state.SOLstate?this.startSOL():this.stopSOL()},this.onTerminalStateChange=(e,t)=>this.setState({SOLstate:t}),this.handleFeatureStatus=e=>{this.setState({solNotEnabled:e})},this.getSOLState=()=>3===this.state.SOLstate?2:0,this.logger=new r.ConsoleLogger(r.LogLevel.ERROR),this.state={isConnected:!1,SOLstate:0,powerState:0,showSuccess:!1,message:"",isSelected:!0,type:"",solNotEnabled:"",deviceOnSleep:"",isPowerStateLoaded:!1}}componentDidMount(){this.init()}render(){const{SOLstate:t}=this.state;return e.createElement(e.Fragment,null,e.createElement(Qe,null,e.createElement(Je,null,e.createElement("button",{onClick:this.handleSOLConnect},3===t?"Disconnect":"Connect"))),3===t&&this.term&&e.createElement(Be,{handleKeyPress:this.handleKeyPress,handleKeyDownPress:this.handleKeyDownPress,xterm:this.term}))}}function tt(e){return tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},tt(e)}function rt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function it(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function nt(e,t,r){return t&&it(e.prototype,t),r&&it(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function st(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ot(e,t){return ot=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ot(e,t)}function at(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ot(e,t)}function lt(e,t){if(t&&("object"===tt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return st(e)}function ct(e){return ct=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ct(e)}function ut(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ht(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,i=new Array(t);r<t;r++)i[r]=e[r];return i}function dt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function ft(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?dt(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):dt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var pt={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,t){console&&console[e]&&console[e].apply(console,t)}},vt=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};rt(this,e),this.init(t,r)}return nt(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||pt,this.options=t,this.debug=t.debug}},{key:"setDebug",value:function(e){this.debug=e}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,r,i){return i&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(r).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,ft(ft({},{prefix:"".concat(this.prefix,":").concat(t,":")}),this.options))}},{key:"clone",value:function(t){return(t=t||this.options).prefix=t.prefix||this.prefix,new e(this.logger,t)}}]),e}(),gt=new vt,_t=function(){function e(){rt(this,e),this.observers={}}return nt(e,[{key:"on",value:function(e,t){var r=this;return e.split(" ").forEach((function(e){r.observers[e]=r.observers[e]||[],r.observers[e].push(t)})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e])}},{key:"emit",value:function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];if(this.observers[e]){var n=[].concat(this.observers[e]);n.forEach((function(e){e.apply(void 0,r)}))}if(this.observers["*"]){var s=[].concat(this.observers["*"]);s.forEach((function(t){t.apply(t,[e].concat(r))}))}}}]),e}();function mt(){var e,t,r=new Promise((function(r,i){e=r,t=i}));return r.resolve=e,r.reject=t,r}function bt(e){return null==e?"":""+e}function yt(e,t,r){e.forEach((function(e){t[e]&&(r[e]=t[e])}))}function St(e,t,r){function i(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function n(){return!e||"string"==typeof e}for(var s="string"!=typeof t?[].concat(t):t.split(".");s.length>1;){if(n())return{};var o=i(s.shift());!e[o]&&r&&(e[o]=new r),e=Object.prototype.hasOwnProperty.call(e,o)?e[o]:{}}return n()?{}:{obj:e,k:i(s.shift())}}function Ct(e,t,r){var i=St(e,t,Object);i.obj[i.k]=r}function wt(e,t){var r=St(e,t),i=r.obj,n=r.k;if(i)return i[n]}function kt(e,t,r){var i=wt(e,r);return void 0!==i?i:wt(t,r)}function Et(e,t,r){for(var i in t)"__proto__"!==i&&"constructor"!==i&&(i in e?"string"==typeof e[i]||e[i]instanceof String||"string"==typeof t[i]||t[i]instanceof String?r&&(e[i]=t[i]):Et(e[i],t[i],r):e[i]=t[i]);return e}function xt(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var At={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function Tt(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return At[e]})):e}var Rt="undefined"!=typeof window&&window.navigator&&void 0===window.navigator.userAgentData&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1,Lt=[" ",",","?","!",";"];function Dt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function It(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Dt(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Dt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Pt(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(e){if(e[t])return e[t];for(var i=t.split(r),n=e,s=0;s<i.length;++s){if(!n)return;if("string"==typeof n[i[s]]&&s+1<i.length)return;if(void 0===n[i[s]]){for(var o=2,a=i.slice(s,s+o).join(r),l=n[a];void 0===l&&i.length>s+o;)o++,l=n[a=i.slice(s,s+o).join(r)];if(void 0===l)return;if(null===l)return null;if(t.endsWith(a)){if("string"==typeof l)return l;if(a&&"string"==typeof l[a])return l[a]}var c=i.slice(s+o).join(r);return c?Pt(l,c,r):void 0}n=n[i[s]]}return n}}var Ot=function(e){at(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ct(t);if(r){var n=ct(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return lt(this,e)});function n(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return rt(this,n),t=i.call(this),Rt&&_t.call(st(t)),t.data=e||{},t.options=r,void 0===t.options.keySeparator&&(t.options.keySeparator="."),void 0===t.options.ignoreJSONStructure&&(t.options.ignoreJSONStructure=!0),t}return nt(n,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:"getResource",value:function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=void 0!==i.keySeparator?i.keySeparator:this.options.keySeparator,s=void 0!==i.ignoreJSONStructure?i.ignoreJSONStructure:this.options.ignoreJSONStructure,o=[e,t];r&&"string"!=typeof r&&(o=o.concat(r)),r&&"string"==typeof r&&(o=o.concat(n?r.split(n):r)),e.indexOf(".")>-1&&(o=e.split("."));var a=wt(this.data,o);return a||!s||"string"!=typeof r?a:Pt(this.data&&this.data[e]&&this.data[e][t],r,n)}},{key:"addResource",value:function(e,t,r,i){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},s=this.options.keySeparator;void 0===s&&(s=".");var o=[e,t];r&&(o=o.concat(s?r.split(s):r)),e.indexOf(".")>-1&&(i=t,t=(o=e.split("."))[1]),this.addNamespaces(t),Ct(this.data,o,i),n.silent||this.emit("added",e,t,r,i)}},{key:"addResources",value:function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var n in r)"string"!=typeof r[n]&&"[object Array]"!==Object.prototype.toString.apply(r[n])||this.addResource(e,t,n,r[n],{silent:!0});i.silent||this.emit("added",e,t,r)}},{key:"addResourceBundle",value:function(e,t,r,i,n){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},o=[e,t];e.indexOf(".")>-1&&(i=r,r=t,t=(o=e.split("."))[1]),this.addNamespaces(t);var a=wt(this.data,o)||{};i?Et(a,r,n):a=It(It({},a),r),Ct(this.data,o,a),s.silent||this.emit("added",e,t,r)}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?It(It({},{}),this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"hasLanguageSomeTranslations",value:function(e){var t=this.getDataByLanguage(e);return!!(t&&Object.keys(t)||[]).find((function(e){return t[e]&&Object.keys(t[e]).length>0}))}},{key:"toJSON",value:function(){return this.data}}]),n}(_t),Bt={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,r,i,n){var s=this;return e.forEach((function(e){s.processors[e]&&(t=s.processors[e].process(t,r,i,n))})),t}};function Mt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Nt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Mt(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Mt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Ht={},Ft=function(e){at(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ct(t);if(r){var n=ct(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return lt(this,e)});function n(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return rt(this,n),t=i.call(this),Rt&&_t.call(st(t)),yt(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,st(t)),t.options=r,void 0===t.options.keySeparator&&(t.options.keySeparator="."),t.logger=gt.create("translator"),t}return nt(n,[{key:"changeLanguage",value:function(e){e&&(this.language=e)}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;var r=this.resolve(e,t);return r&&void 0!==r.res}},{key:"extractFromKey",value:function(e,t){var r=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===r&&(r=":");var i=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,n=t.ns||this.options.defaultNS||[],s=r&&e.indexOf(r)>-1,o=!(this.options.userDefinedKeySeparator||t.keySeparator||this.options.userDefinedNsSeparator||t.nsSeparator||function(e,t,r){t=t||"",r=r||"";var i=Lt.filter((function(e){return t.indexOf(e)<0&&r.indexOf(e)<0}));if(0===i.length)return!0;var n=new RegExp("(".concat(i.map((function(e){return"?"===e?"\\?":e})).join("|"),")")),s=!n.test(e);if(!s){var o=e.indexOf(r);o>0&&!n.test(e.substring(0,o))&&(s=!0)}return s}(e,r,i));if(s&&!o){var a=e.match(this.interpolator.nestingRegexp);if(a&&a.length>0)return{key:e,namespaces:n};var l=e.split(r);(r!==i||r===i&&this.options.ns.indexOf(l[0])>-1)&&(n=l.shift()),e=l.join(i)}return"string"==typeof n&&(n=[n]),{key:e,namespaces:n}}},{key:"translate",value:function(e,t,r){var i=this;if("object"!==tt(t)&&this.options.overloadTranslationOptionHandler&&(t=this.options.overloadTranslationOptionHandler(arguments)),t||(t={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);var s=void 0!==t.returnDetails?t.returnDetails:this.options.returnDetails,o=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,a=this.extractFromKey(e[e.length-1],t),l=a.key,c=a.namespaces,u=c[c.length-1],h=t.lng||this.language,d=t.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(h&&"cimode"===h.toLowerCase()){if(d){var f=t.nsSeparator||this.options.nsSeparator;return s?(p.res="".concat(u).concat(f).concat(l),p):"".concat(u).concat(f).concat(l)}return s?(p.res=l,p):l}var p=this.resolve(e,t),v=p&&p.res,g=p&&p.usedKey||l,_=p&&p.exactUsedKey||l,m=Object.prototype.toString.apply(v),b=["[object Number]","[object Function]","[object RegExp]"],y=void 0!==t.joinArrays?t.joinArrays:this.options.joinArrays,S=!this.i18nFormat||this.i18nFormat.handleAsObject,C="string"!=typeof v&&"boolean"!=typeof v&&"number"!=typeof v;if(S&&v&&C&&b.indexOf(m)<0&&("string"!=typeof y||"[object Array]"!==m)){if(!t.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");var w=this.options.returnedObjectHandler?this.options.returnedObjectHandler(g,v,Nt(Nt({},t),{},{ns:c})):"key '".concat(l," (").concat(this.language,")' returned an object instead of string.");return s?(p.res=w,p):w}if(o){var k="[object Array]"===m,E=k?[]:{},x=k?_:g;for(var A in v)if(Object.prototype.hasOwnProperty.call(v,A)){var T="".concat(x).concat(o).concat(A);E[A]=this.translate(T,Nt(Nt({},t),{joinArrays:!1,ns:c})),E[A]===T&&(E[A]=v[A])}v=E}}else if(S&&"string"==typeof y&&"[object Array]"===m)(v=v.join(y))&&(v=this.extendTranslation(v,e,t,r));else{var R=!1,L=!1,D=void 0!==t.count&&"string"!=typeof t.count,I=n.hasDefaultValue(t),P=D?this.pluralResolver.getSuffix(h,t.count,t):"",O=t["defaultValue".concat(P)]||t.defaultValue;!this.isValidLookup(v)&&I&&(R=!0,v=O),this.isValidLookup(v)||(L=!0,v=l);var B=t.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey,M=B&&L?void 0:v,N=I&&O!==v&&this.options.updateMissing;if(L||R||N){if(this.logger.log(N?"updateKey":"missingKey",h,u,l,N?O:v),o){var H=this.resolve(l,Nt(Nt({},t),{},{keySeparator:!1}));H&&H.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var F=[],j=this.languageUtils.getFallbackCodes(this.options.fallbackLng,t.lng||this.language);if("fallback"===this.options.saveMissingTo&&j&&j[0])for(var U=0;U<j.length;U++)F.push(j[U]);else"all"===this.options.saveMissingTo?F=this.languageUtils.toResolveHierarchy(t.lng||this.language):F.push(t.lng||this.language);var z=function(e,r,n){var s=I&&n!==v?n:M;i.options.missingKeyHandler?i.options.missingKeyHandler(e,u,r,s,N,t):i.backendConnector&&i.backendConnector.saveMissing&&i.backendConnector.saveMissing(e,u,r,s,N,t),i.emit("missingKey",e,u,r,v)};this.options.saveMissing&&(this.options.saveMissingPlurals&&D?F.forEach((function(e){i.pluralResolver.getSuffixes(e,t).forEach((function(r){z([e],l+r,t["defaultValue".concat(r)]||O)}))})):z(F,l,O))}v=this.extendTranslation(v,e,t,p,r),L&&v===l&&this.options.appendNamespaceToMissingKey&&(v="".concat(u,":").concat(l)),(L||R)&&this.options.parseMissingKeyHandler&&(v="v1"!==this.options.compatibilityAPI?this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?"".concat(u,":").concat(l):l,R?v:void 0):this.options.parseMissingKeyHandler(v))}return s?(p.res=v,p):v}},{key:"extendTranslation",value:function(e,t,r,i,n){var s=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,Nt(Nt({},this.options.interpolation.defaultVariables),r),i.usedLng,i.usedNS,i.usedKey,{resolved:i});else if(!r.skipInterpolation){r.interpolation&&this.interpolator.init(Nt(Nt({},r),{interpolation:Nt(Nt({},this.options.interpolation),r.interpolation)}));var o,a="string"==typeof e&&(r&&r.interpolation&&void 0!==r.interpolation.skipOnVariables?r.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);if(a){var l=e.match(this.interpolator.nestingRegexp);o=l&&l.length}var c=r.replace&&"string"!=typeof r.replace?r.replace:r;if(this.options.interpolation.defaultVariables&&(c=Nt(Nt({},this.options.interpolation.defaultVariables),c)),e=this.interpolator.interpolate(e,c,r.lng||this.language,r),a){var u=e.match(this.interpolator.nestingRegexp);o<(u&&u.length)&&(r.nest=!1)}!1!==r.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,i=new Array(e),o=0;o<e;o++)i[o]=arguments[o];return n&&n[0]===i[0]&&!r.context?(s.logger.warn("It seems you are nesting recursively key: ".concat(i[0]," in key: ").concat(t[0])),null):s.translate.apply(s,i.concat([t]))}),r)),r.interpolation&&this.interpolator.reset()}var h=r.postProcess||this.options.postProcess,d="string"==typeof h?[h]:h;return null!=e&&d&&d.length&&!1!==r.applyPostProcessor&&(e=Bt.handle(d,e,t,this.options&&this.options.postProcessPassResolved?Nt({i18nResolved:i},r):r,this)),e}},{key:"resolve",value:function(e){var t,r,i,n,s,o=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((function(e){if(!o.isValidLookup(t)){var l=o.extractFromKey(e,a),c=l.key;r=c;var u=l.namespaces;o.options.fallbackNS&&(u=u.concat(o.options.fallbackNS));var h=void 0!==a.count&&"string"!=typeof a.count,d=h&&!a.ordinal&&0===a.count&&o.pluralResolver.shouldUseIntlApi(),f=void 0!==a.context&&("string"==typeof a.context||"number"==typeof a.context)&&""!==a.context,p=a.lngs?a.lngs:o.languageUtils.toResolveHierarchy(a.lng||o.language,a.fallbackLng);u.forEach((function(e){o.isValidLookup(t)||(s=e,!Ht["".concat(p[0],"-").concat(e)]&&o.utils&&o.utils.hasLoadedNamespace&&!o.utils.hasLoadedNamespace(s)&&(Ht["".concat(p[0],"-").concat(e)]=!0,o.logger.warn('key "'.concat(r,'" for languages "').concat(p.join(", "),'" won\'t get resolved as namespace "').concat(s,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),p.forEach((function(r){if(!o.isValidLookup(t)){n=r;var s,l=[c];if(o.i18nFormat&&o.i18nFormat.addLookupKeys)o.i18nFormat.addLookupKeys(l,c,r,e,a);else{var u;h&&(u=o.pluralResolver.getSuffix(r,a.count,a));var p="".concat(o.options.pluralSeparator,"zero");if(h&&(l.push(c+u),d&&l.push(c+p)),f){var v="".concat(c).concat(o.options.contextSeparator).concat(a.context);l.push(v),h&&(l.push(v+u),d&&l.push(v+p))}}for(;s=l.pop();)o.isValidLookup(t)||(i=s,t=o.getResource(r,e,s,a))}})))}))}})),{res:t,usedKey:r,exactUsedKey:i,usedLng:n,usedNS:s}}},{key:"isValidLookup",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,r,i):this.resourceStore.getResource(e,t,r,i)}}],[{key:"hasDefaultValue",value:function(e){var t="defaultValue";for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&t===r.substring(0,t.length)&&void 0!==e[r])return!0;return!1}}]),n}(_t);function jt(e){return e.charAt(0).toUpperCase()+e.slice(1)}var Ut=function(){function e(t){rt(this,e),this.options=t,this.supportedLngs=this.options.supportedLngs||!1,this.logger=gt.create("languageUtils")}return nt(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],r=e.split("-");return this.options.lowerCaseLng?r=r.map((function(e){return e.toLowerCase()})):2===r.length?(r[0]=r[0].toLowerCase(),r[1]=r[1].toUpperCase(),t.indexOf(r[1].toLowerCase())>-1&&(r[1]=jt(r[1].toLowerCase()))):3===r.length&&(r[0]=r[0].toLowerCase(),2===r[1].length&&(r[1]=r[1].toUpperCase()),"sgn"!==r[0]&&2===r[2].length&&(r[2]=r[2].toUpperCase()),t.indexOf(r[1].toLowerCase())>-1&&(r[1]=jt(r[1].toLowerCase())),t.indexOf(r[2].toLowerCase())>-1&&(r[2]=jt(r[2].toLowerCase()))),r.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isSupportedCode",value:function(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,r=this;return e?(e.forEach((function(e){if(!t){var i=r.formatLanguageCode(e);r.options.supportedLngs&&!r.isSupportedCode(i)||(t=i)}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var i=r.getLanguagePartFromCode(e);if(r.isSupportedCode(i))return t=i;t=r.options.supportedLngs.find((function(e){if(0===e.indexOf(i))return e}))}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var r=e[t];return r||(r=e[this.getScriptPartFromCode(t)]),r||(r=e[this.formatLanguageCode(t)]),r||(r=e[this.getLanguagePartFromCode(t)]),r||(r=e.default),r||[]}},{key:"toResolveHierarchy",value:function(e,t){var r=this,i=this.getFallbackCodes(t||this.options.fallbackLng||[],e),n=[],s=function(e){e&&(r.isSupportedCode(e)?n.push(e):r.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))};return"string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&s(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&s(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&s(this.getLanguagePartFromCode(e))):"string"==typeof e&&s(this.formatLanguageCode(e)),i.forEach((function(e){n.indexOf(e)<0&&s(r.formatLanguageCode(e))})),n}}]),e}(),zt=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],Wt={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}},Kt=["v1","v2","v3"],$t={zero:0,one:1,two:2,few:3,many:4,other:5};function Vt(){var e={};return zt.forEach((function(t){t.lngs.forEach((function(r){e[r]={numbers:t.nr,plurals:Wt[t.fc]}}))})),e}var qt=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};rt(this,e),this.languageUtils=t,this.options=r,this.logger=gt.create("pluralResolver"),this.options.compatibilityJSON&&"v4"!==this.options.compatibilityJSON||"undefined"!=typeof Intl&&Intl.PluralRules||(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=Vt()}return nt(e,[{key:"addRule",value:function(e,t){this.rules[e]=t}},{key:"getRule",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(e,{type:t.ordinal?"ordinal":"cardinal"})}catch(e){return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=this.getRule(e,t);return this.shouldUseIntlApi()?r&&r.resolvedOptions().pluralCategories.length>1:r&&r.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,r).map((function(e){return"".concat(t).concat(e)}))}},{key:"getSuffixes",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=this.getRule(e,r);return i?this.shouldUseIntlApi()?i.resolvedOptions().pluralCategories.sort((function(e,t){return $t[e]-$t[t]})).map((function(e){return"".concat(t.options.prepend).concat(e)})):i.numbers.map((function(i){return t.getSuffix(e,i,r)})):[]}},{key:"getSuffix",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=this.getRule(e,r);return i?this.shouldUseIntlApi()?"".concat(this.options.prepend).concat(i.select(t)):this.getSuffixRetroCompatible(i,t):(this.logger.warn("no plural rule found for: ".concat(e)),"")}},{key:"getSuffixRetroCompatible",value:function(e,t){var r=this,i=e.noAbs?e.plurals(t):e.plurals(Math.abs(t)),n=e.numbers[i];this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]&&(2===n?n="plural":1===n&&(n=""));var s=function(){return r.options.prepend&&n.toString()?r.options.prepend+n.toString():n.toString()};return"v1"===this.options.compatibilityJSON?1===n?"":"number"==typeof n?"_plural_".concat(n.toString()):s():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]?s():this.options.prepend&&i.toString()?this.options.prepend+i.toString():i.toString()}},{key:"shouldUseIntlApi",value:function(){return!Kt.includes(this.options.compatibilityJSON)}}]),e}();function Zt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Gt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Zt(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Zt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Xt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};rt(this,e),this.logger=gt.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return nt(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:Tt,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?xt(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?xt(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?xt(t.nestingPrefix):t.nestingPrefixEscaped||xt("$t("),this.nestingSuffix=t.nestingSuffix?xt(t.nestingSuffix):t.nestingSuffixEscaped||xt(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var r="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(r,"g")}},{key:"interpolate",value:function(e,t,r,i){var n,s,o,a=this,l=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function c(e){return e.replace(/\$/g,"$$$$")}var u=function(e){if(e.indexOf(a.formatSeparator)<0){var n=kt(t,l,e);return a.alwaysFormat?a.format(n,void 0,r,Gt(Gt(Gt({},i),t),{},{interpolationkey:e})):n}var s=e.split(a.formatSeparator),o=s.shift().trim(),c=s.join(a.formatSeparator).trim();return a.format(kt(t,l,o),c,r,Gt(Gt(Gt({},i),t),{},{interpolationkey:o}))};this.resetRegExp();var h=i&&i.missingInterpolationHandler||this.options.missingInterpolationHandler,d=i&&i.interpolation&&void 0!==i.interpolation.skipOnVariables?i.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:function(e){return c(e)}},{regex:this.regexp,safeValue:function(e){return a.escapeValue?c(a.escape(e)):c(e)}}].forEach((function(t){for(o=0;n=t.regex.exec(e);){var r=n[1].trim();if(void 0===(s=u(r)))if("function"==typeof h){var l=h(e,n,i);s="string"==typeof l?l:""}else if(i&&i.hasOwnProperty(r))s="";else{if(d){s=n[0];continue}a.logger.warn("missed to pass in variable ".concat(r," for interpolating ").concat(e)),s=""}else"string"==typeof s||a.useRawValueToEscape||(s=bt(s));var c=t.safeValue(s);if(e=e.replace(n[0],c),d?(t.regex.lastIndex+=s.length,t.regex.lastIndex-=n[0].length):t.regex.lastIndex=0,++o>=a.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var r,i,n=this,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=Gt({},s);function a(e,t){var r=this.nestingOptionsSeparator;if(e.indexOf(r)<0)return e;var i=e.split(new RegExp("".concat(r,"[ ]*{"))),n="{".concat(i[1]);e=i[0];var s=(n=this.interpolate(n,o)).match(/'/g),a=n.match(/"/g);(s&&s.length%2==0&&!a||a.length%2!=0)&&(n=n.replace(/'/g,'"'));try{o=JSON.parse(n),t&&(o=Gt(Gt({},t),o))}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(r).concat(n)}return delete o.defaultValue,e}for(o.applyPostProcessor=!1,delete o.defaultValue;r=this.nestingRegexp.exec(e);){var l=[],c=!1;if(-1!==r[0].indexOf(this.formatSeparator)&&!/{.*}/.test(r[1])){var u=r[1].split(this.formatSeparator).map((function(e){return e.trim()}));r[1]=u.shift(),l=u,c=!0}if((i=t(a.call(this,r[1].trim(),o),o))&&r[0]===e&&"string"!=typeof i)return i;"string"!=typeof i&&(i=bt(i)),i||(this.logger.warn("missed to resolve ".concat(r[1]," for nesting ").concat(e)),i=""),c&&(i=l.reduce((function(e,t){return n.format(e,t,s.lng,Gt(Gt({},s),{},{interpolationkey:r[1].trim()}))}),i.trim())),e=e.replace(r[0],i),this.regexp.lastIndex=0}return e}}]),e}();function Yt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Jt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Yt(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Yt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Qt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};rt(this,e),this.logger=gt.create("formatter"),this.options=t,this.formats={number:function(e,t,r){return new Intl.NumberFormat(t,r).format(e)},currency:function(e,t,r){return new Intl.NumberFormat(t,Jt(Jt({},r),{},{style:"currency"})).format(e)},datetime:function(e,t,r){return new Intl.DateTimeFormat(t,Jt({},r)).format(e)},relativetime:function(e,t,r){return new Intl.RelativeTimeFormat(t,Jt({},r)).format(e,r.range||"day")},list:function(e,t,r){return new Intl.ListFormat(t,Jt({},r)).format(e)}},this.init(t)}return nt(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},r=t.interpolation;this.formatSeparator=r.formatSeparator?r.formatSeparator:r.formatSeparator||","}},{key:"add",value:function(e,t){this.formats[e.toLowerCase().trim()]=t}},{key:"format",value:function(e,t,r,i){var n=this;return t.split(this.formatSeparator).reduce((function(e,t){var s=function(e){var t=e.toLowerCase().trim(),r={};if(e.indexOf("(")>-1){var i=e.split("(");t=i[0].toLowerCase().trim();var n=i[1].substring(0,i[1].length-1);"currency"===t&&n.indexOf(":")<0?r.currency||(r.currency=n.trim()):"relativetime"===t&&n.indexOf(":")<0?r.range||(r.range=n.trim()):n.split(";").forEach((function(e){if(e){var t=function(e){return function(e){if(Array.isArray(e))return e}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return ht(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ht(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.split(":")),i=t[0],n=t.slice(1).join(":").trim().replace(/^'+|'+$/g,"");r[i.trim()]||(r[i.trim()]=n),"false"===n&&(r[i.trim()]=!1),"true"===n&&(r[i.trim()]=!0),isNaN(n)||(r[i.trim()]=parseInt(n,10))}}))}return{formatName:t,formatOptions:r}}(t),o=s.formatName,a=s.formatOptions;if(n.formats[o]){var l=e;try{var c=i&&i.formatParams&&i.formatParams[i.interpolationkey]||{},u=c.locale||c.lng||i.locale||i.lng||r;l=n.formats[o](e,u,Jt(Jt(Jt({},a),i),c))}catch(e){n.logger.warn(e)}return l}return n.logger.warn("there was no format function for ".concat(o)),e}),e)}}]),e}();function er(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function tr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?er(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):er(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var rr=function(e){at(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ct(t);if(r){var n=ct(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return lt(this,e)});function n(e,t,r){var s,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return rt(this,n),s=i.call(this),Rt&&_t.call(st(s)),s.backend=e,s.store=t,s.services=r,s.languageUtils=r.languageUtils,s.options=o,s.logger=gt.create("backendConnector"),s.waitingReads=[],s.maxParallelReads=o.maxParallelReads||10,s.readingCalls=0,s.maxRetries=o.maxRetries>=0?o.maxRetries:5,s.retryTimeout=o.retryTimeout>=1?o.retryTimeout:350,s.state={},s.queue=[],s.backend&&s.backend.init&&s.backend.init(r,o.backend,o),s}return nt(n,[{key:"queueLoad",value:function(e,t,r,i){var n=this,s={},o={},a={},l={};return e.forEach((function(e){var i=!0;t.forEach((function(t){var a="".concat(e,"|").concat(t);!r.reload&&n.store.hasResourceBundle(e,t)?n.state[a]=2:n.state[a]<0||(1===n.state[a]?void 0===o[a]&&(o[a]=!0):(n.state[a]=1,i=!1,void 0===o[a]&&(o[a]=!0),void 0===s[a]&&(s[a]=!0),void 0===l[t]&&(l[t]=!0)))})),i||(a[e]=!0)})),(Object.keys(s).length||Object.keys(o).length)&&this.queue.push({pending:o,pendingCount:Object.keys(o).length,loaded:{},errors:[],callback:i}),{toLoad:Object.keys(s),pending:Object.keys(o),toLoadLanguages:Object.keys(a),toLoadNamespaces:Object.keys(l)}}},{key:"loaded",value:function(e,t,r){var i=e.split("|"),n=i[0],s=i[1];t&&this.emit("failedLoading",n,s,t),r&&this.store.addResourceBundle(n,s,r),this.state[e]=t?-1:2;var o={};this.queue.forEach((function(r){!function(e,t,r,i){var n=St(e,t,Object),s=n.obj,o=n.k;s[o]=s[o]||[],s[o].push(r)}(r.loaded,[n],s),function(e,t){void 0!==e.pending[t]&&(delete e.pending[t],e.pendingCount--)}(r,e),t&&r.errors.push(t),0!==r.pendingCount||r.done||(Object.keys(r.loaded).forEach((function(e){o[e]||(o[e]={});var t=r.loaded[e];t.length&&t.forEach((function(t){void 0===o[e][t]&&(o[e][t]=!0)}))})),r.done=!0,r.errors.length?r.callback(r.errors):r.callback())})),this.emit("loaded",o),this.queue=this.queue.filter((function(e){return!e.done}))}},{key:"read",value:function(e,t,r){var i=this,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.retryTimeout,o=arguments.length>5?arguments[5]:void 0;return e.length?this.readingCalls>=this.maxParallelReads?void this.waitingReads.push({lng:e,ns:t,fcName:r,tried:n,wait:s,callback:o}):(this.readingCalls++,this.backend[r](e,t,(function(a,l){if(i.readingCalls--,i.waitingReads.length>0){var c=i.waitingReads.shift();i.read(c.lng,c.ns,c.fcName,c.tried,c.wait,c.callback)}a&&l&&n<i.maxRetries?setTimeout((function(){i.read.call(i,e,t,r,n+1,2*s,o)}),s):o(a,l)}))):o(null,{})}},{key:"prepareLoading",value:function(e,t){var r=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),n&&n();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var s=this.queueLoad(e,t,i,n);if(!s.toLoad.length)return s.pending.length||n(),null;s.toLoad.forEach((function(e){r.loadOne(e)}))}},{key:"load",value:function(e,t,r){this.prepareLoading(e,t,{},r)}},{key:"reload",value:function(e,t,r){this.prepareLoading(e,t,{reload:!0},r)}},{key:"loadOne",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=e.split("|"),n=i[0],s=i[1];this.read(n,s,"read",void 0,void 0,(function(i,o){i&&t.logger.warn("".concat(r,"loading namespace ").concat(s," for language ").concat(n," failed"),i),!i&&o&&t.logger.log("".concat(r,"loaded namespace ").concat(s," for language ").concat(n),o),t.loaded(e,i,o)}))}},{key:"saveMissing",value:function(e,t,r,i,n){var s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key "'.concat(r,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"):null!=r&&""!==r&&(this.backend&&this.backend.create&&this.backend.create(e,t,r,i,null,tr(tr({},s),{},{isUpdate:n})),e&&e[0]&&this.store.addResource(e[0],t,r,i))}}]),n}(_t);function ir(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===tt(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===tt(e[2])||"object"===tt(e[3])){var r=e[3]||e[2];Object.keys(r).forEach((function(e){t[e]=r[e]}))}return t},interpolation:{escapeValue:!0,format:function(e,t,r,i){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function nr(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function sr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function or(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?sr(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):sr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function ar(){}function lr(e){Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(t){"function"==typeof e[t]&&(e[t]=e[t].bind(e))}))}var cr=function(e){at(n,e);var t,r,i=(t=n,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,i=ct(t);if(r){var n=ct(this).constructor;e=Reflect.construct(i,arguments,n)}else e=i.apply(this,arguments);return lt(this,e)});function n(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if(rt(this,n),e=i.call(this),Rt&&_t.call(st(e)),e.options=nr(t),e.services={},e.logger=gt,e.modules={external:[]},lr(st(e)),r&&!e.isInitialized&&!t.isClone){if(!e.options.initImmediate)return e.init(t,r),lt(e,st(e));setTimeout((function(){e.init(t,r)}),0)}return e}return nt(n,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;"function"==typeof t&&(r=t,t={}),!t.defaultNS&&!1!==t.defaultNS&&t.ns&&("string"==typeof t.ns?t.defaultNS=t.ns:t.ns.indexOf("translation")<0&&(t.defaultNS=t.ns[0]));var i=ir();function n(e){return e?"function"==typeof e?new e:e:null}if(this.options=or(or(or({},i),this.options),nr(t)),"v1"!==this.options.compatibilityAPI&&(this.options.interpolation=or(or({},i.interpolation),this.options.interpolation)),void 0!==t.keySeparator&&(this.options.userDefinedKeySeparator=t.keySeparator),void 0!==t.nsSeparator&&(this.options.userDefinedNsSeparator=t.nsSeparator),!this.options.isClone){var s;this.modules.logger?gt.init(n(this.modules.logger),this.options):gt.init(null,this.options),this.modules.formatter?s=this.modules.formatter:"undefined"!=typeof Intl&&(s=Qt);var o=new Ut(this.options);this.store=new Ot(this.options.resources,this.options);var a=this.services;a.logger=gt,a.resourceStore=this.store,a.languageUtils=o,a.pluralResolver=new qt(o,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!s||this.options.interpolation.format&&this.options.interpolation.format!==i.interpolation.format||(a.formatter=n(s),a.formatter.init(a,this.options),this.options.interpolation.format=a.formatter.format.bind(a.formatter)),a.interpolator=new Xt(this.options),a.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},a.backendConnector=new rr(n(this.modules.backend),a.resourceStore,a,this.options),a.backendConnector.on("*",(function(t){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];e.emit.apply(e,[t].concat(i))})),this.modules.languageDetector&&(a.languageDetector=n(this.modules.languageDetector),a.languageDetector.init(a,this.options.detection,this.options)),this.modules.i18nFormat&&(a.i18nFormat=n(this.modules.i18nFormat),a.i18nFormat.init&&a.i18nFormat.init(this)),this.translator=new Ft(this.services,this.options),this.translator.on("*",(function(t){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];e.emit.apply(e,[t].concat(i))})),this.modules.external.forEach((function(t){t.init&&t.init(e)}))}if(this.format=this.options.interpolation.format,r||(r=ar),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var l=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);l.length>0&&"dev"!==l[0]&&(this.options.lng=l[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");var c=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];c.forEach((function(t){e[t]=function(){var r;return(r=e.store)[t].apply(r,arguments)}}));var u=["addResource","addResources","addResourceBundle","removeResourceBundle"];u.forEach((function(t){e[t]=function(){var r;return(r=e.store)[t].apply(r,arguments),e}}));var h=mt(),d=function(){var t=function(t,i){e.isInitialized&&!e.initializedStoreOnce&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),h.resolve(i),r(t,i)};if(e.languages&&"v1"!==e.options.compatibilityAPI&&!e.isInitialized)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t)};return this.options.resources||!this.options.initImmediate?d():setTimeout(d,0),h}},{key:"loadResources",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ar,i=r,n="string"==typeof e?e:this.language;if("function"==typeof e&&(i=e),!this.options.resources||this.options.partialBundledLanguages){if(n&&"cimode"===n.toLowerCase())return i();var s=[],o=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){s.indexOf(e)<0&&s.push(e)}))};if(n)o(n);else{var a=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);a.forEach((function(e){return o(e)}))}this.options.preload&&this.options.preload.forEach((function(e){return o(e)})),this.services.backendConnector.load(s,this.options.ns,(function(e){e||t.resolvedLanguage||!t.language||t.setResolvedLanguage(t.language),i(e)}))}else i(null)}},{key:"reloadResources",value:function(e,t,r){var i=mt();return e||(e=this.languages),t||(t=this.options.ns),r||(r=ar),this.services.backendConnector.reload(e,t,(function(e){i.resolve(),r(e)})),i}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&Bt.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"setResolvedLanguage",value:function(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(var t=0;t<this.languages.length;t++){var r=this.languages[t];if(!(["cimode","dev"].indexOf(r)>-1)&&this.store.hasLanguageSomeTranslations(r)){this.resolvedLanguage=r;break}}}},{key:"changeLanguage",value:function(e,t){var r=this;this.isLanguageChangingTo=e;var i=mt();this.emit("languageChanging",e);var n=function(e){r.language=e,r.languages=r.services.languageUtils.toResolveHierarchy(e),r.resolvedLanguage=void 0,r.setResolvedLanguage(e)},s=function(s){e||s||!r.services.languageDetector||(s=[]);var o="string"==typeof s?s:r.services.languageUtils.getBestMatchFromCodes(s);o&&(r.language||n(o),r.translator.language||r.translator.changeLanguage(o),r.services.languageDetector&&r.services.languageDetector.cacheUserLanguage(o)),r.loadResources(o,(function(e){!function(e,s){s?(n(s),r.translator.changeLanguage(s),r.isLanguageChangingTo=void 0,r.emit("languageChanged",s),r.logger.log("languageChanged",s)):r.isLanguageChangingTo=void 0,i.resolve((function(){return r.t.apply(r,arguments)})),t&&t(e,(function(){return r.t.apply(r,arguments)}))}(e,o)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(s):s(e):s(this.services.languageDetector.detect()),i}},{key:"getFixedT",value:function(e,t,r){var i=this,n=function e(t,n){var s;if("object"!==tt(n)){for(var o=arguments.length,a=new Array(o>2?o-2:0),l=2;l<o;l++)a[l-2]=arguments[l];s=i.options.overloadTranslationOptionHandler([t,n].concat(a))}else s=or({},n);s.lng=s.lng||e.lng,s.lngs=s.lngs||e.lngs,s.ns=s.ns||e.ns,s.keyPrefix=s.keyPrefix||r||e.keyPrefix;var c=i.options.keySeparator||".",u=s.keyPrefix?"".concat(s.keyPrefix).concat(c).concat(t):t;return i.t(u,s)};return"string"==typeof e?n.lng=e:n.lngs=e,n.ns=t,n.keyPrefix=r,n}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e}},{key:"hasLoadedNamespace",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var i=this.resolvedLanguage||this.languages[0],n=!!this.options&&this.options.fallbackLng,s=this.languages[this.languages.length-1];if("cimode"===i.toLowerCase())return!0;var o=function(e,r){var i=t.services.backendConnector.state["".concat(e,"|").concat(r)];return-1===i||2===i};if(r.precheck){var a=r.precheck(this,o);if(void 0!==a)return a}return!(!this.hasResourceBundle(i,e)&&this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages)&&(!o(i,e)||n&&!o(s,e)))}},{key:"loadNamespaces",value:function(e,t){var r=this,i=mt();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){r.options.ns.indexOf(e)<0&&r.options.ns.push(e)})),this.loadResources((function(e){i.resolve(),t&&t(e)})),i):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var r=mt();"string"==typeof e&&(e=[e]);var i=this.options.preload||[],n=e.filter((function(e){return i.indexOf(e)<0}));return n.length?(this.options.preload=i.concat(n),this.loadResources((function(e){r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){return e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),e?["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr":"rtl"}},{key:"cloneInstance",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ar,i=or(or(or({},this.options),t),{isClone:!0}),s=new n(i);void 0===t.debug&&void 0===t.prefix||(s.logger=s.logger.clone(t));var o=["store","services","language"];return o.forEach((function(t){s[t]=e[t]})),s.services=or({},this.services),s.services.utils={hasLoadedNamespace:s.hasLoadedNamespace.bind(s)},s.translator=new Ft(s.services,s.options),s.translator.on("*",(function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];s.emit.apply(s,[e].concat(r))})),s.init(i,r),s.translator.options=s.options,s.translator.backendConnector.services.utils={hasLoadedNamespace:s.hasLoadedNamespace.bind(s)},s}},{key:"toJSON",value:function(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}]),n}(_t);ut(cr,"createInstance",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;return new cr(e,t)}));var ur=cr.createInstance();ur.createInstance=cr.createInstance,ur.createInstance,ur.init,ur.loadResources,ur.reloadResources,ur.use,ur.changeLanguage,ur.getFixedT,ur.t,ur.exists,ur.setDefaultNamespace,ur.hasLoadedNamespace,ur.loadNamespaces,ur.loadLanguages;const hr=ur;var dr=[],fr=dr.forEach,pr=dr.slice;function vr(e){return fr.call(pr.call(arguments,1),(function(t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r])})),e}var gr=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,_r=function(e,t,r){var i=r||{};i.path=i.path||"/";var n=encodeURIComponent(t),s="".concat(e,"=").concat(n);if(i.maxAge>0){var o=i.maxAge-0;if(Number.isNaN(o))throw new Error("maxAge should be a Number");s+="; Max-Age=".concat(Math.floor(o))}if(i.domain){if(!gr.test(i.domain))throw new TypeError("option domain is invalid");s+="; Domain=".concat(i.domain)}if(i.path){if(!gr.test(i.path))throw new TypeError("option path is invalid");s+="; Path=".concat(i.path)}if(i.expires){if("function"!=typeof i.expires.toUTCString)throw new TypeError("option expires is invalid");s+="; Expires=".concat(i.expires.toUTCString())}if(i.httpOnly&&(s+="; HttpOnly"),i.secure&&(s+="; Secure"),i.sameSite)switch("string"==typeof i.sameSite?i.sameSite.toLowerCase():i.sameSite){case!0:s+="; SameSite=Strict";break;case"lax":s+="; SameSite=Lax";break;case"strict":s+="; SameSite=Strict";break;case"none":s+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return s},mr={name:"cookie",lookup:function(e){var t;if(e.lookupCookie&&"undefined"!=typeof document){var r=function(e){for(var t="".concat(e,"="),r=document.cookie.split(";"),i=0;i<r.length;i++){for(var n=r[i];" "===n.charAt(0);)n=n.substring(1,n.length);if(0===n.indexOf(t))return n.substring(t.length,n.length)}return null}(e.lookupCookie);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupCookie&&"undefined"!=typeof document&&function(e,t,r,i){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};r&&(n.expires=new Date,n.expires.setTime(n.expires.getTime()+60*r*1e3)),i&&(n.domain=i),document.cookie=_r(e,encodeURIComponent(t),n)}(t.lookupCookie,e,t.cookieMinutes,t.cookieDomain,t.cookieOptions)}},br={name:"querystring",lookup:function(e){var t;if("undefined"!=typeof window){var r=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(r=window.location.hash.substring(window.location.hash.indexOf("?")));for(var i=r.substring(1).split("&"),n=0;n<i.length;n++){var s=i[n].indexOf("=");s>0&&i[n].substring(0,s)===e.lookupQuerystring&&(t=i[n].substring(s+1))}}return t}},yr=null,Sr=function(){if(null!==yr)return yr;try{yr="undefined"!==window&&null!==window.localStorage;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(e){yr=!1}return yr},Cr={name:"localStorage",lookup:function(e){var t;if(e.lookupLocalStorage&&Sr()){var r=window.localStorage.getItem(e.lookupLocalStorage);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupLocalStorage&&Sr()&&window.localStorage.setItem(t.lookupLocalStorage,e)}},wr=null,kr=function(){if(null!==wr)return wr;try{wr="undefined"!==window&&null!==window.sessionStorage;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(e){wr=!1}return wr},Er={name:"sessionStorage",lookup:function(e){var t;if(e.lookupSessionStorage&&kr()){var r=window.sessionStorage.getItem(e.lookupSessionStorage);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupSessionStorage&&kr()&&window.sessionStorage.setItem(t.lookupSessionStorage,e)}},xr={name:"navigator",lookup:function(e){var t=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var r=0;r<navigator.languages.length;r++)t.push(navigator.languages[r]);navigator.userLanguage&&t.push(navigator.userLanguage),navigator.language&&t.push(navigator.language)}return t.length>0?t:void 0}},Ar={name:"htmlTag",lookup:function(e){var t,r=e.htmlTag||("undefined"!=typeof document?document.documentElement:null);return r&&"function"==typeof r.getAttribute&&(t=r.getAttribute("lang")),t}},Tr={name:"path",lookup:function(e){var t;if("undefined"!=typeof window){var r=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(r instanceof Array)if("number"==typeof e.lookupFromPathIndex){if("string"!=typeof r[e.lookupFromPathIndex])return;t=r[e.lookupFromPathIndex].replace("/","")}else t=r[0].replace("/","")}return t}},Rr={name:"subdomain",lookup:function(e){var t="number"==typeof e.lookupFromSubdomainIndex?e.lookupFromSubdomainIndex+1:1,r="undefined"!=typeof window&&window.location&&window.location.hostname&&window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);if(r)return r[t]}},Lr=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};rt(this,e),this.type="languageDetector",this.detectors={},this.init(t,r)}return nt(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e,this.options=vr(t,this.options||{},{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"]}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=r,this.addDetector(mr),this.addDetector(br),this.addDetector(Cr),this.addDetector(Er),this.addDetector(xr),this.addDetector(Ar),this.addDetector(Tr),this.addDetector(Rr)}},{key:"addDetector",value:function(e){this.detectors[e.name]=e}},{key:"detect",value:function(e){var t=this;e||(e=this.options.order);var r=[];return e.forEach((function(e){if(t.detectors[e]){var i=t.detectors[e].lookup(t.options);i&&"string"==typeof i&&(i=[i]),i&&(r=r.concat(i))}})),this.services.languageUtils.getBestMatchFromCodes?r:r.length>0?r[0]:null}},{key:"cacheUserLanguage",value:function(e,t){var r=this;t||(t=this.options.caches),t&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||t.forEach((function(t){r.detectors[t]&&r.detectors[t].cacheUserLanguage(e,r.options)})))}}]),e}();Lr.type="languageDetector";var Dr=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230);/g,Ir={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"©","&#169;":"©","&reg;":"®","&#174;":"®","&hellip;":"…","&#8230;":"…"},Pr=function(e){return Ir[e]};function Or(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Br(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Or(Object(r),!0).forEach((function(t){ut(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Or(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Mr={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:function(e){return e.replace(Dr,Pr)}};(0,e.createContext)(),nt((function e(){rt(this,e),this.usedNamespaces={}}),[{key:"addUsedNamespaces",value:function(e){var t=this;e.forEach((function(e){t.usedNamespaces[e]||(t.usedNamespaces[e]=!0)}))}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]);var Nr={type:"3rdParty",init:function(e){!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Mr=Br(Br({},Mr),e)}(e.options.react)}};const Hr={en:{translations:JSON.parse('{"amtFeatures":{"enabled":"enabled","disabled":"disabled","messageTypes":{"success":"success","warning":"warning","error":"error"},"features":{"kvm":"KVM","sol":"SOL"},"messages":{"kvmNotEnabledAndNotPoweredUp":"Power on remote computer and check the KVM enable to connect to KVM","notPoweredUp":"Remote computer is not powered on.","kvmNotEnabled":"Check the KVM enable to connect to KVM","failedKvmFetch":"Unable to fetch KVM features","failedKvmFetchAndNotPoweredUp":"Unable to fetch KVM features and device is not powered on","failedKvmFetchAndFailedPowerFetch":"Unable to fetch KVM features and device power status","kvmNotEnabledAndFailedPowerFetch":"Check the KVM enable to connect to KVM and failed to fetch power status","failedPowerFetch":"Failed to fetch the power status","solNotEnabledAndNotPoweredUp":"Power on remote computer and check the SOL enable to connect to SOL","solNotEnabled":"Check the SOL enable to connect to SOL","failedSolFetch":"Unable to fetch SOL features","failedSolFetchAndNotPoweredUp":"Unable to fetch SOL features and device is not powered on","failedSolFetchAndFailedPowerFetch":"Unable to fetch SOL features and device power status","solNotEnabledAndFailedPowerFetch":"Check the SOL enable to connect to SOL and failed to fetch power status","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"Logout","profile":"Profile"},"pageNotFound":{"title":"404 - Page not found","message":"Oops, we weren\'t able to find the page you requested."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"Login","userName":"username","password":"password","signIn":"Sign In","cancel":"Cancel"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"devices":{"grid":{"Name":"Name","uuids":"UUID","connected":"Connected","deviceName":"Device name","deviceType":"Device type","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"Status","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"}},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"Initiator","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"dashboard":{"header":"AMT Device Management","deviceDetails":"Device details","count":"Count","totalDevices":"Total Devices","connectedDevices":"Connected","disconnectedDevices":"Disconnected"},"cira":{"new":"New","delete":"Delete","edit":"Edit","close":"Close","newCIRAConfig":"New CIRA Configuration","editCIRAConfig":"Edit CIRA Configuration","configName":"Config Name","addressFormat":"MPS Server Address Format","ipv4":"IPV4","ipv6":"IPV6","fqdn":"FQDN","mpsServerAddress":"MPS Server Address","port":"Port","userName":"User Name","password":"Password","commonName":"Cert. Hostname(CN)","mpsRootCetificate":"MPS Root Certificate","create":"Create","save":"Save","mpsRootCertFormat":"Mps root certificate format","autoLoad":"Auto load","manual":"Manual","load":"Load","mpsLoaded":"MPS root certificate successfully loaded","errors":{"commonNameValidation":"Cert. Hostname(CN) is required field and contains letters,numbers and ._- characters.","passwordValidation":"Password is required field should contains atleast one lowercase letter, one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","userNameValidation":"User name is required field and contains letters, numbers and special characters.","portValidation":"Port is required and should be a numeric value between 1024 and 49151","ipv4AddressValidation":"Please enter valid IPV4 Address.","ipv6AddressValidation":"Please enter valid IPV6 Address.","fqdnAddressValidation":"Please enter valid FQDN Address.","configNameValidation":"Config name is required field and contains letters, numbers and special characters.","loadMpsError":"Load the mps root certificate","mpsCertFetchError":"Failed to fetch the certificate from the server. Please try to enter the certificate manually by switching the Mps root certificate format option.","mpsServerMismatchError":"MPS server address does not match with base URL of the application. Please try to enter the certificate manually by switching the Mps root certificate format option."},"grid":{"configName":"Config Name","mpsServer":"MPS server","port":"Port","username":"Username","password":"Password","commonName":"Cert. Hostname(CN)","rootCert":"MPS root Certificate"}},"domain":{"delete":"Delete","new":"New","edit":"Edit","close":"Close","newDomain":"Create Domain","editDomain":"Edit domain details","grid":{"name":"Name","domainSuffix":"Domain Suffix","provisioningCert":"Provisioning Certificate","provisioningCertStorageFormat":"Provisioning Certificate Storage Format","provisioningCertPassword":"Provisioning Certificate Password"},"name":"Name","domainSuffix":"Domain Suffix","provisioningCertStorageFormat":"Provisioning Cert Storage Format","provisioningCert":"Provisioning Cert","provisioningCertPassword":"Provisioning Cert Password","create":"Create","file":"File","browse":"Browse","browseNew":"Browse new file","save":"Save","namePlaceHolder":"Enter domain name","domainSuffixPlaceHolder":"Enter Domain suffix","provisioningCertTextAreaPlaceHolder":"Enter provisioning Cert ","provisioningCertPasswordPlaceHolder":"Enter password","provisioningCertTextPlaceHolder":"Enter file path","text":"Text","certExists":"If you would like to add a new Provisioning certificate browse and select.","error":{"nameValidation":"Name is a required field and contains letters, numbers and special characters.","domainSuffixValidation":"Domain suffix is a required field","provisioningCertStorageFormatValidation":"Provisioning Cert Storage Format is a required field","provisioningCertValidation":"Provisioning cert is a required field","provisioningCertPasswordValidation":"Provisioning Cert Password is required field should contains atleast one lowercase letter,  one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","invalidFileType":"Invalid provisioning certificate type"}},"network":{"new":"New","newNetwork":"New Network configuration","editNetwork":"Edit Network configuration","create":"Create","delete":"Delete","edit":"Edit","save":"Save","grid":{"name":"Name","dhcpEnabled":"DHCP Enabled"},"networkName":"Network Name","dhcpEnabled":"DHCP Enabled","errors":{"networkNameValidation":"Network name is a required field and contains letters, numbers and special characters."}}}')},te:{translations:JSON.parse('{"amtFeatures":{"enabled":"ఎనేబుల్","disabled":"వికలాంగ","messageTypes":{"success":"విజయం","warning":"హెచ్చరిక","error":"లోపం"},"features":{"kvm":"KVM","sol":"సోల్"},"messages":{"kvmNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు KVM ని ప్రారంభించండి","notPoweredUp":"రిమోట్ కంప్యూటర్ ఆన్ చేయబడదు.","kvmNotEnabled":"KVM ప్రారంభించబడలేదు","solNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు SOL ని ప్రారంభించండి","solNotEnabled":"SOL ప్రారంభించబడలేదు","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"లాగౌట్","profile":"ప్రొఫైల్"},"pageNotFound":{"title":"404 - పేజి దొరకలేదు","message":"అయ్యో, మీరు అభ్యర్థించిన పేజీని మేము కనుగొనలేకపోయాము."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"ప్రవేశించండి","userName":"యూజర్పేరు","password":"పాస్వర్డ్","signIn":"సైన్ ఇన్ చేయండి","cancel":"రద్దు చేయండి"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"పేరు","uuids":"UUID లను","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"స్థితి","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},fr:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"Nom","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"statut","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},es:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"nombre","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"estado","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')}};hr.use(Nr).use(Lr).init({resources:Hr,ns:["translations"],defaultNS:"translations",debug:!1,fallbackLng:"en",interpolation:{escapeValue:!1,formatSeparator:","}}).catch((()=>console.info("error occured"))),hr.changeLanguage(navigator.language).catch((()=>console.info("error occured")));const Fr=new URL(window.location.href),jr=new URLSearchParams(Fr.search);(0,t.render)(e.createElement(et,{deviceId:jr.get("deviceId"),authToken:"authToken",mpsServer:jr.get("mpsServer")}),document.getElementById("sol"))})(),__webpack_exports__})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,