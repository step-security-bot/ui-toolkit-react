/*! For license information please see sol.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["ui-toolkit"]=t():e["ui-toolkit"]=t()}(self,(()=>(()=>{var __webpack_modules__={869:module=>{var e;self,e=()=>(()=>{var __webpack_modules__={487:e=>{var t={utf8:{stringToBytes:function(e){return t.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(t.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],r=0;r<e.length;r++)t.push(255&e.charCodeAt(r));return t},bytesToString:function(e){for(var t=[],r=0;r<e.length;r++)t.push(String.fromCharCode(e[r]));return t.join("")}}};e.exports=t},12:e=>{var t,r;t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&r.rotl(e,8)|4278255360&r.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=r.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],r=0,i=0;r<e.length;r++,i+=8)t[i>>>5]|=e[r]<<24-i%32;return t},wordsToBytes:function(e){for(var t=[],r=0;r<32*e.length;r+=8)t.push(e[r>>>5]>>>24-r%32&255);return t},bytesToHex:function(e){for(var t=[],r=0;r<e.length;r++)t.push((e[r]>>>4).toString(16)),t.push((15&e[r]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},bytesToBase64:function(e){for(var r=[],i=0;i<e.length;i+=3)for(var s=e[i]<<16|e[i+1]<<8|e[i+2],n=0;n<4;n++)8*i+6*n<=8*e.length?r.push(t.charAt(s>>>6*(3-n)&63)):r.push("=");return r.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var r=[],i=0,s=0;i<e.length;s=++i%4)0!=s&&r.push((t.indexOf(e.charAt(i-1))&Math.pow(2,-2*s+8)-1)<<2*s|t.indexOf(e.charAt(i))>>>6-2*s);return r}},e.exports=r},738:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},568:(e,t,r)=>{var i,s,n,o,a;i=r(12),s=r(487).utf8,n=r(738),o=r(487).bin,(a=function(e,t){e.constructor==String?e=t&&"binary"===t.encoding?o.stringToBytes(e):s.stringToBytes(e):n(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||e.constructor===Uint8Array||(e=e.toString());for(var r=i.bytesToWords(e),l=8*e.length,c=1732584193,h=-271733879,u=-1732584194,d=271733878,f=0;f<r.length;f++)r[f]=16711935&(r[f]<<8|r[f]>>>24)|4278255360&(r[f]<<24|r[f]>>>8);r[l>>>5]|=128<<l%32,r[14+(l+64>>>9<<4)]=l;var p=a._ff,v=a._gg,g=a._hh,_=a._ii;for(f=0;f<r.length;f+=16){var m=c,b=h,S=u,y=d;c=p(c,h,u,d,r[f+0],7,-680876936),d=p(d,c,h,u,r[f+1],12,-389564586),u=p(u,d,c,h,r[f+2],17,606105819),h=p(h,u,d,c,r[f+3],22,-1044525330),c=p(c,h,u,d,r[f+4],7,-176418897),d=p(d,c,h,u,r[f+5],12,1200080426),u=p(u,d,c,h,r[f+6],17,-1473231341),h=p(h,u,d,c,r[f+7],22,-45705983),c=p(c,h,u,d,r[f+8],7,1770035416),d=p(d,c,h,u,r[f+9],12,-1958414417),u=p(u,d,c,h,r[f+10],17,-42063),h=p(h,u,d,c,r[f+11],22,-1990404162),c=p(c,h,u,d,r[f+12],7,1804603682),d=p(d,c,h,u,r[f+13],12,-40341101),u=p(u,d,c,h,r[f+14],17,-1502002290),c=v(c,h=p(h,u,d,c,r[f+15],22,1236535329),u,d,r[f+1],5,-165796510),d=v(d,c,h,u,r[f+6],9,-1069501632),u=v(u,d,c,h,r[f+11],14,643717713),h=v(h,u,d,c,r[f+0],20,-373897302),c=v(c,h,u,d,r[f+5],5,-701558691),d=v(d,c,h,u,r[f+10],9,38016083),u=v(u,d,c,h,r[f+15],14,-660478335),h=v(h,u,d,c,r[f+4],20,-405537848),c=v(c,h,u,d,r[f+9],5,568446438),d=v(d,c,h,u,r[f+14],9,-1019803690),u=v(u,d,c,h,r[f+3],14,-187363961),h=v(h,u,d,c,r[f+8],20,1163531501),c=v(c,h,u,d,r[f+13],5,-1444681467),d=v(d,c,h,u,r[f+2],9,-51403784),u=v(u,d,c,h,r[f+7],14,1735328473),c=g(c,h=v(h,u,d,c,r[f+12],20,-1926607734),u,d,r[f+5],4,-378558),d=g(d,c,h,u,r[f+8],11,-2022574463),u=g(u,d,c,h,r[f+11],16,1839030562),h=g(h,u,d,c,r[f+14],23,-35309556),c=g(c,h,u,d,r[f+1],4,-1530992060),d=g(d,c,h,u,r[f+4],11,1272893353),u=g(u,d,c,h,r[f+7],16,-155497632),h=g(h,u,d,c,r[f+10],23,-1094730640),c=g(c,h,u,d,r[f+13],4,681279174),d=g(d,c,h,u,r[f+0],11,-358537222),u=g(u,d,c,h,r[f+3],16,-722521979),h=g(h,u,d,c,r[f+6],23,76029189),c=g(c,h,u,d,r[f+9],4,-640364487),d=g(d,c,h,u,r[f+12],11,-421815835),u=g(u,d,c,h,r[f+15],16,530742520),c=_(c,h=g(h,u,d,c,r[f+2],23,-995338651),u,d,r[f+0],6,-198630844),d=_(d,c,h,u,r[f+7],10,1126891415),u=_(u,d,c,h,r[f+14],15,-1416354905),h=_(h,u,d,c,r[f+5],21,-57434055),c=_(c,h,u,d,r[f+12],6,1700485571),d=_(d,c,h,u,r[f+3],10,-1894986606),u=_(u,d,c,h,r[f+10],15,-1051523),h=_(h,u,d,c,r[f+1],21,-2054922799),c=_(c,h,u,d,r[f+8],6,1873313359),d=_(d,c,h,u,r[f+15],10,-30611744),u=_(u,d,c,h,r[f+6],15,-1560198380),h=_(h,u,d,c,r[f+13],21,1309151649),c=_(c,h,u,d,r[f+4],6,-145523070),d=_(d,c,h,u,r[f+11],10,-1120210379),u=_(u,d,c,h,r[f+2],15,718787259),h=_(h,u,d,c,r[f+9],21,-343485551),c=c+m>>>0,h=h+b>>>0,u=u+S>>>0,d=d+y>>>0}return i.endian([c,h,u,d])})._ff=function(e,t,r,i,s,n,o){var a=e+(t&r|~t&i)+(s>>>0)+o;return(a<<n|a>>>32-n)+t},a._gg=function(e,t,r,i,s,n,o){var a=e+(t&i|r&~i)+(s>>>0)+o;return(a<<n|a>>>32-n)+t},a._hh=function(e,t,r,i,s,n,o){var a=e+(t^r^i)+(s>>>0)+o;return(a<<n|a>>>32-n)+t},a._ii=function(e,t,r,i,s,n,o){var a=e+(r^(t|~i))+(s>>>0)+o;return(a<<n|a>>>32-n)+t},a._blocksize=16,a._digestsize=16,e.exports=function(e,t){if(null==e)throw new Error("Illegal argument "+e);var r=i.wordsToBytes(a(e,t));return t&&t.asBytes?r:t&&t.asString?o.bytesToString(r):i.bytesToHex(r)}},166:(e,t,r)=>{"use strict";r.d(t,{r:()=>l});var i=r(46),s=r(565),n=r(611),o=r(305),a=r.n(o);class l extends i.H{constructor(e,t){super(),this.protocol=2,this.inflate=a().inflateInit(15),this.bpp=1,this.state=0,this.focusMode=0,this.useZRLE=!0,this.frameRateDelay=2,this.canvasCtx=t,this.sparecache={},this.buttonmask=0,this.canvasControl=this.canvasCtx.canvas,this.lastMouseMoveTime=(new Date).getTime(),this.logger=e,this.setDeskFocus=(e,t)=>{},this.getDeskFocus=e=>{}}processData(e){this.onProcessData(e)}onStateChange(e){this.logger.verbose(`state change in AMTDesktop: ${e}`),0===e&&(this.canvasCtx.fillStyle="#FFFFFF",this.canvasCtx.fillRect(0,0,this.canvasCtx.canvas.width,this.canvasCtx.canvas.width))}start(){this.logger.verbose("Starting desktop here"),this.state=0,this.inflate.inflateReset(),this.onKvmDataPending=[],this.onKvmDataAck=-1,this.kvmDataSupported=!1;for(const e in this.sparecache)delete this.sparecache[e]}onSendKvmData(e){!0!==this.onKvmDataAck?this.onKvmDataPending.push(e):((0,n.f)(this.urlvars)&&(0,n.f)(this.urlvars.kvmdatatrace)&&console.log(`KVM-Send (${e.length}) data`),e="\0KvmDataChannel\0"+e,this.onSend(String.fromCharCode(6,0,0,0)+s.r.IntToStr(e.length)+e),this.onKvmDataAck=!1)}}},59:(e,t,r)=>{"use strict";r.d(t,{N:()=>s});var i=r(503);class s extends i.K{constructor(e,t,r,i,s,n,o,a,l,c,h){super(e,t,r,i,s,n,o,a,l,c,h)}}},503:(e,t,r)=>{"use strict";r.d(t,{K:()=>l,b:()=>i});var i,s=r(565),n=r(568),o=r.n(n),a=r(611);!function(e){e[e.SOL=1]="SOL",e[e.KVM=2]="KVM",e[e.IDER=3]="IDER"}(i||(i={}));class l{constructor(e,t,r,i,s,n,o,a,l,c,h){this.fileReader=r,this.fileReaderInUse=!1,this.fileReaderAcc=[],this.randomNonceChars="abcdef0123456789",this.host=i,this.port=s,this.user=n,this.pass=o,this.tls=a,this.tlsv1only=l,this.protocol=t,this.RedirectStartSol=String.fromCharCode(16,0,0,0,83,79,76,32),this.RedirectStartKvm=String.fromCharCode(16,1,0,0,75,86,77,82),this.RedirectStartIder=String.fromCharCode(16,0,0,0,73,68,69,82),this.urlvars={},this.server=h,this.amtAccumulator="",this.authUri="",this.logger=e,this.authToken=c}getWsLocation(){return this.isBrowser()&&!(0,a.f)(this.server)?`${window.location.protocol.replace("http","ws")}//\n      ${window.location.host}\n      ${window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/"))}\n      /webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`:`${String(this.server)}/webrelay.ashx?p=2&host=${this.host}&port=${this.port}&tls=${this.tls}${"*"===this.user?"&serverauth=1":""}${void 0===this.pass?"&serverauth=1&user="+this.user:""}&tls1only=${this.tlsv1only}`}isBrowser(){try{const e="undefined"!=typeof window;return e&&this.logger.debug("!!!!!BROWSER!!!!!"),e}catch(e){return!1}}start(e){this.connectState=0,this.socket=new e(this.getWsLocation(),this.authToken),this.socket.onopen=this.onSocketConnected.bind(this),this.socket.onmessage=this.onMessage.bind(this),this.socket.onclose=this.onSocketClosed.bind(this),(0,a.f)(this.fileReader)&&(0,a.f)(this.fileReader.readAsBinaryString)?this.fileReader.onload=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsBinaryString(new Blob([this.fileReaderAcc.shift()]))}).bind(this):(0,a.f)(this.fileReader)&&(0,a.f)(this.fileReader.readAsArrayBuffer)&&(this.fileReader.onloadend=(e=>{this.onSocketData(e.target.result),0===this.fileReaderAcc.length?this.fileReaderInUse=!1:this.fileReader.readAsArrayBuffer(this.fileReaderAcc.shift())}).bind(this)),this.logger.verbose("Connecting to websocket"),this.onStateChange(1)}onSocketConnected(){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&console.log("REDIR-CONNECT"),this.onStateChange(2),this.logger.verbose(`Connected to websocket server. With protocol ${this.protocol} (2 = KVM)`),this.logger.info(`Start Redirect Session for protocol. ${this.protocol}`),this.protocol===i.SOL&&this.socketSend(this.RedirectStartSol),this.protocol===i.KVM&&this.socketSend(this.RedirectStartKvm),this.protocol===i.IDER&&this.socketSend(this.RedirectStartIder)}onMessage(e){try{if(this.inDataCount++,"object"==typeof e.data){if(this.fileReaderInUse)return void this.fileReaderAcc.push(e.data);if(null!=this.fileReader.readAsBinaryString)this.fileReaderInUse=!0,this.fileReader.readAsBinaryString(new Blob([e.data]));else if(null!=this.fileReader.readAsArrayBuffer)this.fileReaderInUse=!0,this.fileReader.readAsArrayBuffer(e.data);else{let t="";const r=new Uint8Array(e.data),i=r.byteLength;for(let e=0;e<i;e++)t+=String.fromCharCode(r[e]);this.onSocketData(t)}}else this.onSocketData(e.data)}catch(e){this.logger.error(e),this.stop(),this.onError()}}onSocketData(e){if((0,a.f)(e)&&-1!==this.connectState){if("object"==typeof e){let t="";const r=new Uint8Array(e),i=r.byteLength;for(let e=0;e<i;e++)t+=String.fromCharCode(r[e]);e=t}else if("string"!=typeof e)return;if(this.protocol!==i.KVM&&this.protocol!==i.IDER||1!==this.connectState)for(this.amtAccumulator+=e;this.amtAccumulator.length>=1;){let e=0;switch(this.amtAccumulator.charCodeAt(0)){case 17:if(this.logger.verbose(`Start Redirection Session reply received for  ${this.protocol}`),this.amtAccumulator.length<4)return;switch(this.amtAccumulator.charCodeAt(1)){case 0:{if(this.logger.verbose("Session status success. Start handshake"),this.amtAccumulator.length<13)return;const t=this.amtAccumulator.charCodeAt(12);if(this.amtAccumulator.length<13+t)return;this.logger.verbose("Query for available authentication"),this.socketSend(String.fromCharCode(19,0,0,0,0,0,0,0,0)),e=13+t;break}default:this.stop()}break;case 20:{if(this.logger.verbose("Available Authentications reply received."),this.amtAccumulator.length<9)return;const t=s.r.ReadIntX(this.amtAccumulator,5);if(this.amtAccumulator.length<9+t)return;const r=this.amtAccumulator.charCodeAt(1),i=this.amtAccumulator.charCodeAt(4),n=[];for(let e=0;e<t;e++)n.push(this.amtAccumulator.charCodeAt(9+e));const o=this.amtAccumulator.substring(9,9+t);if(e=9+t,0===i)(0,a.f)(n.includes(4))?(this.logger.verbose("Good Digest Auth (With cnonce and all)"),this.socketSend(String.fromCharCode(19,0,0,0,4)+s.r.IntToStrX(this.user.length+this.authUri.length+8)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0,0))):(0,a.f)(n.includes(3))?(this.logger.warn("Bad Digest Auth"),this.socketSend(String.fromCharCode(19,0,0,0,3)+s.r.IntToStrX(this.user.length+this.authUri.length+7)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(0,0)+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(0,0,0))):(0,a.f)(n.includes(1))?(this.logger.verbose("Basic Auth"),this.socketSend(String.fromCharCode(19,0,0,0,1)+s.r.IntToStrX(this.user.length+this.pass.length+2)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(this.pass.length)+this.pass)):(this.logger.error("Auth Type not recognized. Stopping."),this.stop());else if(3!==i&&4!==i||1!==r)if(0===r){if(1===this.protocol){const e=1e4,t=100,r=0,i=1e4,n=100,o=0;this.socketSend(String.fromCharCode(32,0,0,0)+s.r.IntToStrX(this.amtSequence++)+s.r.ShortToStrX(e)+s.r.ShortToStrX(t)+s.r.ShortToStrX(r)+s.r.ShortToStrX(i)+s.r.ShortToStrX(n)+s.r.ShortToStrX(o)+s.r.IntToStrX(0))}2===this.protocol&&this.socketSend(String.fromCharCode(64,0,0,0,0,0,0,0)),3===this.protocol&&(this.connectState=1,this.onStateChange(3))}else this.stop();else{let e=0;const t=o.charCodeAt(e),r=o.substring(e+1,e+1+t);e+=t+1;const n=o.charCodeAt(e),a=o.substring(e+1,e+1+n);e+=n+1;let l=0,c=null;const h=this.generateRandomNonce(32),u="00000002";let d="";4===i&&(l=o.charCodeAt(e),c=o.substring(e+1,e+1+l),e+=l+1,d=`${u}:${h}:${String(c)} :`);const f=this.hex_md5(this.hex_md5(this.user+":"+r+":"+this.pass)+":"+a+":"+d+this.hex_md5("POST:"+this.authUri));let p=this.user.length+r.length+a.length+this.authUri.length+h.length+u.length+f.length+7;4===i&&(p+=parseInt(c.length)+1);let v=String.fromCharCode(19,0,0,0,i)+s.r.IntToStrX(p)+String.fromCharCode(this.user.length)+this.user+String.fromCharCode(r.length)+r+String.fromCharCode(a.length)+a+String.fromCharCode(this.authUri.length)+this.authUri+String.fromCharCode(h.length)+h+String.fromCharCode(u.length)+u+String.fromCharCode(f.length)+f;4===i&&(v=String(v)+(String.fromCharCode(c.length)+String(c))),this.socketSend(v)}break}case 33:if(this.amtAccumulator.length<23)break;this.logger.verbose("Response to settings"),e=23,this.socketSend(String.fromCharCode(39,0,0,0)+s.r.IntToStrX(this.amtSequence++)+String.fromCharCode(0,0,27,0,0,0)),1===this.protocol&&(this.amtKeepAliveTimer=setInterval(this.sendAmtKeepAlive.bind(this),2e3)),this.connectState=1,this.onStateChange(3);break;case 41:if(this.amtAccumulator.length<10)break;this.logger.verbose("Serial Settings"),e=10;break;case 42:{if(this.amtAccumulator.length<10)break;this.logger.verbose("Incoming display data");const t=10+((255&this.amtAccumulator.charCodeAt(9))<<8)+(255&this.amtAccumulator.charCodeAt(8));if(this.amtAccumulator.length<t)break;this.onProcessData(this.amtAccumulator.substring(10,t)),e=t;break}case 43:if(this.amtAccumulator.length<8)break;this.logger.verbose("Keep Alve message"),e=8;break;case 65:if(this.amtAccumulator.length<8)break;this.logger.verbose("KVM traffic. Call onStart handler. And forward rest of acc directly."),this.connectState=1,this.onStart(),this.amtAccumulator.length>8&&this.onProcessData(this.amtAccumulator.substring(8)),e=this.amtAccumulator.length;break;default:return this.logger.error(`Unknown Intel AMT command:  ${this.amtAccumulator.charCodeAt(0)}  acclen=${this.amtAccumulator.length}`),void this.stop()}if(0===e)return;this.amtAccumulator=this.amtAccumulator.substring(e)}else this.onProcessData(e)}}hex_md5(e){return this.logger.verbose("MD5 the string"),o()(e)}socketSend(e){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&this.logger.verbose(`REDIR-SEND(${e.length}): ${s.r.rstr2hex(e)}`);try{if(null!=this.socket&&1===this.socket.readyState){const t=new Uint8Array(e.length);this.logger.verbose(`Redir Send( ${e.length}): ${s.r.rstr2hex(e)}`);for(let r=0;r<e.length;++r)t[r]=e.charCodeAt(r);this.socket.send(t.buffer)}}catch(e){this.logger.error(`Socket send error: ${String(e)}`)}}send(e){this.logger.verbose("Send called "+e),null!=this.socket&&1===this.connectState&&(this.protocol===i.SOL?this.socketSend(String.fromCharCode(40,0,0,0)+s.r.IntToStrX(this.amtSequence++)+s.r.ShortToStrX(e.length)+e):this.socketSend(e))}sendAmtKeepAlive(){null!=this.socket&&this.socketSend(String.fromCharCode(43,0,0,0)+s.r.IntToStrX(this.amtSequence++))}generateRandomNonce(e){let t="";for(let r=0;r<e;r++)t+=this.randomNonceChars.charAt(Math.floor(Math.random()*this.randomNonceChars.length));return t}onSocketClosed(e){(0,a.f)(this.urlvars)&&(0,a.f)(this.urlvars.redirtrace)&&console.log("REDIR-CLOSED"),this.logger.warn("Redir Socket Closed"),this.stop()}onStateChange(e){console.info("onstatechange",e),this.state!==e&&(this.state=e,this.onNewState(this.state),null!=this.onStateChanged&&this.onStateChanged(this,this.state))}stop(){this.logger.warn("Stop called on Redirector. Change state to 0 and close Socket."),this.onStateChange(0),this.connectState=-1,this.amtAccumulator="",null!=this.socket&&(this.socket.close(),this.socket=null),null!=this.amtKeepAliveTimer&&(clearInterval(this.amtKeepAliveTimer),this.amtKeepAliveTimer=null)}}},277:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});class i{constructor(){this.terminalEmulation=1,this.fxEmulation=0,this.fxLineBreak=0,this.AsciiToUnicode=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,171,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.AsciiToUnicodeIntel=[199,252,233,226,228,224,229,231,234,235,232,239,238,236,196,197,201,230,198,244,246,242,251,249,255,214,220,162,163,165,8359,402,225,237,243,250,241,209,170,218,191,8976,172,189,188,161,174,187,9619,9618,9617,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9576,9560,9554,9555,9579,9578,9496,9484,9608,9604,9611,9616,9600,945,223,915,960,931,963,181,964,966,952,8486,948,8734,248,949,8719,8801,177,8805,8806,8992,8993,247,8776,176,8226,183,8730,8319,178,8718,160],this.StateChange=e=>{},this.TermSendKeys=e=>{this.onSend(e)}}}},237:(e,t,r)=>{"use strict";r.d(t,{k:()=>s});var i=r(201);class s{constructor(e){this.minLevel=e}log(e,t){switch(e){case i.i.VERBOSE:this.verbose(t);break;case i.i.INFO:this.info(t);break;case i.i.DEBUG:this.debug(t);break;case i.i.WARNING:this.warn(t);break;case i.i.ERROR:this.error(t)}}debug(e){this.minLevel>=i.i.DEBUG&&console.debug(e)}info(e){this.minLevel>=i.i.INFO&&console.info(e)}error(e){this.minLevel>=i.i.ERROR&&console.error(e)}warn(e){this.minLevel>=i.i.WARNING&&console.warn(e)}verbose(e){this.minLevel>=i.i.VERBOSE&&console.log(e)}}},565:(e,t,r)=>{"use strict";r.d(t,{r:()=>s});var i=r(611);const s={ReadShort:(e,t)=>(e.charCodeAt(t)<<8)+e.charCodeAt(t+1),ReadShortX:(e,t)=>(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ReadInt:(e,t)=>16777216*e.charCodeAt(t)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadSInt:(e,t)=>(e.charCodeAt(t)<<24)+(e.charCodeAt(t+1)<<16)+(e.charCodeAt(t+2)<<8)+e.charCodeAt(t+3),ReadIntX:(e,t)=>16777216*e.charCodeAt(t+3)+(e.charCodeAt(t+2)<<16)+(e.charCodeAt(t+1)<<8)+e.charCodeAt(t),ShortToStr:e=>String.fromCharCode(e>>8&255,255&e),ShortToStrX:e=>String.fromCharCode(255&e,e>>8&255),IntToStr:e=>String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e),IntToStrX:e=>String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255),SplitArray:e=>e.split(","),Clone:e=>JSON.parse(JSON.stringify(e)),EscapeHtml:e=>"string"==typeof e?e.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"):"boolean"==typeof e||"number"==typeof e?e:void 0,ArrayElementMove(e,t,r){e.splice(r,0,e.splice(t,1)[0])},ObjectToStringEx(e,t){let r="";if(0!==e&&(!(0,i.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const i in e)r=r+"<br />"+String(this.gap(t))+"Item #"+String(i)+": "+String(this.ObjectToStringEx(e[i],t+1));else if(e instanceof Object)for(const i in e)r=r+"<br />"+String(this.gap(t))+String(i)+" = "+String(this.ObjectToStringEx(e[i],t+1));else r+=String(this.EscapeHtml(e));return r},ObjectToStringEx2(e,t){let r="";if(0!==e&&(!(0,i.f)(e)||null==e))return"(Null)";if(e instanceof Array)for(const i in e)r=r+"\r\n"+String(this.gap2(t))+"Item #"+String(i)+": "+String(this.ObjectToStringEx2(e[i],t+1));else if(e instanceof Object)for(const i in e)r=r+"\r\n"+String(this.gap2(t))+String(i)+" = "+String(this.ObjectToStringEx2(e[i],t+1));else r+=String(this.EscapeHtml(e));return r},gap(e){let t="";for(let r=0;r<4*e;r++)t+="&nbsp;";return t},gap2(e){let t="";for(let r=0;r<4*e;r++)t+=" ";return t},ObjectToString(e){return this.ObjectToStringEx(e,0)},ObjectToString2(e){return this.ObjectToStringEx2(e,0)},char2hex:e=>(e+256).toString(16).substr(-2).toUpperCase(),rstr2hex(e){let t,r="";for(t=0;t<e.length;t++)r+=String(this.char2hex(e.charCodeAt(t)));return r},encode_utf8:e=>unescape(encodeURIComponent(e)),decode_utf8:e=>decodeURIComponent(escape(e)),data2blob(e){const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return new Blob([new Uint8Array(t)])},random:e=>Math.floor(Math.random()*e),trademarks:e=>e.replace(/\(R\)/g,"&reg;").replace(/\(TM\)/g,"&trade;")}},46:(e,t,r)=>{"use strict";r.d(t,{H:()=>i});class i{processData(e){}onStateChange(e){}start(){}onSendKvmData(e){}}},784:(e,t,r)=>{"use strict";r.d(t,{$:()=>n});var i=r(989),s=r(611);class n{constructor(e,t,r){this.acc="",this.stateProcessorFac=new i.v(t,r,this.updateRFBState.bind(this)),this.parent=r,this.logger=e}processData(e){if(!(0,s.f)(e))return;this.acc+=e;let t=0;for(this.logger.verbose(`Process Data ACC length:  ${this.acc.length}`);this.acc.length>0;){const e=this.stateProcessorFac.getProcessor(this.parent.state),r=this.parent.state;if(t=e.processState(this.acc),this.logger.verbose(`State  ${r}  Processed. cmdSize returned ${t}`),0===t)return;this.acc=this.acc.substring(t),this.logger.verbose(`remaining acc  ${this.acc.length} command size: ${t} new parent state: ${this.parent.state}`)}}updateRFBState(e){this.parent.state=e}}},679:(e,t,r)=>{"use strict";r.d(t,{X:()=>s});var i=r(644);class s{constructor(e){this.parent=e}Decode(e,t,r,s,n,o,a,l){const c=e.charCodeAt(t++);let h,u,d;const f={};let p,v=0,g=0;if(0===c){for(this.parent.logger.verbose("Raw encoding"),p=0;p<a;p++)i.j.setPixel(this.parent,e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),p);i.j.putImage(this.parent,r,s)}else if(1===c){u=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),this.parent.canvasCtx.fillStyle="rgb("+(1===this.parent.bpp?`${224&u}, ${(28&u)<<3}, ${i.j.fixColor((3&u)<<6)}`:`${u>>8&248}, ${u>>3&252},${(31&u)<<3}`)+")",this.parent.logger.verbose("fillstyle: "+this.parent.canvasCtx.fillStyle);const a=i.j.rotX(this.parent,r,s);s=i.j.rotY(this.parent,r,s),r=a,this.parent.canvasCtx.fillRect(r,s,n,o)}else if(c>1&&c<17){this.parent.logger.verbose("Read the packed palette");let n=4,o=15;for(p=0;p<c;p++)f[p]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(2===c?(n=1,o=1):c<=4&&(n=2,o=3);v<a&&t<e.length;)for(u=e.charCodeAt(t++),p=8-n;p>=0;p-=n)i.j.setPixel(this.parent,f[u>>p&o],v++);i.j.putImage(this.parent,r,s)}else if(128===c){for(this.parent.logger.verbose("RLE encoded tile");v<a&&t<e.length;){u=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0),g=1;do{g+=d=e.charCodeAt(t++)}while(255===d);for(;--g>=0;)i.j.setPixel(this.parent,u,v++)}i.j.putImage(this.parent,r,s)}else if(c>129){for(this.parent.logger.verbose("Read the RLE palette"),p=0;p<c-128;p++)f[p]=e.charCodeAt(t++)+(2===this.parent.bpp?e.charCodeAt(t++)<<8:0);for(this.parent.logger.verbose("Decode RLE on palette");v<a&&t<e.length;){if(g=1,h=e.charCodeAt(t++),u=f[h%128],h>127)do{g+=d=e.charCodeAt(t++)}while(255===d);for(;--g>=0;)i.j.setPixel(this.parent,u,v++)}i.j.putImage(this.parent,r,s)}}}},646:(e,t,r)=>{"use strict";r.d(t,{$:()=>i.$,X:()=>s.X});var i=r(784),s=r(679)},663:(e,t,r)=>{"use strict";var i;r.d(t,{i:()=>i}),function(e){e[e.VERBOSE=5]="VERBOSE",e[e.INFO=4]="INFO",e[e.DEBUG=3]="DEBUG",e[e.WARNING=2]="WARNING",e[e.ERROR=1]="ERROR"}(i||(i={}))},201:(e,t,r)=>{"use strict";r.d(t,{i:()=>i.i});var i=r(663)},725:(e,t,r)=>{"use strict";r.d(t,{e:()=>n});var i=r(565),s=r(8);class n{constructor(e,t,r,i){this.wsSocket=e,this.parent=t,this.rleDecoder=r,this.updateRFBState=i}processState(e){let t=0;if(e.length>=12){const r=i.r.ReadShort(e,0),n=i.r.ReadShort(e,2),o=i.r.ReadShort(e,4),a=i.r.ReadShort(e,6),l=o*a,c=i.r.ReadInt(e,8);if(c<17){if(o<1||o>64||a<1||a>64)throw this.parent.logger.error(`Invalid tile size (${o},${a}), disconnecting.`),new Error("Invalid tile size");if(this.parent.sparew!==o||this.parent.spareh!==a){this.parent.sparew=this.parent.sparew2=o,this.parent.spareh=this.parent.spareh2=a,1!==this.parent.rotation&&3!==this.parent.rotation||(this.parent.sparew2=a,this.parent.spareh2=o);const e=`${this.parent.sparew2}x${this.parent.spareh2}`;this.parent.spare=this.parent.sparecache[e],(0,s.fQ)(this.parent.spare)||(this.parent.sparecache[e]=this.parent.spare=this.parent.canvasCtx.createImageData(this.parent.sparew2,this.parent.spareh2))}}if(4294967073===c)this.parent.logger.verbose("Desktop size"),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=o,this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=a,this.wsSocket.send(String.fromCharCode(3,0,0,0,0,0)+i.r.ShortToStr(this.parent.width)+i.r.ShortToStr(this.parent.height)),t=12,null!=this.parent.onScreenSizeChange&&this.parent.onScreenSizeChange(this.parent.ScreenWidth,this.parent.ScreenHeight);else if(0===c){let i=12;const o=12+l*this.parent.bpp;if(e.length<o)return 0;t=o;for(let t=0;t<l;t++)s.jw.setPixel(this.parent,e.charCodeAt(i++)+(2===this.parent.bpp?e.charCodeAt(i++)<<8:0),t);s.jw.putImage(this.parent,r,n)}else{if(16!==c)throw this.parent.logger.error(`Unknown Encoding: ${c} , HEX: ${i.r.rstr2hex(e)}`),new Error(`Unknown Encoding: ${c}`);{if(e.length<16)return 0;const s=i.r.ReadInt(e,12);if(e.length<16+s)return 0;const c=16,h=5,u=0;if(s>5&&0===e.charCodeAt(c)&&i.r.ReadShortX(e,c+1)===s-h)this.rleDecoder.Decode(e,c+5,r,n,o,a,l,s);else{const t=e.substring(c,c+s-u),i=this.parent.inflate.inflate(t);if(!(i.length>0))throw this.parent.logger.error("Invalid deflate data."),new Error("invalid deflate data");this.rleDecoder.Decode(i,0,r,n,o,a,l,i.length)}t=16+s}}if(100==--this.parent.state){this.parent.logger.debug("Frame completed. Update state and request new frame"),this.updateRFBState(4);const e=()=>{s.Xn.sendRefresh(this.parent,this.wsSocket)};0===this.parent.frameRateDelay?s.Xn.sendRefresh(this.parent,this.wsSocket):setTimeout(e,this.parent.frameRateDelay)}}return t}}},70:(e,t,r)=>{"use strict";r.d(t,{U:()=>s});var i=r(565);class s{constructor(e,t,r){this.wsSocket=e,this.serverCutTextHandler=t,this.updateRFBState=r}processState(e){let t=0,r=0;switch(e.charCodeAt(0)){case 0:if(e.length<4)return 0;this.updateRFBState(100+i.r.ReadShort(e,2)),t=4;break;case 2:t=1;break;case 3:if(e.length<8)return 0;if(r=i.r.ReadInt(e,4)+8,e.length<r)return 0;t=this.serverCutTextHandler.handleServerCutText(e)}return t}}},212:(e,t,r)=>{"use strict";r.d(t,{w:()=>i});class i{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=12?(t=12,this.updateRFBState(1),this.wsSocket.send("RFB 003.008\n"),t):0}}},26:(e,t,r)=>{"use strict";r.d(t,{l:()=>i});class i{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;return e.length>=1?(t=e.charCodeAt(0)+1,this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(2),t):0}}},724:(e,t,r)=>{"use strict";r.d(t,{m:()=>s});var i=r(565);class s{constructor(e,t){this.wsSocket=e,this.updateRFBState=t}processState(e){let t=0;if(e.length>=4){if(t=4,0!==i.r.ReadInt(e,0))throw new Error("Error. Stopping. Security response not None.");return this.wsSocket.send(String.fromCharCode(1)),this.updateRFBState(3),t}return 0}}},256:(e,t,r)=>{"use strict";r.d(t,{I:()=>n});var i=r(565),s=r(611);class n{constructor(e,t){this.wsSocket=e,this.parent=t}handleServerCutText(e){if(e.length<8)return 0;const t=i.r.ReadInt(e,4)+8;if(e.length<t)return 0;if(null!=this.parent.onKvmData){const r=e.substring(8,t);r.length>=16&&"\0KvmDataChannel"===r.substring(0,15)&&(this.parent.kvmDataSupported||(this.parent.kvmDataSupported=!0,console.log("KVM Data Channel Supported.")),(-1===this.parent.onKvmDataAck&&16===r.length||0!==r.charCodeAt(15))&&(this.parent.onKvmDataAck=!0),(0,s.f)(this.parent.urlvars)&&(0,s.f)(this.parent.urlvars.kvmdatatrace)&&console.log(`KVM-Recv((${r.length-16})):  ${r.substring(16)}`),r.length>16&&this.parent.onKvmData(r.substring(16)),!0===this.parent.onKvmDataAck&&this.parent.onKvmDataPending.length>0&&this.wsSocket.onSendKvmData(this.parent.onKvmDataPending.shift()))}return t}}},946:(e,t,r)=>{"use strict";r.d(t,{C:()=>n});var i=r(565),s=r(173);class n{constructor(e,t,r){this.wsSocket=e,this.parent=t,this.updateRFBState=r}processState(e){let t=0;if(e.length>=24){this.parent.rotation=0;const r=i.r.ReadInt(e,20);if(e.length<24+r)return 0;t=24+r,null!=this.parent.updateScreenDimensions&&this.parent.updateScreenDimensions(i.r.ReadShort(e,0),i.r.ReadShort(e,2)),this.parent.canvasCtx.canvas.width=this.parent.ScreenWidth=this.parent.rwidth=this.parent.width=i.r.ReadShort(e,0),this.parent.canvasCtx.canvas.height=this.parent.ScreenHeight=this.parent.rheight=this.parent.height=i.r.ReadShort(e,2);let n="";return this.parent.useZRLE&&(n+=i.r.IntToStr(16)),n+=i.r.IntToStr(0),n+=i.r.IntToStr(1092),this.parent.logger.verbose("Send supported encodings"),this.wsSocket.send(String.fromCharCode(2,0)+i.r.ShortToStr(n.length/4+1)+n+i.r.IntToStr(-223)),1===this.parent.bpp&&this.wsSocket.send(String.fromCharCode(0,0,0,0,8,8,0,1)+i.r.ShortToStr(7)+i.r.ShortToStr(7)+i.r.ShortToStr(3)+String.fromCharCode(5,2,0,0,0,0)),this.updateRFBState(4),this.parent.onStateChange(3),this.parent.logger.info("Start new frame."),s.X.sendRefresh(this.parent,this.wsSocket),this.parent.oldMouseX=-1,t}return 0}}},389:(e,t,r)=>{"use strict";r.d(t,{Cu:()=>l.C,Ut:()=>n.U,ez:()=>i.e,ll:()=>o.l,mC:()=>a.m,wW:()=>s.w});var i=r(725),s=r(212),n=r(70),o=r(26),a=r(724),l=r(946)},989:(e,t,r)=>{"use strict";r.d(t,{v:()=>o});var i=r(389),s=r(256),n=r(679);class o{constructor(e,t,r){this.stateProcessors={},this.stateProcessors[0]=new i.wW(e,r),this.stateProcessors[1]=new i.ll(e,r),this.stateProcessors[2]=new i.mC(e,r),this.stateProcessors[3]=new i.Cu(e,t,r);const o=new s.I(e,t);this.stateProcessors[4]=new i.Ut(e,o,r),this.stateProcessors["100plus"]=new i.ez(e,t,new n.X(t),r)}getProcessor(e){return e<=100?this.stateProcessors[e]:this.stateProcessors["100plus"]}}},155:(e,t,r)=>{"use strict";r.d(t,{Q:()=>i});class i{constructor(e){this.processData=e=>{null!=this.terminal.capture&&(this.terminal.capture=String(this.terminal.capture)+e);let t="";for(let r=0;r<e.length;r++){const i=e.charCodeAt(r);"J"===e[r]?this.clearTerminal():t+=0!=(128&i)?String.fromCharCode(this.terminal.AsciiToUnicode[127&i]):`${e[r]}`}this.processDataToXterm(t)},this.terminal=e}}},38:(e,t,r)=>{"use strict";r.d(t,{q:()=>n});var i=r(923),s=r(611);const n={convertAMTKeyCode:e=>(0,s.f)(e.code.startsWith("Key"))&&4===e.code.length?e.code.charCodeAt(3)+(!1===e.shiftKey?32:0):(0,s.f)(e.code.startsWith("Digit"))&&6===e.code.length?e.code.charCodeAt(5):(0,s.f)(e.code.startsWith("Numpad"))&&7===e.code.length?e.code.charCodeAt(6):i.Z[e.code]}},923:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});const i={Pause:19,CapsLock:20,Space:32,Quote:39,Minus:45,NumpadMultiply:42,NumpadAdd:43,PrintScreen:44,Comma:44,NumpadSubtract:45,NumpadDecimal:46,Period:46,Slash:47,NumpadDivide:47,Semicolon:59,Equal:61,OSLeft:91,BracketLeft:91,OSRight:91,Backslash:92,BracketRight:93,ContextMenu:93,Backquote:96,NumLock:144,ScrollLock:145,Backspace:65288,Tab:65289,Enter:65293,NumpadEnter:65293,Escape:65307,Delete:65535,Home:65360,PageUp:65365,PageDown:65366,ArrowLeft:65361,ArrowUp:65362,ArrowRight:65363,ArrowDown:65364,End:65367,Insert:65379,F1:65470,F2:65471,F3:65472,F4:65473,F5:65474,F6:65475,F7:65476,F8:65477,F9:65478,F10:65479,F11:65480,F12:65481,ShiftLeft:65505,ShiftRight:65506,ControlLeft:65507,ControlRight:65508,AltLeft:65513,AltRight:65514,MetaLeft:65511,MetaRight:65512}},173:(e,t,r)=>{"use strict";r.d(t,{X:()=>n});var i=r(565),s=r(611);const n={sendRefresh(e,t){if(!e.holding)if(e.focusMode>0){const r=2*e.focusMode;t.send(String.fromCharCode(3,1)+i.r.ShortToStr(Math.max(Math.min(e.oldMouseX,e.lastMouseX)-e.focusMode,0))+i.r.ShortToStr(Math.max(Math.min(e.oldMouseY,e.lastMouseY)-e.focusMode,0))+i.r.ShortToStr(r+Math.abs(e.oldMouseX-e.lastMouseX))+i.r.ShortToStr(r+Math.abs(e.oldMouseY-e.lastMouseY))),e.oldMouseX=e.lastMouseX,e.oldMouseY=e.lastMouseY}else t.send(String.fromCharCode(3,1,0,0,0,0)+i.r.ShortToStr(e.rwidth)+i.r.ShortToStr(e.rheight))},sendKey(e,t,r){if("object"==typeof t)for(const r in t)this.sendKey(e,t[r][0],t[r][1]);else e.send(String.fromCharCode(4,r,0,0)+i.r.IntToStr(t))},sendKvmData(e,t,r){!0!==e.onKvmDataAck?e.onKvmDataPending.push(r):((0,s.f)(e.urlvars)&&(0,s.f)(e.urlvars.kvmdatatrace)&&console.log(`KVM-Send(${String(r.length)}): ${String(r)}`),r="\0KvmDataChannel\0"+String(r),t.send(`${String.fromCharCode(6,0,0,0)}${i.r.IntToStr(r.length)}${String(r)}`),e.onKvmDataAck=!1)},sendKeepAlive(e,t){e.lastKeepAlive<Date.now()-5e3&&(e.lastKeepAlive=Date.now(),t.send(String.fromCharCode(6,0,0,0)+i.r.IntToStr(16)+"\0KvmDataChannel\0"))},sendCtrlAltDelMsg(e){this.sendCad(e)},sendCad(e){this.sendKey(e,65507,1),this.sendKey(e,65513,1),this.sendKey(e,65535,1),this.sendKey(e,65535,0),this.sendKey(e,65513,0),this.sendKey(e,65507,0)}}},644:(e,t,r)=>{"use strict";r.d(t,{j:()=>i});const i={putImage(e,t,r){if(e.holding)return;const s=i.arotX(e,t,r);r=i.arotY(e,t,r),t=s,e.canvasCtx.putImageData(e.spare,t,r)},setPixel(e,t,r){let s,n,o=4*r;e.rotation>0&&(1===e.rotation?(s=r%e.sparew,n=Math.floor(r/e.sparew),o=4*(r=s*e.sparew2+(e.sparew2-1-n))):2===e.rotation?o=e.sparew*e.spareh*4-4-o:3===e.rotation&&(s=r%e.sparew,n=Math.floor(r/e.sparew),o=4*(r=(e.sparew2-1-s)*e.sparew2+n))),1===e.bpp?(e.spare.data[o++]=224&t,e.spare.data[o++]=(28&t)<<3,e.spare.data[o++]=i.fixColor((3&t)<<6)):(e.spare.data[o++]=t>>8&248,e.spare.data[o++]=t>>3&252,e.spare.data[o++]=(31&t)<<3),e.spare.data[o]=255},arotX:(e,t,r)=>0===e.rotation?t:1===e.rotation?e.canvasCtx.canvas.width-e.sparew2-r:2===e.rotation?e.canvasCtx.canvas.width-e.sparew2-t:3===e.rotation?r:0,arotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?t:2===e.rotation?e.canvasCtx.canvas.height-e.spareh2-r:3===e.rotation?e.canvasCtx.canvas.height-e.spareh-t:0,crotX:(e,t,r)=>0===e.rotation?t:1===e.rotation?r:2===e.rotation?e.canvasCtx.canvas.width-t:3===e.rotation?e.canvasCtx.canvas.height-r:0,crotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?e.canvasCtx.canvas.width-t:2===e.rotation?e.canvasCtx.canvas.height-r:3===e.rotation?t:0,rotX:(e,t,r)=>0===e.rotation||1===e.rotation?t:2===e.rotation?t-e.canvasCtx.canvas.width:3===e.rotation?t-e.canvasCtx.canvas.height:0,rotY:(e,t,r)=>0===e.rotation?r:1===e.rotation?r-e.canvasCtx.canvas.width:2===e.rotation?r-e.canvasCtx.canvas.height:3===e.rotation?r:0,setRotation(e,t){for(;t<0;)t+=4;const r=t%4;if(e.holding)return e.rotation=r,!1;if(r===e.rotation)return!0;let s=e.canvasCtx.canvas.width,n=e.canvasCtx.canvas.height;1!==e.rotation&&3!==e.rotation||(s=e.canvasCtx.canvas.height,n=e.canvasCtx.canvas.width),null==e.tcanvas&&(e.tcanvas=document.createElement("canvas"));const o=e.tcanvas.getContext("2d");return o.setTransform(1,0,0,1,0,0),o.canvas.width=s,o.canvas.height=n,o.rotate(-90*e.rotation*Math.PI/180),0===e.rotation&&o.drawImage(e.canvasCtx.canvas,0,0),1===e.rotation&&o.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,0),2===e.rotation&&o.drawImage(e.canvasCtx.canvas,-e.canvasCtx.canvas.width,-e.canvasCtx.canvas.height),3===e.rotation&&o.drawImage(e.canvasCtx.canvas,0,-e.canvasCtx.canvas.height),0!==e.rotation&&2!==e.rotation||(e.canvasCtx.canvas.height=s,e.canvasCtx.canvas.width=n),1!==e.rotation&&3!==e.rotation||(e.canvasCtx.canvas.height=n,e.canvasCtx.canvas.width=s),e.canvasCtx.setTransform(1,0,0,1,0,0),e.canvasCtx.rotate(90*r*Math.PI/180),e.rotation=r,e.canvasCtx.drawImage(e.tcanvas,i.rotX(e,0,0),i.rotY(e,0,0)),e.width=e.canvasCtx.canvas.width,e.height=e.canvasCtx.canvas.height,null!=e.onScreenResize&&e.onScreenResize(e.width,e.height,e.canvasId),!0},fixColor:e=>e>127?e+32:e}},717:(e,t,r)=>{"use strict";r.d(t,{E:()=>a});var i,s=r(38),n=r(173),o=r(611);!function(e){e[e.Up=0]="Up",e[e.Down=1]="Down"}(i||(i={}));class a{constructor(e,t){this.Comms=t,this.parent=e}GrabKeyInput(){this.KeyInputGrab||(document.onkeyup=this.handleKeyUp.bind(this),document.onkeydown=this.handleKeyDown.bind(this),document.onkeypress=this.handleKeys.bind(this),this.KeyInputGrab=!0)}UnGrabKeyInput(){this.KeyInputGrab&&(document.onkeyup=null,document.onkeydown=null,document.onkeypress=null,this.KeyInputGrab=!1)}handleKeys(e){return this.haltEvent(e)}haltEvent(e){return(0,o.f)(e.preventDefault)&&e.preventDefault(),(0,o.f)(e.stopPropagation)&&e.stopPropagation(),!1}handleKeyUp(e){return this.handleKeyEvent(i.Up,e)}handleKeyDown(e){return this.handleKeyEvent(i.Down,e)}handleKeyEvent(e,t){let r=t;if((0,o.f)(r)||(r=window.event),(0,o.f)(r.code)){const t=s.q.convertAMTKeyCode(r);this.parent.logger.verbose(`Key ${e} : ${String(t)}`),null!=t&&n.X.sendKey(this.Comms,t,e)}else{let t=r.keyCode;173===t&&(t=189),61===t&&(t=187);let i=t;!1===r.shiftKey&&t>=65&&t<=90&&(i=t+32),t>=112&&t<=124&&(i=t+65358),8===t&&(i=65288),9===t&&(i=65289),13===t&&(i=65293),16===t&&(i=65505),17===t&&(i=65507),18===t&&(i=65513),27===t&&(i=65307),33===t&&(i=65365),34===t&&(i=65366),35===t&&(i=65367),36===t&&(i=65360),37===t&&(i=65361),38===t&&(i=65362),39===t&&(i=65363),40===t&&(i=65364),45===t&&(i=65379),46===t&&(i=65535),t>=96&&t<=105&&(i=t-48),106===t&&(i=42),107===t&&(i=43),109===t&&(i=45),110===t&&(i=46),111===t&&(i=47),186===t&&(i=59),187===t&&(i=61),188===t&&(i=44),189===t&&(i=45),190===t&&(i=46),191===t&&(i=47),192===t&&(i=96),219===t&&(i=91),220===t&&(i=92),221===t&&(i=93),222===t&&(i=39),this.parent.logger.verbose(`Key ${e}: ${t}  = ${i}`),n.X.sendKey(this.Comms,i,e)}return this.haltEvent(r)}}},33:(e,t,r)=>{"use strict";r.d(t,{x:()=>o});var i=r(565),s=r(644),n=r(611);class o{constructor(e,t,r){this.topposition=0,this.leftposition=0,this.parent=e,this.comm=t,this.debounceTime=r,this.mouseClickCompleted=!0,this.lastEvent=null}GrabMouseInput(){this.MouseInputGrab||(this.MouseInputGrab=!0)}UnGrabMouseInput(){if(!this.MouseInputGrab)return;const e=this.parent.canvasCtx.canvas;e.onmousemove=null,e.onmouseup=null,e.onmousedown=null,this.MouseInputGrab=!1}mousedown(e){return this.parent.buttonmask|=1<<e.button,this.mousemove(e)}mouseup(e){return this.parent.buttonmask&=65535-(1<<e.button),this.mousemove(e)}mousemove(e){if(4!==this.parent.state)return!0;const t=this.getPositionOfControl(this.parent.canvasControl),r=this.parent.canvasControl.getBoundingClientRect();(0===this.topposition||r.top>this.topposition)&&(this.topposition=r.top),(0===this.leftposition||r.left>this.leftposition)&&(this.leftposition=r.left);const o=this.topposition-r.top,a=this.leftposition-r.left;if(this.parent.lastMouseX=(e.pageX-t[0]+a)*(this.parent.canvasControl.height/this.parent.canvasControl.offsetHeight),this.parent.lastMouseY=(e.pageY-t[1]+o)*(this.parent.canvasControl.width/this.parent.canvasControl.offsetWidth),(0,n.f)(this.parent.noMouseRotate)||(this.parent.lastMouseX2=s.j.crotX(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseY=s.j.crotY(this.parent,this.parent.lastMouseX,this.parent.lastMouseY),this.parent.lastMouseX=this.parent.lastMouseX2),this.comm.send(String.fromCharCode(5,this.parent.buttonmask)+i.r.ShortToStr(this.parent.lastMouseX)+i.r.ShortToStr(this.parent.lastMouseY)),this.parent.setDeskFocus("DeskFocus",this.parent.focusMode),0!==this.parent.focusMode){const e=Math.min(this.parent.lastMouseX,this.parent.canvasControl.width-this.parent.focusMode),r=Math.min(this.parent.lastMouseY,this.parent.canvasControl.height-this.parent.focusMode),i=2*this.parent.focusMode,s=this.parent.canvasControl,n=s.offsetHeight/this.parent.canvasControl.height,o=s.offsetWidth/this.parent.canvasControl.width,a=this.parent.getDeskFocus("DeskFocus"),l=this.getPositionOfControl(this.parent.canvasControl.parentElement);a.left=`${Math.max((e-this.parent.focusMode)*n,0)+(t[0]-l[0])}px`,a.top=`${Math.max((r-this.parent.focusMode)*o,0)+(t[1]-l[1])}px`,a.width=i*n-6+"px",a.height=i*n-6+"px"}return this.haltEvent(e)}haltEvent(e){return(0,n.f)(e.preventDefault)&&e.preventDefault(),(0,n.f)(e.stopPropagation)&&e.stopPropagation(),!1}getPositionOfControl(e){const t=[0,0];let r=e;for(;null!=r;)t[0]=Number(t[0])+Number(r.offsetLeft),t[1]=Number(t[1])+Number(r.offsetTop),r=r.offsetParent;return t}}},611:(e,t,r)=>{"use strict";r.d(t,{f:()=>i});const i=e=>null!=e&&""!==e&&!1!==e&&0!==e},8:(e,t,r)=>{"use strict";r.d(t,{EB:()=>o.E,Xn:()=>s.X,fQ:()=>l.f,jw:()=>n.j,qD:()=>i.q,xx:()=>a.x});var i=r(38),s=r(173),n=r(644),o=r(717),a=r(33),l=r(611)},305:module=>{var ZLIB=ZLIB||{},BASE,NMAX;void 0===ZLIB.common_initialized&&(ZLIB.Z_NO_FLUSH=0,ZLIB.Z_PARTIAL_FLUSH=1,ZLIB.Z_SYNC_FLUSH=2,ZLIB.Z_FULL_FLUSH=3,ZLIB.Z_FINISH=4,ZLIB.Z_BLOCK=5,ZLIB.Z_TREES=6,ZLIB.Z_OK=0,ZLIB.Z_STREAM_END=1,ZLIB.Z_NEED_DICT=2,ZLIB.Z_ERRNO=-1,ZLIB.Z_STREAM_ERROR=-2,ZLIB.Z_DATA_ERROR=-3,ZLIB.Z_MEM_ERROR=-4,ZLIB.Z_BUF_ERROR=-5,ZLIB.Z_VERSION_ERROR=-6,ZLIB.Z_DEFLATED=8,ZLIB.z_stream=function(){this.next_in=0,this.avail_in=0,this.total_in=0,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=null,this.state=null,this.data_type=0,this.adler=0,this.input_data="",this.output_data="",this.error=0,this.checksum_function=null},ZLIB.gz_header=function(){this.text=0,this.time=0,this.xflags=0,this.os=255,this.extra=null,this.extra_len=0,this.extra_max=0,this.name=null,this.name_max=0,this.comment=null,this.comm_max=0,this.hcrc=0,this.done=0},ZLIB.common_initialized=!0),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-inflate.js"),function(){var DEF_WBITS=15,HEAD=0,FLAGS=1,TIME=2,OS=3,EXLEN=4,EXTRA=5,NAME=6,COMMENT=7,HCRC=8,DICTID=9,DICT=10,TYPE=11,TYPEDO=12,STORED=13,COPY_=14,COPY=15,TABLE=16,LENLENS=17,CODELENS=18,LEN_=19,LEN=20,LENEXT=21,DIST=22,DISTEXT=23,MATCH=24,LIT=25,CHECK=26,LENGTH=27,DONE=28,BAD=29,MEM=30,SYNC=31,ENOUGH_LENS=852,ENOUGH_DISTS=592,ENOUGH=ENOUGH_LENS+ENOUGH_DISTS,CODES=0,LENS=1,DISTS=2,inflate_table_lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],inflate_table_lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,203,69],inflate_table_dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],inflate_table_dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];function inflate_table(e,t){var r,i,s,n,o,a,l,c,h,u,d,f,p,v,g,_,m,b,S,y,C,w,k=e.next,E=t==DISTS?e.distbits:e.lenbits,A=e.work,x=e.lens,L=t==DISTS?e.nlen:0,R=e.codes;r=t==LENS?e.nlen:t==DISTS?e.ndist:19;var T=new Array(16),D=new Array(16);for(i=0;i<=15;i++)T[i]=0;for(s=0;s<r;s++)T[x[L+s]]++;for(a=E,o=15;o>=1&&0==T[o];o--);if(a>o&&(a=o),0==o)return _={op:64,bits:1,val:0},R[k++]=_,R[k++]=_,t==DISTS?e.distbits=1:e.lenbits=1,e.next=k,0;for(n=1;n<o&&0==T[n];n++);for(a<n&&(a=n),h=1,i=1;i<=15;i++)if(h<<=1,(h-=T[i])<0)return-1;if(h>0&&(t==CODES||1!=o))return e.next=k,-1;for(D[1]=0,i=1;i<15;i++)D[i+1]=D[i]+T[i];for(s=0;s<r;s++)0!=x[L+s]&&(A[D[x[L+s]]++]=s);switch(t){case CODES:b=y=A,S=0,C=0,w=19;break;case LENS:b=inflate_table_lbase,S=-257,y=inflate_table_lext,C=-257,w=256;break;default:b=inflate_table_dbase,y=inflate_table_dext,S=0,C=0,w=-1}if(d=0,s=0,i=n,m=k,l=a,c=0,v=-1,g=(u=1<<a)-1,t==LENS&&u>=ENOUGH_LENS||t==DISTS&&u>=ENOUGH_DISTS)return e.next=k,1;for(;;){_={op:0,bits:i-c,val:0},A[s]<w?_.val=A[s]:A[s]>w?(_.op=y[C+A[s]],_.val=b[S+A[s]]):_.op=96,f=1<<i-c,n=p=1<<l;do{R[m+(d>>>c)+(p-=f)]=_}while(0!=p);for(f=1<<i-1;d&f;)f>>>=1;if(0!=f?(d&=f-1,d+=f):d=0,s++,0==--T[i]){if(i==o)break;i=x[L+A[s]]}if(i>a&&(d&g)!=v){for(0==c&&(c=a),m+=n,h=1<<(l=i-c);l+c<o&&!((h-=T[l+c])<=0);)l++,h<<=1;if(u+=1<<l,t==LENS&&u>=ENOUGH_LENS||t==DISTS&&u>=ENOUGH_DISTS)return e.next=k,1;R[k+(v=d&g)]={op:l,bits:a,val:m-k}}}return 0!=d&&(R[m+d]={op:64,bits:i-c,val:0}),e.next=k+u,t==DISTS?e.distbits=a:e.lenbits=a,0}function inflate_fast(e,t){var r,i,s,n,o,a,l,c,h,u,d,f,p,v,g,_,m,b,S,y,C,w,k=-1,E=-1;r=e.state,i=e.input_data,n=(s=e.next_in)+e.avail_in-5,a=(o=e.next_out)-(t-e.avail_out),l=o+(e.avail_out-257),c=r.wsize,h=r.whave,u=r.wnext,d=r.window,f=r.hold,p=r.bits,v=r.codes,g=r.lencode,_=r.distcode,m=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(f+=(255&i.charCodeAt(s++))<<p,p+=8,f+=(255&i.charCodeAt(s++))<<p,p+=8),S=v[g+(f&m)];t:for(;;){if(f>>>=y=S.bits,p-=y,0==(y=S.op))e.output_data+=String.fromCharCode(S.val),o++;else{if(!(16&y)){if(0==(64&y)){S=v[g+(S.val+(f&(1<<y)-1))];continue t}if(32&y){r.mode=TYPE;break e}e.msg="invalid literal/length code",r.mode=BAD;break e}C=S.val,(y&=15)&&(p<y&&(f+=(255&i.charCodeAt(s++))<<p,p+=8),C+=f&(1<<y)-1,f>>>=y,p-=y),p<15&&(f+=(255&i.charCodeAt(s++))<<p,p+=8,f+=(255&i.charCodeAt(s++))<<p,p+=8),S=v[_+(f&b)];r:for(;;){if(f>>>=y=S.bits,p-=y,!(16&(y=S.op))){if(0==(64&y)){S=v[_+(S.val+(f&(1<<y)-1))];continue r}e.msg="invalid distance code",r.mode=BAD;break e}if(w=S.val,p<(y&=15)&&(f+=(255&i.charCodeAt(s++))<<p,(p+=8)<y&&(f+=(255&i.charCodeAt(s++))<<p,p+=8)),w+=f&(1<<y)-1,f>>>=y,p-=y,w>(y=o-a)){if((y=w-y)>h&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break e}k=0,E=-1,0==u?(k+=c-y,y<C&&(C-=y,e.output_data+=d.substring(k,k+y),o+=y,y=0,k=-1,E=o-w)):(k+=u-y,y<C&&(C-=y,e.output_data+=d.substring(k,k+y),k=-1,E=(o+=y)-w))}else k=-1,E=o-w;if(k>=0)e.output_data+=d.substring(k,k+C),o+=C,k+=C;else{var A=C;for(A>o-E&&(A=o-E),e.output_data+=e.output_data.substring(E,E+A),o+=A,E+=A,o+=C-=A;C>2;)e.output_data+=e.output_data.charAt(E++),e.output_data+=e.output_data.charAt(E++),e.output_data+=e.output_data.charAt(E++),C-=3;C&&(e.output_data+=e.output_data.charAt(E++),C>1&&(e.output_data+=e.output_data.charAt(E++)))}break r}}break t}}while(s<n&&o<l);s-=C=p>>>3,f&=(1<<(p-=C<<3))-1,e.next_in=s,e.next_out=o,e.avail_in=s<n?n-s+5:5-(s-n),e.avail_out=o<l?l-o+257:257-(o-l),r.hold=f,r.bits=p}function new_array(e){var t,r=new Array(e);for(t=0;t<e;t++)r[t]=0;return r}function getarg(e,t,r){return e&&t in e?e[t]:r}function checksum_none(){return 0}function inflate_state(){var e;this.mode=0,this.last=0,this.wrap=0,this.havedict=0,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=0,this.distcode=0,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=0,this.lens=new_array(320),this.work=new_array(288),this.codes=new Array(ENOUGH);var t={op:0,bits:0,val:0};for(e=0;e<ENOUGH;e++)this.codes[e]=t;this.sane=0,this.back=0,this.was=0}ZLIB.inflate_copyright=" inflate 1.2.6 Copyright 1995-2012 Mark Adler ",ZLIB.inflateResetKeep=function(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=null,t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=0,t.distcode=0,t.next=0,t.sane=1,t.back=-1,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.inflateReset=function(e,t){var r,i;return e&&e.state?(i=e.state,void 0===t&&(t=DEF_WBITS),t<0?(r=0,t=-t):(r=1+(t>>>4),t<48&&(t&=15)),1==r&&"function"==typeof ZLIB.adler32?e.checksum_function=ZLIB.adler32:2==r&&"function"==typeof ZLIB.crc32?e.checksum_function=ZLIB.crc32:e.checksum_function=checksum_none,t&&(t<8||t>15)?ZLIB.Z_STREAM_ERROR:(i.window&&i.wbits!=t&&(i.window=null),i.wrap=r,i.wbits=t,i.wsize=0,i.whave=0,i.wnext=0,ZLIB.inflateResetKeep(e))):ZLIB.Z_STREAM_ERROR},ZLIB.inflateInit=function(e){var t=new ZLIB.z_stream;return t.state=new inflate_state,ZLIB.inflateReset(t,e),t},ZLIB.inflatePrime=function(e,t,r){var i;return e&&e.state?(i=e.state,t<0?(i.hold=0,i.bits=0,ZLIB.Z_OK):t>16||i.bits+t>32?ZLIB.Z_STREAM_ERROR:(r&=(1<<t)-1,i.hold+=r<<i.bits,i.bits+=t,ZLIB.Z_OK)):ZLIB.Z_STREAM_ERROR};var lenfix_ary=null,lenfix_def="([    {op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},{op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},    {op:0,bits:9,val:192},{op:16,bits:7,val:10},{op:0,bits:8,val:96},{op:0,bits:8,val:32},{op:0,bits:9,val:160},{op:0,bits:8,val:0},{op:0,bits:8,val:128},    {op:0,bits:8,val:64},{op:0,bits:9,val:224},{op:16,bits:7,val:6},{op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:144},{op:19,bits:7,val:59},    {op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:208},{op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:176},    {op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},{op:0,bits:9,val:240},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},    {op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},{op:0,bits:8,val:52},{op:0,bits:9,val:200},{op:17,bits:7,val:13},{op:0,bits:8,val:100},    {op:0,bits:8,val:36},{op:0,bits:9,val:168},{op:0,bits:8,val:4},{op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:232},{op:16,bits:7,val:8},    {op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:152},{op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:216},    {op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},{op:0,bits:9,val:184},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},    {op:0,bits:9,val:248},{op:16,bits:7,val:3},{op:0,bits:8,val:82},{op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},    {op:0,bits:8,val:50},{op:0,bits:9,val:196},{op:17,bits:7,val:11},{op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:164},{op:0,bits:8,val:2},    {op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:228},{op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:148},    {op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},{op:0,bits:9,val:212},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},    {op:0,bits:9,val:180},{op:0,bits:8,val:10},{op:0,bits:8,val:138},{op:0,bits:8,val:74},{op:0,bits:9,val:244},{op:16,bits:7,val:5},{op:0,bits:8,val:86},    {op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:204},{op:17,bits:7,val:15},    {op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:172},{op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:236},    {op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},{op:0,bits:9,val:156},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},    {op:0,bits:9,val:220},{op:18,bits:7,val:27},{op:0,bits:8,val:110},{op:0,bits:8,val:46},{op:0,bits:9,val:188},{op:0,bits:8,val:14},{op:0,bits:8,val:142},    {op:0,bits:8,val:78},{op:0,bits:9,val:252},{op:96,bits:7,val:0},{op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},    {op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:194},{op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:162},    {op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},{op:0,bits:9,val:226},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},    {op:0,bits:9,val:146},{op:19,bits:7,val:59},{op:0,bits:8,val:121},{op:0,bits:8,val:57},{op:0,bits:9,val:210},{op:17,bits:7,val:17},{op:0,bits:8,val:105},    {op:0,bits:8,val:41},{op:0,bits:9,val:178},{op:0,bits:8,val:9},{op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:242},{op:16,bits:7,val:4},    {op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},{op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:202},    {op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},{op:0,bits:9,val:170},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},    {op:0,bits:9,val:234},{op:16,bits:7,val:8},{op:0,bits:8,val:93},{op:0,bits:8,val:29},{op:0,bits:9,val:154},{op:20,bits:7,val:83},{op:0,bits:8,val:125},    {op:0,bits:8,val:61},{op:0,bits:9,val:218},{op:18,bits:7,val:23},{op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:186},{op:0,bits:8,val:13},    {op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:250},{op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},    {op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},{op:0,bits:9,val:198},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},    {op:0,bits:9,val:166},{op:0,bits:8,val:3},{op:0,bits:8,val:131},{op:0,bits:8,val:67},{op:0,bits:9,val:230},{op:16,bits:7,val:7},{op:0,bits:8,val:91},    {op:0,bits:8,val:27},{op:0,bits:9,val:150},{op:20,bits:7,val:67},{op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:214},{op:18,bits:7,val:19},    {op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:182},{op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:246},    {op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},{op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},    {op:0,bits:9,val:206},{op:17,bits:7,val:15},{op:0,bits:8,val:103},{op:0,bits:8,val:39},{op:0,bits:9,val:174},{op:0,bits:8,val:7},{op:0,bits:8,val:135},    {op:0,bits:8,val:71},{op:0,bits:9,val:238},{op:16,bits:7,val:9},{op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:158},{op:20,bits:7,val:99},    {op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:222},{op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:190},    {op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},{op:0,bits:9,val:254},{op:96,bits:7,val:0},{op:0,bits:8,val:80},{op:0,bits:8,val:16},    {op:20,bits:8,val:115},{op:18,bits:7,val:31},{op:0,bits:8,val:112},{op:0,bits:8,val:48},{op:0,bits:9,val:193},{op:16,bits:7,val:10},{op:0,bits:8,val:96},    {op:0,bits:8,val:32},{op:0,bits:9,val:161},{op:0,bits:8,val:0},{op:0,bits:8,val:128},{op:0,bits:8,val:64},{op:0,bits:9,val:225},{op:16,bits:7,val:6},    {op:0,bits:8,val:88},{op:0,bits:8,val:24},{op:0,bits:9,val:145},{op:19,bits:7,val:59},{op:0,bits:8,val:120},{op:0,bits:8,val:56},{op:0,bits:9,val:209},    {op:17,bits:7,val:17},{op:0,bits:8,val:104},{op:0,bits:8,val:40},{op:0,bits:9,val:177},{op:0,bits:8,val:8},{op:0,bits:8,val:136},{op:0,bits:8,val:72},    {op:0,bits:9,val:241},{op:16,bits:7,val:4},{op:0,bits:8,val:84},{op:0,bits:8,val:20},{op:21,bits:8,val:227},{op:19,bits:7,val:43},{op:0,bits:8,val:116},    {op:0,bits:8,val:52},{op:0,bits:9,val:201},{op:17,bits:7,val:13},{op:0,bits:8,val:100},{op:0,bits:8,val:36},{op:0,bits:9,val:169},{op:0,bits:8,val:4},    {op:0,bits:8,val:132},{op:0,bits:8,val:68},{op:0,bits:9,val:233},{op:16,bits:7,val:8},{op:0,bits:8,val:92},{op:0,bits:8,val:28},{op:0,bits:9,val:153},    {op:20,bits:7,val:83},{op:0,bits:8,val:124},{op:0,bits:8,val:60},{op:0,bits:9,val:217},{op:18,bits:7,val:23},{op:0,bits:8,val:108},{op:0,bits:8,val:44},    {op:0,bits:9,val:185},{op:0,bits:8,val:12},{op:0,bits:8,val:140},{op:0,bits:8,val:76},{op:0,bits:9,val:249},{op:16,bits:7,val:3},{op:0,bits:8,val:82},    {op:0,bits:8,val:18},{op:21,bits:8,val:163},{op:19,bits:7,val:35},{op:0,bits:8,val:114},{op:0,bits:8,val:50},{op:0,bits:9,val:197},{op:17,bits:7,val:11},    {op:0,bits:8,val:98},{op:0,bits:8,val:34},{op:0,bits:9,val:165},{op:0,bits:8,val:2},{op:0,bits:8,val:130},{op:0,bits:8,val:66},{op:0,bits:9,val:229},    {op:16,bits:7,val:7},{op:0,bits:8,val:90},{op:0,bits:8,val:26},{op:0,bits:9,val:149},{op:20,bits:7,val:67},{op:0,bits:8,val:122},{op:0,bits:8,val:58},    {op:0,bits:9,val:213},{op:18,bits:7,val:19},{op:0,bits:8,val:106},{op:0,bits:8,val:42},{op:0,bits:9,val:181},{op:0,bits:8,val:10},{op:0,bits:8,val:138},    {op:0,bits:8,val:74},{op:0,bits:9,val:245},{op:16,bits:7,val:5},{op:0,bits:8,val:86},{op:0,bits:8,val:22},{op:64,bits:8,val:0},{op:19,bits:7,val:51},    {op:0,bits:8,val:118},{op:0,bits:8,val:54},{op:0,bits:9,val:205},{op:17,bits:7,val:15},{op:0,bits:8,val:102},{op:0,bits:8,val:38},{op:0,bits:9,val:173},    {op:0,bits:8,val:6},{op:0,bits:8,val:134},{op:0,bits:8,val:70},{op:0,bits:9,val:237},{op:16,bits:7,val:9},{op:0,bits:8,val:94},{op:0,bits:8,val:30},    {op:0,bits:9,val:157},{op:20,bits:7,val:99},{op:0,bits:8,val:126},{op:0,bits:8,val:62},{op:0,bits:9,val:221},{op:18,bits:7,val:27},{op:0,bits:8,val:110},    {op:0,bits:8,val:46},{op:0,bits:9,val:189},{op:0,bits:8,val:14},{op:0,bits:8,val:142},{op:0,bits:8,val:78},{op:0,bits:9,val:253},{op:96,bits:7,val:0},    {op:0,bits:8,val:81},{op:0,bits:8,val:17},{op:21,bits:8,val:131},{op:18,bits:7,val:31},{op:0,bits:8,val:113},{op:0,bits:8,val:49},{op:0,bits:9,val:195},    {op:16,bits:7,val:10},{op:0,bits:8,val:97},{op:0,bits:8,val:33},{op:0,bits:9,val:163},{op:0,bits:8,val:1},{op:0,bits:8,val:129},{op:0,bits:8,val:65},    {op:0,bits:9,val:227},{op:16,bits:7,val:6},{op:0,bits:8,val:89},{op:0,bits:8,val:25},{op:0,bits:9,val:147},{op:19,bits:7,val:59},{op:0,bits:8,val:121},    {op:0,bits:8,val:57},{op:0,bits:9,val:211},{op:17,bits:7,val:17},{op:0,bits:8,val:105},{op:0,bits:8,val:41},{op:0,bits:9,val:179},{op:0,bits:8,val:9},    {op:0,bits:8,val:137},{op:0,bits:8,val:73},{op:0,bits:9,val:243},{op:16,bits:7,val:4},{op:0,bits:8,val:85},{op:0,bits:8,val:21},{op:16,bits:8,val:258},    {op:19,bits:7,val:43},{op:0,bits:8,val:117},{op:0,bits:8,val:53},{op:0,bits:9,val:203},{op:17,bits:7,val:13},{op:0,bits:8,val:101},{op:0,bits:8,val:37},    {op:0,bits:9,val:171},{op:0,bits:8,val:5},{op:0,bits:8,val:133},{op:0,bits:8,val:69},{op:0,bits:9,val:235},{op:16,bits:7,val:8},{op:0,bits:8,val:93},    {op:0,bits:8,val:29},{op:0,bits:9,val:155},{op:20,bits:7,val:83},{op:0,bits:8,val:125},{op:0,bits:8,val:61},{op:0,bits:9,val:219},{op:18,bits:7,val:23},    {op:0,bits:8,val:109},{op:0,bits:8,val:45},{op:0,bits:9,val:187},{op:0,bits:8,val:13},{op:0,bits:8,val:141},{op:0,bits:8,val:77},{op:0,bits:9,val:251},    {op:16,bits:7,val:3},{op:0,bits:8,val:83},{op:0,bits:8,val:19},{op:21,bits:8,val:195},{op:19,bits:7,val:35},{op:0,bits:8,val:115},{op:0,bits:8,val:51},    {op:0,bits:9,val:199},{op:17,bits:7,val:11},{op:0,bits:8,val:99},{op:0,bits:8,val:35},{op:0,bits:9,val:167},{op:0,bits:8,val:3},{op:0,bits:8,val:131},    {op:0,bits:8,val:67},{op:0,bits:9,val:231},{op:16,bits:7,val:7},{op:0,bits:8,val:91},{op:0,bits:8,val:27},{op:0,bits:9,val:151},{op:20,bits:7,val:67},    {op:0,bits:8,val:123},{op:0,bits:8,val:59},{op:0,bits:9,val:215},{op:18,bits:7,val:19},{op:0,bits:8,val:107},{op:0,bits:8,val:43},{op:0,bits:9,val:183},    {op:0,bits:8,val:11},{op:0,bits:8,val:139},{op:0,bits:8,val:75},{op:0,bits:9,val:247},{op:16,bits:7,val:5},{op:0,bits:8,val:87},{op:0,bits:8,val:23},    {op:64,bits:8,val:0},{op:19,bits:7,val:51},{op:0,bits:8,val:119},{op:0,bits:8,val:55},{op:0,bits:9,val:207},{op:17,bits:7,val:15},{op:0,bits:8,val:103},    {op:0,bits:8,val:39},{op:0,bits:9,val:175},{op:0,bits:8,val:7},{op:0,bits:8,val:135},{op:0,bits:8,val:71},{op:0,bits:9,val:239},{op:16,bits:7,val:9},    {op:0,bits:8,val:95},{op:0,bits:8,val:31},{op:0,bits:9,val:159},{op:20,bits:7,val:99},{op:0,bits:8,val:127},{op:0,bits:8,val:63},{op:0,bits:9,val:223},    {op:18,bits:7,val:27},{op:0,bits:8,val:111},{op:0,bits:8,val:47},{op:0,bits:9,val:191},{op:0,bits:8,val:15},{op:0,bits:8,val:143},{op:0,bits:8,val:79},    {op:0,bits:9,val:255}])",distfix_ary=null,distfix_def="([    {op:16,bits:5,val:1},{op:23,bits:5,val:257},{op:19,bits:5,val:17},{op:27,bits:5,val:4097},{op:17,bits:5,val:5},{op:25,bits:5,val:1025},    {op:21,bits:5,val:65},{op:29,bits:5,val:16385},{op:16,bits:5,val:3},{op:24,bits:5,val:513},{op:20,bits:5,val:33},{op:28,bits:5,val:8193},    {op:18,bits:5,val:9},{op:26,bits:5,val:2049},{op:22,bits:5,val:129},{op:64,bits:5,val:0},{op:16,bits:5,val:2},{op:23,bits:5,val:385},    {op:19,bits:5,val:25},{op:27,bits:5,val:6145},{op:17,bits:5,val:7},{op:25,bits:5,val:1537},{op:21,bits:5,val:97},{op:29,bits:5,val:24577},    {op:16,bits:5,val:4},{op:24,bits:5,val:769},{op:20,bits:5,val:49},{op:28,bits:5,val:12289},{op:18,bits:5,val:13},{op:26,bits:5,val:3073},    {op:22,bits:5,val:193},{op:64,bits:5,val:0}])";function fixedtables(state){var i;for(lenfix_ary||(lenfix_ary=eval(lenfix_def)),distfix_ary||(distfix_ary=eval(distfix_def)),state.lencode=0,state.distcode=512,i=0;i<512;i++)state.codes[i]=lenfix_ary[i];for(i=0;i<32;i++)state.codes[i+512]=distfix_ary[i];state.lenbits=9,state.distbits=5}function updatewindow(e){var t=e.state,r=e.output_data.length;return null===t.window&&(t.window=""),0==t.wsize&&(t.wsize=1<<t.wbits),r>=t.wsize?t.window=e.output_data.substring(r-t.wsize):t.whave+r<t.wsize?t.window+=e.output_data:t.window=t.window.substring(t.whave-(t.wsize-r))+e.output_data,t.whave=t.window.length,t.whave<t.wsize?t.wnext=t.whave:t.wnext=0,0}function CRC2(e,t){var r=[255&t,t>>>8&255];e.state.check=e.checksum_function(e.state.check,r,0,2)}function CRC4(e,t){var r=[255&t,t>>>8&255,t>>>16&255,t>>>24&255];e.state.check=e.checksum_function(e.state.check,r,0,4)}function LOAD(e,t){return t.strm=e,t.left=e.avail_out,t.next=e.next_in,t.have=e.avail_in,t.hold=e.state.hold,t.bits=e.state.bits,t}function RESTORE(e){var t=e.strm;t.next_in=e.next,t.avail_out=e.left,t.avail_in=e.have,t.state.hold=e.hold,t.state.bits=e.bits}function INITBITS(e){e.hold=0,e.bits=0}function PULLBYTE(e){return 0!=e.have&&(e.have--,e.hold+=(255&e.strm.input_data.charCodeAt(e.next++))<<e.bits,e.bits+=8,!0)}function NEEDBITS(e,t){for(;e.bits<t;)if(!PULLBYTE(e))return!1;return!0}function BITS(e,t){return e.hold&(1<<t)-1}function DROPBITS(e,t){e.hold>>>=t,e.bits-=t}function BYTEBITS(e){e.hold>>>=7&e.bits,e.bits-=7&e.bits}function REVERSE(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}var inflate_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];ZLIB.inflate=function(e,t){var r,i,s,n,o,a,l,c,h,u=-1,d=-1;if(!e||!e.state||!e.input_data&&0!=e.avail_in)return ZLIB.Z_STREAM_ERROR;(r=e.state).mode==TYPE&&(r.mode=TYPEDO),LOAD(e,i={}),s=i.have,n=i.left,h=ZLIB.Z_OK;e:for(;;)switch(r.mode){case HEAD:if(0==r.wrap){r.mode=TYPEDO;break}if(!NEEDBITS(i,16))break e;if(2&r.wrap&&35615==i.hold){r.check=e.checksum_function(0,null,0,0),CRC2(e,i.hold),INITBITS(i),r.mode=FLAGS;break}if(r.flags=0,null!==r.head&&(r.head.done=-1),!(1&r.wrap)||((BITS(i,8)<<8)+(i.hold>>>8))%31){e.msg="incorrect header check",r.mode=BAD;break}if(BITS(i,4)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",r.mode=BAD;break}if(DROPBITS(i,4),c=BITS(i,4)+8,0==r.wbits)r.wbits=c;else if(c>r.wbits){e.msg="invalid window size",r.mode=BAD;break}r.dmax=1<<c,e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=512&i.hold?DICTID:TYPE,INITBITS(i);break;case FLAGS:if(!NEEDBITS(i,16))break e;if(r.flags=i.hold,(255&r.flags)!=ZLIB.Z_DEFLATED){e.msg="unknown compression method",r.mode=BAD;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=BAD;break}null!==r.head&&(r.head.text=i.hold>>>8&1),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.mode=TIME;case TIME:if(!NEEDBITS(i,32))break e;null!==r.head&&(r.head.time=i.hold),512&r.flags&&CRC4(e,i.hold),INITBITS(i),r.mode=OS;case OS:if(!NEEDBITS(i,16))break e;null!==r.head&&(r.head.xflags=255&i.hold,r.head.os=i.hold>>>8),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.mode=EXLEN;case EXLEN:if(1024&r.flags){if(!NEEDBITS(i,16))break e;r.length=i.hold,null!==r.head&&(r.head.extra_len=i.hold),512&r.flags&&CRC2(e,i.hold),INITBITS(i),r.head.extra=""}else null!==r.head&&(r.head.extra=null);r.mode=EXTRA;case EXTRA:if(1024&r.flags&&((o=r.length)>i.have&&(o=i.have),o&&(null!==r.head&&null!==r.head.extra&&(c=r.head.extra_len-r.length,r.head.extra+=e.input_data.substring(i.next,i.next+(c+o>r.head.extra_max?r.head.extra_max-c:o))),512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,r.length-=o),r.length))break e;r.length=0,r.mode=NAME;case NAME:if(2048&r.flags){if(0==i.have)break e;null!==r.head&&null===r.head.name&&(r.head.name=""),o=0;do{if(c=e.input_data.charAt(i.next+o),o++,"\0"===c)break;null!==r.head&&r.length<r.head.name_max&&(r.head.name+=c,r.length++)}while(o<i.have);if(512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,"\0"!==c)break e}else null!==r.head&&(r.head.name=null);r.length=0,r.mode=COMMENT;case COMMENT:if(4096&r.flags){if(0==i.have)break e;o=0,null!==r.head&&null===r.head.comment&&(r.head.comment="");do{if(c=e.input_data.charAt(i.next+o),o++,"\0"===c)break;null!==r.head&&r.length<r.head.comm_max&&(r.head.comment+=c,r.length++)}while(o<i.have);if(512&r.flags&&(r.check=e.checksum_function(r.check,e.input_data,i.next,o)),i.have-=o,i.next+=o,"\0"!==c)break e}else null!==r.head&&(r.head.comment=null);r.mode=HCRC;case HCRC:if(512&r.flags){if(!NEEDBITS(i,16))break e;if(i.hold!=(65535&r.check)){e.msg="header crc mismatch",r.mode=BAD;break}INITBITS(i)}null!==r.head&&(r.head.hcrc=r.flags>>>9&1,r.head.done=1),e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=TYPE;break;case DICTID:if(!NEEDBITS(i,32))break e;e.adler=r.check=REVERSE(i.hold),INITBITS(i),r.mode=DICT;case DICT:if(0==r.havedict)return RESTORE(i),ZLIB.Z_NEED_DICT;e.adler=r.check=e.checksum_function(0,null,0,0),r.mode=TYPE;case TYPE:if(t==ZLIB.Z_BLOCK||t==ZLIB.Z_TREES)break e;case TYPEDO:if(r.last){BYTEBITS(i),r.mode=CHECK;break}if(!NEEDBITS(i,3))break e;switch(r.last=BITS(i,1),DROPBITS(i,1),BITS(i,2)){case 0:r.mode=STORED;break;case 1:if(fixedtables(r),r.mode=LEN_,t==ZLIB.Z_TREES){DROPBITS(i,2);break e}break;case 2:r.mode=TABLE;break;case 3:e.msg="invalid block type",r.mode=BAD}DROPBITS(i,2);break;case STORED:if(BYTEBITS(i),!NEEDBITS(i,32))break e;if((65535&i.hold)!=(i.hold>>>16&65535^65535)){e.msg="invalid stored block lengths",r.mode=BAD;break}if(r.length=65535&i.hold,INITBITS(i),r.mode=COPY_,t==ZLIB.Z_TREES)break e;case COPY_:r.mode=COPY;case COPY:if(o=r.length){if(o>i.have&&(o=i.have),o>i.left&&(o=i.left),0==o)break e;e.output_data+=e.input_data.substring(i.next,i.next+o),e.next_out+=o,i.have-=o,i.next+=o,i.left-=o,r.length-=o;break}r.mode=TYPE;break;case TABLE:if(!NEEDBITS(i,14))break e;if(r.nlen=BITS(i,5)+257,DROPBITS(i,5),r.ndist=BITS(i,5)+1,DROPBITS(i,5),r.ncode=BITS(i,4)+4,DROPBITS(i,4),r.nlen>286||r.ndist>30){e.msg="too many length or distance symbols",r.mode=BAD;break}r.have=0,r.mode=LENLENS;case LENLENS:for(;r.have<r.ncode;){if(!NEEDBITS(i,3))break e;var f=BITS(i,3);r.lens[inflate_order[r.have++]]=f,DROPBITS(i,3)}for(;r.have<19;)r.lens[inflate_order[r.have++]]=0;if(r.next=0,r.lencode=0,r.lenbits=7,h=inflate_table(r,CODES)){e.msg="invalid code lengths set",r.mode=BAD;break}r.have=0,r.mode=CODELENS;case CODELENS:for(;r.have<r.nlen+r.ndist;){for(;!((a=r.codes[r.lencode+BITS(i,r.lenbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(a.val<16)DROPBITS(i,a.bits),r.lens[r.have++]=a.val;else{if(16==a.val){if(!NEEDBITS(i,a.bits+2))break e;if(DROPBITS(i,a.bits),0==r.have){e.msg="invalid bit length repeat",r.mode=BAD;break}c=r.lens[r.have-1],o=3+BITS(i,2),DROPBITS(i,2)}else if(17==a.val){if(!NEEDBITS(i,a.bits+3))break e;DROPBITS(i,a.bits),c=0,o=3+BITS(i,3),DROPBITS(i,3)}else{if(!NEEDBITS(i,a.bits+7))break e;DROPBITS(i,a.bits),c=0,o=11+BITS(i,7),DROPBITS(i,7)}if(r.have+o>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=BAD;break}for(;o--;)r.lens[r.have++]=c}}if(r.mode==BAD)break;if(0==r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=BAD;break}if(r.next=0,r.lencode=r.next,r.lenbits=9,h=inflate_table(r,LENS)){e.msg="invalid literal/lengths set",r.mode=BAD;break}if(r.distcode=r.next,r.distbits=6,h=inflate_table(r,DISTS)){e.msg="invalid distances set",r.mode=BAD;break}if(r.mode=LEN_,t==ZLIB.Z_TREES)break e;case LEN_:r.mode=LEN;case LEN:if(i.have>=6&&i.left>=258){RESTORE(i),inflate_fast(e,n),LOAD(e,i),r.mode==TYPE&&(r.back=-1);break}for(r.back=0;!((a=r.codes[r.lencode+BITS(i,r.lenbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(a.op&&0==(240&a.op)){for(l=a;a=r.codes[r.lencode+l.val+(BITS(i,l.bits+l.op)>>>l.bits)],!(l.bits+a.bits<=i.bits);)if(!PULLBYTE(i))break e;DROPBITS(i,l.bits),r.back+=l.bits}if(DROPBITS(i,a.bits),r.back+=a.bits,r.length=a.val,0==a.op){r.mode=LIT;break}if(32&a.op){r.back=-1,r.mode=TYPE;break}if(64&a.op){e.msg="invalid literal/length code",r.mode=BAD;break}r.extra=15&a.op,r.mode=LENEXT;case LENEXT:if(r.extra){if(!NEEDBITS(i,r.extra))break e;r.length+=BITS(i,r.extra),DROPBITS(i,r.extra),r.back+=r.extra}r.was=r.length,r.mode=DIST;case DIST:for(;!((a=r.codes[r.distcode+BITS(i,r.distbits)]).bits<=i.bits);)if(!PULLBYTE(i))break e;if(0==(240&a.op)){for(l=a;a=r.codes[r.distcode+l.val+(BITS(i,l.bits+l.op)>>>l.bits)],!(l.bits+a.bits<=i.bits);)if(!PULLBYTE(i))break e;DROPBITS(i,l.bits),r.back+=l.bits}if(DROPBITS(i,a.bits),r.back+=a.bits,64&a.op){e.msg="invalid distance code",r.mode=BAD;break}r.offset=a.val,r.extra=15&a.op,r.mode=DISTEXT;case DISTEXT:if(r.extra){if(!NEEDBITS(i,r.extra))break e;r.offset+=BITS(i,r.extra),DROPBITS(i,r.extra),r.back+=r.extra}r.mode=MATCH;case MATCH:if(0==i.left)break e;if(o=n-i.left,r.offset>o){if((o=r.offset-o)>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break}o>r.wnext?(o-=r.wnext,u=r.wsize-o,d=-1):(u=r.wnext-o,d=-1),o>r.length&&(o=r.length)}else u=-1,d=e.next_out-r.offset,o=r.length;if(o>i.left&&(o=i.left),i.left-=o,r.length-=o,u>=0)e.output_data+=r.window.substring(u,u+o),e.next_out+=o,o=0;else{e.next_out+=o;do{e.output_data+=e.output_data.charAt(d++)}while(--o)}0==r.length&&(r.mode=LEN);break;case LIT:if(0==i.left)break e;e.output_data+=String.fromCharCode(r.length),e.next_out++,i.left--,r.mode=LEN;break;case CHECK:if(r.wrap){if(!NEEDBITS(i,32))break e;if(n-=i.left,e.total_out+=n,r.total+=n,n&&(e.adler=r.check=e.checksum_function(r.check,e.output_data,e.output_data.length-n,n)),n=i.left,(r.flags?i.hold:REVERSE(i.hold))!=r.check){e.msg="incorrect data check",r.mode=BAD;break}INITBITS(i)}r.mode=LENGTH;case LENGTH:if(r.wrap&&r.flags){if(!NEEDBITS(i,32))break e;if(i.hold!=(4294967295&r.total)){e.msg="incorrect length check",r.mode=BAD;break}INITBITS(i)}r.mode=DONE;case DONE:h=ZLIB.Z_STREAM_END;break e;case BAD:h=ZLIB.Z_DATA_ERROR;break e;case MEM:return ZLIB.Z_MEM_ERROR;default:return ZLIB.Z_STREAM_ERROR}return RESTORE(i),(r.wsize||n!=e.avail_out&&r.mode<BAD&&(r.mode<CHECK||t!=ZLIB.Z_FINISH))&&updatewindow(e)?(r.mode=MEM,ZLIB.Z_MEM_ERROR):(s-=e.avail_in,n-=e.avail_out,e.total_in+=s,e.total_out+=n,r.total+=n,r.wrap&&n&&(e.adler=r.check=e.checksum_function(r.check,e.output_data,0,e.output_data.length)),e.data_type=r.bits+(r.last?64:0)+(r.mode==TYPE?128:0)+(r.mode==LEN_||r.mode==COPY_?256:0),(0==s&&0==n||t==ZLIB.Z_FINISH)&&h==ZLIB.Z_OK&&(h=ZLIB.Z_BUF_ERROR),h)},ZLIB.inflateEnd=function(e){return e&&e.state?(e.state.window=null,e.state=null,ZLIB.Z_OK):ZLIB.Z_STREAM_ERROR},ZLIB.z_stream.prototype.inflate=function(e,t){var r,i;this.input_data=e,this.next_in=getarg(t,"next_in",0),this.avail_in=getarg(t,"avail_in",e.length-this.next_in),r=getarg(t,"flush",ZLIB.Z_SYNC_FLUSH),i=getarg(t,"avail_out",-1);var s="";do{if(this.avail_out=i>=0?i:16384,this.output_data="",this.next_out=0,this.error=ZLIB.inflate(this,r),0!=this.error&&console.log("zlib error",this.error),i>=0)return this.output_data;if(s+=this.output_data,this.avail_out>0)break}while(this.error==ZLIB.Z_OK);return s},ZLIB.z_stream.prototype.inflateReset=function(e){return ZLIB.inflateReset(this,e)}}(),void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-adler32.js"),BASE=65521,NMAX=5552,ZLIB.adler32=function(e,t,r,i){return"string"==typeof t?function(e,t,r,i){var s,n;if(s=e>>>16&65535,e&=65535,1==i)return(e+=255&t.charCodeAt(r))>=BASE&&(e-=BASE),(s+=e)>=BASE&&(s-=BASE),e|s<<16;if(null===t)return 1;if(i<16){for(;i--;)s+=e+=255&t.charCodeAt(r++);return e>=BASE&&(e-=BASE),e|(s%=BASE)<<16}for(;i>=NMAX;){i-=NMAX,n=347;do{s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++)}while(--n);e%=BASE,s%=BASE}if(i){for(;i>=16;)i-=16,s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++),s+=e+=255&t.charCodeAt(r++);for(;i--;)s+=e+=255&t.charCodeAt(r++);e%=BASE,s%=BASE}return e|s<<16}(e,t,r,i):function(e,t,r,i){var s,n;if(s=e>>>16&65535,e&=65535,1==i)return(e+=t[r])>=BASE&&(e-=BASE),(s+=e)>=BASE&&(s-=BASE),e|s<<16;if(null===t)return 1;if(i<16){for(;i--;)s+=e+=t[r++];return e>=BASE&&(e-=BASE),e|(s%=BASE)<<16}for(;i>=NMAX;){i-=NMAX,n=347;do{s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++]}while(--n);e%=BASE,s%=BASE}if(i){for(;i>=16;)i-=16,s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++],s+=e+=t[r++];for(;i--;)s+=e+=t[r++];e%=BASE,s%=BASE}return e|s<<16}(e,t,r,i)},ZLIB.adler32_combine=function(e,t,r){var i,s,n;return r<0?4294967295:(s=(n=r%=BASE)*(i=65535&e),s%=BASE,(i+=(65535&t)+BASE-1)>=BASE&&(i-=BASE),i>=BASE&&(i-=BASE),(s+=(e>>16&65535)+(t>>16&65535)+BASE-n)>=131042&&(s-=131042),s>=BASE&&(s-=BASE),i|s<<16)},void 0===ZLIB&&alert("ZLIB is not defined.  SRC zlib.js before zlib-crc32.js"),function(){var e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function t(e,t){var r,i=0;for(r=0;t;)1&t&&(r^=e[i]),t>>=1,i++;return r}function r(e,r){var i;for(i=0;i<32;i++)e[i]=t(r,r[i])}ZLIB.crc32=function(t,r,i,s){return"string"==typeof r?function(t,r,i,s){if(null==r)return 0;for(t^=4294967295;s>=8;)t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,t=e[255&(t^r.charCodeAt(i++))]^t>>>8,s-=8;if(s)do{t=e[255&(t^r.charCodeAt(i++))]^t>>>8}while(--s);return 4294967295^t}(t,r,i,s):function(t,r,i,s){if(null==r)return 0;for(t^=4294967295;s>=8;)t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,t=e[255&(t^r[i++])]^t>>>8,s-=8;if(s)do{t=e[255&(t^r[i++])]^t>>>8}while(--s);return 4294967295^t}(t,r,i,s)},ZLIB.crc32_combine=function(e,i,s){var n,o,a,l;if(s<=0)return e;for(a=new Array(32),(l=new Array(32))[0]=3988292384,o=1,n=1;n<32;n++)l[n]=o,o<<=1;r(a,l),r(l,a);do{if(r(a,l),1&s&&(e=t(a,e)),0==(s>>=1))break;r(l,a),1&s&&(e=t(l,e)),s>>=1}while(0!=s);return e^i}}(),module.exports=ZLIB}},__webpack_module_cache__={};function __nested_webpack_require_78641__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__nested_webpack_require_78641__),r.exports}__nested_webpack_require_78641__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_78641__.d(t,{a:t}),t},__nested_webpack_require_78641__.d=(e,t)=>{for(var r in t)__nested_webpack_require_78641__.o(t,r)&&!__nested_webpack_require_78641__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__nested_webpack_require_78641__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_78641__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __nested_webpack_exports__={};return(()=>{"use strict";__nested_webpack_require_78641__.r(__nested_webpack_exports__),__nested_webpack_require_78641__.d(__nested_webpack_exports__,{AMTDesktop:()=>e.r,AMTKeyCodeConverter:()=>d.qD,AMTKvmDataRedirector:()=>t.N,AMTRedirector:()=>r.K,AmtTerminal:()=>i.r,CommsHelper:()=>d.Xn,ConsoleLogger:()=>s.k,DataProcessor:()=>h.$,Desktop:()=>o.H,Encoding:()=>u.ez,FrameBufferBellServerCutText:()=>u.Ut,HandshakeState:()=>u.wW,ImageHelper:()=>d.jw,KeyBoardHelper:()=>d.EB,LogLevel:()=>c.i,MouseHelper:()=>d.xx,Protocol:()=>r.b,RLEDecoder:()=>h.X,SecurityOptions:()=>u.ll,SecurityResponse:()=>u.mC,ServerInit:()=>u.Cu,StateProcessorFactory:()=>a.v,TerminalDataProcessor:()=>l.Q,TypeConverter:()=>n.r,isTruthy:()=>d.fQ});var e=__nested_webpack_require_78641__(166),t=__nested_webpack_require_78641__(59),r=__nested_webpack_require_78641__(503),i=__nested_webpack_require_78641__(277),s=__nested_webpack_require_78641__(237),n=__nested_webpack_require_78641__(565),o=__nested_webpack_require_78641__(46),a=__nested_webpack_require_78641__(989),l=__nested_webpack_require_78641__(155),c=__nested_webpack_require_78641__(201),h=__nested_webpack_require_78641__(646),u=__nested_webpack_require_78641__(389),d=__nested_webpack_require_78641__(8)})(),__nested_webpack_exports__})(),module.exports=e()},14:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var i=r(537),s=r.n(i),n=r(645),o=r.n(n)()(s());o.push([e.id,".xterm{cursor:text;position:relative;user-select:none;-ms-user-select:none;-webkit-user-select:none}.xterm.focus,.xterm:focus{outline:none}.xterm .xterm-helpers{position:absolute;top:0;z-index:5}.xterm .xterm-helper-textarea{padding:0;border:0;margin:0;position:absolute;opacity:0;left:-9999em;top:0;width:0;height:0;z-index:-5;white-space:nowrap;overflow:hidden;resize:none}.xterm .composition-view{background:#000;color:#fff;display:none;position:absolute;white-space:nowrap;z-index:1}.xterm .composition-view.active{display:block}.xterm .xterm-viewport{background-color:#000;overflow-y:scroll;cursor:default;position:absolute;right:0;left:0;top:0;bottom:0}.xterm .xterm-screen{position:relative}.xterm .xterm-screen canvas{position:absolute;left:0;top:0}.xterm .xterm-scroll-area{visibility:hidden}.xterm-char-measure-element{display:inline-block;visibility:hidden;position:absolute;top:0;left:-9999em;line-height:normal}.xterm.enable-mouse-events{cursor:default}.xterm.xterm-cursor-pointer,.xterm .xterm-cursor-pointer{cursor:pointer}.xterm.column-select.focus{cursor:crosshair}.xterm .xterm-accessibility,.xterm .xterm-message{position:absolute;left:0;top:0;bottom:0;right:0;z-index:10;color:rgba(0,0,0,0);pointer-events:none}.xterm .live-region{position:absolute;left:-9999px;width:1px;height:1px;overflow:hidden}.xterm-dim{opacity:1 !important}.xterm-underline-1{text-decoration:underline}.xterm-underline-2{text-decoration:double underline}.xterm-underline-3{text-decoration:wavy underline}.xterm-underline-4{text-decoration:dotted underline}.xterm-underline-5{text-decoration:dashed underline}.xterm-overline{text-decoration:overline}.xterm-overline.xterm-underline-1{text-decoration:overline underline}.xterm-overline.xterm-underline-2{text-decoration:overline double underline}.xterm-overline.xterm-underline-3{text-decoration:overline wavy underline}.xterm-overline.xterm-underline-4{text-decoration:overline dotted underline}.xterm-overline.xterm-underline-5{text-decoration:overline dashed underline}.xterm-strikethrough{text-decoration:line-through}.xterm-screen .xterm-decoration-container .xterm-decoration{z-index:6;position:absolute}.xterm-screen .xterm-decoration-container .xterm-decoration.xterm-decoration-top-layer{z-index:7}.xterm-decoration-overview-ruler{z-index:8;position:absolute;top:0;right:0;pointer-events:none}.xterm-decoration-top{z-index:2;position:relative}","",{version:3,sources:["webpack://./node_modules/xterm/css/xterm.css"],names:[],mappings:"AAqCA,OACI,WAAA,CACA,iBAAA,CACA,gBAAA,CACA,oBAAA,CACA,wBAAA,CAGJ,0BAEI,YAAA,CAGJ,sBACI,iBAAA,CACA,KAAA,CAKA,SAAA,CAGJ,8BACI,SAAA,CACA,QAAA,CACA,QAAA,CAEA,iBAAA,CACA,SAAA,CACA,YAAA,CACA,KAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CAEA,kBAAA,CACA,eAAA,CACA,WAAA,CAGJ,yBAEI,eAAA,CACA,UAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,gCACI,aAAA,CAGJ,uBAEI,qBAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,OAAA,CACA,MAAA,CACA,KAAA,CACA,QAAA,CAGJ,qBACI,iBAAA,CAGJ,4BACI,iBAAA,CACA,MAAA,CACA,KAAA,CAGJ,0BACI,iBAAA,CAGJ,4BACI,oBAAA,CACA,iBAAA,CACA,iBAAA,CACA,KAAA,CACA,YAAA,CACA,kBAAA,CAGJ,2BAEI,cAAA,CAGJ,yDAEI,cAAA,CAGJ,2BAEI,gBAAA,CAGJ,kDAEI,iBAAA,CACA,MAAA,CACA,KAAA,CACA,QAAA,CACA,OAAA,CACA,UAAA,CACA,mBAAA,CACA,mBAAA,CAGJ,oBACI,iBAAA,CACA,YAAA,CACA,SAAA,CACA,UAAA,CACA,eAAA,CAGJ,WAGI,oBAAA,CAGJ,mBAAA,yBAAA,CACA,mBAAA,gCAAA,CACA,mBAAA,8BAAA,CACA,mBAAA,gCAAA,CACA,mBAAA,gCAAA,CAEA,gBACI,wBAAA,CAGJ,kCAAA,kCAAA,CACA,kCAAA,yCAAA,CACA,kCAAA,uCAAA,CACA,kCAAA,yCAAA,CACA,kCAAA,yCAAA,CAEA,qBACI,4BAAA,CAGJ,4DACC,SAAA,CACA,iBAAA,CAGD,uFACC,SAAA,CAGD,iCACI,SAAA,CACA,iBAAA,CACA,KAAA,CACA,OAAA,CACA,mBAAA,CAGJ,sBACI,SAAA,CACA,iBAAA",sourcesContent:['/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n * @license MIT\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author\'s permission):\n *   Fabrice Bellard\'s javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */\n\n/**\n *  Default styles for xterm.js\n */\n\n.xterm {\n    cursor: text;\n    position: relative;\n    user-select: none;\n    -ms-user-select: none;\n    -webkit-user-select: none;\n}\n\n.xterm.focus,\n.xterm:focus {\n    outline: none;\n}\n\n.xterm .xterm-helpers {\n    position: absolute;\n    top: 0;\n    /**\n     * The z-index of the helpers must be higher than the canvases in order for\n     * IMEs to appear on top.\n     */\n    z-index: 5;\n}\n\n.xterm .xterm-helper-textarea {\n    padding: 0;\n    border: 0;\n    margin: 0;\n    /* Move textarea out of the screen to the far left, so that the cursor is not visible */\n    position: absolute;\n    opacity: 0;\n    left: -9999em;\n    top: 0;\n    width: 0;\n    height: 0;\n    z-index: -5;\n    /** Prevent wrapping so the IME appears against the textarea at the correct position */\n    white-space: nowrap;\n    overflow: hidden;\n    resize: none;\n}\n\n.xterm .composition-view {\n    /* TODO: Composition position got messed up somewhere */\n    background: #000;\n    color: #FFF;\n    display: none;\n    position: absolute;\n    white-space: nowrap;\n    z-index: 1;\n}\n\n.xterm .composition-view.active {\n    display: block;\n}\n\n.xterm .xterm-viewport {\n    /* On OS X this is required in order for the scroll bar to appear fully opaque */\n    background-color: #000;\n    overflow-y: scroll;\n    cursor: default;\n    position: absolute;\n    right: 0;\n    left: 0;\n    top: 0;\n    bottom: 0;\n}\n\n.xterm .xterm-screen {\n    position: relative;\n}\n\n.xterm .xterm-screen canvas {\n    position: absolute;\n    left: 0;\n    top: 0;\n}\n\n.xterm .xterm-scroll-area {\n    visibility: hidden;\n}\n\n.xterm-char-measure-element {\n    display: inline-block;\n    visibility: hidden;\n    position: absolute;\n    top: 0;\n    left: -9999em;\n    line-height: normal;\n}\n\n.xterm.enable-mouse-events {\n    /* When mouse events are enabled (eg. tmux), revert to the standard pointer cursor */\n    cursor: default;\n}\n\n.xterm.xterm-cursor-pointer,\n.xterm .xterm-cursor-pointer {\n    cursor: pointer;\n}\n\n.xterm.column-select.focus {\n    /* Column selection mode */\n    cursor: crosshair;\n}\n\n.xterm .xterm-accessibility,\n.xterm .xterm-message {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: 10;\n    color: transparent;\n    pointer-events: none;\n}\n\n.xterm .live-region {\n    position: absolute;\n    left: -9999px;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n.xterm-dim {\n    /* Dim should not apply to background, so the opacity of the foreground color is applied\n     * explicitly in the generated class and reset to 1 here */\n    opacity: 1 !important;\n}\n\n.xterm-underline-1 { text-decoration: underline; }\n.xterm-underline-2 { text-decoration: double underline; }\n.xterm-underline-3 { text-decoration: wavy underline; }\n.xterm-underline-4 { text-decoration: dotted underline; }\n.xterm-underline-5 { text-decoration: dashed underline; }\n\n.xterm-overline {\n    text-decoration: overline;\n}\n\n.xterm-overline.xterm-underline-1 { text-decoration: overline underline; }\n.xterm-overline.xterm-underline-2 { text-decoration: overline double underline; }\n.xterm-overline.xterm-underline-3 { text-decoration: overline wavy underline; }\n.xterm-overline.xterm-underline-4 { text-decoration: overline dotted underline; }\n.xterm-overline.xterm-underline-5 { text-decoration: overline dashed underline; }\n\n.xterm-strikethrough {\n    text-decoration: line-through;\n}\n\n.xterm-screen .xterm-decoration-container .xterm-decoration {\n\tz-index: 6;\n\tposition: absolute;\n}\n\n.xterm-screen .xterm-decoration-container .xterm-decoration.xterm-decoration-top-layer {\n\tz-index: 7;\n}\n\n.xterm-decoration-overview-ruler {\n    z-index: 8;\n    position: absolute;\n    top: 0;\n    right: 0;\n    pointer-events: none;\n}\n\n.xterm-decoration-top {\n    z-index: 2;\n    position: relative;\n}\n'],sourceRoot:""}]);const a=o},20:(e,t,r)=>{"use strict";r.d(t,{Z:()=>a});var i=r(537),s=r.n(i),n=r(645),o=r.n(n)()(s());o.push([e.id,".sol-header{display:flex}.power-options{display:block;position:absolute;right:1%}.terminal{text-align:left;display:block}.terminal_xterm{display:inline-block}","",{version:3,sources:["webpack://./src/reactjs/SerialOverLAN/sol.scss"],names:[],mappings:"AAIA,YACC,YAAA,CAED,eACC,aAAA,CACA,iBAAA,CACA,QAAA,CAED,UACC,eAAA,CACA,aAAA,CAED,gBACC,oBAAA",sourcesContent:["/*********************************************************************\n* Copyright (c) Intel Corporation 2019\n* SPDX-License-Identifier: Apache-2.0\n**********************************************************************/\n.sol-header {\n\tdisplay: flex;\n}\n.power-options {\n\tdisplay: block;\n\tposition: absolute;\n\tright: 1%;\n}\n.terminal {\n\ttext-align: left;\n\tdisplay:block;\n}\n.terminal_xterm{\n\tdisplay:inline-block;\n}"],sourceRoot:""}]);const a=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",i=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),i&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),i&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,i,s,n){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var h=[].concat(e[c]);i&&o[h[0]]||(void 0!==n&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=n),r&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=r):h[2]=r),s&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=s):h[4]="".concat(s)),t.push(h))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),n="/*# ".concat(s," */");return[t].concat([n]).join("\n")}return[t].join("\n")}},448:(e,t,r)=>{"use strict";var i=r(294),s=r(840);function n(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,a={};function l(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(a[e]=t,e=0;e<t.length;e++)o.add(t[e])}var h=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),u=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},p={};function v(e,t,r,i,s,n,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=s,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=n,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var _=/[\-:]([a-z])/g;function m(e){return e[1].toUpperCase()}function b(e,t,r,i){var s=g.hasOwnProperty(t)?g[t]:null;(null!==s?0!==s.type:i||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,r,i){if(null==t||function(e,t,r,i){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,i))return!0;if(i)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,s,i)&&(r=null),i||null===s?function(e){return!!u.call(p,e)||!u.call(f,e)&&(d.test(e)?p[e]=!0:(f[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):s.mustUseProperty?e[s.propertyName]=null===r?3!==s.type&&"":r:(t=s.attributeName,i=s.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(s=s.type)||4===s&&!0===r?"":""+r,i?e.setAttributeNS(i,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(_,m);g[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(_,m);g[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(_,m);g[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var S=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=Symbol.for("react.element"),C=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),k=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),x=Symbol.for("react.context"),L=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),D=Symbol.for("react.memo"),I=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var P=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var B=Symbol.iterator;function O(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}var M,N=Object.assign;function F(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var H=!1;function U(e,t){if(!e||H)return"";H=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var i=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){i=e}e.call(t.prototype)}else{try{throw Error()}catch(e){i=e}e()}}catch(t){if(t&&i&&"string"==typeof t.stack){for(var s=t.stack.split("\n"),n=i.stack.split("\n"),o=s.length-1,a=n.length-1;1<=o&&0<=a&&s[o]!==n[a];)a--;for(;1<=o&&0<=a;o--,a--)if(s[o]!==n[a]){if(1!==o||1!==a)do{if(o--,0>--a||s[o]!==n[a]){var l="\n"+s[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=o&&0<=a);break}}}finally{H=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?F(e):""}function z(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case C:return"Portal";case E:return"Profiler";case k:return"StrictMode";case R:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case x:return(e.displayName||"Context")+".Consumer";case A:return(e._context.displayName||"Context")+".Provider";case L:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case D:return null!==(t=e.displayName||null)?t:$(e.type)||"Memo";case I:t=e._payload,e=e._init;try{return $(e(t))}catch(e){}}return null}function j(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return $(t);case 8:return t===k?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var s=r.get,n=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){i=""+e,n.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),i="";return e&&(i=K(e)?e.checked?"true":"false":e.value),(e=i)!==r&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function G(e,t){var r=t.checked;return N({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function Y(e,t){var r=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;r=W(null!=t.value?t.value:r),e._wrapperState={initialChecked:i,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function J(e,t){X(e,t);var r=W(t.value),i=t.type;if(null!=r)"number"===i?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,r):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Q(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function ee(e,t,r){"number"===t&&Z(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var te=Array.isArray;function re(e,t,r,i){if(e=e.options,t){t={};for(var s=0;s<r.length;s++)t["$"+r[s]]=!0;for(r=0;r<e.length;r++)s=t.hasOwnProperty("$"+e[r].value),e[r].selected!==s&&(e[r].selected=s),s&&i&&(e[r].defaultSelected=!0)}else{for(r=""+W(r),t=null,s=0;s<e.length;s++){if(e[s].value===r)return e[s].selected=!0,void(i&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(n(91));return N({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(n(92));if(te(r)){if(1<r.length)throw Error(n(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:W(r)}}function ne(e,t){var r=W(t.value),i=W(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=i&&(e.defaultValue=""+i)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,he,ue=(he=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,i){MSApp.execUnsafeLocalFunction((function(){return he(e,t)}))}:he);function de(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function ve(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var i=0===r.indexOf("--"),s=ve(r,t[r],i);"float"===r&&(r="cssFloat"),i?e.setProperty(r,s):e[r]=s}}Object.keys(fe).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var _e=N({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function me(e,t){if(t){if(_e[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(n(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(n(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(n(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(n(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Se=null;function ye(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,we=null,ke=null;function Ee(e){if(e=ms(e)){if("function"!=typeof Ce)throw Error(n(280));var t=e.stateNode;t&&(t=Ss(t),Ce(e.stateNode,e.type,t))}}function Ae(e){we?ke?ke.push(e):ke=[e]:we=e}function xe(){if(we){var e=we,t=ke;if(ke=we=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function Le(e,t){return e(t)}function Re(){}var Te=!1;function De(e,t,r){if(Te)return e(t,r);Te=!0;try{return Le(e,t,r)}finally{Te=!1,(null!==we||null!==ke)&&(Re(),xe())}}function Ie(e,t){var r=e.stateNode;if(null===r)return null;var i=Ss(r);if(null===i)return null;r=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(n(231,t,typeof r));return r}var Pe=!1;if(h)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Pe=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(he){Pe=!1}function Oe(e,t,r,i,s,n,o,a,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var Me=!1,Ne=null,Fe=!1,He=null,Ue={onError:function(e){Me=!0,Ne=e}};function ze(e,t,r,i,s,n,o,a,l){Me=!1,Ne=null,Oe.apply(Ue,arguments)}function $e(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function We(e){if($e(e)!==e)throw Error(n(188))}function Ke(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=$e(e)))throw Error(n(188));return t!==e?null:e}for(var r=e,i=t;;){var s=r.return;if(null===s)break;var o=s.alternate;if(null===o){if(null!==(i=s.return)){r=i;continue}break}if(s.child===o.child){for(o=s.child;o;){if(o===r)return We(s),e;if(o===i)return We(s),t;o=o.sibling}throw Error(n(188))}if(r.return!==i.return)r=s,i=o;else{for(var a=!1,l=s.child;l;){if(l===r){a=!0,r=s,i=o;break}if(l===i){a=!0,i=s,r=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===r){a=!0,r=o,i=s;break}if(l===i){a=!0,i=o,r=s;break}l=l.sibling}if(!a)throw Error(n(189))}}if(r.alternate!==i)throw Error(n(190))}if(3!==r.tag)throw Error(n(188));return r.stateNode.current===r?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var qe=s.unstable_scheduleCallback,Ze=s.unstable_cancelCallback,Ge=s.unstable_shouldYield,Ye=s.unstable_requestPaint,Xe=s.unstable_now,Je=s.unstable_getCurrentPriorityLevel,Qe=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,rt=s.unstable_LowPriority,it=s.unstable_IdlePriority,st=null,nt=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(at(e)/lt|0)|0},at=Math.log,lt=Math.LN2,ct=64,ht=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var r=e.pendingLanes;if(0===r)return 0;var i=0,s=e.suspendedLanes,n=e.pingedLanes,o=268435455&r;if(0!==o){var a=o&~s;0!==a?i=ut(a):0!=(n&=o)&&(i=ut(n))}else 0!=(o=r&~s)?i=ut(o):0!==n&&(i=ut(n));if(0===i)return 0;if(0!==t&&t!==i&&0==(t&s)&&((s=i&-i)>=(n=t&-t)||16===s&&0!=(4194240&n)))return t;if(0!=(4&i)&&(i|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=i;0<t;)s=1<<(r=31-ot(t)),i|=e[r],t&=~s;return i}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function _t(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=r}function mt(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var i=31-ot(r),s=1<<i;s&t|e[i]&t&&(e[i]|=t),r&=~s}}var bt=0;function St(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var yt,Ct,wt,kt,Et,At=!1,xt=[],Lt=null,Rt=null,Tt=null,Dt=new Map,It=new Map,Pt=[],Bt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":Lt=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":Dt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":It.delete(t.pointerId)}}function Mt(e,t,r,i,s,n){return null===e||e.nativeEvent!==n?(e={blockedOn:t,domEventName:r,eventSystemFlags:i,nativeEvent:n,targetContainers:[s]},null!==t&&null!==(t=ms(t))&&Ct(t),e):(e.eventSystemFlags|=i,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Nt(e){var t=_s(e.target);if(null!==t){var r=$e(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=je(r)))return e.blockedOn=t,void Et(e.priority,(function(){wt(r)}))}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=ms(r))&&Ct(t),e.blockedOn=r,!1;var i=new(r=e.nativeEvent).constructor(r.type,r);Se=i,r.target.dispatchEvent(i),Se=null,t.shift()}return!0}function Ht(e,t,r){Ft(e)&&r.delete(t)}function Ut(){At=!1,null!==Lt&&Ft(Lt)&&(Lt=null),null!==Rt&&Ft(Rt)&&(Rt=null),null!==Tt&&Ft(Tt)&&(Tt=null),Dt.forEach(Ht),It.forEach(Ht)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,At||(At=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Ut)))}function $t(e){function t(t){return zt(t,e)}if(0<xt.length){zt(xt[0],e);for(var r=1;r<xt.length;r++){var i=xt[r];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==Lt&&zt(Lt,e),null!==Rt&&zt(Rt,e),null!==Tt&&zt(Tt,e),Dt.forEach(t),It.forEach(t),r=0;r<Pt.length;r++)(i=Pt[r]).blockedOn===e&&(i.blockedOn=null);for(;0<Pt.length&&null===(r=Pt[0]).blockedOn;)Nt(r),null===r.blockedOn&&Pt.shift()}var jt=S.ReactCurrentBatchConfig,Wt=!0;function Kt(e,t,r,i){var s=bt,n=jt.transition;jt.transition=null;try{bt=1,qt(e,t,r,i)}finally{bt=s,jt.transition=n}}function Vt(e,t,r,i){var s=bt,n=jt.transition;jt.transition=null;try{bt=4,qt(e,t,r,i)}finally{bt=s,jt.transition=n}}function qt(e,t,r,i){if(Wt){var s=Gt(e,t,r,i);if(null===s)ji(e,t,i,Zt,r),Ot(e,i);else if(function(e,t,r,i,s){switch(t){case"focusin":return Lt=Mt(Lt,e,t,r,i,s),!0;case"dragenter":return Rt=Mt(Rt,e,t,r,i,s),!0;case"mouseover":return Tt=Mt(Tt,e,t,r,i,s),!0;case"pointerover":var n=s.pointerId;return Dt.set(n,Mt(Dt.get(n)||null,e,t,r,i,s)),!0;case"gotpointercapture":return n=s.pointerId,It.set(n,Mt(It.get(n)||null,e,t,r,i,s)),!0}return!1}(s,e,t,r,i))i.stopPropagation();else if(Ot(e,i),4&t&&-1<Bt.indexOf(e)){for(;null!==s;){var n=ms(s);if(null!==n&&yt(n),null===(n=Gt(e,t,r,i))&&ji(e,t,i,Zt,r),n===s)break;s=n}null!==s&&i.stopPropagation()}else ji(e,t,i,null,r)}}var Zt=null;function Gt(e,t,r,i){if(Zt=null,null!==(e=_s(e=ye(i))))if(null===(t=$e(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=je(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Zt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Qe:return 1;case et:return 4;case tt:case rt:return 16;case it:return 536870912;default:return 16}default:return 16}}var Xt=null,Jt=null,Qt=null;function er(){if(Qt)return Qt;var e,t,r=Jt,i=r.length,s="value"in Xt?Xt.value:Xt.textContent,n=s.length;for(e=0;e<i&&r[e]===s[e];e++);var o=i-e;for(t=1;t<=o&&r[i-t]===s[n-t];t++);return Qt=s.slice(e,1<t?1-t:void 0)}function tr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rr(){return!0}function ir(){return!1}function sr(e){function t(t,r,i,s,n){for(var o in this._reactName=t,this._targetInst=i,this.type=r,this.nativeEvent=s,this.target=n,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(s):s[o]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?rr:ir,this.isPropagationStopped=ir,this}return N(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rr)},persist:function(){},isPersistent:rr}),t}var nr,or,ar,lr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cr=sr(lr),hr=N({},lr,{view:0,detail:0}),ur=sr(hr),dr=N({},hr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ar&&(ar&&"mousemove"===e.type?(nr=e.screenX-ar.screenX,or=e.screenY-ar.screenY):or=nr=0,ar=e),nr)},movementY:function(e){return"movementY"in e?e.movementY:or}}),fr=sr(dr),pr=sr(N({},dr,{dataTransfer:0})),vr=sr(N({},hr,{relatedTarget:0})),gr=sr(N({},lr,{animationName:0,elapsedTime:0,pseudoElement:0})),_r=N({},lr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),mr=sr(_r),br=sr(N({},lr,{data:0})),Sr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},yr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function kr(){return wr}var Er=N({},hr,{key:function(e){if(e.key){var t=Sr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?yr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kr,charCode:function(e){return"keypress"===e.type?tr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ar=sr(Er),xr=sr(N({},dr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Lr=sr(N({},hr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kr})),Rr=sr(N({},lr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tr=N({},dr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dr=sr(Tr),Ir=[9,13,27,32],Pr=h&&"CompositionEvent"in window,Br=null;h&&"documentMode"in document&&(Br=document.documentMode);var Or=h&&"TextEvent"in window&&!Br,Mr=h&&(!Pr||Br&&8<Br&&11>=Br),Nr=String.fromCharCode(32),Fr=!1;function Hr(e,t){switch(e){case"keyup":return-1!==Ir.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ur(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var zr=!1,$r={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!$r[e.type]:"textarea"===t}function Wr(e,t,r,i){Ae(i),0<(t=Ki(t,"onChange")).length&&(r=new cr("onChange","change",null,r,i),e.push({event:r,listeners:t}))}var Kr=null,Vr=null;function qr(e){Ni(e,0)}function Zr(e){if(q(bs(e)))return e}function Gr(e,t){if("change"===e)return t}var Yr=!1;if(h){var Xr;if(h){var Jr="oninput"in document;if(!Jr){var Qr=document.createElement("div");Qr.setAttribute("oninput","return;"),Jr="function"==typeof Qr.oninput}Xr=Jr}else Xr=!1;Yr=Xr&&(!document.documentMode||9<document.documentMode)}function ei(){Kr&&(Kr.detachEvent("onpropertychange",ti),Vr=Kr=null)}function ti(e){if("value"===e.propertyName&&Zr(Vr)){var t=[];Wr(t,Vr,e,ye(e)),De(qr,t)}}function ri(e,t,r){"focusin"===e?(ei(),Vr=r,(Kr=t).attachEvent("onpropertychange",ti)):"focusout"===e&&ei()}function ii(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zr(Vr)}function si(e,t){if("click"===e)return Zr(t)}function ni(e,t){if("input"===e||"change"===e)return Zr(t)}var oi="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ai(e,t){if(oi(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),i=Object.keys(t);if(r.length!==i.length)return!1;for(i=0;i<r.length;i++){var s=r[i];if(!u.call(t,s)||!oi(e[s],t[s]))return!1}return!0}function li(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ci(e,t){var r,i=li(e);for(e=0;i;){if(3===i.nodeType){if(r=e+i.textContent.length,e<=t&&r>=t)return{node:i,offset:t-e};e=r}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=li(i)}}function hi(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hi(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ui(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=Z((e=t.contentWindow).document)}return t}function di(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fi(e){var t=ui(),r=e.focusedElem,i=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&hi(r.ownerDocument.documentElement,r)){if(null!==i&&di(r))if(t=i.start,void 0===(e=i.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=r.textContent.length,n=Math.min(i.start,s);i=void 0===i.end?n:Math.min(i.end,s),!e.extend&&n>i&&(s=i,i=n,n=s),s=ci(r,n);var o=ci(r,i);s&&o&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),n>i?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var pi=h&&"documentMode"in document&&11>=document.documentMode,vi=null,gi=null,_i=null,mi=!1;function bi(e,t,r){var i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;mi||null==vi||vi!==Z(i)||(i="selectionStart"in(i=vi)&&di(i)?{start:i.selectionStart,end:i.selectionEnd}:{anchorNode:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset},_i&&ai(_i,i)||(_i=i,0<(i=Ki(gi,"onSelect")).length&&(t=new cr("onSelect","select",null,t,r),e.push({event:t,listeners:i}),t.target=vi)))}function Si(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var yi={animationend:Si("Animation","AnimationEnd"),animationiteration:Si("Animation","AnimationIteration"),animationstart:Si("Animation","AnimationStart"),transitionend:Si("Transition","TransitionEnd")},Ci={},wi={};function ki(e){if(Ci[e])return Ci[e];if(!yi[e])return e;var t,r=yi[e];for(t in r)if(r.hasOwnProperty(t)&&t in wi)return Ci[e]=r[t];return e}h&&(wi=document.createElement("div").style,"AnimationEvent"in window||(delete yi.animationend.animation,delete yi.animationiteration.animation,delete yi.animationstart.animation),"TransitionEvent"in window||delete yi.transitionend.transition);var Ei=ki("animationend"),Ai=ki("animationiteration"),xi=ki("animationstart"),Li=ki("transitionend"),Ri=new Map,Ti="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Di(e,t){Ri.set(e,t),l(t,[e])}for(var Ii=0;Ii<Ti.length;Ii++){var Pi=Ti[Ii];Di(Pi.toLowerCase(),"on"+(Pi[0].toUpperCase()+Pi.slice(1)))}Di(Ei,"onAnimationEnd"),Di(Ai,"onAnimationIteration"),Di(xi,"onAnimationStart"),Di("dblclick","onDoubleClick"),Di("focusin","onFocus"),Di("focusout","onBlur"),Di(Li,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Bi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Oi=new Set("cancel close invalid load scroll toggle".split(" ").concat(Bi));function Mi(e,t,r){var i=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,i,s,o,a,l,c){if(ze.apply(this,arguments),Me){if(!Me)throw Error(n(198));var h=Ne;Me=!1,Ne=null,Fe||(Fe=!0,He=h)}}(i,t,void 0,e),e.currentTarget=null}function Ni(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var i=e[r],s=i.event;i=i.listeners;e:{var n=void 0;if(t)for(var o=i.length-1;0<=o;o--){var a=i[o],l=a.instance,c=a.currentTarget;if(a=a.listener,l!==n&&s.isPropagationStopped())break e;Mi(s,a,c),n=l}else for(o=0;o<i.length;o++){if(l=(a=i[o]).instance,c=a.currentTarget,a=a.listener,l!==n&&s.isPropagationStopped())break e;Mi(s,a,c),n=l}}}if(Fe)throw e=He,Fe=!1,He=null,e}function Fi(e,t){var r=t[ps];void 0===r&&(r=t[ps]=new Set);var i=e+"__bubble";r.has(i)||($i(t,e,2,!1),r.add(i))}function Hi(e,t,r){var i=0;t&&(i|=4),$i(r,e,i,t)}var Ui="_reactListening"+Math.random().toString(36).slice(2);function zi(e){if(!e[Ui]){e[Ui]=!0,o.forEach((function(t){"selectionchange"!==t&&(Oi.has(t)||Hi(t,!1,e),Hi(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ui]||(t[Ui]=!0,Hi("selectionchange",!1,t))}}function $i(e,t,r,i){switch(Yt(t)){case 1:var s=Kt;break;case 4:s=Vt;break;default:s=qt}r=s.bind(null,t,r,e),s=void 0,!Pe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),i?void 0!==s?e.addEventListener(t,r,{capture:!0,passive:s}):e.addEventListener(t,r,!0):void 0!==s?e.addEventListener(t,r,{passive:s}):e.addEventListener(t,r,!1)}function ji(e,t,r,i,s){var n=i;if(0==(1&t)&&0==(2&t)&&null!==i)e:for(;;){if(null===i)return;var o=i.tag;if(3===o||4===o){var a=i.stateNode.containerInfo;if(a===s||8===a.nodeType&&a.parentNode===s)break;if(4===o)for(o=i.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===s||8===l.nodeType&&l.parentNode===s))return;o=o.return}for(;null!==a;){if(null===(o=_s(a)))return;if(5===(l=o.tag)||6===l){i=n=o;continue e}a=a.parentNode}}i=i.return}De((function(){var i=n,s=ye(r),o=[];e:{var a=Ri.get(e);if(void 0!==a){var l=cr,c=e;switch(e){case"keypress":if(0===tr(r))break e;case"keydown":case"keyup":l=Ar;break;case"focusin":c="focus",l=vr;break;case"focusout":c="blur",l=vr;break;case"beforeblur":case"afterblur":l=vr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=pr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Lr;break;case Ei:case Ai:case xi:l=gr;break;case Li:l=Rr;break;case"scroll":l=ur;break;case"wheel":l=Dr;break;case"copy":case"cut":case"paste":l=mr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=xr}var h=0!=(4&t),u=!h&&"scroll"===e,d=h?null!==a?a+"Capture":null:a;h=[];for(var f,p=i;null!==p;){var v=(f=p).stateNode;if(5===f.tag&&null!==v&&(f=v,null!==d&&null!=(v=Ie(p,d))&&h.push(Wi(p,v,f))),u)break;p=p.return}0<h.length&&(a=new l(a,c,null,r,s),o.push({event:a,listeners:h}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(a="mouseover"===e||"pointerover"===e)||r===Se||!(c=r.relatedTarget||r.fromElement)||!_s(c)&&!c[fs])&&(l||a)&&(a=s.window===s?s:(a=s.ownerDocument)?a.defaultView||a.parentWindow:window,l?(l=i,null!==(c=(c=r.relatedTarget||r.toElement)?_s(c):null)&&(c!==(u=$e(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=i),l!==c)){if(h=fr,v="onMouseLeave",d="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(h=xr,v="onPointerLeave",d="onPointerEnter",p="pointer"),u=null==l?a:bs(l),f=null==c?a:bs(c),(a=new h(v,p+"leave",l,r,s)).target=u,a.relatedTarget=f,v=null,_s(s)===i&&((h=new h(d,p+"enter",c,r,s)).target=f,h.relatedTarget=u,v=h),u=v,l&&c)e:{for(d=c,p=0,f=h=l;f;f=Vi(f))p++;for(f=0,v=d;v;v=Vi(v))f++;for(;0<p-f;)h=Vi(h),p--;for(;0<f-p;)d=Vi(d),f--;for(;p--;){if(h===d||null!==d&&h===d.alternate)break e;h=Vi(h),d=Vi(d)}h=null}else h=null;null!==l&&qi(o,a,l,h,!1),null!==c&&null!==u&&qi(o,u,c,h,!0)}if("select"===(l=(a=i?bs(i):window).nodeName&&a.nodeName.toLowerCase())||"input"===l&&"file"===a.type)var g=Gr;else if(jr(a))if(Yr)g=ni;else{g=ii;var _=ri}else(l=a.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(g=si);switch(g&&(g=g(e,i))?Wr(o,g,r,s):(_&&_(e,a,i),"focusout"===e&&(_=a._wrapperState)&&_.controlled&&"number"===a.type&&ee(a,"number",a.value)),_=i?bs(i):window,e){case"focusin":(jr(_)||"true"===_.contentEditable)&&(vi=_,gi=i,_i=null);break;case"focusout":_i=gi=vi=null;break;case"mousedown":mi=!0;break;case"contextmenu":case"mouseup":case"dragend":mi=!1,bi(o,r,s);break;case"selectionchange":if(pi)break;case"keydown":case"keyup":bi(o,r,s)}var m;if(Pr)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else zr?Hr(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Mr&&"ko"!==r.locale&&(zr||"onCompositionStart"!==b?"onCompositionEnd"===b&&zr&&(m=er()):(Jt="value"in(Xt=s)?Xt.value:Xt.textContent,zr=!0)),0<(_=Ki(i,b)).length&&(b=new br(b,e,null,r,s),o.push({event:b,listeners:_}),(m||null!==(m=Ur(r)))&&(b.data=m))),(m=Or?function(e,t){switch(e){case"compositionend":return Ur(t);case"keypress":return 32!==t.which?null:(Fr=!0,Nr);case"textInput":return(e=t.data)===Nr&&Fr?null:e;default:return null}}(e,r):function(e,t){if(zr)return"compositionend"===e||!Pr&&Hr(e,t)?(e=er(),Qt=Jt=Xt=null,zr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mr&&"ko"!==t.locale?null:t.data}}(e,r))&&0<(i=Ki(i,"onBeforeInput")).length&&(s=new br("onBeforeInput","beforeinput",null,r,s),o.push({event:s,listeners:i}),s.data=m)}Ni(o,t)}))}function Wi(e,t,r){return{instance:e,listener:t,currentTarget:r}}function Ki(e,t){for(var r=t+"Capture",i=[];null!==e;){var s=e,n=s.stateNode;5===s.tag&&null!==n&&(s=n,null!=(n=Ie(e,r))&&i.unshift(Wi(e,n,s)),null!=(n=Ie(e,t))&&i.push(Wi(e,n,s))),e=e.return}return i}function Vi(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qi(e,t,r,i,s){for(var n=t._reactName,o=[];null!==r&&r!==i;){var a=r,l=a.alternate,c=a.stateNode;if(null!==l&&l===i)break;5===a.tag&&null!==c&&(a=c,s?null!=(l=Ie(r,n))&&o.unshift(Wi(r,l,a)):s||null!=(l=Ie(r,n))&&o.push(Wi(r,l,a))),r=r.return}0!==o.length&&e.push({event:t,listeners:o})}var Zi=/\r\n?/g,Gi=/\u0000|\uFFFD/g;function Yi(e){return("string"==typeof e?e:""+e).replace(Zi,"\n").replace(Gi,"")}function Xi(e,t,r){if(t=Yi(t),Yi(e)!==t&&r)throw Error(n(425))}function Ji(){}var Qi=null,es=null;function ts(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rs="function"==typeof setTimeout?setTimeout:void 0,is="function"==typeof clearTimeout?clearTimeout:void 0,ss="function"==typeof Promise?Promise:void 0,ns="function"==typeof queueMicrotask?queueMicrotask:void 0!==ss?function(e){return ss.resolve(null).then(e).catch(os)}:rs;function os(e){setTimeout((function(){throw e}))}function as(e,t){var r=t,i=0;do{var s=r.nextSibling;if(e.removeChild(r),s&&8===s.nodeType)if("/$"===(r=s.data)){if(0===i)return e.removeChild(s),void $t(t);i--}else"$"!==r&&"$?"!==r&&"$!"!==r||i++;r=s}while(r);$t(t)}function ls(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cs(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var hs=Math.random().toString(36).slice(2),us="__reactFiber$"+hs,ds="__reactProps$"+hs,fs="__reactContainer$"+hs,ps="__reactEvents$"+hs,vs="__reactListeners$"+hs,gs="__reactHandles$"+hs;function _s(e){var t=e[us];if(t)return t;for(var r=e.parentNode;r;){if(t=r[fs]||r[us]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=cs(e);null!==e;){if(r=e[us])return r;e=cs(e)}return t}r=(e=r).parentNode}return null}function ms(e){return!(e=e[us]||e[fs])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bs(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(n(33))}function Ss(e){return e[ds]||null}var ys=[],Cs=-1;function ws(e){return{current:e}}function ks(e){0>Cs||(e.current=ys[Cs],ys[Cs]=null,Cs--)}function Es(e,t){Cs++,ys[Cs]=e.current,e.current=t}var As={},xs=ws(As),Ls=ws(!1),Rs=As;function Ts(e,t){var r=e.type.contextTypes;if(!r)return As;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var s,n={};for(s in r)n[s]=t[s];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=n),n}function Ds(e){return null!=e.childContextTypes}function Is(){ks(Ls),ks(xs)}function Ps(e,t,r){if(xs.current!==As)throw Error(n(168));Es(xs,t),Es(Ls,r)}function Bs(e,t,r){var i=e.stateNode;if(t=t.childContextTypes,"function"!=typeof i.getChildContext)return r;for(var s in i=i.getChildContext())if(!(s in t))throw Error(n(108,j(e)||"Unknown",s));return N({},r,i)}function Os(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||As,Rs=xs.current,Es(xs,e),Es(Ls,Ls.current),!0}function Ms(e,t,r){var i=e.stateNode;if(!i)throw Error(n(169));r?(e=Bs(e,t,Rs),i.__reactInternalMemoizedMergedChildContext=e,ks(Ls),ks(xs),Es(xs,e)):ks(Ls),Es(Ls,r)}var Ns=null,Fs=!1,Hs=!1;function Us(e){null===Ns?Ns=[e]:Ns.push(e)}function zs(){if(!Hs&&null!==Ns){Hs=!0;var e=0,t=bt;try{var r=Ns;for(bt=1;e<r.length;e++){var i=r[e];do{i=i(!0)}while(null!==i)}Ns=null,Fs=!1}catch(t){throw null!==Ns&&(Ns=Ns.slice(e+1)),qe(Qe,zs),t}finally{bt=t,Hs=!1}}return null}var $s=[],js=0,Ws=null,Ks=0,Vs=[],qs=0,Zs=null,Gs=1,Ys="";function Xs(e,t){$s[js++]=Ks,$s[js++]=Ws,Ws=e,Ks=t}function Js(e,t,r){Vs[qs++]=Gs,Vs[qs++]=Ys,Vs[qs++]=Zs,Zs=e;var i=Gs;e=Ys;var s=32-ot(i)-1;i&=~(1<<s),r+=1;var n=32-ot(t)+s;if(30<n){var o=s-s%5;n=(i&(1<<o)-1).toString(32),i>>=o,s-=o,Gs=1<<32-ot(t)+s|r<<s|i,Ys=n+e}else Gs=1<<n|r<<s|i,Ys=e}function Qs(e){null!==e.return&&(Xs(e,1),Js(e,1,0))}function en(e){for(;e===Ws;)Ws=$s[--js],$s[js]=null,Ks=$s[--js],$s[js]=null;for(;e===Zs;)Zs=Vs[--qs],Vs[qs]=null,Ys=Vs[--qs],Vs[qs]=null,Gs=Vs[--qs],Vs[qs]=null}var tn=null,rn=null,sn=!1,nn=null;function on(e,t){var r=Ic(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function an(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,tn=e,rn=ls(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,tn=e,rn=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==Zs?{id:Gs,overflow:Ys}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=Ic(18,null,null,0)).stateNode=t,r.return=e,e.child=r,tn=e,rn=null,!0);default:return!1}}function ln(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function cn(e){if(sn){var t=rn;if(t){var r=t;if(!an(e,t)){if(ln(e))throw Error(n(418));t=ls(r.nextSibling);var i=tn;t&&an(e,t)?on(i,r):(e.flags=-4097&e.flags|2,sn=!1,tn=e)}}else{if(ln(e))throw Error(n(418));e.flags=-4097&e.flags|2,sn=!1,tn=e}}}function hn(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;tn=e}function un(e){if(e!==tn)return!1;if(!sn)return hn(e),sn=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ts(e.type,e.memoizedProps)),t&&(t=rn)){if(ln(e))throw dn(),Error(n(418));for(;t;)on(e,t),t=ls(t.nextSibling)}if(hn(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(n(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){rn=ls(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}rn=null}}else rn=tn?ls(e.stateNode.nextSibling):null;return!0}function dn(){for(var e=rn;e;)e=ls(e.nextSibling)}function fn(){rn=tn=null,sn=!1}function pn(e){null===nn?nn=[e]:nn.push(e)}var vn=S.ReactCurrentBatchConfig;function gn(e,t){if(e&&e.defaultProps){for(var r in t=N({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var _n=ws(null),mn=null,bn=null,Sn=null;function yn(){Sn=bn=mn=null}function Cn(e){var t=_n.current;ks(_n),e._currentValue=t}function wn(e,t,r){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==i&&(i.childLanes|=t)):null!==i&&(i.childLanes&t)!==t&&(i.childLanes|=t),e===r)break;e=e.return}}function kn(e,t){mn=e,Sn=bn=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Sa=!0),e.firstContext=null)}function En(e){var t=e._currentValue;if(Sn!==e)if(e={context:e,memoizedValue:t,next:null},null===bn){if(null===mn)throw Error(n(308));bn=e,mn.dependencies={lanes:0,firstContext:e}}else bn=bn.next=e;return t}var An=null;function xn(e){null===An?An=[e]:An.push(e)}function Ln(e,t,r,i){var s=t.interleaved;return null===s?(r.next=r,xn(t)):(r.next=s.next,s.next=r),t.interleaved=r,Rn(e,i)}function Rn(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var Tn=!1;function Dn(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function In(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Pn(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Bn(e,t,r){var i=e.updateQueue;if(null===i)return null;if(i=i.shared,0!=(2&Rl)){var s=i.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),i.pending=t,Rn(e,r)}return null===(s=i.interleaved)?(t.next=t,xn(i)):(t.next=s.next,s.next=t),i.interleaved=t,Rn(e,r)}function On(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&r))){var i=t.lanes;r|=i&=e.pendingLanes,t.lanes=r,mt(e,r)}}function Mn(e,t){var r=e.updateQueue,i=e.alternate;if(null!==i&&r===(i=i.updateQueue)){var s=null,n=null;if(null!==(r=r.firstBaseUpdate)){do{var o={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===n?s=n=o:n=n.next=o,r=r.next}while(null!==r);null===n?s=n=t:n=n.next=t}else s=n=t;return r={baseState:i.baseState,firstBaseUpdate:s,lastBaseUpdate:n,shared:i.shared,effects:i.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Nn(e,t,r,i){var s=e.updateQueue;Tn=!1;var n=s.firstBaseUpdate,o=s.lastBaseUpdate,a=s.shared.pending;if(null!==a){s.shared.pending=null;var l=a,c=l.next;l.next=null,null===o?n=c:o.next=c,o=l;var h=e.alternate;null!==h&&(a=(h=h.updateQueue).lastBaseUpdate)!==o&&(null===a?h.firstBaseUpdate=c:a.next=c,h.lastBaseUpdate=l)}if(null!==n){var u=s.baseState;for(o=0,h=c=l=null,a=n;;){var d=a.lane,f=a.eventTime;if((i&d)===d){null!==h&&(h=h.next={eventTime:f,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var p=e,v=a;switch(d=t,f=r,v.tag){case 1:if("function"==typeof(p=v.payload)){u=p.call(f,u,d);break e}u=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null==(d="function"==typeof(p=v.payload)?p.call(f,u,d):p))break e;u=N({},u,d);break e;case 2:Tn=!0}}null!==a.callback&&0!==a.lane&&(e.flags|=64,null===(d=s.effects)?s.effects=[a]:d.push(a))}else f={eventTime:f,lane:d,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===h?(c=h=f,l=u):h=h.next=f,o|=d;if(null===(a=a.next)){if(null===(a=s.shared.pending))break;a=(d=a).next,d.next=null,s.lastBaseUpdate=d,s.shared.pending=null}}if(null===h&&(l=u),s.baseState=l,s.firstBaseUpdate=c,s.lastBaseUpdate=h,null!==(t=s.shared.interleaved)){s=t;do{o|=s.lane,s=s.next}while(s!==t)}else null===n&&(s.shared.lanes=0);Nl|=o,e.lanes=o,e.memoizedState=u}}function Fn(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],s=i.callback;if(null!==s){if(i.callback=null,i=r,"function"!=typeof s)throw Error(n(191,s));s.call(i)}}}var Hn=(new i.Component).refs;function Un(e,t,r,i){r=null==(r=r(i,t=e.memoizedState))?t:N({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var zn={isMounted:function(e){return!!(e=e._reactInternals)&&$e(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var i=tc(),s=rc(e),n=Pn(i,s);n.payload=t,null!=r&&(n.callback=r),null!==(t=Bn(e,n,s))&&(ic(t,e,s,i),On(t,e,s))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var i=tc(),s=rc(e),n=Pn(i,s);n.tag=1,n.payload=t,null!=r&&(n.callback=r),null!==(t=Bn(e,n,s))&&(ic(t,e,s,i),On(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=tc(),i=rc(e),s=Pn(r,i);s.tag=2,null!=t&&(s.callback=t),null!==(t=Bn(e,s,i))&&(ic(t,e,i,r),On(t,e,i))}};function $n(e,t,r,i,s,n,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,n,o):!(t.prototype&&t.prototype.isPureReactComponent&&ai(r,i)&&ai(s,n))}function jn(e,t,r){var i=!1,s=As,n=t.contextType;return"object"==typeof n&&null!==n?n=En(n):(s=Ds(t)?Rs:xs.current,n=(i=null!=(i=t.contextTypes))?Ts(e,s):As),t=new t(r,n),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=zn,e.stateNode=t,t._reactInternals=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=n),t}function Wn(e,t,r,i){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,i),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,i),t.state!==e&&zn.enqueueReplaceState(t,t.state,null)}function Kn(e,t,r,i){var s=e.stateNode;s.props=r,s.state=e.memoizedState,s.refs=Hn,Dn(e);var n=t.contextType;"object"==typeof n&&null!==n?s.context=En(n):(n=Ds(t)?Rs:xs.current,s.context=Ts(e,n)),s.state=e.memoizedState,"function"==typeof(n=t.getDerivedStateFromProps)&&(Un(e,t,n,r),s.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof s.getSnapshotBeforeUpdate||"function"!=typeof s.UNSAFE_componentWillMount&&"function"!=typeof s.componentWillMount||(t=s.state,"function"==typeof s.componentWillMount&&s.componentWillMount(),"function"==typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&zn.enqueueReplaceState(s,s.state,null),Nn(e,r,s,i),s.state=e.memoizedState),"function"==typeof s.componentDidMount&&(e.flags|=4194308)}function Vn(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(n(309));var i=r.stateNode}if(!i)throw Error(n(147,e));var s=i,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=s.refs;t===Hn&&(t=s.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(n(284));if(!r._owner)throw Error(n(290,e))}return e}function qn(e,t){throw e=Object.prototype.toString.call(t),Error(n(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Zn(e){return(0,e._init)(e._payload)}function Gn(e){function t(t,r){if(e){var i=t.deletions;null===i?(t.deletions=[r],t.flags|=16):i.push(r)}}function r(r,i){if(!e)return null;for(;null!==i;)t(r,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Bc(e,t)).index=0,e.sibling=null,e}function o(t,r,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<r?(t.flags|=2,r):i:(t.flags|=2,r):(t.flags|=1048576,r)}function a(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,r,i){return null===t||6!==t.tag?((t=Fc(r,e.mode,i)).return=e,t):((t=s(t,r)).return=e,t)}function c(e,t,r,i){var n=r.type;return n===w?u(e,t,r.props.children,i,r.key):null!==t&&(t.elementType===n||"object"==typeof n&&null!==n&&n.$$typeof===I&&Zn(n)===t.type)?((i=s(t,r.props)).ref=Vn(e,t,r),i.return=e,i):((i=Oc(r.type,r.key,r.props,null,e.mode,i)).ref=Vn(e,t,r),i.return=e,i)}function h(e,t,r,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Hc(r,e.mode,i)).return=e,t):((t=s(t,r.children||[])).return=e,t)}function u(e,t,r,i,n){return null===t||7!==t.tag?((t=Mc(r,e.mode,i,n)).return=e,t):((t=s(t,r)).return=e,t)}function d(e,t,r){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Fc(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case y:return(r=Oc(t.type,t.key,t.props,null,e.mode,r)).ref=Vn(e,null,t),r.return=e,r;case C:return(t=Hc(t,e.mode,r)).return=e,t;case I:return d(e,(0,t._init)(t._payload),r)}if(te(t)||O(t))return(t=Mc(t,e.mode,r,null)).return=e,t;qn(e,t)}return null}function f(e,t,r,i){var s=null!==t?t.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==s?null:l(e,t,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case y:return r.key===s?c(e,t,r,i):null;case C:return r.key===s?h(e,t,r,i):null;case I:return f(e,t,(s=r._init)(r._payload),i)}if(te(r)||O(r))return null!==s?null:u(e,t,r,i,null);qn(e,r)}return null}function p(e,t,r,i,s){if("string"==typeof i&&""!==i||"number"==typeof i)return l(t,e=e.get(r)||null,""+i,s);if("object"==typeof i&&null!==i){switch(i.$$typeof){case y:return c(t,e=e.get(null===i.key?r:i.key)||null,i,s);case C:return h(t,e=e.get(null===i.key?r:i.key)||null,i,s);case I:return p(e,t,r,(0,i._init)(i._payload),s)}if(te(i)||O(i))return u(t,e=e.get(r)||null,i,s,null);qn(t,i)}return null}function v(s,n,a,l){for(var c=null,h=null,u=n,v=n=0,g=null;null!==u&&v<a.length;v++){u.index>v?(g=u,u=null):g=u.sibling;var _=f(s,u,a[v],l);if(null===_){null===u&&(u=g);break}e&&u&&null===_.alternate&&t(s,u),n=o(_,n,v),null===h?c=_:h.sibling=_,h=_,u=g}if(v===a.length)return r(s,u),sn&&Xs(s,v),c;if(null===u){for(;v<a.length;v++)null!==(u=d(s,a[v],l))&&(n=o(u,n,v),null===h?c=u:h.sibling=u,h=u);return sn&&Xs(s,v),c}for(u=i(s,u);v<a.length;v++)null!==(g=p(u,s,v,a[v],l))&&(e&&null!==g.alternate&&u.delete(null===g.key?v:g.key),n=o(g,n,v),null===h?c=g:h.sibling=g,h=g);return e&&u.forEach((function(e){return t(s,e)})),sn&&Xs(s,v),c}function g(s,a,l,c){var h=O(l);if("function"!=typeof h)throw Error(n(150));if(null==(l=h.call(l)))throw Error(n(151));for(var u=h=null,v=a,g=a=0,_=null,m=l.next();null!==v&&!m.done;g++,m=l.next()){v.index>g?(_=v,v=null):_=v.sibling;var b=f(s,v,m.value,c);if(null===b){null===v&&(v=_);break}e&&v&&null===b.alternate&&t(s,v),a=o(b,a,g),null===u?h=b:u.sibling=b,u=b,v=_}if(m.done)return r(s,v),sn&&Xs(s,g),h;if(null===v){for(;!m.done;g++,m=l.next())null!==(m=d(s,m.value,c))&&(a=o(m,a,g),null===u?h=m:u.sibling=m,u=m);return sn&&Xs(s,g),h}for(v=i(s,v);!m.done;g++,m=l.next())null!==(m=p(v,s,g,m.value,c))&&(e&&null!==m.alternate&&v.delete(null===m.key?g:m.key),a=o(m,a,g),null===u?h=m:u.sibling=m,u=m);return e&&v.forEach((function(e){return t(s,e)})),sn&&Xs(s,g),h}return function e(i,n,o,l){if("object"==typeof o&&null!==o&&o.type===w&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case y:e:{for(var c=o.key,h=n;null!==h;){if(h.key===c){if((c=o.type)===w){if(7===h.tag){r(i,h.sibling),(n=s(h,o.props.children)).return=i,i=n;break e}}else if(h.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===I&&Zn(c)===h.type){r(i,h.sibling),(n=s(h,o.props)).ref=Vn(i,h,o),n.return=i,i=n;break e}r(i,h);break}t(i,h),h=h.sibling}o.type===w?((n=Mc(o.props.children,i.mode,l,o.key)).return=i,i=n):((l=Oc(o.type,o.key,o.props,null,i.mode,l)).ref=Vn(i,n,o),l.return=i,i=l)}return a(i);case C:e:{for(h=o.key;null!==n;){if(n.key===h){if(4===n.tag&&n.stateNode.containerInfo===o.containerInfo&&n.stateNode.implementation===o.implementation){r(i,n.sibling),(n=s(n,o.children||[])).return=i,i=n;break e}r(i,n);break}t(i,n),n=n.sibling}(n=Hc(o,i.mode,l)).return=i,i=n}return a(i);case I:return e(i,n,(h=o._init)(o._payload),l)}if(te(o))return v(i,n,o,l);if(O(o))return g(i,n,o,l);qn(i,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==n&&6===n.tag?(r(i,n.sibling),(n=s(n,o)).return=i,i=n):(r(i,n),(n=Fc(o,i.mode,l)).return=i,i=n),a(i)):r(i,n)}}var Yn=Gn(!0),Xn=Gn(!1),Jn={},Qn=ws(Jn),eo=ws(Jn),to=ws(Jn);function ro(e){if(e===Jn)throw Error(n(174));return e}function io(e,t){switch(Es(to,t),Es(eo,e),Es(Qn,Jn),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ks(Qn),Es(Qn,t)}function so(){ks(Qn),ks(eo),ks(to)}function no(e){ro(to.current);var t=ro(Qn.current),r=le(t,e.type);t!==r&&(Es(eo,e),Es(Qn,r))}function oo(e){eo.current===e&&(ks(Qn),ks(eo))}var ao=ws(0);function lo(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var co=[];function ho(){for(var e=0;e<co.length;e++)co[e]._workInProgressVersionPrimary=null;co.length=0}var uo=S.ReactCurrentDispatcher,fo=S.ReactCurrentBatchConfig,po=0,vo=null,go=null,_o=null,mo=!1,bo=!1,So=0,yo=0;function Co(){throw Error(n(321))}function wo(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!oi(e[r],t[r]))return!1;return!0}function ko(e,t,r,i,s,o){if(po=o,vo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,uo.current=null===e||null===e.memoizedState?aa:la,e=r(i,s),bo){o=0;do{if(bo=!1,So=0,25<=o)throw Error(n(301));o+=1,_o=go=null,t.updateQueue=null,uo.current=ca,e=r(i,s)}while(bo)}if(uo.current=oa,t=null!==go&&null!==go.next,po=0,_o=go=vo=null,mo=!1,t)throw Error(n(300));return e}function Eo(){var e=0!==So;return So=0,e}function Ao(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===_o?vo.memoizedState=_o=e:_o=_o.next=e,_o}function xo(){if(null===go){var e=vo.alternate;e=null!==e?e.memoizedState:null}else e=go.next;var t=null===_o?vo.memoizedState:_o.next;if(null!==t)_o=t,go=e;else{if(null===e)throw Error(n(310));e={memoizedState:(go=e).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===_o?vo.memoizedState=_o=e:_o=_o.next=e}return _o}function Lo(e,t){return"function"==typeof t?t(e):t}function Ro(e){var t=xo(),r=t.queue;if(null===r)throw Error(n(311));r.lastRenderedReducer=e;var i=go,s=i.baseQueue,o=r.pending;if(null!==o){if(null!==s){var a=s.next;s.next=o.next,o.next=a}i.baseQueue=s=o,r.pending=null}if(null!==s){o=s.next,i=i.baseState;var l=a=null,c=null,h=o;do{var u=h.lane;if((po&u)===u)null!==c&&(c=c.next={lane:0,action:h.action,hasEagerState:h.hasEagerState,eagerState:h.eagerState,next:null}),i=h.hasEagerState?h.eagerState:e(i,h.action);else{var d={lane:u,action:h.action,hasEagerState:h.hasEagerState,eagerState:h.eagerState,next:null};null===c?(l=c=d,a=i):c=c.next=d,vo.lanes|=u,Nl|=u}h=h.next}while(null!==h&&h!==o);null===c?a=i:c.next=l,oi(i,t.memoizedState)||(Sa=!0),t.memoizedState=i,t.baseState=a,t.baseQueue=c,r.lastRenderedState=i}if(null!==(e=r.interleaved)){s=e;do{o=s.lane,vo.lanes|=o,Nl|=o,s=s.next}while(s!==e)}else null===s&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function To(e){var t=xo(),r=t.queue;if(null===r)throw Error(n(311));r.lastRenderedReducer=e;var i=r.dispatch,s=r.pending,o=t.memoizedState;if(null!==s){r.pending=null;var a=s=s.next;do{o=e(o,a.action),a=a.next}while(a!==s);oi(o,t.memoizedState)||(Sa=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),r.lastRenderedState=o}return[o,i]}function Do(){}function Io(e,t){var r=vo,i=xo(),s=t(),o=!oi(i.memoizedState,s);if(o&&(i.memoizedState=s,Sa=!0),i=i.queue,Wo(Oo.bind(null,r,i,e),[e]),i.getSnapshot!==t||o||null!==_o&&1&_o.memoizedState.tag){if(r.flags|=2048,Ho(9,Bo.bind(null,r,i,s,t),void 0,null),null===Tl)throw Error(n(349));0!=(30&po)||Po(r,t,s)}return s}function Po(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=vo.updateQueue)?(t={lastEffect:null,stores:null},vo.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function Bo(e,t,r,i){t.value=r,t.getSnapshot=i,Mo(t)&&No(e)}function Oo(e,t,r){return r((function(){Mo(t)&&No(e)}))}function Mo(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!oi(e,r)}catch(e){return!0}}function No(e){var t=Rn(e,1);null!==t&&ic(t,e,1,-1)}function Fo(e){var t=Ao();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Lo,lastRenderedState:e},t.queue=e,e=e.dispatch=ra.bind(null,vo,e),[t.memoizedState,e]}function Ho(e,t,r,i){return e={tag:e,create:t,destroy:r,deps:i,next:null},null===(t=vo.updateQueue)?(t={lastEffect:null,stores:null},vo.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(i=r.next,r.next=e,e.next=i,t.lastEffect=e),e}function Uo(){return xo().memoizedState}function zo(e,t,r,i){var s=Ao();vo.flags|=e,s.memoizedState=Ho(1|t,r,void 0,void 0===i?null:i)}function $o(e,t,r,i){var s=xo();i=void 0===i?null:i;var n=void 0;if(null!==go){var o=go.memoizedState;if(n=o.destroy,null!==i&&wo(i,o.deps))return void(s.memoizedState=Ho(t,r,n,i))}vo.flags|=e,s.memoizedState=Ho(1|t,r,n,i)}function jo(e,t){return zo(8390656,8,e,t)}function Wo(e,t){return $o(2048,8,e,t)}function Ko(e,t){return $o(4,2,e,t)}function Vo(e,t){return $o(4,4,e,t)}function qo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Zo(e,t,r){return r=null!=r?r.concat([e]):null,$o(4,4,qo.bind(null,t,e),r)}function Go(){}function Yo(e,t){var r=xo();t=void 0===t?null:t;var i=r.memoizedState;return null!==i&&null!==t&&wo(t,i[1])?i[0]:(r.memoizedState=[e,t],e)}function Xo(e,t){var r=xo();t=void 0===t?null:t;var i=r.memoizedState;return null!==i&&null!==t&&wo(t,i[1])?i[0]:(e=e(),r.memoizedState=[e,t],e)}function Jo(e,t,r){return 0==(21&po)?(e.baseState&&(e.baseState=!1,Sa=!0),e.memoizedState=r):(oi(r,t)||(r=vt(),vo.lanes|=r,Nl|=r,e.baseState=!0),t)}function Qo(e,t){var r=bt;bt=0!==r&&4>r?r:4,e(!0);var i=fo.transition;fo.transition={};try{e(!1),t()}finally{bt=r,fo.transition=i}}function ea(){return xo().memoizedState}function ta(e,t,r){var i=rc(e);r={lane:i,action:r,hasEagerState:!1,eagerState:null,next:null},ia(e)?sa(t,r):null!==(r=Ln(e,t,r,i))&&(ic(r,e,i,tc()),na(r,t,i))}function ra(e,t,r){var i=rc(e),s={lane:i,action:r,hasEagerState:!1,eagerState:null,next:null};if(ia(e))sa(t,s);else{var n=e.alternate;if(0===e.lanes&&(null===n||0===n.lanes)&&null!==(n=t.lastRenderedReducer))try{var o=t.lastRenderedState,a=n(o,r);if(s.hasEagerState=!0,s.eagerState=a,oi(a,o)){var l=t.interleaved;return null===l?(s.next=s,xn(t)):(s.next=l.next,l.next=s),void(t.interleaved=s)}}catch(e){}null!==(r=Ln(e,t,s,i))&&(ic(r,e,i,s=tc()),na(r,t,i))}}function ia(e){var t=e.alternate;return e===vo||null!==t&&t===vo}function sa(e,t){bo=mo=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function na(e,t,r){if(0!=(4194240&r)){var i=t.lanes;r|=i&=e.pendingLanes,t.lanes=r,mt(e,r)}}var oa={readContext:En,useCallback:Co,useContext:Co,useEffect:Co,useImperativeHandle:Co,useInsertionEffect:Co,useLayoutEffect:Co,useMemo:Co,useReducer:Co,useRef:Co,useState:Co,useDebugValue:Co,useDeferredValue:Co,useTransition:Co,useMutableSource:Co,useSyncExternalStore:Co,useId:Co,unstable_isNewReconciler:!1},aa={readContext:En,useCallback:function(e,t){return Ao().memoizedState=[e,void 0===t?null:t],e},useContext:En,useEffect:jo,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,zo(4194308,4,qo.bind(null,t,e),r)},useLayoutEffect:function(e,t){return zo(4194308,4,e,t)},useInsertionEffect:function(e,t){return zo(4,2,e,t)},useMemo:function(e,t){var r=Ao();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var i=Ao();return t=void 0!==r?r(t):t,i.memoizedState=i.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},i.queue=e,e=e.dispatch=ta.bind(null,vo,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Ao().memoizedState=e},useState:Fo,useDebugValue:Go,useDeferredValue:function(e){return Ao().memoizedState=e},useTransition:function(){var e=Fo(!1),t=e[0];return e=Qo.bind(null,e[1]),Ao().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var i=vo,s=Ao();if(sn){if(void 0===r)throw Error(n(407));r=r()}else{if(r=t(),null===Tl)throw Error(n(349));0!=(30&po)||Po(i,t,r)}s.memoizedState=r;var o={value:r,getSnapshot:t};return s.queue=o,jo(Oo.bind(null,i,o,e),[e]),i.flags|=2048,Ho(9,Bo.bind(null,i,o,r,t),void 0,null),r},useId:function(){var e=Ao(),t=Tl.identifierPrefix;if(sn){var r=Ys;t=":"+t+"R"+(r=(Gs&~(1<<32-ot(Gs)-1)).toString(32)+r),0<(r=So++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=yo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},la={readContext:En,useCallback:Yo,useContext:En,useEffect:Wo,useImperativeHandle:Zo,useInsertionEffect:Ko,useLayoutEffect:Vo,useMemo:Xo,useReducer:Ro,useRef:Uo,useState:function(){return Ro(Lo)},useDebugValue:Go,useDeferredValue:function(e){return Jo(xo(),go.memoizedState,e)},useTransition:function(){return[Ro(Lo)[0],xo().memoizedState]},useMutableSource:Do,useSyncExternalStore:Io,useId:ea,unstable_isNewReconciler:!1},ca={readContext:En,useCallback:Yo,useContext:En,useEffect:Wo,useImperativeHandle:Zo,useInsertionEffect:Ko,useLayoutEffect:Vo,useMemo:Xo,useReducer:To,useRef:Uo,useState:function(){return To(Lo)},useDebugValue:Go,useDeferredValue:function(e){var t=xo();return null===go?t.memoizedState=e:Jo(t,go.memoizedState,e)},useTransition:function(){return[To(Lo)[0],xo().memoizedState]},useMutableSource:Do,useSyncExternalStore:Io,useId:ea,unstable_isNewReconciler:!1};function ha(e,t){try{var r="",i=t;do{r+=z(i),i=i.return}while(i);var s=r}catch(e){s="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:s,digest:null}}function ua(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function da(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var fa="function"==typeof WeakMap?WeakMap:Map;function pa(e,t,r){(r=Pn(-1,r)).tag=3,r.payload={element:null};var i=t.value;return r.callback=function(){Kl||(Kl=!0,Vl=i),da(0,t)},r}function va(e,t,r){(r=Pn(-1,r)).tag=3;var i=e.type.getDerivedStateFromError;if("function"==typeof i){var s=t.value;r.payload=function(){return i(s)},r.callback=function(){da(0,t)}}var n=e.stateNode;return null!==n&&"function"==typeof n.componentDidCatch&&(r.callback=function(){da(0,t),"function"!=typeof i&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}function ga(e,t,r){var i=e.pingCache;if(null===i){i=e.pingCache=new fa;var s=new Set;i.set(t,s)}else void 0===(s=i.get(t))&&(s=new Set,i.set(t,s));s.has(r)||(s.add(r),e=Ac.bind(null,e,t,r),t.then(e,e))}function _a(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ma(e,t,r,i,s){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=Pn(-1,1)).tag=2,Bn(r,t,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var ba=S.ReactCurrentOwner,Sa=!1;function ya(e,t,r,i){t.child=null===e?Xn(t,null,r,i):Yn(t,e.child,r,i)}function Ca(e,t,r,i,s){r=r.render;var n=t.ref;return kn(t,s),i=ko(e,t,r,i,n,s),r=Eo(),null===e||Sa?(sn&&r&&Qs(t),t.flags|=1,ya(e,t,i,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Ka(e,t,s))}function wa(e,t,r,i,s){if(null===e){var n=r.type;return"function"!=typeof n||Pc(n)||void 0!==n.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Oc(r.type,null,i,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=n,ka(e,t,n,i,s))}if(n=e.child,0==(e.lanes&s)){var o=n.memoizedProps;if((r=null!==(r=r.compare)?r:ai)(o,i)&&e.ref===t.ref)return Ka(e,t,s)}return t.flags|=1,(e=Bc(n,i)).ref=t.ref,e.return=t,t.child=e}function ka(e,t,r,i,s){if(null!==e){var n=e.memoizedProps;if(ai(n,i)&&e.ref===t.ref){if(Sa=!1,t.pendingProps=i=n,0==(e.lanes&s))return t.lanes=e.lanes,Ka(e,t,s);0!=(131072&e.flags)&&(Sa=!0)}}return xa(e,t,r,i,s)}function Ea(e,t,r){var i=t.pendingProps,s=i.children,n=null!==e?e.memoizedState:null;if("hidden"===i.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Es(Bl,Pl),Pl|=r;else{if(0==(1073741824&r))return e=null!==n?n.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Es(Bl,Pl),Pl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=null!==n?n.baseLanes:r,Es(Bl,Pl),Pl|=i}else null!==n?(i=n.baseLanes|r,t.memoizedState=null):i=r,Es(Bl,Pl),Pl|=i;return ya(e,t,s,r),t.child}function Aa(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function xa(e,t,r,i,s){var n=Ds(r)?Rs:xs.current;return n=Ts(t,n),kn(t,s),r=ko(e,t,r,i,n,s),i=Eo(),null===e||Sa?(sn&&i&&Qs(t),t.flags|=1,ya(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Ka(e,t,s))}function La(e,t,r,i,s){if(Ds(r)){var n=!0;Os(t)}else n=!1;if(kn(t,s),null===t.stateNode)Wa(e,t),jn(t,r,i),Kn(t,r,i,s),i=!0;else if(null===e){var o=t.stateNode,a=t.memoizedProps;o.props=a;var l=o.context,c=r.contextType;c="object"==typeof c&&null!==c?En(c):Ts(t,c=Ds(r)?Rs:xs.current);var h=r.getDerivedStateFromProps,u="function"==typeof h||"function"==typeof o.getSnapshotBeforeUpdate;u||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(a!==i||l!==c)&&Wn(t,o,i,c),Tn=!1;var d=t.memoizedState;o.state=d,Nn(t,i,o,s),l=t.memoizedState,a!==i||d!==l||Ls.current||Tn?("function"==typeof h&&(Un(t,r,h,i),l=t.memoizedState),(a=Tn||$n(t,r,a,i,d,l,c))?(u||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=i,t.memoizedState=l),o.props=i,o.state=l,o.context=c,i=a):("function"==typeof o.componentDidMount&&(t.flags|=4194308),i=!1)}else{o=t.stateNode,In(e,t),a=t.memoizedProps,c=t.type===t.elementType?a:gn(t.type,a),o.props=c,u=t.pendingProps,d=o.context,l="object"==typeof(l=r.contextType)&&null!==l?En(l):Ts(t,l=Ds(r)?Rs:xs.current);var f=r.getDerivedStateFromProps;(h="function"==typeof f||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(a!==u||d!==l)&&Wn(t,o,i,l),Tn=!1,d=t.memoizedState,o.state=d,Nn(t,i,o,s);var p=t.memoizedState;a!==u||d!==p||Ls.current||Tn?("function"==typeof f&&(Un(t,r,f,i),p=t.memoizedState),(c=Tn||$n(t,r,c,i,d,p,l)||!1)?(h||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(i,p,l),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(i,p,l)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=i,t.memoizedState=p),o.props=i,o.state=p,o.context=l,i=c):("function"!=typeof o.componentDidUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||a===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),i=!1)}return Ra(e,t,r,i,n,s)}function Ra(e,t,r,i,s,n){Aa(e,t);var o=0!=(128&t.flags);if(!i&&!o)return s&&Ms(t,r,!1),Ka(e,t,n);i=t.stateNode,ba.current=t;var a=o&&"function"!=typeof r.getDerivedStateFromError?null:i.render();return t.flags|=1,null!==e&&o?(t.child=Yn(t,e.child,null,n),t.child=Yn(t,null,a,n)):ya(e,t,a,n),t.memoizedState=i.state,s&&Ms(t,r,!0),t.child}function Ta(e){var t=e.stateNode;t.pendingContext?Ps(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ps(0,t.context,!1),io(e,t.containerInfo)}function Da(e,t,r,i,s){return fn(),pn(s),t.flags|=256,ya(e,t,r,i),t.child}var Ia,Pa,Ba,Oa,Ma={dehydrated:null,treeContext:null,retryLane:0};function Na(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fa(e,t,r){var i,s=t.pendingProps,o=ao.current,a=!1,l=0!=(128&t.flags);if((i=l)||(i=(null===e||null!==e.memoizedState)&&0!=(2&o)),i?(a=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Es(ao,1&o),null===e)return cn(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=s.children,e=s.fallback,a?(s=t.mode,a=t.child,l={mode:"hidden",children:l},0==(1&s)&&null!==a?(a.childLanes=0,a.pendingProps=l):a=Nc(l,s,0,null),e=Mc(e,s,r,null),a.return=t,e.return=t,a.sibling=e,t.child=a,t.child.memoizedState=Na(r),t.memoizedState=Ma,e):Ha(t,l));if(null!==(o=e.memoizedState)&&null!==(i=o.dehydrated))return function(e,t,r,i,s,o,a){if(r)return 256&t.flags?(t.flags&=-257,Ua(e,t,a,i=ua(Error(n(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=i.fallback,s=t.mode,i=Nc({mode:"visible",children:i.children},s,0,null),(o=Mc(o,s,a,null)).flags|=2,i.return=t,o.return=t,i.sibling=o,t.child=i,0!=(1&t.mode)&&Yn(t,e.child,null,a),t.child.memoizedState=Na(a),t.memoizedState=Ma,o);if(0==(1&t.mode))return Ua(e,t,a,null);if("$!"===s.data){if(i=s.nextSibling&&s.nextSibling.dataset)var l=i.dgst;return i=l,Ua(e,t,a,i=ua(o=Error(n(419)),i,void 0))}if(l=0!=(a&e.childLanes),Sa||l){if(null!==(i=Tl)){switch(a&-a){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!=(s&(i.suspendedLanes|a))?0:s)&&s!==o.retryLane&&(o.retryLane=s,Rn(e,s),ic(i,e,s,-1))}return gc(),Ua(e,t,a,i=ua(Error(n(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Lc.bind(null,e),s._reactRetry=t,null):(e=o.treeContext,rn=ls(s.nextSibling),tn=t,sn=!0,nn=null,null!==e&&(Vs[qs++]=Gs,Vs[qs++]=Ys,Vs[qs++]=Zs,Gs=e.id,Ys=e.overflow,Zs=t),(t=Ha(t,i.children)).flags|=4096,t)}(e,t,l,s,i,o,r);if(a){a=s.fallback,l=t.mode,i=(o=e.child).sibling;var c={mode:"hidden",children:s.children};return 0==(1&l)&&t.child!==o?((s=t.child).childLanes=0,s.pendingProps=c,t.deletions=null):(s=Bc(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==i?a=Bc(i,a):(a=Mc(a,l,r,null)).flags|=2,a.return=t,s.return=t,s.sibling=a,t.child=s,s=a,a=t.child,l=null===(l=e.child.memoizedState)?Na(r):{baseLanes:l.baseLanes|r,cachePool:null,transitions:l.transitions},a.memoizedState=l,a.childLanes=e.childLanes&~r,t.memoizedState=Ma,s}return e=(a=e.child).sibling,s=Bc(a,{mode:"visible",children:s.children}),0==(1&t.mode)&&(s.lanes=r),s.return=t,s.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=s,t.memoizedState=null,s}function Ha(e,t){return(t=Nc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ua(e,t,r,i){return null!==i&&pn(i),Yn(t,e.child,null,r),(e=Ha(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function za(e,t,r){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),wn(e.return,t,r)}function $a(e,t,r,i,s){var n=e.memoizedState;null===n?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:r,tailMode:s}:(n.isBackwards=t,n.rendering=null,n.renderingStartTime=0,n.last=i,n.tail=r,n.tailMode=s)}function ja(e,t,r){var i=t.pendingProps,s=i.revealOrder,n=i.tail;if(ya(e,t,i.children,r),0!=(2&(i=ao.current)))i=1&i|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&za(e,r,t);else if(19===e.tag)za(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(Es(ao,i),0==(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(r=t.child,s=null;null!==r;)null!==(e=r.alternate)&&null===lo(e)&&(s=r),r=r.sibling;null===(r=s)?(s=t.child,t.child=null):(s=r.sibling,r.sibling=null),$a(t,!1,s,r,n);break;case"backwards":for(r=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===lo(e)){t.child=s;break}e=s.sibling,s.sibling=r,r=s,s=e}$a(t,!0,r,null,n);break;case"together":$a(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Wa(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Ka(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Nl|=t.lanes,0==(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(n(153));if(null!==t.child){for(r=Bc(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Bc(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function Va(e,t){if(!sn)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var i=null;null!==r;)null!==r.alternate&&(i=r),r=r.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function qa(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,i=0;if(t)for(var s=e.child;null!==s;)r|=s.lanes|s.childLanes,i|=14680064&s.subtreeFlags,i|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)r|=s.lanes|s.childLanes,i|=s.subtreeFlags,i|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=i,e.childLanes=r,t}function Za(e,t,r){var i=t.pendingProps;switch(en(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qa(t),null;case 1:case 17:return Ds(t.type)&&Is(),qa(t),null;case 3:return i=t.stateNode,so(),ks(Ls),ks(xs),ho(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),null!==e&&null!==e.child||(un(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==nn&&(ac(nn),nn=null))),Pa(e,t),qa(t),null;case 5:oo(t);var s=ro(to.current);if(r=t.type,null!==e&&null!=t.stateNode)Ba(e,t,r,i,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!i){if(null===t.stateNode)throw Error(n(166));return qa(t),null}if(e=ro(Qn.current),un(t)){i=t.stateNode,r=t.type;var o=t.memoizedProps;switch(i[us]=t,i[ds]=o,e=0!=(1&t.mode),r){case"dialog":Fi("cancel",i),Fi("close",i);break;case"iframe":case"object":case"embed":Fi("load",i);break;case"video":case"audio":for(s=0;s<Bi.length;s++)Fi(Bi[s],i);break;case"source":Fi("error",i);break;case"img":case"image":case"link":Fi("error",i),Fi("load",i);break;case"details":Fi("toggle",i);break;case"input":Y(i,o),Fi("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!o.multiple},Fi("invalid",i);break;case"textarea":se(i,o),Fi("invalid",i)}for(var l in me(r,o),s=null,o)if(o.hasOwnProperty(l)){var c=o[l];"children"===l?"string"==typeof c?i.textContent!==c&&(!0!==o.suppressHydrationWarning&&Xi(i.textContent,c,e),s=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Xi(i.textContent,c,e),s=["children",""+c]):a.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Fi("scroll",i)}switch(r){case"input":V(i),Q(i,o,!0);break;case"textarea":V(i),oe(i);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(i.onclick=Ji)}i=s,t.updateQueue=i,null!==i&&(t.flags|=4)}else{l=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ae(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof i.is?e=l.createElement(r,{is:i.is}):(e=l.createElement(r),"select"===r&&(l=e,i.multiple?l.multiple=!0:i.size&&(l.size=i.size))):e=l.createElementNS(e,r),e[us]=t,e[ds]=i,Ia(e,t,!1,!1),t.stateNode=e;e:{switch(l=be(r,i),r){case"dialog":Fi("cancel",e),Fi("close",e),s=i;break;case"iframe":case"object":case"embed":Fi("load",e),s=i;break;case"video":case"audio":for(s=0;s<Bi.length;s++)Fi(Bi[s],e);s=i;break;case"source":Fi("error",e),s=i;break;case"img":case"image":case"link":Fi("error",e),Fi("load",e),s=i;break;case"details":Fi("toggle",e),s=i;break;case"input":Y(e,i),s=G(e,i),Fi("invalid",e);break;case"option":default:s=i;break;case"select":e._wrapperState={wasMultiple:!!i.multiple},s=N({},i,{value:void 0}),Fi("invalid",e);break;case"textarea":se(e,i),s=ie(e,i),Fi("invalid",e)}for(o in me(r,s),c=s)if(c.hasOwnProperty(o)){var h=c[o];"style"===o?ge(e,h):"dangerouslySetInnerHTML"===o?null!=(h=h?h.__html:void 0)&&ue(e,h):"children"===o?"string"==typeof h?("textarea"!==r||""!==h)&&de(e,h):"number"==typeof h&&de(e,""+h):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(a.hasOwnProperty(o)?null!=h&&"onScroll"===o&&Fi("scroll",e):null!=h&&b(e,o,h,l))}switch(r){case"input":V(e),Q(e,i,!1);break;case"textarea":V(e),oe(e);break;case"option":null!=i.value&&e.setAttribute("value",""+W(i.value));break;case"select":e.multiple=!!i.multiple,null!=(o=i.value)?re(e,!!i.multiple,o,!1):null!=i.defaultValue&&re(e,!!i.multiple,i.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=Ji)}switch(r){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qa(t),null;case 6:if(e&&null!=t.stateNode)Oa(e,t,e.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw Error(n(166));if(r=ro(to.current),ro(Qn.current),un(t)){if(i=t.stateNode,r=t.memoizedProps,i[us]=t,(o=i.nodeValue!==r)&&null!==(e=tn))switch(e.tag){case 3:Xi(i.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xi(i.nodeValue,r,0!=(1&e.mode))}o&&(t.flags|=4)}else(i=(9===r.nodeType?r:r.ownerDocument).createTextNode(i))[us]=t,t.stateNode=i}return qa(t),null;case 13:if(ks(ao),i=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(sn&&null!==rn&&0!=(1&t.mode)&&0==(128&t.flags))dn(),fn(),t.flags|=98560,o=!1;else if(o=un(t),null!==i&&null!==i.dehydrated){if(null===e){if(!o)throw Error(n(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(n(317));o[us]=t}else fn(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qa(t),o=!1}else null!==nn&&(ac(nn),nn=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=r,t):((i=null!==i)!=(null!==e&&null!==e.memoizedState)&&i&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ao.current)?0===Ol&&(Ol=3):gc())),null!==t.updateQueue&&(t.flags|=4),qa(t),null);case 4:return so(),Pa(e,t),null===e&&zi(t.stateNode.containerInfo),qa(t),null;case 10:return Cn(t.type._context),qa(t),null;case 19:if(ks(ao),null===(o=t.memoizedState))return qa(t),null;if(i=0!=(128&t.flags),null===(l=o.rendering))if(i)Va(o,!1);else{if(0!==Ol||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=lo(e))){for(t.flags|=128,Va(o,!1),null!==(i=l.updateQueue)&&(t.updateQueue=i,t.flags|=4),t.subtreeFlags=0,i=r,r=t.child;null!==r;)e=i,(o=r).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return Es(ao,1&ao.current|2),t.child}e=e.sibling}null!==o.tail&&Xe()>jl&&(t.flags|=128,i=!0,Va(o,!1),t.lanes=4194304)}else{if(!i)if(null!==(e=lo(l))){if(t.flags|=128,i=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),Va(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!sn)return qa(t),null}else 2*Xe()-o.renderingStartTime>jl&&1073741824!==r&&(t.flags|=128,i=!0,Va(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(r=o.last)?r.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Xe(),t.sibling=null,r=ao.current,Es(ao,i?1&r|2:1&r),t):(qa(t),null);case 22:case 23:return dc(),i=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==i&&(t.flags|=8192),i&&0!=(1&t.mode)?0!=(1073741824&Pl)&&(qa(t),6&t.subtreeFlags&&(t.flags|=8192)):qa(t),null;case 24:case 25:return null}throw Error(n(156,t.tag))}function Ga(e,t){switch(en(t),t.tag){case 1:return Ds(t.type)&&Is(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return so(),ks(Ls),ks(xs),ho(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(ks(ao),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(n(340));fn()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return ks(ao),null;case 4:return so(),null;case 10:return Cn(t.type._context),null;case 22:case 23:return dc(),null;default:return null}}Ia=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Pa=function(){},Ba=function(e,t,r,i){var s=e.memoizedProps;if(s!==i){e=t.stateNode,ro(Qn.current);var n,o=null;switch(r){case"input":s=G(e,s),i=G(e,i),o=[];break;case"select":s=N({},s,{value:void 0}),i=N({},i,{value:void 0}),o=[];break;case"textarea":s=ie(e,s),i=ie(e,i),o=[];break;default:"function"!=typeof s.onClick&&"function"==typeof i.onClick&&(e.onclick=Ji)}for(h in me(r,i),r=null,s)if(!i.hasOwnProperty(h)&&s.hasOwnProperty(h)&&null!=s[h])if("style"===h){var l=s[h];for(n in l)l.hasOwnProperty(n)&&(r||(r={}),r[n]="")}else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(a.hasOwnProperty(h)?o||(o=[]):(o=o||[]).push(h,null));for(h in i){var c=i[h];if(l=null!=s?s[h]:void 0,i.hasOwnProperty(h)&&c!==l&&(null!=c||null!=l))if("style"===h)if(l){for(n in l)!l.hasOwnProperty(n)||c&&c.hasOwnProperty(n)||(r||(r={}),r[n]="");for(n in c)c.hasOwnProperty(n)&&l[n]!==c[n]&&(r||(r={}),r[n]=c[n])}else r||(o||(o=[]),o.push(h,r)),r=c;else"dangerouslySetInnerHTML"===h?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(o=o||[]).push(h,c)):"children"===h?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(h,""+c):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(a.hasOwnProperty(h)?(null!=c&&"onScroll"===h&&Fi("scroll",e),o||l===c||(o=[])):(o=o||[]).push(h,c))}r&&(o=o||[]).push("style",r);var h=o;(t.updateQueue=h)&&(t.flags|=4)}},Oa=function(e,t,r,i){r!==i&&(t.flags|=4)};var Ya=!1,Xa=!1,Ja="function"==typeof WeakSet?WeakSet:Set,Qa=null;function el(e,t){var r=e.ref;if(null!==r)if("function"==typeof r)try{r(null)}catch(r){Ec(e,t,r)}else r.current=null}function tl(e,t,r){try{r()}catch(r){Ec(e,t,r)}}var rl=!1;function il(e,t,r){var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var s=i=i.next;do{if((s.tag&e)===e){var n=s.destroy;s.destroy=void 0,void 0!==n&&tl(t,r,n)}s=s.next}while(s!==i)}}function sl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var i=r.create;r.destroy=i()}r=r.next}while(r!==t)}}function nl(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"==typeof t?t(e):t.current=e}}function ol(e){var t=e.alternate;null!==t&&(e.alternate=null,ol(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[us],delete t[ds],delete t[ps],delete t[vs],delete t[gs]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function al(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||al(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cl(e,t,r){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!=(r=r._reactRootContainer)||null!==t.onclick||(t.onclick=Ji));else if(4!==i&&null!==(e=e.child))for(cl(e,t,r),e=e.sibling;null!==e;)cl(e,t,r),e=e.sibling}function hl(e,t,r){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==i&&null!==(e=e.child))for(hl(e,t,r),e=e.sibling;null!==e;)hl(e,t,r),e=e.sibling}var ul=null,dl=!1;function fl(e,t,r){for(r=r.child;null!==r;)pl(e,t,r),r=r.sibling}function pl(e,t,r){if(nt&&"function"==typeof nt.onCommitFiberUnmount)try{nt.onCommitFiberUnmount(st,r)}catch(e){}switch(r.tag){case 5:Xa||el(r,t);case 6:var i=ul,s=dl;ul=null,fl(e,t,r),dl=s,null!==(ul=i)&&(dl?(e=ul,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):ul.removeChild(r.stateNode));break;case 18:null!==ul&&(dl?(e=ul,r=r.stateNode,8===e.nodeType?as(e.parentNode,r):1===e.nodeType&&as(e,r),$t(e)):as(ul,r.stateNode));break;case 4:i=ul,s=dl,ul=r.stateNode.containerInfo,dl=!0,fl(e,t,r),ul=i,dl=s;break;case 0:case 11:case 14:case 15:if(!Xa&&null!==(i=r.updateQueue)&&null!==(i=i.lastEffect)){s=i=i.next;do{var n=s,o=n.destroy;n=n.tag,void 0!==o&&(0!=(2&n)||0!=(4&n))&&tl(r,t,o),s=s.next}while(s!==i)}fl(e,t,r);break;case 1:if(!Xa&&(el(r,t),"function"==typeof(i=r.stateNode).componentWillUnmount))try{i.props=r.memoizedProps,i.state=r.memoizedState,i.componentWillUnmount()}catch(e){Ec(r,t,e)}fl(e,t,r);break;case 21:fl(e,t,r);break;case 22:1&r.mode?(Xa=(i=Xa)||null!==r.memoizedState,fl(e,t,r),Xa=i):fl(e,t,r);break;default:fl(e,t,r)}}function vl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new Ja),t.forEach((function(t){var i=Rc.bind(null,e,t);r.has(t)||(r.add(t),t.then(i,i))}))}}function gl(e,t){var r=t.deletions;if(null!==r)for(var i=0;i<r.length;i++){var s=r[i];try{var o=e,a=t,l=a;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,dl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===ul)throw Error(n(160));pl(o,a,s),ul=null,dl=!1;var c=s.alternate;null!==c&&(c.return=null),s.return=null}catch(e){Ec(s,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)_l(t,e),t=t.sibling}function _l(e,t){var r=e.alternate,i=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gl(t,e),ml(e),4&i){try{il(3,e,e.return),sl(3,e)}catch(t){Ec(e,e.return,t)}try{il(5,e,e.return)}catch(t){Ec(e,e.return,t)}}break;case 1:gl(t,e),ml(e),512&i&&null!==r&&el(r,r.return);break;case 5:if(gl(t,e),ml(e),512&i&&null!==r&&el(r,r.return),32&e.flags){var s=e.stateNode;try{de(s,"")}catch(t){Ec(e,e.return,t)}}if(4&i&&null!=(s=e.stateNode)){var o=e.memoizedProps,a=null!==r?r.memoizedProps:o,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===o.type&&null!=o.name&&X(s,o),be(l,a);var h=be(l,o);for(a=0;a<c.length;a+=2){var u=c[a],d=c[a+1];"style"===u?ge(s,d):"dangerouslySetInnerHTML"===u?ue(s,d):"children"===u?de(s,d):b(s,u,d,h)}switch(l){case"input":J(s,o);break;case"textarea":ne(s,o);break;case"select":var f=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!o.multiple;var p=o.value;null!=p?re(s,!!o.multiple,p,!1):f!==!!o.multiple&&(null!=o.defaultValue?re(s,!!o.multiple,o.defaultValue,!0):re(s,!!o.multiple,o.multiple?[]:"",!1))}s[ds]=o}catch(t){Ec(e,e.return,t)}}break;case 6:if(gl(t,e),ml(e),4&i){if(null===e.stateNode)throw Error(n(162));s=e.stateNode,o=e.memoizedProps;try{s.nodeValue=o}catch(t){Ec(e,e.return,t)}}break;case 3:if(gl(t,e),ml(e),4&i&&null!==r&&r.memoizedState.isDehydrated)try{$t(t.containerInfo)}catch(t){Ec(e,e.return,t)}break;case 4:default:gl(t,e),ml(e);break;case 13:gl(t,e),ml(e),8192&(s=e.child).flags&&(o=null!==s.memoizedState,s.stateNode.isHidden=o,!o||null!==s.alternate&&null!==s.alternate.memoizedState||($l=Xe())),4&i&&vl(e);break;case 22:if(u=null!==r&&null!==r.memoizedState,1&e.mode?(Xa=(h=Xa)||u,gl(t,e),Xa=h):gl(t,e),ml(e),8192&i){if(h=null!==e.memoizedState,(e.stateNode.isHidden=h)&&!u&&0!=(1&e.mode))for(Qa=e,u=e.child;null!==u;){for(d=Qa=u;null!==Qa;){switch(p=(f=Qa).child,f.tag){case 0:case 11:case 14:case 15:il(4,f,f.return);break;case 1:el(f,f.return);var v=f.stateNode;if("function"==typeof v.componentWillUnmount){i=f,r=f.return;try{t=i,v.props=t.memoizedProps,v.state=t.memoizedState,v.componentWillUnmount()}catch(e){Ec(i,r,e)}}break;case 5:el(f,f.return);break;case 22:if(null!==f.memoizedState){Cl(d);continue}}null!==p?(p.return=f,Qa=p):Cl(d)}u=u.sibling}e:for(u=null,d=e;;){if(5===d.tag){if(null===u){u=d;try{s=d.stateNode,h?"function"==typeof(o=s.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=d.stateNode,a=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=ve("display",a))}catch(t){Ec(e,e.return,t)}}}else if(6===d.tag){if(null===u)try{d.stateNode.nodeValue=h?"":d.memoizedProps}catch(t){Ec(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;u===d&&(u=null),d=d.return}u===d&&(u=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:gl(t,e),ml(e),4&i&&vl(e);case 21:}}function ml(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(al(r)){var i=r;break e}r=r.return}throw Error(n(160))}switch(i.tag){case 5:var s=i.stateNode;32&i.flags&&(de(s,""),i.flags&=-33),hl(e,ll(e),s);break;case 3:case 4:var o=i.stateNode.containerInfo;cl(e,ll(e),o);break;default:throw Error(n(161))}}catch(t){Ec(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,r){Qa=e,Sl(e,t,r)}function Sl(e,t,r){for(var i=0!=(1&e.mode);null!==Qa;){var s=Qa,n=s.child;if(22===s.tag&&i){var o=null!==s.memoizedState||Ya;if(!o){var a=s.alternate,l=null!==a&&null!==a.memoizedState||Xa;a=Ya;var c=Xa;if(Ya=o,(Xa=l)&&!c)for(Qa=s;null!==Qa;)l=(o=Qa).child,22===o.tag&&null!==o.memoizedState?wl(s):null!==l?(l.return=o,Qa=l):wl(s);for(;null!==n;)Qa=n,Sl(n,t,r),n=n.sibling;Qa=s,Ya=a,Xa=c}yl(e)}else 0!=(8772&s.subtreeFlags)&&null!==n?(n.return=s,Qa=n):yl(e)}}function yl(e){for(;null!==Qa;){var t=Qa;if(0!=(8772&t.flags)){var r=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xa||sl(5,t);break;case 1:var i=t.stateNode;if(4&t.flags&&!Xa)if(null===r)i.componentDidMount();else{var s=t.elementType===t.type?r.memoizedProps:gn(t.type,r.memoizedProps);i.componentDidUpdate(s,r.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Fn(t,o,i);break;case 3:var a=t.updateQueue;if(null!==a){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}Fn(t,a,r)}break;case 5:var l=t.stateNode;if(null===r&&4&t.flags){r=l;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&r.focus();break;case"img":c.src&&(r.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var h=t.alternate;if(null!==h){var u=h.memoizedState;if(null!==u){var d=u.dehydrated;null!==d&&$t(d)}}}break;default:throw Error(n(163))}Xa||512&t.flags&&nl(t)}catch(e){Ec(t,t.return,e)}}if(t===e){Qa=null;break}if(null!==(r=t.sibling)){r.return=t.return,Qa=r;break}Qa=t.return}}function Cl(e){for(;null!==Qa;){var t=Qa;if(t===e){Qa=null;break}var r=t.sibling;if(null!==r){r.return=t.return,Qa=r;break}Qa=t.return}}function wl(e){for(;null!==Qa;){var t=Qa;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{sl(4,t)}catch(e){Ec(t,r,e)}break;case 1:var i=t.stateNode;if("function"==typeof i.componentDidMount){var s=t.return;try{i.componentDidMount()}catch(e){Ec(t,s,e)}}var n=t.return;try{nl(t)}catch(e){Ec(t,n,e)}break;case 5:var o=t.return;try{nl(t)}catch(e){Ec(t,o,e)}}}catch(e){Ec(t,t.return,e)}if(t===e){Qa=null;break}var a=t.sibling;if(null!==a){a.return=t.return,Qa=a;break}Qa=t.return}}var kl,El=Math.ceil,Al=S.ReactCurrentDispatcher,xl=S.ReactCurrentOwner,Ll=S.ReactCurrentBatchConfig,Rl=0,Tl=null,Dl=null,Il=0,Pl=0,Bl=ws(0),Ol=0,Ml=null,Nl=0,Fl=0,Hl=0,Ul=null,zl=null,$l=0,jl=1/0,Wl=null,Kl=!1,Vl=null,ql=null,Zl=!1,Gl=null,Yl=0,Xl=0,Jl=null,Ql=-1,ec=0;function tc(){return 0!=(6&Rl)?Xe():-1!==Ql?Ql:Ql=Xe()}function rc(e){return 0==(1&e.mode)?1:0!=(2&Rl)&&0!==Il?Il&-Il:null!==vn.transition?(0===ec&&(ec=vt()),ec):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function ic(e,t,r,i){if(50<Xl)throw Xl=0,Jl=null,Error(n(185));_t(e,r,i),0!=(2&Rl)&&e===Tl||(e===Tl&&(0==(2&Rl)&&(Fl|=r),4===Ol&&lc(e,Il)),sc(e,i),1===r&&0===Rl&&0==(1&t.mode)&&(jl=Xe()+500,Fs&&zs()))}function sc(e,t){var r=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,i=e.pingedLanes,s=e.expirationTimes,n=e.pendingLanes;0<n;){var o=31-ot(n),a=1<<o,l=s[o];-1===l?0!=(a&r)&&0==(a&i)||(s[o]=ft(a,t)):l<=t&&(e.expiredLanes|=a),n&=~a}}(e,t);var i=dt(e,e===Tl?Il:0);if(0===i)null!==r&&Ze(r),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=r&&Ze(r),1===t)0===e.tag?function(e){Fs=!0,Us(e)}(cc.bind(null,e)):Us(cc.bind(null,e)),ns((function(){0==(6&Rl)&&zs()})),r=null;else{switch(St(i)){case 1:r=Qe;break;case 4:r=et;break;case 16:default:r=tt;break;case 536870912:r=it}r=Tc(r,nc.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function nc(e,t){if(Ql=-1,ec=0,0!=(6&Rl))throw Error(n(327));var r=e.callbackNode;if(wc()&&e.callbackNode!==r)return null;var i=dt(e,e===Tl?Il:0);if(0===i)return null;if(0!=(30&i)||0!=(i&e.expiredLanes)||t)t=_c(e,i);else{t=i;var s=Rl;Rl|=2;var o=vc();for(Tl===e&&Il===t||(Wl=null,jl=Xe()+500,fc(e,t));;)try{bc();break}catch(t){pc(e,t)}yn(),Al.current=o,Rl=s,null!==Dl?t=0:(Tl=null,Il=0,t=Ol)}if(0!==t){if(2===t&&0!==(s=pt(e))&&(i=s,t=oc(e,s)),1===t)throw r=Ml,fc(e,0),lc(e,i),sc(e,Xe()),r;if(6===t)lc(e,i);else{if(s=e.current.alternate,0==(30&i)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var i=0;i<r.length;i++){var s=r[i],n=s.getSnapshot;s=s.value;try{if(!oi(n(),s))return!1}catch(e){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=_c(e,i))&&0!==(o=pt(e))&&(i=o,t=oc(e,o)),1===t))throw r=Ml,fc(e,0),lc(e,i),sc(e,Xe()),r;switch(e.finishedWork=s,e.finishedLanes=i,t){case 0:case 1:throw Error(n(345));case 2:case 5:Cc(e,zl,Wl);break;case 3:if(lc(e,i),(130023424&i)===i&&10<(t=$l+500-Xe())){if(0!==dt(e,0))break;if(((s=e.suspendedLanes)&i)!==i){tc(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=rs(Cc.bind(null,e,zl,Wl),t);break}Cc(e,zl,Wl);break;case 4:if(lc(e,i),(4194240&i)===i)break;for(t=e.eventTimes,s=-1;0<i;){var a=31-ot(i);o=1<<a,(a=t[a])>s&&(s=a),i&=~o}if(i=s,10<(i=(120>(i=Xe()-i)?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*El(i/1960))-i)){e.timeoutHandle=rs(Cc.bind(null,e,zl,Wl),i);break}Cc(e,zl,Wl);break;default:throw Error(n(329))}}}return sc(e,Xe()),e.callbackNode===r?nc.bind(null,e):null}function oc(e,t){var r=Ul;return e.current.memoizedState.isDehydrated&&(fc(e,t).flags|=256),2!==(e=_c(e,t))&&(t=zl,zl=r,null!==t&&ac(t)),e}function ac(e){null===zl?zl=e:zl.push.apply(zl,e)}function lc(e,t){for(t&=~Hl,t&=~Fl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-ot(t),i=1<<r;e[r]=-1,t&=~i}}function cc(e){if(0!=(6&Rl))throw Error(n(327));wc();var t=dt(e,0);if(0==(1&t))return sc(e,Xe()),null;var r=_c(e,t);if(0!==e.tag&&2===r){var i=pt(e);0!==i&&(t=i,r=oc(e,i))}if(1===r)throw r=Ml,fc(e,0),lc(e,t),sc(e,Xe()),r;if(6===r)throw Error(n(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cc(e,zl,Wl),sc(e,Xe()),null}function hc(e,t){var r=Rl;Rl|=1;try{return e(t)}finally{0===(Rl=r)&&(jl=Xe()+500,Fs&&zs())}}function uc(e){null!==Gl&&0===Gl.tag&&0==(6&Rl)&&wc();var t=Rl;Rl|=1;var r=Ll.transition,i=bt;try{if(Ll.transition=null,bt=1,e)return e()}finally{bt=i,Ll.transition=r,0==(6&(Rl=t))&&zs()}}function dc(){Pl=Bl.current,ks(Bl)}function fc(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,is(r)),null!==Dl)for(r=Dl.return;null!==r;){var i=r;switch(en(i),i.tag){case 1:null!=(i=i.type.childContextTypes)&&Is();break;case 3:so(),ks(Ls),ks(xs),ho();break;case 5:oo(i);break;case 4:so();break;case 13:case 19:ks(ao);break;case 10:Cn(i.type._context);break;case 22:case 23:dc()}r=r.return}if(Tl=e,Dl=e=Bc(e.current,null),Il=Pl=t,Ol=0,Ml=null,Hl=Fl=Nl=0,zl=Ul=null,null!==An){for(t=0;t<An.length;t++)if(null!==(i=(r=An[t]).interleaved)){r.interleaved=null;var s=i.next,n=r.pending;if(null!==n){var o=n.next;n.next=s,i.next=o}r.pending=i}An=null}return e}function pc(e,t){for(;;){var r=Dl;try{if(yn(),uo.current=oa,mo){for(var i=vo.memoizedState;null!==i;){var s=i.queue;null!==s&&(s.pending=null),i=i.next}mo=!1}if(po=0,_o=go=vo=null,bo=!1,So=0,xl.current=null,null===r||null===r.return){Ol=1,Ml=t,Dl=null;break}e:{var o=e,a=r.return,l=r,c=t;if(t=Il,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var h=c,u=l,d=u.tag;if(0==(1&u.mode)&&(0===d||11===d||15===d)){var f=u.alternate;f?(u.updateQueue=f.updateQueue,u.memoizedState=f.memoizedState,u.lanes=f.lanes):(u.updateQueue=null,u.memoizedState=null)}var p=_a(a);if(null!==p){p.flags&=-257,ma(p,a,l,0,t),1&p.mode&&ga(o,h,t),c=h;var v=(t=p).updateQueue;if(null===v){var g=new Set;g.add(c),t.updateQueue=g}else v.add(c);break e}if(0==(1&t)){ga(o,h,t),gc();break e}c=Error(n(426))}else if(sn&&1&l.mode){var _=_a(a);if(null!==_){0==(65536&_.flags)&&(_.flags|=256),ma(_,a,l,0,t),pn(ha(c,l));break e}}o=c=ha(c,l),4!==Ol&&(Ol=2),null===Ul?Ul=[o]:Ul.push(o),o=a;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Mn(o,pa(0,c,t));break e;case 1:l=c;var m=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof m.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===ql||!ql.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,Mn(o,va(o,l,t));break e}}o=o.return}while(null!==o)}yc(r)}catch(e){t=e,Dl===r&&null!==r&&(Dl=r=r.return);continue}break}}function vc(){var e=Al.current;return Al.current=oa,null===e?oa:e}function gc(){0!==Ol&&3!==Ol&&2!==Ol||(Ol=4),null===Tl||0==(268435455&Nl)&&0==(268435455&Fl)||lc(Tl,Il)}function _c(e,t){var r=Rl;Rl|=2;var i=vc();for(Tl===e&&Il===t||(Wl=null,fc(e,t));;)try{mc();break}catch(t){pc(e,t)}if(yn(),Rl=r,Al.current=i,null!==Dl)throw Error(n(261));return Tl=null,Il=0,Ol}function mc(){for(;null!==Dl;)Sc(Dl)}function bc(){for(;null!==Dl&&!Ge();)Sc(Dl)}function Sc(e){var t=kl(e.alternate,e,Pl);e.memoizedProps=e.pendingProps,null===t?yc(e):Dl=t,xl.current=null}function yc(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(r=Za(r,t,Pl)))return void(Dl=r)}else{if(null!==(r=Ga(r,t)))return r.flags&=32767,void(Dl=r);if(null===e)return Ol=6,void(Dl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Dl=t);Dl=t=e}while(null!==t);0===Ol&&(Ol=5)}function Cc(e,t,r){var i=bt,s=Ll.transition;try{Ll.transition=null,bt=1,function(e,t,r,i){do{wc()}while(null!==Gl);if(0!=(6&Rl))throw Error(n(327));r=e.finishedWork;var s=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(n(177));e.callbackNode=null,e.callbackPriority=0;var o=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var i=e.eventTimes;for(e=e.expirationTimes;0<r;){var s=31-ot(r),n=1<<s;t[s]=0,i[s]=-1,e[s]=-1,r&=~n}}(e,o),e===Tl&&(Dl=Tl=null,Il=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||Zl||(Zl=!0,Tc(tt,(function(){return wc(),null}))),o=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||o){o=Ll.transition,Ll.transition=null;var a=bt;bt=1;var l=Rl;Rl|=4,xl.current=null,function(e,t){if(Qi=Wt,di(e=ui())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var i=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(i&&0!==i.rangeCount){r=i.anchorNode;var s=i.anchorOffset,o=i.focusNode;i=i.focusOffset;try{r.nodeType,o.nodeType}catch(e){r=null;break e}var a=0,l=-1,c=-1,h=0,u=0,d=e,f=null;t:for(;;){for(var p;d!==r||0!==s&&3!==d.nodeType||(l=a+s),d!==o||0!==i&&3!==d.nodeType||(c=a+i),3===d.nodeType&&(a+=d.nodeValue.length),null!==(p=d.firstChild);)f=d,d=p;for(;;){if(d===e)break t;if(f===r&&++h===s&&(l=a),f===o&&++u===i&&(c=a),null!==(p=d.nextSibling))break;f=(d=f).parentNode}d=p}r=-1===l||-1===c?null:{start:l,end:c}}else r=null}r=r||{start:0,end:0}}else r=null;for(es={focusedElem:e,selectionRange:r},Wt=!1,Qa=t;null!==Qa;)if(e=(t=Qa).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Qa=e;else for(;null!==Qa;){t=Qa;try{var v=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==v){var g=v.memoizedProps,_=v.memoizedState,m=t.stateNode,b=m.getSnapshotBeforeUpdate(t.elementType===t.type?g:gn(t.type,g),_);m.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var S=t.stateNode.containerInfo;1===S.nodeType?S.textContent="":9===S.nodeType&&S.documentElement&&S.removeChild(S.documentElement);break;default:throw Error(n(163))}}catch(e){Ec(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Qa=e;break}Qa=t.return}v=rl,rl=!1}(e,r),_l(r,e),fi(es),Wt=!!Qi,es=Qi=null,e.current=r,bl(r,e,s),Ye(),Rl=l,bt=a,Ll.transition=o}else e.current=r;if(Zl&&(Zl=!1,Gl=e,Yl=s),0===(o=e.pendingLanes)&&(ql=null),function(e){if(nt&&"function"==typeof nt.onCommitFiberRoot)try{nt.onCommitFiberRoot(st,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode),sc(e,Xe()),null!==t)for(i=e.onRecoverableError,r=0;r<t.length;r++)i((s=t[r]).value,{componentStack:s.stack,digest:s.digest});if(Kl)throw Kl=!1,e=Vl,Vl=null,e;0!=(1&Yl)&&0!==e.tag&&wc(),0!=(1&(o=e.pendingLanes))?e===Jl?Xl++:(Xl=0,Jl=e):Xl=0,zs()}(e,t,r,i)}finally{Ll.transition=s,bt=i}return null}function wc(){if(null!==Gl){var e=St(Yl),t=Ll.transition,r=bt;try{if(Ll.transition=null,bt=16>e?16:e,null===Gl)var i=!1;else{if(e=Gl,Gl=null,Yl=0,0!=(6&Rl))throw Error(n(331));var s=Rl;for(Rl|=4,Qa=e.current;null!==Qa;){var o=Qa,a=o.child;if(0!=(16&Qa.flags)){var l=o.deletions;if(null!==l){for(var c=0;c<l.length;c++){var h=l[c];for(Qa=h;null!==Qa;){var u=Qa;switch(u.tag){case 0:case 11:case 15:il(8,u,o)}var d=u.child;if(null!==d)d.return=u,Qa=d;else for(;null!==Qa;){var f=(u=Qa).sibling,p=u.return;if(ol(u),u===h){Qa=null;break}if(null!==f){f.return=p,Qa=f;break}Qa=p}}}var v=o.alternate;if(null!==v){var g=v.child;if(null!==g){v.child=null;do{var _=g.sibling;g.sibling=null,g=_}while(null!==g)}}Qa=o}}if(0!=(2064&o.subtreeFlags)&&null!==a)a.return=o,Qa=a;else e:for(;null!==Qa;){if(0!=(2048&(o=Qa).flags))switch(o.tag){case 0:case 11:case 15:il(9,o,o.return)}var m=o.sibling;if(null!==m){m.return=o.return,Qa=m;break e}Qa=o.return}}var b=e.current;for(Qa=b;null!==Qa;){var S=(a=Qa).child;if(0!=(2064&a.subtreeFlags)&&null!==S)S.return=a,Qa=S;else e:for(a=b;null!==Qa;){if(0!=(2048&(l=Qa).flags))try{switch(l.tag){case 0:case 11:case 15:sl(9,l)}}catch(e){Ec(l,l.return,e)}if(l===a){Qa=null;break e}var y=l.sibling;if(null!==y){y.return=l.return,Qa=y;break e}Qa=l.return}}if(Rl=s,zs(),nt&&"function"==typeof nt.onPostCommitFiberRoot)try{nt.onPostCommitFiberRoot(st,e)}catch(e){}i=!0}return i}finally{bt=r,Ll.transition=t}}return!1}function kc(e,t,r){e=Bn(e,t=pa(0,t=ha(r,t),1),1),t=tc(),null!==e&&(_t(e,1,t),sc(e,t))}function Ec(e,t,r){if(3===e.tag)kc(e,e,r);else for(;null!==t;){if(3===t.tag){kc(t,e,r);break}if(1===t.tag){var i=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===ql||!ql.has(i))){t=Bn(t,e=va(t,e=ha(r,e),1),1),e=tc(),null!==t&&(_t(t,1,e),sc(t,e));break}}t=t.return}}function Ac(e,t,r){var i=e.pingCache;null!==i&&i.delete(t),t=tc(),e.pingedLanes|=e.suspendedLanes&r,Tl===e&&(Il&r)===r&&(4===Ol||3===Ol&&(130023424&Il)===Il&&500>Xe()-$l?fc(e,0):Hl|=r),sc(e,t)}function xc(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ht,0==(130023424&(ht<<=1))&&(ht=4194304)));var r=tc();null!==(e=Rn(e,t))&&(_t(e,t,r),sc(e,r))}function Lc(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),xc(e,r)}function Rc(e,t){var r=0;switch(e.tag){case 13:var i=e.stateNode,s=e.memoizedState;null!==s&&(r=s.retryLane);break;case 19:i=e.stateNode;break;default:throw Error(n(314))}null!==i&&i.delete(t),xc(e,r)}function Tc(e,t){return qe(e,t)}function Dc(e,t,r,i){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ic(e,t,r,i){return new Dc(e,t,r,i)}function Pc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bc(e,t){var r=e.alternate;return null===r?((r=Ic(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Oc(e,t,r,i,s,o){var a=2;if(i=e,"function"==typeof e)Pc(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case w:return Mc(r.children,s,o,t);case k:a=8,s|=8;break;case E:return(e=Ic(12,r,t,2|s)).elementType=E,e.lanes=o,e;case R:return(e=Ic(13,r,t,s)).elementType=R,e.lanes=o,e;case T:return(e=Ic(19,r,t,s)).elementType=T,e.lanes=o,e;case P:return Nc(r,s,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:a=10;break e;case x:a=9;break e;case L:a=11;break e;case D:a=14;break e;case I:a=16,i=null;break e}throw Error(n(130,null==e?e:typeof e,""))}return(t=Ic(a,r,t,s)).elementType=e,t.type=i,t.lanes=o,t}function Mc(e,t,r,i){return(e=Ic(7,e,i,t)).lanes=r,e}function Nc(e,t,r,i){return(e=Ic(22,e,i,t)).elementType=P,e.lanes=r,e.stateNode={isHidden:!1},e}function Fc(e,t,r){return(e=Ic(6,e,null,t)).lanes=r,e}function Hc(e,t,r){return(t=Ic(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Uc(e,t,r,i,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=i,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function zc(e,t,r,i,s,n,o,a,l){return e=new Uc(e,t,r,a,l),1===t?(t=1,!0===n&&(t|=8)):t=0,n=Ic(3,null,null,t),e.current=n,n.stateNode=e,n.memoizedState={element:i,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},Dn(n),e}function $c(e){if(!e)return As;e:{if($e(e=e._reactInternals)!==e||1!==e.tag)throw Error(n(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ds(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(n(171))}if(1===e.tag){var r=e.type;if(Ds(r))return Bs(e,r,t)}return t}function jc(e,t,r,i,s,n,o,a,l){return(e=zc(r,i,!0,e,0,n,0,a,l)).context=$c(null),r=e.current,(n=Pn(i=tc(),s=rc(r))).callback=null!=t?t:null,Bn(r,n,s),e.current.lanes=s,_t(e,s,i),sc(e,i),e}function Wc(e,t,r,i){var s=t.current,n=tc(),o=rc(s);return r=$c(r),null===t.context?t.context=r:t.pendingContext=r,(t=Pn(n,o)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),null!==(e=Bn(s,t,o))&&(ic(e,s,o,n),On(e,s,o)),o}function Kc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function qc(e,t){Vc(e,t),(e=e.alternate)&&Vc(e,t)}kl=function(e,t,r){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ls.current)Sa=!0;else{if(0==(e.lanes&r)&&0==(128&t.flags))return Sa=!1,function(e,t,r){switch(t.tag){case 3:Ta(t),fn();break;case 5:no(t);break;case 1:Ds(t.type)&&Os(t);break;case 4:io(t,t.stateNode.containerInfo);break;case 10:var i=t.type._context,s=t.memoizedProps.value;Es(_n,i._currentValue),i._currentValue=s;break;case 13:if(null!==(i=t.memoizedState))return null!==i.dehydrated?(Es(ao,1&ao.current),t.flags|=128,null):0!=(r&t.child.childLanes)?Fa(e,t,r):(Es(ao,1&ao.current),null!==(e=Ka(e,t,r))?e.sibling:null);Es(ao,1&ao.current);break;case 19:if(i=0!=(r&t.childLanes),0!=(128&e.flags)){if(i)return ja(e,t,r);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),Es(ao,ao.current),i)break;return null;case 22:case 23:return t.lanes=0,Ea(e,t,r)}return Ka(e,t,r)}(e,t,r);Sa=0!=(131072&e.flags)}else Sa=!1,sn&&0!=(1048576&t.flags)&&Js(t,Ks,t.index);switch(t.lanes=0,t.tag){case 2:var i=t.type;Wa(e,t),e=t.pendingProps;var s=Ts(t,xs.current);kn(t,r),s=ko(null,t,i,e,s,r);var o=Eo();return t.flags|=1,"object"==typeof s&&null!==s&&"function"==typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ds(i)?(o=!0,Os(t)):o=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Dn(t),s.updater=zn,t.stateNode=s,s._reactInternals=t,Kn(t,i,e,r),t=Ra(null,t,i,!0,o,r)):(t.tag=0,sn&&o&&Qs(t),ya(null,t,s,r),t=t.child),t;case 16:i=t.elementType;e:{switch(Wa(e,t),e=t.pendingProps,i=(s=i._init)(i._payload),t.type=i,s=t.tag=function(e){if("function"==typeof e)return Pc(e)?1:0;if(null!=e){if((e=e.$$typeof)===L)return 11;if(e===D)return 14}return 2}(i),e=gn(i,e),s){case 0:t=xa(null,t,i,e,r);break e;case 1:t=La(null,t,i,e,r);break e;case 11:t=Ca(null,t,i,e,r);break e;case 14:t=wa(null,t,i,gn(i.type,e),r);break e}throw Error(n(306,i,""))}return t;case 0:return i=t.type,s=t.pendingProps,xa(e,t,i,s=t.elementType===i?s:gn(i,s),r);case 1:return i=t.type,s=t.pendingProps,La(e,t,i,s=t.elementType===i?s:gn(i,s),r);case 3:e:{if(Ta(t),null===e)throw Error(n(387));i=t.pendingProps,s=(o=t.memoizedState).element,In(e,t),Nn(t,i,null,r);var a=t.memoizedState;if(i=a.element,o.isDehydrated){if(o={element:i,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Da(e,t,i,r,s=ha(Error(n(423)),t));break e}if(i!==s){t=Da(e,t,i,r,s=ha(Error(n(424)),t));break e}for(rn=ls(t.stateNode.containerInfo.firstChild),tn=t,sn=!0,nn=null,r=Xn(t,null,i,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(fn(),i===s){t=Ka(e,t,r);break e}ya(e,t,i,r)}t=t.child}return t;case 5:return no(t),null===e&&cn(t),i=t.type,s=t.pendingProps,o=null!==e?e.memoizedProps:null,a=s.children,ts(i,s)?a=null:null!==o&&ts(i,o)&&(t.flags|=32),Aa(e,t),ya(e,t,a,r),t.child;case 6:return null===e&&cn(t),null;case 13:return Fa(e,t,r);case 4:return io(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=Yn(t,null,i,r):ya(e,t,i,r),t.child;case 11:return i=t.type,s=t.pendingProps,Ca(e,t,i,s=t.elementType===i?s:gn(i,s),r);case 7:return ya(e,t,t.pendingProps,r),t.child;case 8:case 12:return ya(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(i=t.type._context,s=t.pendingProps,o=t.memoizedProps,a=s.value,Es(_n,i._currentValue),i._currentValue=a,null!==o)if(oi(o.value,a)){if(o.children===s.children&&!Ls.current){t=Ka(e,t,r);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var l=o.dependencies;if(null!==l){a=o.child;for(var c=l.firstContext;null!==c;){if(c.context===i){if(1===o.tag){(c=Pn(-1,r&-r)).tag=2;var h=o.updateQueue;if(null!==h){var u=(h=h.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),h.pending=c}}o.lanes|=r,null!==(c=o.alternate)&&(c.lanes|=r),wn(o.return,r,t),l.lanes|=r;break}c=c.next}}else if(10===o.tag)a=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(a=o.return))throw Error(n(341));a.lanes|=r,null!==(l=a.alternate)&&(l.lanes|=r),wn(a,r,t),a=o.sibling}else a=o.child;if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===t){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}ya(e,t,s.children,r),t=t.child}return t;case 9:return s=t.type,i=t.pendingProps.children,kn(t,r),i=i(s=En(s)),t.flags|=1,ya(e,t,i,r),t.child;case 14:return s=gn(i=t.type,t.pendingProps),wa(e,t,i,s=gn(i.type,s),r);case 15:return ka(e,t,t.type,t.pendingProps,r);case 17:return i=t.type,s=t.pendingProps,s=t.elementType===i?s:gn(i,s),Wa(e,t),t.tag=1,Ds(i)?(e=!0,Os(t)):e=!1,kn(t,r),jn(t,i,s),Kn(t,i,s,r),Ra(null,t,i,!0,e,r);case 19:return ja(e,t,r);case 22:return Ea(e,t,r)}throw Error(n(156,t.tag))};var Zc="function"==typeof reportError?reportError:function(e){console.error(e)};function Gc(e){this._internalRoot=e}function Yc(e){this._internalRoot=e}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Qc(){}function eh(e,t,r,i,s){var n=r._reactRootContainer;if(n){var o=n;if("function"==typeof s){var a=s;s=function(){var e=Kc(o);a.call(e)}}Wc(t,o,e,s)}else o=function(e,t,r,i,s){if(s){if("function"==typeof i){var n=i;i=function(){var e=Kc(o);n.call(e)}}var o=jc(t,i,e,0,null,!1,0,"",Qc);return e._reactRootContainer=o,e[fs]=o.current,zi(8===e.nodeType?e.parentNode:e),uc(),o}for(;s=e.lastChild;)e.removeChild(s);if("function"==typeof i){var a=i;i=function(){var e=Kc(l);a.call(e)}}var l=zc(e,0,!1,null,0,!1,0,"",Qc);return e._reactRootContainer=l,e[fs]=l.current,zi(8===e.nodeType?e.parentNode:e),uc((function(){Wc(t,l,r,i)})),l}(r,t,e,s,i);return Kc(o)}Yc.prototype.render=Gc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(n(409));Wc(e,t,null,null)},Yc.prototype.unmount=Gc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){Wc(null,e,null,null)})),t[fs]=null}},Yc.prototype.unstable_scheduleHydration=function(e){if(e){var t=kt();e={blockedOn:null,target:e,priority:t};for(var r=0;r<Pt.length&&0!==t&&t<Pt[r].priority;r++);Pt.splice(r,0,e),0===r&&Nt(e)}},yt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=ut(t.pendingLanes);0!==r&&(mt(t,1|r),sc(t,Xe()),0==(6&Rl)&&(jl=Xe()+500,zs()))}break;case 13:uc((function(){var t=Rn(e,1);if(null!==t){var r=tc();ic(t,e,1,r)}})),qc(e,1)}},Ct=function(e){if(13===e.tag){var t=Rn(e,134217728);null!==t&&ic(t,e,134217728,tc()),qc(e,134217728)}},wt=function(e){if(13===e.tag){var t=rc(e),r=Rn(e,t);null!==r&&ic(r,e,t,tc()),qc(e,t)}},kt=function(){return bt},Et=function(e,t){var r=bt;try{return bt=e,t()}finally{bt=r}},Ce=function(e,t,r){switch(t){case"input":if(J(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var i=r[t];if(i!==e&&i.form===e.form){var s=Ss(i);if(!s)throw Error(n(90));q(i),J(i,s)}}}break;case"textarea":ne(e,r);break;case"select":null!=(t=r.value)&&re(e,!!r.multiple,t,!1)}},Le=hc,Re=uc;var th={usingClientEntryPoint:!1,Events:[ms,bs,Ss,Ae,xe,hc]},rh={findFiberByHostInstance:_s,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ih={bundleType:rh.bundleType,version:rh.version,rendererPackageName:rh.rendererPackageName,rendererConfig:rh.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:S.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ke(e))?null:e.stateNode},findFiberByHostInstance:rh.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var sh=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sh.isDisabled&&sh.supportsFiber)try{st=sh.inject(ih),nt=sh}catch(he){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=th,t.createPortal=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xc(t))throw Error(n(200));return function(e,t,r){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:C,key:null==i?null:""+i,children:e,containerInfo:t,implementation:r}}(e,t,null,r)},t.createRoot=function(e,t){if(!Xc(e))throw Error(n(299));var r=!1,i="",s=Zc;return null!=t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=zc(e,1,!1,null,0,r,0,i,s),e[fs]=t.current,zi(8===e.nodeType?e.parentNode:e),new Gc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(n(188));throw e=Object.keys(e).join(","),Error(n(268,e))}return null===(e=Ke(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,r){if(!Jc(t))throw Error(n(200));return eh(null,e,t,!0,r)},t.hydrateRoot=function(e,t,r){if(!Xc(e))throw Error(n(405));var i=null!=r&&r.hydratedSources||null,s=!1,o="",a=Zc;if(null!=r&&(!0===r.unstable_strictMode&&(s=!0),void 0!==r.identifierPrefix&&(o=r.identifierPrefix),void 0!==r.onRecoverableError&&(a=r.onRecoverableError)),t=jc(t,null,e,1,null!=r?r:null,s,0,o,a),e[fs]=t.current,zi(e),i)for(e=0;e<i.length;e++)s=(s=(r=i[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,s]:t.mutableSourceEagerHydrationData.push(r,s);return new Yc(t)},t.render=function(e,t,r){if(!Jc(t))throw Error(n(200));return eh(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!Jc(e))throw Error(n(40));return!!e._reactRootContainer&&(uc((function(){eh(null,null,e,!1,(function(){e._reactRootContainer=null,e[fs]=null}))})),!0)},t.unstable_batchedUpdates=hc,t.unstable_renderSubtreeIntoContainer=function(e,t,r,i){if(!Jc(r))throw Error(n(200));if(null==e||void 0===e._reactInternals)throw Error(n(38));return eh(e,t,r,!1,i)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,r)=>{"use strict";var i=r(935);t.s=i.createRoot,i.hydrateRoot},935:(e,t,r)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(448)},408:(e,t)=>{"use strict";var r=Symbol.for("react.element"),i=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),n=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),f=Symbol.iterator,p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v=Object.assign,g={};function _(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||p}function m(){}function b(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||p}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=_.prototype;var S=b.prototype=new m;S.constructor=b,v(S,_.prototype),S.isPureReactComponent=!0;var y=Array.isArray,C=Object.prototype.hasOwnProperty,w={current:null},k={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,i){var s,n={},o=null,a=null;if(null!=t)for(s in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(o=""+t.key),t)C.call(t,s)&&!k.hasOwnProperty(s)&&(n[s]=t[s]);var l=arguments.length-2;if(1===l)n.children=i;else if(1<l){for(var c=Array(l),h=0;h<l;h++)c[h]=arguments[h+2];n.children=c}if(e&&e.defaultProps)for(s in l=e.defaultProps)void 0===n[s]&&(n[s]=l[s]);return{$$typeof:r,type:e,key:o,ref:a,props:n,_owner:w.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var x=/\/+/g;function L(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,s,n,o){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var l=!1;if(null===e)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case r:case i:l=!0}}if(l)return o=o(l=e),e=""===n?"."+L(l,0):n,y(o)?(s="",null!=e&&(s=e.replace(x,"$&/")+"/"),R(o,t,s,"",(function(e){return e}))):null!=o&&(A(o)&&(o=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,s+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(x,"$&/")+"/")+e)),t.push(o)),1;if(l=0,n=""===n?".":n+":",y(e))for(var c=0;c<e.length;c++){var h=n+L(a=e[c],c);l+=R(a,t,s,h,o)}else if(h=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof h)for(e=h.call(e),c=0;!(a=e.next()).done;)l+=R(a=a.value,t,s,h=n+L(a,c++),o);else if("object"===a)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function T(e,t,r){if(null==e)return e;var i=[],s=0;return R(e,i,"","",(function(e){return t.call(r,e,s++)})),i}function D(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var I={current:null},P={transition:null},B={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:P,ReactCurrentOwner:w};t.Children={map:T,forEach:function(e,t,r){T(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!A(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=_,t.Fragment=s,t.Profiler=o,t.PureComponent=b,t.StrictMode=n,t.Suspense=h,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,t.cloneElement=function(e,t,i){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=v({},e.props),n=e.key,o=e.ref,a=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,a=w.current),void 0!==t.key&&(n=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in t)C.call(t,c)&&!k.hasOwnProperty(c)&&(s[c]=void 0===t[c]&&void 0!==l?l[c]:t[c])}var c=arguments.length-2;if(1===c)s.children=i;else if(1<c){l=Array(c);for(var h=0;h<c;h++)l[h]=arguments[h+2];s.children=l}return{$$typeof:r,type:e.type,key:n,ref:o,props:s,_owner:a}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=A,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:D}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=P.transition;P.transition={};try{e()}finally{P.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return I.current.useCallback(e,t)},t.useContext=function(e){return I.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return I.current.useDeferredValue(e)},t.useEffect=function(e,t){return I.current.useEffect(e,t)},t.useId=function(){return I.current.useId()},t.useImperativeHandle=function(e,t,r){return I.current.useImperativeHandle(e,t,r)},t.useInsertionEffect=function(e,t){return I.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return I.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return I.current.useMemo(e,t)},t.useReducer=function(e,t,r){return I.current.useReducer(e,t,r)},t.useRef=function(e){return I.current.useRef(e)},t.useState=function(e){return I.current.useState(e)},t.useSyncExternalStore=function(e,t,r){return I.current.useSyncExternalStore(e,t,r)},t.useTransition=function(){return I.current.useTransition()},t.version="18.2.0"},294:(e,t,r)=>{"use strict";e.exports=r(408)},53:(e,t)=>{"use strict";function r(e,t){var r=e.length;e.push(t);e:for(;0<r;){var i=r-1>>>1,s=e[i];if(!(0<n(s,t)))break e;e[i]=t,e[r]=s,r=i}}function i(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;e:for(var i=0,s=e.length,o=s>>>1;i<o;){var a=2*(i+1)-1,l=e[a],c=a+1,h=e[c];if(0>n(l,r))c<s&&0>n(h,l)?(e[i]=h,e[c]=r,i=c):(e[i]=l,e[a]=r,i=a);else{if(!(c<s&&0>n(h,r)))break e;e[i]=h,e[c]=r,i=c}}}return t}function n(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var a=Date,l=a.now();t.unstable_now=function(){return a.now()-l}}var c=[],h=[],u=1,d=null,f=3,p=!1,v=!1,g=!1,_="function"==typeof setTimeout?setTimeout:null,m="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function S(e){for(var t=i(h);null!==t;){if(null===t.callback)s(h);else{if(!(t.startTime<=e))break;s(h),t.sortIndex=t.expirationTime,r(c,t)}t=i(h)}}function y(e){if(g=!1,S(e),!v)if(null!==i(c))v=!0,P(C);else{var t=i(h);null!==t&&B(y,t.startTime-e)}}function C(e,r){v=!1,g&&(g=!1,m(A),A=-1),p=!0;var n=f;try{for(S(r),d=i(c);null!==d&&(!(d.expirationTime>r)||e&&!R());){var o=d.callback;if("function"==typeof o){d.callback=null,f=d.priorityLevel;var a=o(d.expirationTime<=r);r=t.unstable_now(),"function"==typeof a?d.callback=a:d===i(c)&&s(c),S(r)}else s(c);d=i(c)}if(null!==d)var l=!0;else{var u=i(h);null!==u&&B(y,u.startTime-r),l=!1}return l}finally{d=null,f=n,p=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,k=!1,E=null,A=-1,x=5,L=-1;function R(){return!(t.unstable_now()-L<x)}function T(){if(null!==E){var e=t.unstable_now();L=e;var r=!0;try{r=E(!0,e)}finally{r?w():(k=!1,E=null)}}else k=!1}if("function"==typeof b)w=function(){b(T)};else if("undefined"!=typeof MessageChannel){var D=new MessageChannel,I=D.port2;D.port1.onmessage=T,w=function(){I.postMessage(null)}}else w=function(){_(T,0)};function P(e){E=e,k||(k=!0,w())}function B(e,r){A=_((function(){e(t.unstable_now())}),r)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){v||p||(v=!0,P(C))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):x=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return i(c)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var r=f;f=t;try{return e()}finally{f=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=f;f=e;try{return t()}finally{f=r}},t.unstable_scheduleCallback=function(e,s,n){var o=t.unstable_now();switch(n="object"==typeof n&&null!==n&&"number"==typeof(n=n.delay)&&0<n?o+n:o,e){case 1:var a=-1;break;case 2:a=250;break;case 5:a=1073741823;break;case 4:a=1e4;break;default:a=5e3}return e={id:u++,callback:s,priorityLevel:e,startTime:n,expirationTime:a=n+a,sortIndex:-1},n>o?(e.sortIndex=n,r(h,e),null===i(c)&&e===i(h)&&(g?(m(A),A=-1):g=!0,B(y,n-o))):(e.sortIndex=a,r(c,e),v||p||(v=!0,P(C))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=f;return function(){var r=f;f=t;try{return e.apply(this,arguments)}finally{f=r}}}},840:(e,t,r)=>{"use strict";e.exports=r(53)},774:e=>{e.exports=function(e,t,r,i){var s=r?r.call(i,e,t):void 0;if(void 0!==s)return!!s;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var n=Object.keys(e),o=Object.keys(t);if(n.length!==o.length)return!1;for(var a=Object.prototype.hasOwnProperty.bind(t),l=0;l<n.length;l++){var c=n[l];if(!a(c))return!1;var h=e[c],u=t[c];if(!1===(s=r?r.call(i,h,u,c):void 0)||void 0===s&&h!==u)return!1}return!0}},379:e=>{"use strict";var t=[];function r(e){for(var r=-1,i=0;i<t.length;i++)if(t[i].identifier===e){r=i;break}return r}function i(e,i){for(var n={},o=[],a=0;a<e.length;a++){var l=e[a],c=i.base?l[0]+i.base:l[0],h=n[c]||0,u="".concat(c," ").concat(h);n[c]=h+1;var d=r(u),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(f);else{var p=s(f,i);i.byIndex=a,t.splice(a,0,{identifier:u,updater:p,references:1})}o.push(u)}return o}function s(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,s){var n=i(e=e||[],s=s||{});return function(e){e=e||[];for(var o=0;o<n.length;o++){var a=r(n[o]);t[a].references--}for(var l=i(e,s),c=0;c<n.length;c++){var h=r(n[c]);0===t[h].references&&(t[h].updater(),t.splice(h,1))}n=l}}},569:e=>{"use strict";var t={};e.exports=function(e,r){var i=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(r)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,r)=>{"use strict";e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var i="";r.supports&&(i+="@supports (".concat(r.supports,") {")),r.media&&(i+="@media ".concat(r.media," {"));var s=void 0!==r.layer;s&&(i+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),i+=r.css,s&&(i+="}"),r.media&&(i+="}"),r.supports&&(i+="}");var n=r.sourceMap;n&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},739:e=>{e.exports={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}},320:e=>{var t;self,t=()=>(()=>{"use strict";var e={4567:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.AccessibilityManager=void 0;const n=r(9042),o=r(6114),a=r(9924),l=r(844),c=r(5596),h=r(4725),u=r(3656);let d=class extends l.Disposable{constructor(e,t){super(),this._terminal=e,this._renderService=t,this._liveRegionLineCount=0,this._charsToConsume=[],this._charsToAnnounce="",this._accessibilityContainer=document.createElement("div"),this._accessibilityContainer.classList.add("xterm-accessibility"),this._rowContainer=document.createElement("div"),this._rowContainer.setAttribute("role","list"),this._rowContainer.classList.add("xterm-accessibility-tree"),this._rowElements=[];for(let e=0;e<this._terminal.rows;e++)this._rowElements[e]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[e]);if(this._topBoundaryFocusListener=e=>this._handleBoundaryFocus(e,0),this._bottomBoundaryFocusListener=e=>this._handleBoundaryFocus(e,1),this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions(),this._accessibilityContainer.appendChild(this._rowContainer),this._liveRegion=document.createElement("div"),this._liveRegion.classList.add("live-region"),this._liveRegion.setAttribute("aria-live","assertive"),this._accessibilityContainer.appendChild(this._liveRegion),this._liveRegionDebouncer=this.register(new a.TimeBasedDebouncer(this._announceCharacters.bind(this))),!this._terminal.element)throw new Error("Cannot enable accessibility before Terminal.open");this._terminal.element.insertAdjacentElement("afterbegin",this._accessibilityContainer),this.register(this._liveRegionDebouncer),this.register(this._terminal.onResize((e=>this._handleResize(e.rows)))),this.register(this._terminal.onRender((e=>this._refreshRows(e.start,e.end)))),this.register(this._terminal.onScroll((()=>this._refreshRows()))),this.register(this._terminal.onA11yChar((e=>this._handleChar(e)))),this.register(this._terminal.onLineFeed((()=>this._handleChar("\n")))),this.register(this._terminal.onA11yTab((e=>this._handleTab(e)))),this.register(this._terminal.onKey((e=>this._handleKey(e.key)))),this.register(this._terminal.onBlur((()=>this._clearLiveRegion()))),this.register(this._renderService.onDimensionsChange((()=>this._refreshRowsDimensions()))),this._screenDprMonitor=new c.ScreenDprMonitor(window),this.register(this._screenDprMonitor),this._screenDprMonitor.setListener((()=>this._refreshRowsDimensions())),this.register((0,u.addDisposableDomListener)(window,"resize",(()=>this._refreshRowsDimensions()))),this._refreshRows(),this.register((0,l.toDisposable)((()=>{this._accessibilityContainer.remove(),this._rowElements.length=0})))}_handleTab(e){for(let t=0;t<e;t++)this._handleChar(" ")}_handleChar(e){this._liveRegionLineCount<21&&(this._charsToConsume.length>0?this._charsToConsume.shift()!==e&&(this._charsToAnnounce+=e):this._charsToAnnounce+=e,"\n"===e&&(this._liveRegionLineCount++,21===this._liveRegionLineCount&&(this._liveRegion.textContent+=n.tooMuchOutput)),o.isMac&&this._liveRegion.textContent&&this._liveRegion.textContent.length>0&&!this._liveRegion.parentNode&&setTimeout((()=>{this._accessibilityContainer.appendChild(this._liveRegion)}),0))}_clearLiveRegion(){this._liveRegion.textContent="",this._liveRegionLineCount=0,o.isMac&&this._liveRegion.remove()}_handleKey(e){this._clearLiveRegion(),/\p{Control}/u.test(e)||this._charsToConsume.push(e)}_refreshRows(e,t){this._liveRegionDebouncer.refresh(e,t,this._terminal.rows)}_announceCharacters(){0!==this._charsToAnnounce.length&&(this._liveRegion.textContent+=this._charsToAnnounce,this._charsToAnnounce="")}_handleBoundaryFocus(e,t){const r=e.target,i=this._rowElements[0===t?1:this._rowElements.length-2];if(r.getAttribute("aria-posinset")===(0===t?"1":`${this._terminal.buffer.lines.length}`))return;if(e.relatedTarget!==i)return;let s,n;if(0===t?(s=r,n=this._rowElements.pop(),this._rowContainer.removeChild(n)):(s=this._rowElements.shift(),n=r,this._rowContainer.removeChild(s)),s.removeEventListener("focus",this._topBoundaryFocusListener),n.removeEventListener("focus",this._bottomBoundaryFocusListener),0===t){const e=this._createAccessibilityTreeNode();this._rowElements.unshift(e),this._rowContainer.insertAdjacentElement("afterbegin",e)}else{const e=this._createAccessibilityTreeNode();this._rowElements.push(e),this._rowContainer.appendChild(e)}this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._terminal.scrollLines(0===t?-1:1),this._rowElements[0===t?1:this._rowElements.length-2].focus(),e.preventDefault(),e.stopImmediatePropagation()}_handleResize(e){this._rowElements[this._rowElements.length-1].removeEventListener("focus",this._bottomBoundaryFocusListener);for(let e=this._rowContainer.children.length;e<this._terminal.rows;e++)this._rowElements[e]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[e]);for(;this._rowElements.length>e;)this._rowContainer.removeChild(this._rowElements.pop());this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions()}_createAccessibilityTreeNode(){const e=document.createElement("div");return e.setAttribute("role","listitem"),e.tabIndex=-1,this._refreshRowDimensions(e),e}_refreshRowsDimensions(){if(this._renderService.dimensions.css.cell.height){this._accessibilityContainer.style.width=`${this._renderService.dimensions.css.canvas.width}px`,this._rowElements.length!==this._terminal.rows&&this._handleResize(this._terminal.rows);for(let e=0;e<this._terminal.rows;e++)this._refreshRowDimensions(this._rowElements[e])}}_refreshRowDimensions(e){e.style.height=`${this._renderService.dimensions.css.cell.height}px`}};d=i([s(1,h.IRenderService)],d),t.AccessibilityManager=d},3614:(e,t)=>{function r(e){return e.replace(/\r?\n/g,"\r")}function i(e,t){return t?"[200~"+e+"[201~":e}function s(e,t,s){e=i(e=r(e),s.decPrivateModes.bracketedPasteMode),s.triggerDataEvent(e,!0),t.value=""}function n(e,t,r){const i=r.getBoundingClientRect(),s=e.clientX-i.left-10,n=e.clientY-i.top-10;t.style.width="20px",t.style.height="20px",t.style.left=`${s}px`,t.style.top=`${n}px`,t.style.zIndex="1000",t.focus()}Object.defineProperty(t,"__esModule",{value:!0}),t.rightClickHandler=t.moveTextAreaUnderMouseCursor=t.paste=t.handlePasteEvent=t.copyHandler=t.bracketTextForPaste=t.prepareTextForTerminal=void 0,t.prepareTextForTerminal=r,t.bracketTextForPaste=i,t.copyHandler=function(e,t){e.clipboardData&&e.clipboardData.setData("text/plain",t.selectionText),e.preventDefault()},t.handlePasteEvent=function(e,t,r){e.stopPropagation(),e.clipboardData&&s(e.clipboardData.getData("text/plain"),t,r)},t.paste=s,t.moveTextAreaUnderMouseCursor=n,t.rightClickHandler=function(e,t,r,i,s){n(e,t,r),s&&i.rightClickSelect(e),t.value=i.selectionText,t.select()}},7239:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorContrastCache=void 0;const i=r(1505);t.ColorContrastCache=class{constructor(){this._color=new i.TwoKeyMap,this._css=new i.TwoKeyMap}setCss(e,t,r){this._css.set(e,t,r)}getCss(e,t){return this._css.get(e,t)}setColor(e,t,r){this._color.set(e,t,r)}getColor(e,t){return this._color.get(e,t)}clear(){this._color.clear(),this._css.clear()}}},3656:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.addDisposableDomListener=void 0,t.addDisposableDomListener=function(e,t,r,i){e.addEventListener(t,r,i);let s=!1;return{dispose:()=>{s||(s=!0,e.removeEventListener(t,r,i))}}}},6465:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.Linkifier2=void 0;const n=r(2585),o=r(8460),a=r(844),l=r(3656);let c=class extends a.Disposable{constructor(e){super(),this._bufferService=e,this._linkProviders=[],this._linkCacheDisposables=[],this._isMouseOut=!0,this._wasResized=!1,this._activeLine=-1,this._onShowLinkUnderline=this.register(new o.EventEmitter),this.onShowLinkUnderline=this._onShowLinkUnderline.event,this._onHideLinkUnderline=this.register(new o.EventEmitter),this.onHideLinkUnderline=this._onHideLinkUnderline.event,this.register((0,a.getDisposeArrayDisposable)(this._linkCacheDisposables)),this.register((0,a.toDisposable)((()=>{this._lastMouseEvent=void 0}))),this.register(this._bufferService.onResize((()=>{this._clearCurrentLink(),this._wasResized=!0})))}get currentLink(){return this._currentLink}registerLinkProvider(e){return this._linkProviders.push(e),{dispose:()=>{const t=this._linkProviders.indexOf(e);-1!==t&&this._linkProviders.splice(t,1)}}}attachToDom(e,t,r){this._element=e,this._mouseService=t,this._renderService=r,this.register((0,l.addDisposableDomListener)(this._element,"mouseleave",(()=>{this._isMouseOut=!0,this._clearCurrentLink()}))),this.register((0,l.addDisposableDomListener)(this._element,"mousemove",this._handleMouseMove.bind(this))),this.register((0,l.addDisposableDomListener)(this._element,"mousedown",this._handleMouseDown.bind(this))),this.register((0,l.addDisposableDomListener)(this._element,"mouseup",this._handleMouseUp.bind(this)))}_handleMouseMove(e){if(this._lastMouseEvent=e,!this._element||!this._mouseService)return;const t=this._positionFromMouseEvent(e,this._element,this._mouseService);if(!t)return;this._isMouseOut=!1;const r=e.composedPath();for(let e=0;e<r.length;e++){const t=r[e];if(t.classList.contains("xterm"))break;if(t.classList.contains("xterm-hover"))return}this._lastBufferCell&&t.x===this._lastBufferCell.x&&t.y===this._lastBufferCell.y||(this._handleHover(t),this._lastBufferCell=t)}_handleHover(e){if(this._activeLine!==e.y||this._wasResized)return this._clearCurrentLink(),this._askForLink(e,!1),void(this._wasResized=!1);this._currentLink&&this._linkAtPosition(this._currentLink.link,e)||(this._clearCurrentLink(),this._askForLink(e,!0))}_askForLink(e,t){var r,i;this._activeProviderReplies&&t||(null===(r=this._activeProviderReplies)||void 0===r||r.forEach((e=>{null==e||e.forEach((e=>{e.link.dispose&&e.link.dispose()}))})),this._activeProviderReplies=new Map,this._activeLine=e.y);let s=!1;for(const[r,n]of this._linkProviders.entries())t?(null===(i=this._activeProviderReplies)||void 0===i?void 0:i.get(r))&&(s=this._checkLinkProviderResult(r,e,s)):n.provideLinks(e.y,(t=>{var i,n;if(this._isMouseOut)return;const o=null==t?void 0:t.map((e=>({link:e})));null===(i=this._activeProviderReplies)||void 0===i||i.set(r,o),s=this._checkLinkProviderResult(r,e,s),(null===(n=this._activeProviderReplies)||void 0===n?void 0:n.size)===this._linkProviders.length&&this._removeIntersectingLinks(e.y,this._activeProviderReplies)}))}_removeIntersectingLinks(e,t){const r=new Set;for(let i=0;i<t.size;i++){const s=t.get(i);if(s)for(let t=0;t<s.length;t++){const i=s[t],n=i.link.range.start.y<e?0:i.link.range.start.x,o=i.link.range.end.y>e?this._bufferService.cols:i.link.range.end.x;for(let e=n;e<=o;e++){if(r.has(e)){s.splice(t--,1);break}r.add(e)}}}}_checkLinkProviderResult(e,t,r){var i;if(!this._activeProviderReplies)return r;const s=this._activeProviderReplies.get(e);let n=!1;for(let t=0;t<e;t++)this._activeProviderReplies.has(t)&&!this._activeProviderReplies.get(t)||(n=!0);if(!n&&s){const e=s.find((e=>this._linkAtPosition(e.link,t)));e&&(r=!0,this._handleNewLink(e))}if(this._activeProviderReplies.size===this._linkProviders.length&&!r)for(let e=0;e<this._activeProviderReplies.size;e++){const s=null===(i=this._activeProviderReplies.get(e))||void 0===i?void 0:i.find((e=>this._linkAtPosition(e.link,t)));if(s){r=!0,this._handleNewLink(s);break}}return r}_handleMouseDown(){this._mouseDownLink=this._currentLink}_handleMouseUp(e){if(!this._element||!this._mouseService||!this._currentLink)return;const t=this._positionFromMouseEvent(e,this._element,this._mouseService);t&&this._mouseDownLink===this._currentLink&&this._linkAtPosition(this._currentLink.link,t)&&this._currentLink.link.activate(e,this._currentLink.link.text)}_clearCurrentLink(e,t){this._element&&this._currentLink&&this._lastMouseEvent&&(!e||!t||this._currentLink.link.range.start.y>=e&&this._currentLink.link.range.end.y<=t)&&(this._linkLeave(this._element,this._currentLink.link,this._lastMouseEvent),this._currentLink=void 0,(0,a.disposeArray)(this._linkCacheDisposables))}_handleNewLink(e){if(!this._element||!this._lastMouseEvent||!this._mouseService)return;const t=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);t&&this._linkAtPosition(e.link,t)&&(this._currentLink=e,this._currentLink.state={decorations:{underline:void 0===e.link.decorations||e.link.decorations.underline,pointerCursor:void 0===e.link.decorations||e.link.decorations.pointerCursor},isHovered:!0},this._linkHover(this._element,e.link,this._lastMouseEvent),e.link.decorations={},Object.defineProperties(e.link.decorations,{pointerCursor:{get:()=>{var e,t;return null===(t=null===(e=this._currentLink)||void 0===e?void 0:e.state)||void 0===t?void 0:t.decorations.pointerCursor},set:e=>{var t,r;(null===(t=this._currentLink)||void 0===t?void 0:t.state)&&this._currentLink.state.decorations.pointerCursor!==e&&(this._currentLink.state.decorations.pointerCursor=e,this._currentLink.state.isHovered&&(null===(r=this._element)||void 0===r||r.classList.toggle("xterm-cursor-pointer",e)))}},underline:{get:()=>{var e,t;return null===(t=null===(e=this._currentLink)||void 0===e?void 0:e.state)||void 0===t?void 0:t.decorations.underline},set:t=>{var r,i,s;(null===(r=this._currentLink)||void 0===r?void 0:r.state)&&(null===(s=null===(i=this._currentLink)||void 0===i?void 0:i.state)||void 0===s?void 0:s.decorations.underline)!==t&&(this._currentLink.state.decorations.underline=t,this._currentLink.state.isHovered&&this._fireUnderlineEvent(e.link,t))}}}),this._renderService&&this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange((e=>{if(!this._currentLink)return;const t=0===e.start?0:e.start+1+this._bufferService.buffer.ydisp,r=this._bufferService.buffer.ydisp+1+e.end;if(this._currentLink.link.range.start.y>=t&&this._currentLink.link.range.end.y<=r&&(this._clearCurrentLink(t,r),this._lastMouseEvent&&this._element)){const e=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);e&&this._askForLink(e,!1)}}))))}_linkHover(e,t,r){var i;(null===(i=this._currentLink)||void 0===i?void 0:i.state)&&(this._currentLink.state.isHovered=!0,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(t,!0),this._currentLink.state.decorations.pointerCursor&&e.classList.add("xterm-cursor-pointer")),t.hover&&t.hover(r,t.text)}_fireUnderlineEvent(e,t){const r=e.range,i=this._bufferService.buffer.ydisp,s=this._createLinkUnderlineEvent(r.start.x-1,r.start.y-i-1,r.end.x,r.end.y-i-1,void 0);(t?this._onShowLinkUnderline:this._onHideLinkUnderline).fire(s)}_linkLeave(e,t,r){var i;(null===(i=this._currentLink)||void 0===i?void 0:i.state)&&(this._currentLink.state.isHovered=!1,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(t,!1),this._currentLink.state.decorations.pointerCursor&&e.classList.remove("xterm-cursor-pointer")),t.leave&&t.leave(r,t.text)}_linkAtPosition(e,t){const r=e.range.start.y*this._bufferService.cols+e.range.start.x,i=e.range.end.y*this._bufferService.cols+e.range.end.x,s=t.y*this._bufferService.cols+t.x;return r<=s&&s<=i}_positionFromMouseEvent(e,t,r){const i=r.getCoords(e,t,this._bufferService.cols,this._bufferService.rows);if(i)return{x:i[0],y:i[1]+this._bufferService.buffer.ydisp}}_createLinkUnderlineEvent(e,t,r,i,s){return{x1:e,y1:t,x2:r,y2:i,cols:this._bufferService.cols,fg:s}}};c=i([s(0,n.IBufferService)],c),t.Linkifier2=c},9042:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tooMuchOutput=t.promptLabel=void 0,t.promptLabel="Terminal input",t.tooMuchOutput="Too much output to announce, navigate to rows manually to read"},3730:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OscLinkProvider=void 0;const n=r(511),o=r(2585);let a=class{constructor(e,t,r){this._bufferService=e,this._optionsService=t,this._oscLinkService=r}provideLinks(e,t){var r;const i=this._bufferService.buffer.lines.get(e-1);if(!i)return void t(void 0);const s=[],o=this._optionsService.rawOptions.linkHandler,a=new n.CellData,c=i.getTrimmedLength();let h=-1,u=-1,d=!1;for(let t=0;t<c;t++)if(-1!==u||i.hasContent(t)){if(i.loadCell(t,a),a.hasExtendedAttrs()&&a.extended.urlId){if(-1===u){u=t,h=a.extended.urlId;continue}d=a.extended.urlId!==h}else-1!==u&&(d=!0);if(d||-1!==u&&t===c-1){const i=null===(r=this._oscLinkService.getLinkData(h))||void 0===r?void 0:r.uri;if(i){const r={start:{x:u+1,y:e},end:{x:t+(d||t!==c-1?0:1),y:e}};let n=!1;if(!(null==o?void 0:o.allowNonHttpProtocols))try{const e=new URL(i);["http:","https:"].includes(e.protocol)||(n=!0)}catch(e){n=!0}n||s.push({text:i,range:r,activate:(e,t)=>o?o.activate(e,t,r):l(0,t),hover:(e,t)=>{var i;return null===(i=null==o?void 0:o.hover)||void 0===i?void 0:i.call(o,e,t,r)},leave:(e,t)=>{var i;return null===(i=null==o?void 0:o.leave)||void 0===i?void 0:i.call(o,e,t,r)}})}d=!1,a.hasExtendedAttrs()&&a.extended.urlId?(u=t,h=a.extended.urlId):(u=-1,h=-1)}}t(s)}};function l(e,t){if(confirm(`Do you want to navigate to ${t}?\n\nWARNING: This link could potentially be dangerous`)){const r=window.open();if(r){try{r.opener=null}catch(e){}r.location.href=t}else console.warn("Opening link blocked as opener could not be cleared")}}a=i([s(0,o.IBufferService),s(1,o.IOptionsService),s(2,o.IOscLinkService)],a),t.OscLinkProvider=a},6193:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RenderDebouncer=void 0,t.RenderDebouncer=class{constructor(e,t){this._parentWindow=e,this._renderCallback=t,this._refreshCallbacks=[]}dispose(){this._animationFrame&&(this._parentWindow.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)}addRefreshCallback(e){return this._refreshCallbacks.push(e),this._animationFrame||(this._animationFrame=this._parentWindow.requestAnimationFrame((()=>this._innerRefresh()))),this._animationFrame}refresh(e,t,r){this._rowCount=r,e=void 0!==e?e:0,t=void 0!==t?t:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,e):e,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,t):t,this._animationFrame||(this._animationFrame=this._parentWindow.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._animationFrame=void 0,void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return void this._runRefreshCallbacks();const e=Math.max(this._rowStart,0),t=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,t),this._runRefreshCallbacks()}_runRefreshCallbacks(){for(const e of this._refreshCallbacks)e(0);this._refreshCallbacks=[]}}},5596:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ScreenDprMonitor=void 0;const i=r(844);class s extends i.Disposable{constructor(e){super(),this._parentWindow=e,this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio,this.register((0,i.toDisposable)((()=>{this.clearListener()})))}setListener(e){this._listener&&this.clearListener(),this._listener=e,this._outerListener=()=>{this._listener&&(this._listener(this._parentWindow.devicePixelRatio,this._currentDevicePixelRatio),this._updateDpr())},this._updateDpr()}_updateDpr(){var e;this._outerListener&&(null===(e=this._resolutionMediaMatchList)||void 0===e||e.removeListener(this._outerListener),this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio,this._resolutionMediaMatchList=this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`),this._resolutionMediaMatchList.addListener(this._outerListener))}clearListener(){this._resolutionMediaMatchList&&this._listener&&this._outerListener&&(this._resolutionMediaMatchList.removeListener(this._outerListener),this._resolutionMediaMatchList=void 0,this._listener=void 0,this._outerListener=void 0)}}t.ScreenDprMonitor=s},3236:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Terminal=void 0;const i=r(2950),s=r(1680),n=r(3614),o=r(2584),a=r(5435),l=r(9312),c=r(6114),h=r(3656),u=r(9042),d=r(4567),f=r(1296),p=r(7399),v=r(8460),g=r(8437),_=r(3230),m=r(4725),b=r(428),S=r(8934),y=r(6465),C=r(5114),w=r(8969),k=r(8055),E=r(4269),A=r(5941),x=r(3107),L=r(5744),R=r(9074),T=r(2585),D=r(3730),I=r(844),P=r(6731),B="undefined"!=typeof window?window.document:null;class O extends w.CoreTerminal{constructor(e={}){super(e),this.browser=c,this._keyDownHandled=!1,this._keyDownSeen=!1,this._keyPressHandled=!1,this._unprocessedDeadKey=!1,this._onCursorMove=this.register(new v.EventEmitter),this.onCursorMove=this._onCursorMove.event,this._onKey=this.register(new v.EventEmitter),this.onKey=this._onKey.event,this._onRender=this.register(new v.EventEmitter),this.onRender=this._onRender.event,this._onSelectionChange=this.register(new v.EventEmitter),this.onSelectionChange=this._onSelectionChange.event,this._onTitleChange=this.register(new v.EventEmitter),this.onTitleChange=this._onTitleChange.event,this._onBell=this.register(new v.EventEmitter),this.onBell=this._onBell.event,this._onFocus=this.register(new v.EventEmitter),this._onBlur=this.register(new v.EventEmitter),this._onA11yCharEmitter=this.register(new v.EventEmitter),this._onA11yTabEmitter=this.register(new v.EventEmitter),this._onWillOpen=this.register(new v.EventEmitter),this._setup(),this.linkifier2=this.register(this._instantiationService.createInstance(y.Linkifier2)),this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(D.OscLinkProvider)),this._decorationService=this._instantiationService.createInstance(R.DecorationService),this._instantiationService.setService(T.IDecorationService,this._decorationService),this.register(this._inputHandler.onRequestBell((()=>this._onBell.fire()))),this.register(this._inputHandler.onRequestRefreshRows(((e,t)=>this.refresh(e,t)))),this.register(this._inputHandler.onRequestSendFocus((()=>this._reportFocus()))),this.register(this._inputHandler.onRequestReset((()=>this.reset()))),this.register(this._inputHandler.onRequestWindowsOptionsReport((e=>this._reportWindowsOptions(e)))),this.register(this._inputHandler.onColor((e=>this._handleColorEvent(e)))),this.register((0,v.forwardEvent)(this._inputHandler.onCursorMove,this._onCursorMove)),this.register((0,v.forwardEvent)(this._inputHandler.onTitleChange,this._onTitleChange)),this.register((0,v.forwardEvent)(this._inputHandler.onA11yChar,this._onA11yCharEmitter)),this.register((0,v.forwardEvent)(this._inputHandler.onA11yTab,this._onA11yTabEmitter)),this.register(this._bufferService.onResize((e=>this._afterResize(e.cols,e.rows)))),this.register((0,I.toDisposable)((()=>{var e,t;this._customKeyEventHandler=void 0,null===(t=null===(e=this.element)||void 0===e?void 0:e.parentNode)||void 0===t||t.removeChild(this.element)})))}get onFocus(){return this._onFocus.event}get onBlur(){return this._onBlur.event}get onA11yChar(){return this._onA11yCharEmitter.event}get onA11yTab(){return this._onA11yTabEmitter.event}get onWillOpen(){return this._onWillOpen.event}_handleColorEvent(e){if(this._themeService)for(const t of e){let e,r="";switch(t.index){case 256:e="foreground",r="10";break;case 257:e="background",r="11";break;case 258:e="cursor",r="12";break;default:e="ansi",r="4;"+t.index}switch(t.type){case 0:const i=k.color.toColorRGB("ansi"===e?this._themeService.colors.ansi[t.index]:this._themeService.colors[e]);this.coreService.triggerDataEvent(`${o.C0.ESC}]${r};${(0,A.toRgbString)(i)}${o.C1_ESCAPED.ST}`);break;case 1:if("ansi"===e)this._themeService.modifyColors((e=>e.ansi[t.index]=k.rgba.toColor(...t.color)));else{const r=e;this._themeService.modifyColors((e=>e[r]=k.rgba.toColor(...t.color)))}break;case 2:this._themeService.restoreColor(t.index)}}}_setup(){super._setup(),this._customKeyEventHandler=void 0}get buffer(){return this.buffers.active}focus(){this.textarea&&this.textarea.focus({preventScroll:!0})}_handleScreenReaderModeOptionChange(e){var t;e?!this._accessibilityManager&&this._renderService&&(this._accessibilityManager=this._instantiationService.createInstance(d.AccessibilityManager,this)):(null===(t=this._accessibilityManager)||void 0===t||t.dispose(),this._accessibilityManager=void 0)}_handleTextAreaFocus(e){this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(o.C0.ESC+"[I"),this.updateCursorStyle(e),this.element.classList.add("focus"),this._showCursor(),this._onFocus.fire()}blur(){var e;return null===(e=this.textarea)||void 0===e?void 0:e.blur()}_handleTextAreaBlur(){this.textarea.value="",this.refresh(this.buffer.y,this.buffer.y),this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(o.C0.ESC+"[O"),this.element.classList.remove("focus"),this._onBlur.fire()}_syncTextArea(){if(!this.textarea||!this.buffer.isCursorInViewport||this._compositionHelper.isComposing||!this._renderService)return;const e=this.buffer.ybase+this.buffer.y,t=this.buffer.lines.get(e);if(!t)return;const r=Math.min(this.buffer.x,this.cols-1),i=this._renderService.dimensions.css.cell.height,s=t.getWidth(r),n=this._renderService.dimensions.css.cell.width*s,o=this.buffer.y*this._renderService.dimensions.css.cell.height,a=r*this._renderService.dimensions.css.cell.width;this.textarea.style.left=a+"px",this.textarea.style.top=o+"px",this.textarea.style.width=n+"px",this.textarea.style.height=i+"px",this.textarea.style.lineHeight=i+"px",this.textarea.style.zIndex="-5"}_initGlobal(){this._bindKeys(),this.register((0,h.addDisposableDomListener)(this.element,"copy",(e=>{this.hasSelection()&&(0,n.copyHandler)(e,this._selectionService)})));const e=e=>(0,n.handlePasteEvent)(e,this.textarea,this.coreService);this.register((0,h.addDisposableDomListener)(this.textarea,"paste",e)),this.register((0,h.addDisposableDomListener)(this.element,"paste",e)),c.isFirefox?this.register((0,h.addDisposableDomListener)(this.element,"mousedown",(e=>{2===e.button&&(0,n.rightClickHandler)(e,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))):this.register((0,h.addDisposableDomListener)(this.element,"contextmenu",(e=>{(0,n.rightClickHandler)(e,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))),c.isLinux&&this.register((0,h.addDisposableDomListener)(this.element,"auxclick",(e=>{1===e.button&&(0,n.moveTextAreaUnderMouseCursor)(e,this.textarea,this.screenElement)})))}_bindKeys(){this.register((0,h.addDisposableDomListener)(this.textarea,"keyup",(e=>this._keyUp(e)),!0)),this.register((0,h.addDisposableDomListener)(this.textarea,"keydown",(e=>this._keyDown(e)),!0)),this.register((0,h.addDisposableDomListener)(this.textarea,"keypress",(e=>this._keyPress(e)),!0)),this.register((0,h.addDisposableDomListener)(this.textarea,"compositionstart",(()=>this._compositionHelper.compositionstart()))),this.register((0,h.addDisposableDomListener)(this.textarea,"compositionupdate",(e=>this._compositionHelper.compositionupdate(e)))),this.register((0,h.addDisposableDomListener)(this.textarea,"compositionend",(()=>this._compositionHelper.compositionend()))),this.register((0,h.addDisposableDomListener)(this.textarea,"input",(e=>this._inputEvent(e)),!0)),this.register(this.onRender((()=>this._compositionHelper.updateCompositionElements())))}open(e){var t;if(!e)throw new Error("Terminal requires a parent element.");e.isConnected||this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"),this._document=e.ownerDocument,this.element=this._document.createElement("div"),this.element.dir="ltr",this.element.classList.add("terminal"),this.element.classList.add("xterm"),e.appendChild(this.element);const r=B.createDocumentFragment();this._viewportElement=B.createElement("div"),this._viewportElement.classList.add("xterm-viewport"),r.appendChild(this._viewportElement),this._viewportScrollArea=B.createElement("div"),this._viewportScrollArea.classList.add("xterm-scroll-area"),this._viewportElement.appendChild(this._viewportScrollArea),this.screenElement=B.createElement("div"),this.screenElement.classList.add("xterm-screen"),this._helperContainer=B.createElement("div"),this._helperContainer.classList.add("xterm-helpers"),this.screenElement.appendChild(this._helperContainer),r.appendChild(this.screenElement),this.textarea=B.createElement("textarea"),this.textarea.classList.add("xterm-helper-textarea"),this.textarea.setAttribute("aria-label",u.promptLabel),c.isChromeOS||this.textarea.setAttribute("aria-multiline","false"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.tabIndex=0,this._coreBrowserService=this._instantiationService.createInstance(C.CoreBrowserService,this.textarea,null!==(t=this._document.defaultView)&&void 0!==t?t:window),this._instantiationService.setService(m.ICoreBrowserService,this._coreBrowserService),this.register((0,h.addDisposableDomListener)(this.textarea,"focus",(e=>this._handleTextAreaFocus(e)))),this.register((0,h.addDisposableDomListener)(this.textarea,"blur",(()=>this._handleTextAreaBlur()))),this._helperContainer.appendChild(this.textarea),this._charSizeService=this._instantiationService.createInstance(b.CharSizeService,this._document,this._helperContainer),this._instantiationService.setService(m.ICharSizeService,this._charSizeService),this._themeService=this._instantiationService.createInstance(P.ThemeService),this._instantiationService.setService(m.IThemeService,this._themeService),this._characterJoinerService=this._instantiationService.createInstance(E.CharacterJoinerService),this._instantiationService.setService(m.ICharacterJoinerService,this._characterJoinerService),this._renderService=this.register(this._instantiationService.createInstance(_.RenderService,this.rows,this.screenElement)),this._instantiationService.setService(m.IRenderService,this._renderService),this.register(this._renderService.onRenderedViewportChange((e=>this._onRender.fire(e)))),this.onResize((e=>this._renderService.resize(e.cols,e.rows))),this._compositionView=B.createElement("div"),this._compositionView.classList.add("composition-view"),this._compositionHelper=this._instantiationService.createInstance(i.CompositionHelper,this.textarea,this._compositionView),this._helperContainer.appendChild(this._compositionView),this.element.appendChild(r);try{this._onWillOpen.fire(this.element)}catch(e){}this._renderService.hasRenderer()||this._renderService.setRenderer(this._createRenderer()),this._mouseService=this._instantiationService.createInstance(S.MouseService),this._instantiationService.setService(m.IMouseService,this._mouseService),this.viewport=this._instantiationService.createInstance(s.Viewport,(e=>this.scrollLines(e,!0,1)),this._viewportElement,this._viewportScrollArea),this.register(this._inputHandler.onRequestSyncScrollBar((()=>this.viewport.syncScrollArea()))),this.register(this.viewport),this.register(this.onCursorMove((()=>{this._renderService.handleCursorMove(),this._syncTextArea()}))),this.register(this.onResize((()=>this._renderService.handleResize(this.cols,this.rows)))),this.register(this.onBlur((()=>this._renderService.handleBlur()))),this.register(this.onFocus((()=>this._renderService.handleFocus()))),this.register(this._renderService.onDimensionsChange((()=>this.viewport.syncScrollArea()))),this._selectionService=this.register(this._instantiationService.createInstance(l.SelectionService,this.element,this.screenElement,this.linkifier2)),this._instantiationService.setService(m.ISelectionService,this._selectionService),this.register(this._selectionService.onRequestScrollLines((e=>this.scrollLines(e.amount,e.suppressScrollEvent)))),this.register(this._selectionService.onSelectionChange((()=>this._onSelectionChange.fire()))),this.register(this._selectionService.onRequestRedraw((e=>this._renderService.handleSelectionChanged(e.start,e.end,e.columnSelectMode)))),this.register(this._selectionService.onLinuxMouseSelection((e=>{this.textarea.value=e,this.textarea.focus(),this.textarea.select()}))),this.register(this._onScroll.event((e=>{this.viewport.syncScrollArea(),this._selectionService.refresh()}))),this.register((0,h.addDisposableDomListener)(this._viewportElement,"scroll",(()=>this._selectionService.refresh()))),this.linkifier2.attachToDom(this.screenElement,this._mouseService,this._renderService),this.register(this._instantiationService.createInstance(x.BufferDecorationRenderer,this.screenElement)),this.register((0,h.addDisposableDomListener)(this.element,"mousedown",(e=>this._selectionService.handleMouseDown(e)))),this.coreMouseService.areMouseEventsActive?(this._selectionService.disable(),this.element.classList.add("enable-mouse-events")):this._selectionService.enable(),this.options.screenReaderMode&&(this._accessibilityManager=this._instantiationService.createInstance(d.AccessibilityManager,this)),this.register(this.optionsService.onSpecificOptionChange("screenReaderMode",(e=>this._handleScreenReaderModeOptionChange(e)))),this.options.overviewRulerWidth&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(L.OverviewRulerRenderer,this._viewportElement,this.screenElement))),this.optionsService.onSpecificOptionChange("overviewRulerWidth",(e=>{!this._overviewRulerRenderer&&e&&this._viewportElement&&this.screenElement&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(L.OverviewRulerRenderer,this._viewportElement,this.screenElement)))})),this._charSizeService.measure(),this.refresh(0,this.rows-1),this._initGlobal(),this.bindMouse()}_createRenderer(){return this._instantiationService.createInstance(f.DomRenderer,this.element,this.screenElement,this._viewportElement,this.linkifier2)}bindMouse(){const e=this,t=this.element;function r(t){const r=e._mouseService.getMouseReportCoords(t,e.screenElement);if(!r)return!1;let i,s;switch(t.overrideType||t.type){case"mousemove":s=32,void 0===t.buttons?(i=3,void 0!==t.button&&(i=t.button<3?t.button:3)):i=1&t.buttons?0:4&t.buttons?1:2&t.buttons?2:3;break;case"mouseup":s=0,i=t.button<3?t.button:3;break;case"mousedown":s=1,i=t.button<3?t.button:3;break;case"wheel":if(0===e.viewport.getLinesScrolled(t))return!1;s=t.deltaY<0?0:1,i=4;break;default:return!1}return!(void 0===s||void 0===i||i>4)&&e.coreMouseService.triggerMouseEvent({col:r.col,row:r.row,x:r.x,y:r.y,button:i,action:s,ctrl:t.ctrlKey,alt:t.altKey,shift:t.shiftKey})}const i={mouseup:null,wheel:null,mousedrag:null,mousemove:null},s={mouseup:e=>(r(e),e.buttons||(this._document.removeEventListener("mouseup",i.mouseup),i.mousedrag&&this._document.removeEventListener("mousemove",i.mousedrag)),this.cancel(e)),wheel:e=>(r(e),this.cancel(e,!0)),mousedrag:e=>{e.buttons&&r(e)},mousemove:e=>{e.buttons||r(e)}};this.register(this.coreMouseService.onProtocolChange((e=>{e?("debug"===this.optionsService.rawOptions.logLevel&&this._logService.debug("Binding to mouse events:",this.coreMouseService.explainEvents(e)),this.element.classList.add("enable-mouse-events"),this._selectionService.disable()):(this._logService.debug("Unbinding from mouse events."),this.element.classList.remove("enable-mouse-events"),this._selectionService.enable()),8&e?i.mousemove||(t.addEventListener("mousemove",s.mousemove),i.mousemove=s.mousemove):(t.removeEventListener("mousemove",i.mousemove),i.mousemove=null),16&e?i.wheel||(t.addEventListener("wheel",s.wheel,{passive:!1}),i.wheel=s.wheel):(t.removeEventListener("wheel",i.wheel),i.wheel=null),2&e?i.mouseup||(i.mouseup=s.mouseup):(this._document.removeEventListener("mouseup",i.mouseup),i.mouseup=null),4&e?i.mousedrag||(i.mousedrag=s.mousedrag):(this._document.removeEventListener("mousemove",i.mousedrag),i.mousedrag=null)}))),this.coreMouseService.activeProtocol=this.coreMouseService.activeProtocol,this.register((0,h.addDisposableDomListener)(t,"mousedown",(e=>{if(e.preventDefault(),this.focus(),this.coreMouseService.areMouseEventsActive&&!this._selectionService.shouldForceSelection(e))return r(e),i.mouseup&&this._document.addEventListener("mouseup",i.mouseup),i.mousedrag&&this._document.addEventListener("mousemove",i.mousedrag),this.cancel(e)}))),this.register((0,h.addDisposableDomListener)(t,"wheel",(e=>{if(!i.wheel){if(!this.buffer.hasScrollback){const t=this.viewport.getLinesScrolled(e);if(0===t)return;const r=o.C0.ESC+(this.coreService.decPrivateModes.applicationCursorKeys?"O":"[")+(e.deltaY<0?"A":"B");let i="";for(let e=0;e<Math.abs(t);e++)i+=r;return this.coreService.triggerDataEvent(i,!0),this.cancel(e,!0)}return this.viewport.handleWheel(e)?this.cancel(e):void 0}}),{passive:!1})),this.register((0,h.addDisposableDomListener)(t,"touchstart",(e=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.handleTouchStart(e),this.cancel(e)}),{passive:!0})),this.register((0,h.addDisposableDomListener)(t,"touchmove",(e=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.handleTouchMove(e)?void 0:this.cancel(e)}),{passive:!1}))}refresh(e,t){var r;null===(r=this._renderService)||void 0===r||r.refreshRows(e,t)}updateCursorStyle(e){var t;(null===(t=this._selectionService)||void 0===t?void 0:t.shouldColumnSelect(e))?this.element.classList.add("column-select"):this.element.classList.remove("column-select")}_showCursor(){this.coreService.isCursorInitialized||(this.coreService.isCursorInitialized=!0,this.refresh(this.buffer.y,this.buffer.y))}scrollLines(e,t,r=0){super.scrollLines(e,t,r),this.refresh(0,this.rows-1)}paste(e){(0,n.paste)(e,this.textarea,this.coreService)}attachCustomKeyEventHandler(e){this._customKeyEventHandler=e}registerLinkProvider(e){return this.linkifier2.registerLinkProvider(e)}registerCharacterJoiner(e){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");const t=this._characterJoinerService.register(e);return this.refresh(0,this.rows-1),t}deregisterCharacterJoiner(e){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");this._characterJoinerService.deregister(e)&&this.refresh(0,this.rows-1)}get markers(){return this.buffer.markers}addMarker(e){return this.buffer.addMarker(this.buffer.ybase+this.buffer.y+e)}registerDecoration(e){return this._decorationService.registerDecoration(e)}hasSelection(){return!!this._selectionService&&this._selectionService.hasSelection}select(e,t,r){this._selectionService.setSelection(e,t,r)}getSelection(){return this._selectionService?this._selectionService.selectionText:""}getSelectionPosition(){if(this._selectionService&&this._selectionService.hasSelection)return{start:{x:this._selectionService.selectionStart[0],y:this._selectionService.selectionStart[1]},end:{x:this._selectionService.selectionEnd[0],y:this._selectionService.selectionEnd[1]}}}clearSelection(){var e;null===(e=this._selectionService)||void 0===e||e.clearSelection()}selectAll(){var e;null===(e=this._selectionService)||void 0===e||e.selectAll()}selectLines(e,t){var r;null===(r=this._selectionService)||void 0===r||r.selectLines(e,t)}_keyDown(e){if(this._keyDownHandled=!1,this._keyDownSeen=!0,this._customKeyEventHandler&&!1===this._customKeyEventHandler(e))return!1;const t=this.browser.isMac&&this.options.macOptionIsMeta&&e.altKey;if(!t&&!this._compositionHelper.keydown(e))return this.options.scrollOnUserInput&&this.buffer.ybase!==this.buffer.ydisp&&this._bufferService.scrollToBottom(),!1;t||"Dead"!==e.key&&"AltGraph"!==e.key||(this._unprocessedDeadKey=!0);const r=(0,p.evaluateKeyboardEvent)(e,this.coreService.decPrivateModes.applicationCursorKeys,this.browser.isMac,this.options.macOptionIsMeta);if(this.updateCursorStyle(e),3===r.type||2===r.type){const t=this.rows-1;return this.scrollLines(2===r.type?-t:t),this.cancel(e,!0)}return 1===r.type&&this.selectAll(),!!this._isThirdLevelShift(this.browser,e)||(r.cancel&&this.cancel(e,!0),!r.key||!!(e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&1===e.key.length&&e.key.charCodeAt(0)>=65&&e.key.charCodeAt(0)<=90)||(this._unprocessedDeadKey?(this._unprocessedDeadKey=!1,!0):(r.key!==o.C0.ETX&&r.key!==o.C0.CR||(this.textarea.value=""),this._onKey.fire({key:r.key,domEvent:e}),this._showCursor(),this.coreService.triggerDataEvent(r.key,!0),!this.optionsService.rawOptions.screenReaderMode||e.altKey||e.ctrlKey?this.cancel(e,!0):void(this._keyDownHandled=!0))))}_isThirdLevelShift(e,t){const r=e.isMac&&!this.options.macOptionIsMeta&&t.altKey&&!t.ctrlKey&&!t.metaKey||e.isWindows&&t.altKey&&t.ctrlKey&&!t.metaKey||e.isWindows&&t.getModifierState("AltGraph");return"keypress"===t.type?r:r&&(!t.keyCode||t.keyCode>47)}_keyUp(e){this._keyDownSeen=!1,this._customKeyEventHandler&&!1===this._customKeyEventHandler(e)||(function(e){return 16===e.keyCode||17===e.keyCode||18===e.keyCode}(e)||this.focus(),this.updateCursorStyle(e),this._keyPressHandled=!1)}_keyPress(e){let t;if(this._keyPressHandled=!1,this._keyDownHandled)return!1;if(this._customKeyEventHandler&&!1===this._customKeyEventHandler(e))return!1;if(this.cancel(e),e.charCode)t=e.charCode;else if(null===e.which||void 0===e.which)t=e.keyCode;else{if(0===e.which||0===e.charCode)return!1;t=e.which}return!(!t||(e.altKey||e.ctrlKey||e.metaKey)&&!this._isThirdLevelShift(this.browser,e)||(t=String.fromCharCode(t),this._onKey.fire({key:t,domEvent:e}),this._showCursor(),this.coreService.triggerDataEvent(t,!0),this._keyPressHandled=!0,this._unprocessedDeadKey=!1,0))}_inputEvent(e){if(e.data&&"insertText"===e.inputType&&(!e.composed||!this._keyDownSeen)&&!this.optionsService.rawOptions.screenReaderMode){if(this._keyPressHandled)return!1;this._unprocessedDeadKey=!1;const t=e.data;return this.coreService.triggerDataEvent(t,!0),this.cancel(e),!0}return!1}resize(e,t){e!==this.cols||t!==this.rows?super.resize(e,t):this._charSizeService&&!this._charSizeService.hasValidSize&&this._charSizeService.measure()}_afterResize(e,t){var r,i;null===(r=this._charSizeService)||void 0===r||r.measure(),null===(i=this.viewport)||void 0===i||i.syncScrollArea(!0)}clear(){if(0!==this.buffer.ybase||0!==this.buffer.y){this.buffer.clearAllMarkers(),this.buffer.lines.set(0,this.buffer.lines.get(this.buffer.ybase+this.buffer.y)),this.buffer.lines.length=1,this.buffer.ydisp=0,this.buffer.ybase=0,this.buffer.y=0;for(let e=1;e<this.rows;e++)this.buffer.lines.push(this.buffer.getBlankLine(g.DEFAULT_ATTR_DATA));this.refresh(0,this.rows-1),this._onScroll.fire({position:this.buffer.ydisp,source:0})}}reset(){var e,t;this.options.rows=this.rows,this.options.cols=this.cols;const r=this._customKeyEventHandler;this._setup(),super.reset(),null===(e=this._selectionService)||void 0===e||e.reset(),this._decorationService.reset(),this._customKeyEventHandler=r,this.refresh(0,this.rows-1),null===(t=this.viewport)||void 0===t||t.syncScrollArea()}clearTextureAtlas(){var e;null===(e=this._renderService)||void 0===e||e.clearTextureAtlas()}_reportFocus(){var e;(null===(e=this.element)||void 0===e?void 0:e.classList.contains("focus"))?this.coreService.triggerDataEvent(o.C0.ESC+"[I"):this.coreService.triggerDataEvent(o.C0.ESC+"[O")}_reportWindowsOptions(e){if(this._renderService)switch(e){case a.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:const e=this._renderService.dimensions.css.canvas.width.toFixed(0),t=this._renderService.dimensions.css.canvas.height.toFixed(0);this.coreService.triggerDataEvent(`${o.C0.ESC}[4;${t};${e}t`);break;case a.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:const r=this._renderService.dimensions.css.cell.width.toFixed(0),i=this._renderService.dimensions.css.cell.height.toFixed(0);this.coreService.triggerDataEvent(`${o.C0.ESC}[6;${i};${r}t`)}}cancel(e,t){if(this.options.cancelEvents||t)return e.preventDefault(),e.stopPropagation(),!1}}t.Terminal=O},9924:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TimeBasedDebouncer=void 0,t.TimeBasedDebouncer=class{constructor(e,t=1e3){this._renderCallback=e,this._debounceThresholdMS=t,this._lastRefreshMs=0,this._additionalRefreshRequested=!1}dispose(){this._refreshTimeoutID&&clearTimeout(this._refreshTimeoutID)}refresh(e,t,r){this._rowCount=r,e=void 0!==e?e:0,t=void 0!==t?t:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,e):e,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,t):t;const i=Date.now();if(i-this._lastRefreshMs>=this._debounceThresholdMS)this._lastRefreshMs=i,this._innerRefresh();else if(!this._additionalRefreshRequested){const e=i-this._lastRefreshMs,t=this._debounceThresholdMS-e;this._additionalRefreshRequested=!0,this._refreshTimeoutID=window.setTimeout((()=>{this._lastRefreshMs=Date.now(),this._innerRefresh(),this._additionalRefreshRequested=!1,this._refreshTimeoutID=void 0}),t)}}_innerRefresh(){if(void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return;const e=Math.max(this._rowStart,0),t=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(e,t)}}},1680:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.Viewport=void 0;const n=r(844),o=r(3656),a=r(4725),l=r(2585);let c=class extends n.Disposable{constructor(e,t,r,i,s,n,a,l,c){super(),this._scrollLines=e,this._viewportElement=t,this._scrollArea=r,this._bufferService=i,this._optionsService=s,this._charSizeService=n,this._renderService=a,this._coreBrowserService=l,this.scrollBarWidth=0,this._currentRowHeight=0,this._currentDeviceCellHeight=0,this._lastRecordedBufferLength=0,this._lastRecordedViewportHeight=0,this._lastRecordedBufferHeight=0,this._lastTouchY=0,this._lastScrollTop=0,this._wheelPartialScroll=0,this._refreshAnimationFrame=null,this._ignoreNextScrollEvent=!1,this._smoothScrollState={startTime:0,origin:-1,target:-1},this.scrollBarWidth=this._viewportElement.offsetWidth-this._scrollArea.offsetWidth||15,this.register((0,o.addDisposableDomListener)(this._viewportElement,"scroll",this._handleScroll.bind(this))),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((e=>this._activeBuffer=e.activeBuffer))),this._renderDimensions=this._renderService.dimensions,this.register(this._renderService.onDimensionsChange((e=>this._renderDimensions=e))),this._handleThemeChange(c.colors),this.register(c.onChangeColors((e=>this._handleThemeChange(e)))),this.register(this._optionsService.onSpecificOptionChange("scrollback",(()=>this.syncScrollArea()))),setTimeout((()=>this.syncScrollArea()),0)}_handleThemeChange(e){this._viewportElement.style.backgroundColor=e.background.css}_refresh(e){if(e)return this._innerRefresh(),void(null!==this._refreshAnimationFrame&&this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));null===this._refreshAnimationFrame&&(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._charSizeService.height>0){this._currentRowHeight=this._renderService.dimensions.device.cell.height/this._coreBrowserService.dpr,this._currentDeviceCellHeight=this._renderService.dimensions.device.cell.height,this._lastRecordedViewportHeight=this._viewportElement.offsetHeight;const e=Math.round(this._currentRowHeight*this._lastRecordedBufferLength)+(this._lastRecordedViewportHeight-this._renderService.dimensions.css.canvas.height);this._lastRecordedBufferHeight!==e&&(this._lastRecordedBufferHeight=e,this._scrollArea.style.height=this._lastRecordedBufferHeight+"px")}const e=this._bufferService.buffer.ydisp*this._currentRowHeight;this._viewportElement.scrollTop!==e&&(this._ignoreNextScrollEvent=!0,this._viewportElement.scrollTop=e),this._refreshAnimationFrame=null}syncScrollArea(e=!1){if(this._lastRecordedBufferLength!==this._bufferService.buffer.lines.length)return this._lastRecordedBufferLength=this._bufferService.buffer.lines.length,void this._refresh(e);this._lastRecordedViewportHeight===this._renderService.dimensions.css.canvas.height&&this._lastScrollTop===this._activeBuffer.ydisp*this._currentRowHeight&&this._renderDimensions.device.cell.height===this._currentDeviceCellHeight||this._refresh(e)}_handleScroll(e){if(this._lastScrollTop=this._viewportElement.scrollTop,!this._viewportElement.offsetParent)return;if(this._ignoreNextScrollEvent)return this._ignoreNextScrollEvent=!1,void this._scrollLines(0);const t=Math.round(this._lastScrollTop/this._currentRowHeight)-this._bufferService.buffer.ydisp;this._scrollLines(t)}_smoothScroll(){if(this._isDisposed||-1===this._smoothScrollState.origin||-1===this._smoothScrollState.target)return;const e=this._smoothScrollPercent();this._viewportElement.scrollTop=this._smoothScrollState.origin+Math.round(e*(this._smoothScrollState.target-this._smoothScrollState.origin)),e<1?this._coreBrowserService.window.requestAnimationFrame((()=>this._smoothScroll())):this._clearSmoothScrollState()}_smoothScrollPercent(){return this._optionsService.rawOptions.smoothScrollDuration&&this._smoothScrollState.startTime?Math.max(Math.min((Date.now()-this._smoothScrollState.startTime)/this._optionsService.rawOptions.smoothScrollDuration,1),0):1}_clearSmoothScrollState(){this._smoothScrollState.startTime=0,this._smoothScrollState.origin=-1,this._smoothScrollState.target=-1}_bubbleScroll(e,t){const r=this._viewportElement.scrollTop+this._lastRecordedViewportHeight;return!(t<0&&0!==this._viewportElement.scrollTop||t>0&&r<this._lastRecordedBufferHeight)||(e.cancelable&&e.preventDefault(),!1)}handleWheel(e){const t=this._getPixelsScrolled(e);return 0!==t&&(this._optionsService.rawOptions.smoothScrollDuration?(this._smoothScrollState.startTime=Date.now(),this._smoothScrollPercent()<1?(this._smoothScrollState.origin=this._viewportElement.scrollTop,-1===this._smoothScrollState.target?this._smoothScrollState.target=this._viewportElement.scrollTop+t:this._smoothScrollState.target+=t,this._smoothScrollState.target=Math.max(Math.min(this._smoothScrollState.target,this._viewportElement.scrollHeight),0),this._smoothScroll()):this._clearSmoothScrollState()):this._viewportElement.scrollTop+=t,this._bubbleScroll(e,t))}_getPixelsScrolled(e){if(0===e.deltaY||e.shiftKey)return 0;let t=this._applyScrollModifier(e.deltaY,e);return e.deltaMode===WheelEvent.DOM_DELTA_LINE?t*=this._currentRowHeight:e.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(t*=this._currentRowHeight*this._bufferService.rows),t}getBufferElements(e,t){var r;let i,s="";const n=[],o=null!=t?t:this._bufferService.buffer.lines.length,a=this._bufferService.buffer.lines;for(let t=e;t<o;t++){const e=a.get(t);if(!e)continue;const o=null===(r=a.get(t+1))||void 0===r?void 0:r.isWrapped;if(s+=e.translateToString(!o),!o||t===a.length-1){const e=document.createElement("div");e.textContent=s,n.push(e),s.length>0&&(i=e),s=""}}return{bufferElements:n,cursorElement:i}}getLinesScrolled(e){if(0===e.deltaY||e.shiftKey)return 0;let t=this._applyScrollModifier(e.deltaY,e);return e.deltaMode===WheelEvent.DOM_DELTA_PIXEL?(t/=this._currentRowHeight+0,this._wheelPartialScroll+=t,t=Math.floor(Math.abs(this._wheelPartialScroll))*(this._wheelPartialScroll>0?1:-1),this._wheelPartialScroll%=1):e.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(t*=this._bufferService.rows),t}_applyScrollModifier(e,t){const r=this._optionsService.rawOptions.fastScrollModifier;return"alt"===r&&t.altKey||"ctrl"===r&&t.ctrlKey||"shift"===r&&t.shiftKey?e*this._optionsService.rawOptions.fastScrollSensitivity*this._optionsService.rawOptions.scrollSensitivity:e*this._optionsService.rawOptions.scrollSensitivity}handleTouchStart(e){this._lastTouchY=e.touches[0].pageY}handleTouchMove(e){const t=this._lastTouchY-e.touches[0].pageY;return this._lastTouchY=e.touches[0].pageY,0!==t&&(this._viewportElement.scrollTop+=t,this._bubbleScroll(e,t))}};c=i([s(3,l.IBufferService),s(4,l.IOptionsService),s(5,a.ICharSizeService),s(6,a.IRenderService),s(7,a.ICoreBrowserService),s(8,a.IThemeService)],c),t.Viewport=c},3107:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.BufferDecorationRenderer=void 0;const n=r(3656),o=r(4725),a=r(844),l=r(2585);let c=class extends a.Disposable{constructor(e,t,r,i){super(),this._screenElement=e,this._bufferService=t,this._decorationService=r,this._renderService=i,this._decorationElements=new Map,this._altBufferIsActive=!1,this._dimensionsChanged=!1,this._container=document.createElement("div"),this._container.classList.add("xterm-decoration-container"),this._screenElement.appendChild(this._container),this.register(this._renderService.onRenderedViewportChange((()=>this._doRefreshDecorations()))),this.register(this._renderService.onDimensionsChange((()=>{this._dimensionsChanged=!0,this._queueRefresh()}))),this.register((0,n.addDisposableDomListener)(window,"resize",(()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._altBufferIsActive=this._bufferService.buffer===this._bufferService.buffers.alt}))),this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh()))),this.register(this._decorationService.onDecorationRemoved((e=>this._removeDecoration(e)))),this.register((0,a.toDisposable)((()=>{this._container.remove(),this._decorationElements.clear()})))}_queueRefresh(){void 0===this._animationFrame&&(this._animationFrame=this._renderService.addRefreshCallback((()=>{this._doRefreshDecorations(),this._animationFrame=void 0})))}_doRefreshDecorations(){for(const e of this._decorationService.decorations)this._renderDecoration(e);this._dimensionsChanged=!1}_renderDecoration(e){this._refreshStyle(e),this._dimensionsChanged&&this._refreshXPosition(e)}_createElement(e){var t,r;const i=document.createElement("div");i.classList.add("xterm-decoration"),i.classList.toggle("xterm-decoration-top-layer","top"===(null===(t=null==e?void 0:e.options)||void 0===t?void 0:t.layer)),i.style.width=`${Math.round((e.options.width||1)*this._renderService.dimensions.css.cell.width)}px`,i.style.height=(e.options.height||1)*this._renderService.dimensions.css.cell.height+"px",i.style.top=(e.marker.line-this._bufferService.buffers.active.ydisp)*this._renderService.dimensions.css.cell.height+"px",i.style.lineHeight=`${this._renderService.dimensions.css.cell.height}px`;const s=null!==(r=e.options.x)&&void 0!==r?r:0;return s&&s>this._bufferService.cols&&(i.style.display="none"),this._refreshXPosition(e,i),i}_refreshStyle(e){const t=e.marker.line-this._bufferService.buffers.active.ydisp;if(t<0||t>=this._bufferService.rows)e.element&&(e.element.style.display="none",e.onRenderEmitter.fire(e.element));else{let r=this._decorationElements.get(e);r||(r=this._createElement(e),e.element=r,this._decorationElements.set(e,r),this._container.appendChild(r)),r.style.top=t*this._renderService.dimensions.css.cell.height+"px",r.style.display=this._altBufferIsActive?"none":"block",e.onRenderEmitter.fire(r)}}_refreshXPosition(e,t=e.element){var r;if(!t)return;const i=null!==(r=e.options.x)&&void 0!==r?r:0;"right"===(e.options.anchor||"left")?t.style.right=i?i*this._renderService.dimensions.css.cell.width+"px":"":t.style.left=i?i*this._renderService.dimensions.css.cell.width+"px":""}_removeDecoration(e){var t;null===(t=this._decorationElements.get(e))||void 0===t||t.remove(),this._decorationElements.delete(e),e.dispose()}};c=i([s(1,l.IBufferService),s(2,l.IDecorationService),s(3,o.IRenderService)],c),t.BufferDecorationRenderer=c},5871:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ColorZoneStore=void 0,t.ColorZoneStore=class{constructor(){this._zones=[],this._zonePool=[],this._zonePoolIndex=0,this._linePadding={full:0,left:0,center:0,right:0}}get zones(){return this._zonePool.length=Math.min(this._zonePool.length,this._zones.length),this._zones}clear(){this._zones.length=0,this._zonePoolIndex=0}addDecoration(e){if(e.options.overviewRulerOptions){for(const t of this._zones)if(t.color===e.options.overviewRulerOptions.color&&t.position===e.options.overviewRulerOptions.position){if(this._lineIntersectsZone(t,e.marker.line))return;if(this._lineAdjacentToZone(t,e.marker.line,e.options.overviewRulerOptions.position))return void this._addLineToZone(t,e.marker.line)}if(this._zonePoolIndex<this._zonePool.length)return this._zonePool[this._zonePoolIndex].color=e.options.overviewRulerOptions.color,this._zonePool[this._zonePoolIndex].position=e.options.overviewRulerOptions.position,this._zonePool[this._zonePoolIndex].startBufferLine=e.marker.line,this._zonePool[this._zonePoolIndex].endBufferLine=e.marker.line,void this._zones.push(this._zonePool[this._zonePoolIndex++]);this._zones.push({color:e.options.overviewRulerOptions.color,position:e.options.overviewRulerOptions.position,startBufferLine:e.marker.line,endBufferLine:e.marker.line}),this._zonePool.push(this._zones[this._zones.length-1]),this._zonePoolIndex++}}setPadding(e){this._linePadding=e}_lineIntersectsZone(e,t){return t>=e.startBufferLine&&t<=e.endBufferLine}_lineAdjacentToZone(e,t,r){return t>=e.startBufferLine-this._linePadding[r||"full"]&&t<=e.endBufferLine+this._linePadding[r||"full"]}_addLineToZone(e,t){e.startBufferLine=Math.min(e.startBufferLine,t),e.endBufferLine=Math.max(e.endBufferLine,t)}}},5744:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OverviewRulerRenderer=void 0;const n=r(5871),o=r(3656),a=r(4725),l=r(844),c=r(2585),h={full:0,left:0,center:0,right:0},u={full:0,left:0,center:0,right:0},d={full:0,left:0,center:0,right:0};let f=class extends l.Disposable{constructor(e,t,r,i,s,o,a){var c;super(),this._viewportElement=e,this._screenElement=t,this._bufferService=r,this._decorationService=i,this._renderService=s,this._optionsService=o,this._coreBrowseService=a,this._colorZoneStore=new n.ColorZoneStore,this._shouldUpdateDimensions=!0,this._shouldUpdateAnchor=!0,this._lastKnownBufferLength=0,this._canvas=document.createElement("canvas"),this._canvas.classList.add("xterm-decoration-overview-ruler"),this._refreshCanvasDimensions(),null===(c=this._viewportElement.parentElement)||void 0===c||c.insertBefore(this._canvas,this._viewportElement);const h=this._canvas.getContext("2d");if(!h)throw new Error("Ctx cannot be null");this._ctx=h,this._registerDecorationListeners(),this._registerBufferChangeListeners(),this._registerDimensionChangeListeners(),this.register((0,l.toDisposable)((()=>{var e;null===(e=this._canvas)||void 0===e||e.remove()})))}get _width(){return this._optionsService.options.overviewRulerWidth||0}_registerDecorationListeners(){this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh(void 0,!0)))),this.register(this._decorationService.onDecorationRemoved((()=>this._queueRefresh(void 0,!0))))}_registerBufferChangeListeners(){this.register(this._renderService.onRenderedViewportChange((()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._canvas.style.display=this._bufferService.buffer===this._bufferService.buffers.alt?"none":"block"}))),this.register(this._bufferService.onScroll((()=>{this._lastKnownBufferLength!==this._bufferService.buffers.normal.lines.length&&(this._refreshDrawHeightConstants(),this._refreshColorZonePadding())})))}_registerDimensionChangeListeners(){this.register(this._renderService.onRender((()=>{this._containerHeight&&this._containerHeight===this._screenElement.clientHeight||(this._queueRefresh(!0),this._containerHeight=this._screenElement.clientHeight)}))),this.register(this._optionsService.onSpecificOptionChange("overviewRulerWidth",(()=>this._queueRefresh(!0)))),this.register((0,o.addDisposableDomListener)(this._coreBrowseService.window,"resize",(()=>this._queueRefresh(!0)))),this._queueRefresh(!0)}_refreshDrawConstants(){const e=Math.floor(this._canvas.width/3),t=Math.ceil(this._canvas.width/3);u.full=this._canvas.width,u.left=e,u.center=t,u.right=e,this._refreshDrawHeightConstants(),d.full=0,d.left=0,d.center=u.left,d.right=u.left+u.center}_refreshDrawHeightConstants(){h.full=Math.round(2*this._coreBrowseService.dpr);const e=this._canvas.height/this._bufferService.buffer.lines.length,t=Math.round(Math.max(Math.min(e,12),6)*this._coreBrowseService.dpr);h.left=t,h.center=t,h.right=t}_refreshColorZonePadding(){this._colorZoneStore.setPadding({full:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*h.full),left:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*h.left),center:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*h.center),right:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*h.right)}),this._lastKnownBufferLength=this._bufferService.buffers.normal.lines.length}_refreshCanvasDimensions(){this._canvas.style.width=`${this._width}px`,this._canvas.width=Math.round(this._width*this._coreBrowseService.dpr),this._canvas.style.height=`${this._screenElement.clientHeight}px`,this._canvas.height=Math.round(this._screenElement.clientHeight*this._coreBrowseService.dpr),this._refreshDrawConstants(),this._refreshColorZonePadding()}_refreshDecorations(){this._shouldUpdateDimensions&&this._refreshCanvasDimensions(),this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height),this._colorZoneStore.clear();for(const e of this._decorationService.decorations)this._colorZoneStore.addDecoration(e);this._ctx.lineWidth=1;const e=this._colorZoneStore.zones;for(const t of e)"full"!==t.position&&this._renderColorZone(t);for(const t of e)"full"===t.position&&this._renderColorZone(t);this._shouldUpdateDimensions=!1,this._shouldUpdateAnchor=!1}_renderColorZone(e){this._ctx.fillStyle=e.color,this._ctx.fillRect(d[e.position||"full"],Math.round((this._canvas.height-1)*(e.startBufferLine/this._bufferService.buffers.active.lines.length)-h[e.position||"full"]/2),u[e.position||"full"],Math.round((this._canvas.height-1)*((e.endBufferLine-e.startBufferLine)/this._bufferService.buffers.active.lines.length)+h[e.position||"full"]))}_queueRefresh(e,t){this._shouldUpdateDimensions=e||this._shouldUpdateDimensions,this._shouldUpdateAnchor=t||this._shouldUpdateAnchor,void 0===this._animationFrame&&(this._animationFrame=this._coreBrowseService.window.requestAnimationFrame((()=>{this._refreshDecorations(),this._animationFrame=void 0})))}};f=i([s(2,c.IBufferService),s(3,c.IDecorationService),s(4,a.IRenderService),s(5,c.IOptionsService),s(6,a.ICoreBrowserService)],f),t.OverviewRulerRenderer=f},2950:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CompositionHelper=void 0;const n=r(4725),o=r(2585),a=r(2584);let l=class{constructor(e,t,r,i,s,n){this._textarea=e,this._compositionView=t,this._bufferService=r,this._optionsService=i,this._coreService=s,this._renderService=n,this._isComposing=!1,this._isSendingComposition=!1,this._compositionPosition={start:0,end:0},this._dataAlreadySent=""}get isComposing(){return this._isComposing}compositionstart(){this._isComposing=!0,this._compositionPosition.start=this._textarea.value.length,this._compositionView.textContent="",this._dataAlreadySent="",this._compositionView.classList.add("active")}compositionupdate(e){this._compositionView.textContent=e.data,this.updateCompositionElements(),setTimeout((()=>{this._compositionPosition.end=this._textarea.value.length}),0)}compositionend(){this._finalizeComposition(!0)}keydown(e){if(this._isComposing||this._isSendingComposition){if(229===e.keyCode)return!1;if(16===e.keyCode||17===e.keyCode||18===e.keyCode)return!1;this._finalizeComposition(!1)}return 229!==e.keyCode||(this._handleAnyTextareaChanges(),!1)}_finalizeComposition(e){if(this._compositionView.classList.remove("active"),this._isComposing=!1,e){const e={start:this._compositionPosition.start,end:this._compositionPosition.end};this._isSendingComposition=!0,setTimeout((()=>{if(this._isSendingComposition){let t;this._isSendingComposition=!1,e.start+=this._dataAlreadySent.length,t=this._isComposing?this._textarea.value.substring(e.start,e.end):this._textarea.value.substring(e.start),t.length>0&&this._coreService.triggerDataEvent(t,!0)}}),0)}else{this._isSendingComposition=!1;const e=this._textarea.value.substring(this._compositionPosition.start,this._compositionPosition.end);this._coreService.triggerDataEvent(e,!0)}}_handleAnyTextareaChanges(){const e=this._textarea.value;setTimeout((()=>{if(!this._isComposing){const t=this._textarea.value,r=t.replace(e,"");this._dataAlreadySent=r,t.length>e.length?this._coreService.triggerDataEvent(r,!0):t.length<e.length?this._coreService.triggerDataEvent(`${a.C0.DEL}`,!0):t.length===e.length&&t!==e&&this._coreService.triggerDataEvent(t,!0)}}),0)}updateCompositionElements(e){if(this._isComposing){if(this._bufferService.buffer.isCursorInViewport){const e=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),t=this._renderService.dimensions.css.cell.height,r=this._bufferService.buffer.y*this._renderService.dimensions.css.cell.height,i=e*this._renderService.dimensions.css.cell.width;this._compositionView.style.left=i+"px",this._compositionView.style.top=r+"px",this._compositionView.style.height=t+"px",this._compositionView.style.lineHeight=t+"px",this._compositionView.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._compositionView.style.fontSize=this._optionsService.rawOptions.fontSize+"px";const s=this._compositionView.getBoundingClientRect();this._textarea.style.left=i+"px",this._textarea.style.top=r+"px",this._textarea.style.width=Math.max(s.width,1)+"px",this._textarea.style.height=Math.max(s.height,1)+"px",this._textarea.style.lineHeight=s.height+"px"}e||setTimeout((()=>this.updateCompositionElements(!0)),0)}}};l=i([s(2,o.IBufferService),s(3,o.IOptionsService),s(4,o.ICoreService),s(5,n.IRenderService)],l),t.CompositionHelper=l},9806:(e,t)=>{function r(e,t,r){const i=r.getBoundingClientRect(),s=e.getComputedStyle(r),n=parseInt(s.getPropertyValue("padding-left")),o=parseInt(s.getPropertyValue("padding-top"));return[t.clientX-i.left-n,t.clientY-i.top-o]}Object.defineProperty(t,"__esModule",{value:!0}),t.getCoords=t.getCoordsRelativeToElement=void 0,t.getCoordsRelativeToElement=r,t.getCoords=function(e,t,i,s,n,o,a,l,c){if(!o)return;const h=r(e,t,i);return h?(h[0]=Math.ceil((h[0]+(c?a/2:0))/a),h[1]=Math.ceil(h[1]/l),h[0]=Math.min(Math.max(h[0],1),s+(c?1:0)),h[1]=Math.min(Math.max(h[1],1),n),h):void 0}},9504:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.moveToCellSequence=void 0;const i=r(2584);function s(e,t,r,i){const s=e-n(e,r),a=t-n(t,r),h=Math.abs(s-a)-function(e,t,r){let i=0;const s=e-n(e,r),a=t-n(t,r);for(let n=0;n<Math.abs(s-a);n++){const a="A"===o(e,t)?-1:1,l=r.buffer.lines.get(s+a*n);(null==l?void 0:l.isWrapped)&&i++}return i}(e,t,r);return c(h,l(o(e,t),i))}function n(e,t){let r=0,i=t.buffer.lines.get(e),s=null==i?void 0:i.isWrapped;for(;s&&e>=0&&e<t.rows;)r++,i=t.buffer.lines.get(--e),s=null==i?void 0:i.isWrapped;return r}function o(e,t){return e>t?"A":"B"}function a(e,t,r,i,s,n){let o=e,a=t,l="";for(;o!==r||a!==i;)o+=s?1:-1,s&&o>n.cols-1?(l+=n.buffer.translateBufferLineToString(a,!1,e,o),o=0,e=0,a++):!s&&o<0&&(l+=n.buffer.translateBufferLineToString(a,!1,0,e+1),o=n.cols-1,e=o,a--);return l+n.buffer.translateBufferLineToString(a,!1,e,o)}function l(e,t){const r=t?"O":"[";return i.C0.ESC+r+e}function c(e,t){e=Math.floor(e);let r="";for(let i=0;i<e;i++)r+=t;return r}t.moveToCellSequence=function(e,t,r,i){const o=r.buffer.x,h=r.buffer.y;if(!r.buffer.hasScrollback)return function(e,t,r,i,o,h){return 0===s(t,i,o,h).length?"":c(a(e,t,e,t-n(t,o),!1,o).length,l("D",h))}(o,h,0,t,r,i)+s(h,t,r,i)+function(e,t,r,i,o,h){let u;u=s(t,i,o,h).length>0?i-n(i,o):t;const d=i,f=function(e,t,r,i,o,a){let l;return l=s(r,i,o,a).length>0?i-n(i,o):t,e<r&&l<=i||e>=r&&l<i?"C":"D"}(e,t,r,i,o,h);return c(a(e,u,r,d,"C"===f,o).length,l(f,h))}(o,h,e,t,r,i);let u;if(h===t)return u=o>e?"D":"C",c(Math.abs(o-e),l(u,i));u=h>t?"D":"C";const d=Math.abs(h-t);return c(function(e,t){return t.cols-e}(h>t?e:o,r)+(d-1)*r.cols+1+((h>t?o:e)-1),l(u,i))}},1296:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomRenderer=void 0;const n=r(3787),o=r(2223),a=r(6171),l=r(4725),c=r(8055),h=r(8460),u=r(844),d=r(2585),f="xterm-dom-renderer-owner-",p="xterm-focus";let v=1,g=class extends u.Disposable{constructor(e,t,r,i,s,o,l,c,d,p){super(),this._element=e,this._screenElement=t,this._viewportElement=r,this._linkifier2=i,this._charSizeService=o,this._optionsService=l,this._bufferService=c,this._coreBrowserService=d,this._themeService=p,this._terminalClass=v++,this._rowElements=[],this._cellToRowElements=[],this.onRequestRedraw=this.register(new h.EventEmitter).event,this._rowContainer=document.createElement("div"),this._rowContainer.classList.add("xterm-rows"),this._rowContainer.style.lineHeight="normal",this._rowContainer.setAttribute("aria-hidden","true"),this._refreshRowElements(this._bufferService.cols,this._bufferService.rows),this._selectionContainer=document.createElement("div"),this._selectionContainer.classList.add("xterm-selection"),this._selectionContainer.setAttribute("aria-hidden","true"),this.dimensions=(0,a.createRenderDimensions)(),this._updateDimensions(),this.register(this._optionsService.onOptionChange((()=>this._handleOptionsChanged()))),this.register(this._themeService.onChangeColors((e=>this._injectCss(e)))),this._injectCss(this._themeService.colors),this._rowFactory=s.createInstance(n.DomRendererRowFactory,document),this._element.classList.add(f+this._terminalClass),this._screenElement.appendChild(this._rowContainer),this._screenElement.appendChild(this._selectionContainer),this.register(this._linkifier2.onShowLinkUnderline((e=>this._handleLinkHover(e)))),this.register(this._linkifier2.onHideLinkUnderline((e=>this._handleLinkLeave(e)))),this.register((0,u.toDisposable)((()=>{this._element.classList.remove(f+this._terminalClass),this._rowContainer.remove(),this._selectionContainer.remove(),this._themeStyleElement.remove(),this._dimensionsStyleElement.remove()})))}_updateDimensions(){const e=this._coreBrowserService.dpr;this.dimensions.device.char.width=this._charSizeService.width*e,this.dimensions.device.char.height=Math.ceil(this._charSizeService.height*e),this.dimensions.device.cell.width=this.dimensions.device.char.width+Math.round(this._optionsService.rawOptions.letterSpacing),this.dimensions.device.cell.height=Math.floor(this.dimensions.device.char.height*this._optionsService.rawOptions.lineHeight),this.dimensions.device.char.left=0,this.dimensions.device.char.top=0,this.dimensions.device.canvas.width=this.dimensions.device.cell.width*this._bufferService.cols,this.dimensions.device.canvas.height=this.dimensions.device.cell.height*this._bufferService.rows,this.dimensions.css.canvas.width=Math.round(this.dimensions.device.canvas.width/e),this.dimensions.css.canvas.height=Math.round(this.dimensions.device.canvas.height/e),this.dimensions.css.cell.width=this.dimensions.css.canvas.width/this._bufferService.cols,this.dimensions.css.cell.height=this.dimensions.css.canvas.height/this._bufferService.rows;for(const e of this._rowElements)e.style.width=`${this.dimensions.css.canvas.width}px`,e.style.height=`${this.dimensions.css.cell.height}px`,e.style.lineHeight=`${this.dimensions.css.cell.height}px`,e.style.overflow="hidden";this._dimensionsStyleElement||(this._dimensionsStyleElement=document.createElement("style"),this._screenElement.appendChild(this._dimensionsStyleElement));const t=`${this._terminalSelector} .xterm-rows span { display: inline-block; height: 100%; vertical-align: top; width: ${this.dimensions.css.cell.width}px}`;this._dimensionsStyleElement.textContent=t,this._selectionContainer.style.height=this._viewportElement.style.height,this._screenElement.style.width=`${this.dimensions.css.canvas.width}px`,this._screenElement.style.height=`${this.dimensions.css.canvas.height}px`}_injectCss(e){this._themeStyleElement||(this._themeStyleElement=document.createElement("style"),this._screenElement.appendChild(this._themeStyleElement));let t=`${this._terminalSelector} .xterm-rows { color: ${e.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px;}`;t+=`${this._terminalSelector} .xterm-rows .xterm-dim { color: ${c.color.multiplyOpacity(e.foreground,.5).css};}`,t+=`${this._terminalSelector} span:not(.${n.BOLD_CLASS}) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.${n.BOLD_CLASS} { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.${n.ITALIC_CLASS} { font-style: italic;}`,t+="@keyframes blink_box_shadow_"+this._terminalClass+" { 50% {  box-shadow: none; }}",t+="@keyframes blink_block_"+this._terminalClass+" { 0% {"+`  background-color: ${e.cursor.css};`+`  color: ${e.cursorAccent.css}; } 50% {`+`  background-color: ${e.cursorAccent.css};`+`  color: ${e.cursor.css}; }}`,t+=`${this._terminalSelector} .xterm-rows:not(.xterm-focus) .${n.CURSOR_CLASS}.${n.CURSOR_STYLE_BLOCK_CLASS} ,${this._terminalSelector} .xterm-rows:not(.xterm-focus) .${n.CURSOR_CLASS}.${n.CURSOR_STYLE_BAR_CLASS} ,${this._terminalSelector} .xterm-rows:not(.xterm-focus) .${n.CURSOR_CLASS}.${n.CURSOR_STYLE_UNDERLINE_CLASS} { outline: 1px solid ${e.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .xterm-rows.xterm-focus .${n.CURSOR_CLASS}.${n.CURSOR_BLINK_CLASS}:not(.${n.CURSOR_STYLE_BLOCK_CLASS}) { animation: blink_box_shadow_`+this._terminalClass+" 1s step-end infinite;}"+`${this._terminalSelector} .xterm-rows.xterm-focus .${n.CURSOR_CLASS}.${n.CURSOR_BLINK_CLASS}.${n.CURSOR_STYLE_BLOCK_CLASS} { animation: blink_block_`+this._terminalClass+" 1s step-end infinite;}"+`${this._terminalSelector} .xterm-rows.xterm-focus .${n.CURSOR_CLASS}.${n.CURSOR_STYLE_BLOCK_CLASS} {`+` background-color: ${e.cursor.css};`+` color: ${e.cursorAccent.css};}`+`${this._terminalSelector} .xterm-rows .${n.CURSOR_CLASS}.${n.CURSOR_STYLE_BAR_CLASS} {`+` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${e.cursor.css} inset;}`+`${this._terminalSelector} .xterm-rows .${n.CURSOR_CLASS}.${n.CURSOR_STYLE_UNDERLINE_CLASS} {`+` box-shadow: 0 -1px 0 ${e.cursor.css} inset;}`,t+=`${this._terminalSelector} .xterm-selection { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .xterm-selection div { position: absolute; background-color: ${e.selectionBackgroundOpaque.css};}${this._terminalSelector} .xterm-selection div { position: absolute; background-color: ${e.selectionInactiveBackgroundOpaque.css};}`;for(const[r,i]of e.ansi.entries())t+=`${this._terminalSelector} .xterm-fg-${r} { color: ${i.css}; }${this._terminalSelector} .xterm-fg-${r}.${n.DIM_CLASS} { color: ${c.color.multiplyOpacity(i,.5).css}; }${this._terminalSelector} .xterm-bg-${r} { background-color: ${i.css}; }`;t+=`${this._terminalSelector} .xterm-fg-${o.INVERTED_DEFAULT_COLOR} { color: ${c.color.opaque(e.background).css}; }${this._terminalSelector} .xterm-fg-${o.INVERTED_DEFAULT_COLOR}.${n.DIM_CLASS} { color: ${c.color.multiplyOpacity(c.color.opaque(e.background),.5).css}; }${this._terminalSelector} .xterm-bg-${o.INVERTED_DEFAULT_COLOR} { background-color: ${e.foreground.css}; }`,this._themeStyleElement.textContent=t}handleDevicePixelRatioChange(){this._updateDimensions()}_refreshRowElements(e,t){for(let e=this._rowElements.length;e<=t;e++){const e=document.createElement("div");this._rowContainer.appendChild(e),this._rowElements.push(e)}for(;this._rowElements.length>t;)this._rowContainer.removeChild(this._rowElements.pop())}handleResize(e,t){this._refreshRowElements(e,t),this._updateDimensions()}handleCharSizeChanged(){this._updateDimensions()}handleBlur(){this._rowContainer.classList.remove(p)}handleFocus(){this._rowContainer.classList.add(p)}handleSelectionChanged(e,t,r){for(;this._selectionContainer.children.length;)this._selectionContainer.removeChild(this._selectionContainer.children[0]);if(this._rowFactory.handleSelectionChanged(e,t,r),this.renderRows(0,this._bufferService.rows-1),!e||!t)return;const i=e[1]-this._bufferService.buffer.ydisp,s=t[1]-this._bufferService.buffer.ydisp,n=Math.max(i,0),o=Math.min(s,this._bufferService.rows-1);if(n>=this._bufferService.rows||o<0)return;const a=document.createDocumentFragment();if(r){const r=e[0]>t[0];a.appendChild(this._createSelectionElement(n,r?t[0]:e[0],r?e[0]:t[0],o-n+1))}else{const r=i===n?e[0]:0,l=n===s?t[0]:this._bufferService.cols;a.appendChild(this._createSelectionElement(n,r,l));const c=o-n-1;if(a.appendChild(this._createSelectionElement(n+1,0,this._bufferService.cols,c)),n!==o){const e=s===o?t[0]:this._bufferService.cols;a.appendChild(this._createSelectionElement(o,0,e))}}this._selectionContainer.appendChild(a)}_createSelectionElement(e,t,r,i=1){const s=document.createElement("div");return s.style.height=i*this.dimensions.css.cell.height+"px",s.style.top=e*this.dimensions.css.cell.height+"px",s.style.left=t*this.dimensions.css.cell.width+"px",s.style.width=this.dimensions.css.cell.width*(r-t)+"px",s}handleCursorMove(){}_handleOptionsChanged(){this._updateDimensions(),this._injectCss(this._themeService.colors)}clear(){for(const e of this._rowElements)e.replaceChildren()}renderRows(e,t){const r=this._bufferService.buffer.ybase+this._bufferService.buffer.y,i=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),s=this._optionsService.rawOptions.cursorBlink;for(let n=e;n<=t;n++){const e=this._rowElements[n],t=n+this._bufferService.buffer.ydisp,o=this._bufferService.buffer.lines.get(t),a=this._optionsService.rawOptions.cursorStyle;this._cellToRowElements[n]&&this._cellToRowElements[n].length===this._bufferService.cols||(this._cellToRowElements[n]=new Int16Array(this._bufferService.cols)),e.replaceChildren(this._rowFactory.createRow(o,t,t===r,a,i,s,this.dimensions.css.cell.width,this._bufferService.cols,this._cellToRowElements[n]))}}get _terminalSelector(){return`.${f}${this._terminalClass}`}_handleLinkHover(e){this._setCellUnderline(e.x1,e.x2,e.y1,e.y2,e.cols,!0)}_handleLinkLeave(e){this._setCellUnderline(e.x1,e.x2,e.y1,e.y2,e.cols,!1)}_setCellUnderline(e,t,r,i,s,n){r<0&&(e=0),i<0&&(t=0);const o=this._cellToRowElements.length-1;r=Math.max(Math.min(r,o),0),i=Math.max(Math.min(i,o),0);const a=this._cellToRowElements[r],l=this._cellToRowElements[i];if(!(e>=a.length||t>=l.length)&&(e=a[e],t=l[t],-1!==e&&-1!==t))for(;e!==t||r!==i;){const t=this._rowElements[r];if(!t)return;const i=t.children[e];i&&(i.style.textDecoration=n?"underline":"none"),++e>=s&&(e=0,r++)}}};g=i([s(4,d.IInstantiationService),s(5,l.ICharSizeService),s(6,d.IOptionsService),s(7,d.IBufferService),s(8,l.ICoreBrowserService),s(9,l.IThemeService)],g),t.DomRenderer=g},3787:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DomRendererRowFactory=t.CURSOR_STYLE_UNDERLINE_CLASS=t.CURSOR_STYLE_BAR_CLASS=t.CURSOR_STYLE_BLOCK_CLASS=t.CURSOR_BLINK_CLASS=t.CURSOR_CLASS=t.STRIKETHROUGH_CLASS=t.OVERLINE_CLASS=t.UNDERLINE_CLASS=t.ITALIC_CLASS=t.DIM_CLASS=t.BOLD_CLASS=void 0;const n=r(2223),o=r(643),a=r(511),l=r(2585),c=r(8055),h=r(4725),u=r(4269),d=r(6171),f=r(3734);t.BOLD_CLASS="xterm-bold",t.DIM_CLASS="xterm-dim",t.ITALIC_CLASS="xterm-italic",t.UNDERLINE_CLASS="xterm-underline",t.OVERLINE_CLASS="xterm-overline",t.STRIKETHROUGH_CLASS="xterm-strikethrough",t.CURSOR_CLASS="xterm-cursor",t.CURSOR_BLINK_CLASS="xterm-cursor-blink",t.CURSOR_STYLE_BLOCK_CLASS="xterm-cursor-block",t.CURSOR_STYLE_BAR_CLASS="xterm-cursor-bar",t.CURSOR_STYLE_UNDERLINE_CLASS="xterm-cursor-underline";let p=class{constructor(e,t,r,i,s,n,o){this._document=e,this._characterJoinerService=t,this._optionsService=r,this._coreBrowserService=i,this._coreService=s,this._decorationService=n,this._themeService=o,this._workCell=new a.CellData,this._columnSelectMode=!1}handleSelectionChanged(e,t,r){this._selectionStart=e,this._selectionEnd=t,this._columnSelectMode=r}createRow(e,r,i,s,a,l,h,d,p){const g=this._document.createDocumentFragment(),_=this._characterJoinerService.getJoinedCharacters(r);let m=0;for(let t=Math.min(e.length,d)-1;t>=0;t--)if(e.loadCell(t,this._workCell).getCode()!==o.NULL_CELL_CODE||i&&t===a){m=t+1;break}const b=this._themeService.colors;let S=-1,y=0;for(;y<m;y++){e.loadCell(y,this._workCell);let d=this._workCell.getWidth();if(0===d){p[y]=S;continue}let m=!1,C=y,w=this._workCell;if(_.length>0&&y===_[0][0]){m=!0;const t=_.shift();w=new u.JoinedCellData(this._workCell,e.translateToString(!0,t[0],t[1]),t[1]-t[0]),C=t[1]-1,d=w.getWidth()}const k=this._document.createElement("span");if(d>1&&(k.style.width=h*d+"px"),m&&(k.style.display="inline",a>=y&&a<=C&&(a=y)),!this._coreService.isCursorHidden&&i&&y===a)switch(k.classList.add(t.CURSOR_CLASS),l&&k.classList.add(t.CURSOR_BLINK_CLASS),s){case"bar":k.classList.add(t.CURSOR_STYLE_BAR_CLASS);break;case"underline":k.classList.add(t.CURSOR_STYLE_UNDERLINE_CLASS);break;default:k.classList.add(t.CURSOR_STYLE_BLOCK_CLASS)}if(w.isBold()&&k.classList.add(t.BOLD_CLASS),w.isItalic()&&k.classList.add(t.ITALIC_CLASS),w.isDim()&&k.classList.add(t.DIM_CLASS),w.isInvisible()?k.textContent=o.WHITESPACE_CELL_CHAR:k.textContent=w.getChars()||o.WHITESPACE_CELL_CHAR,w.isUnderline()&&(k.classList.add(`${t.UNDERLINE_CLASS}-${w.extended.underlineStyle}`)," "===k.textContent&&(k.textContent=" "),!w.isUnderlineColorDefault()))if(w.isUnderlineColorRGB())k.style.textDecorationColor=`rgb(${f.AttributeData.toColorRGB(w.getUnderlineColor()).join(",")})`;else{let e=w.getUnderlineColor();this._optionsService.rawOptions.drawBoldTextInBrightColors&&w.isBold()&&e<8&&(e+=8),k.style.textDecorationColor=b.ansi[e].css}w.isOverline()&&(k.classList.add(t.OVERLINE_CLASS)," "===k.textContent&&(k.textContent=" ")),w.isStrikethrough()&&k.classList.add(t.STRIKETHROUGH_CLASS);let E=w.getFgColor(),A=w.getFgColorMode(),x=w.getBgColor(),L=w.getBgColorMode();const R=!!w.isInverse();if(R){const e=E;E=x,x=e;const t=A;A=L,L=t}let T,D,I=!1;this._decorationService.forEachDecorationAtCell(y,r,void 0,(e=>{"top"!==e.options.layer&&I||(e.backgroundColorRGB&&(L=50331648,x=e.backgroundColorRGB.rgba>>8&16777215,T=e.backgroundColorRGB),e.foregroundColorRGB&&(A=50331648,E=e.foregroundColorRGB.rgba>>8&16777215,D=e.foregroundColorRGB),I="top"===e.options.layer)}));const P=this._isCellInSelection(y,r);let B;switch(I||b.selectionForeground&&P&&(A=50331648,E=b.selectionForeground.rgba>>8&16777215,D=b.selectionForeground),P&&(T=this._coreBrowserService.isFocused?b.selectionBackgroundOpaque:b.selectionInactiveBackgroundOpaque,I=!0),I&&k.classList.add("xterm-decoration-top"),L){case 16777216:case 33554432:B=b.ansi[x],k.classList.add(`xterm-bg-${x}`);break;case 50331648:B=c.rgba.toColor(x>>16,x>>8&255,255&x),this._addStyle(k,`background-color:#${v((x>>>0).toString(16),"0",6)}`);break;default:R?(B=b.foreground,k.classList.add(`xterm-bg-${n.INVERTED_DEFAULT_COLOR}`)):B=b.background}switch(T||w.isDim()&&(T=c.color.multiplyOpacity(B,.5)),A){case 16777216:case 33554432:w.isBold()&&E<8&&this._optionsService.rawOptions.drawBoldTextInBrightColors&&(E+=8),this._applyMinimumContrast(k,B,b.ansi[E],w,T,void 0)||k.classList.add(`xterm-fg-${E}`);break;case 50331648:const e=c.rgba.toColor(E>>16&255,E>>8&255,255&E);this._applyMinimumContrast(k,B,e,w,T,D)||this._addStyle(k,`color:#${v(E.toString(16),"0",6)}`);break;default:this._applyMinimumContrast(k,B,b.foreground,w,T,void 0)||R&&k.classList.add(`xterm-fg-${n.INVERTED_DEFAULT_COLOR}`)}g.appendChild(k),p[y]=++S,y=C}return y<d-1&&p.subarray(y).fill(++S),g}_applyMinimumContrast(e,t,r,i,s,n){if(1===this._optionsService.rawOptions.minimumContrastRatio||(0,d.excludeFromContrastRatioDemands)(i.getCode()))return!1;let o;return s||n||(o=this._themeService.colors.contrastCache.getColor(t.rgba,r.rgba)),void 0===o&&(o=c.color.ensureContrastRatio(s||t,n||r,this._optionsService.rawOptions.minimumContrastRatio),this._themeService.colors.contrastCache.setColor((s||t).rgba,(n||r).rgba,null!=o?o:null)),!!o&&(this._addStyle(e,`color:${o.css}`),!0)}_addStyle(e,t){e.setAttribute("style",`${e.getAttribute("style")||""}${t};`)}_isCellInSelection(e,t){const r=this._selectionStart,i=this._selectionEnd;return!(!r||!i)&&(this._columnSelectMode?r[0]<=i[0]?e>=r[0]&&t>=r[1]&&e<i[0]&&t<=i[1]:e<r[0]&&t>=r[1]&&e>=i[0]&&t<=i[1]:t>r[1]&&t<i[1]||r[1]===i[1]&&t===r[1]&&e>=r[0]&&e<i[0]||r[1]<i[1]&&t===i[1]&&e<i[0]||r[1]<i[1]&&t===r[1]&&e>=r[0])}};function v(e,t,r){for(;e.length<r;)e=t+e;return e}p=i([s(1,h.ICharacterJoinerService),s(2,l.IOptionsService),s(3,h.ICoreBrowserService),s(4,l.ICoreService),s(5,l.IDecorationService),s(6,h.IThemeService)],p),t.DomRendererRowFactory=p},2223:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TEXT_BASELINE=t.DIM_OPACITY=t.INVERTED_DEFAULT_COLOR=void 0;const i=r(6114);t.INVERTED_DEFAULT_COLOR=257,t.DIM_OPACITY=.5,t.TEXT_BASELINE=i.isFirefox||i.isLegacyEdge?"bottom":"ideographic"},6171:(e,t)=>{function r(e){return 57508<=e&&e<=57558}Object.defineProperty(t,"__esModule",{value:!0}),t.createRenderDimensions=t.excludeFromContrastRatioDemands=t.isRestrictedPowerlineGlyph=t.isPowerlineGlyph=t.throwIfFalsy=void 0,t.throwIfFalsy=function(e){if(!e)throw new Error("value must not be falsy");return e},t.isPowerlineGlyph=r,t.isRestrictedPowerlineGlyph=function(e){return 57520<=e&&e<=57527},t.excludeFromContrastRatioDemands=function(e){return r(e)||function(e){return 9472<=e&&e<=9631}(e)},t.createRenderDimensions=function(){return{css:{canvas:{width:0,height:0},cell:{width:0,height:0}},device:{canvas:{width:0,height:0},cell:{width:0,height:0},char:{width:0,height:0,left:0,top:0}}}}},456:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionModel=void 0,t.SelectionModel=class{constructor(e){this._bufferService=e,this.isSelectAllActive=!1,this.selectionStartLength=0}clearSelection(){this.selectionStart=void 0,this.selectionEnd=void 0,this.isSelectAllActive=!1,this.selectionStartLength=0}get finalSelectionStart(){return this.isSelectAllActive?[0,0]:this.selectionEnd&&this.selectionStart&&this.areSelectionValuesReversed()?this.selectionEnd:this.selectionStart}get finalSelectionEnd(){if(this.isSelectAllActive)return[this._bufferService.cols,this._bufferService.buffer.ybase+this._bufferService.rows-1];if(this.selectionStart){if(!this.selectionEnd||this.areSelectionValuesReversed()){const e=this.selectionStart[0]+this.selectionStartLength;return e>this._bufferService.cols?e%this._bufferService.cols==0?[this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)-1]:[e%this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)]:[e,this.selectionStart[1]]}if(this.selectionStartLength&&this.selectionEnd[1]===this.selectionStart[1]){const e=this.selectionStart[0]+this.selectionStartLength;return e>this._bufferService.cols?[e%this._bufferService.cols,this.selectionStart[1]+Math.floor(e/this._bufferService.cols)]:[Math.max(e,this.selectionEnd[0]),this.selectionEnd[1]]}return this.selectionEnd}}areSelectionValuesReversed(){const e=this.selectionStart,t=this.selectionEnd;return!(!e||!t)&&(e[1]>t[1]||e[1]===t[1]&&e[0]>t[0])}handleTrim(e){return this.selectionStart&&(this.selectionStart[1]-=e),this.selectionEnd&&(this.selectionEnd[1]-=e),this.selectionEnd&&this.selectionEnd[1]<0?(this.clearSelection(),!0):(this.selectionStart&&this.selectionStart[1]<0&&(this.selectionStart[1]=0),!1)}}},428:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CharSizeService=void 0;const n=r(2585),o=r(8460),a=r(844);let l=class extends a.Disposable{constructor(e,t,r){super(),this._optionsService=r,this.width=0,this.height=0,this._onCharSizeChange=this.register(new o.EventEmitter),this.onCharSizeChange=this._onCharSizeChange.event,this._measureStrategy=new c(e,t,this._optionsService),this.register(this._optionsService.onMultipleOptionChange(["fontFamily","fontSize"],(()=>this.measure())))}get hasValidSize(){return this.width>0&&this.height>0}measure(){const e=this._measureStrategy.measure();e.width===this.width&&e.height===this.height||(this.width=e.width,this.height=e.height,this._onCharSizeChange.fire())}};l=i([s(2,n.IOptionsService)],l),t.CharSizeService=l;class c{constructor(e,t,r){this._document=e,this._parentElement=t,this._optionsService=r,this._result={width:0,height:0},this._measureElement=this._document.createElement("span"),this._measureElement.classList.add("xterm-char-measure-element"),this._measureElement.textContent="W",this._measureElement.setAttribute("aria-hidden","true"),this._parentElement.appendChild(this._measureElement)}measure(){this._measureElement.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._measureElement.style.fontSize=`${this._optionsService.rawOptions.fontSize}px`;const e=this._measureElement.getBoundingClientRect();return 0!==e.width&&0!==e.height&&(this._result.width=e.width,this._result.height=Math.ceil(e.height)),this._result}}},4269:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CharacterJoinerService=t.JoinedCellData=void 0;const n=r(3734),o=r(643),a=r(511),l=r(2585);class c extends n.AttributeData{constructor(e,t,r){super(),this.content=0,this.combinedData="",this.fg=e.fg,this.bg=e.bg,this.combinedData=t,this._width=r}isCombined(){return 2097152}getWidth(){return this._width}getChars(){return this.combinedData}getCode(){return 2097151}setFromCharData(e){throw new Error("not implemented")}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}t.JoinedCellData=c;let h=class e{constructor(e){this._bufferService=e,this._characterJoiners=[],this._nextCharacterJoinerId=0,this._workCell=new a.CellData}register(e){const t={id:this._nextCharacterJoinerId++,handler:e};return this._characterJoiners.push(t),t.id}deregister(e){for(let t=0;t<this._characterJoiners.length;t++)if(this._characterJoiners[t].id===e)return this._characterJoiners.splice(t,1),!0;return!1}getJoinedCharacters(e){if(0===this._characterJoiners.length)return[];const t=this._bufferService.buffer.lines.get(e);if(!t||0===t.length)return[];const r=[],i=t.translateToString(!0);let s=0,n=0,a=0,l=t.getFg(0),c=t.getBg(0);for(let e=0;e<t.getTrimmedLength();e++)if(t.loadCell(e,this._workCell),0!==this._workCell.getWidth()){if(this._workCell.fg!==l||this._workCell.bg!==c){if(e-s>1){const e=this._getJoinedRanges(i,a,n,t,s);for(let t=0;t<e.length;t++)r.push(e[t])}s=e,a=n,l=this._workCell.fg,c=this._workCell.bg}n+=this._workCell.getChars().length||o.WHITESPACE_CELL_CHAR.length}if(this._bufferService.cols-s>1){const e=this._getJoinedRanges(i,a,n,t,s);for(let t=0;t<e.length;t++)r.push(e[t])}return r}_getJoinedRanges(t,r,i,s,n){const o=t.substring(r,i);let a=[];try{a=this._characterJoiners[0].handler(o)}catch(e){console.error(e)}for(let t=1;t<this._characterJoiners.length;t++)try{const r=this._characterJoiners[t].handler(o);for(let t=0;t<r.length;t++)e._mergeRanges(a,r[t])}catch(e){console.error(e)}return this._stringRangesToCellRanges(a,s,n),a}_stringRangesToCellRanges(e,t,r){let i=0,s=!1,n=0,a=e[i];if(a){for(let l=r;l<this._bufferService.cols;l++){const r=t.getWidth(l),c=t.getString(l).length||o.WHITESPACE_CELL_CHAR.length;if(0!==r){if(!s&&a[0]<=n&&(a[0]=l,s=!0),a[1]<=n){if(a[1]=l,a=e[++i],!a)break;a[0]<=n?(a[0]=l,s=!0):s=!1}n+=c}}a&&(a[1]=this._bufferService.cols)}}static _mergeRanges(e,t){let r=!1;for(let i=0;i<e.length;i++){const s=e[i];if(r){if(t[1]<=s[0])return e[i-1][1]=t[1],e;if(t[1]<=s[1])return e[i-1][1]=Math.max(t[1],s[1]),e.splice(i,1),e;e.splice(i,1),i--}else{if(t[1]<=s[0])return e.splice(i,0,t),e;if(t[1]<=s[1])return s[0]=Math.min(t[0],s[0]),e;t[0]<s[1]&&(s[0]=Math.min(t[0],s[0]),r=!0)}}return r?e[e.length-1][1]=t[1]:e.push(t),e}};h=i([s(0,l.IBufferService)],h),t.CharacterJoinerService=h},5114:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreBrowserService=void 0,t.CoreBrowserService=class{constructor(e,t){this._textarea=e,this.window=t,this._isFocused=!1,this._cachedIsFocused=void 0,this._textarea.addEventListener("focus",(()=>this._isFocused=!0)),this._textarea.addEventListener("blur",(()=>this._isFocused=!1))}get dpr(){return this.window.devicePixelRatio}get isFocused(){return void 0===this._cachedIsFocused&&(this._cachedIsFocused=this._isFocused&&this._textarea.ownerDocument.hasFocus(),queueMicrotask((()=>this._cachedIsFocused=void 0))),this._cachedIsFocused}}},8934:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.MouseService=void 0;const n=r(4725),o=r(9806);let a=class{constructor(e,t){this._renderService=e,this._charSizeService=t}getCoords(e,t,r,i,s){return(0,o.getCoords)(window,e,t,r,i,this._charSizeService.hasValidSize,this._renderService.dimensions.css.cell.width,this._renderService.dimensions.css.cell.height,s)}getMouseReportCoords(e,t){const r=(0,o.getCoordsRelativeToElement)(window,e,t);if(!(!this._charSizeService.hasValidSize||r[0]<0||r[1]<0||r[0]>=this._renderService.dimensions.css.canvas.width||r[1]>=this._renderService.dimensions.css.canvas.height))return{col:Math.floor(r[0]/this._renderService.dimensions.css.cell.width),row:Math.floor(r[1]/this._renderService.dimensions.css.cell.height),x:Math.floor(r[0]),y:Math.floor(r[1])}}};a=i([s(0,n.IRenderService),s(1,n.ICharSizeService)],a),t.MouseService=a},3230:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.RenderService=void 0;const n=r(6193),o=r(8460),a=r(844),l=r(5596),c=r(3656),h=r(2585),u=r(4725),d=r(7226);let f=class extends a.Disposable{constructor(e,t,r,i,s,a,h,u){if(super(),this._rowCount=e,this._charSizeService=i,this._pausedResizeTask=new d.DebouncedIdleTask,this._isPaused=!1,this._needsFullRefresh=!1,this._isNextRenderRedrawOnly=!0,this._needsSelectionRefresh=!1,this._canvasWidth=0,this._canvasHeight=0,this._selectionState={start:void 0,end:void 0,columnSelectMode:!1},this._onDimensionsChange=this.register(new o.EventEmitter),this.onDimensionsChange=this._onDimensionsChange.event,this._onRenderedViewportChange=this.register(new o.EventEmitter),this.onRenderedViewportChange=this._onRenderedViewportChange.event,this._onRender=this.register(new o.EventEmitter),this.onRender=this._onRender.event,this._onRefreshRequest=this.register(new o.EventEmitter),this.onRefreshRequest=this._onRefreshRequest.event,this.register({dispose:()=>{var e;return null===(e=this._renderer)||void 0===e?void 0:e.dispose()}}),this._renderDebouncer=new n.RenderDebouncer(h.window,((e,t)=>this._renderRows(e,t))),this.register(this._renderDebouncer),this._screenDprMonitor=new l.ScreenDprMonitor(h.window),this._screenDprMonitor.setListener((()=>this.handleDevicePixelRatioChange())),this.register(this._screenDprMonitor),this.register(a.onResize((()=>this._fullRefresh()))),this.register(a.buffers.onBufferActivate((()=>{var e;return null===(e=this._renderer)||void 0===e?void 0:e.clear()}))),this.register(r.onOptionChange((()=>this._handleOptionsChanged()))),this.register(this._charSizeService.onCharSizeChange((()=>this.handleCharSizeChanged()))),this.register(s.onDecorationRegistered((()=>this._fullRefresh()))),this.register(s.onDecorationRemoved((()=>this._fullRefresh()))),this.register(r.onMultipleOptionChange(["customGlyphs","drawBoldTextInBrightColors","letterSpacing","lineHeight","fontFamily","fontSize","fontWeight","fontWeightBold","minimumContrastRatio"],(()=>{this.clear(),this.handleResize(a.cols,a.rows),this._fullRefresh()}))),this.register(r.onMultipleOptionChange(["cursorBlink","cursorStyle"],(()=>this.refreshRows(a.buffer.y,a.buffer.y,!0)))),this.register((0,c.addDisposableDomListener)(h.window,"resize",(()=>this.handleDevicePixelRatioChange()))),this.register(u.onChangeColors((()=>this._fullRefresh()))),"IntersectionObserver"in h.window){const e=new h.window.IntersectionObserver((e=>this._handleIntersectionChange(e[e.length-1])),{threshold:0});e.observe(t),this.register({dispose:()=>e.disconnect()})}}get dimensions(){return this._renderer.dimensions}_handleIntersectionChange(e){this._isPaused=void 0===e.isIntersecting?0===e.intersectionRatio:!e.isIntersecting,this._isPaused||this._charSizeService.hasValidSize||this._charSizeService.measure(),!this._isPaused&&this._needsFullRefresh&&(this._pausedResizeTask.flush(),this.refreshRows(0,this._rowCount-1),this._needsFullRefresh=!1)}refreshRows(e,t,r=!1){this._isPaused?this._needsFullRefresh=!0:(r||(this._isNextRenderRedrawOnly=!1),this._renderDebouncer.refresh(e,t,this._rowCount))}_renderRows(e,t){this._renderer&&(e=Math.min(e,this._rowCount-1),t=Math.min(t,this._rowCount-1),this._renderer.renderRows(e,t),this._needsSelectionRefresh&&(this._renderer.handleSelectionChanged(this._selectionState.start,this._selectionState.end,this._selectionState.columnSelectMode),this._needsSelectionRefresh=!1),this._isNextRenderRedrawOnly||this._onRenderedViewportChange.fire({start:e,end:t}),this._onRender.fire({start:e,end:t}),this._isNextRenderRedrawOnly=!0)}resize(e,t){this._rowCount=t,this._fireOnCanvasResize()}_handleOptionsChanged(){this._renderer&&(this.refreshRows(0,this._rowCount-1),this._fireOnCanvasResize())}_fireOnCanvasResize(){this._renderer&&(this._renderer.dimensions.css.canvas.width===this._canvasWidth&&this._renderer.dimensions.css.canvas.height===this._canvasHeight||this._onDimensionsChange.fire(this._renderer.dimensions))}hasRenderer(){return!!this._renderer}setRenderer(e){var t;null===(t=this._renderer)||void 0===t||t.dispose(),this._renderer=e,this._renderer.onRequestRedraw((e=>this.refreshRows(e.start,e.end,!0))),this._needsSelectionRefresh=!0,this._fullRefresh()}addRefreshCallback(e){return this._renderDebouncer.addRefreshCallback(e)}_fullRefresh(){this._isPaused?this._needsFullRefresh=!0:this.refreshRows(0,this._rowCount-1)}clearTextureAtlas(){var e,t;this._renderer&&(null===(t=(e=this._renderer).clearTextureAtlas)||void 0===t||t.call(e),this._fullRefresh())}handleDevicePixelRatioChange(){this._charSizeService.measure(),this._renderer&&(this._renderer.handleDevicePixelRatioChange(),this.refreshRows(0,this._rowCount-1))}handleResize(e,t){this._renderer&&(this._isPaused?this._pausedResizeTask.set((()=>this._renderer.handleResize(e,t))):this._renderer.handleResize(e,t),this._fullRefresh())}handleCharSizeChanged(){var e;null===(e=this._renderer)||void 0===e||e.handleCharSizeChanged()}handleBlur(){var e;null===(e=this._renderer)||void 0===e||e.handleBlur()}handleFocus(){var e;null===(e=this._renderer)||void 0===e||e.handleFocus()}handleSelectionChanged(e,t,r){var i;this._selectionState.start=e,this._selectionState.end=t,this._selectionState.columnSelectMode=r,null===(i=this._renderer)||void 0===i||i.handleSelectionChanged(e,t,r)}handleCursorMove(){var e;null===(e=this._renderer)||void 0===e||e.handleCursorMove()}clear(){var e;null===(e=this._renderer)||void 0===e||e.clear()}};f=i([s(2,h.IOptionsService),s(3,u.ICharSizeService),s(4,h.IDecorationService),s(5,h.IBufferService),s(6,u.ICoreBrowserService),s(7,u.IThemeService)],f),t.RenderService=f},9312:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionService=void 0;const n=r(6114),o=r(456),a=r(511),l=r(8460),c=r(4725),h=r(2585),u=r(9806),d=r(9504),f=r(844),p=r(4841),v=String.fromCharCode(160),g=new RegExp(v,"g");let _=class extends f.Disposable{constructor(e,t,r,i,s,n,c,h,u){super(),this._element=e,this._screenElement=t,this._linkifier=r,this._bufferService=i,this._coreService=s,this._mouseService=n,this._optionsService=c,this._renderService=h,this._coreBrowserService=u,this._dragScrollAmount=0,this._enabled=!0,this._workCell=new a.CellData,this._mouseDownTimeStamp=0,this._oldHasSelection=!1,this._oldSelectionStart=void 0,this._oldSelectionEnd=void 0,this._onLinuxMouseSelection=this.register(new l.EventEmitter),this.onLinuxMouseSelection=this._onLinuxMouseSelection.event,this._onRedrawRequest=this.register(new l.EventEmitter),this.onRequestRedraw=this._onRedrawRequest.event,this._onSelectionChange=this.register(new l.EventEmitter),this.onSelectionChange=this._onSelectionChange.event,this._onRequestScrollLines=this.register(new l.EventEmitter),this.onRequestScrollLines=this._onRequestScrollLines.event,this._mouseMoveListener=e=>this._handleMouseMove(e),this._mouseUpListener=e=>this._handleMouseUp(e),this._coreService.onUserInput((()=>{this.hasSelection&&this.clearSelection()})),this._trimListener=this._bufferService.buffer.lines.onTrim((e=>this._handleTrim(e))),this.register(this._bufferService.buffers.onBufferActivate((e=>this._handleBufferActivate(e)))),this.enable(),this._model=new o.SelectionModel(this._bufferService),this._activeSelectionMode=0,this.register((0,f.toDisposable)((()=>{this._removeMouseDownListeners()})))}reset(){this.clearSelection()}disable(){this.clearSelection(),this._enabled=!1}enable(){this._enabled=!0}get selectionStart(){return this._model.finalSelectionStart}get selectionEnd(){return this._model.finalSelectionEnd}get hasSelection(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;return!(!e||!t||e[0]===t[0]&&e[1]===t[1])}get selectionText(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;if(!e||!t)return"";const r=this._bufferService.buffer,i=[];if(3===this._activeSelectionMode){if(e[0]===t[0])return"";const s=e[0]<t[0]?e[0]:t[0],n=e[0]<t[0]?t[0]:e[0];for(let o=e[1];o<=t[1];o++){const e=r.translateBufferLineToString(o,!0,s,n);i.push(e)}}else{const s=e[1]===t[1]?t[0]:void 0;i.push(r.translateBufferLineToString(e[1],!0,e[0],s));for(let s=e[1]+1;s<=t[1]-1;s++){const e=r.lines.get(s),t=r.translateBufferLineToString(s,!0);(null==e?void 0:e.isWrapped)?i[i.length-1]+=t:i.push(t)}if(e[1]!==t[1]){const e=r.lines.get(t[1]),s=r.translateBufferLineToString(t[1],!0,0,t[0]);e&&e.isWrapped?i[i.length-1]+=s:i.push(s)}}return i.map((e=>e.replace(g," "))).join(n.isWindows?"\r\n":"\n")}clearSelection(){this._model.clearSelection(),this._removeMouseDownListeners(),this.refresh(),this._onSelectionChange.fire()}refresh(e){this._refreshAnimationFrame||(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._refresh()))),n.isLinux&&e&&this.selectionText.length&&this._onLinuxMouseSelection.fire(this.selectionText)}_refresh(){this._refreshAnimationFrame=void 0,this._onRedrawRequest.fire({start:this._model.finalSelectionStart,end:this._model.finalSelectionEnd,columnSelectMode:3===this._activeSelectionMode})}_isClickInSelection(e){const t=this._getMouseBufferCoords(e),r=this._model.finalSelectionStart,i=this._model.finalSelectionEnd;return!!(r&&i&&t)&&this._areCoordsInSelection(t,r,i)}isCellInSelection(e,t){const r=this._model.finalSelectionStart,i=this._model.finalSelectionEnd;return!(!r||!i)&&this._areCoordsInSelection([e,t],r,i)}_areCoordsInSelection(e,t,r){return e[1]>t[1]&&e[1]<r[1]||t[1]===r[1]&&e[1]===t[1]&&e[0]>=t[0]&&e[0]<r[0]||t[1]<r[1]&&e[1]===r[1]&&e[0]<r[0]||t[1]<r[1]&&e[1]===t[1]&&e[0]>=t[0]}_selectWordAtCursor(e,t){var r,i;const s=null===(i=null===(r=this._linkifier.currentLink)||void 0===r?void 0:r.link)||void 0===i?void 0:i.range;if(s)return this._model.selectionStart=[s.start.x-1,s.start.y-1],this._model.selectionStartLength=(0,p.getRangeLength)(s,this._bufferService.cols),this._model.selectionEnd=void 0,!0;const n=this._getMouseBufferCoords(e);return!!n&&(this._selectWordAt(n,t),this._model.selectionEnd=void 0,!0)}selectAll(){this._model.isSelectAllActive=!0,this.refresh(),this._onSelectionChange.fire()}selectLines(e,t){this._model.clearSelection(),e=Math.max(e,0),t=Math.min(t,this._bufferService.buffer.lines.length-1),this._model.selectionStart=[0,e],this._model.selectionEnd=[this._bufferService.cols,t],this.refresh(),this._onSelectionChange.fire()}_handleTrim(e){this._model.handleTrim(e)&&this.refresh()}_getMouseBufferCoords(e){const t=this._mouseService.getCoords(e,this._screenElement,this._bufferService.cols,this._bufferService.rows,!0);if(t)return t[0]--,t[1]--,t[1]+=this._bufferService.buffer.ydisp,t}_getMouseEventScrollAmount(e){let t=(0,u.getCoordsRelativeToElement)(this._coreBrowserService.window,e,this._screenElement)[1];const r=this._renderService.dimensions.css.canvas.height;return t>=0&&t<=r?0:(t>r&&(t-=r),t=Math.min(Math.max(t,-50),50),t/=50,t/Math.abs(t)+Math.round(14*t))}shouldForceSelection(e){return n.isMac?e.altKey&&this._optionsService.rawOptions.macOptionClickForcesSelection:e.shiftKey}handleMouseDown(e){if(this._mouseDownTimeStamp=e.timeStamp,(2!==e.button||!this.hasSelection)&&0===e.button){if(!this._enabled){if(!this.shouldForceSelection(e))return;e.stopPropagation()}e.preventDefault(),this._dragScrollAmount=0,this._enabled&&e.shiftKey?this._handleIncrementalClick(e):1===e.detail?this._handleSingleClick(e):2===e.detail?this._handleDoubleClick(e):3===e.detail&&this._handleTripleClick(e),this._addMouseDownListeners(),this.refresh(!0)}}_addMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.addEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.addEventListener("mouseup",this._mouseUpListener)),this._dragScrollIntervalTimer=this._coreBrowserService.window.setInterval((()=>this._dragScroll()),50)}_removeMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.removeEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.removeEventListener("mouseup",this._mouseUpListener)),this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer),this._dragScrollIntervalTimer=void 0}_handleIncrementalClick(e){this._model.selectionStart&&(this._model.selectionEnd=this._getMouseBufferCoords(e))}_handleSingleClick(e){if(this._model.selectionStartLength=0,this._model.isSelectAllActive=!1,this._activeSelectionMode=this.shouldColumnSelect(e)?3:0,this._model.selectionStart=this._getMouseBufferCoords(e),!this._model.selectionStart)return;this._model.selectionEnd=void 0;const t=this._bufferService.buffer.lines.get(this._model.selectionStart[1]);t&&t.length!==this._model.selectionStart[0]&&0===t.hasWidth(this._model.selectionStart[0])&&this._model.selectionStart[0]++}_handleDoubleClick(e){this._selectWordAtCursor(e,!0)&&(this._activeSelectionMode=1)}_handleTripleClick(e){const t=this._getMouseBufferCoords(e);t&&(this._activeSelectionMode=2,this._selectLineAt(t[1]))}shouldColumnSelect(e){return e.altKey&&!(n.isMac&&this._optionsService.rawOptions.macOptionClickForcesSelection)}_handleMouseMove(e){if(e.stopImmediatePropagation(),!this._model.selectionStart)return;const t=this._model.selectionEnd?[this._model.selectionEnd[0],this._model.selectionEnd[1]]:null;if(this._model.selectionEnd=this._getMouseBufferCoords(e),!this._model.selectionEnd)return void this.refresh(!0);2===this._activeSelectionMode?this._model.selectionEnd[1]<this._model.selectionStart[1]?this._model.selectionEnd[0]=0:this._model.selectionEnd[0]=this._bufferService.cols:1===this._activeSelectionMode&&this._selectToWordAt(this._model.selectionEnd),this._dragScrollAmount=this._getMouseEventScrollAmount(e),3!==this._activeSelectionMode&&(this._dragScrollAmount>0?this._model.selectionEnd[0]=this._bufferService.cols:this._dragScrollAmount<0&&(this._model.selectionEnd[0]=0));const r=this._bufferService.buffer;if(this._model.selectionEnd[1]<r.lines.length){const e=r.lines.get(this._model.selectionEnd[1]);e&&0===e.hasWidth(this._model.selectionEnd[0])&&this._model.selectionEnd[0]++}t&&t[0]===this._model.selectionEnd[0]&&t[1]===this._model.selectionEnd[1]||this.refresh(!0)}_dragScroll(){if(this._model.selectionEnd&&this._model.selectionStart&&this._dragScrollAmount){this._onRequestScrollLines.fire({amount:this._dragScrollAmount,suppressScrollEvent:!1});const e=this._bufferService.buffer;this._dragScrollAmount>0?(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=this._bufferService.cols),this._model.selectionEnd[1]=Math.min(e.ydisp+this._bufferService.rows,e.lines.length-1)):(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=0),this._model.selectionEnd[1]=e.ydisp),this.refresh()}}_handleMouseUp(e){const t=e.timeStamp-this._mouseDownTimeStamp;if(this._removeMouseDownListeners(),this.selectionText.length<=1&&t<500&&e.altKey&&this._optionsService.rawOptions.altClickMovesCursor){if(this._bufferService.buffer.ybase===this._bufferService.buffer.ydisp){const t=this._mouseService.getCoords(e,this._element,this._bufferService.cols,this._bufferService.rows,!1);if(t&&void 0!==t[0]&&void 0!==t[1]){const e=(0,d.moveToCellSequence)(t[0]-1,t[1]-1,this._bufferService,this._coreService.decPrivateModes.applicationCursorKeys);this._coreService.triggerDataEvent(e,!0)}}}else this._fireEventIfSelectionChanged()}_fireEventIfSelectionChanged(){const e=this._model.finalSelectionStart,t=this._model.finalSelectionEnd,r=!(!e||!t||e[0]===t[0]&&e[1]===t[1]);r?e&&t&&(this._oldSelectionStart&&this._oldSelectionEnd&&e[0]===this._oldSelectionStart[0]&&e[1]===this._oldSelectionStart[1]&&t[0]===this._oldSelectionEnd[0]&&t[1]===this._oldSelectionEnd[1]||this._fireOnSelectionChange(e,t,r)):this._oldHasSelection&&this._fireOnSelectionChange(e,t,r)}_fireOnSelectionChange(e,t,r){this._oldSelectionStart=e,this._oldSelectionEnd=t,this._oldHasSelection=r,this._onSelectionChange.fire()}_handleBufferActivate(e){this.clearSelection(),this._trimListener.dispose(),this._trimListener=e.activeBuffer.lines.onTrim((e=>this._handleTrim(e)))}_convertViewportColToCharacterIndex(e,t){let r=t;for(let i=0;t>=i;i++){const s=e.loadCell(i,this._workCell).getChars().length;0===this._workCell.getWidth()?r--:s>1&&t!==i&&(r+=s-1)}return r}setSelection(e,t,r){this._model.clearSelection(),this._removeMouseDownListeners(),this._model.selectionStart=[e,t],this._model.selectionStartLength=r,this.refresh(),this._fireEventIfSelectionChanged()}rightClickSelect(e){this._isClickInSelection(e)||(this._selectWordAtCursor(e,!1)&&this.refresh(!0),this._fireEventIfSelectionChanged())}_getWordAt(e,t,r=!0,i=!0){if(e[0]>=this._bufferService.cols)return;const s=this._bufferService.buffer,n=s.lines.get(e[1]);if(!n)return;const o=s.translateBufferLineToString(e[1],!1);let a=this._convertViewportColToCharacterIndex(n,e[0]),l=a;const c=e[0]-a;let h=0,u=0,d=0,f=0;if(" "===o.charAt(a)){for(;a>0&&" "===o.charAt(a-1);)a--;for(;l<o.length&&" "===o.charAt(l+1);)l++}else{let t=e[0],r=e[0];0===n.getWidth(t)&&(h++,t--),2===n.getWidth(r)&&(u++,r++);const i=n.getString(r).length;for(i>1&&(f+=i-1,l+=i-1);t>0&&a>0&&!this._isCharWordSeparator(n.loadCell(t-1,this._workCell));){n.loadCell(t-1,this._workCell);const e=this._workCell.getChars().length;0===this._workCell.getWidth()?(h++,t--):e>1&&(d+=e-1,a-=e-1),a--,t--}for(;r<n.length&&l+1<o.length&&!this._isCharWordSeparator(n.loadCell(r+1,this._workCell));){n.loadCell(r+1,this._workCell);const e=this._workCell.getChars().length;2===this._workCell.getWidth()?(u++,r++):e>1&&(f+=e-1,l+=e-1),l++,r++}}l++;let p=a+c-h+d,v=Math.min(this._bufferService.cols,l-a+h+u-d-f);if(t||""!==o.slice(a,l).trim()){if(r&&0===p&&32!==n.getCodePoint(0)){const t=s.lines.get(e[1]-1);if(t&&n.isWrapped&&32!==t.getCodePoint(this._bufferService.cols-1)){const t=this._getWordAt([this._bufferService.cols-1,e[1]-1],!1,!0,!1);if(t){const e=this._bufferService.cols-t.start;p-=e,v+=e}}}if(i&&p+v===this._bufferService.cols&&32!==n.getCodePoint(this._bufferService.cols-1)){const t=s.lines.get(e[1]+1);if((null==t?void 0:t.isWrapped)&&32!==t.getCodePoint(0)){const t=this._getWordAt([0,e[1]+1],!1,!1,!0);t&&(v+=t.length)}}return{start:p,length:v}}}_selectWordAt(e,t){const r=this._getWordAt(e,t);if(r){for(;r.start<0;)r.start+=this._bufferService.cols,e[1]--;this._model.selectionStart=[r.start,e[1]],this._model.selectionStartLength=r.length}}_selectToWordAt(e){const t=this._getWordAt(e,!0);if(t){let r=e[1];for(;t.start<0;)t.start+=this._bufferService.cols,r--;if(!this._model.areSelectionValuesReversed())for(;t.start+t.length>this._bufferService.cols;)t.length-=this._bufferService.cols,r++;this._model.selectionEnd=[this._model.areSelectionValuesReversed()?t.start:t.start+t.length,r]}}_isCharWordSeparator(e){return 0!==e.getWidth()&&this._optionsService.rawOptions.wordSeparator.indexOf(e.getChars())>=0}_selectLineAt(e){const t=this._bufferService.buffer.getWrappedRangeForLine(e),r={start:{x:0,y:t.first},end:{x:this._bufferService.cols-1,y:t.last}};this._model.selectionStart=[0,t.first],this._model.selectionEnd=void 0,this._model.selectionStartLength=(0,p.getRangeLength)(r,this._bufferService.cols)}};_=i([s(3,h.IBufferService),s(4,h.ICoreService),s(5,c.IMouseService),s(6,h.IOptionsService),s(7,c.IRenderService),s(8,c.ICoreBrowserService)],_),t.SelectionService=_},4725:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IThemeService=t.ICharacterJoinerService=t.ISelectionService=t.IRenderService=t.IMouseService=t.ICoreBrowserService=t.ICharSizeService=void 0;const i=r(8343);t.ICharSizeService=(0,i.createDecorator)("CharSizeService"),t.ICoreBrowserService=(0,i.createDecorator)("CoreBrowserService"),t.IMouseService=(0,i.createDecorator)("MouseService"),t.IRenderService=(0,i.createDecorator)("RenderService"),t.ISelectionService=(0,i.createDecorator)("SelectionService"),t.ICharacterJoinerService=(0,i.createDecorator)("CharacterJoinerService"),t.IThemeService=(0,i.createDecorator)("ThemeService")},6731:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeService=t.DEFAULT_ANSI_COLORS=void 0;const n=r(7239),o=r(8055),a=r(8460),l=r(844),c=r(2585),h=o.css.toColor("#ffffff"),u=o.css.toColor("#000000"),d=o.css.toColor("#ffffff"),f=o.css.toColor("#000000"),p={css:"rgba(255, 255, 255, 0.3)",rgba:4294967117};t.DEFAULT_ANSI_COLORS=Object.freeze((()=>{const e=[o.css.toColor("#2e3436"),o.css.toColor("#cc0000"),o.css.toColor("#4e9a06"),o.css.toColor("#c4a000"),o.css.toColor("#3465a4"),o.css.toColor("#75507b"),o.css.toColor("#06989a"),o.css.toColor("#d3d7cf"),o.css.toColor("#555753"),o.css.toColor("#ef2929"),o.css.toColor("#8ae234"),o.css.toColor("#fce94f"),o.css.toColor("#729fcf"),o.css.toColor("#ad7fa8"),o.css.toColor("#34e2e2"),o.css.toColor("#eeeeec")],t=[0,95,135,175,215,255];for(let r=0;r<216;r++){const i=t[r/36%6|0],s=t[r/6%6|0],n=t[r%6];e.push({css:o.channels.toCss(i,s,n),rgba:o.channels.toRgba(i,s,n)})}for(let t=0;t<24;t++){const r=8+10*t;e.push({css:o.channels.toCss(r,r,r),rgba:o.channels.toRgba(r,r,r)})}return e})());let v=class extends l.Disposable{constructor(e){super(),this._optionsService=e,this._onChangeColors=this.register(new a.EventEmitter),this.onChangeColors=this._onChangeColors.event,this._contrastCache=new n.ColorContrastCache,this._colors={foreground:h,background:u,cursor:d,cursorAccent:f,selectionForeground:void 0,selectionBackgroundTransparent:p,selectionBackgroundOpaque:o.color.blend(u,p),selectionInactiveBackgroundTransparent:p,selectionInactiveBackgroundOpaque:o.color.blend(u,p),ansi:t.DEFAULT_ANSI_COLORS.slice(),contrastCache:this._contrastCache},this._updateRestoreColors(),this._setTheme(this._optionsService.rawOptions.theme),this.register(this._optionsService.onSpecificOptionChange("minimumContrastRatio",(()=>this._contrastCache.clear()))),this.register(this._optionsService.onSpecificOptionChange("theme",(()=>this._setTheme(this._optionsService.rawOptions.theme))))}get colors(){return this._colors}_setTheme(e={}){const r=this._colors;if(r.foreground=g(e.foreground,h),r.background=g(e.background,u),r.cursor=g(e.cursor,d),r.cursorAccent=g(e.cursorAccent,f),r.selectionBackgroundTransparent=g(e.selectionBackground,p),r.selectionBackgroundOpaque=o.color.blend(r.background,r.selectionBackgroundTransparent),r.selectionInactiveBackgroundTransparent=g(e.selectionInactiveBackground,r.selectionBackgroundTransparent),r.selectionInactiveBackgroundOpaque=o.color.blend(r.background,r.selectionInactiveBackgroundTransparent),r.selectionForeground=e.selectionForeground?g(e.selectionForeground,o.NULL_COLOR):void 0,r.selectionForeground===o.NULL_COLOR&&(r.selectionForeground=void 0),o.color.isOpaque(r.selectionBackgroundTransparent)){const e=.3;r.selectionBackgroundTransparent=o.color.opacity(r.selectionBackgroundTransparent,e)}if(o.color.isOpaque(r.selectionInactiveBackgroundTransparent)){const e=.3;r.selectionInactiveBackgroundTransparent=o.color.opacity(r.selectionInactiveBackgroundTransparent,e)}if(r.ansi=t.DEFAULT_ANSI_COLORS.slice(),r.ansi[0]=g(e.black,t.DEFAULT_ANSI_COLORS[0]),r.ansi[1]=g(e.red,t.DEFAULT_ANSI_COLORS[1]),r.ansi[2]=g(e.green,t.DEFAULT_ANSI_COLORS[2]),r.ansi[3]=g(e.yellow,t.DEFAULT_ANSI_COLORS[3]),r.ansi[4]=g(e.blue,t.DEFAULT_ANSI_COLORS[4]),r.ansi[5]=g(e.magenta,t.DEFAULT_ANSI_COLORS[5]),r.ansi[6]=g(e.cyan,t.DEFAULT_ANSI_COLORS[6]),r.ansi[7]=g(e.white,t.DEFAULT_ANSI_COLORS[7]),r.ansi[8]=g(e.brightBlack,t.DEFAULT_ANSI_COLORS[8]),r.ansi[9]=g(e.brightRed,t.DEFAULT_ANSI_COLORS[9]),r.ansi[10]=g(e.brightGreen,t.DEFAULT_ANSI_COLORS[10]),r.ansi[11]=g(e.brightYellow,t.DEFAULT_ANSI_COLORS[11]),r.ansi[12]=g(e.brightBlue,t.DEFAULT_ANSI_COLORS[12]),r.ansi[13]=g(e.brightMagenta,t.DEFAULT_ANSI_COLORS[13]),r.ansi[14]=g(e.brightCyan,t.DEFAULT_ANSI_COLORS[14]),r.ansi[15]=g(e.brightWhite,t.DEFAULT_ANSI_COLORS[15]),e.extendedAnsi){const i=Math.min(r.ansi.length-16,e.extendedAnsi.length);for(let s=0;s<i;s++)r.ansi[s+16]=g(e.extendedAnsi[s],t.DEFAULT_ANSI_COLORS[s+16])}this._contrastCache.clear(),this._updateRestoreColors(),this._onChangeColors.fire(this.colors)}restoreColor(e){this._restoreColor(e),this._onChangeColors.fire(this.colors)}_restoreColor(e){if(void 0!==e)switch(e){case 256:this._colors.foreground=this._restoreColors.foreground;break;case 257:this._colors.background=this._restoreColors.background;break;case 258:this._colors.cursor=this._restoreColors.cursor;break;default:this._colors.ansi[e]=this._restoreColors.ansi[e]}else for(let e=0;e<this._restoreColors.ansi.length;++e)this._colors.ansi[e]=this._restoreColors.ansi[e]}modifyColors(e){e(this._colors),this._onChangeColors.fire(this.colors)}_updateRestoreColors(){this._restoreColors={foreground:this._colors.foreground,background:this._colors.background,cursor:this._colors.cursor,ansi:this._colors.ansi.slice()}}};function g(e,t){if(void 0!==e)try{return o.css.toColor(e)}catch(e){}return t}v=i([s(0,c.IOptionsService)],v),t.ThemeService=v},6349:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CircularList=void 0;const i=r(8460),s=r(844);class n extends s.Disposable{constructor(e){super(),this._maxLength=e,this.onDeleteEmitter=this.register(new i.EventEmitter),this.onDelete=this.onDeleteEmitter.event,this.onInsertEmitter=this.register(new i.EventEmitter),this.onInsert=this.onInsertEmitter.event,this.onTrimEmitter=this.register(new i.EventEmitter),this.onTrim=this.onTrimEmitter.event,this._array=new Array(this._maxLength),this._startIndex=0,this._length=0}get maxLength(){return this._maxLength}set maxLength(e){if(this._maxLength===e)return;const t=new Array(e);for(let r=0;r<Math.min(e,this.length);r++)t[r]=this._array[this._getCyclicIndex(r)];this._array=t,this._maxLength=e,this._startIndex=0}get length(){return this._length}set length(e){if(e>this._length)for(let t=this._length;t<e;t++)this._array[t]=void 0;this._length=e}get(e){return this._array[this._getCyclicIndex(e)]}set(e,t){this._array[this._getCyclicIndex(e)]=t}push(e){this._array[this._getCyclicIndex(this._length)]=e,this._length===this._maxLength?(this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1)):this._length++}recycle(){if(this._length!==this._maxLength)throw new Error("Can only recycle when the buffer is full");return this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1),this._array[this._getCyclicIndex(this._length-1)]}get isFull(){return this._length===this._maxLength}pop(){return this._array[this._getCyclicIndex(this._length---1)]}splice(e,t,...r){if(t){for(let r=e;r<this._length-t;r++)this._array[this._getCyclicIndex(r)]=this._array[this._getCyclicIndex(r+t)];this._length-=t,this.onDeleteEmitter.fire({index:e,amount:t})}for(let t=this._length-1;t>=e;t--)this._array[this._getCyclicIndex(t+r.length)]=this._array[this._getCyclicIndex(t)];for(let t=0;t<r.length;t++)this._array[this._getCyclicIndex(e+t)]=r[t];if(r.length&&this.onInsertEmitter.fire({index:e,amount:r.length}),this._length+r.length>this._maxLength){const e=this._length+r.length-this._maxLength;this._startIndex+=e,this._length=this._maxLength,this.onTrimEmitter.fire(e)}else this._length+=r.length}trimStart(e){e>this._length&&(e=this._length),this._startIndex+=e,this._length-=e,this.onTrimEmitter.fire(e)}shiftElements(e,t,r){if(!(t<=0)){if(e<0||e>=this._length)throw new Error("start argument out of range");if(e+r<0)throw new Error("Cannot shift elements in list beyond index 0");if(r>0){for(let i=t-1;i>=0;i--)this.set(e+i+r,this.get(e+i));const i=e+t+r-this._length;if(i>0)for(this._length+=i;this._length>this._maxLength;)this._length--,this._startIndex++,this.onTrimEmitter.fire(1)}else for(let i=0;i<t;i++)this.set(e+i+r,this.get(e+i))}}_getCyclicIndex(e){return(this._startIndex+e)%this._maxLength}}t.CircularList=n},1439:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.clone=void 0,t.clone=function e(t,r=5){if("object"!=typeof t)return t;const i=Array.isArray(t)?[]:{};for(const s in t)i[s]=r<=1?t[s]:t[s]&&e(t[s],r-1);return i}},8055:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.contrastRatio=t.toPaddedHex=t.rgba=t.rgb=t.css=t.color=t.channels=t.NULL_COLOR=void 0;const i=r(6114);let s=0,n=0,o=0,a=0;var l,c,h;function u(e){const t=e.toString(16);return t.length<2?"0"+t:t}function d(e,t){return e<t?(t+.05)/(e+.05):(e+.05)/(t+.05)}t.NULL_COLOR={css:"#00000000",rgba:0},function(e){e.toCss=function(e,t,r,i){return void 0!==i?`#${u(e)}${u(t)}${u(r)}${u(i)}`:`#${u(e)}${u(t)}${u(r)}`},e.toRgba=function(e,t,r,i=255){return(e<<24|t<<16|r<<8|i)>>>0}}(l=t.channels||(t.channels={})),function(e){function t(e,t){return a=Math.round(255*t),[s,n,o]=h.toChannels(e.rgba),{css:l.toCss(s,n,o,a),rgba:l.toRgba(s,n,o,a)}}e.blend=function(e,t){if(a=(255&t.rgba)/255,1===a)return{css:t.css,rgba:t.rgba};const r=t.rgba>>24&255,i=t.rgba>>16&255,c=t.rgba>>8&255,h=e.rgba>>24&255,u=e.rgba>>16&255,d=e.rgba>>8&255;return s=h+Math.round((r-h)*a),n=u+Math.round((i-u)*a),o=d+Math.round((c-d)*a),{css:l.toCss(s,n,o),rgba:l.toRgba(s,n,o)}},e.isOpaque=function(e){return 255==(255&e.rgba)},e.ensureContrastRatio=function(e,t,r){const i=h.ensureContrastRatio(e.rgba,t.rgba,r);if(i)return h.toColor(i>>24&255,i>>16&255,i>>8&255)},e.opaque=function(e){const t=(255|e.rgba)>>>0;return[s,n,o]=h.toChannels(t),{css:l.toCss(s,n,o),rgba:t}},e.opacity=t,e.multiplyOpacity=function(e,r){return a=255&e.rgba,t(e,a*r/255)},e.toColorRGB=function(e){return[e.rgba>>24&255,e.rgba>>16&255,e.rgba>>8&255]}}(t.color||(t.color={})),function(e){let t,r;if(!i.isNode){const e=document.createElement("canvas");e.width=1,e.height=1;const i=e.getContext("2d",{willReadFrequently:!0});i&&(t=i,t.globalCompositeOperation="copy",r=t.createLinearGradient(0,0,1,1))}e.toColor=function(e){if(e.match(/#[\da-f]{3,8}/i))switch(e.length){case 4:return s=parseInt(e.slice(1,2).repeat(2),16),n=parseInt(e.slice(2,3).repeat(2),16),o=parseInt(e.slice(3,4).repeat(2),16),h.toColor(s,n,o);case 5:return s=parseInt(e.slice(1,2).repeat(2),16),n=parseInt(e.slice(2,3).repeat(2),16),o=parseInt(e.slice(3,4).repeat(2),16),a=parseInt(e.slice(4,5).repeat(2),16),h.toColor(s,n,o,a);case 7:return{css:e,rgba:(parseInt(e.slice(1),16)<<8|255)>>>0};case 9:return{css:e,rgba:parseInt(e.slice(1),16)>>>0}}const i=e.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);if(i)return s=parseInt(i[1]),n=parseInt(i[2]),o=parseInt(i[3]),a=Math.round(255*(void 0===i[5]?1:parseFloat(i[5]))),h.toColor(s,n,o,a);if(!t||!r)throw new Error("css.toColor: Unsupported css format");if(t.fillStyle=r,t.fillStyle=e,"string"!=typeof t.fillStyle)throw new Error("css.toColor: Unsupported css format");if(t.fillRect(0,0,1,1),[s,n,o,a]=t.getImageData(0,0,1,1).data,255!==a)throw new Error("css.toColor: Unsupported css format");return{rgba:l.toRgba(s,n,o,a),css:e}}}(t.css||(t.css={})),function(e){function t(e,t,r){const i=e/255,s=t/255,n=r/255;return.2126*(i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4))+.7152*(s<=.03928?s/12.92:Math.pow((s+.055)/1.055,2.4))+.0722*(n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))}e.relativeLuminance=function(e){return t(e>>16&255,e>>8&255,255&e)},e.relativeLuminance2=t}(c=t.rgb||(t.rgb={})),function(e){function t(e,t,r){const i=e>>24&255,s=e>>16&255,n=e>>8&255;let o=t>>24&255,a=t>>16&255,l=t>>8&255,h=d(c.relativeLuminance2(o,a,l),c.relativeLuminance2(i,s,n));for(;h<r&&(o>0||a>0||l>0);)o-=Math.max(0,Math.ceil(.1*o)),a-=Math.max(0,Math.ceil(.1*a)),l-=Math.max(0,Math.ceil(.1*l)),h=d(c.relativeLuminance2(o,a,l),c.relativeLuminance2(i,s,n));return(o<<24|a<<16|l<<8|255)>>>0}function r(e,t,r){const i=e>>24&255,s=e>>16&255,n=e>>8&255;let o=t>>24&255,a=t>>16&255,l=t>>8&255,h=d(c.relativeLuminance2(o,a,l),c.relativeLuminance2(i,s,n));for(;h<r&&(o<255||a<255||l<255);)o=Math.min(255,o+Math.ceil(.1*(255-o))),a=Math.min(255,a+Math.ceil(.1*(255-a))),l=Math.min(255,l+Math.ceil(.1*(255-l))),h=d(c.relativeLuminance2(o,a,l),c.relativeLuminance2(i,s,n));return(o<<24|a<<16|l<<8|255)>>>0}e.ensureContrastRatio=function(e,i,s){const n=c.relativeLuminance(e>>8),o=c.relativeLuminance(i>>8);if(d(n,o)<s){if(o<n){const o=t(e,i,s),a=d(n,c.relativeLuminance(o>>8));if(a<s){const t=r(e,i,s);return a>d(n,c.relativeLuminance(t>>8))?o:t}return o}const a=r(e,i,s),l=d(n,c.relativeLuminance(a>>8));if(l<s){const r=t(e,i,s);return l>d(n,c.relativeLuminance(r>>8))?a:r}return a}},e.reduceLuminance=t,e.increaseLuminance=r,e.toChannels=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},e.toColor=function(e,t,r,i){return{css:l.toCss(e,t,r,i),rgba:l.toRgba(e,t,r,i)}}}(h=t.rgba||(t.rgba={})),t.toPaddedHex=u,t.contrastRatio=d},8969:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoreTerminal=void 0;const i=r(844),s=r(2585),n=r(4348),o=r(7866),a=r(744),l=r(7302),c=r(6975),h=r(8460),u=r(1753),d=r(1480),f=r(7994),p=r(9282),v=r(5435),g=r(5981),_=r(2660);let m=!1;class b extends i.Disposable{constructor(e){super(),this._onBinary=this.register(new h.EventEmitter),this.onBinary=this._onBinary.event,this._onData=this.register(new h.EventEmitter),this.onData=this._onData.event,this._onLineFeed=this.register(new h.EventEmitter),this.onLineFeed=this._onLineFeed.event,this._onResize=this.register(new h.EventEmitter),this.onResize=this._onResize.event,this._onWriteParsed=this.register(new h.EventEmitter),this.onWriteParsed=this._onWriteParsed.event,this._onScroll=this.register(new h.EventEmitter),this._instantiationService=new n.InstantiationService,this.optionsService=this.register(new l.OptionsService(e)),this._instantiationService.setService(s.IOptionsService,this.optionsService),this._bufferService=this.register(this._instantiationService.createInstance(a.BufferService)),this._instantiationService.setService(s.IBufferService,this._bufferService),this._logService=this.register(this._instantiationService.createInstance(o.LogService)),this._instantiationService.setService(s.ILogService,this._logService),this.coreService=this.register(this._instantiationService.createInstance(c.CoreService)),this._instantiationService.setService(s.ICoreService,this.coreService),this.coreMouseService=this.register(this._instantiationService.createInstance(u.CoreMouseService)),this._instantiationService.setService(s.ICoreMouseService,this.coreMouseService),this.unicodeService=this.register(this._instantiationService.createInstance(d.UnicodeService)),this._instantiationService.setService(s.IUnicodeService,this.unicodeService),this._charsetService=this._instantiationService.createInstance(f.CharsetService),this._instantiationService.setService(s.ICharsetService,this._charsetService),this._oscLinkService=this._instantiationService.createInstance(_.OscLinkService),this._instantiationService.setService(s.IOscLinkService,this._oscLinkService),this._inputHandler=this.register(new v.InputHandler(this._bufferService,this._charsetService,this.coreService,this._logService,this.optionsService,this._oscLinkService,this.coreMouseService,this.unicodeService)),this.register((0,h.forwardEvent)(this._inputHandler.onLineFeed,this._onLineFeed)),this.register(this._inputHandler),this.register((0,h.forwardEvent)(this._bufferService.onResize,this._onResize)),this.register((0,h.forwardEvent)(this.coreService.onData,this._onData)),this.register((0,h.forwardEvent)(this.coreService.onBinary,this._onBinary)),this.register(this.coreService.onRequestScrollToBottom((()=>this.scrollToBottom()))),this.register(this.coreService.onUserInput((()=>this._writeBuffer.handleUserInput()))),this.register(this.optionsService.onMultipleOptionChange(["windowsMode","windowsPty"],(()=>this._handleWindowsPtyOptionChange()))),this.register(this._bufferService.onScroll((e=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this.register(this._inputHandler.onScroll((e=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this._writeBuffer=this.register(new g.WriteBuffer(((e,t)=>this._inputHandler.parse(e,t)))),this.register((0,h.forwardEvent)(this._writeBuffer.onWriteParsed,this._onWriteParsed)),this.register((0,i.toDisposable)((()=>{var e;null===(e=this._windowsWrappingHeuristics)||void 0===e||e.dispose(),this._windowsWrappingHeuristics=void 0})))}get onScroll(){return this._onScrollApi||(this._onScrollApi=this.register(new h.EventEmitter),this._onScroll.event((e=>{var t;null===(t=this._onScrollApi)||void 0===t||t.fire(e.position)}))),this._onScrollApi.event}get cols(){return this._bufferService.cols}get rows(){return this._bufferService.rows}get buffers(){return this._bufferService.buffers}get options(){return this.optionsService.options}set options(e){for(const t in e)this.optionsService.options[t]=e[t]}write(e,t){this._writeBuffer.write(e,t)}writeSync(e,t){this._logService.logLevel<=s.LogLevelEnum.WARN&&!m&&(this._logService.warn("writeSync is unreliable and will be removed soon."),m=!0),this._writeBuffer.writeSync(e,t)}resize(e,t){isNaN(e)||isNaN(t)||(e=Math.max(e,a.MINIMUM_COLS),t=Math.max(t,a.MINIMUM_ROWS),this._bufferService.resize(e,t))}scroll(e,t=!1){this._bufferService.scroll(e,t)}scrollLines(e,t,r){this._bufferService.scrollLines(e,t,r)}scrollPages(e){this._bufferService.scrollPages(e)}scrollToTop(){this._bufferService.scrollToTop()}scrollToBottom(){this._bufferService.scrollToBottom()}scrollToLine(e){this._bufferService.scrollToLine(e)}registerEscHandler(e,t){return this._inputHandler.registerEscHandler(e,t)}registerDcsHandler(e,t){return this._inputHandler.registerDcsHandler(e,t)}registerCsiHandler(e,t){return this._inputHandler.registerCsiHandler(e,t)}registerOscHandler(e,t){return this._inputHandler.registerOscHandler(e,t)}_setup(){this._handleWindowsPtyOptionChange()}reset(){this._inputHandler.reset(),this._bufferService.reset(),this._charsetService.reset(),this.coreService.reset(),this.coreMouseService.reset()}_handleWindowsPtyOptionChange(){var e;let t=!1;const r=this.optionsService.rawOptions.windowsPty;r&&void 0!==r.buildNumber&&void 0!==r.buildNumber?t=!!("conpty"===r.backend&&r.buildNumber<21376):this.optionsService.rawOptions.windowsMode&&(t=!0),t?this._enableWindowsWrappingHeuristics():(null===(e=this._windowsWrappingHeuristics)||void 0===e||e.dispose(),this._windowsWrappingHeuristics=void 0)}_enableWindowsWrappingHeuristics(){if(!this._windowsWrappingHeuristics){const e=[];e.push(this.onLineFeed(p.updateWindowsModeWrappedState.bind(null,this._bufferService))),e.push(this.registerCsiHandler({final:"H"},(()=>((0,p.updateWindowsModeWrappedState)(this._bufferService),!1)))),this._windowsWrappingHeuristics=(0,i.toDisposable)((()=>{for(const t of e)t.dispose()}))}}}t.CoreTerminal=b},8460:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.forwardEvent=t.EventEmitter=void 0,t.EventEmitter=class{constructor(){this._listeners=[],this._disposed=!1}get event(){return this._event||(this._event=e=>(this._listeners.push(e),{dispose:()=>{if(!this._disposed)for(let t=0;t<this._listeners.length;t++)if(this._listeners[t]===e)return void this._listeners.splice(t,1)}})),this._event}fire(e,t){const r=[];for(let e=0;e<this._listeners.length;e++)r.push(this._listeners[e]);for(let i=0;i<r.length;i++)r[i].call(void 0,e,t)}dispose(){this._listeners&&(this._listeners.length=0),this._disposed=!0}},t.forwardEvent=function(e,t){return e((e=>t.fire(e)))}},5435:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.InputHandler=t.WindowsOptionsReportType=void 0;const n=r(2584),o=r(7116),a=r(2015),l=r(844),c=r(482),h=r(8437),u=r(8460),d=r(643),f=r(511),p=r(3734),v=r(2585),g=r(6242),_=r(6351),m=r(5941),b={"(":0,")":1,"*":2,"+":3,"-":1,".":2},S=131072;function y(e,t){if(e>24)return t.setWinLines||!1;switch(e){case 1:return!!t.restoreWin;case 2:return!!t.minimizeWin;case 3:return!!t.setWinPosition;case 4:return!!t.setWinSizePixels;case 5:return!!t.raiseWin;case 6:return!!t.lowerWin;case 7:return!!t.refreshWin;case 8:return!!t.setWinSizeChars;case 9:return!!t.maximizeWin;case 10:return!!t.fullscreenWin;case 11:return!!t.getWinState;case 13:return!!t.getWinPosition;case 14:return!!t.getWinSizePixels;case 15:return!!t.getScreenSizePixels;case 16:return!!t.getCellSizePixels;case 18:return!!t.getWinSizeChars;case 19:return!!t.getScreenSizeChars;case 20:return!!t.getIconTitle;case 21:return!!t.getWinTitle;case 22:return!!t.pushTitle;case 23:return!!t.popTitle;case 24:return!!t.setWinLines}return!1}var C;!function(e){e[e.GET_WIN_SIZE_PIXELS=0]="GET_WIN_SIZE_PIXELS",e[e.GET_CELL_SIZE_PIXELS=1]="GET_CELL_SIZE_PIXELS"}(C=t.WindowsOptionsReportType||(t.WindowsOptionsReportType={}));let w=0;class k extends l.Disposable{constructor(e,t,r,i,s,l,d,p,v=new a.EscapeSequenceParser){super(),this._bufferService=e,this._charsetService=t,this._coreService=r,this._logService=i,this._optionsService=s,this._oscLinkService=l,this._coreMouseService=d,this._unicodeService=p,this._parser=v,this._parseBuffer=new Uint32Array(4096),this._stringDecoder=new c.StringToUtf32,this._utf8Decoder=new c.Utf8ToUtf32,this._workCell=new f.CellData,this._windowTitle="",this._iconName="",this._windowTitleStack=[],this._iconNameStack=[],this._curAttrData=h.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=h.DEFAULT_ATTR_DATA.clone(),this._onRequestBell=this.register(new u.EventEmitter),this.onRequestBell=this._onRequestBell.event,this._onRequestRefreshRows=this.register(new u.EventEmitter),this.onRequestRefreshRows=this._onRequestRefreshRows.event,this._onRequestReset=this.register(new u.EventEmitter),this.onRequestReset=this._onRequestReset.event,this._onRequestSendFocus=this.register(new u.EventEmitter),this.onRequestSendFocus=this._onRequestSendFocus.event,this._onRequestSyncScrollBar=this.register(new u.EventEmitter),this.onRequestSyncScrollBar=this._onRequestSyncScrollBar.event,this._onRequestWindowsOptionsReport=this.register(new u.EventEmitter),this.onRequestWindowsOptionsReport=this._onRequestWindowsOptionsReport.event,this._onA11yChar=this.register(new u.EventEmitter),this.onA11yChar=this._onA11yChar.event,this._onA11yTab=this.register(new u.EventEmitter),this.onA11yTab=this._onA11yTab.event,this._onCursorMove=this.register(new u.EventEmitter),this.onCursorMove=this._onCursorMove.event,this._onLineFeed=this.register(new u.EventEmitter),this.onLineFeed=this._onLineFeed.event,this._onScroll=this.register(new u.EventEmitter),this.onScroll=this._onScroll.event,this._onTitleChange=this.register(new u.EventEmitter),this.onTitleChange=this._onTitleChange.event,this._onColor=this.register(new u.EventEmitter),this.onColor=this._onColor.event,this._parseStack={paused:!1,cursorStartX:0,cursorStartY:0,decodedLength:0,position:0},this._specialColors=[256,257,258],this.register(this._parser),this._dirtyRowTracker=new E(this._bufferService),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((e=>this._activeBuffer=e.activeBuffer))),this._parser.setCsiHandlerFallback(((e,t)=>{this._logService.debug("Unknown CSI code: ",{identifier:this._parser.identToString(e),params:t.toArray()})})),this._parser.setEscHandlerFallback((e=>{this._logService.debug("Unknown ESC code: ",{identifier:this._parser.identToString(e)})})),this._parser.setExecuteHandlerFallback((e=>{this._logService.debug("Unknown EXECUTE code: ",{code:e})})),this._parser.setOscHandlerFallback(((e,t,r)=>{this._logService.debug("Unknown OSC code: ",{identifier:e,action:t,data:r})})),this._parser.setDcsHandlerFallback(((e,t,r)=>{"HOOK"===t&&(r=r.toArray()),this._logService.debug("Unknown DCS code: ",{identifier:this._parser.identToString(e),action:t,payload:r})})),this._parser.setPrintHandler(((e,t,r)=>this.print(e,t,r))),this._parser.registerCsiHandler({final:"@"},(e=>this.insertChars(e))),this._parser.registerCsiHandler({intermediates:" ",final:"@"},(e=>this.scrollLeft(e))),this._parser.registerCsiHandler({final:"A"},(e=>this.cursorUp(e))),this._parser.registerCsiHandler({intermediates:" ",final:"A"},(e=>this.scrollRight(e))),this._parser.registerCsiHandler({final:"B"},(e=>this.cursorDown(e))),this._parser.registerCsiHandler({final:"C"},(e=>this.cursorForward(e))),this._parser.registerCsiHandler({final:"D"},(e=>this.cursorBackward(e))),this._parser.registerCsiHandler({final:"E"},(e=>this.cursorNextLine(e))),this._parser.registerCsiHandler({final:"F"},(e=>this.cursorPrecedingLine(e))),this._parser.registerCsiHandler({final:"G"},(e=>this.cursorCharAbsolute(e))),this._parser.registerCsiHandler({final:"H"},(e=>this.cursorPosition(e))),this._parser.registerCsiHandler({final:"I"},(e=>this.cursorForwardTab(e))),this._parser.registerCsiHandler({final:"J"},(e=>this.eraseInDisplay(e,!1))),this._parser.registerCsiHandler({prefix:"?",final:"J"},(e=>this.eraseInDisplay(e,!0))),this._parser.registerCsiHandler({final:"K"},(e=>this.eraseInLine(e,!1))),this._parser.registerCsiHandler({prefix:"?",final:"K"},(e=>this.eraseInLine(e,!0))),this._parser.registerCsiHandler({final:"L"},(e=>this.insertLines(e))),this._parser.registerCsiHandler({final:"M"},(e=>this.deleteLines(e))),this._parser.registerCsiHandler({final:"P"},(e=>this.deleteChars(e))),this._parser.registerCsiHandler({final:"S"},(e=>this.scrollUp(e))),this._parser.registerCsiHandler({final:"T"},(e=>this.scrollDown(e))),this._parser.registerCsiHandler({final:"X"},(e=>this.eraseChars(e))),this._parser.registerCsiHandler({final:"Z"},(e=>this.cursorBackwardTab(e))),this._parser.registerCsiHandler({final:"`"},(e=>this.charPosAbsolute(e))),this._parser.registerCsiHandler({final:"a"},(e=>this.hPositionRelative(e))),this._parser.registerCsiHandler({final:"b"},(e=>this.repeatPrecedingCharacter(e))),this._parser.registerCsiHandler({final:"c"},(e=>this.sendDeviceAttributesPrimary(e))),this._parser.registerCsiHandler({prefix:">",final:"c"},(e=>this.sendDeviceAttributesSecondary(e))),this._parser.registerCsiHandler({final:"d"},(e=>this.linePosAbsolute(e))),this._parser.registerCsiHandler({final:"e"},(e=>this.vPositionRelative(e))),this._parser.registerCsiHandler({final:"f"},(e=>this.hVPosition(e))),this._parser.registerCsiHandler({final:"g"},(e=>this.tabClear(e))),this._parser.registerCsiHandler({final:"h"},(e=>this.setMode(e))),this._parser.registerCsiHandler({prefix:"?",final:"h"},(e=>this.setModePrivate(e))),this._parser.registerCsiHandler({final:"l"},(e=>this.resetMode(e))),this._parser.registerCsiHandler({prefix:"?",final:"l"},(e=>this.resetModePrivate(e))),this._parser.registerCsiHandler({final:"m"},(e=>this.charAttributes(e))),this._parser.registerCsiHandler({final:"n"},(e=>this.deviceStatus(e))),this._parser.registerCsiHandler({prefix:"?",final:"n"},(e=>this.deviceStatusPrivate(e))),this._parser.registerCsiHandler({intermediates:"!",final:"p"},(e=>this.softReset(e))),this._parser.registerCsiHandler({intermediates:" ",final:"q"},(e=>this.setCursorStyle(e))),this._parser.registerCsiHandler({final:"r"},(e=>this.setScrollRegion(e))),this._parser.registerCsiHandler({final:"s"},(e=>this.saveCursor(e))),this._parser.registerCsiHandler({final:"t"},(e=>this.windowOptions(e))),this._parser.registerCsiHandler({final:"u"},(e=>this.restoreCursor(e))),this._parser.registerCsiHandler({intermediates:"'",final:"}"},(e=>this.insertColumns(e))),this._parser.registerCsiHandler({intermediates:"'",final:"~"},(e=>this.deleteColumns(e))),this._parser.registerCsiHandler({intermediates:'"',final:"q"},(e=>this.selectProtected(e))),this._parser.registerCsiHandler({intermediates:"$",final:"p"},(e=>this.requestMode(e,!0))),this._parser.registerCsiHandler({prefix:"?",intermediates:"$",final:"p"},(e=>this.requestMode(e,!1))),this._parser.setExecuteHandler(n.C0.BEL,(()=>this.bell())),this._parser.setExecuteHandler(n.C0.LF,(()=>this.lineFeed())),this._parser.setExecuteHandler(n.C0.VT,(()=>this.lineFeed())),this._parser.setExecuteHandler(n.C0.FF,(()=>this.lineFeed())),this._parser.setExecuteHandler(n.C0.CR,(()=>this.carriageReturn())),this._parser.setExecuteHandler(n.C0.BS,(()=>this.backspace())),this._parser.setExecuteHandler(n.C0.HT,(()=>this.tab())),this._parser.setExecuteHandler(n.C0.SO,(()=>this.shiftOut())),this._parser.setExecuteHandler(n.C0.SI,(()=>this.shiftIn())),this._parser.setExecuteHandler(n.C1.IND,(()=>this.index())),this._parser.setExecuteHandler(n.C1.NEL,(()=>this.nextLine())),this._parser.setExecuteHandler(n.C1.HTS,(()=>this.tabSet())),this._parser.registerOscHandler(0,new g.OscHandler((e=>(this.setTitle(e),this.setIconName(e),!0)))),this._parser.registerOscHandler(1,new g.OscHandler((e=>this.setIconName(e)))),this._parser.registerOscHandler(2,new g.OscHandler((e=>this.setTitle(e)))),this._parser.registerOscHandler(4,new g.OscHandler((e=>this.setOrReportIndexedColor(e)))),this._parser.registerOscHandler(8,new g.OscHandler((e=>this.setHyperlink(e)))),this._parser.registerOscHandler(10,new g.OscHandler((e=>this.setOrReportFgColor(e)))),this._parser.registerOscHandler(11,new g.OscHandler((e=>this.setOrReportBgColor(e)))),this._parser.registerOscHandler(12,new g.OscHandler((e=>this.setOrReportCursorColor(e)))),this._parser.registerOscHandler(104,new g.OscHandler((e=>this.restoreIndexedColor(e)))),this._parser.registerOscHandler(110,new g.OscHandler((e=>this.restoreFgColor(e)))),this._parser.registerOscHandler(111,new g.OscHandler((e=>this.restoreBgColor(e)))),this._parser.registerOscHandler(112,new g.OscHandler((e=>this.restoreCursorColor(e)))),this._parser.registerEscHandler({final:"7"},(()=>this.saveCursor())),this._parser.registerEscHandler({final:"8"},(()=>this.restoreCursor())),this._parser.registerEscHandler({final:"D"},(()=>this.index())),this._parser.registerEscHandler({final:"E"},(()=>this.nextLine())),this._parser.registerEscHandler({final:"H"},(()=>this.tabSet())),this._parser.registerEscHandler({final:"M"},(()=>this.reverseIndex())),this._parser.registerEscHandler({final:"="},(()=>this.keypadApplicationMode())),this._parser.registerEscHandler({final:">"},(()=>this.keypadNumericMode())),this._parser.registerEscHandler({final:"c"},(()=>this.fullReset())),this._parser.registerEscHandler({final:"n"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"o"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"|"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"}"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"~"},(()=>this.setgLevel(1))),this._parser.registerEscHandler({intermediates:"%",final:"@"},(()=>this.selectDefaultCharset())),this._parser.registerEscHandler({intermediates:"%",final:"G"},(()=>this.selectDefaultCharset()));for(const e in o.CHARSETS)this._parser.registerEscHandler({intermediates:"(",final:e},(()=>this.selectCharset("("+e))),this._parser.registerEscHandler({intermediates:")",final:e},(()=>this.selectCharset(")"+e))),this._parser.registerEscHandler({intermediates:"*",final:e},(()=>this.selectCharset("*"+e))),this._parser.registerEscHandler({intermediates:"+",final:e},(()=>this.selectCharset("+"+e))),this._parser.registerEscHandler({intermediates:"-",final:e},(()=>this.selectCharset("-"+e))),this._parser.registerEscHandler({intermediates:".",final:e},(()=>this.selectCharset("."+e))),this._parser.registerEscHandler({intermediates:"/",final:e},(()=>this.selectCharset("/"+e)));this._parser.registerEscHandler({intermediates:"#",final:"8"},(()=>this.screenAlignmentPattern())),this._parser.setErrorHandler((e=>(this._logService.error("Parsing error: ",e),e))),this._parser.registerDcsHandler({intermediates:"$",final:"q"},new _.DcsHandler(((e,t)=>this.requestStatusString(e,t))))}getAttrData(){return this._curAttrData}_preserveStack(e,t,r,i){this._parseStack.paused=!0,this._parseStack.cursorStartX=e,this._parseStack.cursorStartY=t,this._parseStack.decodedLength=r,this._parseStack.position=i}_logSlowResolvingAsync(e){this._logService.logLevel<=v.LogLevelEnum.WARN&&Promise.race([e,new Promise(((e,t)=>setTimeout((()=>t("#SLOW_TIMEOUT")),5e3)))]).catch((e=>{if("#SLOW_TIMEOUT"!==e)throw e;console.warn("async parser handler taking longer than 5000 ms")}))}_getCurrentLinkId(){return this._curAttrData.extended.urlId}parse(e,t){let r,i=this._activeBuffer.x,s=this._activeBuffer.y,n=0;const o=this._parseStack.paused;if(o){if(r=this._parser.parse(this._parseBuffer,this._parseStack.decodedLength,t))return this._logSlowResolvingAsync(r),r;i=this._parseStack.cursorStartX,s=this._parseStack.cursorStartY,this._parseStack.paused=!1,e.length>S&&(n=this._parseStack.position+S)}if(this._logService.logLevel<=v.LogLevelEnum.DEBUG&&this._logService.debug("parsing data"+("string"==typeof e?` "${e}"`:` "${Array.prototype.map.call(e,(e=>String.fromCharCode(e))).join("")}"`),"string"==typeof e?e.split("").map((e=>e.charCodeAt(0))):e),this._parseBuffer.length<e.length&&this._parseBuffer.length<S&&(this._parseBuffer=new Uint32Array(Math.min(e.length,S))),o||this._dirtyRowTracker.clearRange(),e.length>S)for(let t=n;t<e.length;t+=S){const n=t+S<e.length?t+S:e.length,o="string"==typeof e?this._stringDecoder.decode(e.substring(t,n),this._parseBuffer):this._utf8Decoder.decode(e.subarray(t,n),this._parseBuffer);if(r=this._parser.parse(this._parseBuffer,o))return this._preserveStack(i,s,o,t),this._logSlowResolvingAsync(r),r}else if(!o){const t="string"==typeof e?this._stringDecoder.decode(e,this._parseBuffer):this._utf8Decoder.decode(e,this._parseBuffer);if(r=this._parser.parse(this._parseBuffer,t))return this._preserveStack(i,s,t,0),this._logSlowResolvingAsync(r),r}this._activeBuffer.x===i&&this._activeBuffer.y===s||this._onCursorMove.fire(),this._onRequestRefreshRows.fire(this._dirtyRowTracker.start,this._dirtyRowTracker.end)}print(e,t,r){let i,s;const n=this._charsetService.charset,o=this._optionsService.rawOptions.screenReaderMode,a=this._bufferService.cols,l=this._coreService.decPrivateModes.wraparound,h=this._coreService.modes.insertMode,u=this._curAttrData;let f=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._activeBuffer.x&&r-t>0&&2===f.getWidth(this._activeBuffer.x-1)&&f.setCellFromCodePoint(this._activeBuffer.x-1,0,1,u.fg,u.bg,u.extended);for(let p=t;p<r;++p){if(i=e[p],s=this._unicodeService.wcwidth(i),i<127&&n){const e=n[String.fromCharCode(i)];e&&(i=e.charCodeAt(0))}if(o&&this._onA11yChar.fire((0,c.stringFromCodePoint)(i)),this._getCurrentLinkId()&&this._oscLinkService.addLineToLink(this._getCurrentLinkId(),this._activeBuffer.ybase+this._activeBuffer.y),s||!this._activeBuffer.x){if(this._activeBuffer.x+s-1>=a)if(l){for(;this._activeBuffer.x<a;)f.setCellFromCodePoint(this._activeBuffer.x++,0,1,u.fg,u.bg,u.extended);this._activeBuffer.x=0,this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData(),!0)):(this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!0),f=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y)}else if(this._activeBuffer.x=a-1,2===s)continue;if(h&&(f.insertCells(this._activeBuffer.x,s,this._activeBuffer.getNullCell(u),u),2===f.getWidth(a-1)&&f.setCellFromCodePoint(a-1,d.NULL_CELL_CODE,d.NULL_CELL_WIDTH,u.fg,u.bg,u.extended)),f.setCellFromCodePoint(this._activeBuffer.x++,i,s,u.fg,u.bg,u.extended),s>0)for(;--s;)f.setCellFromCodePoint(this._activeBuffer.x++,0,0,u.fg,u.bg,u.extended)}else f.getWidth(this._activeBuffer.x-1)?f.addCodepointToCell(this._activeBuffer.x-1,i):f.addCodepointToCell(this._activeBuffer.x-2,i)}r-t>0&&(f.loadCell(this._activeBuffer.x-1,this._workCell),2===this._workCell.getWidth()||this._workCell.getCode()>65535?this._parser.precedingCodepoint=0:this._workCell.isCombined()?this._parser.precedingCodepoint=this._workCell.getChars().charCodeAt(0):this._parser.precedingCodepoint=this._workCell.content),this._activeBuffer.x<a&&r-t>0&&0===f.getWidth(this._activeBuffer.x)&&!f.hasContent(this._activeBuffer.x)&&f.setCellFromCodePoint(this._activeBuffer.x,0,1,u.fg,u.bg,u.extended),this._dirtyRowTracker.markDirty(this._activeBuffer.y)}registerCsiHandler(e,t){return"t"!==e.final||e.prefix||e.intermediates?this._parser.registerCsiHandler(e,t):this._parser.registerCsiHandler(e,(e=>!y(e.params[0],this._optionsService.rawOptions.windowOptions)||t(e)))}registerDcsHandler(e,t){return this._parser.registerDcsHandler(e,new _.DcsHandler(t))}registerEscHandler(e,t){return this._parser.registerEscHandler(e,t)}registerOscHandler(e,t){return this._parser.registerOscHandler(e,new g.OscHandler(t))}bell(){return this._onRequestBell.fire(),!0}lineFeed(){return this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._optionsService.rawOptions.convertEol&&(this._activeBuffer.x=0),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows?this._activeBuffer.y=this._bufferService.rows-1:this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.x>=this._bufferService.cols&&this._activeBuffer.x--,this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._onLineFeed.fire(),!0}carriageReturn(){return this._activeBuffer.x=0,!0}backspace(){var e;if(!this._coreService.decPrivateModes.reverseWraparound)return this._restrictCursor(),this._activeBuffer.x>0&&this._activeBuffer.x--,!0;if(this._restrictCursor(this._bufferService.cols),this._activeBuffer.x>0)this._activeBuffer.x--;else if(0===this._activeBuffer.x&&this._activeBuffer.y>this._activeBuffer.scrollTop&&this._activeBuffer.y<=this._activeBuffer.scrollBottom&&(null===(e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y))||void 0===e?void 0:e.isWrapped)){this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.y--,this._activeBuffer.x=this._bufferService.cols-1;const e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);e.hasWidth(this._activeBuffer.x)&&!e.hasContent(this._activeBuffer.x)&&this._activeBuffer.x--}return this._restrictCursor(),!0}tab(){if(this._activeBuffer.x>=this._bufferService.cols)return!0;const e=this._activeBuffer.x;return this._activeBuffer.x=this._activeBuffer.nextStop(),this._optionsService.rawOptions.screenReaderMode&&this._onA11yTab.fire(this._activeBuffer.x-e),!0}shiftOut(){return this._charsetService.setgLevel(1),!0}shiftIn(){return this._charsetService.setgLevel(0),!0}_restrictCursor(e=this._bufferService.cols-1){this._activeBuffer.x=Math.min(e,Math.max(0,this._activeBuffer.x)),this._activeBuffer.y=this._coreService.decPrivateModes.origin?Math.min(this._activeBuffer.scrollBottom,Math.max(this._activeBuffer.scrollTop,this._activeBuffer.y)):Math.min(this._bufferService.rows-1,Math.max(0,this._activeBuffer.y)),this._dirtyRowTracker.markDirty(this._activeBuffer.y)}_setCursor(e,t){this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._coreService.decPrivateModes.origin?(this._activeBuffer.x=e,this._activeBuffer.y=this._activeBuffer.scrollTop+t):(this._activeBuffer.x=e,this._activeBuffer.y=t),this._restrictCursor(),this._dirtyRowTracker.markDirty(this._activeBuffer.y)}_moveCursor(e,t){this._restrictCursor(),this._setCursor(this._activeBuffer.x+e,this._activeBuffer.y+t)}cursorUp(e){const t=this._activeBuffer.y-this._activeBuffer.scrollTop;return t>=0?this._moveCursor(0,-Math.min(t,e.params[0]||1)):this._moveCursor(0,-(e.params[0]||1)),!0}cursorDown(e){const t=this._activeBuffer.scrollBottom-this._activeBuffer.y;return t>=0?this._moveCursor(0,Math.min(t,e.params[0]||1)):this._moveCursor(0,e.params[0]||1),!0}cursorForward(e){return this._moveCursor(e.params[0]||1,0),!0}cursorBackward(e){return this._moveCursor(-(e.params[0]||1),0),!0}cursorNextLine(e){return this.cursorDown(e),this._activeBuffer.x=0,!0}cursorPrecedingLine(e){return this.cursorUp(e),this._activeBuffer.x=0,!0}cursorCharAbsolute(e){return this._setCursor((e.params[0]||1)-1,this._activeBuffer.y),!0}cursorPosition(e){return this._setCursor(e.length>=2?(e.params[1]||1)-1:0,(e.params[0]||1)-1),!0}charPosAbsolute(e){return this._setCursor((e.params[0]||1)-1,this._activeBuffer.y),!0}hPositionRelative(e){return this._moveCursor(e.params[0]||1,0),!0}linePosAbsolute(e){return this._setCursor(this._activeBuffer.x,(e.params[0]||1)-1),!0}vPositionRelative(e){return this._moveCursor(0,e.params[0]||1),!0}hVPosition(e){return this.cursorPosition(e),!0}tabClear(e){const t=e.params[0];return 0===t?delete this._activeBuffer.tabs[this._activeBuffer.x]:3===t&&(this._activeBuffer.tabs={}),!0}cursorForwardTab(e){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let t=e.params[0]||1;for(;t--;)this._activeBuffer.x=this._activeBuffer.nextStop();return!0}cursorBackwardTab(e){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let t=e.params[0]||1;for(;t--;)this._activeBuffer.x=this._activeBuffer.prevStop();return!0}selectProtected(e){const t=e.params[0];return 1===t&&(this._curAttrData.bg|=536870912),2!==t&&0!==t||(this._curAttrData.bg&=-536870913),!0}_eraseInBufferLine(e,t,r,i=!1,s=!1){const n=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);n.replaceCells(t,r,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData(),s),i&&(n.isWrapped=!1)}_resetBufferLine(e,t=!1){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r&&(r.fill(this._activeBuffer.getNullCell(this._eraseAttrData()),t),this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase+e),r.isWrapped=!1)}eraseInDisplay(e,t=!1){let r;switch(this._restrictCursor(this._bufferService.cols),e.params[0]){case 0:for(r=this._activeBuffer.y,this._dirtyRowTracker.markDirty(r),this._eraseInBufferLine(r++,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,t);r<this._bufferService.rows;r++)this._resetBufferLine(r,t);this._dirtyRowTracker.markDirty(r);break;case 1:for(r=this._activeBuffer.y,this._dirtyRowTracker.markDirty(r),this._eraseInBufferLine(r,0,this._activeBuffer.x+1,!0,t),this._activeBuffer.x+1>=this._bufferService.cols&&(this._activeBuffer.lines.get(r+1).isWrapped=!1);r--;)this._resetBufferLine(r,t);this._dirtyRowTracker.markDirty(0);break;case 2:for(r=this._bufferService.rows,this._dirtyRowTracker.markDirty(r-1);r--;)this._resetBufferLine(r,t);this._dirtyRowTracker.markDirty(0);break;case 3:const e=this._activeBuffer.lines.length-this._bufferService.rows;e>0&&(this._activeBuffer.lines.trimStart(e),this._activeBuffer.ybase=Math.max(this._activeBuffer.ybase-e,0),this._activeBuffer.ydisp=Math.max(this._activeBuffer.ydisp-e,0),this._onScroll.fire(0))}return!0}eraseInLine(e,t=!1){switch(this._restrictCursor(this._bufferService.cols),e.params[0]){case 0:this._eraseInBufferLine(this._activeBuffer.y,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,t);break;case 1:this._eraseInBufferLine(this._activeBuffer.y,0,this._activeBuffer.x+1,!1,t);break;case 2:this._eraseInBufferLine(this._activeBuffer.y,0,this._bufferService.cols,!0,t)}return this._dirtyRowTracker.markDirty(this._activeBuffer.y),!0}insertLines(e){this._restrictCursor();let t=e.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const r=this._activeBuffer.ybase+this._activeBuffer.y,i=this._bufferService.rows-1-this._activeBuffer.scrollBottom,s=this._bufferService.rows-1+this._activeBuffer.ybase-i+1;for(;t--;)this._activeBuffer.lines.splice(s-1,1),this._activeBuffer.lines.splice(r,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}deleteLines(e){this._restrictCursor();let t=e.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const r=this._activeBuffer.ybase+this._activeBuffer.y;let i;for(i=this._bufferService.rows-1-this._activeBuffer.scrollBottom,i=this._bufferService.rows-1+this._activeBuffer.ybase-i;t--;)this._activeBuffer.lines.splice(r,1),this._activeBuffer.lines.splice(i,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}insertChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.insertCells(this._activeBuffer.x,e.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowTracker.markDirty(this._activeBuffer.y)),!0}deleteChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.deleteCells(this._activeBuffer.x,e.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowTracker.markDirty(this._activeBuffer.y)),!0}scrollUp(e){let t=e.params[0]||1;for(;t--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollDown(e){let t=e.params[0]||1;for(;t--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,0,this._activeBuffer.getBlankLine(h.DEFAULT_ATTR_DATA));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollLeft(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.deleteCells(0,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollRight(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.insertCells(0,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}insertColumns(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.insertCells(this._activeBuffer.x,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}deleteColumns(e){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const t=e.params[0]||1;for(let e=this._activeBuffer.scrollTop;e<=this._activeBuffer.scrollBottom;++e){const r=this._activeBuffer.lines.get(this._activeBuffer.ybase+e);r.deleteCells(this._activeBuffer.x,t,this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),r.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}eraseChars(e){this._restrictCursor();const t=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return t&&(t.replaceCells(this._activeBuffer.x,this._activeBuffer.x+(e.params[0]||1),this._activeBuffer.getNullCell(this._eraseAttrData()),this._eraseAttrData()),this._dirtyRowTracker.markDirty(this._activeBuffer.y)),!0}repeatPrecedingCharacter(e){if(!this._parser.precedingCodepoint)return!0;const t=e.params[0]||1,r=new Uint32Array(t);for(let e=0;e<t;++e)r[e]=this._parser.precedingCodepoint;return this.print(r,0,r.length),!0}sendDeviceAttributesPrimary(e){return e.params[0]>0||(this._is("xterm")||this._is("rxvt-unicode")||this._is("screen")?this._coreService.triggerDataEvent(n.C0.ESC+"[?1;2c"):this._is("linux")&&this._coreService.triggerDataEvent(n.C0.ESC+"[?6c")),!0}sendDeviceAttributesSecondary(e){return e.params[0]>0||(this._is("xterm")?this._coreService.triggerDataEvent(n.C0.ESC+"[>0;276;0c"):this._is("rxvt-unicode")?this._coreService.triggerDataEvent(n.C0.ESC+"[>85;95;0c"):this._is("linux")?this._coreService.triggerDataEvent(e.params[0]+"c"):this._is("screen")&&this._coreService.triggerDataEvent(n.C0.ESC+"[>83;40003;0c")),!0}_is(e){return 0===(this._optionsService.rawOptions.termName+"").indexOf(e)}setMode(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 4:this._coreService.modes.insertMode=!0;break;case 20:this._optionsService.options.convertEol=!0}return!0}setModePrivate(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!0;break;case 2:this._charsetService.setgCharset(0,o.DEFAULT_CHARSET),this._charsetService.setgCharset(1,o.DEFAULT_CHARSET),this._charsetService.setgCharset(2,o.DEFAULT_CHARSET),this._charsetService.setgCharset(3,o.DEFAULT_CHARSET);break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(132,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!0,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!0;break;case 12:this._optionsService.options.cursorBlink=!0;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!0;break;case 66:this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire();break;case 9:this._coreMouseService.activeProtocol="X10";break;case 1e3:this._coreMouseService.activeProtocol="VT200";break;case 1002:this._coreMouseService.activeProtocol="DRAG";break;case 1003:this._coreMouseService.activeProtocol="ANY";break;case 1004:this._coreService.decPrivateModes.sendFocus=!0,this._onRequestSendFocus.fire();break;case 1005:this._logService.debug("DECSET 1005 not supported (see #2507)");break;case 1006:this._coreMouseService.activeEncoding="SGR";break;case 1015:this._logService.debug("DECSET 1015 not supported (see #2507)");break;case 1016:this._coreMouseService.activeEncoding="SGR_PIXELS";break;case 25:this._coreService.isCursorHidden=!1;break;case 1048:this.saveCursor();break;case 1049:this.saveCursor();case 47:case 1047:this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!0}return!0}resetMode(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 4:this._coreService.modes.insertMode=!1;break;case 20:this._optionsService.options.convertEol=!1}return!0}resetModePrivate(e){for(let t=0;t<e.length;t++)switch(e.params[t]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!1;break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(80,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!1,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!1;break;case 12:this._optionsService.options.cursorBlink=!1;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!1;break;case 66:this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire();break;case 9:case 1e3:case 1002:case 1003:this._coreMouseService.activeProtocol="NONE";break;case 1004:this._coreService.decPrivateModes.sendFocus=!1;break;case 1005:this._logService.debug("DECRST 1005 not supported (see #2507)");break;case 1006:case 1016:this._coreMouseService.activeEncoding="DEFAULT";break;case 1015:this._logService.debug("DECRST 1015 not supported (see #2507)");break;case 25:this._coreService.isCursorHidden=!0;break;case 1048:this.restoreCursor();break;case 1049:case 47:case 1047:this._bufferService.buffers.activateNormalBuffer(),1049===e.params[t]&&this.restoreCursor(),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!1}return!0}requestMode(e,t){const r=this._coreService.decPrivateModes,{activeProtocol:i,activeEncoding:s}=this._coreMouseService,o=this._coreService,{buffers:a,cols:l}=this._bufferService,{active:c,alt:h}=a,u=this._optionsService.rawOptions,d=e=>e?1:2,f=e.params[0];return p=f,v=t?2===f?4:4===f?d(o.modes.insertMode):12===f?3:20===f?d(u.convertEol):0:1===f?d(r.applicationCursorKeys):3===f?u.windowOptions.setWinLines?80===l?2:132===l?1:0:0:6===f?d(r.origin):7===f?d(r.wraparound):8===f?3:9===f?d("X10"===i):12===f?d(u.cursorBlink):25===f?d(!o.isCursorHidden):45===f?d(r.reverseWraparound):66===f?d(r.applicationKeypad):67===f?4:1e3===f?d("VT200"===i):1002===f?d("DRAG"===i):1003===f?d("ANY"===i):1004===f?d(r.sendFocus):1005===f?4:1006===f?d("SGR"===s):1015===f?4:1016===f?d("SGR_PIXELS"===s):1048===f?1:47===f||1047===f||1049===f?d(c===h):2004===f?d(r.bracketedPasteMode):0,o.triggerDataEvent(`${n.C0.ESC}[${t?"":"?"}${p};${v}$y`),!0;var p,v}_updateAttrColor(e,t,r,i,s){return 2===t?(e|=50331648,e&=-16777216,e|=p.AttributeData.fromColorRGB([r,i,s])):5===t&&(e&=-50331904,e|=33554432|255&r),e}_extractColor(e,t,r){const i=[0,0,-1,0,0,0];let s=0,n=0;do{if(i[n+s]=e.params[t+n],e.hasSubParams(t+n)){const r=e.getSubParams(t+n);let o=0;do{5===i[1]&&(s=1),i[n+o+1+s]=r[o]}while(++o<r.length&&o+n+1+s<i.length);break}if(5===i[1]&&n+s>=2||2===i[1]&&n+s>=5)break;i[1]&&(s=1)}while(++n+t<e.length&&n+s<i.length);for(let e=2;e<i.length;++e)-1===i[e]&&(i[e]=0);switch(i[0]){case 38:r.fg=this._updateAttrColor(r.fg,i[1],i[3],i[4],i[5]);break;case 48:r.bg=this._updateAttrColor(r.bg,i[1],i[3],i[4],i[5]);break;case 58:r.extended=r.extended.clone(),r.extended.underlineColor=this._updateAttrColor(r.extended.underlineColor,i[1],i[3],i[4],i[5])}return n}_processUnderline(e,t){t.extended=t.extended.clone(),(!~e||e>5)&&(e=1),t.extended.underlineStyle=e,t.fg|=268435456,0===e&&(t.fg&=-268435457),t.updateExtended()}_processSGR0(e){e.fg=h.DEFAULT_ATTR_DATA.fg,e.bg=h.DEFAULT_ATTR_DATA.bg,e.extended=e.extended.clone(),e.extended.underlineStyle=0,e.extended.underlineColor&=-67108864,e.updateExtended()}charAttributes(e){if(1===e.length&&0===e.params[0])return this._processSGR0(this._curAttrData),!0;const t=e.length;let r;const i=this._curAttrData;for(let s=0;s<t;s++)r=e.params[s],r>=30&&r<=37?(i.fg&=-50331904,i.fg|=16777216|r-30):r>=40&&r<=47?(i.bg&=-50331904,i.bg|=16777216|r-40):r>=90&&r<=97?(i.fg&=-50331904,i.fg|=16777224|r-90):r>=100&&r<=107?(i.bg&=-50331904,i.bg|=16777224|r-100):0===r?this._processSGR0(i):1===r?i.fg|=134217728:3===r?i.bg|=67108864:4===r?(i.fg|=268435456,this._processUnderline(e.hasSubParams(s)?e.getSubParams(s)[0]:1,i)):5===r?i.fg|=536870912:7===r?i.fg|=67108864:8===r?i.fg|=1073741824:9===r?i.fg|=2147483648:2===r?i.bg|=134217728:21===r?this._processUnderline(2,i):22===r?(i.fg&=-134217729,i.bg&=-134217729):23===r?i.bg&=-67108865:24===r?(i.fg&=-268435457,this._processUnderline(0,i)):25===r?i.fg&=-536870913:27===r?i.fg&=-67108865:28===r?i.fg&=-1073741825:29===r?i.fg&=2147483647:39===r?(i.fg&=-67108864,i.fg|=16777215&h.DEFAULT_ATTR_DATA.fg):49===r?(i.bg&=-67108864,i.bg|=16777215&h.DEFAULT_ATTR_DATA.bg):38===r||48===r||58===r?s+=this._extractColor(e,s,i):53===r?i.bg|=1073741824:55===r?i.bg&=-1073741825:59===r?(i.extended=i.extended.clone(),i.extended.underlineColor=-1,i.updateExtended()):100===r?(i.fg&=-67108864,i.fg|=16777215&h.DEFAULT_ATTR_DATA.fg,i.bg&=-67108864,i.bg|=16777215&h.DEFAULT_ATTR_DATA.bg):this._logService.debug("Unknown SGR attribute: %d.",r);return!0}deviceStatus(e){switch(e.params[0]){case 5:this._coreService.triggerDataEvent(`${n.C0.ESC}[0n`);break;case 6:const e=this._activeBuffer.y+1,t=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${n.C0.ESC}[${e};${t}R`)}return!0}deviceStatusPrivate(e){if(6===e.params[0]){const e=this._activeBuffer.y+1,t=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${n.C0.ESC}[?${e};${t}R`)}return!0}softReset(e){return this._coreService.isCursorHidden=!1,this._onRequestSyncScrollBar.fire(),this._activeBuffer.scrollTop=0,this._activeBuffer.scrollBottom=this._bufferService.rows-1,this._curAttrData=h.DEFAULT_ATTR_DATA.clone(),this._coreService.reset(),this._charsetService.reset(),this._activeBuffer.savedX=0,this._activeBuffer.savedY=this._activeBuffer.ybase,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,this._coreService.decPrivateModes.origin=!1,!0}setCursorStyle(e){const t=e.params[0]||1;switch(t){case 1:case 2:this._optionsService.options.cursorStyle="block";break;case 3:case 4:this._optionsService.options.cursorStyle="underline";break;case 5:case 6:this._optionsService.options.cursorStyle="bar"}const r=t%2==1;return this._optionsService.options.cursorBlink=r,!0}setScrollRegion(e){const t=e.params[0]||1;let r;return(e.length<2||(r=e.params[1])>this._bufferService.rows||0===r)&&(r=this._bufferService.rows),r>t&&(this._activeBuffer.scrollTop=t-1,this._activeBuffer.scrollBottom=r-1,this._setCursor(0,0)),!0}windowOptions(e){if(!y(e.params[0],this._optionsService.rawOptions.windowOptions))return!0;const t=e.length>1?e.params[1]:0;switch(e.params[0]){case 14:2!==t&&this._onRequestWindowsOptionsReport.fire(C.GET_WIN_SIZE_PIXELS);break;case 16:this._onRequestWindowsOptionsReport.fire(C.GET_CELL_SIZE_PIXELS);break;case 18:this._bufferService&&this._coreService.triggerDataEvent(`${n.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);break;case 22:0!==t&&2!==t||(this._windowTitleStack.push(this._windowTitle),this._windowTitleStack.length>10&&this._windowTitleStack.shift()),0!==t&&1!==t||(this._iconNameStack.push(this._iconName),this._iconNameStack.length>10&&this._iconNameStack.shift());break;case 23:0!==t&&2!==t||this._windowTitleStack.length&&this.setTitle(this._windowTitleStack.pop()),0!==t&&1!==t||this._iconNameStack.length&&this.setIconName(this._iconNameStack.pop())}return!0}saveCursor(e){return this._activeBuffer.savedX=this._activeBuffer.x,this._activeBuffer.savedY=this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,!0}restoreCursor(e){return this._activeBuffer.x=this._activeBuffer.savedX||0,this._activeBuffer.y=Math.max(this._activeBuffer.savedY-this._activeBuffer.ybase,0),this._curAttrData.fg=this._activeBuffer.savedCurAttrData.fg,this._curAttrData.bg=this._activeBuffer.savedCurAttrData.bg,this._charsetService.charset=this._savedCharset,this._activeBuffer.savedCharset&&(this._charsetService.charset=this._activeBuffer.savedCharset),this._restrictCursor(),!0}setTitle(e){return this._windowTitle=e,this._onTitleChange.fire(e),!0}setIconName(e){return this._iconName=e,!0}setOrReportIndexedColor(e){const t=[],r=e.split(";");for(;r.length>1;){const e=r.shift(),i=r.shift();if(/^\d+$/.exec(e)){const r=parseInt(e);if(0<=r&&r<256)if("?"===i)t.push({type:0,index:r});else{const e=(0,m.parseColor)(i);e&&t.push({type:1,index:r,color:e})}}}return t.length&&this._onColor.fire(t),!0}setHyperlink(e){const t=e.split(";");return!(t.length<2)&&(t[1]?this._createHyperlink(t[0],t[1]):!t[0]&&this._finishHyperlink())}_createHyperlink(e,t){this._getCurrentLinkId()&&this._finishHyperlink();const r=e.split(":");let i;const s=r.findIndex((e=>e.startsWith("id=")));return-1!==s&&(i=r[s].slice(3)||void 0),this._curAttrData.extended=this._curAttrData.extended.clone(),this._curAttrData.extended.urlId=this._oscLinkService.registerLink({id:i,uri:t}),this._curAttrData.updateExtended(),!0}_finishHyperlink(){return this._curAttrData.extended=this._curAttrData.extended.clone(),this._curAttrData.extended.urlId=0,this._curAttrData.updateExtended(),!0}_setOrReportSpecialColor(e,t){const r=e.split(";");for(let e=0;e<r.length&&!(t>=this._specialColors.length);++e,++t)if("?"===r[e])this._onColor.fire([{type:0,index:this._specialColors[t]}]);else{const i=(0,m.parseColor)(r[e]);i&&this._onColor.fire([{type:1,index:this._specialColors[t],color:i}])}return!0}setOrReportFgColor(e){return this._setOrReportSpecialColor(e,0)}setOrReportBgColor(e){return this._setOrReportSpecialColor(e,1)}setOrReportCursorColor(e){return this._setOrReportSpecialColor(e,2)}restoreIndexedColor(e){if(!e)return this._onColor.fire([{type:2}]),!0;const t=[],r=e.split(";");for(let e=0;e<r.length;++e)if(/^\d+$/.exec(r[e])){const i=parseInt(r[e]);0<=i&&i<256&&t.push({type:2,index:i})}return t.length&&this._onColor.fire(t),!0}restoreFgColor(e){return this._onColor.fire([{type:2,index:256}]),!0}restoreBgColor(e){return this._onColor.fire([{type:2,index:257}]),!0}restoreCursorColor(e){return this._onColor.fire([{type:2,index:258}]),!0}nextLine(){return this._activeBuffer.x=0,this.index(),!0}keypadApplicationMode(){return this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire(),!0}keypadNumericMode(){return this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire(),!0}selectDefaultCharset(){return this._charsetService.setgLevel(0),this._charsetService.setgCharset(0,o.DEFAULT_CHARSET),!0}selectCharset(e){return 2!==e.length?(this.selectDefaultCharset(),!0):("/"===e[0]||this._charsetService.setgCharset(b[e[0]],o.CHARSETS[e[1]]||o.DEFAULT_CHARSET),!0)}index(){return this._restrictCursor(),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._restrictCursor(),!0}tabSet(){return this._activeBuffer.tabs[this._activeBuffer.x]=!0,!0}reverseIndex(){if(this._restrictCursor(),this._activeBuffer.y===this._activeBuffer.scrollTop){const e=this._activeBuffer.scrollBottom-this._activeBuffer.scrollTop;this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase+this._activeBuffer.y,e,1),this._activeBuffer.lines.set(this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.getBlankLine(this._eraseAttrData())),this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom)}else this._activeBuffer.y--,this._restrictCursor();return!0}fullReset(){return this._parser.reset(),this._onRequestReset.fire(),!0}reset(){this._curAttrData=h.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=h.DEFAULT_ATTR_DATA.clone()}_eraseAttrData(){return this._eraseAttrDataInternal.bg&=-67108864,this._eraseAttrDataInternal.bg|=67108863&this._curAttrData.bg,this._eraseAttrDataInternal}setgLevel(e){return this._charsetService.setgLevel(e),!0}screenAlignmentPattern(){const e=new f.CellData;e.content=1<<22|"E".charCodeAt(0),e.fg=this._curAttrData.fg,e.bg=this._curAttrData.bg,this._setCursor(0,0);for(let t=0;t<this._bufferService.rows;++t){const r=this._activeBuffer.ybase+this._activeBuffer.y+t,i=this._activeBuffer.lines.get(r);i&&(i.fill(e),i.isWrapped=!1)}return this._dirtyRowTracker.markAllDirty(),this._setCursor(0,0),!0}requestStatusString(e,t){const r=this._bufferService.buffer,i=this._optionsService.rawOptions;return(e=>(this._coreService.triggerDataEvent(`${n.C0.ESC}${e}${n.C0.ESC}\\`),!0))('"q'===e?`P1$r${this._curAttrData.isProtected()?1:0}"q`:'"p'===e?'P1$r61;1"p':"r"===e?`P1$r${r.scrollTop+1};${r.scrollBottom+1}r`:"m"===e?"P1$r0m":" q"===e?`P1$r${{block:2,underline:4,bar:6}[i.cursorStyle]-(i.cursorBlink?1:0)} q`:"P0$r")}markRangeDirty(e,t){this._dirtyRowTracker.markRangeDirty(e,t)}}t.InputHandler=k;let E=class{constructor(e){this._bufferService=e,this.clearRange()}clearRange(){this.start=this._bufferService.buffer.y,this.end=this._bufferService.buffer.y}markDirty(e){e<this.start?this.start=e:e>this.end&&(this.end=e)}markRangeDirty(e,t){e>t&&(w=e,e=t,t=w),e<this.start&&(this.start=e),t>this.end&&(this.end=t)}markAllDirty(){this.markRangeDirty(0,this._bufferService.rows-1)}};E=i([s(0,v.IBufferService)],E)},844:(e,t)=>{function r(e){for(const t of e)t.dispose();e.length=0}Object.defineProperty(t,"__esModule",{value:!0}),t.getDisposeArrayDisposable=t.disposeArray=t.toDisposable=t.Disposable=void 0,t.Disposable=class{constructor(){this._disposables=[],this._isDisposed=!1}dispose(){this._isDisposed=!0;for(const e of this._disposables)e.dispose();this._disposables.length=0}register(e){return this._disposables.push(e),e}unregister(e){const t=this._disposables.indexOf(e);-1!==t&&this._disposables.splice(t,1)}},t.toDisposable=function(e){return{dispose:e}},t.disposeArray=r,t.getDisposeArrayDisposable=function(e){return{dispose:()=>r(e)}}},1505:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FourKeyMap=t.TwoKeyMap=void 0;class r{constructor(){this._data={}}set(e,t,r){this._data[e]||(this._data[e]={}),this._data[e][t]=r}get(e,t){return this._data[e]?this._data[e][t]:void 0}clear(){this._data={}}}t.TwoKeyMap=r,t.FourKeyMap=class{constructor(){this._data=new r}set(e,t,i,s,n){this._data.get(e,t)||this._data.set(e,t,new r),this._data.get(e,t).set(i,s,n)}get(e,t,r,i){var s;return null===(s=this._data.get(e,t))||void 0===s?void 0:s.get(r,i)}clear(){this._data.clear()}}},6114:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isChromeOS=t.isLinux=t.isWindows=t.isIphone=t.isIpad=t.isMac=t.getSafariVersion=t.isSafari=t.isLegacyEdge=t.isFirefox=t.isNode=void 0,t.isNode="undefined"==typeof navigator;const r=t.isNode?"node":navigator.userAgent,i=t.isNode?"node":navigator.platform;t.isFirefox=r.includes("Firefox"),t.isLegacyEdge=r.includes("Edge"),t.isSafari=/^((?!chrome|android).)*safari/i.test(r),t.getSafariVersion=function(){if(!t.isSafari)return 0;const e=r.match(/Version\/(\d+)/);return null===e||e.length<2?0:parseInt(e[1])},t.isMac=["Macintosh","MacIntel","MacPPC","Mac68K"].includes(i),t.isIpad="iPad"===i,t.isIphone="iPhone"===i,t.isWindows=["Windows","Win16","Win32","WinCE"].includes(i),t.isLinux=i.indexOf("Linux")>=0,t.isChromeOS=/\bCrOS\b/.test(r)},6106:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SortedList=void 0;let r=0;t.SortedList=class{constructor(e){this._getKey=e,this._array=[]}clear(){this._array.length=0}insert(e){0!==this._array.length?(r=this._search(this._getKey(e),0,this._array.length-1),this._array.splice(r,0,e)):this._array.push(e)}delete(e){if(0===this._array.length)return!1;const t=this._getKey(e);if(void 0===t)return!1;if(r=this._search(t,0,this._array.length-1),-1===r)return!1;if(this._getKey(this._array[r])!==t)return!1;do{if(this._array[r]===e)return this._array.splice(r,1),!0}while(++r<this._array.length&&this._getKey(this._array[r])===t);return!1}*getKeyIterator(e){if(0!==this._array.length&&(r=this._search(e,0,this._array.length-1),!(r<0||r>=this._array.length)&&this._getKey(this._array[r])===e))do{yield this._array[r]}while(++r<this._array.length&&this._getKey(this._array[r])===e)}forEachByKey(e,t){if(0!==this._array.length&&(r=this._search(e,0,this._array.length-1),!(r<0||r>=this._array.length)&&this._getKey(this._array[r])===e))do{t(this._array[r])}while(++r<this._array.length&&this._getKey(this._array[r])===e)}values(){return this._array.values()}_search(e,t,r){if(r<t)return t;let i=Math.floor((t+r)/2);const s=this._getKey(this._array[i]);if(s>e)return this._search(e,t,i-1);if(s<e)return this._search(e,i+1,r);for(;i>0&&this._getKey(this._array[i-1])===e;)i--;return i}}},7226:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DebouncedIdleTask=t.IdleTaskQueue=t.PriorityTaskQueue=void 0;const i=r(6114);class s{constructor(){this._tasks=[],this._i=0}enqueue(e){this._tasks.push(e),this._start()}flush(){for(;this._i<this._tasks.length;)this._tasks[this._i]()||this._i++;this.clear()}clear(){this._idleCallback&&(this._cancelCallback(this._idleCallback),this._idleCallback=void 0),this._i=0,this._tasks.length=0}_start(){this._idleCallback||(this._idleCallback=this._requestCallback(this._process.bind(this)))}_process(e){this._idleCallback=void 0;let t=0,r=0,i=e.timeRemaining(),s=0;for(;this._i<this._tasks.length;){if(t=Date.now(),this._tasks[this._i]()||this._i++,t=Math.max(1,Date.now()-t),r=Math.max(t,r),s=e.timeRemaining(),1.5*r>s)return i-t<-20&&console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(i-t))}ms`),void this._start();i=s}this.clear()}}class n extends s{_requestCallback(e){return setTimeout((()=>e(this._createDeadline(16))))}_cancelCallback(e){clearTimeout(e)}_createDeadline(e){const t=Date.now()+e;return{timeRemaining:()=>Math.max(0,t-Date.now())}}}t.PriorityTaskQueue=n,t.IdleTaskQueue=!i.isNode&&"requestIdleCallback"in window?class extends s{_requestCallback(e){return requestIdleCallback(e)}_cancelCallback(e){cancelIdleCallback(e)}}:n,t.DebouncedIdleTask=class{constructor(){this._queue=new t.IdleTaskQueue}set(e){this._queue.clear(),this._queue.enqueue(e)}flush(){this._queue.flush()}}},9282:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.updateWindowsModeWrappedState=void 0;const i=r(643);t.updateWindowsModeWrappedState=function(e){const t=e.buffer.lines.get(e.buffer.ybase+e.buffer.y-1),r=null==t?void 0:t.get(e.cols-1),s=e.buffer.lines.get(e.buffer.ybase+e.buffer.y);s&&r&&(s.isWrapped=r[i.CHAR_DATA_CODE_INDEX]!==i.NULL_CELL_CODE&&r[i.CHAR_DATA_CODE_INDEX]!==i.WHITESPACE_CELL_CODE)}},3734:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExtendedAttrs=t.AttributeData=void 0;class r{constructor(){this.fg=0,this.bg=0,this.extended=new i}static toColorRGB(e){return[e>>>16&255,e>>>8&255,255&e]}static fromColorRGB(e){return(255&e[0])<<16|(255&e[1])<<8|255&e[2]}clone(){const e=new r;return e.fg=this.fg,e.bg=this.bg,e.extended=this.extended.clone(),e}isInverse(){return 67108864&this.fg}isBold(){return 134217728&this.fg}isUnderline(){return this.hasExtendedAttrs()&&0!==this.extended.underlineStyle?1:268435456&this.fg}isBlink(){return 536870912&this.fg}isInvisible(){return 1073741824&this.fg}isItalic(){return 67108864&this.bg}isDim(){return 134217728&this.bg}isStrikethrough(){return 2147483648&this.fg}isProtected(){return 536870912&this.bg}isOverline(){return 1073741824&this.bg}getFgColorMode(){return 50331648&this.fg}getBgColorMode(){return 50331648&this.bg}isFgRGB(){return 50331648==(50331648&this.fg)}isBgRGB(){return 50331648==(50331648&this.bg)}isFgPalette(){return 16777216==(50331648&this.fg)||33554432==(50331648&this.fg)}isBgPalette(){return 16777216==(50331648&this.bg)||33554432==(50331648&this.bg)}isFgDefault(){return 0==(50331648&this.fg)}isBgDefault(){return 0==(50331648&this.bg)}isAttributeDefault(){return 0===this.fg&&0===this.bg}getFgColor(){switch(50331648&this.fg){case 16777216:case 33554432:return 255&this.fg;case 50331648:return 16777215&this.fg;default:return-1}}getBgColor(){switch(50331648&this.bg){case 16777216:case 33554432:return 255&this.bg;case 50331648:return 16777215&this.bg;default:return-1}}hasExtendedAttrs(){return 268435456&this.bg}updateExtended(){this.extended.isEmpty()?this.bg&=-268435457:this.bg|=268435456}getUnderlineColor(){if(268435456&this.bg&&~this.extended.underlineColor)switch(50331648&this.extended.underlineColor){case 16777216:case 33554432:return 255&this.extended.underlineColor;case 50331648:return 16777215&this.extended.underlineColor;default:return this.getFgColor()}return this.getFgColor()}getUnderlineColorMode(){return 268435456&this.bg&&~this.extended.underlineColor?50331648&this.extended.underlineColor:this.getFgColorMode()}isUnderlineColorRGB(){return 268435456&this.bg&&~this.extended.underlineColor?50331648==(50331648&this.extended.underlineColor):this.isFgRGB()}isUnderlineColorPalette(){return 268435456&this.bg&&~this.extended.underlineColor?16777216==(50331648&this.extended.underlineColor)||33554432==(50331648&this.extended.underlineColor):this.isFgPalette()}isUnderlineColorDefault(){return 268435456&this.bg&&~this.extended.underlineColor?0==(50331648&this.extended.underlineColor):this.isFgDefault()}getUnderlineStyle(){return 268435456&this.fg?268435456&this.bg?this.extended.underlineStyle:1:0}}t.AttributeData=r;class i{constructor(e=0,t=0){this._ext=0,this._urlId=0,this._ext=e,this._urlId=t}get ext(){return this._urlId?-469762049&this._ext|this.underlineStyle<<26:this._ext}set ext(e){this._ext=e}get underlineStyle(){return this._urlId?5:(469762048&this._ext)>>26}set underlineStyle(e){this._ext&=-469762049,this._ext|=e<<26&469762048}get underlineColor(){return 67108863&this._ext}set underlineColor(e){this._ext&=-67108864,this._ext|=67108863&e}get urlId(){return this._urlId}set urlId(e){this._urlId=e}clone(){return new i(this._ext,this._urlId)}isEmpty(){return 0===this.underlineStyle&&0===this._urlId}}t.ExtendedAttrs=i},9092:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Buffer=t.MAX_BUFFER_SIZE=void 0;const i=r(6349),s=r(8437),n=r(511),o=r(643),a=r(4634),l=r(4863),c=r(7116),h=r(3734),u=r(7226);t.MAX_BUFFER_SIZE=4294967295,t.Buffer=class{constructor(e,t,r){this._hasScrollback=e,this._optionsService=t,this._bufferService=r,this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.tabs={},this.savedY=0,this.savedX=0,this.savedCurAttrData=s.DEFAULT_ATTR_DATA.clone(),this.savedCharset=c.DEFAULT_CHARSET,this.markers=[],this._nullCell=n.CellData.fromCharData([0,o.NULL_CELL_CHAR,o.NULL_CELL_WIDTH,o.NULL_CELL_CODE]),this._whitespaceCell=n.CellData.fromCharData([0,o.WHITESPACE_CELL_CHAR,o.WHITESPACE_CELL_WIDTH,o.WHITESPACE_CELL_CODE]),this._isClearing=!1,this._memoryCleanupQueue=new u.IdleTaskQueue,this._memoryCleanupPosition=0,this._cols=this._bufferService.cols,this._rows=this._bufferService.rows,this.lines=new i.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}getNullCell(e){return e?(this._nullCell.fg=e.fg,this._nullCell.bg=e.bg,this._nullCell.extended=e.extended):(this._nullCell.fg=0,this._nullCell.bg=0,this._nullCell.extended=new h.ExtendedAttrs),this._nullCell}getWhitespaceCell(e){return e?(this._whitespaceCell.fg=e.fg,this._whitespaceCell.bg=e.bg,this._whitespaceCell.extended=e.extended):(this._whitespaceCell.fg=0,this._whitespaceCell.bg=0,this._whitespaceCell.extended=new h.ExtendedAttrs),this._whitespaceCell}getBlankLine(e,t){return new s.BufferLine(this._bufferService.cols,this.getNullCell(e),t)}get hasScrollback(){return this._hasScrollback&&this.lines.maxLength>this._rows}get isCursorInViewport(){const e=this.ybase+this.y-this.ydisp;return e>=0&&e<this._rows}_getCorrectBufferLength(e){if(!this._hasScrollback)return e;const r=e+this._optionsService.rawOptions.scrollback;return r>t.MAX_BUFFER_SIZE?t.MAX_BUFFER_SIZE:r}fillViewportRows(e){if(0===this.lines.length){void 0===e&&(e=s.DEFAULT_ATTR_DATA);let t=this._rows;for(;t--;)this.lines.push(this.getBlankLine(e))}}clear(){this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.lines=new i.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}resize(e,t){const r=this.getNullCell(s.DEFAULT_ATTR_DATA);let i=0;const n=this._getCorrectBufferLength(t);if(n>this.lines.maxLength&&(this.lines.maxLength=n),this.lines.length>0){if(this._cols<e)for(let t=0;t<this.lines.length;t++)i+=+this.lines.get(t).resize(e,r);let o=0;if(this._rows<t)for(let i=this._rows;i<t;i++)this.lines.length<t+this.ybase&&(this._optionsService.rawOptions.windowsMode||void 0!==this._optionsService.rawOptions.windowsPty.backend||void 0!==this._optionsService.rawOptions.windowsPty.buildNumber?this.lines.push(new s.BufferLine(e,r)):this.ybase>0&&this.lines.length<=this.ybase+this.y+o+1?(this.ybase--,o++,this.ydisp>0&&this.ydisp--):this.lines.push(new s.BufferLine(e,r)));else for(let e=this._rows;e>t;e--)this.lines.length>t+this.ybase&&(this.lines.length>this.ybase+this.y+1?this.lines.pop():(this.ybase++,this.ydisp++));if(n<this.lines.maxLength){const e=this.lines.length-n;e>0&&(this.lines.trimStart(e),this.ybase=Math.max(this.ybase-e,0),this.ydisp=Math.max(this.ydisp-e,0),this.savedY=Math.max(this.savedY-e,0)),this.lines.maxLength=n}this.x=Math.min(this.x,e-1),this.y=Math.min(this.y,t-1),o&&(this.y+=o),this.savedX=Math.min(this.savedX,e-1),this.scrollTop=0}if(this.scrollBottom=t-1,this._isReflowEnabled&&(this._reflow(e,t),this._cols>e))for(let t=0;t<this.lines.length;t++)i+=+this.lines.get(t).resize(e,r);this._cols=e,this._rows=t,this._memoryCleanupQueue.clear(),i>.1*this.lines.length&&(this._memoryCleanupPosition=0,this._memoryCleanupQueue.enqueue((()=>this._batchedMemoryCleanup())))}_batchedMemoryCleanup(){let e=!0;this._memoryCleanupPosition>=this.lines.length&&(this._memoryCleanupPosition=0,e=!1);let t=0;for(;this._memoryCleanupPosition<this.lines.length;)if(t+=this.lines.get(this._memoryCleanupPosition++).cleanupMemory(),t>100)return!0;return e}get _isReflowEnabled(){const e=this._optionsService.rawOptions.windowsPty;return e&&e.buildNumber?this._hasScrollback&&"conpty"===e.backend&&e.buildNumber>=21376:this._hasScrollback&&!this._optionsService.rawOptions.windowsMode}_reflow(e,t){this._cols!==e&&(e>this._cols?this._reflowLarger(e,t):this._reflowSmaller(e,t))}_reflowLarger(e,t){const r=(0,a.reflowLargerGetLinesToRemove)(this.lines,this._cols,e,this.ybase+this.y,this.getNullCell(s.DEFAULT_ATTR_DATA));if(r.length>0){const i=(0,a.reflowLargerCreateNewLayout)(this.lines,r);(0,a.reflowLargerApplyNewLayout)(this.lines,i.layout),this._reflowLargerAdjustViewport(e,t,i.countRemoved)}}_reflowLargerAdjustViewport(e,t,r){const i=this.getNullCell(s.DEFAULT_ATTR_DATA);let n=r;for(;n-- >0;)0===this.ybase?(this.y>0&&this.y--,this.lines.length<t&&this.lines.push(new s.BufferLine(e,i))):(this.ydisp===this.ybase&&this.ydisp--,this.ybase--);this.savedY=Math.max(this.savedY-r,0)}_reflowSmaller(e,t){const r=this.getNullCell(s.DEFAULT_ATTR_DATA),i=[];let n=0;for(let o=this.lines.length-1;o>=0;o--){let l=this.lines.get(o);if(!l||!l.isWrapped&&l.getTrimmedLength()<=e)continue;const c=[l];for(;l.isWrapped&&o>0;)l=this.lines.get(--o),c.unshift(l);const h=this.ybase+this.y;if(h>=o&&h<o+c.length)continue;const u=c[c.length-1].getTrimmedLength(),d=(0,a.reflowSmallerGetNewLineLengths)(c,this._cols,e),f=d.length-c.length;let p;p=0===this.ybase&&this.y!==this.lines.length-1?Math.max(0,this.y-this.lines.maxLength+f):Math.max(0,this.lines.length-this.lines.maxLength+f);const v=[];for(let e=0;e<f;e++){const e=this.getBlankLine(s.DEFAULT_ATTR_DATA,!0);v.push(e)}v.length>0&&(i.push({start:o+c.length+n,newLines:v}),n+=v.length),c.push(...v);let g=d.length-1,_=d[g];0===_&&(g--,_=d[g]);let m=c.length-f-1,b=u;for(;m>=0;){const e=Math.min(b,_);if(void 0===c[g])break;if(c[g].copyCellsFrom(c[m],b-e,_-e,e,!0),_-=e,0===_&&(g--,_=d[g]),b-=e,0===b){m--;const e=Math.max(m,0);b=(0,a.getWrappedLineTrimmedLength)(c,e,this._cols)}}for(let t=0;t<c.length;t++)d[t]<e&&c[t].setCell(d[t],r);let S=f-p;for(;S-- >0;)0===this.ybase?this.y<t-1?(this.y++,this.lines.pop()):(this.ybase++,this.ydisp++):this.ybase<Math.min(this.lines.maxLength,this.lines.length+n)-t&&(this.ybase===this.ydisp&&this.ydisp++,this.ybase++);this.savedY=Math.min(this.savedY+f,this.ybase+t-1)}if(i.length>0){const e=[],t=[];for(let e=0;e<this.lines.length;e++)t.push(this.lines.get(e));const r=this.lines.length;let s=r-1,o=0,a=i[o];this.lines.length=Math.min(this.lines.maxLength,this.lines.length+n);let l=0;for(let c=Math.min(this.lines.maxLength-1,r+n-1);c>=0;c--)if(a&&a.start>s+l){for(let e=a.newLines.length-1;e>=0;e--)this.lines.set(c--,a.newLines[e]);c++,e.push({index:s+1,amount:a.newLines.length}),l+=a.newLines.length,a=i[++o]}else this.lines.set(c,t[s--]);let c=0;for(let t=e.length-1;t>=0;t--)e[t].index+=c,this.lines.onInsertEmitter.fire(e[t]),c+=e[t].amount;const h=Math.max(0,r+n-this.lines.maxLength);h>0&&this.lines.onTrimEmitter.fire(h)}}translateBufferLineToString(e,t,r=0,i){const s=this.lines.get(e);return s?s.translateToString(t,r,i):""}getWrappedRangeForLine(e){let t=e,r=e;for(;t>0&&this.lines.get(t).isWrapped;)t--;for(;r+1<this.lines.length&&this.lines.get(r+1).isWrapped;)r++;return{first:t,last:r}}setupTabStops(e){for(null!=e?this.tabs[e]||(e=this.prevStop(e)):(this.tabs={},e=0);e<this._cols;e+=this._optionsService.rawOptions.tabStopWidth)this.tabs[e]=!0}prevStop(e){for(null==e&&(e=this.x);!this.tabs[--e]&&e>0;);return e>=this._cols?this._cols-1:e<0?0:e}nextStop(e){for(null==e&&(e=this.x);!this.tabs[++e]&&e<this._cols;);return e>=this._cols?this._cols-1:e<0?0:e}clearMarkers(e){this._isClearing=!0;for(let t=0;t<this.markers.length;t++)this.markers[t].line===e&&(this.markers[t].dispose(),this.markers.splice(t--,1));this._isClearing=!1}clearAllMarkers(){this._isClearing=!0;for(let e=0;e<this.markers.length;e++)this.markers[e].dispose(),this.markers.splice(e--,1);this._isClearing=!1}addMarker(e){const t=new l.Marker(e);return this.markers.push(t),t.register(this.lines.onTrim((e=>{t.line-=e,t.line<0&&t.dispose()}))),t.register(this.lines.onInsert((e=>{t.line>=e.index&&(t.line+=e.amount)}))),t.register(this.lines.onDelete((e=>{t.line>=e.index&&t.line<e.index+e.amount&&t.dispose(),t.line>e.index&&(t.line-=e.amount)}))),t.register(t.onDispose((()=>this._removeMarker(t)))),t}_removeMarker(e){this._isClearing||this.markers.splice(this.markers.indexOf(e),1)}}},8437:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferLine=t.DEFAULT_ATTR_DATA=void 0;const i=r(482),s=r(643),n=r(511),o=r(3734);t.DEFAULT_ATTR_DATA=Object.freeze(new o.AttributeData);let a=0;class l{constructor(e,t,r=!1){this.isWrapped=r,this._combined={},this._extendedAttrs={},this._data=new Uint32Array(3*e);const i=t||n.CellData.fromCharData([0,s.NULL_CELL_CHAR,s.NULL_CELL_WIDTH,s.NULL_CELL_CODE]);for(let t=0;t<e;++t)this.setCell(t,i);this.length=e}get(e){const t=this._data[3*e+0],r=2097151&t;return[this._data[3*e+1],2097152&t?this._combined[e]:r?(0,i.stringFromCodePoint)(r):"",t>>22,2097152&t?this._combined[e].charCodeAt(this._combined[e].length-1):r]}set(e,t){this._data[3*e+1]=t[s.CHAR_DATA_ATTR_INDEX],t[s.CHAR_DATA_CHAR_INDEX].length>1?(this._combined[e]=t[1],this._data[3*e+0]=2097152|e|t[s.CHAR_DATA_WIDTH_INDEX]<<22):this._data[3*e+0]=t[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|t[s.CHAR_DATA_WIDTH_INDEX]<<22}getWidth(e){return this._data[3*e+0]>>22}hasWidth(e){return 12582912&this._data[3*e+0]}getFg(e){return this._data[3*e+1]}getBg(e){return this._data[3*e+2]}hasContent(e){return 4194303&this._data[3*e+0]}getCodePoint(e){const t=this._data[3*e+0];return 2097152&t?this._combined[e].charCodeAt(this._combined[e].length-1):2097151&t}isCombined(e){return 2097152&this._data[3*e+0]}getString(e){const t=this._data[3*e+0];return 2097152&t?this._combined[e]:2097151&t?(0,i.stringFromCodePoint)(2097151&t):""}isProtected(e){return 536870912&this._data[3*e+2]}loadCell(e,t){return a=3*e,t.content=this._data[a+0],t.fg=this._data[a+1],t.bg=this._data[a+2],2097152&t.content&&(t.combinedData=this._combined[e]),268435456&t.bg&&(t.extended=this._extendedAttrs[e]),t}setCell(e,t){2097152&t.content&&(this._combined[e]=t.combinedData),268435456&t.bg&&(this._extendedAttrs[e]=t.extended),this._data[3*e+0]=t.content,this._data[3*e+1]=t.fg,this._data[3*e+2]=t.bg}setCellFromCodePoint(e,t,r,i,s,n){268435456&s&&(this._extendedAttrs[e]=n),this._data[3*e+0]=t|r<<22,this._data[3*e+1]=i,this._data[3*e+2]=s}addCodepointToCell(e,t){let r=this._data[3*e+0];2097152&r?this._combined[e]+=(0,i.stringFromCodePoint)(t):(2097151&r?(this._combined[e]=(0,i.stringFromCodePoint)(2097151&r)+(0,i.stringFromCodePoint)(t),r&=-2097152,r|=2097152):r=t|1<<22,this._data[3*e+0]=r)}insertCells(e,t,r,i){if((e%=this.length)&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length-e){const i=new n.CellData;for(let r=this.length-e-t-1;r>=0;--r)this.setCell(e+t+r,this.loadCell(e+r,i));for(let i=0;i<t;++i)this.setCell(e+i,r)}else for(let t=e;t<this.length;++t)this.setCell(t,r);2===this.getWidth(this.length-1)&&this.setCellFromCodePoint(this.length-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs)}deleteCells(e,t,r,i){if(e%=this.length,t<this.length-e){const i=new n.CellData;for(let r=0;r<this.length-e-t;++r)this.setCell(e+r,this.loadCell(e+t+r,i));for(let e=this.length-t;e<this.length;++e)this.setCell(e,r)}else for(let t=e;t<this.length;++t)this.setCell(t,r);e&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),0!==this.getWidth(e)||this.hasContent(e)||this.setCellFromCodePoint(e,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs)}replaceCells(e,t,r,i,s=!1){if(s)for(e&&2===this.getWidth(e-1)&&!this.isProtected(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length&&2===this.getWidth(t-1)&&!this.isProtected(t)&&this.setCellFromCodePoint(t,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs);e<t&&e<this.length;)this.isProtected(e)||this.setCell(e,r),e++;else for(e&&2===this.getWidth(e-1)&&this.setCellFromCodePoint(e-1,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs),t<this.length&&2===this.getWidth(t-1)&&this.setCellFromCodePoint(t,0,1,(null==i?void 0:i.fg)||0,(null==i?void 0:i.bg)||0,(null==i?void 0:i.extended)||new o.ExtendedAttrs);e<t&&e<this.length;)this.setCell(e++,r)}resize(e,t){if(e===this.length)return 4*this._data.length*2<this._data.buffer.byteLength;const r=3*e;if(e>this.length){if(this._data.buffer.byteLength>=4*r)this._data=new Uint32Array(this._data.buffer,0,r);else{const e=new Uint32Array(r);e.set(this._data),this._data=e}for(let r=this.length;r<e;++r)this.setCell(r,t)}else{this._data=this._data.subarray(0,r);const t=Object.keys(this._combined);for(let r=0;r<t.length;r++){const i=parseInt(t[r],10);i>=e&&delete this._combined[i]}const i=Object.keys(this._extendedAttrs);for(let t=0;t<i.length;t++){const r=parseInt(i[t],10);r>=e&&delete this._extendedAttrs[r]}}return this.length=e,4*r*2<this._data.buffer.byteLength}cleanupMemory(){if(4*this._data.length*2<this._data.buffer.byteLength){const e=new Uint32Array(this._data.length);return e.set(this._data),this._data=e,1}return 0}fill(e,t=!1){if(t)for(let t=0;t<this.length;++t)this.isProtected(t)||this.setCell(t,e);else{this._combined={},this._extendedAttrs={};for(let t=0;t<this.length;++t)this.setCell(t,e)}}copyFrom(e){this.length!==e.length?this._data=new Uint32Array(e._data):this._data.set(e._data),this.length=e.length,this._combined={};for(const t in e._combined)this._combined[t]=e._combined[t];this._extendedAttrs={};for(const t in e._extendedAttrs)this._extendedAttrs[t]=e._extendedAttrs[t];this.isWrapped=e.isWrapped}clone(){const e=new l(0);e._data=new Uint32Array(this._data),e.length=this.length;for(const t in this._combined)e._combined[t]=this._combined[t];for(const t in this._extendedAttrs)e._extendedAttrs[t]=this._extendedAttrs[t];return e.isWrapped=this.isWrapped,e}getTrimmedLength(){for(let e=this.length-1;e>=0;--e)if(4194303&this._data[3*e+0])return e+(this._data[3*e+0]>>22);return 0}copyCellsFrom(e,t,r,i,s){const n=e._data;if(s)for(let s=i-1;s>=0;s--){for(let e=0;e<3;e++)this._data[3*(r+s)+e]=n[3*(t+s)+e];268435456&n[3*(t+s)+2]&&(this._extendedAttrs[r+s]=e._extendedAttrs[t+s])}else for(let s=0;s<i;s++){for(let e=0;e<3;e++)this._data[3*(r+s)+e]=n[3*(t+s)+e];268435456&n[3*(t+s)+2]&&(this._extendedAttrs[r+s]=e._extendedAttrs[t+s])}const o=Object.keys(e._combined);for(let i=0;i<o.length;i++){const s=parseInt(o[i],10);s>=t&&(this._combined[s-t+r]=e._combined[s])}}translateToString(e=!1,t=0,r=this.length){e&&(r=Math.min(r,this.getTrimmedLength()));let n="";for(;t<r;){const e=this._data[3*t+0],r=2097151&e;n+=2097152&e?this._combined[t]:r?(0,i.stringFromCodePoint)(r):s.WHITESPACE_CELL_CHAR,t+=e>>22||1}return n}}t.BufferLine=l},4841:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getRangeLength=void 0,t.getRangeLength=function(e,t){if(e.start.y>e.end.y)throw new Error(`Buffer range end (${e.end.x}, ${e.end.y}) cannot be before start (${e.start.x}, ${e.start.y})`);return t*(e.end.y-e.start.y)+(e.end.x-e.start.x+1)}},4634:(e,t)=>{function r(e,t,r){if(t===e.length-1)return e[t].getTrimmedLength();const i=!e[t].hasContent(r-1)&&1===e[t].getWidth(r-1),s=2===e[t+1].getWidth(0);return i&&s?r-1:r}Object.defineProperty(t,"__esModule",{value:!0}),t.getWrappedLineTrimmedLength=t.reflowSmallerGetNewLineLengths=t.reflowLargerApplyNewLayout=t.reflowLargerCreateNewLayout=t.reflowLargerGetLinesToRemove=void 0,t.reflowLargerGetLinesToRemove=function(e,t,i,s,n){const o=[];for(let a=0;a<e.length-1;a++){let l=a,c=e.get(++l);if(!c.isWrapped)continue;const h=[e.get(a)];for(;l<e.length&&c.isWrapped;)h.push(c),c=e.get(++l);if(s>=a&&s<l){a+=h.length-1;continue}let u=0,d=r(h,u,t),f=1,p=0;for(;f<h.length;){const e=r(h,f,t),s=e-p,o=i-d,a=Math.min(s,o);h[u].copyCellsFrom(h[f],p,d,a,!1),d+=a,d===i&&(u++,d=0),p+=a,p===e&&(f++,p=0),0===d&&0!==u&&2===h[u-1].getWidth(i-1)&&(h[u].copyCellsFrom(h[u-1],i-1,d++,1,!1),h[u-1].setCell(i-1,n))}h[u].replaceCells(d,i,n);let v=0;for(let e=h.length-1;e>0&&(e>u||0===h[e].getTrimmedLength());e--)v++;v>0&&(o.push(a+h.length-v),o.push(v)),a+=h.length-1}return o},t.reflowLargerCreateNewLayout=function(e,t){const r=[];let i=0,s=t[i],n=0;for(let o=0;o<e.length;o++)if(s===o){const r=t[++i];e.onDeleteEmitter.fire({index:o-n,amount:r}),o+=r-1,n+=r,s=t[++i]}else r.push(o);return{layout:r,countRemoved:n}},t.reflowLargerApplyNewLayout=function(e,t){const r=[];for(let i=0;i<t.length;i++)r.push(e.get(t[i]));for(let t=0;t<r.length;t++)e.set(t,r[t]);e.length=t.length},t.reflowSmallerGetNewLineLengths=function(e,t,i){const s=[],n=e.map(((i,s)=>r(e,s,t))).reduce(((e,t)=>e+t));let o=0,a=0,l=0;for(;l<n;){if(n-l<i){s.push(n-l);break}o+=i;const c=r(e,a,t);o>c&&(o-=c,a++);const h=2===e[a].getWidth(o-1);h&&o--;const u=h?i-1:i;s.push(u),l+=u}return s},t.getWrappedLineTrimmedLength=r},5295:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferSet=void 0;const i=r(9092),s=r(8460),n=r(844);class o extends n.Disposable{constructor(e,t){super(),this._optionsService=e,this._bufferService=t,this._onBufferActivate=this.register(new s.EventEmitter),this.onBufferActivate=this._onBufferActivate.event,this.reset(),this.register(this._optionsService.onSpecificOptionChange("scrollback",(()=>this.resize(this._bufferService.cols,this._bufferService.rows)))),this.register(this._optionsService.onSpecificOptionChange("tabStopWidth",(()=>this.setupTabStops())))}reset(){this._normal=new i.Buffer(!0,this._optionsService,this._bufferService),this._normal.fillViewportRows(),this._alt=new i.Buffer(!1,this._optionsService,this._bufferService),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}),this.setupTabStops()}get alt(){return this._alt}get active(){return this._activeBuffer}get normal(){return this._normal}activateNormalBuffer(){this._activeBuffer!==this._normal&&(this._normal.x=this._alt.x,this._normal.y=this._alt.y,this._alt.clearAllMarkers(),this._alt.clear(),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}))}activateAltBuffer(e){this._activeBuffer!==this._alt&&(this._alt.fillViewportRows(e),this._alt.x=this._normal.x,this._alt.y=this._normal.y,this._activeBuffer=this._alt,this._onBufferActivate.fire({activeBuffer:this._alt,inactiveBuffer:this._normal}))}resize(e,t){this._normal.resize(e,t),this._alt.resize(e,t),this.setupTabStops(e)}setupTabStops(e){this._normal.setupTabStops(e),this._alt.setupTabStops(e)}}t.BufferSet=o},511:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CellData=void 0;const i=r(482),s=r(643),n=r(3734);class o extends n.AttributeData{constructor(){super(...arguments),this.content=0,this.fg=0,this.bg=0,this.extended=new n.ExtendedAttrs,this.combinedData=""}static fromCharData(e){const t=new o;return t.setFromCharData(e),t}isCombined(){return 2097152&this.content}getWidth(){return this.content>>22}getChars(){return 2097152&this.content?this.combinedData:2097151&this.content?(0,i.stringFromCodePoint)(2097151&this.content):""}getCode(){return this.isCombined()?this.combinedData.charCodeAt(this.combinedData.length-1):2097151&this.content}setFromCharData(e){this.fg=e[s.CHAR_DATA_ATTR_INDEX],this.bg=0;let t=!1;if(e[s.CHAR_DATA_CHAR_INDEX].length>2)t=!0;else if(2===e[s.CHAR_DATA_CHAR_INDEX].length){const r=e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0);if(55296<=r&&r<=56319){const i=e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(1);56320<=i&&i<=57343?this.content=1024*(r-55296)+i-56320+65536|e[s.CHAR_DATA_WIDTH_INDEX]<<22:t=!0}else t=!0}else this.content=e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|e[s.CHAR_DATA_WIDTH_INDEX]<<22;t&&(this.combinedData=e[s.CHAR_DATA_CHAR_INDEX],this.content=2097152|e[s.CHAR_DATA_WIDTH_INDEX]<<22)}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}t.CellData=o},643:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WHITESPACE_CELL_CODE=t.WHITESPACE_CELL_WIDTH=t.WHITESPACE_CELL_CHAR=t.NULL_CELL_CODE=t.NULL_CELL_WIDTH=t.NULL_CELL_CHAR=t.CHAR_DATA_CODE_INDEX=t.CHAR_DATA_WIDTH_INDEX=t.CHAR_DATA_CHAR_INDEX=t.CHAR_DATA_ATTR_INDEX=t.DEFAULT_EXT=t.DEFAULT_ATTR=t.DEFAULT_COLOR=void 0,t.DEFAULT_COLOR=0,t.DEFAULT_ATTR=256|t.DEFAULT_COLOR<<9,t.DEFAULT_EXT=0,t.CHAR_DATA_ATTR_INDEX=0,t.CHAR_DATA_CHAR_INDEX=1,t.CHAR_DATA_WIDTH_INDEX=2,t.CHAR_DATA_CODE_INDEX=3,t.NULL_CELL_CHAR="",t.NULL_CELL_WIDTH=1,t.NULL_CELL_CODE=0,t.WHITESPACE_CELL_CHAR=" ",t.WHITESPACE_CELL_WIDTH=1,t.WHITESPACE_CELL_CODE=32},4863:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Marker=void 0;const i=r(8460),s=r(844);class n{constructor(e){this.line=e,this.isDisposed=!1,this._disposables=[],this._id=n._nextId++,this._onDispose=this.register(new i.EventEmitter),this.onDispose=this._onDispose.event}get id(){return this._id}dispose(){this.isDisposed||(this.isDisposed=!0,this.line=-1,this._onDispose.fire(),(0,s.disposeArray)(this._disposables),this._disposables.length=0)}register(e){return this._disposables.push(e),e}}t.Marker=n,n._nextId=1},7116:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_CHARSET=t.CHARSETS=void 0,t.CHARSETS={},t.DEFAULT_CHARSET=t.CHARSETS.B,t.CHARSETS[0]={"`":"◆",a:"▒",b:"␉",c:"␌",d:"␍",e:"␊",f:"°",g:"±",h:"␤",i:"␋",j:"┘",k:"┐",l:"┌",m:"└",n:"┼",o:"⎺",p:"⎻",q:"─",r:"⎼",s:"⎽",t:"├",u:"┤",v:"┴",w:"┬",x:"│",y:"≤",z:"≥","{":"π","|":"≠","}":"£","~":"·"},t.CHARSETS.A={"#":"£"},t.CHARSETS.B=void 0,t.CHARSETS[4]={"#":"£","@":"¾","[":"ij","\\":"½","]":"|","{":"¨","|":"f","}":"¼","~":"´"},t.CHARSETS.C=t.CHARSETS[5]={"[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},t.CHARSETS.R={"#":"£","@":"à","[":"°","\\":"ç","]":"§","{":"é","|":"ù","}":"è","~":"¨"},t.CHARSETS.Q={"@":"à","[":"â","\\":"ç","]":"ê","^":"î","`":"ô","{":"é","|":"ù","}":"è","~":"û"},t.CHARSETS.K={"@":"§","[":"Ä","\\":"Ö","]":"Ü","{":"ä","|":"ö","}":"ü","~":"ß"},t.CHARSETS.Y={"#":"£","@":"§","[":"°","\\":"ç","]":"é","`":"ù","{":"à","|":"ò","}":"è","~":"ì"},t.CHARSETS.E=t.CHARSETS[6]={"@":"Ä","[":"Æ","\\":"Ø","]":"Å","^":"Ü","`":"ä","{":"æ","|":"ø","}":"å","~":"ü"},t.CHARSETS.Z={"#":"£","@":"§","[":"¡","\\":"Ñ","]":"¿","{":"°","|":"ñ","}":"ç"},t.CHARSETS.H=t.CHARSETS[7]={"@":"É","[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},t.CHARSETS["="]={"#":"ù","@":"à","[":"é","\\":"ç","]":"ê","^":"î",_:"è","`":"ô","{":"ä","|":"ö","}":"ü","~":"û"}},2584:(e,t)=>{var r,i;Object.defineProperty(t,"__esModule",{value:!0}),t.C1_ESCAPED=t.C1=t.C0=void 0,function(e){e.NUL="\0",e.SOH="",e.STX="",e.ETX="",e.EOT="",e.ENQ="",e.ACK="",e.BEL="",e.BS="\b",e.HT="\t",e.LF="\n",e.VT="\v",e.FF="\f",e.CR="\r",e.SO="",e.SI="",e.DLE="",e.DC1="",e.DC2="",e.DC3="",e.DC4="",e.NAK="",e.SYN="",e.ETB="",e.CAN="",e.EM="",e.SUB="",e.ESC="",e.FS="",e.GS="",e.RS="",e.US="",e.SP=" ",e.DEL=""}(r=t.C0||(t.C0={})),(i=t.C1||(t.C1={})).PAD="",i.HOP="",i.BPH="",i.NBH="",i.IND="",i.NEL="",i.SSA="",i.ESA="",i.HTS="",i.HTJ="",i.VTS="",i.PLD="",i.PLU="",i.RI="",i.SS2="",i.SS3="",i.DCS="",i.PU1="",i.PU2="",i.STS="",i.CCH="",i.MW="",i.SPA="",i.EPA="",i.SOS="",i.SGCI="",i.SCI="",i.CSI="",i.ST="",i.OSC="",i.PM="",i.APC="",(t.C1_ESCAPED||(t.C1_ESCAPED={})).ST=`${r.ESC}\\`},7399:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.evaluateKeyboardEvent=void 0;const i=r(2584),s={48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"']};t.evaluateKeyboardEvent=function(e,t,r,n){const o={type:0,cancel:!1,key:void 0},a=(e.shiftKey?1:0)|(e.altKey?2:0)|(e.ctrlKey?4:0)|(e.metaKey?8:0);switch(e.keyCode){case 0:"UIKeyInputUpArrow"===e.key?o.key=t?i.C0.ESC+"OA":i.C0.ESC+"[A":"UIKeyInputLeftArrow"===e.key?o.key=t?i.C0.ESC+"OD":i.C0.ESC+"[D":"UIKeyInputRightArrow"===e.key?o.key=t?i.C0.ESC+"OC":i.C0.ESC+"[C":"UIKeyInputDownArrow"===e.key&&(o.key=t?i.C0.ESC+"OB":i.C0.ESC+"[B");break;case 8:if(e.altKey){o.key=i.C0.ESC+i.C0.DEL;break}o.key=i.C0.DEL;break;case 9:if(e.shiftKey){o.key=i.C0.ESC+"[Z";break}o.key=i.C0.HT,o.cancel=!0;break;case 13:o.key=e.altKey?i.C0.ESC+i.C0.CR:i.C0.CR,o.cancel=!0;break;case 27:o.key=i.C0.ESC,e.altKey&&(o.key=i.C0.ESC+i.C0.ESC),o.cancel=!0;break;case 37:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"D",o.key===i.C0.ESC+"[1;3D"&&(o.key=i.C0.ESC+(r?"b":"[1;5D"))):o.key=t?i.C0.ESC+"OD":i.C0.ESC+"[D";break;case 39:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"C",o.key===i.C0.ESC+"[1;3C"&&(o.key=i.C0.ESC+(r?"f":"[1;5C"))):o.key=t?i.C0.ESC+"OC":i.C0.ESC+"[C";break;case 38:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"A",r||o.key!==i.C0.ESC+"[1;3A"||(o.key=i.C0.ESC+"[1;5A")):o.key=t?i.C0.ESC+"OA":i.C0.ESC+"[A";break;case 40:if(e.metaKey)break;a?(o.key=i.C0.ESC+"[1;"+(a+1)+"B",r||o.key!==i.C0.ESC+"[1;3B"||(o.key=i.C0.ESC+"[1;5B")):o.key=t?i.C0.ESC+"OB":i.C0.ESC+"[B";break;case 45:e.shiftKey||e.ctrlKey||(o.key=i.C0.ESC+"[2~");break;case 46:o.key=a?i.C0.ESC+"[3;"+(a+1)+"~":i.C0.ESC+"[3~";break;case 36:o.key=a?i.C0.ESC+"[1;"+(a+1)+"H":t?i.C0.ESC+"OH":i.C0.ESC+"[H";break;case 35:o.key=a?i.C0.ESC+"[1;"+(a+1)+"F":t?i.C0.ESC+"OF":i.C0.ESC+"[F";break;case 33:e.shiftKey?o.type=2:e.ctrlKey?o.key=i.C0.ESC+"[5;"+(a+1)+"~":o.key=i.C0.ESC+"[5~";break;case 34:e.shiftKey?o.type=3:e.ctrlKey?o.key=i.C0.ESC+"[6;"+(a+1)+"~":o.key=i.C0.ESC+"[6~";break;case 112:o.key=a?i.C0.ESC+"[1;"+(a+1)+"P":i.C0.ESC+"OP";break;case 113:o.key=a?i.C0.ESC+"[1;"+(a+1)+"Q":i.C0.ESC+"OQ";break;case 114:o.key=a?i.C0.ESC+"[1;"+(a+1)+"R":i.C0.ESC+"OR";break;case 115:o.key=a?i.C0.ESC+"[1;"+(a+1)+"S":i.C0.ESC+"OS";break;case 116:o.key=a?i.C0.ESC+"[15;"+(a+1)+"~":i.C0.ESC+"[15~";break;case 117:o.key=a?i.C0.ESC+"[17;"+(a+1)+"~":i.C0.ESC+"[17~";break;case 118:o.key=a?i.C0.ESC+"[18;"+(a+1)+"~":i.C0.ESC+"[18~";break;case 119:o.key=a?i.C0.ESC+"[19;"+(a+1)+"~":i.C0.ESC+"[19~";break;case 120:o.key=a?i.C0.ESC+"[20;"+(a+1)+"~":i.C0.ESC+"[20~";break;case 121:o.key=a?i.C0.ESC+"[21;"+(a+1)+"~":i.C0.ESC+"[21~";break;case 122:o.key=a?i.C0.ESC+"[23;"+(a+1)+"~":i.C0.ESC+"[23~";break;case 123:o.key=a?i.C0.ESC+"[24;"+(a+1)+"~":i.C0.ESC+"[24~";break;default:if(!e.ctrlKey||e.shiftKey||e.altKey||e.metaKey)if(r&&!n||!e.altKey||e.metaKey)!r||e.altKey||e.ctrlKey||e.shiftKey||!e.metaKey?e.key&&!e.ctrlKey&&!e.altKey&&!e.metaKey&&e.keyCode>=48&&1===e.key.length?o.key=e.key:e.key&&e.ctrlKey&&("_"===e.key&&(o.key=i.C0.US),"@"===e.key&&(o.key=i.C0.NUL)):65===e.keyCode&&(o.type=1);else{const t=s[e.keyCode],r=null==t?void 0:t[e.shiftKey?1:0];if(r)o.key=i.C0.ESC+r;else if(e.keyCode>=65&&e.keyCode<=90){const t=e.ctrlKey?e.keyCode-64:e.keyCode+32;let r=String.fromCharCode(t);e.shiftKey&&(r=r.toUpperCase()),o.key=i.C0.ESC+r}else if(32===e.keyCode)o.key=i.C0.ESC+(e.ctrlKey?i.C0.NUL:" ");else if("Dead"===e.key&&e.code.startsWith("Key")){let t=e.code.slice(3,4);e.shiftKey||(t=t.toLowerCase()),o.key=i.C0.ESC+t,o.cancel=!0}}else e.keyCode>=65&&e.keyCode<=90?o.key=String.fromCharCode(e.keyCode-64):32===e.keyCode?o.key=i.C0.NUL:e.keyCode>=51&&e.keyCode<=55?o.key=String.fromCharCode(e.keyCode-51+27):56===e.keyCode?o.key=i.C0.DEL:219===e.keyCode?o.key=i.C0.ESC:220===e.keyCode?o.key=i.C0.FS:221===e.keyCode&&(o.key=i.C0.GS)}return o}},482:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Utf8ToUtf32=t.StringToUtf32=t.utf32ToString=t.stringFromCodePoint=void 0,t.stringFromCodePoint=function(e){return e>65535?(e-=65536,String.fromCharCode(55296+(e>>10))+String.fromCharCode(e%1024+56320)):String.fromCharCode(e)},t.utf32ToString=function(e,t=0,r=e.length){let i="";for(let s=t;s<r;++s){let t=e[s];t>65535?(t-=65536,i+=String.fromCharCode(55296+(t>>10))+String.fromCharCode(t%1024+56320)):i+=String.fromCharCode(t)}return i},t.StringToUtf32=class{constructor(){this._interim=0}clear(){this._interim=0}decode(e,t){const r=e.length;if(!r)return 0;let i=0,s=0;if(this._interim){const r=e.charCodeAt(s++);56320<=r&&r<=57343?t[i++]=1024*(this._interim-55296)+r-56320+65536:(t[i++]=this._interim,t[i++]=r),this._interim=0}for(let n=s;n<r;++n){const s=e.charCodeAt(n);if(55296<=s&&s<=56319){if(++n>=r)return this._interim=s,i;const o=e.charCodeAt(n);56320<=o&&o<=57343?t[i++]=1024*(s-55296)+o-56320+65536:(t[i++]=s,t[i++]=o)}else 65279!==s&&(t[i++]=s)}return i}},t.Utf8ToUtf32=class{constructor(){this.interim=new Uint8Array(3)}clear(){this.interim.fill(0)}decode(e,t){const r=e.length;if(!r)return 0;let i,s,n,o,a=0,l=0,c=0;if(this.interim[0]){let i=!1,s=this.interim[0];s&=192==(224&s)?31:224==(240&s)?15:7;let n,o=0;for(;(n=63&this.interim[++o])&&o<4;)s<<=6,s|=n;const l=192==(224&this.interim[0])?2:224==(240&this.interim[0])?3:4,h=l-o;for(;c<h;){if(c>=r)return 0;if(n=e[c++],128!=(192&n)){c--,i=!0;break}this.interim[o++]=n,s<<=6,s|=63&n}i||(2===l?s<128?c--:t[a++]=s:3===l?s<2048||s>=55296&&s<=57343||65279===s||(t[a++]=s):s<65536||s>1114111||(t[a++]=s)),this.interim.fill(0)}const h=r-4;let u=c;for(;u<r;){for(;!(!(u<h)||128&(i=e[u])||128&(s=e[u+1])||128&(n=e[u+2])||128&(o=e[u+3]));)t[a++]=i,t[a++]=s,t[a++]=n,t[a++]=o,u+=4;if(i=e[u++],i<128)t[a++]=i;else if(192==(224&i)){if(u>=r)return this.interim[0]=i,a;if(s=e[u++],128!=(192&s)){u--;continue}if(l=(31&i)<<6|63&s,l<128){u--;continue}t[a++]=l}else if(224==(240&i)){if(u>=r)return this.interim[0]=i,a;if(s=e[u++],128!=(192&s)){u--;continue}if(u>=r)return this.interim[0]=i,this.interim[1]=s,a;if(n=e[u++],128!=(192&n)){u--;continue}if(l=(15&i)<<12|(63&s)<<6|63&n,l<2048||l>=55296&&l<=57343||65279===l)continue;t[a++]=l}else if(240==(248&i)){if(u>=r)return this.interim[0]=i,a;if(s=e[u++],128!=(192&s)){u--;continue}if(u>=r)return this.interim[0]=i,this.interim[1]=s,a;if(n=e[u++],128!=(192&n)){u--;continue}if(u>=r)return this.interim[0]=i,this.interim[1]=s,this.interim[2]=n,a;if(o=e[u++],128!=(192&o)){u--;continue}if(l=(7&i)<<18|(63&s)<<12|(63&n)<<6|63&o,l<65536||l>1114111)continue;t[a++]=l}}return a}}},225:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeV6=void 0;const r=[[768,879],[1155,1158],[1160,1161],[1425,1469],[1471,1471],[1473,1474],[1476,1477],[1479,1479],[1536,1539],[1552,1557],[1611,1630],[1648,1648],[1750,1764],[1767,1768],[1770,1773],[1807,1807],[1809,1809],[1840,1866],[1958,1968],[2027,2035],[2305,2306],[2364,2364],[2369,2376],[2381,2381],[2385,2388],[2402,2403],[2433,2433],[2492,2492],[2497,2500],[2509,2509],[2530,2531],[2561,2562],[2620,2620],[2625,2626],[2631,2632],[2635,2637],[2672,2673],[2689,2690],[2748,2748],[2753,2757],[2759,2760],[2765,2765],[2786,2787],[2817,2817],[2876,2876],[2879,2879],[2881,2883],[2893,2893],[2902,2902],[2946,2946],[3008,3008],[3021,3021],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3260,3260],[3263,3263],[3270,3270],[3276,3277],[3298,3299],[3393,3395],[3405,3405],[3530,3530],[3538,3540],[3542,3542],[3633,3633],[3636,3642],[3655,3662],[3761,3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893,3893],[3895,3895],[3897,3897],[3953,3966],[3968,3972],[3974,3975],[3984,3991],[3993,4028],[4038,4038],[4141,4144],[4146,4146],[4150,4151],[4153,4153],[4184,4185],[4448,4607],[4959,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086,6086],[6089,6099],[6109,6109],[6155,6157],[6313,6313],[6432,6434],[6439,6440],[6450,6450],[6457,6459],[6679,6680],[6912,6915],[6964,6964],[6966,6970],[6972,6972],[6978,6978],[7019,7027],[7616,7626],[7678,7679],[8203,8207],[8234,8238],[8288,8291],[8298,8303],[8400,8431],[12330,12335],[12441,12442],[43014,43014],[43019,43019],[43045,43046],[64286,64286],[65024,65039],[65056,65059],[65279,65279],[65529,65531]],i=[[68097,68099],[68101,68102],[68108,68111],[68152,68154],[68159,68159],[119143,119145],[119155,119170],[119173,119179],[119210,119213],[119362,119364],[917505,917505],[917536,917631],[917760,917999]];let s;t.UnicodeV6=class{constructor(){if(this.version="6",!s){s=new Uint8Array(65536),s.fill(1),s[0]=0,s.fill(0,1,32),s.fill(0,127,160),s.fill(2,4352,4448),s[9001]=2,s[9002]=2,s.fill(2,11904,42192),s[12351]=1,s.fill(2,44032,55204),s.fill(2,63744,64256),s.fill(2,65040,65050),s.fill(2,65072,65136),s.fill(2,65280,65377),s.fill(2,65504,65511);for(let e=0;e<r.length;++e)s.fill(0,r[e][0],r[e][1]+1)}}wcwidth(e){return e<32?0:e<127?1:e<65536?s[e]:function(e,t){let r,i=0,s=t.length-1;if(e<t[0][0]||e>t[s][1])return!1;for(;s>=i;)if(r=i+s>>1,e>t[r][1])i=r+1;else{if(!(e<t[r][0]))return!0;s=r-1}return!1}(e,i)?0:e>=131072&&e<=196605||e>=196608&&e<=262141?2:1}}},5981:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WriteBuffer=void 0;const i=r(8460),s=r(844);class n extends s.Disposable{constructor(e){super(),this._action=e,this._writeBuffer=[],this._callbacks=[],this._pendingData=0,this._bufferOffset=0,this._isSyncWriting=!1,this._syncCalls=0,this._didUserInput=!1,this._onWriteParsed=this.register(new i.EventEmitter),this.onWriteParsed=this._onWriteParsed.event}handleUserInput(){this._didUserInput=!0}writeSync(e,t){if(void 0!==t&&this._syncCalls>t)return void(this._syncCalls=0);if(this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(void 0),this._syncCalls++,this._isSyncWriting)return;let r;for(this._isSyncWriting=!0;r=this._writeBuffer.shift();){this._action(r);const e=this._callbacks.shift();e&&e()}this._pendingData=0,this._bufferOffset=2147483647,this._isSyncWriting=!1,this._syncCalls=0}write(e,t){if(this._pendingData>5e7)throw new Error("write data discarded, use flow control to avoid losing data");if(!this._writeBuffer.length){if(this._bufferOffset=0,this._didUserInput)return this._didUserInput=!1,this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(t),void this._innerWrite();setTimeout((()=>this._innerWrite()))}this._pendingData+=e.length,this._writeBuffer.push(e),this._callbacks.push(t)}_innerWrite(e=0,t=!0){const r=e||Date.now();for(;this._writeBuffer.length>this._bufferOffset;){const e=this._writeBuffer[this._bufferOffset],i=this._action(e,t);if(i){const e=e=>Date.now()-r>=12?setTimeout((()=>this._innerWrite(0,e))):this._innerWrite(r,e);return void i.catch((e=>(queueMicrotask((()=>{throw e})),Promise.resolve(!1)))).then(e)}const s=this._callbacks[this._bufferOffset];if(s&&s(),this._bufferOffset++,this._pendingData-=e.length,Date.now()-r>=12)break}this._writeBuffer.length>this._bufferOffset?(this._bufferOffset>50&&(this._writeBuffer=this._writeBuffer.slice(this._bufferOffset),this._callbacks=this._callbacks.slice(this._bufferOffset),this._bufferOffset=0),setTimeout((()=>this._innerWrite()))):(this._writeBuffer.length=0,this._callbacks.length=0,this._pendingData=0,this._bufferOffset=0),this._onWriteParsed.fire()}}t.WriteBuffer=n},5941:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toRgbString=t.parseColor=void 0;const r=/^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,i=/^[\da-f]+$/;function s(e,t){const r=e.toString(16),i=r.length<2?"0"+r:r;switch(t){case 4:return r[0];case 8:return i;case 12:return(i+i).slice(0,3);default:return i+i}}t.parseColor=function(e){if(!e)return;let t=e.toLowerCase();if(0===t.indexOf("rgb:")){t=t.slice(4);const e=r.exec(t);if(e){const t=e[1]?15:e[4]?255:e[7]?4095:65535;return[Math.round(parseInt(e[1]||e[4]||e[7]||e[10],16)/t*255),Math.round(parseInt(e[2]||e[5]||e[8]||e[11],16)/t*255),Math.round(parseInt(e[3]||e[6]||e[9]||e[12],16)/t*255)]}}else if(0===t.indexOf("#")&&(t=t.slice(1),i.exec(t)&&[3,6,9,12].includes(t.length))){const e=t.length/3,r=[0,0,0];for(let i=0;i<3;++i){const s=parseInt(t.slice(e*i,e*i+e),16);r[i]=1===e?s<<4:2===e?s:3===e?s>>4:s>>8}return r}},t.toRgbString=function(e,t=16){const[r,i,n]=e;return`rgb:${s(r,t)}/${s(i,t)}/${s(n,t)}`}},5770:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PAYLOAD_LIMIT=void 0,t.PAYLOAD_LIMIT=1e7},6351:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DcsHandler=t.DcsParser=void 0;const i=r(482),s=r(8742),n=r(5770),o=[];t.DcsParser=class{constructor(){this._handlers=Object.create(null),this._active=o,this._ident=0,this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=o}registerHandler(e,t){void 0===this._handlers[e]&&(this._handlers[e]=[]);const r=this._handlers[e];return r.push(t),{dispose:()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}clearHandler(e){this._handlers[e]&&delete this._handlers[e]}setHandlerFallback(e){this._handlerFb=e}reset(){if(this._active.length)for(let e=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;e>=0;--e)this._active[e].unhook(!1);this._stack.paused=!1,this._active=o,this._ident=0}hook(e,t){if(this.reset(),this._ident=e,this._active=this._handlers[e]||o,this._active.length)for(let e=this._active.length-1;e>=0;e--)this._active[e].hook(t);else this._handlerFb(this._ident,"HOOK",t)}put(e,t,r){if(this._active.length)for(let i=this._active.length-1;i>=0;i--)this._active[i].put(e,t,r);else this._handlerFb(this._ident,"PUT",(0,i.utf32ToString)(e,t,r))}unhook(e,t=!0){if(this._active.length){let r=!1,i=this._active.length-1,s=!1;if(this._stack.paused&&(i=this._stack.loopPosition-1,r=t,s=this._stack.fallThrough,this._stack.paused=!1),!s&&!1===r){for(;i>=0&&(r=this._active[i].unhook(e),!0!==r);i--)if(r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!1,r;i--}for(;i>=0;i--)if(r=this._active[i].unhook(!1),r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!0,r}else this._handlerFb(this._ident,"UNHOOK",e);this._active=o,this._ident=0}};const a=new s.Params;a.addParam(0),t.DcsHandler=class{constructor(e){this._handler=e,this._data="",this._params=a,this._hitLimit=!1}hook(e){this._params=e.length>1||e.params[0]?e.clone():a,this._data="",this._hitLimit=!1}put(e,t,r){this._hitLimit||(this._data+=(0,i.utf32ToString)(e,t,r),this._data.length>n.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}unhook(e){let t=!1;if(this._hitLimit)t=!1;else if(e&&(t=this._handler(this._data,this._params),t instanceof Promise))return t.then((e=>(this._params=a,this._data="",this._hitLimit=!1,e)));return this._params=a,this._data="",this._hitLimit=!1,t}}},2015:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EscapeSequenceParser=t.VT500_TRANSITION_TABLE=t.TransitionTable=void 0;const i=r(844),s=r(8742),n=r(6242),o=r(6351);class a{constructor(e){this.table=new Uint8Array(e)}setDefault(e,t){this.table.fill(e<<4|t)}add(e,t,r,i){this.table[t<<8|e]=r<<4|i}addMany(e,t,r,i){for(let s=0;s<e.length;s++)this.table[t<<8|e[s]]=r<<4|i}}t.TransitionTable=a;const l=160;t.VT500_TRANSITION_TABLE=function(){const e=new a(4095),t=Array.apply(null,Array(256)).map(((e,t)=>t)),r=(e,r)=>t.slice(e,r),i=r(32,127),s=r(0,24);s.push(25),s.push.apply(s,r(28,32));const n=r(0,14);let o;for(o in e.setDefault(1,0),e.addMany(i,0,2,0),n)e.addMany([24,26,153,154],o,3,0),e.addMany(r(128,144),o,3,0),e.addMany(r(144,152),o,3,0),e.add(156,o,0,0),e.add(27,o,11,1),e.add(157,o,4,8),e.addMany([152,158,159],o,0,7),e.add(155,o,11,3),e.add(144,o,11,9);return e.addMany(s,0,3,0),e.addMany(s,1,3,1),e.add(127,1,0,1),e.addMany(s,8,0,8),e.addMany(s,3,3,3),e.add(127,3,0,3),e.addMany(s,4,3,4),e.add(127,4,0,4),e.addMany(s,6,3,6),e.addMany(s,5,3,5),e.add(127,5,0,5),e.addMany(s,2,3,2),e.add(127,2,0,2),e.add(93,1,4,8),e.addMany(i,8,5,8),e.add(127,8,5,8),e.addMany([156,27,24,26,7],8,6,0),e.addMany(r(28,32),8,0,8),e.addMany([88,94,95],1,0,7),e.addMany(i,7,0,7),e.addMany(s,7,0,7),e.add(156,7,0,0),e.add(127,7,0,7),e.add(91,1,11,3),e.addMany(r(64,127),3,7,0),e.addMany(r(48,60),3,8,4),e.addMany([60,61,62,63],3,9,4),e.addMany(r(48,60),4,8,4),e.addMany(r(64,127),4,7,0),e.addMany([60,61,62,63],4,0,6),e.addMany(r(32,64),6,0,6),e.add(127,6,0,6),e.addMany(r(64,127),6,0,0),e.addMany(r(32,48),3,9,5),e.addMany(r(32,48),5,9,5),e.addMany(r(48,64),5,0,6),e.addMany(r(64,127),5,7,0),e.addMany(r(32,48),4,9,5),e.addMany(r(32,48),1,9,2),e.addMany(r(32,48),2,9,2),e.addMany(r(48,127),2,10,0),e.addMany(r(48,80),1,10,0),e.addMany(r(81,88),1,10,0),e.addMany([89,90,92],1,10,0),e.addMany(r(96,127),1,10,0),e.add(80,1,11,9),e.addMany(s,9,0,9),e.add(127,9,0,9),e.addMany(r(28,32),9,0,9),e.addMany(r(32,48),9,9,12),e.addMany(r(48,60),9,8,10),e.addMany([60,61,62,63],9,9,10),e.addMany(s,11,0,11),e.addMany(r(32,128),11,0,11),e.addMany(r(28,32),11,0,11),e.addMany(s,10,0,10),e.add(127,10,0,10),e.addMany(r(28,32),10,0,10),e.addMany(r(48,60),10,8,10),e.addMany([60,61,62,63],10,0,11),e.addMany(r(32,48),10,9,12),e.addMany(s,12,0,12),e.add(127,12,0,12),e.addMany(r(28,32),12,0,12),e.addMany(r(32,48),12,9,12),e.addMany(r(48,64),12,0,11),e.addMany(r(64,127),12,12,13),e.addMany(r(64,127),10,12,13),e.addMany(r(64,127),9,12,13),e.addMany(s,13,13,13),e.addMany(i,13,13,13),e.add(127,13,0,13),e.addMany([27,156,24,26],13,14,0),e.add(l,0,2,0),e.add(l,8,5,8),e.add(l,6,0,6),e.add(l,11,0,11),e.add(l,13,13,13),e}();class c extends i.Disposable{constructor(e=t.VT500_TRANSITION_TABLE){super(),this._transitions=e,this._parseStack={state:0,handlers:[],handlerPos:0,transition:0,chunkPos:0},this.initialState=0,this.currentState=this.initialState,this._params=new s.Params,this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,this._printHandlerFb=(e,t,r)=>{},this._executeHandlerFb=e=>{},this._csiHandlerFb=(e,t)=>{},this._escHandlerFb=e=>{},this._errorHandlerFb=e=>e,this._printHandler=this._printHandlerFb,this._executeHandlers=Object.create(null),this._csiHandlers=Object.create(null),this._escHandlers=Object.create(null),this.register((0,i.toDisposable)((()=>{this._csiHandlers=Object.create(null),this._executeHandlers=Object.create(null),this._escHandlers=Object.create(null)}))),this._oscParser=this.register(new n.OscParser),this._dcsParser=this.register(new o.DcsParser),this._errorHandler=this._errorHandlerFb,this.registerEscHandler({final:"\\"},(()=>!0))}_identifier(e,t=[64,126]){let r=0;if(e.prefix){if(e.prefix.length>1)throw new Error("only one byte as prefix supported");if(r=e.prefix.charCodeAt(0),r&&60>r||r>63)throw new Error("prefix must be in range 0x3c .. 0x3f")}if(e.intermediates){if(e.intermediates.length>2)throw new Error("only two bytes as intermediates are supported");for(let t=0;t<e.intermediates.length;++t){const i=e.intermediates.charCodeAt(t);if(32>i||i>47)throw new Error("intermediate must be in range 0x20 .. 0x2f");r<<=8,r|=i}}if(1!==e.final.length)throw new Error("final must be a single byte");const i=e.final.charCodeAt(0);if(t[0]>i||i>t[1])throw new Error(`final must be in range ${t[0]} .. ${t[1]}`);return r<<=8,r|=i,r}identToString(e){const t=[];for(;e;)t.push(String.fromCharCode(255&e)),e>>=8;return t.reverse().join("")}setPrintHandler(e){this._printHandler=e}clearPrintHandler(){this._printHandler=this._printHandlerFb}registerEscHandler(e,t){const r=this._identifier(e,[48,126]);void 0===this._escHandlers[r]&&(this._escHandlers[r]=[]);const i=this._escHandlers[r];return i.push(t),{dispose:()=>{const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}}clearEscHandler(e){this._escHandlers[this._identifier(e,[48,126])]&&delete this._escHandlers[this._identifier(e,[48,126])]}setEscHandlerFallback(e){this._escHandlerFb=e}setExecuteHandler(e,t){this._executeHandlers[e.charCodeAt(0)]=t}clearExecuteHandler(e){this._executeHandlers[e.charCodeAt(0)]&&delete this._executeHandlers[e.charCodeAt(0)]}setExecuteHandlerFallback(e){this._executeHandlerFb=e}registerCsiHandler(e,t){const r=this._identifier(e);void 0===this._csiHandlers[r]&&(this._csiHandlers[r]=[]);const i=this._csiHandlers[r];return i.push(t),{dispose:()=>{const e=i.indexOf(t);-1!==e&&i.splice(e,1)}}}clearCsiHandler(e){this._csiHandlers[this._identifier(e)]&&delete this._csiHandlers[this._identifier(e)]}setCsiHandlerFallback(e){this._csiHandlerFb=e}registerDcsHandler(e,t){return this._dcsParser.registerHandler(this._identifier(e),t)}clearDcsHandler(e){this._dcsParser.clearHandler(this._identifier(e))}setDcsHandlerFallback(e){this._dcsParser.setHandlerFallback(e)}registerOscHandler(e,t){return this._oscParser.registerHandler(e,t)}clearOscHandler(e){this._oscParser.clearHandler(e)}setOscHandlerFallback(e){this._oscParser.setHandlerFallback(e)}setErrorHandler(e){this._errorHandler=e}clearErrorHandler(){this._errorHandler=this._errorHandlerFb}reset(){this.currentState=this.initialState,this._oscParser.reset(),this._dcsParser.reset(),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0,0!==this._parseStack.state&&(this._parseStack.state=2,this._parseStack.handlers=[])}_preserveStack(e,t,r,i,s){this._parseStack.state=e,this._parseStack.handlers=t,this._parseStack.handlerPos=r,this._parseStack.transition=i,this._parseStack.chunkPos=s}parse(e,t,r){let i,s=0,n=0,o=0;if(this._parseStack.state)if(2===this._parseStack.state)this._parseStack.state=0,o=this._parseStack.chunkPos+1;else{if(void 0===r||1===this._parseStack.state)throw this._parseStack.state=1,new Error("improper continuation due to previous async handler, giving up parsing");const t=this._parseStack.handlers;let n=this._parseStack.handlerPos-1;switch(this._parseStack.state){case 3:if(!1===r&&n>-1)for(;n>=0&&(i=t[n](this._params),!0!==i);n--)if(i instanceof Promise)return this._parseStack.handlerPos=n,i;this._parseStack.handlers=[];break;case 4:if(!1===r&&n>-1)for(;n>=0&&(i=t[n](),!0!==i);n--)if(i instanceof Promise)return this._parseStack.handlerPos=n,i;this._parseStack.handlers=[];break;case 6:if(s=e[this._parseStack.chunkPos],i=this._dcsParser.unhook(24!==s&&26!==s,r),i)return i;27===s&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0;break;case 5:if(s=e[this._parseStack.chunkPos],i=this._oscParser.end(24!==s&&26!==s,r),i)return i;27===s&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0}this._parseStack.state=0,o=this._parseStack.chunkPos+1,this.precedingCodepoint=0,this.currentState=15&this._parseStack.transition}for(let r=o;r<t;++r){switch(s=e[r],n=this._transitions.table[this.currentState<<8|(s<160?s:l)],n>>4){case 2:for(let i=r+1;;++i){if(i>=t||(s=e[i])<32||s>126&&s<l){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(s=e[i])<32||s>126&&s<l){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(s=e[i])<32||s>126&&s<l){this._printHandler(e,r,i),r=i-1;break}if(++i>=t||(s=e[i])<32||s>126&&s<l){this._printHandler(e,r,i),r=i-1;break}}break;case 3:this._executeHandlers[s]?this._executeHandlers[s]():this._executeHandlerFb(s),this.precedingCodepoint=0;break;case 0:break;case 1:if(this._errorHandler({position:r,code:s,currentState:this.currentState,collect:this._collect,params:this._params,abort:!1}).abort)return;break;case 7:const o=this._csiHandlers[this._collect<<8|s];let a=o?o.length-1:-1;for(;a>=0&&(i=o[a](this._params),!0!==i);a--)if(i instanceof Promise)return this._preserveStack(3,o,a,n,r),i;a<0&&this._csiHandlerFb(this._collect<<8|s,this._params),this.precedingCodepoint=0;break;case 8:do{switch(s){case 59:this._params.addParam(0);break;case 58:this._params.addSubParam(-1);break;default:this._params.addDigit(s-48)}}while(++r<t&&(s=e[r])>47&&s<60);r--;break;case 9:this._collect<<=8,this._collect|=s;break;case 10:const c=this._escHandlers[this._collect<<8|s];let h=c?c.length-1:-1;for(;h>=0&&(i=c[h](),!0!==i);h--)if(i instanceof Promise)return this._preserveStack(4,c,h,n,r),i;h<0&&this._escHandlerFb(this._collect<<8|s),this.precedingCodepoint=0;break;case 11:this._params.reset(),this._params.addParam(0),this._collect=0;break;case 12:this._dcsParser.hook(this._collect<<8|s,this._params);break;case 13:for(let i=r+1;;++i)if(i>=t||24===(s=e[i])||26===s||27===s||s>127&&s<l){this._dcsParser.put(e,r,i),r=i-1;break}break;case 14:if(i=this._dcsParser.unhook(24!==s&&26!==s),i)return this._preserveStack(6,[],0,n,r),i;27===s&&(n|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0;break;case 4:this._oscParser.start();break;case 5:for(let i=r+1;;i++)if(i>=t||(s=e[i])<32||s>127&&s<l){this._oscParser.put(e,r,i),r=i-1;break}break;case 6:if(i=this._oscParser.end(24!==s&&26!==s),i)return this._preserveStack(5,[],0,n,r),i;27===s&&(n|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingCodepoint=0}this.currentState=15&n}}}t.EscapeSequenceParser=c},6242:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OscHandler=t.OscParser=void 0;const i=r(5770),s=r(482),n=[];t.OscParser=class{constructor(){this._state=0,this._active=n,this._id=-1,this._handlers=Object.create(null),this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}registerHandler(e,t){void 0===this._handlers[e]&&(this._handlers[e]=[]);const r=this._handlers[e];return r.push(t),{dispose:()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}}clearHandler(e){this._handlers[e]&&delete this._handlers[e]}setHandlerFallback(e){this._handlerFb=e}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=n}reset(){if(2===this._state)for(let e=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;e>=0;--e)this._active[e].end(!1);this._stack.paused=!1,this._active=n,this._id=-1,this._state=0}_start(){if(this._active=this._handlers[this._id]||n,this._active.length)for(let e=this._active.length-1;e>=0;e--)this._active[e].start();else this._handlerFb(this._id,"START")}_put(e,t,r){if(this._active.length)for(let i=this._active.length-1;i>=0;i--)this._active[i].put(e,t,r);else this._handlerFb(this._id,"PUT",(0,s.utf32ToString)(e,t,r))}start(){this.reset(),this._state=1}put(e,t,r){if(3!==this._state){if(1===this._state)for(;t<r;){const r=e[t++];if(59===r){this._state=2,this._start();break}if(r<48||57<r)return void(this._state=3);-1===this._id&&(this._id=0),this._id=10*this._id+r-48}2===this._state&&r-t>0&&this._put(e,t,r)}}end(e,t=!0){if(0!==this._state){if(3!==this._state)if(1===this._state&&this._start(),this._active.length){let r=!1,i=this._active.length-1,s=!1;if(this._stack.paused&&(i=this._stack.loopPosition-1,r=t,s=this._stack.fallThrough,this._stack.paused=!1),!s&&!1===r){for(;i>=0&&(r=this._active[i].end(e),!0!==r);i--)if(r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!1,r;i--}for(;i>=0;i--)if(r=this._active[i].end(!1),r instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=i,this._stack.fallThrough=!0,r}else this._handlerFb(this._id,"END",e);this._active=n,this._id=-1,this._state=0}}},t.OscHandler=class{constructor(e){this._handler=e,this._data="",this._hitLimit=!1}start(){this._data="",this._hitLimit=!1}put(e,t,r){this._hitLimit||(this._data+=(0,s.utf32ToString)(e,t,r),this._data.length>i.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}end(e){let t=!1;if(this._hitLimit)t=!1;else if(e&&(t=this._handler(this._data),t instanceof Promise))return t.then((e=>(this._data="",this._hitLimit=!1,e)));return this._data="",this._hitLimit=!1,t}}},8742:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Params=void 0;const r=2147483647;class i{constructor(e=32,t=32){if(this.maxLength=e,this.maxSubParamsLength=t,t>256)throw new Error("maxSubParamsLength must not be greater than 256");this.params=new Int32Array(e),this.length=0,this._subParams=new Int32Array(t),this._subParamsLength=0,this._subParamsIdx=new Uint16Array(e),this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}static fromArray(e){const t=new i;if(!e.length)return t;for(let r=Array.isArray(e[0])?1:0;r<e.length;++r){const i=e[r];if(Array.isArray(i))for(let e=0;e<i.length;++e)t.addSubParam(i[e]);else t.addParam(i)}return t}clone(){const e=new i(this.maxLength,this.maxSubParamsLength);return e.params.set(this.params),e.length=this.length,e._subParams.set(this._subParams),e._subParamsLength=this._subParamsLength,e._subParamsIdx.set(this._subParamsIdx),e._rejectDigits=this._rejectDigits,e._rejectSubDigits=this._rejectSubDigits,e._digitIsSub=this._digitIsSub,e}toArray(){const e=[];for(let t=0;t<this.length;++t){e.push(this.params[t]);const r=this._subParamsIdx[t]>>8,i=255&this._subParamsIdx[t];i-r>0&&e.push(Array.prototype.slice.call(this._subParams,r,i))}return e}reset(){this.length=0,this._subParamsLength=0,this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}addParam(e){if(this._digitIsSub=!1,this.length>=this.maxLength)this._rejectDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParamsIdx[this.length]=this._subParamsLength<<8|this._subParamsLength,this.params[this.length++]=e>r?r:e}}addSubParam(e){if(this._digitIsSub=!0,this.length)if(this._rejectDigits||this._subParamsLength>=this.maxSubParamsLength)this._rejectSubDigits=!0;else{if(e<-1)throw new Error("values lesser than -1 are not allowed");this._subParams[this._subParamsLength++]=e>r?r:e,this._subParamsIdx[this.length-1]++}}hasSubParams(e){return(255&this._subParamsIdx[e])-(this._subParamsIdx[e]>>8)>0}getSubParams(e){const t=this._subParamsIdx[e]>>8,r=255&this._subParamsIdx[e];return r-t>0?this._subParams.subarray(t,r):null}getSubParamsAll(){const e={};for(let t=0;t<this.length;++t){const r=this._subParamsIdx[t]>>8,i=255&this._subParamsIdx[t];i-r>0&&(e[t]=this._subParams.slice(r,i))}return e}addDigit(e){let t;if(this._rejectDigits||!(t=this._digitIsSub?this._subParamsLength:this.length)||this._digitIsSub&&this._rejectSubDigits)return;const i=this._digitIsSub?this._subParams:this.params,s=i[t-1];i[t-1]=~s?Math.min(10*s+e,r):e}}t.Params=i},5741:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AddonManager=void 0,t.AddonManager=class{constructor(){this._addons=[]}dispose(){for(let e=this._addons.length-1;e>=0;e--)this._addons[e].instance.dispose()}loadAddon(e,t){const r={instance:t,dispose:t.dispose,isDisposed:!1};this._addons.push(r),t.dispose=()=>this._wrappedAddonDispose(r),t.activate(e)}_wrappedAddonDispose(e){if(e.isDisposed)return;let t=-1;for(let r=0;r<this._addons.length;r++)if(this._addons[r]===e){t=r;break}if(-1===t)throw new Error("Could not dispose an addon that has not been loaded");e.isDisposed=!0,e.dispose.apply(e.instance),this._addons.splice(t,1)}}},8771:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferApiView=void 0;const i=r(3785),s=r(511);t.BufferApiView=class{constructor(e,t){this._buffer=e,this.type=t}init(e){return this._buffer=e,this}get cursorY(){return this._buffer.y}get cursorX(){return this._buffer.x}get viewportY(){return this._buffer.ydisp}get baseY(){return this._buffer.ybase}get length(){return this._buffer.lines.length}getLine(e){const t=this._buffer.lines.get(e);if(t)return new i.BufferLineApiView(t)}getNullCell(){return new s.CellData}}},3785:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferLineApiView=void 0;const i=r(511);t.BufferLineApiView=class{constructor(e){this._line=e}get isWrapped(){return this._line.isWrapped}get length(){return this._line.length}getCell(e,t){if(!(e<0||e>=this._line.length))return t?(this._line.loadCell(e,t),t):this._line.loadCell(e,new i.CellData)}translateToString(e,t,r){return this._line.translateToString(e,t,r)}}},8285:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BufferNamespaceApi=void 0;const i=r(8771),s=r(8460);t.BufferNamespaceApi=class{constructor(e){this._core=e,this._onBufferChange=new s.EventEmitter,this.onBufferChange=this._onBufferChange.event,this._normal=new i.BufferApiView(this._core.buffers.normal,"normal"),this._alternate=new i.BufferApiView(this._core.buffers.alt,"alternate"),this._core.buffers.onBufferActivate((()=>this._onBufferChange.fire(this.active)))}get active(){if(this._core.buffers.active===this._core.buffers.normal)return this.normal;if(this._core.buffers.active===this._core.buffers.alt)return this.alternate;throw new Error("Active buffer is neither normal nor alternate")}get normal(){return this._normal.init(this._core.buffers.normal)}get alternate(){return this._alternate.init(this._core.buffers.alt)}}},7975:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ParserApi=void 0,t.ParserApi=class{constructor(e){this._core=e}registerCsiHandler(e,t){return this._core.registerCsiHandler(e,(e=>t(e.toArray())))}addCsiHandler(e,t){return this.registerCsiHandler(e,t)}registerDcsHandler(e,t){return this._core.registerDcsHandler(e,((e,r)=>t(e,r.toArray())))}addDcsHandler(e,t){return this.registerDcsHandler(e,t)}registerEscHandler(e,t){return this._core.registerEscHandler(e,t)}addEscHandler(e,t){return this.registerEscHandler(e,t)}registerOscHandler(e,t){return this._core.registerOscHandler(e,t)}addOscHandler(e,t){return this.registerOscHandler(e,t)}}},7090:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeApi=void 0,t.UnicodeApi=class{constructor(e){this._core=e}register(e){this._core.unicodeService.register(e)}get versions(){return this._core.unicodeService.versions}get activeVersion(){return this._core.unicodeService.activeVersion}set activeVersion(e){this._core.unicodeService.activeVersion=e}}},744:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.BufferService=t.MINIMUM_ROWS=t.MINIMUM_COLS=void 0;const n=r(2585),o=r(5295),a=r(8460),l=r(844);t.MINIMUM_COLS=2,t.MINIMUM_ROWS=1;let c=class extends l.Disposable{constructor(e){super(),this.isUserScrolling=!1,this._onResize=this.register(new a.EventEmitter),this.onResize=this._onResize.event,this._onScroll=this.register(new a.EventEmitter),this.onScroll=this._onScroll.event,this.cols=Math.max(e.rawOptions.cols||0,t.MINIMUM_COLS),this.rows=Math.max(e.rawOptions.rows||0,t.MINIMUM_ROWS),this.buffers=this.register(new o.BufferSet(e,this))}get buffer(){return this.buffers.active}resize(e,t){this.cols=e,this.rows=t,this.buffers.resize(e,t),this._onResize.fire({cols:e,rows:t})}reset(){this.buffers.reset(),this.isUserScrolling=!1}scroll(e,t=!1){const r=this.buffer;let i;i=this._cachedBlankLine,i&&i.length===this.cols&&i.getFg(0)===e.fg&&i.getBg(0)===e.bg||(i=r.getBlankLine(e,t),this._cachedBlankLine=i),i.isWrapped=t;const s=r.ybase+r.scrollTop,n=r.ybase+r.scrollBottom;if(0===r.scrollTop){const e=r.lines.isFull;n===r.lines.length-1?e?r.lines.recycle().copyFrom(i):r.lines.push(i.clone()):r.lines.splice(n+1,0,i.clone()),e?this.isUserScrolling&&(r.ydisp=Math.max(r.ydisp-1,0)):(r.ybase++,this.isUserScrolling||r.ydisp++)}else{const e=n-s+1;r.lines.shiftElements(s+1,e-1,-1),r.lines.set(n,i.clone())}this.isUserScrolling||(r.ydisp=r.ybase),this._onScroll.fire(r.ydisp)}scrollLines(e,t,r){const i=this.buffer;if(e<0){if(0===i.ydisp)return;this.isUserScrolling=!0}else e+i.ydisp>=i.ybase&&(this.isUserScrolling=!1);const s=i.ydisp;i.ydisp=Math.max(Math.min(i.ydisp+e,i.ybase),0),s!==i.ydisp&&(t||this._onScroll.fire(i.ydisp))}scrollPages(e){this.scrollLines(e*(this.rows-1))}scrollToTop(){this.scrollLines(-this.buffer.ydisp)}scrollToBottom(){this.scrollLines(this.buffer.ybase-this.buffer.ydisp)}scrollToLine(e){const t=e-this.buffer.ydisp;0!==t&&this.scrollLines(t)}};c=i([s(0,n.IOptionsService)],c),t.BufferService=c},7994:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CharsetService=void 0,t.CharsetService=class{constructor(){this.glevel=0,this._charsets=[]}reset(){this.charset=void 0,this._charsets=[],this.glevel=0}setgLevel(e){this.glevel=e,this.charset=this._charsets[e]}setgCharset(e,t){this._charsets[e]=t,this.glevel===e&&(this.charset=t)}}},1753:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoreMouseService=void 0;const n=r(2585),o=r(8460),a=r(844),l={NONE:{events:0,restrict:()=>!1},X10:{events:1,restrict:e=>4!==e.button&&1===e.action&&(e.ctrl=!1,e.alt=!1,e.shift=!1,!0)},VT200:{events:19,restrict:e=>32!==e.action},DRAG:{events:23,restrict:e=>32!==e.action||3!==e.button},ANY:{events:31,restrict:e=>!0}};function c(e,t){let r=(e.ctrl?16:0)|(e.shift?4:0)|(e.alt?8:0);return 4===e.button?(r|=64,r|=e.action):(r|=3&e.button,4&e.button&&(r|=64),8&e.button&&(r|=128),32===e.action?r|=32:0!==e.action||t||(r|=3)),r}const h=String.fromCharCode,u={DEFAULT:e=>{const t=[c(e,!1)+32,e.col+32,e.row+32];return t[0]>255||t[1]>255||t[2]>255?"":`[M${h(t[0])}${h(t[1])}${h(t[2])}`},SGR:e=>{const t=0===e.action&&4!==e.button?"m":"M";return`[<${c(e,!0)};${e.col};${e.row}${t}`},SGR_PIXELS:e=>{const t=0===e.action&&4!==e.button?"m":"M";return`[<${c(e,!0)};${e.x};${e.y}${t}`}};let d=class extends a.Disposable{constructor(e,t){super(),this._bufferService=e,this._coreService=t,this._protocols={},this._encodings={},this._activeProtocol="",this._activeEncoding="",this._lastEvent=null,this._onProtocolChange=this.register(new o.EventEmitter),this.onProtocolChange=this._onProtocolChange.event;for(const e of Object.keys(l))this.addProtocol(e,l[e]);for(const e of Object.keys(u))this.addEncoding(e,u[e]);this.reset()}addProtocol(e,t){this._protocols[e]=t}addEncoding(e,t){this._encodings[e]=t}get activeProtocol(){return this._activeProtocol}get areMouseEventsActive(){return 0!==this._protocols[this._activeProtocol].events}set activeProtocol(e){if(!this._protocols[e])throw new Error(`unknown protocol "${e}"`);this._activeProtocol=e,this._onProtocolChange.fire(this._protocols[e].events)}get activeEncoding(){return this._activeEncoding}set activeEncoding(e){if(!this._encodings[e])throw new Error(`unknown encoding "${e}"`);this._activeEncoding=e}reset(){this.activeProtocol="NONE",this.activeEncoding="DEFAULT",this._lastEvent=null}triggerMouseEvent(e){if(e.col<0||e.col>=this._bufferService.cols||e.row<0||e.row>=this._bufferService.rows)return!1;if(4===e.button&&32===e.action)return!1;if(3===e.button&&32!==e.action)return!1;if(4!==e.button&&(2===e.action||3===e.action))return!1;if(e.col++,e.row++,32===e.action&&this._lastEvent&&this._equalEvents(this._lastEvent,e,"SGR_PIXELS"===this._activeEncoding))return!1;if(!this._protocols[this._activeProtocol].restrict(e))return!1;const t=this._encodings[this._activeEncoding](e);return t&&("DEFAULT"===this._activeEncoding?this._coreService.triggerBinaryEvent(t):this._coreService.triggerDataEvent(t,!0)),this._lastEvent=e,!0}explainEvents(e){return{down:!!(1&e),up:!!(2&e),drag:!!(4&e),move:!!(8&e),wheel:!!(16&e)}}_equalEvents(e,t,r){if(r){if(e.x!==t.x)return!1;if(e.y!==t.y)return!1}else{if(e.col!==t.col)return!1;if(e.row!==t.row)return!1}return e.button===t.button&&e.action===t.action&&e.ctrl===t.ctrl&&e.alt===t.alt&&e.shift===t.shift}};d=i([s(0,n.IBufferService),s(1,n.ICoreService)],d),t.CoreMouseService=d},6975:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoreService=void 0;const n=r(2585),o=r(8460),a=r(1439),l=r(844),c=Object.freeze({insertMode:!1}),h=Object.freeze({applicationCursorKeys:!1,applicationKeypad:!1,bracketedPasteMode:!1,origin:!1,reverseWraparound:!1,sendFocus:!1,wraparound:!0});let u=class extends l.Disposable{constructor(e,t,r){super(),this._bufferService=e,this._logService=t,this._optionsService=r,this.isCursorInitialized=!1,this.isCursorHidden=!1,this._onData=this.register(new o.EventEmitter),this.onData=this._onData.event,this._onUserInput=this.register(new o.EventEmitter),this.onUserInput=this._onUserInput.event,this._onBinary=this.register(new o.EventEmitter),this.onBinary=this._onBinary.event,this._onRequestScrollToBottom=this.register(new o.EventEmitter),this.onRequestScrollToBottom=this._onRequestScrollToBottom.event,this.modes=(0,a.clone)(c),this.decPrivateModes=(0,a.clone)(h)}reset(){this.modes=(0,a.clone)(c),this.decPrivateModes=(0,a.clone)(h)}triggerDataEvent(e,t=!1){if(this._optionsService.rawOptions.disableStdin)return;const r=this._bufferService.buffer;t&&this._optionsService.rawOptions.scrollOnUserInput&&r.ybase!==r.ydisp&&this._onRequestScrollToBottom.fire(),t&&this._onUserInput.fire(),this._logService.debug(`sending data "${e}"`,(()=>e.split("").map((e=>e.charCodeAt(0))))),this._onData.fire(e)}triggerBinaryEvent(e){this._optionsService.rawOptions.disableStdin||(this._logService.debug(`sending binary "${e}"`,(()=>e.split("").map((e=>e.charCodeAt(0))))),this._onBinary.fire(e))}};u=i([s(0,n.IBufferService),s(1,n.ILogService),s(2,n.IOptionsService)],u),t.CoreService=u},9074:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DecorationService=void 0;const i=r(8055),s=r(8460),n=r(844),o=r(6106);let a=0,l=0;class c extends n.Disposable{constructor(){super(),this._decorations=new o.SortedList((e=>null==e?void 0:e.marker.line)),this._onDecorationRegistered=this.register(new s.EventEmitter),this.onDecorationRegistered=this._onDecorationRegistered.event,this._onDecorationRemoved=this.register(new s.EventEmitter),this.onDecorationRemoved=this._onDecorationRemoved.event,this.register((0,n.toDisposable)((()=>{for(const e of this._decorations.values())this._onDecorationRemoved.fire(e);this.reset()})))}get decorations(){return this._decorations.values()}registerDecoration(e){if(e.marker.isDisposed)return;const t=new h(e);if(t){const e=t.marker.onDispose((()=>t.dispose()));t.onDispose((()=>{t&&(this._decorations.delete(t)&&this._onDecorationRemoved.fire(t),e.dispose())})),this._decorations.insert(t),this._onDecorationRegistered.fire(t)}return t}reset(){for(const e of this._decorations.values())e.dispose();this._decorations.clear()}*getDecorationsAtCell(e,t,r){var i,s,n;let o=0,a=0;for(const l of this._decorations.getKeyIterator(t))o=null!==(i=l.options.x)&&void 0!==i?i:0,a=o+(null!==(s=l.options.width)&&void 0!==s?s:1),e>=o&&e<a&&(!r||(null!==(n=l.options.layer)&&void 0!==n?n:"bottom")===r)&&(yield l)}forEachDecorationAtCell(e,t,r,i){this._decorations.forEachByKey(t,(t=>{var s,n,o;a=null!==(s=t.options.x)&&void 0!==s?s:0,l=a+(null!==(n=t.options.width)&&void 0!==n?n:1),e>=a&&e<l&&(!r||(null!==(o=t.options.layer)&&void 0!==o?o:"bottom")===r)&&i(t)}))}dispose(){for(const e of this._decorations.values())this._onDecorationRemoved.fire(e);this.reset()}}t.DecorationService=c;class h extends n.Disposable{constructor(e){super(),this.options=e,this.onRenderEmitter=this.register(new s.EventEmitter),this.onRender=this.onRenderEmitter.event,this._onDispose=this.register(new s.EventEmitter),this.onDispose=this._onDispose.event,this._cachedBg=null,this._cachedFg=null,this.marker=e.marker,this.options.overviewRulerOptions&&!this.options.overviewRulerOptions.position&&(this.options.overviewRulerOptions.position="full")}get isDisposed(){return this._isDisposed}get backgroundColorRGB(){return null===this._cachedBg&&(this.options.backgroundColor?this._cachedBg=i.css.toColor(this.options.backgroundColor):this._cachedBg=void 0),this._cachedBg}get foregroundColorRGB(){return null===this._cachedFg&&(this.options.foregroundColor?this._cachedFg=i.css.toColor(this.options.foregroundColor):this._cachedFg=void 0),this._cachedFg}dispose(){this._onDispose.fire(),super.dispose()}}},4348:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstantiationService=t.ServiceCollection=void 0;const i=r(2585),s=r(8343);class n{constructor(...e){this._entries=new Map;for(const[t,r]of e)this.set(t,r)}set(e,t){const r=this._entries.get(e);return this._entries.set(e,t),r}forEach(e){for(const[t,r]of this._entries.entries())e(t,r)}has(e){return this._entries.has(e)}get(e){return this._entries.get(e)}}t.ServiceCollection=n,t.InstantiationService=class{constructor(){this._services=new n,this._services.set(i.IInstantiationService,this)}setService(e,t){this._services.set(e,t)}getService(e){return this._services.get(e)}createInstance(e,...t){const r=(0,s.getServiceDependencies)(e).sort(((e,t)=>e.index-t.index)),i=[];for(const t of r){const r=this._services.get(t.id);if(!r)throw new Error(`[createInstance] ${e.name} depends on UNKNOWN service ${t.id}.`);i.push(r)}const n=r.length>0?r[0].index:t.length;if(t.length!==n)throw new Error(`[createInstance] First service dependency of ${e.name} at position ${n+1} conflicts with ${t.length} static arguments`);return new e(...[...t,...i])}}},7866:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.LogService=void 0;const n=r(844),o=r(2585),a={debug:o.LogLevelEnum.DEBUG,info:o.LogLevelEnum.INFO,warn:o.LogLevelEnum.WARN,error:o.LogLevelEnum.ERROR,off:o.LogLevelEnum.OFF};let l=class extends n.Disposable{constructor(e){super(),this._optionsService=e,this.logLevel=o.LogLevelEnum.OFF,this._updateLogLevel(),this.register(this._optionsService.onSpecificOptionChange("logLevel",(()=>this._updateLogLevel())))}_updateLogLevel(){this.logLevel=a[this._optionsService.rawOptions.logLevel]}_evalLazyOptionalParams(e){for(let t=0;t<e.length;t++)"function"==typeof e[t]&&(e[t]=e[t]())}_log(e,t,r){this._evalLazyOptionalParams(r),e.call(console,"xterm.js: "+t,...r)}debug(e,...t){this.logLevel<=o.LogLevelEnum.DEBUG&&this._log(console.log,e,t)}info(e,...t){this.logLevel<=o.LogLevelEnum.INFO&&this._log(console.info,e,t)}warn(e,...t){this.logLevel<=o.LogLevelEnum.WARN&&this._log(console.warn,e,t)}error(e,...t){this.logLevel<=o.LogLevelEnum.ERROR&&this._log(console.error,e,t)}};l=i([s(0,o.IOptionsService)],l),t.LogService=l},7302:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OptionsService=t.DEFAULT_OPTIONS=void 0;const i=r(8460),s=r(6114),n=r(844);t.DEFAULT_OPTIONS={cols:80,rows:24,cursorBlink:!1,cursorStyle:"block",cursorWidth:1,customGlyphs:!0,drawBoldTextInBrightColors:!0,fastScrollModifier:"alt",fastScrollSensitivity:5,fontFamily:"courier-new, courier, monospace",fontSize:15,fontWeight:"normal",fontWeightBold:"bold",lineHeight:1,letterSpacing:0,linkHandler:null,logLevel:"info",scrollback:1e3,scrollOnUserInput:!0,scrollSensitivity:1,screenReaderMode:!1,smoothScrollDuration:0,macOptionIsMeta:!1,macOptionClickForcesSelection:!1,minimumContrastRatio:1,disableStdin:!1,allowProposedApi:!1,allowTransparency:!1,tabStopWidth:8,theme:{},rightClickSelectsWord:s.isMac,windowOptions:{},windowsMode:!1,windowsPty:{},wordSeparator:" ()[]{}',\"`",altClickMovesCursor:!0,convertEol:!1,termName:"xterm",cancelEvents:!1,overviewRulerWidth:0};const o=["normal","bold","100","200","300","400","500","600","700","800","900"];class a extends n.Disposable{constructor(e){super(),this._onOptionChange=this.register(new i.EventEmitter),this.onOptionChange=this._onOptionChange.event;const r=Object.assign({},t.DEFAULT_OPTIONS);for(const t in e)if(t in r)try{const i=e[t];r[t]=this._sanitizeAndValidateOption(t,i)}catch(e){console.error(e)}this.rawOptions=r,this.options=Object.assign({},r),this._setupOptions()}onSpecificOptionChange(e,t){return this.onOptionChange((r=>{r===e&&t(this.rawOptions[e])}))}onMultipleOptionChange(e,t){return this.onOptionChange((r=>{-1!==e.indexOf(r)&&t()}))}_setupOptions(){const e=e=>{if(!(e in t.DEFAULT_OPTIONS))throw new Error(`No option with key "${e}"`);return this.rawOptions[e]},r=(e,r)=>{if(!(e in t.DEFAULT_OPTIONS))throw new Error(`No option with key "${e}"`);r=this._sanitizeAndValidateOption(e,r),this.rawOptions[e]!==r&&(this.rawOptions[e]=r,this._onOptionChange.fire(e))};for(const t in this.rawOptions){const i={get:e.bind(this,t),set:r.bind(this,t)};Object.defineProperty(this.options,t,i)}}_sanitizeAndValidateOption(e,r){switch(e){case"cursorStyle":if(r||(r=t.DEFAULT_OPTIONS[e]),!function(e){return"block"===e||"underline"===e||"bar"===e}(r))throw new Error(`"${r}" is not a valid value for ${e}`);break;case"wordSeparator":r||(r=t.DEFAULT_OPTIONS[e]);break;case"fontWeight":case"fontWeightBold":if("number"==typeof r&&1<=r&&r<=1e3)break;r=o.includes(r)?r:t.DEFAULT_OPTIONS[e];break;case"cursorWidth":r=Math.floor(r);case"lineHeight":case"tabStopWidth":if(r<1)throw new Error(`${e} cannot be less than 1, value: ${r}`);break;case"minimumContrastRatio":r=Math.max(1,Math.min(21,Math.round(10*r)/10));break;case"scrollback":if((r=Math.min(r,4294967295))<0)throw new Error(`${e} cannot be less than 0, value: ${r}`);break;case"fastScrollSensitivity":case"scrollSensitivity":if(r<=0)throw new Error(`${e} cannot be less than or equal to 0, value: ${r}`);break;case"rows":case"cols":if(!r&&0!==r)throw new Error(`${e} must be numeric, value: ${r}`);break;case"windowsPty":r=null!=r?r:{}}return r}}t.OptionsService=a},2660:function(e,t,r){var i=this&&this.__decorate||function(e,t,r,i){var s,n=arguments.length,o=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,r):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(n<3?s(o):n>3?s(t,r,o):s(t,r))||o);return n>3&&o&&Object.defineProperty(t,r,o),o},s=this&&this.__param||function(e,t){return function(r,i){t(r,i,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OscLinkService=void 0;const n=r(2585);let o=class{constructor(e){this._bufferService=e,this._nextId=1,this._entriesWithId=new Map,this._dataByLinkId=new Map}registerLink(e){const t=this._bufferService.buffer;if(void 0===e.id){const r=t.addMarker(t.ybase+t.y),i={data:e,id:this._nextId++,lines:[r]};return r.onDispose((()=>this._removeMarkerFromLink(i,r))),this._dataByLinkId.set(i.id,i),i.id}const r=e,i=this._getEntryIdKey(r),s=this._entriesWithId.get(i);if(s)return this.addLineToLink(s.id,t.ybase+t.y),s.id;const n=t.addMarker(t.ybase+t.y),o={id:this._nextId++,key:this._getEntryIdKey(r),data:r,lines:[n]};return n.onDispose((()=>this._removeMarkerFromLink(o,n))),this._entriesWithId.set(o.key,o),this._dataByLinkId.set(o.id,o),o.id}addLineToLink(e,t){const r=this._dataByLinkId.get(e);if(r&&r.lines.every((e=>e.line!==t))){const e=this._bufferService.buffer.addMarker(t);r.lines.push(e),e.onDispose((()=>this._removeMarkerFromLink(r,e)))}}getLinkData(e){var t;return null===(t=this._dataByLinkId.get(e))||void 0===t?void 0:t.data}_getEntryIdKey(e){return`${e.id};;${e.uri}`}_removeMarkerFromLink(e,t){const r=e.lines.indexOf(t);-1!==r&&(e.lines.splice(r,1),0===e.lines.length&&(void 0!==e.data.id&&this._entriesWithId.delete(e.key),this._dataByLinkId.delete(e.id)))}};o=i([s(0,n.IBufferService)],o),t.OscLinkService=o},8343:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createDecorator=t.getServiceDependencies=t.serviceRegistry=void 0,t.serviceRegistry=new Map,t.getServiceDependencies=function(e){return e.di$dependencies||[]},t.createDecorator=function(e){if(t.serviceRegistry.has(e))return t.serviceRegistry.get(e);const r=function(e,t,i){if(3!==arguments.length)throw new Error("@IServiceName-decorator can only be used to decorate a parameter");!function(e,t,r){t.di$target===t?t.di$dependencies.push({id:e,index:r}):(t.di$dependencies=[{id:e,index:r}],t.di$target=t)}(r,e,i)};return r.toString=()=>e,t.serviceRegistry.set(e,r),r}},2585:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IDecorationService=t.IUnicodeService=t.IOscLinkService=t.IOptionsService=t.ILogService=t.LogLevelEnum=t.IInstantiationService=t.ICharsetService=t.ICoreService=t.ICoreMouseService=t.IBufferService=void 0;const i=r(8343);var s;t.IBufferService=(0,i.createDecorator)("BufferService"),t.ICoreMouseService=(0,i.createDecorator)("CoreMouseService"),t.ICoreService=(0,i.createDecorator)("CoreService"),t.ICharsetService=(0,i.createDecorator)("CharsetService"),t.IInstantiationService=(0,i.createDecorator)("InstantiationService"),(s=t.LogLevelEnum||(t.LogLevelEnum={}))[s.DEBUG=0]="DEBUG",s[s.INFO=1]="INFO",s[s.WARN=2]="WARN",s[s.ERROR=3]="ERROR",s[s.OFF=4]="OFF",t.ILogService=(0,i.createDecorator)("LogService"),t.IOptionsService=(0,i.createDecorator)("OptionsService"),t.IOscLinkService=(0,i.createDecorator)("OscLinkService"),t.IUnicodeService=(0,i.createDecorator)("UnicodeService"),t.IDecorationService=(0,i.createDecorator)("DecorationService")},1480:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnicodeService=void 0;const i=r(8460),s=r(225);t.UnicodeService=class{constructor(){this._providers=Object.create(null),this._active="",this._onChange=new i.EventEmitter,this.onChange=this._onChange.event;const e=new s.UnicodeV6;this.register(e),this._active=e.version,this._activeProvider=e}dispose(){this._onChange.dispose()}get versions(){return Object.keys(this._providers)}get activeVersion(){return this._active}set activeVersion(e){if(!this._providers[e])throw new Error(`unknown Unicode version "${e}"`);this._active=e,this._activeProvider=this._providers[e],this._onChange.fire(e)}register(e){this._providers[e.version]=e}wcwidth(e){return this._activeProvider.wcwidth(e)}getStringCellWidth(e){let t=0;const r=e.length;for(let i=0;i<r;++i){let s=e.charCodeAt(i);if(55296<=s&&s<=56319){if(++i>=r)return t+this.wcwidth(s);const n=e.charCodeAt(i);56320<=n&&n<=57343?s=1024*(s-55296)+n-56320+65536:t+=this.wcwidth(n)}t+=this.wcwidth(s)}return t}}}},t={};function r(i){var s=t[i];if(void 0!==s)return s.exports;var n=t[i]={exports:{}};return e[i].call(n.exports,n,n.exports,r),n.exports}var i={};return(()=>{var e=i;Object.defineProperty(e,"__esModule",{value:!0}),e.Terminal=void 0;const t=r(3236),s=r(9042),n=r(7975),o=r(7090),a=r(5741),l=r(8285),c=["cols","rows"];e.Terminal=class{constructor(e){this._core=new t.Terminal(e),this._addonManager=new a.AddonManager,this._publicOptions=Object.assign({},this._core.options);const r=e=>this._core.options[e],i=(e,t)=>{this._checkReadonlyOptions(e),this._core.options[e]=t};for(const e in this._core.options){const t={get:r.bind(this,e),set:i.bind(this,e)};Object.defineProperty(this._publicOptions,e,t)}}_checkReadonlyOptions(e){if(c.includes(e))throw new Error(`Option "${e}" can only be set in the constructor`)}_checkProposedApi(){if(!this._core.optionsService.rawOptions.allowProposedApi)throw new Error("You must set the allowProposedApi option to true to use proposed API")}get onBell(){return this._core.onBell}get onBinary(){return this._core.onBinary}get onCursorMove(){return this._core.onCursorMove}get onData(){return this._core.onData}get onKey(){return this._core.onKey}get onLineFeed(){return this._core.onLineFeed}get onRender(){return this._core.onRender}get onResize(){return this._core.onResize}get onScroll(){return this._core.onScroll}get onSelectionChange(){return this._core.onSelectionChange}get onTitleChange(){return this._core.onTitleChange}get onWriteParsed(){return this._core.onWriteParsed}get element(){return this._core.element}get parser(){return this._parser||(this._parser=new n.ParserApi(this._core)),this._parser}get unicode(){return this._checkProposedApi(),new o.UnicodeApi(this._core)}get textarea(){return this._core.textarea}get rows(){return this._core.rows}get cols(){return this._core.cols}get buffer(){return this._buffer||(this._buffer=new l.BufferNamespaceApi(this._core)),this._buffer}get markers(){return this._checkProposedApi(),this._core.markers}get modes(){const e=this._core.coreService.decPrivateModes;let t="none";switch(this._core.coreMouseService.activeProtocol){case"X10":t="x10";break;case"VT200":t="vt200";break;case"DRAG":t="drag";break;case"ANY":t="any"}return{applicationCursorKeysMode:e.applicationCursorKeys,applicationKeypadMode:e.applicationKeypad,bracketedPasteMode:e.bracketedPasteMode,insertMode:this._core.coreService.modes.insertMode,mouseTrackingMode:t,originMode:e.origin,reverseWraparoundMode:e.reverseWraparound,sendFocusMode:e.sendFocus,wraparoundMode:e.wraparound}}get options(){return this._publicOptions}set options(e){for(const t in e)this._publicOptions[t]=e[t]}blur(){this._core.blur()}focus(){this._core.focus()}resize(e,t){this._verifyIntegers(e,t),this._core.resize(e,t)}open(e){this._core.open(e)}attachCustomKeyEventHandler(e){this._core.attachCustomKeyEventHandler(e)}registerLinkProvider(e){return this._core.registerLinkProvider(e)}registerCharacterJoiner(e){return this._checkProposedApi(),this._core.registerCharacterJoiner(e)}deregisterCharacterJoiner(e){this._checkProposedApi(),this._core.deregisterCharacterJoiner(e)}registerMarker(e=0){return this._verifyIntegers(e),this._core.addMarker(e)}registerDecoration(e){var t,r,i;return this._checkProposedApi(),this._verifyPositiveIntegers(null!==(t=e.x)&&void 0!==t?t:0,null!==(r=e.width)&&void 0!==r?r:0,null!==(i=e.height)&&void 0!==i?i:0),this._core.registerDecoration(e)}hasSelection(){return this._core.hasSelection()}select(e,t,r){this._verifyIntegers(e,t,r),this._core.select(e,t,r)}getSelection(){return this._core.getSelection()}getSelectionPosition(){return this._core.getSelectionPosition()}clearSelection(){this._core.clearSelection()}selectAll(){this._core.selectAll()}selectLines(e,t){this._verifyIntegers(e,t),this._core.selectLines(e,t)}dispose(){this._addonManager.dispose(),this._core.dispose()}scrollLines(e){this._verifyIntegers(e),this._core.scrollLines(e)}scrollPages(e){this._verifyIntegers(e),this._core.scrollPages(e)}scrollToTop(){this._core.scrollToTop()}scrollToBottom(){this._core.scrollToBottom()}scrollToLine(e){this._verifyIntegers(e),this._core.scrollToLine(e)}clear(){this._core.clear()}write(e,t){this._core.write(e,t)}writeln(e,t){this._core.write(e),this._core.write("\r\n",t)}paste(e){this._core.paste(e)}refresh(e,t){this._verifyIntegers(e,t),this._core.refresh(e,t)}reset(){this._core.reset()}clearTextureAtlas(){this._core.clearTextureAtlas()}loadAddon(e){return this._addonManager.loadAddon(this,e)}static get strings(){return s}_verifyIntegers(...e){for(const t of e)if(t===1/0||isNaN(t)||t%1!=0)throw new Error("This API only accepts integers")}_verifyPositiveIntegers(...e){for(const t of e)if(t&&(t===1/0||isNaN(t)||t%1!=0||t<0))throw new Error("This API only accepts positive integers")}}})(),i})(),e.exports=t()}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nc=void 0;var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__);var e=__webpack_require__(294),t=__webpack_require__(745),r=__webpack_require__(869),i=function(){return i=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var s in t=arguments[r])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},i.apply(this,arguments)};function s(e,t,r){if(r||2===arguments.length)for(var i,s=0,n=t.length;s<n;s++)!i&&s in t||(i||(i=Array.prototype.slice.call(t,0,s)),i[s]=t[s]);return e.concat(i||Array.prototype.slice.call(t))}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var n=__webpack_require__(774),o=__webpack_require__.n(n),a="-ms-",l="-moz-",c="-webkit-",h="comm",u="rule",d="decl",f="@import",p="@keyframes",v="@layer",g=Math.abs,_=String.fromCharCode,m=Object.assign;function b(e){return e.trim()}function S(e,t){return(e=t.exec(e))?e[0]:e}function y(e,t,r){return e.replace(t,r)}function C(e,t){return e.indexOf(t)}function w(e,t){return 0|e.charCodeAt(t)}function k(e,t,r){return e.slice(t,r)}function E(e){return e.length}function A(e){return e.length}function x(e,t){return t.push(e),e}function L(e,t){return e.filter((function(e){return!S(e,t)}))}var R=1,T=1,D=0,I=0,P=0,B="";function O(e,t,r,i,s,n,o,a){return{value:e,root:t,parent:r,type:i,props:s,children:n,line:R,column:T,length:o,return:"",siblings:a}}function M(e,t){return m(O("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},t)}function N(e){for(;e.root;)e=M(e.root,{children:[e]});x(e,e.siblings)}function F(){return P=I>0?w(B,--I):0,T--,10===P&&(T=1,R--),P}function H(){return P=I<D?w(B,I++):0,T++,10===P&&(T=1,R++),P}function U(){return w(B,I)}function z(){return I}function $(e,t){return k(B,e,t)}function j(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function W(e){return b($(I-1,q(91===e?e+2:40===e?e+1:e)))}function K(e){for(;(P=U())&&P<33;)H();return j(e)>2||j(P)>3?"":" "}function V(e,t){for(;--t&&H()&&!(P<48||P>102||P>57&&P<65||P>70&&P<97););return $(e,z()+(t<6&&32==U()&&32==H()))}function q(e){for(;H();)switch(P){case e:return I;case 34:case 39:34!==e&&39!==e&&q(P);break;case 40:41===e&&q(e);break;case 92:H()}return I}function Z(e,t){for(;H()&&e+P!==57&&(e+P!==84||47!==U()););return"/*"+$(t,I-1)+"*"+_(47===e?e:H())}function G(e){for(;!j(U());)H();return $(e,I)}function Y(e,t){for(var r="",i=0;i<e.length;i++)r+=t(e[i],i,e,t)||"";return r}function X(e,t,r,i){switch(e.type){case v:if(e.children.length)break;case f:case d:return e.return=e.return||e.value;case h:return"";case p:return e.return=e.value+"{"+Y(e.children,i)+"}";case u:if(!E(e.value=e.props.join(",")))return""}return E(r=Y(e.children,i))?e.return=e.value+"{"+r+"}":""}function J(e,t,r){switch(function(e,t){return 45^w(e,0)?(((t<<2^w(e,0))<<2^w(e,1))<<2^w(e,2))<<2^w(e,3):0}(e,t)){case 5103:return c+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return c+e+e;case 4789:return l+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return c+e+l+e+a+e+e;case 5936:switch(w(e,t+11)){case 114:return c+e+a+y(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return c+e+a+y(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return c+e+a+y(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return c+e+a+e+e;case 6165:return c+e+a+"flex-"+e+e;case 5187:return c+e+y(e,/(\w+).+(:[^]+)/,c+"box-$1$2"+a+"flex-$1$2")+e;case 5443:return c+e+a+"flex-item-"+y(e,/flex-|-self/g,"")+(S(e,/flex-|baseline/)?"":a+"grid-row-"+y(e,/flex-|-self/g,""))+e;case 4675:return c+e+a+"flex-line-pack"+y(e,/align-content|flex-|-self/g,"")+e;case 5548:return c+e+a+y(e,"shrink","negative")+e;case 5292:return c+e+a+y(e,"basis","preferred-size")+e;case 6060:return c+"box-"+y(e,"-grow","")+c+e+a+y(e,"grow","positive")+e;case 4554:return c+y(e,/([^-])(transform)/g,"$1"+c+"$2")+e;case 6187:return y(y(y(e,/(zoom-|grab)/,c+"$1"),/(image-set)/,c+"$1"),e,"")+e;case 5495:case 3959:return y(e,/(image-set\([^]*)/,c+"$1$`$1");case 4968:return y(y(e,/(.+:)(flex-)?(.*)/,c+"box-pack:$3"+a+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+c+e+e;case 4200:if(!S(e,/flex-|baseline/))return a+"grid-column-align"+k(e,t)+e;break;case 2592:case 3360:return a+y(e,"template-","")+e;case 4384:case 3616:return r&&r.some((function(e,r){return t=r,S(e.props,/grid-\w+-end/)}))?~C(e+(r=r[t].value),"span")?e:a+y(e,"-start","")+e+a+"grid-row-span:"+(~C(r,"span")?S(r,/\d+/):+S(r,/\d+/)-+S(e,/\d+/))+";":a+y(e,"-start","")+e;case 4896:case 4128:return r&&r.some((function(e){return S(e.props,/grid-\w+-start/)}))?e:a+y(y(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return y(e,/(.+)-inline(.+)/,c+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(E(e)-1-t>6)switch(w(e,t+1)){case 109:if(45!==w(e,t+4))break;case 102:return y(e,/(.+:)(.+)-([^]+)/,"$1"+c+"$2-$3$1"+l+(108==w(e,t+3)?"$3":"$2-$3"))+e;case 115:return~C(e,"stretch")?J(y(e,"stretch","fill-available"),t,r)+e:e}break;case 5152:case 5920:return y(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,(function(t,r,i,s,n,o,l){return a+r+":"+i+l+(s?a+r+"-span:"+(n?o:+o-+i)+l:"")+e}));case 4949:if(121===w(e,t+6))return y(e,":",":"+c)+e;break;case 6444:switch(w(e,45===w(e,14)?18:11)){case 120:return y(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+c+(45===w(e,14)?"inline-":"")+"box$3$1"+c+"$2$3$1"+a+"$2box$3")+e;case 100:return y(e,":",":"+a)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return y(e,"scroll-","scroll-snap-")+e}return e}function Q(e,t,r,i){if(e.length>-1&&!e.return)switch(e.type){case d:return void(e.return=J(e.value,e.length,r));case p:return Y([M(e,{value:y(e.value,"@","@"+c)})],i);case u:if(e.length)return function(e,t){return e.map(t).join("")}(r=e.props,(function(t){switch(S(t,i=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":N(M(e,{props:[y(t,/:(read-\w+)/,":"+l+"$1")]})),N(M(e,{props:[t]})),m(e,{props:L(r,i)});break;case"::placeholder":N(M(e,{props:[y(t,/:(plac\w+)/,":"+c+"input-$1")]})),N(M(e,{props:[y(t,/:(plac\w+)/,":"+l+"$1")]})),N(M(e,{props:[y(t,/:(plac\w+)/,a+"input-$1")]})),N(M(e,{props:[t]})),m(e,{props:L(r,i)})}return""}))}}function ee(e){return function(e){return B="",e}(te("",null,null,null,[""],e=function(e){return R=T=1,D=E(B=e),I=0,[]}(e),0,[0],e))}function te(e,t,r,i,s,n,o,a,l){for(var c=0,h=0,u=o,d=0,f=0,p=0,v=1,g=1,m=1,b=0,S="",k=s,A=n,L=i,R=S;g;)switch(p=b,b=H()){case 40:if(108!=p&&58==w(R,u-1)){-1!=C(R+=y(W(b),"&","&\f"),"&\f")&&(m=-1);break}case 34:case 39:case 91:R+=W(b);break;case 9:case 10:case 13:case 32:R+=K(p);break;case 92:R+=V(z()-1,7);continue;case 47:switch(U()){case 42:case 47:x(ie(Z(H(),z()),t,r,l),l);break;default:R+="/"}break;case 123*v:a[c++]=E(R)*m;case 125*v:case 59:case 0:switch(b){case 0:case 125:g=0;case 59+h:-1==m&&(R=y(R,/\f/g,"")),f>0&&E(R)-u&&x(f>32?se(R+";",i,r,u-1,l):se(y(R," ","")+";",i,r,u-2,l),l);break;case 59:R+=";";default:if(x(L=re(R,t,r,c,h,s,a,S,k=[],A=[],u,n),n),123===b)if(0===h)te(R,t,L,L,k,n,u,a,A);else switch(99===d&&110===w(R,3)?100:d){case 100:case 108:case 109:case 115:te(e,L,L,i&&x(re(e,L,L,0,0,s,a,S,s,k=[],u,A),A),s,A,u,a,i?k:A);break;default:te(R,L,L,L,[""],A,0,a,A)}}c=h=f=0,v=m=1,S=R="",u=o;break;case 58:u=1+E(R),f=p;default:if(v<1)if(123==b)--v;else if(125==b&&0==v++&&125==F())continue;switch(R+=_(b),b*v){case 38:m=h>0?1:(R+="\f",-1);break;case 44:a[c++]=(E(R)-1)*m,m=1;break;case 64:45===U()&&(R+=W(H())),d=U(),h=u=E(S=R+=G(z())),b++;break;case 45:45===p&&2==E(R)&&(v=0)}}return n}function re(e,t,r,i,s,n,o,a,l,c,h,d){for(var f=s-1,p=0===s?n:[""],v=A(p),_=0,m=0,S=0;_<i;++_)for(var C=0,w=k(e,f+1,f=g(m=o[_])),E=e;C<v;++C)(E=b(m>0?p[C]+" "+w:y(w,/&\f/g,p[C])))&&(l[S++]=E);return O(e,t,r,0===s?u:a,l,c,h,d)}function ie(e,t,r,i){return O(e,t,r,h,_(P),k(e,2,-2),0,i)}function se(e,t,r,i,s){return O(e,t,r,d,k(e,0,i),k(e,i+1,-1),i,s)}var ne={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},oe="undefined"!=typeof process&&void 0!==process.env&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",ae="undefined"!=typeof window&&"HTMLElement"in window,le=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),ce=(new Set,Object.freeze([])),he=Object.freeze({});var ue=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),de=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,fe=/(^-|-$)/g;function pe(e){return e.replace(de,"-").replace(fe,"")}var ve=/(a)(d)/gi,ge=function(e){return String.fromCharCode(e+(e>25?39:97))};function _e(e){var t,r="";for(t=Math.abs(e);t>52;t=t/52|0)r=ge(t%52)+r;return(ge(t%52)+r).replace(ve,"$1-$2")}var me,be=function(e,t){for(var r=t.length;r;)e=33*e^t.charCodeAt(--r);return e},Se=function(e){return be(5381,e)};function ye(e){return"string"==typeof e&&!0}var Ce="function"==typeof Symbol&&Symbol.for,we=Ce?Symbol.for("react.memo"):60115,ke=Ce?Symbol.for("react.forward_ref"):60112,Ee={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},Ae={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},xe={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Le=((me={})[ke]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},me[we]=xe,me);function Re(e){return("type"in(t=e)&&t.type.$$typeof)===we?xe:"$$typeof"in e?Le[e.$$typeof]:Ee;var t}var Te=Object.defineProperty,De=Object.getOwnPropertyNames,Ie=Object.getOwnPropertySymbols,Pe=Object.getOwnPropertyDescriptor,Be=Object.getPrototypeOf,Oe=Object.prototype;function Me(e,t,r){if("string"!=typeof t){if(Oe){var i=Be(t);i&&i!==Oe&&Me(e,i,r)}var s=De(t);Ie&&(s=s.concat(Ie(t)));for(var n=Re(e),o=Re(t),a=0;a<s.length;++a){var l=s[a];if(!(l in Ae||r&&r[l]||o&&l in o||n&&l in n)){var c=Pe(t,l);try{Te(e,l,c)}catch(e){}}}}return e}function Ne(e){return"function"==typeof e}function Fe(e){return"object"==typeof e&&"styledComponentId"in e}function He(e,t){return e&&t?"".concat(e," ").concat(t):e||t||""}function Ue(e,t){if(0===e.length)return"";for(var r=e[0],i=1;i<e.length;i++)r+=t?t+e[i]:e[i];return r}function ze(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function $e(e,t,r){if(void 0===r&&(r=!1),!r&&!ze(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var i=0;i<t.length;i++)e[i]=$e(e[i],t[i]);else if(ze(t))for(var i in t)e[i]=$e(e[i],t[i]);return e}function je(e,t){Object.defineProperty(e,"toString",{value:t})}function We(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(e," for more information.").concat(t.length>0?" Args: ".concat(t.join(", ")):""))}var Ke=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var t=0,r=0;r<e;r++)t+=this.groupSizes[r];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var r=this.groupSizes,i=r.length,s=i;e>=s;)if((s<<=1)<0)throw We(16,"".concat(e));this.groupSizes=new Uint32Array(s),this.groupSizes.set(r),this.length=s;for(var n=i;n<s;n++)this.groupSizes[n]=0}for(var o=this.indexOfGroup(e+1),a=(n=0,t.length);n<a;n++)this.tag.insertRule(o,t[n])&&(this.groupSizes[e]++,o++)},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],r=this.indexOfGroup(e),i=r+t;this.groupSizes[e]=0;for(var s=r;s<i;s++)this.tag.deleteRule(r)}},e.prototype.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var r=this.groupSizes[e],i=this.indexOfGroup(e),s=i+r,n=i;n<s;n++)t+="".concat(this.tag.getRule(n)).concat("/*!sc*/\n");return t},e}(),Ve=new Map,qe=new Map,Ze=1,Ge=function(e){if(Ve.has(e))return Ve.get(e);for(;qe.has(Ze);)Ze++;var t=Ze++;return Ve.set(e,t),qe.set(t,e),t},Ye=function(e,t){Ve.set(e,t),qe.set(t,e)},Xe="style[".concat(oe,"][").concat("data-styled-version",'="').concat("6.0.3",'"]'),Je=new RegExp("^".concat(oe,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),Qe=function(e,t,r){for(var i,s=r.split(","),n=0,o=s.length;n<o;n++)(i=s[n])&&e.registerName(t,i)},et=function(e,t){for(var r,i=(null!==(r=t.textContent)&&void 0!==r?r:"").split("/*!sc*/\n"),s=[],n=0,o=i.length;n<o;n++){var a=i[n].trim();if(a){var l=a.match(Je);if(l){var c=0|parseInt(l[1],10),h=l[2];0!==c&&(Ye(h,c),Qe(e,h,l[3]),e.getTag().insertRules(c,s)),s.length=0}else s.push(a)}}};function tt(){return __webpack_require__.nc}var rt=function(e){var t=document.head,r=e||t,i=document.createElement("style"),s=function(e){var t=Array.from(e.querySelectorAll("style[".concat(oe,"]")));return t[t.length-1]}(r),n=void 0!==s?s.nextSibling:null;i.setAttribute(oe,"active"),i.setAttribute("data-styled-version","6.0.3");var o=tt();return o&&i.setAttribute("nonce",o),r.insertBefore(i,n),i},it=function(){function e(e){this.element=rt(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,r=0,i=t.length;r<i;r++){var s=t[r];if(s.ownerNode===e)return s}throw We(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},e}(),st=function(){function e(e){this.element=rt(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var r=document.createTextNode(t);return this.element.insertBefore(r,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),nt=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),ot=ae,at={isServer:!ae,useCSSOMInjection:!le},lt=function(){function e(e,t,r){void 0===e&&(e=he),void 0===t&&(t={});var s=this;this.options=i(i({},at),e),this.gs=t,this.names=new Map(r),this.server=!!e.isServer,!this.server&&ae&&ot&&(ot=!1,function(e){for(var t=document.querySelectorAll(Xe),r=0,i=t.length;r<i;r++){var s=t[r];s&&"active"!==s.getAttribute(oe)&&(et(e,s),s.parentNode&&s.parentNode.removeChild(s))}}(this)),je(this,(function(){return function(e){for(var t=e.getTag(),r=t.length,i="",s=function(r){var s=function(e){return qe.get(e)}(r);if(void 0===s)return"continue";var n=e.names.get(s),o=t.getGroup(r);if(void 0===n||0===o.length)return"continue";var a="".concat(oe,".g").concat(r,'[id="').concat(s,'"]'),l="";void 0!==n&&n.forEach((function(e){e.length>0&&(l+="".concat(e,","))})),i+="".concat(o).concat(a,'{content:"').concat(l,'"}').concat("/*!sc*/\n")},n=0;n<r;n++)s(n);return i}(s)}))}return e.registerId=function(e){return Ge(e)},e.prototype.reconstructWithOptions=function(t,r){return void 0===r&&(r=!0),new e(i(i({},this.options),t),this.gs,r&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var t=e.useCSSOMInjection,r=e.target;return e.isServer?new nt(r):t?new it(r):new st(r)}(this.options),new Ke(e)));var e},e.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},e.prototype.registerName=function(e,t){if(Ge(e),this.names.has(e))this.names.get(e).add(t);else{var r=new Set;r.add(t),this.names.set(e,r)}},e.prototype.insertRules=function(e,t,r){this.registerName(e,t),this.getTag().insertRules(Ge(e),r)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(Ge(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),ct=/&/g,ht=/^\s*\/\/.*$/gm;function ut(e,t){return e.map((function(e){return"rule"===e.type&&(e.value="".concat(t," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(t," ")),e.props=e.props.map((function(e){return"".concat(t," ").concat(e)}))),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=ut(e.children,t)),e}))}function dt(e){var t,r,i,s=void 0===e?he:e,n=s.options,o=void 0===n?he:n,a=s.plugins,l=void 0===a?ce:a,c=function(e,i,s){return s===r||s.startsWith(r)&&s.endsWith(r)&&s.replaceAll(r,"").length>0?".".concat(t):e},h=l.slice();h.push((function(e){e.type===u&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(ct,r).replace(i,c))})),o.prefix&&h.push(Q),h.push(X);var d=function(e,s,n,a){void 0===s&&(s=""),void 0===n&&(n=""),void 0===a&&(a="&"),t=a,r=s,i=new RegExp("\\".concat(r,"\\b"),"g");var l=e.replace(ht,""),c=ee(n||s?"".concat(n," ").concat(s," { ").concat(l," }"):l);o.namespace&&(c=ut(c,o.namespace));var u,d,f,p=[];return Y(c,(u=h.concat((f=function(e){return p.push(e)},function(e){e.root||(e=e.return)&&f(e)})),d=A(u),function(e,t,r,i){for(var s="",n=0;n<d;n++)s+=u[n](e,t,r,i)||"";return s})),p};return d.hash=l.length?l.reduce((function(e,t){return t.name||We(15),be(e,t.name)}),5381).toString():"",d}var ft=new lt,pt=dt(),vt=e.createContext({shouldForwardProp:void 0,styleSheet:ft,stylis:pt}),gt=(vt.Consumer,e.createContext(void 0));function _t(){return(0,e.useContext)(vt)}function mt(t){var r=(0,e.useState)(t.stylisPlugins),i=r[0],s=r[1],n=_t().styleSheet,a=(0,e.useMemo)((function(){var e=n;return t.sheet?e=t.sheet:t.target&&(e=e.reconstructWithOptions({target:t.target},!1)),t.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[t.disableCSSOMInjection,t.sheet,t.target,n]),l=(0,e.useMemo)((function(){return dt({options:{namespace:t.namespace,prefix:t.enableVendorPrefixes},plugins:i})}),[t.enableVendorPrefixes,t.namespace,i]);return(0,e.useEffect)((function(){o()(i,t.stylisPlugins)||s(t.stylisPlugins)}),[t.stylisPlugins]),e.createElement(vt.Provider,{value:{shouldForwardProp:t.shouldForwardProp,styleSheet:a,stylis:l}},e.createElement(gt.Provider,{value:l},t.children))}var bt=function(){function e(e,t){var r=this;this.inject=function(e,t){void 0===t&&(t=pt);var i=r.name+t.hash;e.hasNameForId(r.id,i)||e.insertRules(r.id,i,t(r.rules,i,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,je(this,(function(){throw We(12,String(r.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=pt),this.name+e.hash},e}(),St=function(e){return e>="A"&&e<="Z"};function yt(e){for(var t="",r=0;r<e.length;r++){var i=e[r];if(1===r&&"-"===i&&"-"===e[0])return e;St(i)?t+="-"+i.toLowerCase():t+=i}return t.startsWith("ms-")?"-"+t:t}var Ct=function(e){return null==e||!1===e||""===e},wt=function(e){var t,r,i=[];for(var n in e){var o=e[n];e.hasOwnProperty(n)&&!Ct(o)&&(Array.isArray(o)&&o.isCss||Ne(o)?i.push("".concat(yt(n),":"),o,";"):ze(o)?i.push.apply(i,s(s(["".concat(n," {")],wt(o),!1),["}"],!1)):i.push("".concat(yt(n),": ").concat((t=n,null==(r=o)||"boolean"==typeof r||""===r?"":"number"!=typeof r||0===r||t in ne||t.startsWith("--")?String(r).trim():"".concat(r,"px")),";")))}return i};function kt(e,t,r,i){return Ct(e)?[]:Fe(e)?[".".concat(e.styledComponentId)]:Ne(e)?!Ne(s=e)||s.prototype&&s.prototype.isReactComponent||!t?[e]:kt(e(t),t,r,i):e instanceof bt?r?(e.inject(r,i),[e.getName(i)]):[e]:ze(e)?wt(e):Array.isArray(e)?Array.prototype.concat.apply(ce,e.map((function(e){return kt(e,t,r,i)}))):[e.toString()];var s}function Et(e){for(var t=0;t<e.length;t+=1){var r=e[t];if(Ne(r)&&!Fe(r))return!1}return!0}var At=Se("6.0.3"),xt=function(){function e(e,t,r){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===r||r.isStatic)&&Et(e),this.componentId=t,this.baseHash=be(At,t),this.baseStyle=r,lt.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,r){var i=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,r):"";if(this.isStatic&&!r.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))i=He(i,this.staticRulesId);else{var s=Ue(kt(this.rules,e,t,r)),n=_e(be(this.baseHash,s)>>>0);if(!t.hasNameForId(this.componentId,n)){var o=r(s,".".concat(n),void 0,this.componentId);t.insertRules(this.componentId,n,o)}i=He(i,n),this.staticRulesId=n}else{for(var a=be(this.baseHash,r.hash),l="",c=0;c<this.rules.length;c++){var h=this.rules[c];if("string"==typeof h)l+=h;else if(h){var u=Ue(kt(h,e,t,r));a=be(a,u),l+=u}}if(l){var d=_e(a>>>0);t.hasNameForId(this.componentId,d)||t.insertRules(this.componentId,d,r(l,".".concat(d),void 0,this.componentId)),i=He(i,d)}}return i},e}(),Lt=e.createContext(void 0);Lt.Consumer;var Rt={};function Tt(t,r,s){var n=Fe(t),o=t,a=!ye(t),l=r.attrs,c=void 0===l?ce:l,h=r.componentId,u=void 0===h?function(e,t){var r="string"!=typeof e?"sc":pe(e);Rt[r]=(Rt[r]||0)+1;var i="".concat(r,"-").concat(function(e){return _e(Se(e)>>>0)}("6.0.3"+r+Rt[r]));return t?"".concat(t,"-").concat(i):i}(r.displayName,r.parentComponentId):h,d=(void 0===r.displayName&&function(e){ye(e)?"styled.".concat(e):"Styled(".concat(function(e){return e.displayName||e.name||"Component"}(e),")")}(t),r.displayName&&r.componentId?"".concat(pe(r.displayName),"-").concat(r.componentId):r.componentId||u),f=n&&o.attrs?o.attrs.concat(c).filter(Boolean):c,p=r.shouldForwardProp;if(n&&o.shouldForwardProp){var v=o.shouldForwardProp;if(r.shouldForwardProp){var g=r.shouldForwardProp;p=function(e,t){return v(e,t)&&g(e,t)}}else p=v}var _=new xt(s,d,n?o.componentStyle:void 0),m=e.forwardRef((function(t,r){return function(t,r,s){var n=t.attrs,o=t.componentStyle,a=t.defaultProps,l=t.foldedComponentIds,c=t.styledComponentId,h=t.target,u=e.useContext(Lt),d=_t(),f=t.shouldForwardProp||d.shouldForwardProp,p=function(e,t,r){for(var s,n=i(i({},t),{className:void 0,theme:r}),o=0;o<e.length;o+=1){var a=Ne(s=e[o])?s(n):s;for(var l in a)n[l]="className"===l?He(n[l],a[l]):"style"===l?i(i({},n[l]),a[l]):a[l]}return t.className&&(n.className=He(n.className,t.className)),n}(n,r,function(e,t,r){return void 0===r&&(r=he),e.theme!==r.theme&&e.theme||t||r.theme}(r,u,a)||he),v=p.as||h,g={};for(var _ in p)void 0===p[_]||"$"===_[0]||"as"===_||"theme"===_||("forwardedAs"===_?g.as=p.forwardedAs:f&&!f(_,v)||(g[_]=p[_]));var m=function(e,t){var r=_t();return e.generateAndInjectStyles(t,r.styleSheet,r.stylis)}(o,p),b=He(l,c);return m&&(b+=" "+m),p.className&&(b+=" "+p.className),g[ye(v)&&!ue.has(v)?"class":"className"]=b,g.ref=s,(0,e.createElement)(v,g)}(m,t,r)}));return m.attrs=f,m.componentStyle=_,m.shouldForwardProp=p,m.foldedComponentIds=n?He(o.foldedComponentIds,o.styledComponentId):"",m.styledComponentId=d,m.target=n?o.target:t,Object.defineProperty(m,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=n?function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];for(var i=0,s=t;i<s.length;i++)$e(e,s[i],!0);return e}({},o.defaultProps,e):e}}),je(m,(function(){return".".concat(m.styledComponentId)})),a&&Me(m,t,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),m}function Dt(e,t){for(var r=[e[0]],i=0,s=t.length;i<s;i+=1)r.push(t[i],e[i+1]);return r}new Set;var It=function(e){return Object.assign(e,{isCss:!0})};function Pt(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(Ne(e)||ze(e))return It(kt(Dt(ce,s([e],t,!0))));var i=e;return 0===t.length&&1===i.length&&"string"==typeof i[0]?kt(i):It(kt(Dt(i,t)))}function Bt(e,t,r){if(void 0===r&&(r=he),!t)throw We(1,t);var n=function(i){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];return e(t,r,Pt.apply(void 0,s([i],n,!1)))};return n.attrs=function(s){return Bt(e,t,i(i({},r),{attrs:Array.prototype.concat(r.attrs,s).filter(Boolean)}))},n.withConfig=function(s){return Bt(e,t,i(i({},r),s))},n}var Ot=function(e){return Bt(Tt,e)},Mt=Ot;ue.forEach((function(e){Mt[e]=Ot(e)})),function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Et(e),lt.registerId(this.componentId+1)}e.prototype.createStyles=function(e,t,r,i){var s=i(Ue(kt(this.rules,t,r,i)),""),n=this.componentId+e;r.insertRules(n,n,s)},e.prototype.removeStyles=function(e,t){t.clearRules(this.componentId+e)},e.prototype.renderStyles=function(e,t,r,i){e>2&&lt.registerId(this.componentId+e),this.removeStyles(e,r),this.createStyles(e,t,r,i)}}(),function(){function t(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString(),r=tt(),i=Ue([r&&'nonce="'.concat(r,'"'),"".concat(oe,'="true"'),"".concat("data-styled-version",'="').concat("6.0.3",'"')].filter(Boolean)," ");return"<style ".concat(i,">").concat(e,"</style>")},this.getStyleTags=function(){if(t.sealed)throw We(2);return t._emitSheetCSS()},this.getStyleElement=function(){var r;if(t.sealed)throw We(2);var s=((r={})[oe]="",r["data-styled-version"]="6.0.3",r.dangerouslySetInnerHTML={__html:t.instance.toString()},r),n=tt();return n&&(s.nonce=n),[e.createElement("style",i({},s,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=!0},this.instance=new lt({isServer:!0}),this.sealed=!1}t.prototype.collectStyles=function(t){if(this.sealed)throw We(2);return e.createElement(mt,{sheet:this.instance},t)},t.prototype.interleaveWithNodeStream=function(e){throw We(3)}}(),"__sc-".concat(oe,"__");var Nt=__webpack_require__(320);const Ft=e=>null!=e&&""!==e&&!1!==e&&0!==e;Mt.div`
   display:block;
   text-align:center;
`,Mt.div`
   display:inline-block;
`;class Ht extends e.Component{componentDidMount(){var e;if(this.mountedWorkaround)return;this.mountedWorkaround=!0;const t=null!==(e=document.getElementById("xterm"))&&void 0!==e?e:"",{xterm:r,handleKeyPress:i}=this.props;Ft(t)&&(r.open(t),r.onData((e=>i(e))),r.attachCustomKeyEventHandler((e=>(e.stopPropagation(),e.preventDefault(),Ft(e.ctrlKey)&&Ft(e.shiftKey)&&67===e.keyCode?navigator.clipboard.writeText(r.getSelection()):Ft(e.ctrlKey)&&Ft(e.shiftKey)&&86===e.keyCode?navigator.clipboard.readText().then((e=>i(e))):"Space"===e.code?i(e.key):void 0))))}render(){return e.createElement("div",{className:"terminal"},e.createElement("div",{className:"terminal_xterm",id:"xterm"}))}}const Ut=Ht;var zt=__webpack_require__(379),$t=__webpack_require__.n(zt),jt=__webpack_require__(795),Wt=__webpack_require__.n(jt),Kt=__webpack_require__(569),Vt=__webpack_require__.n(Kt),qt=__webpack_require__(565),Zt=__webpack_require__.n(qt),Gt=__webpack_require__(216),Yt=__webpack_require__.n(Gt),Xt=__webpack_require__(589),Jt=__webpack_require__.n(Xt),Qt=__webpack_require__(14),er={};er.styleTagTransform=Jt(),er.setAttributes=Zt(),er.insert=Vt().bind(null,"head"),er.domAPI=Wt(),er.insertStyleElement=Yt(),$t()(Qt.Z,er),Qt.Z&&Qt.Z.locals&&Qt.Z.locals;var tr=__webpack_require__(20),rr={};rr.styleTagTransform=Jt(),rr.setAttributes=Zt(),rr.insert=Vt().bind(null,"head"),rr.domAPI=Wt(),rr.insertStyleElement=Yt(),$t()(tr.Z,rr),tr.Z&&tr.Z.locals&&tr.Z.locals,Mt.div`
display : inline-block;
padding : 0px 5px;
`,Mt.div`
background-color: darkgray;
padding: 5px;
font-size: 13px;
text-align: center;
`;class ir extends e.Component{constructor(e){super(e),this.init=()=>{const e=null!=this.props.mpsServer?this.props.mpsServer.replace("http","ws"):"",t=null!=this.props.deviceId?this.props.deviceId:"";this.terminal=new r.AmtTerminal,this.redirector=new r.AMTRedirector(this.logger,r.Protocol.SOL,new FileReader,t,16994,"","",0,0,this.props.authToken,`${e}/relay`),this.dataProcessor=new r.TerminalDataProcessor(this.terminal),this.terminal.onSend=this.redirector.send.bind(this.redirector),this.redirector.onNewState=this.terminal.StateChange.bind(this.terminal),this.redirector.onStateChanged=this.onTerminalStateChange.bind(this),this.redirector.onProcessData=this.dataProcessor.processData.bind(this.dataProcessor),this.dataProcessor.processDataToXterm=this.handleWriteToXterm.bind(this),this.dataProcessor.clearTerminal=this.handleClearTerminal.bind(this),this.term=new Nt.Terminal({cursorStyle:"block",fontWeight:"bold",rows:30,cols:100})},this.cleanUp=()=>{this.terminal=null,this.redirector=null,this.dataProcessor=null,this.term=null},this.handleWriteToXterm=e=>this.term.write(e),this.handleClearTerminal=()=>this.term.reset(),this.handleKeyPress=e=>this.terminal.TermSendKeys(e),this.handleKeyDownPress=e=>this.terminal.handleKeyDownEvents(e),this.startSOL=()=>{void 0!==this.redirector&&this.redirector.start(WebSocket)},this.stopSOL=()=>{void 0!==this.redirector&&this.redirector.stop(),this.handleClearTerminal(),this.cleanUp(),this.init()},this.handleSOLConnect=e=>{e.persist(),0===this.state.SOLstate?this.startSOL():this.stopSOL()},this.onTerminalStateChange=(e,t)=>this.setState({SOLstate:t}),this.handleFeatureStatus=e=>{this.setState({solNotEnabled:e})},this.getSOLState=()=>3===this.state.SOLstate?2:0,this.logger=new r.ConsoleLogger(r.LogLevel.ERROR),this.state={isConnected:!1,SOLstate:0,powerState:0,showSuccess:!1,message:"",isSelected:!0,type:"",solNotEnabled:"",deviceOnSleep:"",isPowerStateLoaded:!1}}componentDidMount(){this.init()}render(){const{SOLstate:t}=this.state;return e.createElement(e.Fragment,null,e.createElement("button",{onClick:this.handleSOLConnect},3===t?"Disconnect":"Connect"),3===t&&this.term&&e.createElement(Ut,{handleKeyPress:this.handleKeyPress,handleKeyDownPress:this.handleKeyDownPress,xterm:this.term}))}}const sr={type:"logger",log(e){this.output("log",e)},warn(e){this.output("warn",e)},error(e){this.output("error",e)},output(e,t){console&&console[e]&&console[e].apply(console,t)}};class nr{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.init(e,t)}init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||sr,this.options=t,this.debug=t.debug}log(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"log","",!0)}warn(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"warn","",!0)}error(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"error","")}deprecate(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}forward(e,t,r,i){return i&&!this.debug?null:("string"==typeof e[0]&&(e[0]=`${r}${this.prefix} ${e[0]}`),this.logger[t](e))}create(e){return new nr(this.logger,{prefix:`${this.prefix}:${e}:`,...this.options})}clone(e){return(e=e||this.options).prefix=e.prefix||this.prefix,new nr(this.logger,e)}}var or=new nr;class ar{constructor(){this.observers={}}on(e,t){return e.split(" ").forEach((e=>{this.observers[e]=this.observers[e]||[],this.observers[e].push(t)})),this}off(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((e=>e!==t)):delete this.observers[e])}emit(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];this.observers[e]&&[].concat(this.observers[e]).forEach((e=>{e(...r)})),this.observers["*"]&&[].concat(this.observers["*"]).forEach((t=>{t.apply(t,[e,...r])}))}}function lr(){let e,t;const r=new Promise(((r,i)=>{e=r,t=i}));return r.resolve=e,r.reject=t,r}function cr(e){return null==e?"":""+e}function hr(e,t,r){function i(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function s(){return!e||"string"==typeof e}const n="string"!=typeof t?[].concat(t):t.split(".");for(;n.length>1;){if(s())return{};const t=i(n.shift());!e[t]&&r&&(e[t]=new r),e=Object.prototype.hasOwnProperty.call(e,t)?e[t]:{}}return s()?{}:{obj:e,k:i(n.shift())}}function ur(e,t,r){const{obj:i,k:s}=hr(e,t,Object);i[s]=r}function dr(e,t){const{obj:r,k:i}=hr(e,t);if(r)return r[i]}function fr(e,t,r){for(const i in t)"__proto__"!==i&&"constructor"!==i&&(i in e?"string"==typeof e[i]||e[i]instanceof String||"string"==typeof t[i]||t[i]instanceof String?r&&(e[i]=t[i]):fr(e[i],t[i],r):e[i]=t[i]);return e}function pr(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var vr={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function gr(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(e=>vr[e])):e}const _r=[" ",",","?","!",";"];function mr(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(!e)return;if(e[t])return e[t];const i=t.split(r);let s=e;for(let e=0;e<i.length;++e){if(!s)return;if("string"==typeof s[i[e]]&&e+1<i.length)return;if(void 0===s[i[e]]){let n=2,o=i.slice(e,e+n).join(r),a=s[o];for(;void 0===a&&i.length>e+n;)n++,o=i.slice(e,e+n).join(r),a=s[o];if(void 0===a)return;if(null===a)return null;if(t.endsWith(o)){if("string"==typeof a)return a;if(o&&"string"==typeof a[o])return a[o]}const l=i.slice(e+n).join(r);return l?mr(a,l,r):void 0}s=s[i[e]]}return s}function br(e){return e&&e.indexOf("_")>0?e.replace("_","-"):e}class Sr extends ar{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=e||{},this.options=t,void 0===this.options.keySeparator&&(this.options.keySeparator="."),void 0===this.options.ignoreJSONStructure&&(this.options.ignoreJSONStructure=!0)}addNamespaces(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}removeNamespaces(e){const t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}getResource(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const s=void 0!==i.keySeparator?i.keySeparator:this.options.keySeparator,n=void 0!==i.ignoreJSONStructure?i.ignoreJSONStructure:this.options.ignoreJSONStructure;let o=[e,t];r&&"string"!=typeof r&&(o=o.concat(r)),r&&"string"==typeof r&&(o=o.concat(s?r.split(s):r)),e.indexOf(".")>-1&&(o=e.split("."));const a=dr(this.data,o);return a||!n||"string"!=typeof r?a:mr(this.data&&this.data[e]&&this.data[e][t],r,s)}addResource(e,t,r,i){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1};const n=void 0!==s.keySeparator?s.keySeparator:this.options.keySeparator;let o=[e,t];r&&(o=o.concat(n?r.split(n):r)),e.indexOf(".")>-1&&(o=e.split("."),i=t,t=o[1]),this.addNamespaces(t),ur(this.data,o,i),s.silent||this.emit("added",e,t,r,i)}addResources(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(const i in r)"string"!=typeof r[i]&&"[object Array]"!==Object.prototype.toString.apply(r[i])||this.addResource(e,t,i,r[i],{silent:!0});i.silent||this.emit("added",e,t,r)}addResourceBundle(e,t,r,i,s){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},o=[e,t];e.indexOf(".")>-1&&(o=e.split("."),i=r,r=t,t=o[1]),this.addNamespaces(t);let a=dr(this.data,o)||{};i?fr(a,r,s):a={...a,...r},ur(this.data,o,a),n.silent||this.emit("added",e,t,r)}removeResourceBundle(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}hasResourceBundle(e,t){return void 0!==this.getResource(e,t)}getResourceBundle(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?{...this.getResource(e,t)}:this.getResource(e,t)}getDataByLanguage(e){return this.data[e]}hasLanguageSomeTranslations(e){const t=this.getDataByLanguage(e);return!!(t&&Object.keys(t)||[]).find((e=>t[e]&&Object.keys(t[e]).length>0))}toJSON(){return this.data}}var yr={processors:{},addPostProcessor(e){this.processors[e.name]=e},handle(e,t,r,i,s){return e.forEach((e=>{this.processors[e]&&(t=this.processors[e].process(t,r,i,s))})),t}};const Cr={};class wr extends ar{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var r,i;super(),r=e,i=this,["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"].forEach((e=>{r[e]&&(i[e]=r[e])})),this.options=t,void 0===this.options.keySeparator&&(this.options.keySeparator="."),this.logger=or.create("translator")}changeLanguage(e){e&&(this.language=e)}exists(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;const r=this.resolve(e,t);return r&&void 0!==r.res}extractFromKey(e,t){let r=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===r&&(r=":");const i=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator;let s=t.ns||this.options.defaultNS||[];const n=r&&e.indexOf(r)>-1,o=!(this.options.userDefinedKeySeparator||t.keySeparator||this.options.userDefinedNsSeparator||t.nsSeparator||function(e,t,r){t=t||"",r=r||"";const i=_r.filter((e=>t.indexOf(e)<0&&r.indexOf(e)<0));if(0===i.length)return!0;const s=new RegExp(`(${i.map((e=>"?"===e?"\\?":e)).join("|")})`);let n=!s.test(e);if(!n){const t=e.indexOf(r);t>0&&!s.test(e.substring(0,t))&&(n=!0)}return n}(e,r,i));if(n&&!o){const t=e.match(this.interpolator.nestingRegexp);if(t&&t.length>0)return{key:e,namespaces:s};const n=e.split(r);(r!==i||r===i&&this.options.ns.indexOf(n[0])>-1)&&(s=n.shift()),e=n.join(i)}return"string"==typeof s&&(s=[s]),{key:e,namespaces:s}}translate(e,t,r){if("object"!=typeof t&&this.options.overloadTranslationOptionHandler&&(t=this.options.overloadTranslationOptionHandler(arguments)),"object"==typeof t&&(t={...t}),t||(t={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);const i=void 0!==t.returnDetails?t.returnDetails:this.options.returnDetails,s=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,{key:n,namespaces:o}=this.extractFromKey(e[e.length-1],t),a=o[o.length-1],l=t.lng||this.language,c=t.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(l&&"cimode"===l.toLowerCase()){if(c){const e=t.nsSeparator||this.options.nsSeparator;return i?{res:`${a}${e}${n}`,usedKey:n,exactUsedKey:n,usedLng:l,usedNS:a}:`${a}${e}${n}`}return i?{res:n,usedKey:n,exactUsedKey:n,usedLng:l,usedNS:a}:n}const h=this.resolve(e,t);let u=h&&h.res;const d=h&&h.usedKey||n,f=h&&h.exactUsedKey||n,p=Object.prototype.toString.apply(u),v=void 0!==t.joinArrays?t.joinArrays:this.options.joinArrays,g=!this.i18nFormat||this.i18nFormat.handleAsObject;if(g&&u&&"string"!=typeof u&&"boolean"!=typeof u&&"number"!=typeof u&&["[object Number]","[object Function]","[object RegExp]"].indexOf(p)<0&&("string"!=typeof v||"[object Array]"!==p)){if(!t.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const e=this.options.returnedObjectHandler?this.options.returnedObjectHandler(d,u,{...t,ns:o}):`key '${n} (${this.language})' returned an object instead of string.`;return i?(h.res=e,h):e}if(s){const e="[object Array]"===p,r=e?[]:{},i=e?f:d;for(const e in u)if(Object.prototype.hasOwnProperty.call(u,e)){const n=`${i}${s}${e}`;r[e]=this.translate(n,{...t,joinArrays:!1,ns:o}),r[e]===n&&(r[e]=u[e])}u=r}}else if(g&&"string"==typeof v&&"[object Array]"===p)u=u.join(v),u&&(u=this.extendTranslation(u,e,t,r));else{let i=!1,o=!1;const c=void 0!==t.count&&"string"!=typeof t.count,d=wr.hasDefaultValue(t),f=c?this.pluralResolver.getSuffix(l,t.count,t):"",p=t.ordinal&&c?this.pluralResolver.getSuffix(l,t.count,{ordinal:!1}):"",v=t[`defaultValue${f}`]||t[`defaultValue${p}`]||t.defaultValue;!this.isValidLookup(u)&&d&&(i=!0,u=v),this.isValidLookup(u)||(o=!0,u=n);const g=(t.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&o?void 0:u,_=d&&v!==u&&this.options.updateMissing;if(o||i||_){if(this.logger.log(_?"updateKey":"missingKey",l,a,n,_?v:u),s){const e=this.resolve(n,{...t,keySeparator:!1});e&&e.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let e=[];const r=this.languageUtils.getFallbackCodes(this.options.fallbackLng,t.lng||this.language);if("fallback"===this.options.saveMissingTo&&r&&r[0])for(let t=0;t<r.length;t++)e.push(r[t]);else"all"===this.options.saveMissingTo?e=this.languageUtils.toResolveHierarchy(t.lng||this.language):e.push(t.lng||this.language);const i=(e,r,i)=>{const s=d&&i!==u?i:g;this.options.missingKeyHandler?this.options.missingKeyHandler(e,a,r,s,_,t):this.backendConnector&&this.backendConnector.saveMissing&&this.backendConnector.saveMissing(e,a,r,s,_,t),this.emit("missingKey",e,a,r,u)};this.options.saveMissing&&(this.options.saveMissingPlurals&&c?e.forEach((e=>{this.pluralResolver.getSuffixes(e,t).forEach((r=>{i([e],n+r,t[`defaultValue${r}`]||v)}))})):i(e,n,v))}u=this.extendTranslation(u,e,t,h,r),o&&u===n&&this.options.appendNamespaceToMissingKey&&(u=`${a}:${n}`),(o||i)&&this.options.parseMissingKeyHandler&&(u="v1"!==this.options.compatibilityAPI?this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${a}:${n}`:n,i?u:void 0):this.options.parseMissingKeyHandler(u))}return i?(h.res=u,h):u}extendTranslation(e,t,r,i,s){var n=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,{...this.options.interpolation.defaultVariables,...r},i.usedLng,i.usedNS,i.usedKey,{resolved:i});else if(!r.skipInterpolation){r.interpolation&&this.interpolator.init({...r,interpolation:{...this.options.interpolation,...r.interpolation}});const o="string"==typeof e&&(r&&r.interpolation&&void 0!==r.interpolation.skipOnVariables?r.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let a;if(o){const t=e.match(this.interpolator.nestingRegexp);a=t&&t.length}let l=r.replace&&"string"!=typeof r.replace?r.replace:r;if(this.options.interpolation.defaultVariables&&(l={...this.options.interpolation.defaultVariables,...l}),e=this.interpolator.interpolate(e,l,r.lng||this.language,r),o){const t=e.match(this.interpolator.nestingRegexp);a<(t&&t.length)&&(r.nest=!1)}!r.lng&&"v1"!==this.options.compatibilityAPI&&i&&i.res&&(r.lng=i.usedLng),!1!==r.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,i=new Array(e),o=0;o<e;o++)i[o]=arguments[o];return s&&s[0]===i[0]&&!r.context?(n.logger.warn(`It seems you are nesting recursively key: ${i[0]} in key: ${t[0]}`),null):n.translate(...i,t)}),r)),r.interpolation&&this.interpolator.reset()}const o=r.postProcess||this.options.postProcess,a="string"==typeof o?[o]:o;return null!=e&&a&&a.length&&!1!==r.applyPostProcessor&&(e=yr.handle(a,e,t,this.options&&this.options.postProcessPassResolved?{i18nResolved:i,...r}:r,this)),e}resolve(e){let t,r,i,s,n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((e=>{if(this.isValidLookup(t))return;const a=this.extractFromKey(e,o),l=a.key;r=l;let c=a.namespaces;this.options.fallbackNS&&(c=c.concat(this.options.fallbackNS));const h=void 0!==o.count&&"string"!=typeof o.count,u=h&&!o.ordinal&&0===o.count&&this.pluralResolver.shouldUseIntlApi(),d=void 0!==o.context&&("string"==typeof o.context||"number"==typeof o.context)&&""!==o.context,f=o.lngs?o.lngs:this.languageUtils.toResolveHierarchy(o.lng||this.language,o.fallbackLng);c.forEach((e=>{this.isValidLookup(t)||(n=e,!Cr[`${f[0]}-${e}`]&&this.utils&&this.utils.hasLoadedNamespace&&!this.utils.hasLoadedNamespace(n)&&(Cr[`${f[0]}-${e}`]=!0,this.logger.warn(`key "${r}" for languages "${f.join(", ")}" won't get resolved as namespace "${n}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),f.forEach((r=>{if(this.isValidLookup(t))return;s=r;const n=[l];if(this.i18nFormat&&this.i18nFormat.addLookupKeys)this.i18nFormat.addLookupKeys(n,l,r,e,o);else{let e;h&&(e=this.pluralResolver.getSuffix(r,o.count,o));const t=`${this.options.pluralSeparator}zero`,i=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(h&&(n.push(l+e),o.ordinal&&0===e.indexOf(i)&&n.push(l+e.replace(i,this.options.pluralSeparator)),u&&n.push(l+t)),d){const r=`${l}${this.options.contextSeparator}${o.context}`;n.push(r),h&&(n.push(r+e),o.ordinal&&0===e.indexOf(i)&&n.push(r+e.replace(i,this.options.pluralSeparator)),u&&n.push(r+t))}}let a;for(;a=n.pop();)this.isValidLookup(t)||(i=a,t=this.getResource(r,e,a,o))})))}))})),{res:t,usedKey:r,exactUsedKey:i,usedLng:s,usedNS:n}}isValidLookup(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}getResource(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,r,i):this.resourceStore.getResource(e,t,r,i)}static hasDefaultValue(e){const t="defaultValue";for(const r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&t===r.substring(0,t.length)&&void 0!==e[r])return!0;return!1}}function kr(e){return e.charAt(0).toUpperCase()+e.slice(1)}class Er{constructor(e){this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=or.create("languageUtils")}getScriptPartFromCode(e){if(!(e=br(e))||e.indexOf("-")<0)return null;const t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}getLanguagePartFromCode(e){if(!(e=br(e))||e.indexOf("-")<0)return e;const t=e.split("-");return this.formatLanguageCode(t[0])}formatLanguageCode(e){if("string"==typeof e&&e.indexOf("-")>-1){const t=["hans","hant","latn","cyrl","cans","mong","arab"];let r=e.split("-");return this.options.lowerCaseLng?r=r.map((e=>e.toLowerCase())):2===r.length?(r[0]=r[0].toLowerCase(),r[1]=r[1].toUpperCase(),t.indexOf(r[1].toLowerCase())>-1&&(r[1]=kr(r[1].toLowerCase()))):3===r.length&&(r[0]=r[0].toLowerCase(),2===r[1].length&&(r[1]=r[1].toUpperCase()),"sgn"!==r[0]&&2===r[2].length&&(r[2]=r[2].toUpperCase()),t.indexOf(r[1].toLowerCase())>-1&&(r[1]=kr(r[1].toLowerCase())),t.indexOf(r[2].toLowerCase())>-1&&(r[2]=kr(r[2].toLowerCase()))),r.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}isSupportedCode(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}getBestMatchFromCodes(e){if(!e)return null;let t;return e.forEach((e=>{if(t)return;const r=this.formatLanguageCode(e);this.options.supportedLngs&&!this.isSupportedCode(r)||(t=r)})),!t&&this.options.supportedLngs&&e.forEach((e=>{if(t)return;const r=this.getLanguagePartFromCode(e);if(this.isSupportedCode(r))return t=r;t=this.options.supportedLngs.find((e=>e===r?e:e.indexOf("-")<0&&r.indexOf("-")<0?void 0:0===e.indexOf(r)?e:void 0))})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t}getFallbackCodes(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];let r=e[t];return r||(r=e[this.getScriptPartFromCode(t)]),r||(r=e[this.formatLanguageCode(t)]),r||(r=e[this.getLanguagePartFromCode(t)]),r||(r=e.default),r||[]}toResolveHierarchy(e,t){const r=this.getFallbackCodes(t||this.options.fallbackLng||[],e),i=[],s=e=>{e&&(this.isSupportedCode(e)?i.push(e):this.logger.warn(`rejecting language code not found in supportedLngs: ${e}`))};return"string"==typeof e&&(e.indexOf("-")>-1||e.indexOf("_")>-1)?("languageOnly"!==this.options.load&&s(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&s(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&s(this.getLanguagePartFromCode(e))):"string"==typeof e&&s(this.formatLanguageCode(e)),r.forEach((e=>{i.indexOf(e)<0&&s(this.formatLanguageCode(e))})),i}}let Ar=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],xr={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}};const Lr=["v1","v2","v3"],Rr=["v4"],Tr={zero:0,one:1,two:2,few:3,many:4,other:5};class Dr{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.languageUtils=e,this.options=t,this.logger=or.create("pluralResolver"),this.options.compatibilityJSON&&!Rr.includes(this.options.compatibilityJSON)||"undefined"!=typeof Intl&&Intl.PluralRules||(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=function(){const e={};return Ar.forEach((t=>{t.lngs.forEach((r=>{e[r]={numbers:t.nr,plurals:xr[t.fc]}}))})),e}()}addRule(e,t){this.rules[e]=t}getRule(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(br(e),{type:t.ordinal?"ordinal":"cardinal"})}catch{return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}needsPlural(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=this.getRule(e,t);return this.shouldUseIntlApi()?r&&r.resolvedOptions().pluralCategories.length>1:r&&r.numbers.length>1}getPluralFormsOfKey(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,r).map((e=>`${t}${e}`))}getSuffixes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=this.getRule(e,t);return r?this.shouldUseIntlApi()?r.resolvedOptions().pluralCategories.sort(((e,t)=>Tr[e]-Tr[t])).map((e=>`${this.options.prepend}${t.ordinal?`ordinal${this.options.prepend}`:""}${e}`)):r.numbers.map((r=>this.getSuffix(e,r,t))):[]}getSuffix(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.getRule(e,r);return i?this.shouldUseIntlApi()?`${this.options.prepend}${r.ordinal?`ordinal${this.options.prepend}`:""}${i.select(t)}`:this.getSuffixRetroCompatible(i,t):(this.logger.warn(`no plural rule found for: ${e}`),"")}getSuffixRetroCompatible(e,t){const r=e.noAbs?e.plurals(t):e.plurals(Math.abs(t));let i=e.numbers[r];this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]&&(2===i?i="plural":1===i&&(i=""));const s=()=>this.options.prepend&&i.toString()?this.options.prepend+i.toString():i.toString();return"v1"===this.options.compatibilityJSON?1===i?"":"number"==typeof i?`_plural_${i.toString()}`:s():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]?s():this.options.prepend&&r.toString()?this.options.prepend+r.toString():r.toString()}shouldUseIntlApi(){return!Lr.includes(this.options.compatibilityJSON)}}function Ir(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:".",s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],n=function(e,t,r){const i=dr(e,r);return void 0!==i?i:dr(t,r)}(e,t,r);return!n&&s&&"string"==typeof r&&(n=mr(e,r,i),void 0===n&&(n=mr(t,r,i))),n}class Pr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=or.create("interpolator"),this.options=e,this.format=e.interpolation&&e.interpolation.format||(e=>e),this.init(e)}init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});const t=e.interpolation;this.escape=void 0!==t.escape?t.escape:gr,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?pr(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?pr(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?pr(t.nestingPrefix):t.nestingPrefixEscaped||pr("$t("),this.nestingSuffix=t.nestingSuffix?pr(t.nestingSuffix):t.nestingSuffixEscaped||pr(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const e=`${this.prefix}(.+?)${this.suffix}`;this.regexp=new RegExp(e,"g");const t=`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;this.regexpUnescape=new RegExp(t,"g");const r=`${this.nestingPrefix}(.+?)${this.nestingSuffix}`;this.nestingRegexp=new RegExp(r,"g")}interpolate(e,t,r,i){let s,n,o;const a=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function l(e){return e.replace(/\$/g,"$$$$")}const c=e=>{if(e.indexOf(this.formatSeparator)<0){const s=Ir(t,a,e,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(s,void 0,r,{...i,...t,interpolationkey:e}):s}const s=e.split(this.formatSeparator),n=s.shift().trim(),o=s.join(this.formatSeparator).trim();return this.format(Ir(t,a,n,this.options.keySeparator,this.options.ignoreJSONStructure),o,r,{...i,...t,interpolationkey:n})};this.resetRegExp();const h=i&&i.missingInterpolationHandler||this.options.missingInterpolationHandler,u=i&&i.interpolation&&void 0!==i.interpolation.skipOnVariables?i.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:e=>l(e)},{regex:this.regexp,safeValue:e=>this.escapeValue?l(this.escape(e)):l(e)}].forEach((t=>{for(o=0;s=t.regex.exec(e);){const r=s[1].trim();if(n=c(r),void 0===n)if("function"==typeof h){const t=h(e,s,i);n="string"==typeof t?t:""}else if(i&&Object.prototype.hasOwnProperty.call(i,r))n="";else{if(u){n=s[0];continue}this.logger.warn(`missed to pass in variable ${r} for interpolating ${e}`),n=""}else"string"==typeof n||this.useRawValueToEscape||(n=cr(n));const a=t.safeValue(n);if(e=e.replace(s[0],a),u?(t.regex.lastIndex+=n.length,t.regex.lastIndex-=s[0].length):t.regex.lastIndex=0,o++,o>=this.maxReplaces)break}})),e}nest(e,t){let r,i,s,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};function o(e,t){const r=this.nestingOptionsSeparator;if(e.indexOf(r)<0)return e;const i=e.split(new RegExp(`${r}[ ]*{`));let n=`{${i[1]}`;e=i[0],n=this.interpolate(n,s);const o=n.match(/'/g),a=n.match(/"/g);(o&&o.length%2==0&&!a||a.length%2!=0)&&(n=n.replace(/'/g,'"'));try{s=JSON.parse(n),t&&(s={...t,...s})}catch(t){return this.logger.warn(`failed parsing options string in nesting for key ${e}`,t),`${e}${r}${n}`}return delete s.defaultValue,e}for(;r=this.nestingRegexp.exec(e);){let a=[];s={...n},s=s.replace&&"string"!=typeof s.replace?s.replace:s,s.applyPostProcessor=!1,delete s.defaultValue;let l=!1;if(-1!==r[0].indexOf(this.formatSeparator)&&!/{.*}/.test(r[1])){const e=r[1].split(this.formatSeparator).map((e=>e.trim()));r[1]=e.shift(),a=e,l=!0}if(i=t(o.call(this,r[1].trim(),s),s),i&&r[0]===e&&"string"!=typeof i)return i;"string"!=typeof i&&(i=cr(i)),i||(this.logger.warn(`missed to resolve ${r[1]} for nesting ${e}`),i=""),l&&(i=a.reduce(((e,t)=>this.format(e,t,n.lng,{...n,interpolationkey:r[1].trim()})),i.trim())),e=e.replace(r[0],i),this.regexp.lastIndex=0}return e}}function Br(e){const t={};return function(r,i,s){const n=i+JSON.stringify(s);let o=t[n];return o||(o=e(br(i),s),t[n]=o),o(r)}}class Or{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=or.create("formatter"),this.options=e,this.formats={number:Br(((e,t)=>{const r=new Intl.NumberFormat(e,{...t});return e=>r.format(e)})),currency:Br(((e,t)=>{const r=new Intl.NumberFormat(e,{...t,style:"currency"});return e=>r.format(e)})),datetime:Br(((e,t)=>{const r=new Intl.DateTimeFormat(e,{...t});return e=>r.format(e)})),relativetime:Br(((e,t)=>{const r=new Intl.RelativeTimeFormat(e,{...t});return e=>r.format(e,t.range||"day")})),list:Br(((e,t)=>{const r=new Intl.ListFormat(e,{...t});return e=>r.format(e)}))},this.init(e)}init(e){const t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}}).interpolation;this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||","}add(e,t){this.formats[e.toLowerCase().trim()]=t}addCached(e,t){this.formats[e.toLowerCase().trim()]=Br(t)}format(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const s=t.split(this.formatSeparator).reduce(((e,t)=>{const{formatName:s,formatOptions:n}=function(e){let t=e.toLowerCase().trim();const r={};if(e.indexOf("(")>-1){const i=e.split("(");t=i[0].toLowerCase().trim();const s=i[1].substring(0,i[1].length-1);"currency"===t&&s.indexOf(":")<0?r.currency||(r.currency=s.trim()):"relativetime"===t&&s.indexOf(":")<0?r.range||(r.range=s.trim()):s.split(";").forEach((e=>{if(!e)return;const[t,...i]=e.split(":"),s=i.join(":").trim().replace(/^'+|'+$/g,"");r[t.trim()]||(r[t.trim()]=s),"false"===s&&(r[t.trim()]=!1),"true"===s&&(r[t.trim()]=!0),isNaN(s)||(r[t.trim()]=parseInt(s,10))}))}return{formatName:t,formatOptions:r}}(t);if(this.formats[s]){let t=e;try{const o=i&&i.formatParams&&i.formatParams[i.interpolationkey]||{},a=o.locale||o.lng||i.locale||i.lng||r;t=this.formats[s](e,a,{...n,...i,...o})}catch(e){this.logger.warn(e)}return t}return this.logger.warn(`there was no format function for ${s}`),e}),e);return s}}class Mr extends ar{constructor(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};super(),this.backend=e,this.store=t,this.services=r,this.languageUtils=r.languageUtils,this.options=i,this.logger=or.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=i.maxParallelReads||10,this.readingCalls=0,this.maxRetries=i.maxRetries>=0?i.maxRetries:5,this.retryTimeout=i.retryTimeout>=1?i.retryTimeout:350,this.state={},this.queue=[],this.backend&&this.backend.init&&this.backend.init(r,i.backend,i)}queueLoad(e,t,r,i){const s={},n={},o={},a={};return e.forEach((e=>{let i=!0;t.forEach((t=>{const o=`${e}|${t}`;!r.reload&&this.store.hasResourceBundle(e,t)?this.state[o]=2:this.state[o]<0||(1===this.state[o]?void 0===n[o]&&(n[o]=!0):(this.state[o]=1,i=!1,void 0===n[o]&&(n[o]=!0),void 0===s[o]&&(s[o]=!0),void 0===a[t]&&(a[t]=!0)))})),i||(o[e]=!0)})),(Object.keys(s).length||Object.keys(n).length)&&this.queue.push({pending:n,pendingCount:Object.keys(n).length,loaded:{},errors:[],callback:i}),{toLoad:Object.keys(s),pending:Object.keys(n),toLoadLanguages:Object.keys(o),toLoadNamespaces:Object.keys(a)}}loaded(e,t,r){const i=e.split("|"),s=i[0],n=i[1];t&&this.emit("failedLoading",s,n,t),r&&this.store.addResourceBundle(s,n,r),this.state[e]=t?-1:2;const o={};this.queue.forEach((r=>{!function(e,t,r,i){const{obj:s,k:n}=hr(e,t,Object);s[n]=s[n]||[],s[n].push(r)}(r.loaded,[s],n),function(e,t){void 0!==e.pending[t]&&(delete e.pending[t],e.pendingCount--)}(r,e),t&&r.errors.push(t),0!==r.pendingCount||r.done||(Object.keys(r.loaded).forEach((e=>{o[e]||(o[e]={});const t=r.loaded[e];t.length&&t.forEach((t=>{void 0===o[e][t]&&(o[e][t]=!0)}))})),r.done=!0,r.errors.length?r.callback(r.errors):r.callback())})),this.emit("loaded",o),this.queue=this.queue.filter((e=>!e.done))}read(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.retryTimeout,n=arguments.length>5?arguments[5]:void 0;if(!e.length)return n(null,{});if(this.readingCalls>=this.maxParallelReads)return void this.waitingReads.push({lng:e,ns:t,fcName:r,tried:i,wait:s,callback:n});this.readingCalls++;const o=(o,a)=>{if(this.readingCalls--,this.waitingReads.length>0){const e=this.waitingReads.shift();this.read(e.lng,e.ns,e.fcName,e.tried,e.wait,e.callback)}o&&a&&i<this.maxRetries?setTimeout((()=>{this.read.call(this,e,t,r,i+1,2*s,n)}),s):n(o,a)},a=this.backend[r].bind(this.backend);if(2!==a.length)return a(e,t,o);try{const r=a(e,t);r&&"function"==typeof r.then?r.then((e=>o(null,e))).catch(o):o(null,r)}catch(e){o(e)}}prepareLoading(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),i&&i();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);const s=this.queueLoad(e,t,r,i);if(!s.toLoad.length)return s.pending.length||i(),null;s.toLoad.forEach((e=>{this.loadOne(e)}))}load(e,t,r){this.prepareLoading(e,t,{},r)}reload(e,t,r){this.prepareLoading(e,t,{reload:!0},r)}loadOne(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const r=e.split("|"),i=r[0],s=r[1];this.read(i,s,"read",void 0,void 0,((r,n)=>{r&&this.logger.warn(`${t}loading namespace ${s} for language ${i} failed`,r),!r&&n&&this.logger.log(`${t}loaded namespace ${s} for language ${i}`,n),this.loaded(e,r,n)}))}saveMissing(e,t,r,i,s){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:()=>{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t))this.logger.warn(`did not save key "${r}" as the namespace "${t}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");else if(null!=r&&""!==r){if(this.backend&&this.backend.create){const a={...n,isUpdate:s},l=this.backend.create.bind(this.backend);if(l.length<6)try{let s;s=5===l.length?l(e,t,r,i,a):l(e,t,r,i),s&&"function"==typeof s.then?s.then((e=>o(null,e))).catch(o):o(null,s)}catch(e){o(e)}else l(e,t,r,i,o,a)}e&&e[0]&&this.store.addResource(e[0],t,r,i)}}}function Nr(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){let t={};if("object"==typeof e[1]&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"==typeof e[2]||"object"==typeof e[3]){const r=e[3]||e[2];Object.keys(r).forEach((e=>{t[e]=r[e]}))}return t},interpolation:{escapeValue:!0,format:(e,t,r,i)=>e,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function Fr(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function Hr(){}class Ur extends ar{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;var r;if(super(),this.options=Fr(e),this.services={},this.logger=or,this.modules={external:[]},r=this,Object.getOwnPropertyNames(Object.getPrototypeOf(r)).forEach((e=>{"function"==typeof r[e]&&(r[e]=r[e].bind(r))})),t&&!this.isInitialized&&!e.isClone){if(!this.options.initImmediate)return this.init(e,t),this;setTimeout((()=>{this.init(e,t)}),0)}}init(){var e=this;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;"function"==typeof t&&(r=t,t={}),!t.defaultNS&&!1!==t.defaultNS&&t.ns&&("string"==typeof t.ns?t.defaultNS=t.ns:t.ns.indexOf("translation")<0&&(t.defaultNS=t.ns[0]));const i=Nr();function s(e){return e?"function"==typeof e?new e:e:null}if(this.options={...i,...this.options,...Fr(t)},"v1"!==this.options.compatibilityAPI&&(this.options.interpolation={...i.interpolation,...this.options.interpolation}),void 0!==t.keySeparator&&(this.options.userDefinedKeySeparator=t.keySeparator),void 0!==t.nsSeparator&&(this.options.userDefinedNsSeparator=t.nsSeparator),!this.options.isClone){let t;this.modules.logger?or.init(s(this.modules.logger),this.options):or.init(null,this.options),this.modules.formatter?t=this.modules.formatter:"undefined"!=typeof Intl&&(t=Or);const r=new Er(this.options);this.store=new Sr(this.options.resources,this.options);const n=this.services;n.logger=or,n.resourceStore=this.store,n.languageUtils=r,n.pluralResolver=new Dr(r,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!t||this.options.interpolation.format&&this.options.interpolation.format!==i.interpolation.format||(n.formatter=s(t),n.formatter.init(n,this.options),this.options.interpolation.format=n.formatter.format.bind(n.formatter)),n.interpolator=new Pr(this.options),n.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},n.backendConnector=new Mr(s(this.modules.backend),n.resourceStore,n,this.options),n.backendConnector.on("*",(function(t){for(var r=arguments.length,i=new Array(r>1?r-1:0),s=1;s<r;s++)i[s-1]=arguments[s];e.emit(t,...i)})),this.modules.languageDetector&&(n.languageDetector=s(this.modules.languageDetector),n.languageDetector.init&&n.languageDetector.init(n,this.options.detection,this.options)),this.modules.i18nFormat&&(n.i18nFormat=s(this.modules.i18nFormat),n.i18nFormat.init&&n.i18nFormat.init(this)),this.translator=new wr(this.services,this.options),this.translator.on("*",(function(t){for(var r=arguments.length,i=new Array(r>1?r-1:0),s=1;s<r;s++)i[s-1]=arguments[s];e.emit(t,...i)})),this.modules.external.forEach((e=>{e.init&&e.init(this)}))}if(this.format=this.options.interpolation.format,r||(r=Hr),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const e=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);e.length>0&&"dev"!==e[0]&&(this.options.lng=e[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined"),["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach((t=>{this[t]=function(){return e.store[t](...arguments)}})),["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach((t=>{this[t]=function(){return e.store[t](...arguments),e}}));const n=lr(),o=()=>{const e=(e,t)=>{this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),n.resolve(t),r(e,t)};if(this.languages&&"v1"!==this.options.compatibilityAPI&&!this.isInitialized)return e(null,this.t.bind(this));this.changeLanguage(this.options.lng,e)};return this.options.resources||!this.options.initImmediate?o():setTimeout(o,0),n}loadResources(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Hr;const r="string"==typeof e?e:this.language;if("function"==typeof e&&(t=e),!this.options.resources||this.options.partialBundledLanguages){if(r&&"cimode"===r.toLowerCase())return t();const e=[],i=t=>{t&&this.services.languageUtils.toResolveHierarchy(t).forEach((t=>{e.indexOf(t)<0&&e.push(t)}))};r?i(r):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((e=>i(e))),this.options.preload&&this.options.preload.forEach((e=>i(e))),this.services.backendConnector.load(e,this.options.ns,(e=>{e||this.resolvedLanguage||!this.language||this.setResolvedLanguage(this.language),t(e)}))}else t(null)}reloadResources(e,t,r){const i=lr();return e||(e=this.languages),t||(t=this.options.ns),r||(r=Hr),this.services.backendConnector.reload(e,t,(e=>{i.resolve(),r(e)})),i}use(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&yr.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}setResolvedLanguage(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(let e=0;e<this.languages.length;e++){const t=this.languages[e];if(!(["cimode","dev"].indexOf(t)>-1)&&this.store.hasLanguageSomeTranslations(t)){this.resolvedLanguage=t;break}}}changeLanguage(e,t){var r=this;this.isLanguageChangingTo=e;const i=lr();this.emit("languageChanging",e);const s=e=>{this.language=e,this.languages=this.services.languageUtils.toResolveHierarchy(e),this.resolvedLanguage=void 0,this.setResolvedLanguage(e)},n=(e,n)=>{n?(s(n),this.translator.changeLanguage(n),this.isLanguageChangingTo=void 0,this.emit("languageChanged",n),this.logger.log("languageChanged",n)):this.isLanguageChangingTo=void 0,i.resolve((function(){return r.t(...arguments)})),t&&t(e,(function(){return r.t(...arguments)}))},o=t=>{e||t||!this.services.languageDetector||(t=[]);const r="string"==typeof t?t:this.services.languageUtils.getBestMatchFromCodes(t);r&&(this.language||s(r),this.translator.language||this.translator.changeLanguage(r),this.services.languageDetector&&this.services.languageDetector.cacheUserLanguage&&this.services.languageDetector.cacheUserLanguage(r)),this.loadResources(r,(e=>{n(e,r)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?0===this.services.languageDetector.detect.length?this.services.languageDetector.detect().then(o):this.services.languageDetector.detect(o):o(e):o(this.services.languageDetector.detect()),i}getFixedT(e,t,r){var i=this;const s=function(e,t){let n;if("object"!=typeof t){for(var o=arguments.length,a=new Array(o>2?o-2:0),l=2;l<o;l++)a[l-2]=arguments[l];n=i.options.overloadTranslationOptionHandler([e,t].concat(a))}else n={...t};n.lng=n.lng||s.lng,n.lngs=n.lngs||s.lngs,n.ns=n.ns||s.ns,n.keyPrefix=n.keyPrefix||r||s.keyPrefix;const c=i.options.keySeparator||".";let h;return h=n.keyPrefix&&Array.isArray(e)?e.map((e=>`${n.keyPrefix}${c}${e}`)):n.keyPrefix?`${n.keyPrefix}${c}${e}`:e,i.t(h,n)};return"string"==typeof e?s.lng=e:s.lngs=e,s.ns=t,s.keyPrefix=r,s}t(){return this.translator&&this.translator.translate(...arguments)}exists(){return this.translator&&this.translator.exists(...arguments)}setDefaultNamespace(e){this.options.defaultNS=e}hasLoadedNamespace(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const r=t.lng||this.resolvedLanguage||this.languages[0],i=!!this.options&&this.options.fallbackLng,s=this.languages[this.languages.length-1];if("cimode"===r.toLowerCase())return!0;const n=(e,t)=>{const r=this.services.backendConnector.state[`${e}|${t}`];return-1===r||2===r};if(t.precheck){const e=t.precheck(this,n);if(void 0!==e)return e}return!(!this.hasResourceBundle(r,e)&&this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages)&&(!n(r,e)||i&&!n(s,e)))}loadNamespaces(e,t){const r=lr();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((e=>{this.options.ns.indexOf(e)<0&&this.options.ns.push(e)})),this.loadResources((e=>{r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}loadLanguages(e,t){const r=lr();"string"==typeof e&&(e=[e]);const i=this.options.preload||[],s=e.filter((e=>i.indexOf(e)<0));return s.length?(this.options.preload=i.concat(s),this.loadResources((e=>{r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}dir(e){if(e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!e)return"rtl";const t=this.services&&this.services.languageUtils||new Er(Nr());return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(t.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){return new Ur(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1?arguments[1]:void 0)}cloneInstance(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Hr;const r=e.forkResourceStore;r&&delete e.forkResourceStore;const i={...this.options,...e,isClone:!0},s=new Ur(i);return void 0===e.debug&&void 0===e.prefix||(s.logger=s.logger.clone(e)),["store","services","language"].forEach((e=>{s[e]=this[e]})),s.services={...this.services},s.services.utils={hasLoadedNamespace:s.hasLoadedNamespace.bind(s)},r&&(s.store=new Sr(this.store.data,i),s.services.resourceStore=s.store),s.translator=new wr(s.services,i),s.translator.on("*",(function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];s.emit(e,...r)})),s.init(i,t),s.translator.options=i,s.translator.backendConnector.services.utils={hasLoadedNamespace:s.hasLoadedNamespace.bind(s)},s}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const zr=Ur.createInstance();function $r(e){return $r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$r(e)}function jr(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,(s=i.key,n=void 0,n=function(e,t){if("object"!==$r(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,"string");if("object"!==$r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(s),"symbol"===$r(n)?n:String(n)),i)}var s,n}zr.createInstance=Ur.createInstance,zr.createInstance,zr.dir,zr.init,zr.loadResources,zr.reloadResources,zr.use,zr.changeLanguage,zr.getFixedT,zr.t,zr.exists,zr.setDefaultNamespace,zr.hasLoadedNamespace,zr.loadNamespaces,zr.loadLanguages;var Wr=[],Kr=Wr.forEach,Vr=Wr.slice,qr=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,Zr={name:"cookie",lookup:function(e){var t;if(e.lookupCookie&&"undefined"!=typeof document){var r=function(e){for(var t="".concat(e,"="),r=document.cookie.split(";"),i=0;i<r.length;i++){for(var s=r[i];" "===s.charAt(0);)s=s.substring(1,s.length);if(0===s.indexOf(t))return s.substring(t.length,s.length)}return null}(e.lookupCookie);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupCookie&&"undefined"!=typeof document&&function(e,t,r,i){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};r&&(s.expires=new Date,s.expires.setTime(s.expires.getTime()+60*r*1e3)),i&&(s.domain=i),document.cookie=function(e,t,r){var i=r||{};i.path=i.path||"/";var s=encodeURIComponent(t),n="".concat(e,"=").concat(s);if(i.maxAge>0){var o=i.maxAge-0;if(Number.isNaN(o))throw new Error("maxAge should be a Number");n+="; Max-Age=".concat(Math.floor(o))}if(i.domain){if(!qr.test(i.domain))throw new TypeError("option domain is invalid");n+="; Domain=".concat(i.domain)}if(i.path){if(!qr.test(i.path))throw new TypeError("option path is invalid");n+="; Path=".concat(i.path)}if(i.expires){if("function"!=typeof i.expires.toUTCString)throw new TypeError("option expires is invalid");n+="; Expires=".concat(i.expires.toUTCString())}if(i.httpOnly&&(n+="; HttpOnly"),i.secure&&(n+="; Secure"),i.sameSite)switch("string"==typeof i.sameSite?i.sameSite.toLowerCase():i.sameSite){case!0:n+="; SameSite=Strict";break;case"lax":n+="; SameSite=Lax";break;case"strict":n+="; SameSite=Strict";break;case"none":n+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return n}(e,encodeURIComponent(t),s)}(t.lookupCookie,e,t.cookieMinutes,t.cookieDomain,t.cookieOptions)}},Gr={name:"querystring",lookup:function(e){var t;if("undefined"!=typeof window){var r=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(r=window.location.hash.substring(window.location.hash.indexOf("?")));for(var i=r.substring(1).split("&"),s=0;s<i.length;s++){var n=i[s].indexOf("=");n>0&&i[s].substring(0,n)===e.lookupQuerystring&&(t=i[s].substring(n+1))}}return t}},Yr=null,Xr=function(){if(null!==Yr)return Yr;try{Yr="undefined"!==window&&null!==window.localStorage;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(e){Yr=!1}return Yr},Jr={name:"localStorage",lookup:function(e){var t;if(e.lookupLocalStorage&&Xr()){var r=window.localStorage.getItem(e.lookupLocalStorage);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupLocalStorage&&Xr()&&window.localStorage.setItem(t.lookupLocalStorage,e)}},Qr=null,ei=function(){if(null!==Qr)return Qr;try{Qr="undefined"!==window&&null!==window.sessionStorage;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(e){Qr=!1}return Qr},ti={name:"sessionStorage",lookup:function(e){var t;if(e.lookupSessionStorage&&ei()){var r=window.sessionStorage.getItem(e.lookupSessionStorage);r&&(t=r)}return t},cacheUserLanguage:function(e,t){t.lookupSessionStorage&&ei()&&window.sessionStorage.setItem(t.lookupSessionStorage,e)}},ri={name:"navigator",lookup:function(e){var t=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var r=0;r<navigator.languages.length;r++)t.push(navigator.languages[r]);navigator.userLanguage&&t.push(navigator.userLanguage),navigator.language&&t.push(navigator.language)}return t.length>0?t:void 0}},ii={name:"htmlTag",lookup:function(e){var t,r=e.htmlTag||("undefined"!=typeof document?document.documentElement:null);return r&&"function"==typeof r.getAttribute&&(t=r.getAttribute("lang")),t}},si={name:"path",lookup:function(e){var t;if("undefined"!=typeof window){var r=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(r instanceof Array)if("number"==typeof e.lookupFromPathIndex){if("string"!=typeof r[e.lookupFromPathIndex])return;t=r[e.lookupFromPathIndex].replace("/","")}else t=r[0].replace("/","")}return t}},ni={name:"subdomain",lookup:function(e){var t="number"==typeof e.lookupFromSubdomainIndex?e.lookupFromSubdomainIndex+1:1,r="undefined"!=typeof window&&window.location&&window.location.hostname&&window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);if(r)return r[t]}},oi=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.type="languageDetector",this.detectors={},this.init(t,r)}var t,r;return t=e,r=[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e||{languageUtils:{}},this.options=function(e){return Kr.call(Vr.call(arguments,1),(function(t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r])})),e}(t,this.options||{},{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"],convertDetectedLanguage:function(e){return e}}),"string"==typeof this.options.convertDetectedLanguage&&this.options.convertDetectedLanguage.indexOf("15897")>-1&&(this.options.convertDetectedLanguage=function(e){return e.replace("-","_")}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=r,this.addDetector(Zr),this.addDetector(Gr),this.addDetector(Jr),this.addDetector(ti),this.addDetector(ri),this.addDetector(ii),this.addDetector(si),this.addDetector(ni)}},{key:"addDetector",value:function(e){this.detectors[e.name]=e}},{key:"detect",value:function(e){var t=this;e||(e=this.options.order);var r=[];return e.forEach((function(e){if(t.detectors[e]){var i=t.detectors[e].lookup(t.options);i&&"string"==typeof i&&(i=[i]),i&&(r=r.concat(i))}})),r=r.map((function(e){return t.options.convertDetectedLanguage(e)})),this.services.languageUtils.getBestMatchFromCodes?r:r.length>0?r[0]:null}},{key:"cacheUserLanguage",value:function(e,t){var r=this;t||(t=this.options.caches),t&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||t.forEach((function(t){r.detectors[t]&&r.detectors[t].cacheUserLanguage(e,r.options)})))}}],r&&jr(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();oi.type="languageDetector",__webpack_require__(739),Object.create(null);const ai=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,li={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"©","&#169;":"©","&reg;":"®","&#174;":"®","&hellip;":"…","&#8230;":"…","&#x2F;":"/","&#47;":"/"},ci=e=>li[e];let hi,ui={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:e=>e.replace(ai,ci)};const di={type:"3rdParty",init(e){!function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};ui={...ui,...e}}(e.options.react),function(e){hi=e}(e)}};(0,e.createContext)();const fi={en:{translations:JSON.parse('{"amtFeatures":{"enabled":"enabled","disabled":"disabled","messageTypes":{"success":"success","warning":"warning","error":"error"},"features":{"kvm":"KVM","sol":"SOL"},"messages":{"kvmNotEnabledAndNotPoweredUp":"Power on remote computer and check the KVM enable to connect to KVM","notPoweredUp":"Remote computer is not powered on.","kvmNotEnabled":"Check the KVM enable to connect to KVM","failedKvmFetch":"Unable to fetch KVM features","failedKvmFetchAndNotPoweredUp":"Unable to fetch KVM features and device is not powered on","failedKvmFetchAndFailedPowerFetch":"Unable to fetch KVM features and device power status","kvmNotEnabledAndFailedPowerFetch":"Check the KVM enable to connect to KVM and failed to fetch power status","failedPowerFetch":"Failed to fetch the power status","solNotEnabledAndNotPoweredUp":"Power on remote computer and check the SOL enable to connect to SOL","solNotEnabled":"Check the SOL enable to connect to SOL","failedSolFetch":"Unable to fetch SOL features","failedSolFetchAndNotPoweredUp":"Unable to fetch SOL features and device is not powered on","failedSolFetchAndFailedPowerFetch":"Unable to fetch SOL features and device power status","solNotEnabledAndFailedPowerFetch":"Check the SOL enable to connect to SOL and failed to fetch power status","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"Logout","profile":"Profile"},"pageNotFound":{"title":"404 - Page not found","message":"Oops, we weren\'t able to find the page you requested."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"Login","userName":"username","password":"password","signIn":"Sign In","cancel":"Cancel"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"devices":{"grid":{"Name":"Name","uuids":"UUID","connected":"Connected","deviceName":"Device name","deviceType":"Device type","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"Status","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"}},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"Initiator","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"dashboard":{"header":"AMT Device Management","deviceDetails":"Device details","count":"Count","totalDevices":"Total Devices","connectedDevices":"Connected","disconnectedDevices":"Disconnected"},"cira":{"new":"New","delete":"Delete","edit":"Edit","close":"Close","newCIRAConfig":"New CIRA Configuration","editCIRAConfig":"Edit CIRA Configuration","configName":"Config Name","addressFormat":"MPS Server Address Format","ipv4":"IPV4","ipv6":"IPV6","fqdn":"FQDN","mpsServerAddress":"MPS Server Address","port":"Port","userName":"User Name","password":"Password","commonName":"Cert. Hostname(CN)","mpsRootCetificate":"MPS Root Certificate","create":"Create","save":"Save","mpsRootCertFormat":"Mps root certificate format","autoLoad":"Auto load","manual":"Manual","load":"Load","mpsLoaded":"MPS root certificate successfully loaded","errors":{"commonNameValidation":"Cert. Hostname(CN) is required field and contains letters,numbers and ._- characters.","passwordValidation":"Password is required field should contains atleast one lowercase letter, one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","userNameValidation":"User name is required field and contains letters, numbers and special characters.","portValidation":"Port is required and should be a numeric value between 1024 and 49151","ipv4AddressValidation":"Please enter valid IPV4 Address.","ipv6AddressValidation":"Please enter valid IPV6 Address.","fqdnAddressValidation":"Please enter valid FQDN Address.","configNameValidation":"Config name is required field and contains letters, numbers and special characters.","loadMpsError":"Load the mps root certificate","mpsCertFetchError":"Failed to fetch the certificate from the server. Please try to enter the certificate manually by switching the Mps root certificate format option.","mpsServerMismatchError":"MPS server address does not match with base URL of the application. Please try to enter the certificate manually by switching the Mps root certificate format option."},"grid":{"configName":"Config Name","mpsServer":"MPS server","port":"Port","username":"Username","password":"Password","commonName":"Cert. Hostname(CN)","rootCert":"MPS root Certificate"}},"domain":{"delete":"Delete","new":"New","edit":"Edit","close":"Close","newDomain":"Create Domain","editDomain":"Edit domain details","grid":{"name":"Name","domainSuffix":"Domain Suffix","provisioningCert":"Provisioning Certificate","provisioningCertStorageFormat":"Provisioning Certificate Storage Format","provisioningCertPassword":"Provisioning Certificate Password"},"name":"Name","domainSuffix":"Domain Suffix","provisioningCertStorageFormat":"Provisioning Cert Storage Format","provisioningCert":"Provisioning Cert","provisioningCertPassword":"Provisioning Cert Password","create":"Create","file":"File","browse":"Browse","browseNew":"Browse new file","save":"Save","namePlaceHolder":"Enter domain name","domainSuffixPlaceHolder":"Enter Domain suffix","provisioningCertTextAreaPlaceHolder":"Enter provisioning Cert ","provisioningCertPasswordPlaceHolder":"Enter password","provisioningCertTextPlaceHolder":"Enter file path","text":"Text","certExists":"If you would like to add a new Provisioning certificate browse and select.","error":{"nameValidation":"Name is a required field and contains letters, numbers and special characters.","domainSuffixValidation":"Domain suffix is a required field","provisioningCertStorageFormatValidation":"Provisioning Cert Storage Format is a required field","provisioningCertValidation":"Provisioning cert is a required field","provisioningCertPasswordValidation":"Provisioning Cert Password is required field should contains atleast one lowercase letter,  one uppercase letter, one numeric digit,and one special character and password length should be in between 8 to 32.","invalidFileType":"Invalid provisioning certificate type"}},"network":{"new":"New","newNetwork":"New Network configuration","editNetwork":"Edit Network configuration","create":"Create","delete":"Delete","edit":"Edit","save":"Save","grid":{"name":"Name","dhcpEnabled":"DHCP Enabled"},"networkName":"Network Name","dhcpEnabled":"DHCP Enabled","errors":{"networkNameValidation":"Network name is a required field and contains letters, numbers and special characters."}}}')},te:{translations:JSON.parse('{"amtFeatures":{"enabled":"ఎనేబుల్","disabled":"వికలాంగ","messageTypes":{"success":"విజయం","warning":"హెచ్చరిక","error":"లోపం"},"features":{"kvm":"KVM","sol":"సోల్"},"messages":{"kvmNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు KVM ని ప్రారంభించండి","notPoweredUp":"రిమోట్ కంప్యూటర్ ఆన్ చేయబడదు.","kvmNotEnabled":"KVM ప్రారంభించబడలేదు","solNotEnabledAndNotPoweredUp":"రిమోట్ కంప్యూటర్‌లో శక్తినివ్వండి మరియు SOL ని ప్రారంభించండి","solNotEnabled":"SOL ప్రారంభించబడలేదు","failedToFetch":"Failed to fetch the {{translate.feature}} feature status","featureSuccess":"{{translate.feature}} has been {{translate.featureText}}","updateFailed":"Failed to update the {{translate.feature}} status!"}},"companyName":"Contoso","header":{"appName":"Lynx DAM WEB UI","logout":"లాగౌట్","profile":"ప్రొఫైల్"},"pageNotFound":{"title":"404 - పేజి దొరకలేదు","message":"అయ్యో, మీరు అభ్యర్థించిన పేజీని మేము కనుగొనలేకపోయాము."},"tabs":{"dashboard":"Dashboard","devices":"Devices"},"user":{"login":{"heading":"ప్రవేశించండి","userName":"యూజర్పేరు","password":"పాస్వర్డ్","signIn":"సైన్ ఇన్ చేయండి","cancel":"రద్దు చేయండి"}},"errorFormat":"Error: {{message}}","errorCode":{"noResponse":"Oops, there was no response from the server.","notLoggedIn":"You need to login to call the service.","notAuthorized":"Invalid username or password.","notFound":"Oops, we were not able to find the service.","redirection":"Oops, we got a redirection error.","retryFailure":"Oops, we got a temporary error from the service but were unable to recover. Try again later.","unknown":"An unknown error occurred. {{message}}"},"protected":{"permissionDenied":"Permission {{permission}} is denied."},"settingsFlyout":{"title":"System settings","version":"Version {{version}}","viewRelNotes":"View release notes","theme":"Theme","changeTheme":"Change the application color theme","switchTheme":"Switch to {{nextTheme}} theme","apply":"Apply","cancel":"Cancel","close":"Close","flowing":"Flowing","start":"Start","stop":"Stop","stopped":"Stopped","simulationData":"Simulation data","loading":"Loading","simulationDescription":"Start or stop simulation of devices. Stopping device simulation will minimize the cost of the solution; no simulated telemetry will be sent to your IoT Hub and alerts will not be generated for simulated devices.","toggleError":"Error updating simulation status","setLogoError":"Error updating logo","simulationLoadError":"Error loading simulation status"},"refreshBar":{"refreshing":"Refreshing","lastRefreshed":"Last refreshed"},"fileInput":{"upload":"Upload"},"applicationSettings":{"nameAndLogo":"Name and logo","nameLogoDescription":"Edit logo and name in the site header.","replaceLogo":"Replace logo image","logoDescription":"Recommended logo size: 24 x 24 px.\\nMaximum logo size: 300 KB.\\nSupported file formats:\\n\\t.SVG\\n\\t.PNG\\n\\t.JPEG\\n\\t.JPG","applicationName":"Application name","currentLogo":"Current logo","edit":"Edit","checkmark":"Checkmark","uploadError":"Unable to upload file, please check the file type/size and try again.","error":"Error"},"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"పేరు","uuids":"UUID లను","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"స్థితి","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},fr:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"Nom","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"statut","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')},es:{translations:JSON.parse('{"auditLog":{"header":{"heading":"Audit Log Records"},"grid":{"column":{"auditappid":"Role ID","auditappiddescription":"A unique ID for each AMT Role","eventId":"Event ID","eventIddescription":"ID of an event of the application","initiatortype":"InitiatorType","auditapp":"Role Name","auditappdescription":"The role group name for each AMT functional area","event":"Event","eventdescription":"ID of an event of the application","initiator":"ప్రారంబికని","initiatordescription":"User ID performing action","time":"Device Time(UTC)","timedescription":"Server time to indicate the event occurance","mclocationtype":"MCLocationType","mclocationtypedescription":"Management console interface","netaddress":"Network Address","netaddressdescription":"Network address details","exstr":"Event Details","exstrdescription":"Extended data length details"},"footer":{"exporttocsv":{"title":"Export to CSV"},"gotopage":{"title":"Go to page"},"pagination":{"text1":"Page","text2":"of"}}}},"devices":{"searchPlaceholder":"Search devices...","noneFound":"No devices found.","refresh":"Refresh","exportToCsv":"Export to CSV","exportDefaultFileName":"Devices","grid":{"connected":"Connected","Name":"nombre","uuids":"uuids","firmware":"Firmware","lastConnection":"Last connection","no":"No","offline":"Offline","simulated":"Simulated","status":"estado","telemetry":"Telemetry","yes":"Yes","resultSuccess":"Success","resultFailure":"Failed","resultMessage":"Message","executionResultsLink":"Execution Results","result":"Result","Percentage":"Percent Complete","Inprogress":"In Progress","ViewResults":"View Results"},"flyouts":{"details":{"title":"Device Details","noDevice":"Oops, we were not able to find the device.","close":"Close","connected":"Connected","notConnected":"Disconnected","simulated":"Simulated","notSimulated":"Physical","diagnostics":{"title":"Diagnostics","description":"Diagnostic information from device","keyHeader":"Property","valueHeader":"Value","status":"Status","lastMessage":"Last message","message":"Message","showMessage":"Click here to see raw message"},"methods":{"title":"Methods","description":"All methods available for device","noneExist":"No methods found for this device."},"properties":{"title":"Properties","description":"Selected properties on device","keyHeader":"Property","valueHeader":"Value","noneExist":"No properties found for this device.","copy":"Copy","copyAllProperties":"Copy a list of all properties for the device","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"},"tags":{"title":"Tags","description":"Tags applied to device","keyHeader":"Key","valueHeader":"Value","noneExist":"No tags found for this device."},"telemetry":{"title":"Telemetry"}},"delete":{"title":"Delete","header":"Delete device","description":"This action will delete the devices permanently from the platform.","confirmNo":"No, do not delete the selected physical devices.","confirmYes":"Yes, please delete the selected physical devices.","simulatedNotSupported":"Deleting simulated devices is not currently supported, this action will only be taken on the physical devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Delete","pending":"Deleting devices... ","applySuccess":"devices deleted successfully!","close":"Close"},"kvm":{"title":"KVM"},"jobs":{"title":"Jobs","noDevices":"Oops, we were not able to find any selected devices.","summaryHeader":"Summary","affected":"Affected devices","cancel":"Cancel","apply":"Apply","pending":"Submitting job...","applySuccess":"Job submitted successfully!","close":"Close","selectJob":"Select job","jobName":"Job Name","jobNameHint":"Enter job name","jobNameHelpMessage":"Only letters and numbers are allowed","viewStatus":"View job status","validation":{"required":"Is required"},"errorMsg":{"selectedType":"Must be of the selected type"},"schedule":"Schedule","scheduleHint":"Enter schedule as a cron expression","scheduleHelpMessage":"If schedule is empty, Immediate jobs are created.Use http://www.cronmaker.com/ for creating cron expressions","startTime":"Start Time","startTimeHint":"Enter start time","startTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","endTime":"End Time","endTimeHint":"Enter end time","endTimeHelpMessage":"Only yyyy-MM-ddTHH:mm:ss","jobType":"Job type","jobTypeHint":"Select job type","tags":{"radioLabel":"Tag","title":"Tags on selected devices","description":"Tags in common on selected devices","keyHeader":"Key","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common tags found for the selected devices.","add":"Add tag"},"methods":{"radioLabel":"Run method","title":"Run method","description":"All available methods for device or group of devices","methodName":"Method name","methodNameHint":"Select method","firmwareVersion":"Firmware Version","firmwareVersionHint":"1.0.1","firmwareUri":"Firmware URI","firmwareUriHint":"Enter firmware URI value","destinationPath":"Destination Folder","fileUpload":"Upload Files","selectFiles":"Select Files For Upload","destinationPathHint":"Enter a destination folder for files","filename":"Command","specifyFileName":"Specify command to execute on remote device","fileparams":"Command parameters","specifyFileParams":"Specify parameters for the command"},"properties":{"radioLabel":"Reconfigure","title":"Reconfigure","description":"Available properties and values to change","keyHeader":"Property","valueHeader":"Value","typeHeader":"Type","typeNumber":"Number","typeString":"Text","noneExist":"No common properties found for the selected devices.","syncing":"{{reportedPropertyValue}} (Syncing {{desiredPropertyValue}})"}},"new":{"contextMenuName":"New device","title":"New device","summaryHeader":"Provision summary","affected":"Devices to provision","cancel":"Cancel","apply":"Apply","pending":"Provisioning devices... ","applySuccess":"Devices provisioned successfully","simulatedRefreshMessage":"Simulated devices are created in the background on the server. Therefore, they may take a while to show up when the device list is refreshed.","close":"Close","validation":{"required":"Is required","greaterThanZero":"Must be greater than zero"},"count":{"label":"Number of devices"},"deviceType":{"label":"Device type","simulated":"Simulated","physical":"Physical"},"deviceId":{"label":"Device ID","hint":"Enter device ID ","sysGenerated":"System generated device IDs"},"deviceIdExample":{"label":"Device ID example","format":"{{deviceName}}-{#####}","deviceName":"{Device name}"},"deviceModel":{"label":"Device model","hint":"Select existing device type"},"authenticationType":{"label":"Authentication type","symmetric":"Symmetric key","x509":"X.509"},"authenticationKey":{"label":"Authentication key","generateKeys":"Auto generate keys","manualKeys":"Enter keys manually","hint":"Enter your key here","primaryKey":"Primary Key","primaryKeyConnection":"Connection string primary Key","secondaryKey":"Secondary Key","secondaryKeyConnection":"Connection string secondary Key","primaryThumbprint":"Primary thumbprint","secondaryThumbprint":"Secondary thumbprint"}},"SIMManagement":{"title":"SIM Management","provider":"Provider","summaryHeader":"Summary and instructions","here":"here","select":"Select...","header":{"telefonica":"As a Telefónica IoT customer you have the advantage of adding this feature to enrich automatically your Azure Remote Monitoring Solution with the connectivity data available in Telefónica IoT Connectivity Platform (Network Information, Data Consumption & Network Based Location)."},"description":{"telefonica":"This feature is in Preview. In order to sync your connectivity data into Azure Remote Monitoring Solution, please fill a request <1><0>url</0></1>, select the option “Azure Remote Monitoring” and include your contact data and we will automatically activate your account. \\n\\nIf you are not a Telefónica client yet and you want to enjoy this or other IoT Connectivity Cloud Ready services, you can contact us <1><0>url</0></1> and select the option “Connectivity”; we will be glad to help you."},"operator":{"telefonica":"Telefónica"}}}}}')}};zr.use(di).use(oi).init({resources:fi,ns:["translations"],defaultNS:"translations",debug:!1,fallbackLng:"en",interpolation:{escapeValue:!1,formatSeparator:","}}).catch((()=>console.info("error occured"))),zr.changeLanguage(navigator.language).catch((()=>console.info("error occured")));const pi=new URL(window.location.href),vi=new URLSearchParams(pi.search),gi=document.getElementById("sol");null!=gi&&(0,t.s)(gi).render(e.createElement(ir,{deviceId:vi.get("deviceId"),authToken:"authToken",mpsServer:vi.get("mpsServer")}))})(),__webpack_exports__})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,